%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.0
%%For: (U2) ()
%%Title: (91b06161356.eps)
%%CreationDate: 6/16/2010 1:56 PM
%%BoundingBox: 2 1 1198 1199
%%HiResBoundingBox: 2 1.83203 1198 1198.168
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([\721\756\742\754\745\771\745\755\750\745] 1)
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_Cropmarks: 0 0 1200 1200
%AI3_TemplateBox: 600 600 600 600
%AI3_TileBox: 313.8999 191.7197 885.0996 1009.3999
%AI3_DocumentPreview: Header
%AI5_ArtSize: 14400 14400
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -1703.5 3287.5 0.125 1169 678 18 1 0 72 84 0 0
%AI5_OpenViewLayers: 73
%%PageOrigin:-6600.5 -6599.5
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\317\345\360\345\365\356\344") (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (\310\355\361\362\360\363\354\345\355\362\340\360\350\351 Adobe \357\356 \360\340\341\356\362\345 \361 \361\350\354\342\356\353\340\354\350) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\322\360\340\361\361\350\360\356\342\352\340) (TracingSuite.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Trail  ver4.2 for Win AICS3) (FILTERiT4 Live Trail ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Tiling  ver4.2 for Win AICS3) (FILTERiT4 Live Tiling ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 DropShadow  ver4.2 for Win AICS3) (FILTERiT4 Live Shadow ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Reflections  ver4.2 for Win AICS3) (FILTERiT4 Live Reflections ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Neon  ver4.2 for Win AICS3) (FILTERiT4 Live Neon ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Generation  ver4.2 for Win AICS3) (FILTERiT4 Live Generation ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Galaxy  ver4.2 for Win AICS3) (FILTERiT4 Live Galaxy ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Frame  ver4.2 for Win AICS3) (FILTERiT4 Live Frame ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Explosion  ver4.2 for Win AICS3) (FILTERiT4 Live Explosion ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Emboss  ver4.2 for Win AICS3) (FILTERiT4 Live Emboss ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Cutout  ver4.2 for Win AICS3) (FILTERiT4 Live Cutout ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Circle  ver4.2 for Win AICS3) (FILTERiT4 Live Circle ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Border  ver4.2 for Win AICS3) (FILTERiT4 Live Border ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\312\340\353\353\350\343\360\340\364\350\367\345\361\352\340\377 \352\350\361\362\374") (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\321\356\361\362\340\342\355\373\345 \364\350\343\363\360\373 Adobe) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe Envelope) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\373\361\362\360\340\377 \347\340\353\350\342\352\340") (Live Paint.aip)
%AI5_End_NonPrinting--
6 Bn
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 6 Bd
[
<
3E3E3D3D3D3C3D3D3C3C3C3B3B3B3A3A3B3A3A393939383838373738363637353535343434323232
3131313030302F2F302E2F2E2D2E2E2C2C2C2C2B2B2B2A2A2A292929282828272727252525242424
232323232222222021211F20201E1E1E1C1C1C1C1B1B1B191A1A1819191717181817161715161616
15151513131312121212111111101010100F0F0F0F0E0E0E0C0D0D0D0B0C0C0C0A0A0B090A090908
0808080606060605040505040304040403030303010202010200000101
>
<
706F6F6E6D6D6C6C6B6A6A696868676766656565656362636161615F605E5D5E5C5C5B5959585957
5656555454535352515150504F4E4E4D4D4C4C4B4A4A49494746474546444344424242424040403E
3F3E3C3D3C3C3A3B3A3839373837373536343232313130302F2F2E2D2D2D2D2B2B2A2B292A292728
27272526252524242222222220211F1E1E1D1D1C1C1B1B1A1B191917181717151616151514141213
111210110F0F0D0E0E0D0D0C0C0A0B0B0A0A0909090808080607070606
>
<
CAC9C7C6C5C4C3C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFADACABAAA9A8A6A6A5A4A3A2A1A0
9F9E9D9C9B9A98979695949291908F8E8E8D8C8B8A898887868684848281817F807E7D7C7B7A7978
7776757474737271706F6E6D6B6A6A6A6867666463626161605F5E5D5C5B5A5A5958575654545453
5251504F4E4E4D4C4B4949494846464545444342403F3F3F3D3C3B3C3A3938393736353534333232
312F2E2E2D2C2B2B2929292827282625252423232122201F201E1E1D1D
>
<
07060606050505050504040404040303030303020202020202010101010101010000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000
>
<
C7C7C8C8C8C9C9C9CACACACBCBCBCCCCCCCDCDCECECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D3D4D4D4
D5D5D5D6D6D6D7D7D7D8D8D8D9D9D9DADADADADBDBDBDCDCDCDDDDDDDEDEDEDFDFDFE0E0E0E1E1E1
E2E2E2E2E3E3E3E4E4E4E5E5E5E6E6E6E7E7E7E7E8E8E8E9E9E9EAEAEAEBEBEBEBECECECEDEDEDED
EEEEEEEFEFEFF0F0F0F0F1F1F1F2F2F2F2F3F3F3F3F4F4F4F5F5F5F5F6F6F6F6F7F7F7F8F8F8F8F9
F9F9F9FAFAFAFAFBFBFBFBFCFCFCFCFCFDFDFDFDFEFEFEFEFEFFFFFFFF
>
<
93949495969697979899999A9B9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A4A5A6A6A7A7A8A9A9AAAAAB
ACACADAEAEAFAFB0B1B1B2B2B3B4B4B5B5B6B6B7B8B8B9B9BABBBBBCBCBDBEBEBFBFC0C0C1C2C2C3
C3C4C5C5C6C6C7C7C8C9C9CACACBCBCCCCCDCECECFCFD0D0D1D1D2D3D3D4D4D5D5D6D6D7D7D8D9D9
DADADBDBDCDCDDDDDEDEDFDFE0E0E1E2E2E3E3E4E4E5E5E6E6E7E7E8E8E9E9EAEAEAEBEBECECEDED
EEEEEFEFF0F0F1F1F1F2F2F3F3F4F4F4F5F5F6F6F6F7F7F7F8F8F8F9F9
>
<
464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566666768696A6B6C
6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788898A8B8B8C8D8E8F909192
93949596969798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAEAFB0B1B2B3B4B4B5
B6B7B8B9BABABBBCBDBEBFBFC0C1C2C3C3C4C5C6C7C8C8C9CACBCCCCCDCECFCFD0D1D2D2D3D4D5D5
D6D7D8D8D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E4E5E6E6E7E7E8E8
>
4 %_Br
<
7F7F7E7E7D7C7B7B7A7A797978787878777776767574747575757575747373737272727271717171
717070706F6F6F6F6F6F6F6F6E6E6D6D6D6D6D6C6B6B6B6B6A6A6A69686868676767676665656464
6464636362626161616160605F5E5E5E5D5D5C5C5B5A5A5959585757555555545453535352515050
4F4E4E4D4C4B4B4A494948474645454444434241403F3E3E
>
<
D2D0CFCDCFCECDCBCBC9C8C7C8C7C5C4C3C2C1C0C1C0BFBDBCBBBAB9B9B9B8B7B6B5B4B3B4B3B2B0
B0AFAEADAEADACACABAAA9A8A9A8A7A6A5A4A3A2A3A2A1A09F9F9E9D9E9D9C9C9B9A999899989796
959594939493929191908F8E8F8E8D8D8C8B8A8A8A8A89888786868586858483828281818181807F
7E7D7C7C7C7B7B7A79787777777776757473737272727170
>
<
EAEAEAECECEDEDEEEEF0F2F2F2F1F2F1F3F5F5F6F5F7F6F7F5F6F7F7F7F6F8F7F8F6F6F7F5F5F4F5
F4F5F5F7F7F6F6F5F5F3F3F3F0F1EFF0EFF0EEEEEEEDEDECECEBEBE9E9E9E8E8E6E7E6E7E7E5E6E4
E5E3E4E2E2E3E1E2E0E0DFE0DEDEDFDEDEDDDDDBDCDCDBDCDADAD8D9D7D7D8D6D7D6D6D5D5D3D4D4
D3D3D2D2D1D1D0D0D0CFCFCECECDCDCECCCDCCCCCACBCACA
>
<
C9C7C5C3C2C1BFBDBBB9B7B6B5B3B1AFADACAAA8A7A5A3A19F9D9C9A99979593918F8D8C8B898785
8382817F7F7D7C7A7877757372716F6D6B696866656361605E5D5B595957555452514F4E4D4B4A48
4745444241403F3D3C3B39383736353332312F2E2D2C2B2A282725232322211F1E1D1C1B1B1A1918
1716151414131211100F0E0E0D0C0C0B0A0A090908080707
>
<
38393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F
606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081828384858687
88898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
>
<
16171819191A1B1C1D1E1F2020212223242526272728292A2B2C2D2E2E2F30313233343535363738
393A3B3C3C3D3E3F40414243434445464748494A4A4B4C4D4E4F5051515253545556575858595A5B
5C5D5E5F5F60616263646566666768696A6B6C6D6D6E6F70717273747475767778797A7B7B7C7D7E
7F8081828283848586878889898A8B8C8D8E8F9090919293
>
<
0707080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F1010111112121213131414151516161617171818
19191A1A1A1B1B1C1C1D1D1D1E1E1F1F20202121212222232324242525252626272728282829292A
2A2B2B2C2C2C2D2D2E2E2F2F30303031313232333333343435353636373737383839393A3A3B3B3B
3C3C3D3D3E3E3F3F3F404041414242424343444445454646
>
4 %_Br
0.498039
0.823529
0.917647
0.788235
0.219608
0.086275
0.027451
4 %_Br
<
000000010204050607090A0B0C0E0F11121314161718191A1C1D1E1F21222324252728292A2C2D2E
303132333436373738393A3B3C3D3E3F404041424344454546474848494A4A4B4C4C4D4E4F4F5050
5152525354545556565757585859595A5B5C5C5C5D5D5E5E5F606061616162626263636464656565
6566666767686969696A6A6A6A6B6B6C6C6C6D6D6D6D6D6E6E6F6F6F707070707070707171717171
72727273737474747474757575757577777776777777777778797979797A7A7B7B7C7C7E7E7E7F7F
>
<
3C3D3E3F40404141424344454647484748494A4B4C4D4E4F504F51525354545556575858595A5B5C
5D5E5F6061606162636465666768686869696A6B6C6C6D6E6F6E6F70707172737475767576767778
79797A7B7C7B7C7D7E7E7F80818282828384848586878788898889898A8B8C8C8D8E8F8E8F909091
9293949495949596979899999A9B9C9B9C9D9E9E9FA0A1A2A3A2A3A4A5A6A7A8A9AAABAAABACADAD
AEAFB0B1B2B1B2B3B4B5B6B7B8B9BAB9BABBBDBDBEC0C1C2C3C2C3C4C6C7C8C9CBCCCDCCCDCFD0D2
>
<
CFD0D1D2D2D3D4D4D4D5D5D6D6D7D7D7D7D8D8D8D9DADADADBDBDBDBDCDCDCDCDDDEDEDEDFDFE0E1
E2E2E2E3E3E3E2E3E3E3E5E5E5E5E6E7E7E7E8E8E8E9E9E8E8E9E9E9E9EAEAEAEBEBECECEDEEEEEE
F0F0F0F1F1F1F0F2F1F1F1F2F2F2F3F3F4F4F5F5F5F5F6F7F7F7F8F9F9FAFAFAFAFBFBFBFBFCFCFC
FDFDFDFDFFFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFFFEFDFCFAF9F7F8F7F6F5F5F4F3F2F0EEEDEDEDECEAEAEA
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
010101010202020203030404040505060607070808090A0A0B0B0C0D0E0E0F101111121314141516
1718191A1B1B1C1E1F2021222324262628292B2C2D2E3031323334353738393B3C3E3F4041434446
47494A4C4D4E4F5152545557595A5C5D5E6062636567696A6C6D6E7072747677797B7D7D7F808283
8486888A8C8D8E90929496989A9C9E9EA0A2A4A6A8AAACAEAFB0B2B4B6B8B9BBBDBFC1C2C3C5C7C9
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
>
<
C9C8C7C6C5C5C4C3C2C1C0BFBEBDBCBCBBBAB9B8B7B6B5B4B3B3B2B1B0AFAEADACABAAAAA9A8A7A6
A5A4A3A2A1A1A09F9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A898887868685848382
81807F7E7D7D7C7B7A79787776757474737271706F6E6D6C6B6B6A69686766656463626261605F5E
5D5C5B5A5959585756555453525150504F4E4D4C4B4A49484747464544434241403F3E3E3D3C3B3A
39383736353534333231302F2E2D2C2C2B2A29282726252423232221201F1E1D1C1B1A1A19181716
>
<
3D3D3C3C3C3C3B3B3B3B3A3A3A393939393838383837373736363636353535353434343433333332
323232313131313030302F2F2F2F2E2E2E2E2D2D2D2C2C2C2C2B2B2B2B2A2A2A2929292928282828
27272726262626252525252424242323232322222222212121212020201F1F1F1F1E1E1E1E1D1D1D
1C1C1C1C1B1B1B1B1A1A1A1919191918181818171717161616161515151514141413131313121212
12111111101010100F0F0F0F0E0E0E0E0D0D0D0C0C0C0C0B0B0B0B0A0A0A09090909080808080707
>
4 %_Br
0
<
00000000000002020103030303040404040505050606060607070708080808090909090A0A090B0B
0A0A0C0C0B0D0D0C0C0E0E0D0D0F0F0E101010101111111312121214131313151514161616151717
1718181818191919191B1A1A1C1C1B1B1D1C1C1E1E1D1D1F1E1E20201F1F21202020222121232322
222424242525252526262626272727292928282A29292B2A2A2A2C2B2B2B2D2D2C2E2E2E2E2F2F2F
30303030313131313333333434343435353537373737383838383939393B3A3A3A3C3C
>
<
00000103040606080A0A0C0D0F10111314151618191A1C1D1E1F21212324262728292B2B2D2E2F30
323434363738393A3C3C3E3F41414344454648494A4C4D4E4F51525355565758595B5B5C5E5F6061
626364656767686A6B6C6D6E6F7072737475767778797A7B7C7E7E80818282838486868788898A8C
8D8E8F90909293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2
B3B4B4B5B6B6B7B8B9BABBBCBDBEBFC0C1C2C2C3C4C5C6C7C7C8C9CACACBCCCDCECECF
>
0
1
<
FFFFFEFEFEFEFDFDFDFCFCFCFCFBFBFBFBFAFAFAF9F9F9F9F8F8F8F7F7F7F7F6F6F6F6F5F5F5F4F4
F4F4F3F3F3F2F2F2F2F1F1F1F1F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEBEAEAEAEAE9E9
E9E8E8E8E8E7E7E7E7E6E6E6E5E5E5E5E4E4E4E3E3E3E3E2E2E2E1E1E1E1E0E0E0E0DFDFDFDEDEDE
DEDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D6D5D5D5D4D4D4D4D3D3D3
D2D2D2D2D1D1D1D1D0D0D0CFCFCFCFCECECECDCDCDCDCCCCCCCCCBCBCBCACACACAC9C9
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D
>
4 %_Br
[
0.003922 0.023529 0.113725 0 1 0.976471 0.909804 2 50 100 %_BS
%_0.003922 0.023529 0.113725 0 1 0.976471 0.909804 2 50 100 Bs
0.243137 0.439216 0.792157 0.027451 0.780392 0.576471 0.27451 2 45 69.0909 %_BS
%_0.243137 0.439216 0.792157 0.027451 0.780392 0.576471 0.27451 2 45 69.0909 Bs
0.498039 0.823529 0.917647 0.788235 0.219608 0.086275 0.027451 2 50 48.4848 %_BS
%_0.498039 0.823529 0.917647 0.788235 0.219608 0.086275 0.027451 2 50 48.4848 Bs
0.498039 0.823529 0.917647 0.788235 0.219608 0.086275 0.027451 2 86.3636 36.2662 %_BS
%_0.498039 0.823529 0.917647 0.788235 0.219608 0.086275 0.027451 2 86.3636 36.2637 Bs
0 0.235294 0.811765 0 1 0.788235 0.239216 2 50 36.2612 %_BS
%_0 0.235294 0.811765 0 1 0.788235 0.239216 2 50 36.2637 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2)
(Unnamed gradient 2) 0 7 Bd
[
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000010102020203020203030404040505050506060707080809080809090A
0A0B0B0C
>
<
ABAAA9A8A7A5A4A3A2A1A09E9D9C9B9A9998969594939291908F8E8D8C8B89888785848281807F7D
7C7B7A787776757372716F6E6D6B6A696766656362615E5D5B5A5857555452514F4E4D4B49484745
444341403E3C3B3937353432302F2D2C2A2928262422211F1D1C1A1817151312100E0C0B09070604
02000000
>
<
F5F5F5F5F5F5F5F5F5F4F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F1F1F1F1F1F1F0F0F0EFEFEEEEED
EDEDEDEDEDEDECECECECECECECECECECECECECEBEBEBEAEAEAEBEAEAEAEAE9E9E9E9E9E9E9E9E9E9
E8E8E8E8E7E7E7E6E6E6E6E6E6E6E5E5E5E4E4E4E5E5E4E4E4E4E3E3E3E3E3E3E3E3E2E2E1E1E0DF
DFDEDDDC
>
0
<
F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFA
FAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFF
FFFFFFFF
>
<
7172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798
999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1
C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9
EAEBECED
>
<
00000101010102020202030303030404040405050505060606060707070708080808090909090A0A
0A0A0B0B0B0B0C0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F101010101111111112121212131313131414
141415151515161616161717171718181818191919191A1A1A1A1B1B1B1B1C1C1C1C1D1D1D1D1E1E
1E1E1F1F
>
4 %_Br
<
1616161616151515141414141313131212111010100F0F0E0E0E0E0D0D0C0C0C0B0B0B0B0A0A0A09
09090808070707060606050505050505050505040404030303020201010000000100000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000
>
<
0000000000000000000000000000000000000001030506080A0B0D0F1112141617191B1C1E202123
242628292A2C2E2F3032343637393A3C3D3F404243454648494B4C4E4F505253545657595A5B5D5E
5F616263646667686A6B6C6E6F717273757677797A7B7C7E7F80818284858687898A8B8D8E8F9091
929394959698999A9B9C9D9EA0A1A2A3A4A5A7A8A9AAAB
>
<
9596969697989899999A9B9C9D9FA0A2A3A4A6A7A8A9A9AAABACADAEAEAFB0B0B1B2B3B3B3B4B4B5
B5B6B7B7B8B9B9BABBBCBCBDBEBFC0C1C2C3C3C4C5C6C7C8C7C8C9CACACBCCCDCECFD0D1D2D2D3D2
D3D4D5D5D6D7D8D8D9DADADBDCDBDCDDDEDEDFE0E0E1E2E2E3E4E5E6E7E7E8E8E9EAEAEBEBECECED
EDEDEDEEEEEFEFF0F0F1F1F1F2F2F3F3F3F3F4F4F5F5F5
>
0
<
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271
>
<
84838281807F7E7D7D7C7B7A79787776757473727170706F6E6D6C6B6A6968676665646363626160
5F5E5D5C5B5A59585756565554535251504F4E4D4C4B4A49494847464544434241403F3E3D3C3B3B
3A393837363534333231302F2E2E2D2C2B2A29282726252423222121201F1E1D1C1B1A1918171615
1414131211100F0E0D0C0B0A0908070706050403020100
>
4 %_Br
<
2F302F2F2F2E2F2F2E2E2F2E2E2F2E2E2E2D2E2E2D2D2C2D2D2C2D2D2C2D2D2C2C2C2A2A2A29292A
2829292828282727282727272626262525252424242323222223222222212222212121201F1F1E1E
1E1D1D1E1D1D1E1C1D1D1C1C1C1B1B1C1A1B1B1A1A1B1A1A191A1A191A1A19191918181817181817
17171616
>
<
868584838281807E7D7C7A7A78777675737271706F6D6C6B6A69676665636261605E5D5C5A595856
555452514F4E4D4B4A494746454342413F3E3D3B3A393737353332312F2E2D2B2A29272624222120
1E1D1B1A191715141311100E0D0C0A09080604030100000000000000000000000000000000000000
00000000
>
<
FFFFFFFFFFFEFDFCFBFBFAF9F9F8F7F7F6F5F4F4F3F2F1F0EFEFEEEDECECEBEAE9E8E7E6E5E4E3E2
E1E0DFDEDDDCDBDAD9D8D7D7D6D5D4D3D3D2D1D0D0CFCDCCCBCAC9C8C7C7C6C5C4C3C3C2C1C0BFBE
BDBCBCBBBAB9B9B8B7B6B5B4B4B3B2B1B0AFAEADACABAAA8A7A5A4A3A2A19F9E9D9C9B9A99999897
97969695
>
<
06060505050505050404040403030303030303030202020201010101010101010000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000
>
<
CFCFD0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D5D5D5D6D6D7D7D7D8D8D8D9D9D9DADADADBDBDBDCDCDC
DDDDDDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E4E4E5E5E5E6E6E6E7E7E7E8E8E8E9E9E9EAEA
EAEBEBEBECECECEDEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F8
F8F8F9F9
>
<
8485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAAB
ACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3
D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFB
FCFDFEFF
>
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F4041424344454748494A4B4C4D4E4F505152535455565758
595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80
81828384
>
4 %_Br
<
0E0E0F0F0F0E0F100F0F101010111111101211111312121213131313141414151515141616151716
161617171717181818191918181A19191A1A1A1A1B1B1B1B1D1D1D1E1E1E1D1F1E1E201F1F1F2020
20202121212222222223232324242424252525242625252726262627272728282828292929292A2A
2A2B2B2B2B2C2C2C2D2C2C2C2D2C2C2C2D2D2C2D2D2D2D2E2E2D2E2E2E2E2E2E2E2E2F2E2E2F2F2F
2F302F
>
<
000000000000000000000000000000000000000000000101020305050607090A0A0B0D0E0E0F1012
121314161618191A1A1B1C1E1E1F2022222224252626282A2B2B2C2D2F2F31323333343637373839
3B3B3C3D3E3F3F414243434545474748494B4B4C4D4F4F4F5152525355565757595A5B5B5D5E5F5F
616263636565676768696A6A6B6D6E6E6F707273737476777778797A7A7B7C7D7D7F808181828384
848586
>
<
6D6E6E6F7071727374757778797A7B7C7E8082838485868788898A8B8C8D8E8E9090919293949595
969798999A9B9C9C9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9AAABACADAEAFB0B1B2B4B4B5B6B8B9B9
BABBBCBDBEBEBFC0C1C2C3C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D4D5D5D6D8D8D9DADCDCDDDFDF
E1E2E3E4E5E6E7E7E8E9EAEAEBECEDEDEEEFF0F1F2F3F3F4F5F6F7F7F8F9FAFAFBFBFCFDFDFEFFFF
FFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00010101010101010101010102020202020202030303030303030304040404040404050505050505
050606
>
<
FCFCFBFBFBFBFAFAFAFAF9F9F9F8F8F8F8F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1
F1F1F0F0F0F0EFEFEFEEEEEEEEEDEDEDECECECECEBEBEBEBEAEAEAE9E9E9E9E8E8E8E7E7E7E7E6E6
E6E6E5E5E5E4E4E4E4E3E3E3E2E2E2E2E1E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDDDCDCDCDCDBDB
DBDADADADAD9D9D9D8D8D8D8D7D7D7D7D6D6D6D5D5D5D5D4D4D4D3D3D3D3D2D2D2D2D1D1D1D0D0D0
D0CFCF
>
<
FFFEFDFDFCFBFAFAF9F8F7F7F6F5F4F4F3F2F1F1F0EFEEEEEDECEBEBEAE9E8E7E7E6E5E4E4E3E2E1
E1E0DFDEDEDDDCDBDBDAD9D8D8D7D6D5D4D4D3D2D1D1D0CFCECECDCCCBCBCAC9C8C8C7C6C5C5C4C3
C2C2C1C0BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAFAEADACABABAAA9A8A8A7A6A5A5
A4A3A2A2A1A09F9F9E9D9C9C9B9A999998979695959493929291908F8F8E8D8C8C8B8A8989888786
868584
>
<
AAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483
8281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B
5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433
3231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B
0A0908
>
4 %_Br
<
22222221212122222221212121212020202020201F1F1F1F1F1E1F1F1F1F1F1E1E1E1E1E1D1D1D1D
1D1E1C1C1D1D1D1C1C1C1C1C1D1C1C1C1C1C1B1B1B1C1B1C1B1B1B1B1B1A1A1A1A1A1A1919191919
18181818181917171717171616161616161515151615141414151515141414141413131314141413
13131313121212121213121112121211111111111110101011100F0F0F100F100F0F0F0F0F0E0F0F
0F0F0F0E0E0E
>
<
75747473717170706E6D6D6C6B6B6A68686767656464636161615F5F5E5E5C5B5B5A585857565654
54535252514F4F4E4D4D4B4C4A494947464645444442424140403E3D3D3C3B3B393A383737363434
33323230302E2D2E2C2A2A2927282626252424222121201F1F1D1D1C1B1B1A181817161614141212
12100E0E0D0C0C0A0A09080806050504020301010000000000000000000000000000000000000000
000000000000
>
<
FBFBFBFAFAF9F9F9F8F7F7F6F6F6F5F4F4F3F2F2F0F0EFEFEEEDEDECEBEBEAE9E9E8E7E7E6E5E4E3
E2E1E1E0DFDEDEDDDCDBDAD9D8D7D6D5D5D3D2D2D1D0CFCECDCCCBCBCAC9C8C7C7C6C5C4C3C2C2C1
C0BFBDBDBBBAB9B8B7B6B5B4B3B2B2B1B0AFAEAEADACABABAAA9A8A7A6A4A4A3A2A1A09F9E9D9D9C
9B9A999998979696959493929191908F8E8D8C8B8A898886848381807F7D7C7B7979777675747372
71706F6F6E6D
>
<
01010101010101010101010101010100000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000
>
<
DEDEDEDFDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E1E2E2E2E2E2E3E3E3E3E3E3E4E4E4E4E4E5E5E5E5
E5E5E6E6E6E6E6E7E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBEBECECECECEC
EDEDEDEDEDEDEEEEEEEEEEEFEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F1F2F2F2F2F2F3F3F3F3F3F3F4
F4F4F4F4F5F5F5F5F5F5F6F6F6F6F6F7F7F7F7F7F7F8F8F8F8F8F9F9F9F9F9F9FAFAFAFAFAFBFBFB
FBFBFBFCFCFC
>
<
9697979899999A9A9B9C9C9D9E9E9FA0A0A1A1A2A3A3A4A5A5A6A7A7A8A8A9AAAAABACACADAEAEAF
AFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8
C9CACACBCBCCCDCDCECFCFD0D1D1D2D2D3D4D4D5D6D6D7D8D8D9D9DADBDBDCDDDDDEDFDFE0E0E1E2
E2E3E4E4E5E6E6E7E7E8E9E9EAEBEBECEDEDEEEEEFF0F0F1F2F2F3F4F4F5F5F6F7F7F8F9F9FAFBFB
FCFCFDFEFEFF
>
<
05060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C
2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354
55565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C
7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4
A5A6A7A8A9AA
>
4 %_Br
<
070708080909080A09090A0A0B0A0A0C0B0B0C0C0D0D0C0E0D0D0E0E0F0F0E101012121213131214
13141414151514161617171618171718181919181A191A1A1A1B1B1B1C1B1D1C1C1D1D1D1F1F2020
2021212021212222
>
<
07090A0B0C0E0F101214151617191B1A1B1D1E20202224252628292A2B2D2F303133343637383A3B
3C3D3F403F414243454647494A4B4D4E4F50515354555658595A5C5D5E6061626463656667696A6B
6C6D6F7071737475
>
<
BABABBBCBDBEBFC0C0C1C2C2C3C4C5C6C7C7C8C9C9CACBCCCCCDCECFD0D0D1D3D4D5D6D6D7D8D9DA
DADBDCDDDEDFDFE0E1E2E3E3E4E5E6E7E7E8E8E9EAEBECECEDEEEEEFF0F0F1F1F2F3F3F4F5F6F7F7
F8F8F9F9FAFAFBFB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000101
0101010101010101
>
<
FFFFFEFEFDFDFDFCFCFCFBFBFAFAFAF9F9F9F8F8F7F7F7F6F6F6F5F5F4F4F4F3F3F2F2F2F1F1F1F0
F0EFEFEFEEEEEEEDEDECECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E4E4E4E3E3E3E2E2E1E1
E1E0E0E0DFDFDEDE
>
<
EAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4
C3C2C1C0C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A4A3A2A1A09F9E
9D9C9B9A99989796
>
<
5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736
35343332302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D
0C0B0A0908070605
>
4 %_Br
[
0.047059 0 0.862745 0 1 0.929412 0.121569 2 50 100 %_BS
%_0.047059 0 0.862745 0 1 0.929412 0.121569 2 50 100 Bs
0 0.670588 0.960784 0 0.972549 0.443137 0 2 50 91 %_BS
%_0 0.670588 0.960784 0 0.972549 0.443137 0 2 50 91 Bs
0.086275 0 0.584314 0 0.976471 1 0.517647 2 50 82 %_BS
%_0.086275 0 0.584314 0 0.976471 1 0.517647 2 50 82 Bs
0.184314 0.52549 1 0.023529 0.811765 0.517647 0.031373 2 50 58 %_BS
%_0.184314 0.52549 1 0.023529 0.811765 0.517647 0.031373 2 50 58 Bs
0.054902 0 0.427451 0 0.988235 1 0.666667 2 50 48 %_BS
%_0.054902 0 0.427451 0 0.988235 1 0.666667 2 50 48 Bs
0.133333 0.458824 0.984314 0.003922 0.870588 0.588235 0.019608 2 50 13 %_BS
%_0.133333 0.458824 0.984314 0.003922 0.870588 0.588235 0.019608 2 50 13 Bs
0.027451 0.027451 0.729412 0 1 0.917647 0.364706 2 50 0 %_BS
%_0.027451 0.027451 0.729412 0 1 0.917647 0.364706 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 22)
(Unnamed gradient 22) 0 6 Bd
[
<
292A2B2B2C2C2D2E2E2F2F30303132323333343535363637373838393A3B3B3C3C3D3D3D3E3E3E3E
3F3F3F40404041414142
>
1
1
<
1415161718191A1C1D1E1F20222324252728292A2B2C2E2F303334353738393B3C3E3F4042434546
47494A4B4D4E50515254
>
<
C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A6A5A4A3A2A1A09F9E9D9C9B9A9998
97969594939291908F8E
>
<
00000000000000000000000000000000000000000000000000010101010101010101010101010101
01010101010101010101
>
<
01010101010101010101010101010101010101010101010101000000000000000000000000000000
00000000000000000000
>
4 %_Br
<
0C0D0F1011121314151718191A1B1D1E1F2021222324252627282929
>
<
FCFCFCFCFDFDFDFDFDFDFDFDFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFF
>
1
<
02020303040405050606070708090A0A0B0C0C0D0E0F101111121314
>
<
DCDBDAD9D8D7D6D5D4D3D2D1D0CFCDCCCBCAC9C8C7C6C5C4C3C2C1C0
>
0
<
02020202020202020202020202020101010101010101010101010101
>
4 %_Br
<
00000000000000000000000103040607090A0C
>
<
F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFBFCFCFC
>
1
<
00000000000000000001010101010102020202
>
<
EFEEEDECEBEAE9E8E7E6E4E3E2E1E0DFDEDDDC
>
0
<
03030303030303030303020202020202020202
>
4 %_Br
0
<
F2F2F3F4F4F5F6F6F7
>
<
F0F3F4F7F9FEFFFFFF
>
0
<
F8F7F6F5F4F2F1F0EF
>
<
030302020201010000
>
<
080707060605040403
>
4 %_Br
0
<
F0F0F1F1F1F2F2
>
<
E7E9E9EBEDEEF0
>
0
<
FFFEFDFCFAF9F8
>
<
06060505040403
>
<
0C0B0B0A090908
>
4 %_Br
[
0.258824 1 1 0.329412 0.556863 0.003922 0 2 50 100 %_BS
%_0.258824 1 1 0.329412 0.556863 0.003922 0 2 50 100 Bs
0.160784 1 1 0.078431 0.752941 0 0.003922 2 50 89.011 %_BS
%_0.160784 1 1 0.078431 0.752941 0 0.003922 2 50 89.011 Bs
0.047059 0.988235 1 0.007843 0.862745 0 0.007843 2 50 75.8242 %_BS
%_0.047059 0.988235 1 0.007843 0.862745 0 0.007843 2 50 75.8242 Bs
0 0.968627 1 0 0.937255 0 0.011765 2 50 53.2967 %_BS
%_0 0.968627 1 0 0.937255 0 0.011765 2 50 53.2967 Bs
0 0.94902 0.941176 0 0.972549 0.011765 0.031373 2 50 29.1209 %_BS
%_0 0.94902 0.941176 0 0.972549 0.011765 0.031373 2 50 29.1209 Bs
0 0.941176 0.905882 0 1 0.023529 0.047059 2 50 0 %_BS
%_0 0.941176 0.905882 0 1 0.023529 0.047059 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 249)
(Unnamed gradient 249) 1 4 Bd
[
<
0000000002020303040505060606080809090A0A
>
<
0000000101020103030403040405040605060507
>
<
0000010204050607090A0D0E0F10121314151718
>
0
<
FFFFFEFEFDFDFCFCFCFBFBFAFAFAF9F9F8F8F7F7
>
<
FFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5
>
<
FFFEFDFCFBFAF9F8F7F6F4F3F2F1F0EFEEEDECEB
>
4 %_Br
<
0A0A0B0B0C0C0C0E0E0E0F0F111111121214141415151517171818
>
<
07070707080809090A0A0B0B0C0C0C0D0D0E0D0F0E101010101111
>
<
18191A1B1C1E1E202122232526282B2C2D2E2F3031323434363738
>
0
<
F7F7F6F6F5F5F5F4F4F4F3F3F2F2F2F1F1F0F0F0EFEFEFEEEEEDED
>
<
F5F5F4F4F3F3F2F2F1F1F0F0EFEFEFEEEEEDEDECECEBEBEAEAE9E9
>
<
EBEAE9E8E7E6E5E4E3E2E1E0DFDEDCDBDAD9D8D7D6D5D4D3D2D1D0
>
4 %_Br
<
18181A1A1B1B1B1C1C1D1D1D1F1E20202021212222222323252524262627272729282A292A2B2B2C
2C2C2D2D2E2E2E30303131313333343435363637373738383939393B3B3C3C3C3D3D3E3E3E3F3F41
404142424343
>
<
111112111212131314131314131514161516161517171717181819181A19191A191B1A1C1B1C1C1B
1D1C1D1D1E1E1F1E1E1F1F2120222122222123222423242425252726262626282729282929282A29
2A2A2B2B2C2C
>
<
38393A3C3C3E3F40414344454747494A4B4C4D4F4F51525354555658585A5C5C5E5E606062626465
6668696B6C6D6E7071727374767778797A7C7D7E7F808182838485868788898A8B8C8E8F90919293
94959698999A
>
0
<
EDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDD
DDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CFCFCFCECECD
CDCDCCCCCBCB
>
<
E9E9E8E8E7E7E6E6E5E5E5E4E4E3E3E2E2E1E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D8
D7D7D6D6D5D5D4D4D4D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCBCBCBCACAC9C9C8C8C7C7C7C6C6
C5C5C4C4C3C3
>
<
D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9
A8A7A6A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483828180
7F7E7D7C7B7A
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
0.039216 0.027451 0.094118 0 0.968627 0.960784 0.921569 2 50 27 %_BS
%_0.039216 0.027451 0.094118 0 0.968627 0.960784 0.921569 2 50 27 Bs
0.094118 0.066667 0.219608 0 0.929412 0.913725 0.815686 2 50 57 %_BS
%_0.094118 0.066667 0.219608 0 0.929412 0.913725 0.815686 2 50 57 Bs
0.262745 0.172549 0.603922 0 0.796078 0.764706 0.478431 2 50 100 %_BS
%_0.262745 0.172549 0.603922 0 0.796078 0.764706 0.478431 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 37)
(Unnamed gradient 37) 0 6 Bd
[
<
D0D1D1D1D2D3D3D4D4D5D5D5D6D7D7D7D8D8D9D9DADADBDBDCDCDDDDDEDEDEDFDFDFE0E0E0E1E1E2
E2E3E3E4E4E4E5E5E5E6
>
<
61636264666867696B6C6C6E6F7171727474757778787A7C7D7D7E80818183848685878888898B8C
8C8E8F90909293949495
>
<
0405070808090B0B0C0C0F0F1011131314161717181B1B1C1C212122232525262729292A2C2C2D2D
2F2F3030323333343536
>
<
00000000000000000000000000000000000000000000000000010101010102020203030304040505
06060607080809090A0B
>
0
<
848383828180807F7E7D7D7C7B7A7A797878777675757473727271706F6F6E6D6C6C6B6A6A696867
67666564646362616160
>
<
C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A6A5A4A3A2A1A09F9E9D9C9B9A9998
97969594939291908F8E
>
4 %_Br
<
C2C2C2C3C4C4C5C5C6C6C7C7C8C8C9C9CACACACBCCCCCCCDCECFCFD0
>
<
444645464849494A4C4D4D4E5051515254555556585A595B5D5F5F61
>
<
00000000000000000000000000000000000000000000000001010404
>
0
0
<
9897979695949493929191908F8E8E8D8C8B8B8A8988888786858584
>
<
DCDBDAD9D8D7D6D5D4D3D2D1D0CFCDCCCBCAC9C8C7C6C5C4C3C2C1C0
>
4 %_Br
<
B6B7B8B8B9B9BABABBBCBDBDBEBEBFC0C0C1C2
>
<
36383938393A3C3B3C3D3E3F3E3F4142414344
>
0
0
0
<
A6A5A4A4A3A2A1A1A09F9E9D9D9C9B9A9A9998
>
<
EFEEEDECEBEAE9E8E7E6E4E3E2E1E0DFDEDDDC
>
4 %_Br
<
ADAEAFB0B1B1B3B3B4B5B5B6
>
<
2B2C2D2E2F30303233343536
>
0
0
0
<
B1B0AFAEADACABAAA9A8A7A6
>
<
FBFAF9F8F7F6F4F3F2F1F0EF
>
4 %_Br
<
AAABABACACAD
>
<
242526282A2B
>
0
0
<
060504020100
>
<
B6B5B4B3B2B1
>
<
FFFEFDFDFCFB
>
4 %_Br
[
0.901961 0.584314 0.211765 0.043137 0 0.376471 0.556863 2 50 100 %_BS
%_0.901961 0.584314 0.211765 0.043137 0 0.376471 0.556863 2 50 100 Bs
0.815686 0.380392 0.015686 0 0 0.517647 0.752941 2 50 89.011 %_BS
%_0.815686 0.380392 0.015686 0 0 0.517647 0.752941 2 50 89.011 Bs
0.760784 0.266667 0 0 0 0.596078 0.862745 2 50 75.8242 %_BS
%_0.760784 0.266667 0 0 0 0.596078 0.862745 2 50 75.8242 Bs
0.713725 0.211765 0 0 0 0.65098 0.937255 2 50 53.2967 %_BS
%_0.713725 0.211765 0 0 0 0.65098 0.937255 2 50 53.2967 Bs
0.678431 0.168627 0 0 0 0.694118 0.984314 2 50 29.1209 %_BS
%_0.678431 0.168627 0 0 0 0.694118 0.984314 2 50 29.1209 Bs
0.666667 0.141176 0 0 0.023529 0.713726 1 2 50 0 %_BS
%_0.666667 0.141176 0 0 0.023529 0.713726 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 65)
(Unnamed gradient 65) 0 6 Bd
[
<
C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECECFCFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D4D4D4D5D5D5
D5D5D6D6
>
<
00000000000000010405080A0C0E10121416181A1C1E222426282A2B2D2E30313334353738393B3C
3D3E3F40
>
1
<
000000000000000000000000000001010102020203030405060708090A0A0B0D0E0F101112131516
17191A1B
>
<
2727262626262525252424242423232323222222212121212020201F1F1F1F1E1E1E1E1D1D1D1C1C
1C1C1B1B
>
<
A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979695949391908F8E8D8C8B8A89888786858483828180
7F7E7D7C
>
<
18181818171717171717171616161616161615151515151515151414141414141413131313131313
12121212
>
4 %_Br
<
B9B9BABABBBBBCBCBDBEBEBFBFC0C1C1C2C2C2C3C4C4C5C6C6
>
0
1
0
<
2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A292929282828282727
>
<
C1C0BFBEBDBCBBBAB9B8B7B6B5B3B2B1B0AFAEADACABAAA9A8
>
<
1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A191919191919181818
>
4 %_Br
<
B2B2B3B3B4B4B5B5B6B6B7B7B8B8B9B9
>
0
1
0
<
323231313131303030302F2F2F2F2E2E
>
<
D1D0CFCECDCCCBCAC8C7C6C5C4C3C2C1
>
<
1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C
>
4 %_Br
<
ADADAEAEAFAFB0B0B1B1B2
>
0
1
0
<
3636353534343433333232
>
<
DCDBDAD9D8D7D5D4D3D2D1
>
<
1F1F1F1F1F1F1E1E1E1E1E
>
4 %_Br
<
AAAAABACACAD
>
0
1
0
<
3C3B3A383736
>
<
E0DFDEDEDDDC
>
<
25242321201F
>
4 %_Br
[
0.839216 0.25098 1 0.105882 0.105882 0.486275 0.070588 2 50 100 %_BS
%_0.839216 0.25098 1 0.105882 0.105882 0.486275 0.070588 2 50 100 Bs
0.776471 0 1 0 0.152941 0.658824 0.094118 2 50 89.011 %_BS
%_0.776471 0 1 0 0.152941 0.658824 0.094118 2 50 89.011 Bs
0.72549 0 1 0 0.180392 0.756863 0.109804 2 50 75.8242 %_BS
%_0.72549 0 1 0 0.180392 0.756863 0.109804 2 50 75.8242 Bs
0.698039 0 1 0 0.196078 0.819608 0.117647 2 50 53.2967 %_BS
%_0.698039 0 1 0 0.196078 0.819608 0.117647 2 50 53.2967 Bs
0.678431 0 1 0 0.211765 0.862745 0.121569 2 50 29.1209 %_BS
%_0.678431 0 1 0 0.211765 0.862745 0.121569 2 50 29.1209 Bs
0.666667 0 1 0 0.235294 0.878431 0.145098 2 50 0 %_BS
%_0.666667 0 1 0 0.235294 0.878431 0.145098 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.858823 0.85098 0.788235 1 ([\721\756\742\754\745\771\745\755\750\745] 1) 0 Xs
([\721\756\742\754\745\771\745\755\750\745] 1)
Pc
0 0 0 0 1 1 1 Xa
(\701\745\753\773\751)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 0 1 0 0 1 6 79 255 255 0 50 Lb
(M1 Studio - Guides) Ln
1 A
0 A
0 J 0 j 1 w 4 M []0 d0 XR
0 8791.5 m
0 -7591.5 L
(N) *
1200 8791.5 m
1200 -7591.5 L
(N) *
-7591.5 0 m
8791.5 0 L
(N) *
-7591.5 1200 m
8791.5 1200 L
(N) *
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 2 79 255 79 0 50 Lb
(M1 Studio - Scene) Ln
0 A
u
0 O
0.745098 0.8 0.788235 0.937255 0.070588 0.027451 0.007843 Xa
0 J 0 j 1 w 4 M []0 d0 XR
1124.3242 307.5342 m
676.0264 307.5342 L
649.4951 307.5342 627.9873 329.042 627.9873 355.5732 C
627.9873 794.8203 L
627.9873 821.3516 649.4951 842.8594 676.0264 842.8594 C
1124.3242 842.8594 L
1150.8555 842.8594 1172.3633 821.3516 1172.3633 794.8203 C
1172.3633 355.5732 L
1172.3633 329.042 1150.8555 307.5342 1124.3242 307.5342 C
1124.3242 307.5342 L
f
1124.3242 308.7861 m
676.0254 308.7861 L
650.1865 308.7861 629.2393 329.7344 629.2393 355.5732 C
629.2393 794.8203 L
629.2393 820.6592 650.1865 841.6064 676.0254 841.6064 C
1124.3242 841.6064 L
1150.1631 841.6064 1171.1113 820.6592 1171.1113 794.8203 C
1171.1113 355.5732 L
1171.1113 329.7344 1150.1631 308.7861 1124.3242 308.7861 C
1124.3242 308.7861 L
Bb
1 (Unnamed gradient 1) 900.1758 841.6064 -90 532.8208 1 0 0 1 0 0 Bg
-0.000023 -532.8208 -545.8721 0.000024 1173.1113 841.6064 Xm
-0.000371 -8494.6758 -545.8721 0.000024 1173.1113 9336.2822 Bc
-0.000008 -193.2205 -545.8721 0.000024 1173.1113 841.6064 Bm
0 0 -545.8721 0.000024 1173.1113 648.3857 Bm
-0.000003 -65.1166 -545.8721 0.000024 1173.1113 648.3857 Bm
-0.000005 -109.7936 -545.8721 0.000024 1173.1113 583.2695 Bm
-0.000007 -164.6901 -545.8721 0.000024 1173.1113 473.4756 Bm
-0.000371 -8494.6758 -545.8721 0.000024 1173.1113 308.7852 Bc
f
0 BB
0.745098 0.8 0.788235 0.937255 0.070588 0.027451 0.007843 Xa
1124.3252 336.7754 m
676.0254 336.7754 L
665.6436 336.7754 657.2275 345.1914 657.2275 355.5732 C
657.2275 794.8203 L
657.2275 805.2031 665.6436 813.6182 676.0254 813.6182 C
1124.3252 813.6182 L
1134.707 813.6182 1143.123 805.2031 1143.123 794.8203 C
1143.123 355.5732 L
1143.123 345.1914 1134.707 336.7754 1124.3252 336.7754 C
1124.3252 336.7754 L
f
0 0 0 0 1 1 1 Xa
1124.3242 338.0283 m
676.0254 338.0283 L
666.335 338.0283 658.4805 345.8828 658.4805 355.5732 C
658.4805 794.8203 L
658.4805 804.5098 666.335 812.3643 676.0254 812.3643 C
1124.3242 812.3643 L
1134.0146 812.3643 1141.8691 804.5098 1141.8691 794.8203 C
1141.8691 355.5732 L
1141.8691 345.8828 1134.0146 338.0283 1124.3242 338.0283 C
1124.3242 338.0283 L
f
u
1198 719.2217 m
1198 758.5703 L
1172.3633 771.5449 L
1172.3633 719.2217 L
1198 719.2217 L
Bb
1 (Unnamed gradient 2) 1106.9619 745.3833 0 112.2029 1 0 0 1 0 0 Bg
112.2029 0 0 -56.3232 1106.9619 773.5449 Xm
8636.0605 0 0 -56.3232 -7529.0991 773.5449 Bc
14.5864 0 0 -56.3232 1106.9619 773.5449 Bm
39.271 0 0 -56.3232 1121.5479 773.5449 Bm
11.2203 0 0 -56.3232 1160.8193 773.5449 Bm
26.9287 0 0 -56.3232 1172.04 773.5449 Bm
10.0983 0 0 -56.3232 1198.9688 773.5449 Bm
10.0983 0 0 -56.3232 1209.0664 773.5449 Bm
8636.0605 0 0 -56.3232 1219.165 773.5449 Bc
f
0 BB
967.8994 659.4697 m
921.1855 639.3506 L
966.5674 616.3838 L
1198 499.2607 L
1198 758.5674 L
967.8994 659.4697 L
Bb
1 (Unnamed gradient 2) 1045.7646 -2248.6367 57 292.9594 1 0 0 -1 0 19111.3828 Bg
159.5571 -245.6964 252.5122 163.9833 919.5078 638.2617 Xm
4705.8242 -7246.335 252.5122 163.9833 -3786.3167 7884.5967 Bc
20.7424 -31.9405 252.5122 163.9833 919.5078 638.2617 Bm
55.845 -85.9937 252.5122 163.9833 940.25 606.3213 Bm
15.9557 -24.5696 252.5122 163.9833 996.0947 520.3271 Bm
38.2937 -58.9671 252.5122 163.9833 1012.0508 495.7578 Bm
14.3601 -22.1127 252.5122 163.9833 1050.3447 436.791 Bm
14.3601 -22.1127 252.5122 163.9833 1064.7051 414.6777 Bm
4705.8242 -7246.335 252.5122 163.9833 1079.0645 392.5654 Bc
f
0 BB
968.665 657.6914 m
925.749 639.209 L
967.4404 618.1113 L
1198 501.4297 L
1198 756.46 L
968.665 657.6914 L
Bb
1 (Unnamed gradient 2) 1052.9629 -2084.9795 -57 281.3901 1 0 0 -1 0 19111.3828 Bg
153.256 235.9936 -257.7812 167.4051 1181.8535 472.8945 Xm
4709.7461 7252.3735 -257.7812 167.4051 -3527.8926 -6779.4795 Bc
19.9233 30.6792 -257.7812 167.4051 1181.8535 472.8945 Bm
53.6396 82.5978 -257.7812 167.4051 1201.7764 503.5732 Bm
15.3256 23.5994 -257.7812 167.4051 1255.416 586.1719 Bm
36.7814 56.6385 -257.7812 167.4051 1270.7422 609.771 Bm
13.793 21.2394 -257.7812 167.4051 1307.5234 666.4092 Bm
13.793 21.2394 -257.7812 167.4051 1321.3164 687.6489 Bm
4709.7461 7252.3735 -257.7812 167.4051 1335.1094 708.8882 Bc
f
0 BB
972.6436 648.4531 m
949.4766 638.4756 L
971.9824 627.0869 L
1198 512.7041 L
1198 745.5078 L
972.6436 648.4531 L
Bb
1 (Unnamed gradient 2) 1061.3232 -2239.4932 57 263.0787 1 0 0 -1 0 19111.3828 Bg
143.2829 -220.6364 227.0476 147.4464 947.7988 637.3867 Xm
4714.2983 -7259.3843 227.0476 147.4464 -3766.4995 7896.771 Bc
18.6268 -28.6827 227.0476 147.4464 947.7988 637.3867 Bm
50.149 -77.2227 227.0476 147.4464 966.4258 608.7041 Bm
14.3283 -22.0636 227.0476 147.4464 1016.5742 531.4814 Bm
34.3879 -52.9527 227.0476 147.4464 1030.9033 509.418 Bm
12.8955 -19.8573 227.0476 147.4464 1065.291 456.4648 Bm
12.8955 -19.8573 227.0476 147.4464 1078.1865 436.6074 Bm
4714.2983 -7259.3843 227.0476 147.4464 1091.082 416.75 Bc
f
0 BB
973.4092 646.6758 m
954.04 638.335 L
972.8555 628.8115 L
1198 514.8721 L
1198 743.4014 L
973.4092 646.6758 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 249) 1788.6904 -3044.8096 0 326.5278 0.417735 0 0 -0.417735 4769.6279 13102.4717 Bg
136.4019 0 0 136.4019 1096.5566 633.4634 Bm
f
0 BB
977.3105 637.6152 m
1198 525.9297 L
1198 732.6602 L
977.3105 637.6152 L
Bb
1 (Unnamed gradient 22) 977.3105 629.2949 0 220.6895 1 0 0 1 0 0 Bg
220.6895 0 0 -210.7305 977.3105 734.6602 Xm
8571.8105 0 0 -210.7305 -7594.5 734.6602 Bc
64.2668 0 0 -210.7305 977.3105 734.6602 Bm
53.3534 0 0 -210.7305 1041.5771 734.6602 Bm
49.7158 0 0 -210.7305 1094.9307 734.6602 Bm
29.1019 0 0 -210.7305 1144.6465 734.6602 Bm
24.2516 0 0 -210.7305 1173.748 734.6602 Bm
8571.8105 0 0 -210.7305 1198 734.6602 Bc
f
0 BB
*u
u
0.086275 0.054902 0.203922 0 0.937255 0.92549 0.831373 Xa
1075.0098 624.1572 m
1080.4355 631.8809 1084.5098 637.9746 1087.2344 642.4424 c
1089.958 646.9082 1091.3604 649.7725 1091.4414 651.0352 c
1091.4707 651.501 1091.3311 651.8955 1091.0215 652.2188 c
1090.7119 652.541 1090.3359 652.7168 1089.8975 652.7451 c
1089.0479 652.7998 1086.5938 652.1299 1082.54 650.7373 c
1079.1865 649.5752 1076.7295 648.6377 1075.1689 647.9248 c
1073.6094 647.2119 1071.457 646.1865 1068.7129 644.8477 c
1065.9697 643.5078 1064.4063 642.8516 1064.0215 642.876 c
1063.2539 642.9258 1062.9033 643.4844 1062.9727 644.5547 c
1063.1016 646.584 1064.6084 649.2285 1067.4883 652.4873 c
1070.3682 655.7451 1074.1406 658.5195 1078.8047 660.8105 c
1079.376 661.1309 1079.6484 661.0859 1079.6221 660.6748 c
1079.6143 660.5381 1079.2646 660.2441 1078.5742 659.792 c
1077.8848 659.3398 1077.2695 658.877 1076.7295 658.4033 c
1076.1885 657.9268 1075.5713 657.2021 1074.875 656.2285 c
1080.8203 658.7393 1085.1816 660.4971 1087.96 661.5049 c
1090.7373 662.5098 1093.0859 662.9521 1095.0068 662.8301 c
1096.6797 662.7227 1097.9736 662.2881 1098.8887 661.5273 c
1099.8047 660.7656 1100.2207 659.7275 1100.1357 658.4102 c
1100.0625 657.2588 1099.4951 655.6143 1098.4355 653.4785 c
1097.375 651.3428 1095.8672 648.7607 1093.9111 645.7334 c
1091.9541 642.7031 1089.9648 639.7119 1087.9434 636.7568 c
1085.9219 633.8008 1082.2686 628.457 1076.9805 620.7256 c
1082.7285 627.0508 1087.999 632.5664 1092.791 637.2725 c
1097.582 641.9785 1101.7363 645.7891 1105.2568 648.7031 c
1108.7764 651.6182 1111.7246 653.791 1114.1035 655.2227 c
1116.4805 656.6533 1118.2051 657.335 1119.2754 657.2666 c
1119.6592 657.2422 1120.0879 656.8486 1120.5625 656.0889 c
1121.0361 655.3281 1121.4473 654.4141 1121.792 653.3457 c
1122.1367 652.2764 1122.2881 651.4131 1122.2461 650.7549 c
1122.1299 648.9443 1121.5547 647.1768 1120.5225 645.4531 c
1119.4883 643.7285 1117.9863 641.6758 1116.0166 639.2959 c
1110.4121 632.6592 1106.2959 627.4141 1103.667 623.5615 c
1101.0371 619.708 1099.6436 616.5605 1099.4883 614.1191 c
1099.3701 612.2803 1100.2715 611.3008 1102.1904 611.1777 c
1103.0693 611.1221 1104.1191 611.3848 1105.3408 611.9678 c
1106.5615 612.5508 1108.04 613.4736 1109.7734 614.7412 c
1111.5078 616.0068 1113.2637 617.3955 1115.041 618.9072 c
1114.916 615.6924 L
1112.4023 613.4287 1110.1582 611.5 1108.1836 609.9053 c
1106.208 608.3096 1104.3496 606.9209 1102.6064 605.7383 c
1100.8652 604.5566 1099.3145 603.6768 1097.9561 603.1025 c
1096.5967 602.5293 1095.4238 602.2744 1094.4355 602.3379 c
1093.0088 602.4287 1091.8945 602.9893 1091.0938 604.0176 c
1090.292 605.0479 1089.9414 606.3574 1090.0439 607.9482 c
1090.1387 609.4297 1090.5752 611.1992 1091.3545 613.2559 c
1092.1338 615.3135 1093.2764 617.6709 1094.7832 620.3291 c
1096.2891 622.9863 1098.126 625.8584 1100.293 628.9424 c
1102.46 632.0254 1104.8887 635.2305 1107.582 638.5557 c
1110.2158 641.8574 1111.5654 644.0029 1111.6289 644.9893 c
1111.667 645.5654 1111.3828 645.873 1110.7793 645.9121 c
1108.3379 646.0684 1102.457 641.5557 1093.1377 632.375 c
1092.5498 631.8066 1091.5254 630.749 1090.0625 629.2051 c
1088.6006 627.6592 1087.1045 626.0127 1085.5742 624.2656 c
1084.043 622.5176 1082.3262 620.5547 1080.4238 618.3779 c
1078.5215 616.1992 1076.5898 613.9883 1074.6279 611.7451 c
1073.7051 610.6748 1072.9424 610.1592 1072.3398 610.1982 c
1071.6807 610.2402 1070.8506 610.8311 1069.8506 611.9688 c
1068.8496 613.1084 1068.3633 613.9238 1068.3945 614.418 c
1068.4316 614.9932 1069.2852 616.3848 1070.9561 618.5918 c
1072.626 620.7988 1073.9775 622.6533 1075.0098 624.1572 c
f
/BBAccumRotation (0.058130) XT
U
u
1121.2637 616.7314 m
1121.1973 615.7021 L
1121.0938 614.084 1121.4102 612.7969 1122.1484 611.8408 c
1122.8857 610.8848 1123.8984 610.3652 1125.1895 610.2822 c
1126.5322 610.1963 1127.9443 610.4219 1129.4258 610.9619 c
1130.9063 611.499 1132.3926 612.2441 1133.8867 613.1963 c
1135.3789 614.1465 1137.2109 615.4336 1139.3818 617.0586 c
1139.2207 614.5479 L
1135.8818 611.0156 1132.79 608.3428 1129.9473 606.5273 c
1127.1045 604.7129 1124.2832 603.8955 1121.4863 604.0742 c
1119.0439 604.2305 1117.1699 605.3008 1115.8662 607.2852 c
1114.5596 609.2695 1114.0137 611.9072 1114.2236 615.1992 c
1114.4082 618.0801 1115.248 620.6494 1116.7432 622.9092 c
1118.2363 625.1689 1120.5898 627.5029 1123.8027 629.9141 c
1126.001 631.5635 1128.1592 632.7754 1130.2744 633.5488 c
1132.3887 634.3223 1134.2559 634.6572 1135.875 634.5527 c
1137.1641 634.4707 1138.166 634.1094 1138.8838 633.4727 c
1139.5996 632.833 1139.9209 631.9248 1139.8457 630.7451 c
1139.7344 629.0166 1138.9795 627.3369 1137.5801 625.7051 c
1136.1807 624.0732 1134.1035 622.499 1131.3486 620.9814 c
1128.5928 619.4639 1125.2314 618.0479 1121.2637 616.7314 c
f
/BBAccumRotation (0.058130) XT
1 D
1121.8467 619.3799 m
1124.377 620.1816 1126.5654 621.2393 1128.4121 622.5537 c
1130.2598 623.8672 1131.6426 625.1484 1132.5635 626.3984 c
1133.4834 627.6475 1133.9629 628.5742 1134.002 629.1777 c
1134.042 629.8086 1133.7744 630.1426 1133.1982 630.1797 c
1132.7041 630.2119 1131.8818 629.9473 1130.7305 629.3877 c
1129.5791 628.8271 1128.4014 628.0762 1127.1992 627.1348 c
1125.9941 626.1924 1124.8965 625.0645 1123.9033 623.751 c
1122.9102 622.4375 1122.2236 620.9805 1121.8467 619.3799 c
f
/BBAccumRotation (0.058130) XT
U
u
0 D
1160.5908 610.8232 m
1160.5117 609.5898 1160.9375 608.9424 1161.8711 608.8818 c
1163.0771 608.8047 1165.3203 610.7129 1168.6006 614.6074 c
1168.5391 615.3818 1168.5176 615.8936 1168.5332 616.1406 c
1168.6289 617.6211 1169.334 619.3945 1170.6504 621.459 c
1171.9668 623.5225 1173.4443 625.3008 1175.083 626.793 c
1176.7207 628.2852 1177.9375 629.0068 1178.7334 628.9561 c
1179.6934 628.8945 1180.1006 627.7119 1179.9521 625.4072 c
1179.8311 623.5146 1179.3066 621.6748 1178.3799 619.8887 c
1177.4531 618.1025 1176.1592 616.2979 1174.5 614.4775 c
1174.7314 614.2148 1174.9893 613.9424 1175.2744 613.6641 c
1175.5596 613.3828 1175.8672 613.1426 1176.1992 612.9424 c
1176.5313 612.7422 1176.8877 612.6309 1177.2725 612.6055 c
1178.1777 612.5479 1179.377 613.2002 1180.8691 614.5645 c
1180.6816 611.6436 L
1178.3711 609.5322 1176.4189 608.5283 1174.8281 608.6299 c
1173.8955 608.6904 1173.1699 608.8535 1172.6494 609.1211 c
1172.1289 609.3887 1171.4775 609.8506 1170.6934 610.5068 c
1165.2559 604.7676 1161.2217 601.9824 1158.5889 602.1523 c
1157.5732 602.2168 1156.7959 602.6455 1156.2539 603.4365 c
1155.7129 604.2285 1155.4844 605.2979 1155.5713 606.6416 c
1155.6123 607.2998 1156.0449 609.752 1156.8682 613.9961 c
1155.7197 612.8301 1154.3789 611.4551 1152.8447 609.874 c
1151.3105 608.291 1150.0762 607.083 1149.1416 606.248 c
1148.2061 605.4131 1147.3467 604.7725 1146.5605 604.3271 c
1145.7744 603.8818 1144.9971 603.6826 1144.2285 603.7324 c
1143.4883 603.7803 1142.6338 604.3027 1141.6641 605.3018 c
1140.6953 606.2998 1139.9043 607.5967 1139.29 609.1934 c
1138.6758 610.7881 1138.4268 612.4775 1138.541 614.2607 c
1138.6523 615.9893 1138.9932 617.4541 1139.5664 618.6572 c
1140.1396 619.8604 1141.3828 621.6396 1143.2969 623.9961 c
1145.0273 626.0889 1146.5566 627.7949 1147.8799 629.1152 c
1149.2041 630.4346 1150.3916 631.4463 1151.4424 632.1504 c
1152.4922 632.8535 1153.333 633.1865 1153.9639 633.1455 c
1154.3486 633.1221 1154.8438 633 1155.4492 632.7822 c
1156.0547 632.5635 1156.5879 632.29 1157.0488 631.957 c
1157.5088 631.624 1157.7285 631.293 1157.709 630.9639 c
1157.6416 629.9219 1157.0977 628.6348 1156.0771 627.1025 c
1155.0557 625.5703 1153.5762 623.874 1151.6396 622.0156 c
1149.7031 620.1563 1147.502 618.2734 1145.0381 616.3643 c
1144.2861 614.5117 1143.8721 612.9961 1143.7969 611.8174 c
1143.7725 611.4326 1143.8652 611.0615 1144.0771 610.7041 c
1144.2881 610.3457 1144.5586 610.1572 1144.8877 610.1357 c
1146.0117 610.0645 1148.2842 611.6807 1151.7061 614.9873 c
1155.126 618.293 1159.6846 623.3447 1165.3809 630.1426 c
1165.5908 630.4033 1166.0107 630.5146 1166.6426 630.4746 c
1167.3271 630.4297 1167.9424 630.2393 1168.4863 629.9023 c
1169.0283 629.5635 1169.2832 629.1338 1169.25 628.6133 c
1169.2305 628.3115 1168.4082 626.7529 1166.7813 623.9375 c
1165.1543 621.1221 1163.7354 618.5342 1162.5244 616.1738 c
1161.3125 613.8135 1160.668 612.0303 1160.5908 610.8232 c
f
/BBAccumRotation (0.058130) XT
U
*U
U
U
u
0.745098 0.8 0.788235 0.937255 0.070588 0.027451 0.007843 Xa
498.3379 32.0137 m
50.0391 32.0137 L
23.5078 32.0137 2 53.5215 2 80.0527 C
2 519.2988 L
2 545.8301 23.5078 567.3389 50.0391 567.3389 C
498.3379 567.3389 L
524.8691 567.3389 546.377 545.8301 546.377 519.2988 C
546.377 80.0527 L
546.377 53.5215 524.8691 32.0137 498.3379 32.0137 C
498.3379 32.0137 L
f
498.3369 33.2656 m
50.0391 33.2656 L
24.1992 33.2656 3.25195 54.2139 3.25195 80.0527 C
3.25195 519.2998 L
3.25195 545.1387 24.1992 566.0859 50.0391 566.0859 C
498.3369 566.0859 L
524.1758 566.0859 545.124 545.1387 545.124 519.2998 C
545.124 80.0527 L
545.124 54.2139 524.1758 33.2656 498.3369 33.2656 C
498.3369 33.2656 L
Bb
1 (Unnamed gradient 1) 274.188 566.0859 -90 532.8203 1 0 0 1 0 0 Bg
-0.000023 -532.8203 -545.8721 0.000024 547.124 566.0859 Xm
-0.000344 -7868.6885 -545.8721 0.000024 547.1245 8434.7744 Bc
-0.000008 -193.2204 -545.8721 0.000024 547.124 566.0859 Bm
0 0 -545.8721 0.000024 547.124 372.8652 Bm
-0.000003 -65.1165 -545.8721 0.000024 547.124 372.8652 Bm
-0.000005 -109.7935 -545.8721 0.000024 547.124 307.749 Bm
-0.000007 -164.69 -545.8721 0.000024 547.124 197.9561 Bm
-0.000344 -7868.6885 -545.8721 0.000024 547.124 33.2656 Bc
f
0 BB
0.745098 0.8 0.788235 0.937255 0.070588 0.027451 0.007843 Xa
498.3379 61.2549 m
50.0391 61.2549 L
39.6563 61.2549 31.2402 69.6709 31.2402 80.0527 C
31.2402 519.2998 L
31.2402 529.6816 39.6563 538.0977 50.0391 538.0977 C
498.3379 538.0977 L
508.7207 538.0977 517.1357 529.6816 517.1357 519.2998 C
517.1357 80.0527 L
517.1357 69.6709 508.7207 61.2549 498.3379 61.2549 C
498.3379 61.2549 L
f
0 0 0 0 1 1 1 Xa
498.3379 62.5078 m
50.0391 62.5078 L
40.3477 62.5078 32.4941 70.3623 32.4941 80.0527 C
32.4941 519.2988 L
32.4941 528.9893 40.3477 536.8438 50.0391 536.8438 C
498.3379 536.8438 L
508.0273 536.8438 515.8818 528.9893 515.8818 519.2988 C
515.8818 80.0527 L
515.8818 70.3623 508.0273 62.5078 498.3379 62.5078 C
498.3379 62.5078 L
f
u
427.1367 1.83203 m
473.4609 1.83203 L
488.7363 32.0137 L
427.1367 32.0137 L
427.1367 1.83203 L
Bb
1 (Unnamed gradient 2) 337.9517 4686.2549 0 132.0945 0 1 -1 0 12154.6816 753.0391 Bg
0 -132.0945 -65.5996 0 490.7363 109.0098 Xm
0 -7855.4556 -65.5996 0 490.7363 7964.4653 Bc
0 -17.1723 -65.5996 0 490.7363 109.0098 Bm
0 -46.2331 -65.5996 0 490.7363 91.8379 Bm
0 -13.2094 -65.5996 0 490.7363 45.6045 Bm
0 -31.7027 -65.5996 0 490.7363 32.3945 Bm
0 -11.8885 -65.5996 0 490.7363 0.692383 Bm
0 -11.8885 -65.5996 0 490.7363 -11.1963 Bm
0 -7855.4556 -65.5996 0 490.7363 -23.085 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
321.7441 210.998 m
168.1738 1.83203 L
473.4531 1.83203 L
321.7441 210.998 L
Bb
1 (Unnamed gradient 2) 1301.8867 -6386.0732 57 279.6089 0 1 1 0 -7182.8916 -211.9277 Bg
-234.4997 -152.2859 142.7216 -219.772 331.8213 219.9268 Xm
-7461.1382 -4845.3193 142.7216 -219.772 7792.959 5065.2461 Bc
-30.485 -19.7972 142.7216 -219.772 331.8213 219.9268 Bm
-82.0749 -53.3001 142.7216 -219.772 301.3364 200.1299 Bm
-23.45 -15.2286 142.7216 -219.772 219.2612 146.8291 Bm
-56.2799 -36.5486 142.7216 -219.772 195.8115 131.6006 Bm
-21.105 -13.7057 142.7216 -219.772 139.5317 95.0527 Bm
-21.105 -13.7057 142.7216 -219.772 118.4268 81.3467 Bm
-7461.1382 -4845.3193 142.7216 -219.772 97.3218 67.6406 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
321.5762 205.626 m
170.7275 1.83203 L
470.9727 1.83203 L
321.5762 205.626 L
Bb
1 (Unnamed gradient 2) 1303.9736 -6222.5361 -57 287.3158 0 1 1 0 -7182.8916 -211.9277 Bg
240.9633 -156.4834 140.0125 215.6004 169.6387 0.154297 Xm
7462.8882 -4846.4556 140.0125 215.6004 -7293.2495 4846.6099 Bc
31.3252 -20.3428 140.0125 215.6004 169.6387 0.154297 Bm
84.3372 -54.7692 140.0125 215.6004 200.9639 -20.1885 Bm
24.0963 -15.6483 140.0125 215.6004 285.3013 -74.958 Bm
57.8312 -37.556 140.0125 215.6004 309.3975 -90.6064 Bm
21.6867 -14.0835 140.0125 215.6004 367.2285 -128.1621 Bm
21.6867 -14.0835 140.0125 215.6004 388.9155 -142.2451 Bm
7462.8882 -4846.4556 140.0125 215.6004 410.6021 -156.3291 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
320.7139 186.084 m
184 1.83203 L
458.0781 1.83203 L
320.7139 186.084 L
Bb
1 (Unnamed gradient 2) 1313.9248 -6378.5166 57 251.09 0 1 1 0 -7182.8916 -211.9277 Bg
-210.5818 -136.7534 127.0864 -195.6959 332.0815 195.8506 Xm
-7471.2329 -4851.8745 127.0864 -195.6959 7803.3145 5047.7251 Bc
-27.3756 -17.7779 127.0864 -195.6959 332.0815 195.8506 Bm
-73.7036 -47.8637 127.0864 -195.6959 304.7061 178.0723 Bm
-21.0582 -13.6753 127.0864 -195.6959 231.0024 130.209 Bm
-50.5396 -32.8208 127.0864 -195.6959 209.9443 116.5332 Bm
-18.9524 -12.3078 127.0864 -195.6959 159.4043 83.7129 Bm
-18.9524 -12.3078 127.0864 -195.6959 140.4521 71.4053 Bm
-7471.2329 -4851.8745 127.0864 -195.6959 121.5 59.0977 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
321.1953 180.7119 m
186.5527 1.83203 L
455.5977 1.83203 L
321.1953 180.7119 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 249) 1229.4824 -5927.3779 0 325.8517 0 0.417735 0.417735 0 1769.0863 5030.4575 Bg
0 -136.1195 136.1195 0 326.1694 76.2139 Bm
f
0 BB
/BBAccumRotation (1.570796) XT
320.7139 163.7402 m
199.5703 1.83203 L
442.9512 1.83203 L
320.7139 163.7402 L
Bb
1 (Unnamed gradient 65) 321.2607 163.7402 -90 161.9082 1 0 0 1 0 0 Bg
-0.000007 -161.9082 -247.3809 0.000011 444.9512 163.7402 Xm
-0.000346 -7915.7612 -247.3809 0.000011 444.9517 8079.5015 Bc
-0.000002 -47.1491 -247.3809 0.000011 444.9512 163.7402 Bm
-0.000002 -39.1426 -247.3809 0.000011 444.9512 116.5908 Bm
-0.000002 -36.4739 -247.3809 0.000011 444.9512 77.4482 Bm
-0.000001 -21.3505 -247.3809 0.000011 444.9512 40.9746 Bm
-0.000001 -17.7921 -247.3809 0.000011 444.9512 19.624 Bm
-0.000346 -7915.7612 -247.3809 0.000011 444.9512 1.83203 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
*u
u
0.086275 0.054902 0.203922 0 0.937255 0.92549 0.831373 Xa
281.3145 54.2217 m
279.2363 51.7305 L
281.6826 51.5313 283.8711 51.2568 285.7969 50.9023 c
287.7246 50.5498 289.5059 50.1523 291.1465 49.7139 c
292.7852 49.2754 294.2246 48.8145 295.4658 48.3311 c
299.8242 46.5557 302.0176 44.0469 302.0459 40.8047 c
302.0645 38.8262 301.1748 36.8818 299.3789 34.9688 c
297.582 33.0566 295.2402 31.3457 292.3545 29.8359 c
289.4688 28.3262 286.498 27.1387 283.4414 26.2725 c
280.3848 25.4072 277.6074 24.9639 275.1064 24.9404 c
270.9297 24.9033 267.666 25.6514 265.3174 27.1816 c
262.9668 28.7129 261.7813 30.8252 261.7568 33.5186 c
261.7402 35.3867 262.4336 37.5918 263.8398 40.1328 c
265.2461 42.6738 267.4307 45.8389 270.3926 49.6309 c
268.1387 49.7197 266.541 50.042 265.6016 50.5986 c
264.6621 51.1523 264.1885 51.9385 264.1787 52.9551 c
264.1738 53.5869 264.3477 54.0703 264.7021 54.4023 c
265.0557 54.7363 265.5352 54.9805 266.1387 55.1367 c
266.7402 55.293 267.9004 55.4883 269.6162 55.7246 c
271.332 55.96 273.5332 56.2549 276.2246 56.6084 c
279.1855 60.3164 281.8467 63.1094 284.208 64.9863 c
286.5684 66.8623 289.1074 67.9492 291.8242 68.249 c
292.043 68.2773 292.2832 68.2939 292.5449 68.2969 c
292.8066 68.2998 292.9375 68.2314 292.9395 68.0938 c
292.9404 67.9287 292.6357 67.4863 292.0234 66.7666 c
291.4121 66.0459 290.4189 64.8975 289.0449 63.3184 c
287.6719 61.7393 286.0459 59.8701 284.1699 57.71 c
289.3301 58.4424 293.5469 59.2705 296.8223 60.1943 c
300.0977 61.1152 302.5684 62.2031 304.2344 63.4551 c
305.8984 64.707 306.7246 66.0869 306.7109 67.5986 c
306.6943 69.4404 305.7891 70.7656 303.9961 71.5732 c
302.2031 72.3809 299.4648 72.7695 295.7832 72.7363 c
293.749 72.7178 291.4219 72.4912 288.8027 72.0557 c
286.1816 71.6191 283.8086 71.1309 281.6836 70.5898 c
279.5586 70.0488 277.668 69.4746 276.0117 68.8691 c
274.3535 68.2627 273.5264 67.8232 273.5293 67.5488 c
273.5293 67.4668 273.6133 67.3848 273.7793 67.3037 c
275.1289 66.8213 275.8066 66.415 275.8096 66.0859 c
275.8125 65.6445 273.7598 64.7822 269.6484 63.4951 c
265.5391 62.208 262.7686 61.5586 261.3408 61.5449 c
260.3242 61.5361 259.8105 62.0391 259.8008 63.0566 c
259.791 64.2656 260.877 66.4521 263.0605 69.6191 c
265.2441 72.7852 267.2393 74.8154 269.0449 75.7119 c
269.6738 76.0186 271.1406 76.5137 273.4424 77.1934 c
275.7441 77.874 278.2754 78.5283 281.0303 79.1572 c
283.7871 79.7871 286.5918 80.3203 289.4453 80.7588 c
292.2988 81.1963 294.8252 81.4258 297.0234 81.4453 c
302.2168 81.4912 306.127 80.5986 308.7549 78.7676 c
311.3818 76.9355 312.708 74.6191 312.7324 71.8154 c
312.75 69.9199 312.168 68.0869 310.9893 66.3184 c
309.8096 64.5488 307.9629 62.8701 305.4492 61.2813 c
302.9355 59.6924 299.6563 58.2881 295.6143 57.0703 c
291.5713 55.8525 286.8057 54.9033 281.3145 54.2217 c
f
/BBAccumRotation (0.060557) XT
1 D
276.9941 48.8662 m
275.5801 47.1484 274.3242 45.6328 273.2227 44.3184 c
272.1211 43.0029 271.333 41.9375 270.8604 41.123 c
270.3857 40.3086 270.1533 39.4883 270.1602 38.6641 c
270.1729 37.3457 270.8633 36.1768 272.2324 35.1582 c
273.6016 34.1406 275.5645 33.6426 278.1191 33.666 c
280.4824 33.6865 283.001 34.1279 285.6719 34.9912 c
288.3438 35.8516 290.5859 36.9648 292.4023 38.3281 c
294.2168 39.6895 295.1191 41.0586 295.1074 42.4326 c
295.0957 43.6143 294.4141 44.583 293.0605 45.3408 c
291.707 46.0986 289.6533 46.7607 286.9004 47.3262 c
284.1484 47.8926 280.8457 48.4063 276.9941 48.8662 c
f
/BBAccumRotation (0.060557) XT
U
u
0 D
312.0869 38.1328 m
312.0957 37.1025 L
312.1104 35.4814 312.5195 34.2217 313.3262 33.3223 c
314.1309 32.4219 315.1777 31.9775 316.4707 31.9893 c
317.8164 32.001 319.209 32.3301 320.6455 32.9756 c
322.082 33.6201 323.5098 34.4707 324.9297 35.5273 c
326.3496 36.585 328.082 38.001 330.127 39.7793 c
330.1494 37.2646 L
327.0781 33.499 324.1914 30.6084 321.4883 28.5928 c
318.7852 26.5762 316.0332 25.5547 313.2305 25.5303 c
310.7852 25.5078 308.8389 26.4395 307.3936 28.3223 c
305.9473 30.2051 305.21 32.7959 305.1797 36.0928 c
305.1543 38.9785 305.8037 41.6016 307.1289 43.9629 c
308.4551 46.3242 310.6309 48.8232 313.6582 51.4619 c
315.7295 53.2666 317.793 54.6309 319.8447 55.5566 c
321.8984 56.4824 323.7344 56.9521 325.3564 56.9668 c
326.6465 56.9785 327.6729 56.6914 328.4336 56.1084 c
329.1953 55.5234 329.582 54.6406 329.5918 53.46 c
329.6074 51.7285 328.9766 49.998 327.7012 48.2695 c
326.4248 46.54 324.4688 44.8193 321.832 43.1064 c
319.1953 41.3916 315.9473 39.7344 312.0869 38.1328 c
f
/BBAccumRotation (0.060557) XT
1 D
312.4756 40.8154 m
314.9395 41.7998 317.0439 43.0137 318.791 44.459 c
320.5352 45.9033 321.8223 47.2822 322.6484 48.5957 c
323.4746 49.9072 323.8867 50.8662 323.8799 51.4707 c
323.874 52.1025 323.584 52.417 323.0059 52.4111 c
322.5117 52.4072 321.7109 52.084 320.6035 51.4414 c
319.4961 50.7988 318.377 49.9648 317.2461 48.9385 c
316.1133 47.9111 315.1006 46.707 314.207 45.3252 c
313.3125 43.9414 312.7344 42.4395 312.4756 40.8154 c
f
/BBAccumRotation (0.060557) XT
U
u
0 D
329.9717 38.624 m
329.9629 39.6123 L
336.9863 47.1504 341.8164 52.4287 344.4551 55.4482 c
345.0283 58.833 346.4707 60.5361 348.7773 60.5566 c
349.3555 60.5615 349.9746 60.4023 350.6367 60.0781 c
350.8926 59.2979 L
350.7842 58.9668 350.7344 58.499 350.7393 57.8955 c
350.7441 57.373 350.9521 56.4063 351.3633 54.9941 c
351.7734 53.582 352.0938 52.3965 352.3223 51.4375 c
352.5508 50.4775 352.6699 49.3926 352.6816 48.1846 c
352.6973 46.3711 352.3008 44.6289 351.4922 42.96 c
350.6816 41.2891 349.502 39.6855 347.9492 38.1455 c
346.3955 36.6074 344.3906 35.0283 341.9316 33.4141 c
342.9229 33.2578 343.7051 33.1816 344.2832 33.1875 c
345.4102 33.1982 346.623 33.4893 347.9238 34.0654 c
349.2227 34.6387 350.5498 35.4082 351.9014 36.3672 c
353.2529 37.3281 354.8281 38.5713 356.6289 40.0986 c
356.6543 37.3379 L
353.166 33.8711 350.0439 31.2393 347.2842 29.4424 c
344.5254 27.6455 342.1426 26.7373 340.1367 26.7197 c
337.5537 26.6963 335.1533 27.7734 332.9355 29.9521 c
331.6318 31.2598 330.8164 32.5166 330.4902 33.7236 c
330.1641 34.9287 329.9912 36.5625 329.9717 38.624 c
f
/BBAccumRotation (0.060557) XT
1 D
345.2891 45.0674 m
344.4941 51.0791 L
342.8066 49.1396 339.1992 45.4111 333.6709 39.8936 c
335.3242 39.5508 336.4531 39.0801 337.0635 38.4814 c
337.6738 37.8818 338.5352 36.7217 339.6504 35.001 c
341.5117 35.7861 342.9375 36.8506 343.9297 38.1914 c
344.9199 39.5332 345.4053 41.3584 345.3848 43.667 c
345.3828 43.9414 345.373 44.1885 345.3574 44.4092 c
345.3418 44.6279 345.3184 44.8477 345.2891 45.0674 c
f
/BBAccumRotation (0.060557) XT
U
u
0 D
370.7402 61.5371 m
372.5127 61.5527 L
373.9453 64.1758 375.248 66.0352 376.4199 67.1318 c
377.5908 68.2285 378.9326 68.7822 380.4443 68.7959 c
381.9551 68.8096 382.7148 68.4727 382.7197 67.7861 c
382.7236 67.457 382.1406 66.5576 380.9727 65.0908 c
379.8027 63.624 378.9209 62.3936 378.3262 61.3984 c
379.2607 61.2969 380.0928 61.209 380.8223 61.1328 c
381.5508 61.0576 382.1211 60.9932 382.5352 60.9424 c
380.9941 58.0146 379.0566 55.0166 376.7207 51.9453 c
375.9502 51.9922 375.3047 52.0352 374.7813 52.0723 c
374.2598 52.1084 373.7305 52.1445 373.1953 52.1816 c
372.6582 52.2178 372.0049 52.2588 371.2354 52.3076 c
369.7734 49.9043 368.5488 47.7559 367.5625 45.8652 c
366.5752 43.9736 365.8223 42.2422 365.3008 40.6719 c
364.7793 39.1006 364.5244 37.6143 364.5371 36.2129 c
364.5537 34.3164 365.3184 33.376 366.8291 33.3887 c
367.874 33.3984 369.2354 33.9668 370.915 35.0957 c
372.5957 36.2236 374.8398 37.9541 377.6494 40.2881 c
377.6738 37.5264 L
370.3281 29.4082 364.8818 25.334 361.3369 25.3018 c
360.1006 25.291 359.0996 25.7637 358.3359 26.7168 c
357.5703 27.6719 357.1826 28.9063 357.1699 30.417 c
357.1602 31.4336 357.3613 32.6445 357.7754 34.0508 c
358.1885 35.4551 358.9316 37.5771 360.0059 40.418 c
359.623 40.085 359.2637 39.7588 358.9219 39.4395 c
358.5811 39.1201 358.2686 38.8291 357.9824 38.5654 c
357.6963 38.3008 357.3887 38.0244 357.0625 37.7334 c
356.7344 37.4414 356.4082 37.1426 356.0811 36.8379 c
356.0547 39.6816 L
358.9189 42.125 362.3701 46.4023 366.4102 52.5117 c
365.998 52.5352 365.6133 52.5527 365.2559 52.5635 c
364.8984 52.5732 364.4727 52.5771 363.9775 52.5723 c
362.3555 52.5586 361.1484 52.4365 360.3535 52.2109 c
360.0254 52.125 359.7168 52.0332 359.4287 51.9336 c
359.1406 51.835 358.9424 51.7852 358.832 51.7842 c
358.7227 51.7842 358.667 51.8652 358.666 52.0303 c
358.6572 52.9375 359.208 54.3027 360.3184 56.126 c
361.2119 57.6729 362.0605 58.8213 362.8633 59.5703 c
363.667 60.3193 364.6523 60.8291 365.8184 61.1016 c
366.9834 61.3721 368.624 61.5176 370.7402 61.5371 c
f
/BBAccumRotation (0.060557) XT
U
*U
U
U
u
0.745098 0.8 0.788235 0.937255 0.070588 0.027451 0.007843 Xa
511.25 632.6621 m
62.9512 632.6621 L
36.4199 632.6621 14.9121 654.1699 14.9121 680.7012 C
14.9121 1119.9473 L
14.9121 1146.4785 36.4199 1167.9863 62.9512 1167.9863 C
511.25 1167.9863 L
537.7803 1167.9863 559.2891 1146.4785 559.2891 1119.9473 C
559.2891 680.7012 L
559.2891 654.1699 537.7803 632.6621 511.25 632.6621 C
511.25 632.6621 L
f
511.249 633.9141 m
62.9512 633.9141 L
37.1113 633.9141 16.1641 654.8623 16.1641 680.7012 C
16.1641 1119.9482 L
16.1641 1145.7871 37.1113 1166.7344 62.9512 1166.7344 C
511.249 1166.7344 L
537.0879 1166.7344 558.0352 1145.7871 558.0352 1119.9482 C
558.0352 680.7012 L
558.0352 654.8623 537.0879 633.9141 511.249 633.9141 C
511.249 633.9141 L
Bb
1 (Unnamed gradient 1) 287.0996 1166.7344 -90 532.8203 1 0 0 1 0 0 Bg
-0.000023 -532.8203 -545.8711 0.000024 560.0352 1166.7344 Xm
-0.000345 -7881.5996 -545.8711 0.000024 560.0356 9048.334 Bc
-0.000008 -193.2204 -545.8711 0.000024 560.0352 1166.7344 Bm
0 0 -545.8711 0.000024 560.0352 973.5142 Bm
-0.000003 -65.1165 -545.8711 0.000024 560.0352 973.5142 Bm
-0.000005 -109.7935 -545.8711 0.000024 560.0352 908.3975 Bm
-0.000007 -164.69 -545.8711 0.000024 560.0352 798.604 Bm
-0.000345 -7881.5996 -545.8711 0.000024 560.0352 633.9141 Bc
f
0 BB
0.745098 0.8 0.788235 0.937255 0.070588 0.027451 0.007843 Xa
511.25 661.9033 m
62.9512 661.9033 L
52.5684 661.9033 44.1523 670.3193 44.1523 680.7012 C
44.1523 1119.9482 L
44.1523 1130.3301 52.5684 1138.7461 62.9512 1138.7461 C
511.25 1138.7461 L
521.6318 1138.7461 530.0469 1130.3301 530.0469 1119.9482 C
530.0469 680.7012 L
530.0469 670.3193 521.6318 661.9033 511.25 661.9033 C
511.25 661.9033 L
f
0 0 0 0 1 1 1 Xa
511.25 663.1563 m
62.9512 663.1563 L
53.2598 663.1563 45.4063 671.0107 45.4063 680.7012 C
45.4063 1119.9473 L
45.4063 1129.6377 53.2598 1137.4922 62.9512 1137.4922 C
511.25 1137.4922 L
520.9395 1137.4922 528.7939 1129.6377 528.7939 1119.9473 C
528.7939 680.7012 L
528.7939 671.0107 520.9395 663.1563 511.25 663.1563 C
511.25 663.1563 L
f
u
126.0381 1198.168 m
79.7139 1198.168 L
64.4395 1167.9863 L
126.0381 1167.9863 L
126.0381 1198.168 L
Bb
1 (Unnamed gradient 2) 6363.1455 4255.7778 0 132.0962 0 -1 1 0 3151.0166 21655.1563 Bg
0 132.0962 65.5986 0 62.4395 1090.9893 Xm
0 13880.6484 65.5986 0 62.4395 -12789.6602 Bc
0 17.1725 65.5986 0 62.4395 1090.9893 Bm
0 46.2337 65.5986 0 62.4395 1108.1616 Bm
0 13.2096 65.5986 0 62.4395 1154.3955 Bm
0 31.7031 65.5986 0 62.4395 1167.605 Bm
0 11.8887 65.5986 0 62.4395 1199.3081 Bm
0 11.8887 65.5986 0 62.4395 1211.1968 Bm
0 13880.6484 65.5986 0 62.4395 1223.0854 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
231.4316 989.0029 m
385.002 1198.168 L
79.7227 1198.168 L
231.4316 989.0029 L
Bb
1 (Unnamed gradient 2) 7327.0889 -5955.5957 57 279.6083 0 -1 -1 0 22488.5898 22620.1289 Bg
234.4993 152.2856 -142.7211 219.7713 221.3545 980.0742 Xm
12514.2979 8126.8789 -142.7211 219.7713 -12292.9434 -7146.8047 Bc
30.4849 19.7971 -142.7211 219.7713 221.3545 980.0742 Bm
82.0748 53.3 -142.7211 219.7713 251.8394 999.8716 Bm
23.4499 15.2286 -142.7211 219.7713 333.9141 1053.1714 Bm
56.2798 36.5485 -142.7211 219.7713 357.3643 1068.3999 Bm
21.1049 13.7057 -142.7211 219.7713 413.644 1104.9482 Bm
21.1049 13.7057 -142.7211 219.7713 434.749 1118.6543 Bm
12514.2979 8126.8789 -142.7211 219.7713 455.854 1132.3599 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
231.5977 994.374 m
382.4473 1198.168 L
82.2031 1198.168 L
231.5977 994.374 L
Bb
1 (Unnamed gradient 2) 7329.1738 -5792.0605 -57 287.3149 0 -1 -1 0 22488.5898 22620.1289 Bg
-240.9625 156.4829 -140.0128 -215.6009 383.5361 1199.8457 Xm
-12516.0459 8128.0142 -140.0128 -215.6009 12899.582 -6928.1689 Bc
-31.3251 20.3428 -140.0128 -215.6009 383.5361 1199.8457 Bm
-84.3369 54.769 -140.0128 -215.6009 352.2109 1220.1885 Bm
-24.0963 15.6483 -140.0128 -215.6009 267.874 1274.9575 Bm
-57.831 37.5559 -140.0128 -215.6009 243.7778 1290.606 Bm
-21.6866 14.0835 -140.0128 -215.6009 185.9468 1328.1616 Bm
-21.6866 14.0835 -140.0128 -215.6009 164.2603 1342.2451 Bm
-12516.0459 8128.0142 -140.0128 -215.6009 142.5737 1356.3286 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
232.4609 1013.917 m
369.1758 1198.168 L
95.0977 1198.168 L
232.4609 1013.917 L
Bb
1 (Unnamed gradient 2) 7339.127 -5948.0391 57 251.0897 0 -1 -1 0 22488.5898 22620.1289 Bg
210.5816 136.7533 -127.0857 195.6948 221.0938 1004.1504 Xm
12524.3945 8133.4355 -127.0857 195.6948 -12303.3008 -7129.2852 Bc
27.3756 17.7779 -127.0857 195.6948 221.0938 1004.1504 Bm
73.7036 47.8636 -127.0857 195.6948 248.4692 1021.9282 Bm
21.0582 13.6753 -127.0857 195.6948 322.1729 1069.792 Bm
50.5396 32.8208 -127.0857 195.6948 343.231 1083.4673 Bm
18.9523 12.3078 -127.0857 195.6948 393.7705 1116.2881 Bm
18.9523 12.3078 -127.0857 195.6948 412.7231 1128.5957 Bm
12524.3945 8133.4355 -127.0857 195.6948 431.6753 1140.9038 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
231.9795 1019.2881 m
366.623 1198.168 L
97.5762 1198.168 L
231.9795 1019.2881 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 249) 8927.3184 -6398.4883 0 325.8528 0 -0.417735 -0.417735 0 14163.8877 14568.1963 Bg
0 136.12 -136.1199 0 227.0054 1123.7847 Bm
f
0 BB
/BBAccumRotation (1.570796) XT
232.4609 1036.2598 m
353.6055 1198.168 L
110.2227 1198.168 L
232.4609 1036.2598 L
Bb
1 (Unnamed gradient 37) 231.9141 1036.2598 90 161.9082 1 0 0 1 0 0 Bg
-0.000007 161.9082 247.3828 0.000011 108.2227 1036.2598 Xm
-0.000342 7826.4141 247.3828 0.000011 108.2231 -6790.1543 Bc
-0.000002 47.1491 247.3828 0.000011 108.2227 1036.2598 Bm
-0.000002 39.1426 247.3828 0.000011 108.2227 1083.4087 Bm
-0.000002 36.4739 247.3828 0.000011 108.2227 1122.5513 Bm
-0.000001 21.3505 247.3828 0.000011 108.2227 1159.0254 Bm
-0.000001 17.7921 247.3828 0.000011 108.2227 1180.376 Bm
-0.000342 7826.4141 247.3828 0.000011 108.2227 1198.168 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
*u
u
0.086275 0.054902 0.203922 0 0.937255 0.92549 0.831373 Xa
211.0156 1144.0352 m
210.4473 1145.1729 209.5723 1146.2119 208.3896 1147.1523 c
207.207 1148.0918 205.8652 1148.8623 204.3691 1149.4609 c
202.8701 1150.0605 201.3008 1150.5215 199.6602 1150.8467 c
194.7822 1151.7461 190.2617 1153.4951 186.0996 1156.0947 c
185.7422 1156.3008 185.3682 1156.7275 184.9775 1157.373 c
184.5859 1158.0186 184.4014 1158.6328 184.4219 1159.2158 c
184.4961 1161.3506 184.9297 1163.4814 185.7197 1165.6045 c
186.5098 1167.7275 187.4863 1169.376 188.6445 1170.5518 c
190.5098 1172.5029 193.8057 1174.1504 198.5313 1175.4922 c
203.2559 1176.834 208.5439 1177.4033 214.3945 1177.2002 c
217.8887 1177.0781 220.5801 1176.7168 222.4668 1176.1172 c
224.3535 1175.5166 225.2773 1174.6572 225.2402 1173.541 c
225.1758 1171.7207 224.8779 1170.3213 224.3457 1169.3438 c
223.8145 1168.3662 223.2559 1167.7236 222.6738 1167.415 c
222.0928 1167.1074 221.0762 1166.6992 219.625 1166.1914 c
218.0762 1165.71 216.7285 1165.1982 215.5801 1164.6553 c
214.4297 1164.1113 213.4453 1163.5869 212.626 1163.0811 c
211.8066 1162.5742 211.2988 1162.3252 211.1055 1162.332 c
210.8633 1162.3408 210.7451 1162.4414 210.752 1162.6367 c
210.7656 1163.0488 211.2188 1163.6592 212.1094 1164.4668 c
213 1165.2734 214.0879 1165.9697 215.3721 1166.5576 c
216.7305 1167.2148 217.415 1167.6406 217.4219 1167.8359 c
217.4326 1168.1504 216.6973 1168.335 215.2168 1168.3857 c
210.7266 1168.543 206.5615 1168.2871 202.7227 1167.6182 c
198.8838 1166.9502 195.8438 1165.998 193.6016 1164.7646 c
191.3594 1163.5303 190.2148 1162.2334 190.166 1160.875 c
190.1367 1160.0244 190.5703 1159.4082 191.4688 1159.0244 c
192.3672 1158.6406 194.3555 1157.9824 197.4336 1157.0488 c
200.5117 1156.1152 203.2578 1155.0713 205.6729 1153.918 c
209.1387 1152.29 211.6953 1150.6338 213.3359 1148.9492 c
214.9795 1147.2627 215.7656 1145.4121 215.6953 1143.3984 c
215.6465 1142.0146 215.2656 1140.6357 214.5488 1139.2646 c
213.832 1137.8916 212.8105 1136.6445 211.4844 1135.5254 c
210.1563 1134.4043 208.6426 1133.498 206.9414 1132.8037 c
205.4883 1132.2471 203.666 1131.7393 201.4746 1131.2803 c
199.2842 1130.8223 196.9141 1130.4854 194.3682 1130.2705 c
191.8203 1130.0557 189.3945 1129.9883 187.0889 1130.0684 c
182.8398 1130.2168 179.4385 1130.7363 176.8809 1131.6279 c
174.3232 1132.5186 173.0732 1133.7773 173.1299 1135.4033 c
173.1553 1136.1309 173.6309 1137.25 174.5586 1138.7617 c
175.4863 1140.2725 176.5537 1141.2744 177.7627 1141.7666 c
178.8203 1142.1426 179.8359 1142.3447 180.8096 1142.3721 c
181.7813 1142.3984 182.2637 1142.2666 182.2539 1141.9756 c
182.252 1141.9023 182.2119 1141.8311 182.1367 1141.7607 c
182.0615 1141.6895 181.9746 1141.6328 181.875 1141.5869 c
181.7764 1141.542 181.6777 1141.4971 181.5801 1141.4512 c
181.0869 1141.2744 180.6875 1141.1367 180.3799 1141.0371 c
180.0723 1140.9395 179.8262 1140.8389 179.6406 1140.7354 c
179.4551 1140.6328 179.3584 1140.4834 179.3516 1140.29 c
179.333 1139.7813 181.8379 1139.4375 186.8613 1139.2627 c
191.2305 1139.1104 194.8164 1139.1436 197.6191 1139.3613 c
200.4219 1139.5801 202.9043 1140.0645 205.0703 1140.8154 c
207.2344 1141.5664 209.2168 1142.6396 211.0156 1144.0352 c
f
U
u
226.0215 1150.9854 m
229.8271 1154.207 233.4941 1156.5693 237.0215 1158.0752 c
240.5498 1159.5801 243.2598 1160.3008 245.1543 1160.2344 c
245.6631 1160.2168 246.1289 1159.9873 246.5508 1159.5479 c
246.9736 1159.1074 247.3018 1158.6045 247.5371 1158.0371 c
247.7734 1157.4697 247.8867 1157.0527 247.877 1156.7861 c
247.8613 1156.3486 247.6807 1156.0332 247.334 1155.8389 c
246.9863 1155.6436 246.3828 1155.416 245.5234 1155.1543 c
245.6797 1154.7607 245.8809 1154.2549 246.127 1153.6387 c
246.373 1153.0225 246.5625 1152.5244 246.6943 1152.1426 c
246.8271 1151.7607 246.8887 1151.4258 246.8779 1151.1338 c
246.8574 1150.5508 246.2305 1149.4844 244.998 1147.9375 c
243.7656 1146.3877 242.9004 1145.2451 242.4004 1144.5088 c
241.9004 1143.7734 241.6309 1142.8594 241.5938 1141.7666 c
241.5313 1139.9707 242.3242 1139.0439 243.9766 1138.9873 c
245.6758 1138.9277 248.3877 1140.4238 252.1152 1143.4775 c
252.0381 1141.2568 L
245.6602 1134.6504 241.1465 1131.3936 238.502 1131.4844 c
237.5547 1131.5176 236.8926 1131.8516 236.5137 1132.4844 c
236.1348 1133.1172 235.9658 1134.04 236.0078 1135.2539 c
236.0742 1137.1709 236.8633 1139.9268 238.373 1143.5195 c
234.6934 1139.7109 231.9619 1137.0039 230.1807 1135.4023 c
228.3984 1133.7988 226.9492 1133.0176 225.834 1133.0566 c
225.2988 1133.0752 224.6484 1133.5596 223.8789 1134.5098 c
223.1094 1135.459 222.4414 1136.6797 221.874 1138.1709 c
221.3066 1139.6602 221.0498 1141.1943 221.1055 1142.7725 c
221.1445 1143.9131 221.2871 1144.8623 221.5332 1145.6191 c
221.7773 1146.376 222.2295 1147.1445 222.8887 1147.9229 c
223.5469 1148.7021 224.5918 1149.7227 226.0215 1150.9854 c
f
1 D
243.6006 1154.3838 m
237.1895 1151.7139 232.6074 1149.4189 229.8555 1147.498 c
227.1016 1145.5771 225.6885 1143.5479 225.6152 1141.4121 c
225.5879 1140.6348 225.6982 1139.9932 225.9492 1139.4863 c
226.1982 1138.9795 226.5537 1138.7188 227.0156 1138.7021 c
227.2813 1138.6924 227.7617 1138.8457 228.4531 1139.1631 c
231.0537 1140.5791 233.4521 1142.457 235.6484 1144.7988 c
237.8438 1147.1416 240.4951 1150.3359 243.6006 1154.3838 c
f
U
u
0 D
269.209 1143.3564 m
269.1152 1140.6621 L
263.8066 1134.1152 259.5645 1130.8975 256.3848 1131.0078 c
254.6602 1131.0684 253.3398 1132.0557 252.4219 1133.9707 c
251.5039 1135.8867 251.0996 1138.374 251.207 1141.4316 c
251.292 1143.9082 251.9775 1146.8301 253.2617 1150.2002 c
254.5449 1153.5703 256.2246 1156.9746 258.3018 1160.415 c
260.377 1163.8535 262.5107 1166.8418 264.7012 1169.3779 c
266.8916 1171.9141 268.9033 1173.6729 270.7363 1174.6543 c
271.4805 1175.0654 272.0576 1175.2637 272.4707 1175.25 c
272.9805 1175.2314 273.3125 1174.9951 273.4658 1174.541 c
273.6201 1174.085 273.6787 1173.3125 273.6406 1172.2197 c
273.5234 1168.8457 272.0078 1164.749 269.0938 1159.9287 c
266.1777 1155.1094 262.1807 1150.2236 257.0996 1145.2725 c
256.8125 1144.0195 256.6582 1143.0518 256.6348 1142.373 c
256.5801 1140.8193 256.8691 1139.5449 257.5039 1138.5518 c
258.1367 1137.5566 259.0488 1137.04 260.2383 1136.998 c
260.8447 1136.9766 261.5078 1137.1904 262.2285 1137.6396 c
262.9492 1138.0879 263.709 1138.6504 264.5117 1139.3281 c
265.3125 1140.0049 266.8789 1141.3477 269.209 1143.3564 c
f
1 D
258.5508 1150.29 m
259.8555 1151.4834 261.125 1152.8486 262.3564 1154.3857 c
263.5889 1155.9229 264.7578 1157.5703 265.8652 1159.3311 c
266.9707 1161.0908 267.8457 1162.6758 268.4902 1164.0869 c
269.1357 1165.499 269.4707 1166.5684 269.4961 1167.2969 c
269.5156 1167.8555 269.3301 1168.1406 268.9424 1168.1553 c
268.7969 1168.1602 268.5127 1168.0361 268.0908 1167.7832 c
266.5684 1166.6211 264.8223 1164.3066 262.8555 1160.8389 c
260.8867 1157.3721 259.4512 1153.8545 258.5508 1150.29 c
f
U
u
0 D
274.6465 1141.4541 m
274.6152 1140.5439 L
274.5654 1139.1113 274.8779 1137.9824 275.5547 1137.1572 c
276.2305 1136.332 277.1387 1135.8994 278.2793 1135.8594 c
279.4688 1135.8184 280.7109 1136.0537 282.0039 1136.5674 c
283.2979 1137.0811 284.5928 1137.7773 285.8867 1138.6563 c
287.1807 1139.5342 288.7656 1140.7188 290.6406 1142.209 c
290.5625 1139.9883 L
287.7041 1136.7822 285.0439 1134.3408 282.5801 1132.665 c
280.1152 1130.9902 277.6445 1130.1943 275.1689 1130.2803 c
273.0078 1130.3564 271.3262 1131.2529 270.123 1132.9717 c
268.9189 1134.6904 268.3672 1137.0068 268.4688 1139.9189 c
268.5576 1142.4678 269.2334 1144.7598 270.4941 1146.7939 c
271.7559 1148.8271 273.7744 1150.9502 276.5488 1153.1621 c
278.4492 1154.6758 280.3223 1155.8008 282.1719 1156.5391 c
284.0195 1157.2764 285.6602 1157.6201 287.0918 1157.5703 c
288.2324 1157.5313 289.1279 1157.2383 289.7773 1156.6934 c
290.4268 1156.1475 290.7344 1155.3535 290.6973 1154.3105 c
290.6445 1152.7813 290.0195 1151.2773 288.8262 1149.7998 c
287.6328 1148.3223 285.8398 1146.8789 283.4453 1145.4668 c
281.0498 1144.0557 278.1172 1142.7188 274.6465 1141.4541 c
f
1 D
275.0938 1143.8076 m
277.3066 1144.5811 279.2129 1145.5713 280.8105 1146.7803 c
282.4082 1147.9873 283.5967 1149.1553 284.3779 1150.2832 c
285.1582 1151.4102 285.5586 1152.2412 285.5762 1152.7744 c
285.5967 1153.333 285.3516 1153.6211 284.8408 1153.6387 c
284.4043 1153.6543 283.6836 1153.3994 282.6816 1152.875 c
281.6797 1152.3516 280.6582 1151.6582 279.6201 1150.7949 c
278.582 1149.9316 277.6406 1148.9072 276.7969 1147.7227 c
275.9531 1146.5361 275.3857 1145.2314 275.0938 1143.8076 c
f
U
*U
U
U
LB
%AI5_EndLayer--
%AI3_BeginCrops
userdict /AI3_noCropMarks known not {
0 A
u
u
0 D
0 R
0.858823 0.85098 0.788235 1 ([\721\756\742\754\745\771\745\755\750\745] 1) 0 XS
0 J 0 j 0.5 w 4 M []0 d0 XR
-9 0 m
-36 0 L
S
0 -9 m
0 -36 L
S
U
u
-9 1200 m
-36 1200 L
S
0 1209 m
0 1236 L
S
U
u
1209 1200 m
1236 1200 L
S
1200 1209 m
1200 1236 L
S
U
u
1209 0 m
1236 0 L
S
1200 -9 m
1200 -36 L
S
U
U
} if
%AI3_EndCrops
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
