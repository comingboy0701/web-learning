%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 11.0.0
%%For: (4 44) ()
%%Title: (FOUR ELEMENTS.eps)
%%CreationDate: 3/5/2009 2:19 PM
%%BoundingBox: 288 335 4780 4741
%%HiResBoundingBox: 288.8394 335.3066 4779.4424 4740.9565
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 2 3 () 
%AI3_TemplateBox: 2500.5 2498.5 2500.5 2498.5
%AI3_TileBox: 2211.3999 2086.5 2788.5999 2914.8599
%AI3_DocumentPreview: Header
%AI5_ArtSize: 5000 5000
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -1587 5090 0.12 1013 654 26 1 0 10 82 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (\317\353\340\343\350\355 \317\345\360\345\365\356\344) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\321\356\361\362\340\342\355\340\377 \364\356\360\354\340 Adobe) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI5_End_NonPrinting--
31 Bn
%AI5_BeginGradient: (Unnamed gradient)
(Unnamed gradient) 0 2 Bd
[
<
0000020203040405060707080809090A0B0B0B0C0C0D0D0E0E0F1010101111121212131313131414
1415151616161616171718181818181919191A1A1B1B1B1B1B1C1C1C1D1D1E1E1F1F1F2020212121
222223232324242525262626272728282829292A2A2A2B2B2C2C2C2D2D2E2E2F2F2F303031313132
3233333334343535353636373738383839393A39393A3A3B3C3C3D3D3E3E3F3F3F40404141414242
43434344444545454646474748484849494A4A4A4B4B4C4C4C4D4C4D4E4F4F4F5050515151525253
535354545555555656565657575758585959
>
0
<
00010203030405060708090A0B0C0C0D0E0F101112131415161718191A1B1C1D1E1E202122232425
26262728292B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344464748494A4B4C4D4E
4F5052535455565758595A5C5D5E5F6061626365666768696A6B6C6E6F7071727374767778797A7B
7C7E7F7F81828384858687888A8B8C8D8E8F90929394959697989A9B9C9D9E9FA0A2A3A4A5A6A7A9
AAABACADAEB0B1B2B3B4B6B7B8B9BABBBCBEBFC0C1C2C3C4C6C7C8C9CACCCDCECFD1D2D3D4D5D7D8
D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EA
>
0
<
FFFFFEFEFDFDFDFCFCFBFBFAFAFAF9F9F8F8F8F7F7F6F6F6F5F5F4F4F4F3F3F2F2F1F1F1F0F0EFEF
EFEEEEEDEDEDECECEBEBEAEAEAE9E9E8E8E8E7E7E6E6E6E5E5E4E4E4E3E3E2E2E1E1E1E0E0DFDFDF
DEDEDDDDDDDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCE
CECDCDCDCCCCCBCBCBCACAC9C9C8C8C8C7C7C6C6C6C5C5C4C4C4C3C3C2C2C1C1C1C0C0BFBFBFBEBE
BDBDBDBCBCBBBBBBBABAB9B9B8B8B8B7B7B6B6B6B5B5B4B4B4B3B3B2B2B1B1B1B0B0AFAFAFAEAEAD
ADADACACABABABAAAAA9A9A8A8A8A7A7A6A6
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A29282726
>
4 %_Br
[
0.349 0 0.9176 0 0.651 0.9686 0.149 2 50 73.5955 %_BS
%_0.349 0 0.9176 0 0.651 0.9686 0.149 2 50 73.5955 Bs
0 0 0 0 1 1 1 2 50 0.5618 %_BS
%_0 0 0 0 1 1 1 2 50 0.5618 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909080808080808070707070707070707070707
0707070707070707070707070808080808090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A09
09090909090909090909090909090908080808080808080808090909090909090A0A0A0A0A0A0A0A
0A0A0A0A09090909090909090909090909090909090909090909090909090909090909090A0A0A0A
0A0A0909090909090909090909090909090909090909090909090909090909090909090909090909
09090909090909090908080808080808080808080808080808080808080808080808090909090909
09090909090909090909090909090909090808080808080808070707
>
<
1E1E1E1E1F1F1F1F20202021212123232424242525252626272729292A2A2A2B2B2C2C2D2D2E2E2F
2F303131323233333434353536373737373838393A3A3B3B3C3D3D3E3F3F40404142424344444546
464749494A4B4B4C4D4D4E4F4F50515252535454555656575859595A5B5C5C5D5E5F5F6061626263
64656566676868696A6B6C6C6D6E6F6F70717274747576777878797A7B7C7D7D7E7F808182828384
8586878788898A8B8C8D8D8E8F909192939394959697999A9B9B9C9D9E9FA0A1A2A3A3A4A5A6A7A8
A9AAABACADADAEB0B1B2B3B4B5B6B7B8B9BABABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCDCECECF
D0D2D3D4D5D6D7D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEAEBEC
>
<
EEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F3F3
F3F3F3F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0F0EFEFEFEFEEEEEEEEEDEDEDEDEDECECECECECECEB
EBEBEBEBEBEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7
E7E7E7E7E7E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6
E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
0.0039
0.9765
<
DCDCDCDCDBDBDBDBDADADAD9D9D9D8D8D7D7D7D6D6D6D5D5D4D4D3D3D2D2D2D1D1D0D0CFCFCECECD
CDCCCBCBCACAC9C9C8C8C7C7C6C5C5C4C4C3C3C2C1C1C0C0BFBEBEBDBCBCBBBBBAB9B9B8B7B7B6B5
B5B4B3B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A6A5A4A3A3A2A1A0A09F9E9D9D9C9B9A9A99
9897979695949493929190908F8E8D8D8C8B8A898988878685858483828180807F7E7D7C7B7B7A79
78777676757473727170706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A59585756
555453525151504F4E4D4C4B4A49484746454544434241403F3E3D3C3B3A39383736353433323231
302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A1918171615
>
0.0431
4 %_Br
[
0.0275 0.9255 0.9098 0.0039 0.9765 0.0824 0.0431 2 50 56.1798 %_BS
%_0.0275 0.9255 0.9098 0.0039 0.9765 0.0824 0.0431 2 50 56.1798 Bs
0.0392 0.1176 0.9333 0.0039 0.9765 0.8627 0.0431 2 59.7561 10.1124 %_BS
%_0.0392 0.1176 0.9333 0.0039 0.9765 0.8627 0.0431 2 59.7561 10.1124 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 10)
(Unnamed gradient 10) 0 2 Bd
[
<
00010203040506070809090A0B0C0D0E0F10111213141516161718191A1B1B1C1D1E1F2021212223
24252627282828292A2B2C2D2D2E2F3030313132333435353637383838393A3B3B3C3D3D3E3F3F3F
404141424243444444444545464647474848
>
<
0001010203030404050606070808090A0A0B0C0C0D0E0E0F0F101011111213131415151617171718
19191A1B1B1C1C1D1D1E1E1F1F20202122222223242425252526272727282929292A2B2B2B2C2C2C
2D2E2E2E2E2F303030303131313132323333
>
<
00000101020203030404050506060707080809090A0A0B0B0B0C0C0D0D0E0E0F0F10101111111213
13141415151616161717181919191A1A1B1B1B1C1D1D1E1E1E1F1F20202121222222232323242525
25262626262728282828292929292A2A2B2B
>
<
00000000000000000000000000000000000000000000000101010101010101010101010101010202
02020202020202020202030303030303030404040404040404040505050505050505060606060606
070707070707080808080808090909090909
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDA
D9D8D7D6D5D4D4D3D2D1D0CFCFCECDCCCBCACAC9C8C7C6C6C5C4C3C2C2C1C0BFBFBEBDBDBCBBBABA
B9B8B8B7B7B6B5B5B4B4B3B3B2B2B1B1B0B0
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDA
D9D8D7D6D5D4D4D3D2D1D0CFCFCECDCCCBCACAC9C8C7C6C6C5C4C3C2C2C1C0BFBFBEBDBDBCBBBABA
B9B8B8B7B7B6B5B5B4B4B3B3B2B2B1B1B0B0
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDA
D9D8D7D6D5D4D4D3D2D1D0CFCFCECDCCCBCACAC9C8C7C6C6C5C4C3C2C2C1C0BFBFBEBDBDBCBBBABA
B9B8B8B7B7B6B5B5B4B4B3B3B2B2B1B1B0B0
>
4 %_Br
[
0.2824 0.2 0.1686 0.0353 0.6902 0.6902 0.6902 2 50 100 %_BS
%_0.2824 0.2 0.1686 0.0353 0.6902 0.6902 0.6902 2 50 100 Bs
0 0 0 0 1 1 1 2 42.8571 15.7303 %_BS
%_0 0 0 0 1 1 1 2 42.8571 15.7303 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 11)
(Unnamed gradient 11) 0 2 Bd
[
<
0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0D0D0E0E0E0E0E0E0E0E0E
0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F1010101010101010100F0F0F101010101010101010101010
11111111111111111111111112121212121212121212121212121212121212121212121212131313
13131313131313131314141414141414141414141415151515151515
>
<
5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F818283848586
8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC1C2C3C4C5C6C7C8C9CACBCBCCCDCECFD1D2D3D4D6D7D8D9
DADBDCDDDEDFE0E1E1E2E3E4E4E5E6E6E7E8E8E9E9EAEAEAEBEBECEC
>
<
EDEDECECECECECEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECED
EDEDEDEEEEEEEEEEEEEFEFEFEFF0F0F0F0F0F0F0F0F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4
>
<
01010101010101010101010101020202020202020202020202020201010101010101010101010101
01010102020202020202020202020202020202020202020202020101010101010101010202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020303030303030303030303030303030303030303030303
>
<
F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1
F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEE
EDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEAEAEA
EAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8
>
<
9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776
7574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E
4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726
2524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
>
<
08080808080808080808070707070707070707070707070707070707060606060606060606060606
06060606060605050505050505050505050505050505050505040404040404040404040404040404
04040403030303030303030303030303030303030303020202020202020202020202020202020202
01010101010101010101010101010101010100000000000000000000
>
4 %_Br
[
0.0824 0.9255 0.9569 0.0118 0.9098 0.0392 0 2 50 69.1011 %_BS
%_0.0824 0.9255 0.9569 0.0118 0.9098 0.0392 0 2 50 69.1011 Bs
0.0471 0.3686 0.9294 0.0039 0.9569 0.6157 0.0314 2 50 25.8427 %_BS
%_0.0471 0.3686 0.9294 0.0039 0.9569 0.6157 0.0314 2 50 25.8427 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 12)
(Unnamed gradient 12) 0 2 Bd
[
<
00010203040506070809090A0B0C0D0E0F101112131415161718191A1B1B1C1D1E1F202122232425
272828292A2B2C2D2E2F3030313233343536373838393A3B3C3D3E3F3F40414243444445464748
>
<
0001010203030404050606070808090A0A0B0C0C0D0E0E0F10101111121313141515161717181919
1B1B1C1D1D1E1E1F202021222223242425252627272829292A2B2B2C2C2D2E2E2F303031313233
>
<
00000101020203030404050506060707080809090A0A0B0B0C0C0D0D0E0E0F0F1010111112131314
1515161617171819191A1A1B1B1C1D1D1E1E1F1F20212122222323242525262627282829292A2B
>
<
00000000000000000000000000000000000000000000000101010101010101010101010102020202
020202020202030303030303040404040404040505050505050606060607070707080808090909
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
>
4 %_Br
[
0.2824 0.2 0.1686 0.0353 0.6902 0.6902 0.6902 2 50 75.2809 %_BS
%_0.2824 0.2 0.1686 0.0353 0.6902 0.6902 0.6902 2 50 75.2809 Bs
0 0 0 0 1 1 1 2 50 25.8427 %_BS
%_0 0 0 0 1 1 1 2 50 25.8427 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 13)
(Unnamed gradient 13) 0 2 Bd
[
<
E5E6E8E9E9E9EAEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E9E9E9EAEAEBEBECECEDEEEFF0
F1F2F2F3F4F5F6F7F8F8F8F7F6F5F4F4F3F3F1F1F0F1F0EFEFEEEFEEEEEEEEEEEDEDEDEDEDEDEDED
EEEEEEEEEEEFEEEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F2F2F2F3F3F3F3
F4F3F4F5F5F5F5F6F6F7F7F8F7F8F8F8F9F9FAFAFBFBFCFCFCFDFDFDFEFEFEFEFEFCFCFCFDFCFCFC
FBFBFBFBFBFAFAFAFAFA
>
<
3334353638393A3B3D3E404243454648494B4D4E4E505153545658595A5C5D5E6060616264656667
696A6A6B6C6E6F7071717374767779797A7C7D7F8080828385878688898B8B8C8E8F919192949595
979898999B9C9C9D9F9FA0A1A3A3A5A6A6A8A9A9ABACACAEAEAFB1B1B3B4B4B5B5B7B7B8BABABBBB
BDBDBEBFBFC1C1C2C2C3C3C5C5C6C6C6C7C7C8C8C9C9CBCBCBCCCCCCCDCDCFCFCFD1D1D1D1D3D3D3
D5D5D5D5D5D7D7D7D7D7
>
0
0
0.0118
<
8E8D8C8B8A898887868584838281807F7E7D7C7B7B7A797877767574737271706F6F6E6D6C6B6A69
68676766656463626161605F5E5D5C5C5B5A595857575655545353525150504F4E4D4C4C4B4A4949
4847474645444443424241403F3F3E3D3D3C3B3B3A39393838373636353434333332323130302F2F
2E2E2D2C2C2B2B2A2A2929282827272726262525242423232322222221212020201F1F1F1F1E1E1E
1D1D1D1D1D1C1C1C1C1C
>
<
FFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECECEB
EBEAEAE9E9E9E8E8E7E7E6E6E5E5E4E4E4E3E3E2E2E1E1E1E0E0DFDFDEDEDEDDDDDCDCDCDBDBDADA
DAD9D9D8D8D8D7D7D6D6D6D5D5D5D4D4D4D3D3D2D2D2D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCC
CCCBCBCBCBCACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C6C5C5C5C5C5C4C4C4C4C4C4C3C3C3C3
C3C3C3C2C2C2C2C2C2C2
>
4 %_Br
[
0.9804 0.8431 0 0 0.0118 0.1098 0.7608 2 50 100 %_BS
%_0.9804 0.8431 0 0 0.0118 0.1098 0.7608 2 50 100 Bs
0.898 0.2 0 0 0.0118 0.5569 1 2 37.2881 0 %_BS
%_0.898 0.2 0 0 0.0118 0.5569 1 2 37.2881 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 14)
(Unnamed gradient 14) 0 3 Bd
[
<
E5E6E8E9E9E9EAEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E8E8E9E9E9EAEAEBECECEDEEEFF1F2F3
F4F5F6F7F8F7F7F5F5F4F3F3F1F1F0F0EFEFEEEEEEEEEEEDEDEDEDEDEDEEEEEEEE
>
<
3334353638393A3B3D3E404243454648494B4D4E505153545657595A5C5D5E606162646566696A6B
6C6E6F707173747677797A7C7D7F808283858788898B8C8E8F919294959798999B
>
0
0
0.0118
<
8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A686766
6564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948474645
>
<
FFFEFEFDFDFCFCFBFBFAFAF9F9F8F7F7F6F6F5F5F4F4F3F3F2F1F1F0F0EFEFEEEEEDEDECECEBEAEA
E9E9E8E8E7E7E6E6E5E4E4E3E3E2E2E1E1E0E0DFDFDEDDDDDCDCDBDBDADAD9D9D8
>
4 %_Br
<
16161616171717171818181919191A1A1A1B1B1C1C1C1D1D1E1E1E1F1F2020212122222323242425
252626282829292A2A2B2B2C2C2D2E2E2F2F30303132323333343435363637383839393A3B3B3C3D
3D3F3F404141424343444545464747494A494A4B4B4C4D4E4E4F5050515252535455555657575859
5A595A5B5C5C5D5E5F5F6061626263646666676869696A6B6C6D6D6F707172727375767777787A7B
7C7D7E7F8081818283848586868788898A8B8B8C8D8E8F90909192929394959595969798999A9A9B
9C9D9E9FA0A1A1A2A3A4A5A6A7A8A8A9AAACADAEAFB0B1B3B3B4B5B6B7B9BABBBDBEBFC0C1C2C3C4
C5C7C8CACBCCCDCED0D1D2D3D4D5D6D8D9DADCDCDDDDDEDEDDDEDDDEDDDDDDDDDDDDDDDDDDDDDDDD
DDDEDDDEDEDEDEDFDFDFDFE0E0E1E1E1E2E3E3E4E4E5E5
>
<
06060606060606060606060606060606060606070707070707070707070707070707080707070708
08080808080808080808080909080809090908090909090909090A0909090A09090A0A0A090A0A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0A0A0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0B0B0C0C0C0C0C
0C0D0C0C0D0D0C0D0C0C0D0D0C0D0D0D0D0D0D0D0D0E0D0D0E0D0D0E0D0D0D0D0D0D0D0D0D0D0D0D
0C0D0D0D0D0C0E0D0D0E0D0E0E0E0F0E0E0F0F0F0F0F100F10101011101111111211111211121212
12121312121313141314131314131514141514151514151516151616151616161616161617171817
17171718171818171818191919191919191A1A1B1A1C1C1B1D1D1F1E202022222123232524262627
272729282A2A2B2B2D2C2E2E2E2F2F3030313132323333
>
<
05050505050505050505050505050505050505050505050505050505050505060606060606060606
06060606060606050505050505050505050505050505050505050404040404040404040403030303
03030302020202010101010101010000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000
>
0
<
E5E5E5E5E4E4E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDBDBDADAD9D9D8D8D7D7D6
D6D5D5D4D4D3D3D2D2D1D1D0D0CFCECECDCDCCCCCBCACAC9C9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BF
BFBEBEBDBCBCBBBABAB9B8B8B7B6B6B5B4B4B3B2B2B1B0AFAFAEADADACABABAAA9A8A8A7A6A6A5A4
A3A3A2A1A0A09F9E9D9D9C9B9A9A999897979695949493929190908F8E8D8C8C8B8A898888878685
848483828180807F7E7D7C7B7B7A7978777676757473727171706F6E6D6C6B6B6A69686766656564
636261605F5E5E5D5C5B5A59585757565554535251504F4E4E4D4C4B4A4948474645444343424140
3F3E3D3C3B3A39383736363534333231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A
191817161514131211100F0E0D0C0B0A09080706050403
>
<
F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0EF
EFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5
E4E4E4E4E3E3E3E2E2E2E1E1E1E1E0E0E0DFDFDFDEDEDEDDDDDDDCDCDCDBDBDBDADADAD9D9D9D8D8
D8D7D7D7D6D6D6D5D5D5D4D4D4D3D3D3D2D2D2D1D1D0D0D0CFCFCFCECECECDCDCDCCCCCBCBCBCACA
CAC9C9C8C8C8C7C7C7C6C6C5C5C5C4C4C4C3C3C2C2C2C1C1C0C0C0BFBFBEBEBEBDBDBDBCBCBBBBBB
BABAB9B9B9B8B8B7B7B6B6B6B5B5B4B4B4B3B3B2B2B2B1B1B0B0AFAFAFAEAEADADADACACABABAAAA
AAA9A9A8A8A7A7A7A6A6A5A5A4A4A4A3A3A2A2A1A1A0A0A09F9F9E9E9D9D9C9C9C9B9B9A9A999998
989897979696959594949393939292919190908F8F8E8E
>
1
4 %_Br
[
0.9333 0.6078 0 0 0.0118 0.2706 0.8471 2 50 100 %_BS
%_0.9333 0.6078 0 0 0.0118 0.2706 0.8471 2 50 100 Bs
0.898 0.2 0 0 0.0118 0.5569 1 2 50 56.1798 %_BS
%_0.898 0.2 0 0 0.0118 0.5569 1 2 50 56.1798 Bs
0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 59.5959 0 %_BS
%_0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 59.5959 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 15)
(Unnamed gradient 15) 0 2 Bd
[
<
00010203040506070809090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F20212223242526
272828292A2B2C2D2E2F3030313233343536
>
<
0001010203030404050606070808090A0A0B0C0C0D0E0E0F1010111112131415151617171819191A
1B1B1C1D1D1E1E1F20202122222324242525
>
<
00000101020203030404050506060707080809090A0A0B0B0C0C0D0D0E0F0F101011111213131414
1515161617171819191A1A1B1B1C1D1D1E1E
>
<
00000000000000000000000000000000000000000000000101010101010101010101010202020202
020202020202030303030303040404040404
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5
>
4 %_Br
[
0.2118 0.1451 0.1176 0.0157 0.7725 0.7725 0.7725 2 50 100 %_BS
%_0.2118 0.1451 0.1176 0.0157 0.7725 0.7725 0.7725 2 50 100 Bs
0 0 0 0 1 1 1 2 50 16.8539 %_BS
%_0 0 0 0 1 1 1 2 50 16.8539 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 16)
(Unnamed gradient 16) 0 3 Bd
[
<
E5E6E8E9E9E9EAEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E8E8E9E9E9EAEAEBECECEDEEEFF0F1F2
F3F4F5F6F7F8F8F7F6F5F4F4F3F2F1F1F0EFEEEEEEEEEDEDEDEDEDEDEDEEEEEEEEEFEFF0F0F0F0F0
F0F0F0F0F0F0F0F1F1F1F1F2F2F3F3F4F4F5F5F6F7F7F8F9FAFBFCFDFEFEFCFCFBFA
>
<
3334353638393A3B3D3E404243454648494B4D4E505153545658595A5C5D5E60616264656667696A
6B6C6E6F707173747677797A7C7D7F8082858788898B8C8E8F919294959798999B9C9D9FA0A1A3A5
A6A8A9ABACAEB0B1B3B4B5B7B8BABBBDBEBFC1C2C3C5C6C7C8C9CBCCCDCFD1D3D5D7
>
0
0
0.0118
<
8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867
666564636261605F5E5D5C5B5A5958575654535251504F4E4D4C4B4A494847464544434241403F3E
3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C
>
<
FFFEFEFDFDFCFCFBFBFAFAF9F9F8F7F7F6F6F5F5F4F4F3F3F2F2F1F0F0EFEFEEEEEDEDECECEBEAEA
E9E9E8E8E7E7E6E6E5E5E4E3E3E2E2E1E1E0E0DFDFDEDEDDDCDCDBDBDADAD9D9D8D8D7D7D6D5D5D4
D4D3D3D2D2D1D1D0CFCFCECECDCDCCCCCBCBCACAC9C8C8C7C7C6C6C5C5C4C4C3C3C2
>
4 %_Br
<
5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B
5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B
5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C
5C5C5C5C5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5E5E5E5E5E5E5E5E5E5E5E5E5F5F5F5F5F5F5F5F
5F606060606060606061616161616162626262626263636363636364646464646666666667676767
67686868686969696A6A6A6A6B6B6B6C6C6C6D6D6D6E6E6E70707071717172727373737575767676
77777878797A7B7B7C7C7E7E7F7F80808181828283848485858686878888898A8A8B8C8C8D8E8E8F
9091919293939394959696969798999A9B9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABADAEAFB0B1B3
B4B5B7B9BABBBDBEC0C2C3C4C7C8CACBCDCFD0D3D4D5D8D9DCDCDEDEDDDEDDDDDDDDDDDDDEDDDDDE
DEDEDEDFDFE0E1E1E3E3E4E5
>
<
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D
0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0C0D0D0D0D0D0D0D
0D0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D
0C0D0D0D0C0D0D0D0C0C0D0D0C0C0D0D0C0C0D0D0D0D0E0D0D0E0E0E0D0F0E0E0F0F0E0E0F0F0F10
0F0F10100F1010111110111111121112121212121312121312131313131413141413141415141515
1515151616161617161716171717181718191819181919191A1B1A1C1D1D1F202021232524262727
282A2B2D2C2E2F3031313233
>
0
0
<
A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1
A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1
A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0
A0A0A0A09F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D
9D9C9C9C9C9C9C9C9C9B9B9B9B9B9B9A9A9A9A9A9A99999999999998989898989797979796969696
9695959595949494939393939292929191919090908F8F8F8E8E8E8D8D8D8C8C8B8B8B8A8A898989
8888878786868585848483838282818180807F7F7E7D7D7C7C7B7B7A797978777776757574737372
7170706F6E6D6D6C6B6A6969686766656464636261605F5E5D5C5B5A595857565554535251504F4E
4D4C4A4948474645434241403E3D3C3B39383735343331302E2D2B2A292726242321201E1C1B1918
161413110F0E0C0A08070503
>
<
D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7
D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7
D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D6D6D6D6D6
D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D5D5
D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2
D2D2D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0CFCFCFCFCFCFCECECECECECECDCDCDCDCDCCCCCCCCCC
CCCBCBCBCBCACACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C5C5C5C5C4C4C4C3C3C3C3C2C2C2C1
C1C1C0C0C0BFBFBEBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B6B6B5B5B4B4B4B3B3B2B2B1B1
B0B0AFAEAEADADACACABABAAA9A9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9A9A999898
979695949493929190908F8E
>
1
4 %_Br
[
0.9804 0.8431 0 0 0.0118 0.1098 0.7608 2 50 100 %_BS
%_0.9804 0.8431 0 0 0.0118 0.1098 0.7608 2 50 100 Bs
0.898 0.2 0 0 0.0118 0.5569 1 2 50 52.2472 %_BS
%_0.898 0.2 0 0 0.0118 0.5569 1 2 50 52.2472 Bs
0.3569 0.0471 0 0 0.6314 0.8431 1 2 84.9315 0.5618 %_BS
%_0.3569 0.0471 0 0 0.6314 0.8431 1 2 84.9315 0.5618 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 17)
(Unnamed gradient 17) 0 2 Bd
[
<
595A5B5C5D5E5F60616263646566676868696A6B6C6D6E6F70717273747576767778797A7B7C7D7E
7F7F80818283848585868788898A8B8B8C8D8E8F8F909192939394959696979898999A9B9B9C9D9D
9E9E9FA0A0A1A1
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000101000000000001010101010202020102020202020303030303030304040304
04040506060707
>
<
EAEAEAEAEAEBEBECECECECECECEDEDEDEDEDEEEEEEEFEFF0F0F1F1F2F2F2F3F3F3F4F4F5F5F6F6F7
F7F7F8F9F9FAFBFBFCFCFDFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFDFDFDFDFDFDFDFCFCFC
FCFCFCFCFCFCFC
>
0
<
A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89898887868584838281
80807F7E7D7C7B7A7A7978777675747473727170706F6E6D6C6C6B6A696968676766656464636262
6161605F5F5E5E
>
<
F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDAD9D8D7D6D5D4D3D2D1
D0D0CFCECDCCCBCAC9C8C8C7C6C5C4C3C2C2C1C0BFBEBDBDBCBBBABAB9B8B7B6B6B5B4B4B3B2B2B1
B0B0AFAEAEADAD
>
<
2626252525242423232322222221212120201F1F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1A19191918
181817171716161615151514141413131313121212111111101010100F0F0F0E0E0E0E0D0D0D0D0C
0C0C0C0C0B0B0B
>
4 %_Br
[
0.6314 0.0275 0.9882 0 0.3686 0.6784 0.0431 2 50 100 %_BS
%_0.6314 0.0275 0.9882 0 0.3686 0.6784 0.0431 2 50 100 Bs
0.349 0 0.9176 0 0.651 0.9686 0.149 2 44.5161 12.9213 %_BS
%_0.349 0 0.9176 0 0.651 0.9686 0.149 2 44.5161 12.9213 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 18)
(Unnamed gradient 18) 0 2 Bd
[
<
1617171818191A1A1B1C1C1D1E1F1F2021222223242525262829292A2B2C2D2D2E2F303131323334
3536363738393A3B3B3C3D3F4041414243444546474749494A4B4C4D4E4E4F505152535455555657
58595A5A5B5C5C5D5E5F606162636465666768696A6B6C6D6E7070717274757677787A7B7C7E7E7F
808182838485868788898A8B8B8C8D8E8F909192929394959696979899999A9B9C9D9E9FA0A1A2A3
A4A5A6A7A8A9AAACADAEAEAFB0B1B3B4B5B6B7B9BABBBDBEBFC1C2C3C4C5C7C8CACBCCCDCED0D1D3
D4D5D6D7D8D9DADCDCDDDDDEDDDDDCDDDEDDDDDDDDDDDDDDDDDDDDDEDDDEDDDEDEDEDEDFDFDFDFE0
E0E1E1E1E2E3E3E4E4E5E5
>
<
06060606060606060607070707070707070708070708080808080808080908080909080909090909
0909090A090A0A090A0A0A0A0A0A0A0A0A0A0A0A0A0B0A0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C
0B0C0C0C0C0D0D0C0D0C0D0D0C0D0D0D0D0D0D0D0D0D0E0D0D0D0D0E0D0E0D0D0D0D0D0D0C0D0D0D
0D0E0D0D0E0D0E0E0F0E0E0F0F0F0F10100F10101110111110111112111212131212131213131413
13131314131414151414151515151615161615161616161716171716171717171817181817181819
1819191A19191A1A1B1A1C1C1D1D1F1F1E2020222123232524262626272729282A2A2B2B2D2C2C2E
2E2F2F3030313132323333
>
<
05050505050505050505050505050505060606060606060606060505050505050505050505050505
04040404040404030303030302020202010101010100000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000
>
0
<
E5E4E4E3E3E2E1E1E0DFDFDEDDDCDCDBDAD9D9D8D7D6D6D5D4D3D3D2D1D0CFCFCECDCCCBCBCAC9C8
C7C6C6C5C4C3C2C1C1C0BFBEBDBCBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6
A5A4A3A2A1A0A09F9E9D9C9B9A99989897969594939291908F8E8E8D8C8B8A898887868584838382
81807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C
5B5A59585756555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635
3433323231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E
0D0C0B0A09080706050403
>
<
F6F6F6F5F5F5F4F4F4F3F3F3F2F2F2F1F1F1F0F0F0EFEFEFEEEEEDEDEDECECECEBEBEBEAEAE9E9E9
E8E8E8E7E7E6E6E6E5E5E4E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9
D9D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D2D1D1D0D0CFCFCFCECECDCDCCCCCCCBCBCACACAC9C9C8
C8C7C7C7C6C6C5C5C4C4C4C3C3C2C2C1C1C1C0C0BFBFBEBEBEBDBDBCBCBBBBBABABAB9B9B8B8B7B7
B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAFAEAEADADACACABABABAAAAA9A9A8A8A7A7A7A6A6A5
A5A4A4A3A3A3A2A2A1A1A0A09F9F9E9E9E9D9D9C9C9B9B9A9A999999989897979696959594949493
939292919190908F8F8E8E
>
1
4 %_Br
[
0.898 0.2 0 0 0.0118 0.5569 1 2 50 85.3932 %_BS
%_0.898 0.2 0 0 0.0118 0.5569 1 2 50 85.3932 Bs
0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 53.4483 20.2247 %_BS
%_0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 53.4483 20.2247 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2)
(Unnamed gradient 2) 0 2 Bd
[
<
00010203040506070809090A0B0C0D0E0F1011121314161718191A1B1B1C1D1E1F20212223242526
272828
>
<
0001010203030404050606070808090A0A0B0C0C0D0E0F101011111213131415151617171819191A
1B1B1C
>
<
00000101020203030404050506060707080809090A0A0B0C0C0D0D0E0E0F0F101011111213131414
151516
>
<
00000000000000000000000000000000000000000000010101010101010101010101010202020202
020202
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4
>
4 %_Br
[
0.1569 0.1098 0.0863 0.0078 0.8314 0.8314 0.8314 2 50 98.3146 %_BS
%_0.1569 0.1098 0.0863 0.0078 0.8314 0.8314 0.8314 2 50 98.3146 Bs
0 0 0 0 1 1 1 2 50 12.9213 %_BS
%_0 0 0 0 1 1 1 2 50 12.9213 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 22)
(Unnamed gradient 22) 0 3 Bd
[
<
0A0A0A0A09090908080807070707070707070707070707080808090909090A0A0A0A0A0A0A0A0A0A
0A0A090909090909090909090909090808080808080808080909090909090A0A0A0A0A0A0A0A0A0A
0A0A0A09090909090909090909090909090909090909090909090909090909090909090909090909
090909090A0A0A0A0A0A0A0A0A090909090909090909090909090909090909090909090909090909
09090909090909090909090909090909090909090909090909090909090909090909090909090909
0909090909090909090909090909090909090909090909090909
>
<
1E1F20212324252627292A2B2C2D2E2F3031323233343536373738393A3B3C3C3D3E3F4041424344
44454647494A4B4B4C4D4E4F505051525354545556575858595A5B5B5C5D5E5E5F60616162636464
656666676869696A6B6B6C6D6D6E6F6F70717172747475767677777879797A7A7B7C7C7D7D7E7F7F
808081818282838384858586868787888889898A8A8B8B8B8C8C8D8D8E8E8F8F8F90909191929292
93939394949595959696969797979999999A9A9A9B9B9B9B9C9C9C9C9D9D9D9D9E9E9E9E9F9F9F9F
9FA0A0A0A0A0A0A1A1A1A1A1A1A1A1A1A2A2A2A2A2A2A2A2A2A2
>
<
EEEEEFEFEFF0F0F0F0F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F2F2F2F2F2
F2F3F3F3F3F3F3F3F2F2F2F1F1F1F1F0F0F0F0EFEFEFEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEB
EBEBEBEBEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7
E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6
E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6
E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6
>
0.0039
0.9765
<
DCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCACAC9C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7
B7B6B5B4B3B2B1B1B0AFAEADACACABAAA9A8A8A7A6A5A4A4A3A2A1A1A09F9E9E9D9C9B9B9A999898
97969695949393929191908F8F8E8D8D8C8B8B8A89898887878686858484838382818180807F7E7E
7D7D7C7C7B7B7A7A79787877777676757574747373727272717170706F6F6E6E6E6D6D6C6C6B6B6B
6A6A6A6969686868676767666666656565646464636363636262626261616161606060605F5F5F5F
5F5E5E5E5E5E5E5D5D5D5D5D5D5D5D5D5C5C5C5C5C5C5C5C5C5C
>
0.0431
4 %_Br
<
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B
0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A
>
<
07070706060606060607070707070707070707070808080808080808080808080808080808080909
0909090909090A0A0909090909090A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F101010101010101111111111111212121212
12131313131313141414141414151515151515161616161616171717171718181818181819191919
19191A1A1A1A1A1B1B1B1B1B1B1C1C1C1C1C1D1D1D1D1D1D1E1E1E
>
<
6060606161616262636262636364646565676768676868696A6A6B6B6D6D6D6E6E6F707071717273
737475757678777879797A7B7C7C7D7E7E7F8081818383848485878888888A8B8B8C8D8E8E8F9091
929293949596969798999A9A9B9C9D9E9F9FA0A1A2A3A4A5A5A6A7A8A9AAABABACADAEAFB0B1B2B2
B4B5B6B7B9BABBBCBCBDBFC0C1C2C3C5C6C7C8C9C9CACCCDCECFD0D1D2D3D5D6D7D8D9DADBDCDCDD
DEDFE0E1E2E3E4E5E6E7E7E8E9EAEBEBEBECECECEDEDEDEDEEEEEE
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000101010101010101010101010101010101010101010101010101010101010101010101
010101010101010101010101010101010101010101010101010101
>
0.9765
<
F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F3F3
F3F3F3F3F3F3F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0EFEFEFEFEFEFEFEEEEEEEE
EEEEEEEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEAEAEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8
E8E7E7E7E7E7E7E6E6E6E6E6E6E5E5E5E5E5E5E4E4E4E4E4E4E3E3E3E3E3E2E2E2E2E2E2E1E1E1E1
E1E1E0E0E0E0E0DFDFDFDFDFDFDEDEDEDEDEDDDDDDDDDDDDDCDCDC
>
<
9D9D9D9C9C9C9B9B9A9A9A9999989897979696959594949392929191908F8F8E8E8D8C8C8B8B8A89
89888787868585848383828180807F7E7E7D7C7B7B7A797878777675757473727271706F6F6E6D6C
6B6B6A6968676766656463636261605F5E5E5D5C5B5A5958585756555453525251504F4E4D4C4B4B
4A49484746454443434241403F3E3D3C3B3A39383837363534333231302F2E2D2C2B2A2928272726
2524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B
>
4 %_Br
[
0.0353 0.6353 0.902 0.0039 0.9765 0.3608 0.0431 2 50 100 %_BS
%_0.0353 0.6353 0.902 0.0039 0.9765 0.3608 0.0431 2 50 100 Bs
0.0392 0.1176 0.9333 0.0039 0.9765 0.8627 0.0431 2 32.4786 34.2697 %_BS
%_0.0392 0.1176 0.9333 0.0039 0.9765 0.8627 0.0431 2 32.4786 34.2697 Bs
0.0471 0.0275 0.3765 0 0.9765 0.9686 0.6157 2 58.1921 3.3708 %_BS
%_0.0471 0.0275 0.3765 0 0.9765 0.9686 0.6157 2 58.1921 3.3708 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 24)
(Unnamed gradient 24) 0 3 Bd
[
<
E5E6E8E9E9E9EAEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E9E9E9EAEAEBECECEDEEEFF0F0
F1F2F3F4F5F6F7F8F7F8F7F6F5F4F3F3F1F2F1F1F0EFEFEEEFEEEEEEEEEDEDEDEDEDEDEDEDEEEEEE
EEEEEEEFF0EFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F2F2F2F3F3F3F4F3F4F5F5F5F5F6
F7F7F7F7F8FAF9FAFAFBFBFCFCFDFDFEFEFEFEFCFCFCFCFCFBFBFBFAFAFA
>
<
3334353638393A3B3D3E404243454648494B4D4E50515354545657595A5C5D5E6061626465666767
696A6B6C6E6F70717373747677797A7C7D7D7F80828385878688898B8C8E8E8F9192949595969899
999B9C9D9F9FA0A1A3A3A5A6A8A8A9ABACACAEB0B1B1B3B4B4B5B7B7B8BABABBBDBDBEBFBFC1C1C2
C3C3C5C5C6C7C7C8C8C9C9CBCBCCCCCDCDCFCFD1D1D3D3D3D5D5D5D7D7D7
>
0
0
0.0118
<
8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787777767574737271706F6E6D6C6B6A6969
686766656463626160605F5E5D5C5B5A5959585756555453535251504F4E4E4D4C4B4A4949484746
46454443424241403F3F3E3D3C3C3B3A3939383736363534343332323130302F2E2E2D2C2C2B2B2A
292928282726262525242423232222212120201F1F1E1E1E1D1D1D1C1C1C
>
<
FFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECECEBEB
EAEAE9E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E1E0E0DFDFDEDEDDDDDDDCDCDBDBDADAD9D9D9
D8D8D7D7D7D6D6D5D5D4D4D4D3D3D2D2D2D1D1D1D0D0CFCFCFCECECECDCDCDCCCCCBCBCBCACACAC9
C9C9C8C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C4C4C3C3C3C3C3C2C2C2C2
>
4 %_Br
<
16161616171717171818181919191A1A1A1B1B1C1C1C1D1D1E1E1E1F1F2020212122222323242425
252626282829292A2A2B2B2C2C2D2E2E2F2F30303132323333343435363637383839393A3B3B3C3D
3D3F3F404141424343444545464747494A494A4B4B4C4D4E4E4F5050515252535455555657575859
5A595A5B5C5C5D5E5F5F6061626263646666676869696A6B6C6D6D6F707172727375767777787A7B
7C7D7E7F8081818283848586868788898A8B8B8C8D8E8F90909192929394959595969798999A9A9B
9C9D9E9FA0A1A1A2A3A4A5A6A7A8A8A9AAACADAEAFB0B1B3B3B4B5B6B7B9BABBBDBEBFC0C1C2C3C4
C5C7C8CACBCCCDCED0D1D2D3D4D5D6D8D9DADCDCDDDDDEDEDDDEDDDEDDDDDDDDDDDDDDDDDDDDDDDD
DDDEDDDEDEDEDEDFDFDFDFE0E0E1E1E1E2E3E3E4E4E5E5
>
<
06060606060606060606060606060606060606070707070707070707070707070707080707070708
08080808080808080808080909080809090908090909090909090A0909090A09090A0A0A090A0A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0A0A0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0B0B0C0C0C0C0C
0C0D0C0C0D0D0C0D0C0C0D0D0C0D0D0D0D0D0D0D0D0E0D0D0E0D0D0E0D0D0D0D0D0D0D0D0D0D0D0D
0C0D0D0D0D0C0E0D0D0E0D0E0E0E0F0E0E0F0F0F0F0F100F10101011101111111211111211121212
12121312121313141314131314131514141514151514151516151616151616161616161617171817
17171718171818171818191919191919191A1A1B1A1C1C1B1D1D1F1E202022222123232524262627
272729282A2A2B2B2D2C2E2E2E2F2F3030313132323333
>
<
05050505050505050505050505050505050505050505050505050505050505060606060606060606
06060606060606050505050505050505050505050505050505050404040404040404040403030303
03030302020202010101010101010000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000
>
0
<
E5E5E5E5E4E4E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDBDBDADAD9D9D8D8D7D7D6
D6D5D5D4D4D3D3D2D2D1D1D0D0CFCECECDCDCCCCCBCACAC9C9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BF
BFBEBEBDBCBCBBBABAB9B8B8B7B6B6B5B4B4B3B2B2B1B0AFAFAEADADACABABAAA9A8A8A7A6A6A5A4
A3A3A2A1A0A09F9E9D9D9C9B9A9A999897979695949493929190908F8E8D8C8C8B8A898888878685
848483828180807F7E7D7C7B7B7A7978777676757473727171706F6E6D6C6B6B6A69686766656564
636261605F5E5E5D5C5B5A59585757565554535251504F4E4E4D4C4B4A4948474645444343424140
3F3E3D3C3B3A39383736363534333231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A
191817161514131211100F0E0D0C0B0A09080706050403
>
<
F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0EF
EFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5
E4E4E4E4E3E3E3E2E2E2E1E1E1E1E0E0E0DFDFDFDEDEDEDDDDDDDCDCDCDBDBDBDADADAD9D9D9D8D8
D8D7D7D7D6D6D6D5D5D5D4D4D4D3D3D3D2D2D2D1D1D0D0D0CFCFCFCECECECDCDCDCCCCCBCBCBCACA
CAC9C9C8C8C8C7C7C7C6C6C5C5C5C4C4C4C3C3C2C2C2C1C1C0C0C0BFBFBEBEBEBDBDBDBCBCBBBBBB
BABAB9B9B9B8B8B7B7B6B6B6B5B5B4B4B4B3B3B2B2B2B1B1B0B0AFAFAFAEAEADADADACACABABAAAA
AAA9A9A8A8A7A7A7A6A6A5A5A4A4A4A3A3A2A2A1A1A0A0A09F9F9E9E9D9D9C9C9C9B9B9A9A999998
989897979696959594949393939292919190908F8F8E8E
>
1
4 %_Br
[
0.9804 0.8431 0 0 0.0118 0.1098 0.7608 2 50 100 %_BS
%_0.9804 0.8431 0 0 0.0118 0.1098 0.7608 2 50 100 Bs
0.898 0.2 0 0 0.0118 0.5569 1 2 41.0256 56.1798 %_BS
%_0.898 0.2 0 0 0.0118 0.5569 1 2 41.0256 56.1798 Bs
0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 59.5959 0 %_BS
%_0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 59.5959 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 26)
(Unnamed gradient 26) 0 2 Bd
[
<
00010203040506070809090A0B0C0D0E0F101112131415161718191A1B1B1B1C1D1E1F2021222324
2526272828292A2B2C2C2D2E2F303031323334353637373838393A3B3C3D3E3F3F3F404142434444
4546464748494A4A4B4C4C4D4E4F4F50515152525354555656565758595A5A5A5B5C5D5D5D5E5F60
60606162636363646566666667686969696A6B6B6B6C6D6D6E6E6F6F707071717272737373747575
7576767677787878797A7A7A7B7B7B7C7C7D7D7D7E7F7F7F80808181818283838383848585858586
8787878788888989898A8A8B8B8B8B8C8C8D8D8D8D8E8E8F8F8F8F8F909091919192929292929293
9393
>
<
0001010203030404050606070808090A0A0B0C0C0D0E0E0F10101111121213131415151617171819
191A1B1B1C1D1D1E1E1E1F20202122222324242525262627272829292A2B2B2C2C2C2D2E2E2F3030
313131323333343535363637373838393A3A3A3B3B3C3D3D3D3E3E3F404040414142434343444445
4545464747484848494A4A4A4B4B4C4C4C4D4E4E4E4F4F5050505151525252535454545555555656
5657575758585959595A5A5A5B5B5B5C5C5C5D5D5E5E5E5F5F5F6060606162626262636363646464
6565666666666767676868696969696A6A6A6A6B6B6C6C6C6C6D6D6D6E6E6E6E6E6F6F6F6F6F6F70
7070
>
<
00000101020203030404050506060707080809090A0A0B0B0C0C0D0D0E0E0E0F0F10101111121313
1414151516161717181819191A1A1B1B1C1D1D1E1E1F1F1F20212122222323242525252626272828
2929292A2B2B2C2C2D2E2E2E2F30303131313233333434353536363738383839393A3B3B3B3C3D3D
3E3E3E3F404040414142434343444545454646474748484949494A4B4B4B4C4D4D4D4E4E4E4F5050
50515151525353535454545556565657575758585959595A5B5B5B5C5C5D5D5D5E5E5F5F5F606061
62626262636364646465656666676767676868696969696A6A6B6B6B6C6C6C6C6C6D6D6D6E6E6E6F
6F6F
>
<
00000000000000000000000000000000000000000000000101010101010101010101010101020202
02020202020202020303030303030304040404040404040505050505050606060606070707070808
0809090909090A0A0A0A0A0B0B0B0C0C0D0D0D0D0E0E0F0F0F0F1010111111111212131313141515
1616161717181819191A1A1A1B1B1C1D1D1D1E1F1F20202122222323242425262727272828292A2B
2B2C2D2D2E2F3030313232333434353636373838393A3A3B3C3C3D3E3E3F40404141424343444445
464647474848494A4A4C4C4D4D4E4E4F4F505052525353545456565657575858585959595B5B5B5C
5C5C
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0D0CFCECDCCCBCAC9C8C7C6C5C4C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4
B3B2B2B1B0AFAEADACABABAAA9A8A7A6A5A5A4A3A2A1A09F9F9E9D9C9B9A9A999897969595949392
9191908F8E8D8D8C8B8A898988878685858483828281807F7E7E7D7C7B7B7A797878777676757473
73727171706F6E6E6D6C6C6B6A6A6968686766666564646362626160605F5E5E5D5D5C5B5B5A5A59
58585757565655545453535252515150504F4F4E4E4D4D4C4C4B4B4B4A4A49494948484847474746
4646
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0D0CFCECDCCCBCAC9C8C7C6C5C4C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4
B3B2B2B1B0AFAEADACABABAAA9A8A7A6A5A5A4A3A2A1A09F9F9E9D9C9B9A9A999897969595949392
9191908F8E8D8D8C8B8A898988878685858483828281807F7E7E7D7C7B7B7A797878777676757473
73727171706F6E6E6D6C6C6B6A6A6968686766666564646362626160605F5E5E5D5D5C5B5B5A5A59
58585757565655545453535252515150504F4F4E4E4D4D4C4C4B4B4B4A4A49494948484847474746
4646
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0D0CFCECDCCCBCAC9C8C7C6C5C4C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4
B3B2B2B1B0AFAEADACABABAAA9A8A7A6A5A5A4A3A2A1A09F9F9E9D9C9B9A9A999897969595949392
9191908F8E8D8D8C8B8A898988878685858483828281807F7E7E7D7C7B7B7A797878777676757473
73727171706F6E6E6D6C6C6B6A6A6968686766666564646362626160605F5E5E5D5D5C5B5B5A5A59
58585757565655545453535252515150504F4F4E4E4D4D4C4C4B4B4B4A4A49494948484847474746
4646
>
4 %_Br
[
0.5765 0.4392 0.4353 0.3608 0.2745 0.2745 0.2745 2 50 100 %_BS
%_0.5765 0.4392 0.4353 0.3608 0.2745 0.2745 0.2745 2 50 100 Bs
0 0 0 0 1 1 1 2 41.2429 0 %_BS
%_0 0 0 0 1 1 1 2 41.2429 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 27)
(Unnamed gradient 27) 0 2 Bd
[
<
C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C6C6C6C6C6C6C6C6C6C6C6C6C6C5
C5C5C5C5C5C5C5C4C4C4C4C5C5C3C3C4C4C4C2C3C3C3C3C2C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBE
BDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B6B6B5B6B5B5B4B4B3B2B2B1B1B0B0AFAEAFAEADADACAB
ABAAA9A9A8A7A6A6A5A4A3A3A2A1
>
<
38383838383838383838383838383838383838383838383737373838383838383838373737373737
373636363636363535353534343434333333343333323132323131313030302F2F2E2F2D2D2E2D2D
2C2C2B2B2A2B2A29292828272626252624242423222121201F1E1F1E1D1C1B1B1A19181717151415
14131211100F0E0D0B0A09080707
>
<
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F4
F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F5F6F6F6F7F6F6F7F7F7F7F8F8F8F8F8F8F9F9F9FAFA
FAFAFCFCFCFCFDFEFEFEFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFC
FCFCFBFBFBFBFBFBFBFBFBFBFCFC
>
<
14141414141414141414141414141414141414141414141313131313131313131313121212121212
121111111111111111111110101010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0C0C0C0C0C
0B0B0B0B0A0A0A090909090908080808070707070606060606050505050404040404030303020202
0202020202020101010101010000
>
<
35353535353535353535353535353535353535353535353535353636363636363636363636363637
3737373737373738383838383839393939393A3A3A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F
40404041414242424343444444454546464747484849494A4A4B4C4C4D4D4E4E4F50505152525354
54555656575859595A5B5C5C5D5E
>
<
74747474747474747474747474747474747474747474747575757575757575757575767676767676
7677777777777778787878797979797A7A7A7A7B7B7B7C7C7C7D7D7D7E7E7E7F7F80808181818282
8383848485858687878888898A8A8B8B8C8D8D8E8F909091929393949596979798999A9B9C9D9E9E
9FA0A1A2A3A4A5A6A8A9AAABACAD
>
<
1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E
1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1A1A1A1A
1A1A1919191919181818181817171717171616161615151515141414131313131212121111111010
100F0F0F0E0E0E0D0D0D0C0C0B0B
>
4 %_Br
[
0.6314 0.0275 0.9882 0 0.3686 0.6784 0.0431 2 50 66.8539 %_BS
%_0.6314 0.0275 0.9882 0 0.3686 0.6784 0.0431 2 50 66.8539 Bs
0.7804 0.2196 0.9569 0.0784 0.2078 0.4549 0.1216 2 76.9231 30.3371 %_BS
%_0.7804 0.2196 0.9569 0.0784 0.2078 0.4549 0.1216 2 76.9231 30.3371 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 28)
(Unnamed gradient 28) 0 2 Bd
[
<
0000020203040405060707080809090A0B0B0B0C0C0D0D0E0E0F1010101111121212131313131414
1415151616161616171718181818181919191A1A1B1B1B1B1B1C1C1C1D1D1E1E1F1F1F2020212121
222223232324242525262626272728282829292A2A2A2B2B2C2C2C2D2D2E2E2F2F2F303031313132
3233333334343535353636373738383839393A39393A3A3B3C3C3D3D3E3E3F3F3F40404141414242
43434344444545454646474748484849494A4A4A4B4B4C4C4C4D4C4D4E4F4F4F5050515151525253
535354545555555656565657575758585959
>
0
<
00010203030405060708090A0B0C0C0D0E0F101112131415161718191A1B1C1D1E1E202122232425
26262728292B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344464748494A4B4C4D4E
4F5052535455565758595A5C5D5E5F6061626365666768696A6B6C6E6F7071727374767778797A7B
7C7E7F7F81828384858687888A8B8C8D8E8F90929394959697989A9B9C9D9E9FA0A2A3A4A5A6A7A9
AAABACADAEB0B1B2B3B4B6B7B8B9BABBBCBEBFC0C1C2C3C4C6C7C8C9CACCCDCECFD1D2D3D4D5D7D8
D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EA
>
0
<
FFFFFEFEFDFDFDFCFCFBFBFAFAFAF9F9F8F8F8F7F7F6F6F6F5F5F4F4F4F3F3F2F2F1F1F1F0F0EFEF
EFEEEEEDEDEDECECEBEBEAEAEAE9E9E8E8E8E7E7E6E6E6E5E5E4E4E4E3E3E2E2E1E1E1E0E0DFDFDF
DEDEDDDDDDDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCE
CECDCDCDCCCCCBCBCBCACAC9C9C8C8C8C7C7C6C6C6C5C5C4C4C4C3C3C2C2C1C1C1C0C0BFBFBFBEBE
BDBDBDBCBCBBBBBBBABAB9B9B8B8B8B7B7B6B6B6B5B5B4B4B4B3B3B2B2B1B1B1B0B0AFAFAFAEAEAD
ADADACACABABABAAAAA9A9A8A8A8A7A7A6A6
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A29282726
>
4 %_Br
[
0.349 0 0.9176 0 0.651 0.9686 0.149 2 50 73.5955 %_BS
%_0.349 0 0.9176 0 0.651 0.9686 0.149 2 50 73.5955 Bs
0 0 0 0 1 1 1 2 50 0.5618 %_BS
%_0 0 0 0 1 1 1 2 50 0.5618 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 29)
(Unnamed gradient 29) 0 3 Bd
[
<
A1A1A1A1A1A1A1A1A1A1A0A0A0A0A0A0A0A0A0
>
<
0708090A0C0D0E101112151617181A1B1C1E1F
>
<
FCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
00010101010102020202030304040404050505
>
0.3686
<
ADACABAAA9A8A7A6A5A4A2A1A09F9E9D9C9B9A
>
0.0431
4 %_Br
<
595A5B5C5D5E5F606162636465666768696A6A6B6C6D6E6F70717273747576777879797A7B7C7D7E
7F80818283838485868788898A8A8B8C8D8E8F8F9091929394949596979798999A9B9B9C9D9D9E9F
9FA0A1A1
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000100000000000000010101010101020202020202020303020303030303040404040405
05060707
>
<
EAEAEAEAEAEBEBECECECECECECEDEDEDEDEEEEEEEEEFEFF0F0F1F1F2F2F2F3F3F4F4F4F5F5F6F6F7
F7F8F9F9FAFAFBFBFCFDFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFDFDFDFDFDFDFCFCFCFCFC
FCFCFCFC
>
0
<
A6A5A4A3A2A1A09F9E9D9C9B9A99989796959594939291908F8E8D8C8B8A89888786868584838281
807F7E7D7C7C7B7A7978777675757473727170706F6E6D6C6B6B6A69686867666564646362626160
605F5E5E
>
<
F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D1
D0CFCECDCCCBCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AF
AFAEADAD
>
<
2626252525242423232322222221212120201F1F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1919191818
18171717161616151515141414131313131212121111111010100F0F0F0F0E0E0E0D0D0D0D0C0C0C
0C0B0B0B
>
4 %_Br
[
0.6275 0.1216 0.9843 0.0196 0.3686 0.6039 0.0431 2 50 89.3258 %_BS
%_0.6275 0.1216 0.9843 0.0196 0.3686 0.6039 0.0431 2 50 89.3258 Bs
0.6314 0.0275 0.9882 0 0.3686 0.6784 0.0431 2 50 52.809 %_BS
%_0.6314 0.0275 0.9882 0 0.3686 0.6784 0.0431 2 50 52.809 Bs
0.349 0 0.9176 0 0.651 0.9686 0.149 2 45.625 14.0449 %_BS
%_0.349 0 0.9176 0 0.651 0.9686 0.149 2 45.625 14.0449 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 30)
(Unnamed gradient 30) 0 3 Bd
[
<
A1A1A1A1A1A1A1A1A1A1A0A0A0A0A0A0A0A0A0
>
<
0708090A0C0D0E101112151617181A1B1C1E1F
>
<
FCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
00010101010102020202030304040404050505
>
0.3686
<
ADACABAAA9A8A7A6A5A4A2A1A09F9E9D9C9B9A
>
0.0431
4 %_Br
<
595A5B5C5D5E5F606162636465666768696A6A6B6C6D6E6F70717273747576777879797A7B7C7D7E
7F80818283838485868788898A8A8B8C8D8E8F8F9091929394949596979798999A9B9B9C9D9D9E9F
9FA0A1A1
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000100000000000000010101010101020202020202020303020303030303040404040405
05060707
>
<
EAEAEAEAEAEBEBECECECECECECEDEDEDEDEEEEEEEEEFEFF0F0F1F1F2F2F2F3F3F4F4F4F5F5F6F6F7
F7F8F9F9FAFAFBFBFCFDFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFDFDFDFDFDFDFCFCFCFCFC
FCFCFCFC
>
0
<
A6A5A4A3A2A1A09F9E9D9C9B9A99989796959594939291908F8E8D8C8B8A89888786868584838281
807F7E7D7C7C7B7A7978777675757473727170706F6E6D6C6B6B6A69686867666564646362626160
605F5E5E
>
<
F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D1
D0CFCECDCCCBCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AF
AFAEADAD
>
<
2626252525242423232322222221212120201F1F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1919191818
18171717161616151515141414131313131212121111111010100F0F0F0F0E0E0E0D0D0D0D0C0C0C
0C0B0B0B
>
4 %_Br
[
0.6275 0.1216 0.9843 0.0196 0.3686 0.6039 0.0431 2 50 80.8989 %_BS
%_0.6275 0.1216 0.9843 0.0196 0.3686 0.6039 0.0431 2 50 80.8989 Bs
0.6314 0.0275 0.9882 0 0.3686 0.6784 0.0431 2 50 62.9213 %_BS
%_0.6314 0.0275 0.9882 0 0.3686 0.6784 0.0431 2 50 62.9213 Bs
0.349 0 0.9176 0 0.651 0.9686 0.149 2 45.625 0 %_BS
%_0.349 0 0.9176 0 0.651 0.9686 0.149 2 45.625 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 31)
(Unnamed gradient 31) 0 2 Bd
[
<
161718191A1B1C1D1F202122232425262728292A2B2C2D2D2E3031323334353738393A3B3D3D3E3F
4041424243444445464748494A4A4B4C4D4E5050515253555556575859595A5B5C5C5D5E5F5F6061
6262636464656666676868696A6A6B6C6C6D6D6E6F6F70707171727273737474747575767676
>
<
060606070708080909090A0A0B0B0B0C0C0D0D0E0E0F0F1011111112121313141515161616171819
191A1B1B1B1C1D1E1F1F1F202122232223242526252627272728292A2B2B2B2C2D2D2E2F2E2F3031
313233323435343536363737383939393B3A3B3B3C3C3D3D3E3E3F3F40404141424141424242
>
<
05050505050506060606060606060606060606060506050505050505040404040303030202020201
01010000000000000000000000000000000000000000000000000000010101010101010101010101
0101010101010101010101010101010101010101010101010101010101010101010101000000
>
0
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C8C7C6C5C4C3C2C2C1C0
BFBEBDBCBBBABAB9B8B7B6B5B4B4B3B2B1B0AFAFAEADACABABAAA9A8A7A7A6A5A4A4A3A2A1A1A09F
9E9E9D9C9C9B9A9A999898979696959494939392919190908F8F8E8E8D8D8C8C8C8B8B8A8A8A
>
<
F6F5F4F3F2F1F0EFEEEDECEBEAEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D5D5D4D3D2
D1D0CFCFCECDCCCBCACAC9C8C7C6C5C5C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8B7B7B6B5B5B4B3B2
B2B1B0B0AFAEAEADACACABABAAA9A9A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9F9E9E9E
>
<
FFFFFEFEFEFEFDFDFDFDFCFCFCFBFBFBFBFAFAFAFAF9F9F9F9F8F8F8F8F7F7F7F7F6F6F6F6F5F5F5
F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F1F0F0F0F0EFEFEFEFEFEEEEEEEEEDEDEDEDEDECECECEC
ECEBEBEBEBEBEAEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6
>
4 %_Br
[
0.4627 0.2588 0 0 0.5412 0.6196 0.902 2 50 100 %_BS
%_0.4627 0.2588 0 0 0.5412 0.6196 0.902 2 50 100 Bs
0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 41.4013 23.5955 %_BS
%_0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 41.4013 23.5955 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 33)
(Unnamed gradient 33) 0 2 Bd
[
<
53535353535353535353535353535353535353535353535353545454545454545454545454555656
56565656565757575757575858585858595959595A5A5A5A5C5C5C5C5D5D5D5E5E5E5F5F5F606060
61616162626363646464656566666767686869696A6B6B6C6C6D6D6E6F6F70717172737374757576
777878797A7B7C7C7D7F808182828385868788898A8C8D8E8F9091929495969798
>
<
1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1F1E1E1E1E1E1E1E1E1E1E1E1E1F1F1F
1F1F1F1F202020202020212020202022212121212222222223232324232324242425252526262627
27272827292829292A2A2A2B2B2C2C2D2C2E2E2E2F2F30303132323334343435353637373839393A
3B3C3D3C3D3E3F404041424344454647474848494A4B4C4C4D4E4F525253545556
>
0
0
<
ABABABABABABABABABABABABABABABABABABABABABABABABABAAAAAAAAAAAAAAAAAAAAAAAAA9A9A9
A9A9A9A9A9A8A8A8A8A8A8A7A7A7A7A7A6A6A6A6A5A5A5A5A4A4A4A4A3A3A3A2A2A2A1A1A1A0A0A0
9F9F9F9E9E9D9D9C9C9C9B9B9A9A99999898979796959594949393929191908F8F8E8D8D8C8B8B8A
8988888786858484838281807F7F7E7D7C7B7A797877767574737271706F6E6D6C
>
<
C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C6C6C6C6C5C5C5
C5C5C5C5C4C4C4C4C4C4C3C3C3C3C3C2C2C2C2C2C1C1C1C1C0C0C0BFBFBFBEBEBEBDBDBDBCBCBCBB
BBBBBABAB9B9B8B8B7B7B7B6B6B5B5B4B4B3B2B2B1B1B0B0AFAEAEADACACABAAAAA9A8A8A7A6A6A5
A4A3A2A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D8B8A89888786
>
<
F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0
EFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEDEDEDEDEDEDECECECECECECEBEBEBEBEBEAEAEAEAEAE9E9E9
E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E3E3E3E3E2E2E2E1E1E1E0E0
>
4 %_Br
[
0.5961 0.3373 0 0 0.4235 0.5255 0.8784 2 50 72.4719 %_BS
%_0.5961 0.3373 0 0 0.4235 0.5255 0.8784 2 50 72.4719 Bs
0.3255 0.1176 0 0 0.6706 0.7804 0.9529 2 76.7677 33.1461 %_BS
%_0.3255 0.1176 0 0 0.6706 0.7804 0.9529 2 76.7677 33.1461 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 35)
(Unnamed gradient 35) 0 2 Bd
[
<
00010203040506070809090A0B0C0D0E0F10111213141516171718191A1B1B1C1D1E1F2021222324
252626272828292A2B2C2D2E2F2F303031323334353636373838393A3B3C3C3D3E3F3F4041414243
4444454546474849494A4A4B4C4D4D4E4F4F4F5051525252535455555656575758595A5A5A5B5C5C
5D5D5D5E5F5F6060616162636363636465656666666768686969696A6A6B6B6B6B6C6C6D6D6D6E6E
6F6F6F6F6F70707171717171727272737373
>
<
0001010203030404050606070808090A0A0B0C0C0D0E0E0F10101011111213131415151617171819
191A1A1B1B1C1D1D1E1E1F2020202122222324242525252627272829292A2A2B2B2C2C2D2E2E2E2F
30303131313233333334353536373737383838393A3A3B3B3B3C3D3D3D3E3E3E3F40404041414242
4343434444444545464647474748484849494A4A4A4B4B4B4C4C4C4D4D4E4E4E4E4F4F4F50505050
515151515152525252535353545454545454
>
<
00000101020203030404050506060707080809090A0A0B0B0C0C0C0D0D0E0E0F0F10101111121313
1414141515161617171819191A1A1A1B1B1C1D1D1E1E1E1F1F202121222222232324252526262627
28282929292A2B2B2B2C2C2D2E2E2E2F303030313132333333343434353636363738383839393A3A
3B3B3B3C3D3D3D3E3E3E3F4040404041414142434343444445454546464646474748484849494949
4A4A4B4B4B4B4B4C4C4D4D4D4D4D4D4E4E4E
>
<
00000000000000000000000000000000000000000000000101010101010101010101010101020202
02020202020202020203030303030303040404040404040405050505050505060606060707070707
0808080809090909090A0A0A0A0B0B0B0B0C0C0C0D0D0D0D0E0E0F0F0F0F10101011111111121212
1313131415151516161617171718181919191A1A1A1B1B1B1C1C1D1D1D1E1E1F1F20202021212222
232323232324242525262626272727272727
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C5C4C3C2C1C0BFBEBEBDBCBBBAB9B8B8B7B6
B5B4B3B3B2B1B0AFAFAEADACABAAAAA9A8A7A7A6A5A4A3A3A2A1A0A09F9E9D9D9C9B9A9A99989797
969595949393929190908F8E8E8D8D8C8B8B8A89898887878686858484838382828181807F7F7E7E
7D7D7C7C7C7B7B7A7A797979787878777777
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C5C4C3C2C1C0BFBEBEBDBCBBBAB9B8B8B7B6
B5B4B3B3B2B1B0AFAFAEADACABAAAAA9A8A7A7A6A5A4A3A3A2A1A0A09F9E9D9D9C9B9A9A99989797
969595949393929190908F8E8E8D8D8C8B8B8A89898887878686858484838382828181807F7F7E7E
7D7D7C7C7C7B7B7A7A797979787878777777
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C5C4C3C2C1C0BFBEBEBDBCBBBAB9B8B8B7B6
B5B4B3B3B2B1B0AFAFAEADACABAAAAA9A8A7A7A6A5A4A3A3A2A1A0A09F9E9D9D9C9B9A9A99989797
969595949393929190908F8E8E8D8D8C8B8B8A89898887878686858484838382828181807F7F7E7E
7D7D7C7C7C7B7B7A7A797979787878777777
>
4 %_Br
[
0.451 0.3294 0.3059 0.1529 0.4667 0.4667 0.4667 2 50 100 %_BS
%_0.451 0.3294 0.3059 0.1529 0.4667 0.4667 0.4667 2 50 100 Bs
0 0 0 0 1 1 1 2 41.2429 0 %_BS
%_0 0 0 0 1 1 1 2 41.2429 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 36)
(Unnamed gradient 36) 0 2 Bd
[
<
161718191A1B1C1D1F202122232425262728292A2B2C2D2F30313233343638393A3B3D3E3F404142
42434445464748494A4B4C4D4E50515253
>
<
060606070708080909090A0A0B0B0C0C0D0D0E0E0F1010111112121313131414151516171718191A
1B1B1C1D1E1F1F20212222232425252627
>
<
05050505050506060606060606060606060606050605050505050404040404030303030202020100
0000000000000000000000000000000000
>
0
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C7C6C5C4C3C2C1C0BFBEBD
BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADAC
>
<
F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDBDAD9D8D7D6D5D4D3D2D1D0
CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
>
<
FFFFFEFEFEFEFDFDFDFCFCFCFCFBFBFBFAFAFAFAF9F9F9F8F8F8F8F7F7F7F6F6F6F6F5F5F5F4F4F4
F4F3F3F3F2F2F2F2F1F1F1F0F0F0F0EFEF
>
4 %_Br
[
0.3255 0.1529 0 0 0.6745 0.749 0.9373 2 50 100 %_BS
%_0.3255 0.1529 0 0 0.6745 0.749 0.9373 2 50 100 Bs
0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 50 42.6966 %_BS
%_0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 50 42.6966 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 37)
(Unnamed gradient 37) 0 2 Bd
[
<
0001010203040505060708090A0B0C0D0E0F1011121314151516
>
<
0000010101020202020203030304040404040405050505050606
>
<
0000010101010102020202020203030303030404040404040505
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F1F0EFEEEDECEBEAE9E8E7E6E5
>
<
FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAFAF9F9F9F8F8F7F7F7F6F6
>
1
4 %_Br
[
0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 50 88.2022 %_BS
%_0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 50 88.2022 Bs
0 0 0 0 1 1 1 2 50 11.7977 %_BS
%_0 0 0 0 1 1 1 2 50 11.7977 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 38)
(Unnamed gradient 38) 0 2 Bd
[
<
161616161617171717171818181919191A1A1A1B1B1B1C1C1E1D1D1F1F2020212122222323242425
25262627272828292A2A2B2B2C2D2D2E2E303131323333343535373838393A3B3B3D3E3F3F404142
42424344444546474848494A4B4C4C4D4E505152525355565758595A5A5B5C5D5E5F606162636465
65666768696A6B6C6D6E6F70717273747576
>
<
06060606060606060606060606060707070707070808080808090909090909090A0A0A0A0B0B0B0B
0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1011101112121212131313141514151616161718171919191A
1B1C1B1C1D1E1E1F1F202121222223242425252627272728292A2B2B2B2C2D2E2F2F303131323233
3535363738393A393A3B3C3D3E3F40414142
>
<
05050505050505050505050505050505050505050505060606060606060606060606060606060606
06060606060606060605050606050505050505050504050404040403040303020202020201010100
00000000000000000000000000000000000000000000000000000101010101010101010101010101
010101010101010101010101010101010100
>
0
<
E5E5E5E5E5E4E4E4E4E4E3E3E3E2E2E2E1E1E1E0E0E0DFDFDEDEDEDDDDDCDCDBDBDADAD9D9D8D8D7
D7D6D6D5D5D4D4D3D2D2D1D1D0CFCFCECECDCCCCCBCACAC9C8C8C7C6C6C5C4C3C3C2C1C0C0BFBEBD
BDBCBBBABAB9B8B7B6B6B5B4B3B2B2B1B0AFAEADADACABAAA9A8A7A6A6A5A4A3A2A1A09F9E9D9C9B
9B9A999897969594939291908F8E8D8C8B8A
>
<
F6F6F6F6F6F5F5F5F5F5F4F4F4F4F3F3F3F2F2F2F1F1F0F0F0EFEFEEEEEEEDEDECECEBEBEAEAE9E9
E8E8E7E7E6E6E5E5E4E3E3E2E2E1E1E0DFDFDEDDDDDCDCDBDADAD9D8D8D7D6D5D5D4D3D3D2D1D1D0
CFCECECDCCCBCBCAC9C8C7C7C6C5C4C3C3C2C1C0BFBFBEBDBCBBBAB9B9B8B7B6B5B4B3B2B2B1B0AF
AEADACABAAA9A8A8A7A6A5A4A3A2A1A09F9E
>
<
FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFBFB
FBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F4F4
F4F4F4F3F3F3F3F2F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEB
EBEAEAEAEAE9E9E9E8E8E8E8E7E7E7E7E6E6
>
4 %_Br
[
0.4627 0.2588 0 0 0.5412 0.6196 0.902 2 50 100 %_BS
%_0.4627 0.2588 0 0 0.5412 0.6196 0.902 2 50 100 Bs
0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 63.2768 0 %_BS
%_0.0863 0.0235 0.0196 0 0.898 0.9647 1 2 63.2768 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 4)
(Unnamed gradient 4) 0 2 Bd
[
<
24242323232222212120201F1E1E1D1C1C1B1B1A1A1918171716151413131211100F0E0D0C0C0B0A
0909080706050403020100
>
<
191918181817171717161615151514131313121111111010100F0E0E0D0D0C0C0B0A0A0908080807
0606050404030302010100
>
<
13131313131212111111111010100F0F0F0E0E0D0D0D0C0C0C0B0B0A0A0A09090808070706060605
0504040303020201010000
>
<
02020202020202010101010101010101010101010101010101010000000000000000000000000000
0000000000000000000000
>
<
D9D9DADADADBDBDCDCDDDDDEDFDFE0E1E1E2E3E4E4E5E6E7E7E8E9EAEBEBECEDEEEFF0F1F2F2F3F4
F5F6F7F8F9FAFBFCFDFEFF
>
<
D9D9DADADADBDBDCDCDDDDDEDFDFE0E1E1E2E3E4E4E5E6E7E7E8E9EAEBEBECEDEEEFF0F1F2F2F3F4
F5F6F7F8F9FAFBFCFDFEFF
>
<
D9D9DADADADBDBDCDCDDDDDEDFDFE0E1E1E2E3E4E4E5E6E7E7E8E9EAEBEBECEDEEEFF0F1F2F2F3F4
F5F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 1 1 1 2 50 100 Bs
0.1412 0.098 0.0745 0.0078 0.851 0.851 0.851 2 59.322 0 %_BS
%_0.1412 0.098 0.0745 0.0078 0.851 0.851 0.851 2 59.322 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 5)
(Unnamed gradient 5) 0 2 Bd
[
<
0A0A0A0A090909080808070707070707070707070707080808090909090A0A0A0A0A0A0A0A0A0A09
09090909090909090909090808080808080809090909090A0A0A0A0A0A0A0A0A0909090909090909
09090909090909090909090909090909090909090A0A0A0A0A090909090909090909090909090909
09090909090909090909090909090909090909090909090909090909090808080808080808080808
08080808080808080808080808080808080909090909090909090909090909090909090909090909
09090909080808080808080808080707070707
>
<
1E1F20212324252627292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F40414243444546
47494A4B4C4D4E4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6D
6E6F7071727475767778797A7B7C7D7E7F80818182838485868788898A8B8C8D8E8F909091929394
959697999A9B9C9D9E9E9FA0A1A2A3A4A5A6A7A8A8A9AAABACADAEB0B1B2B2B3B4B5B6B7B8B9BABA
BBBCBDBEBFC0C1C1C2C3C4C5C6C7C8C8C9CACBCDCECFCFD0D2D3D4D5D5D6D7D9DADADBDCDDDEDEDF
E0E1E2E2E3E4E5E5E6E7E8E8E9EAEAEAEBEBEC
>
<
EEEEEFEFEFF0F0F0F0F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F2F2F2F2F2F3F3
F3F3F3F3F2F2F2F2F1F1F1F0F0F0EFEFEFEEEEEEEDEDEDEDECECECECEBEBEBEBEBEAEAEAEAEAEAEA
E9E9E9E9E9E9E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6E6E6E6E6
E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7
E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
0.0039
0.9765
<
DCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5
B4B3B2B1B0AFAEAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8F
8E8D8C8B8A898887868584838281807F7E7D7C7C7B7A797877767574737271706F6E6D6D6C6B6A69
686766656463626160605F5E5D5C5B5A59585756565554535251504F4E4D4D4C4B4A494847464545
44434241403F3E3E3D3C3B3A3938373736353433323131302F2E2D2C2C2B2A292828272625242423
222120201F1E1D1D1C1B1A1A19181717161615
>
0.0431
4 %_Br
[
0.0275 0.9255 0.9098 0.0039 0.9765 0.0824 0.0431 2 50 64.6067 %_BS
%_0.0275 0.9255 0.9098 0.0039 0.9765 0.0824 0.0431 2 50 64.6067 Bs
0.0392 0.1176 0.9333 0.0039 0.9765 0.8627 0.0431 2 46.875 10.1124 %_BS
%_0.0392 0.1176 0.9333 0.0039 0.9765 0.8627 0.0431 2 46.875 10.1124 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 6)
(Unnamed gradient 6) 0 2 Bd
[
<
00000000000101010101020202020203030304040405050505060606070708080809090909090A0A
0B0B0B0C0C0D0D0E0E0E0F0F101011111212131314141515161617171818191A1A1B1B1B1B1C1C1D
1E1E1F1F2021212222232424252526272728282829292A2B2B2C2D2D2E2F2F303030313232333434
35363637383838393A3A3B3C3D3D3E3F3F3F40414142434444444546464748494A4A4A4B4C4C4D4E
4F4F4F50515252525354555656565758595A5A5A5B5C5D5D5D5E5F60606161626363646566666667
6869696A6B6B6B6C6D6D6E6F6F70717171727373747575767677787878797A7A7B7B7C7D7D7E7F7F
808181828283838485858687878889898A8B8B8C8D8D8E8F8F9091929293
>
<
00000000000101010101010101010102020203030303030303040404040405050506060606060707
080808080809090A0A0A0A0A0B0B0C0C0C0C0D0D0E0E0E0E0F0F1010101011111112121313131314
15151515161717171718191919191A1B1B1B1B1C1D1D1D1E1E1E1F1F202020212222222323242424
25252526272727282929292A2B2B2B2C2C2C2D2E2E2E2F3030303131313233333434353536363737
383838393A3A3B3B3B3C3D3D3D3E3E3F40404041414243434344444545464647474848494A4A4A4B
4B4C4C4D4E4E4E4F4F5050515152525253545455555656575758585859595A5A5B5B5C5C5D5E5E5F
5F6060616162626363646465666667676869696A6A6B6C6C6D6E6E6F6F70
>
<
00000000000000000000010101010101010102020202020202030303030304040404040405050505
0606060606070707070708080808090909090A0A0A0A0B0B0B0B0C0C0C0C0D0D0D0E0E0E0E0F0F0F
10101010111111121213131314141415151515161616171717181919191A1A1A1B1B1B1C1C1D1D1D
1E1E1E1F1F2020212121222223232324242525262626272828282929292A2B2B2C2C2C2D2E2E2E2F
3030303131323333333434353536363738383839393A3B3B3B3C3D3D3E3E3E3F4040414142424343
44454546464747484849494A4B4B4C4C4D4D4E4E4F5050515152535353545455565657575859595A
5B5B5C5D5D5D5E5F5F60616262636464656667676869696A6B6C6C6D6E6F
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000001010101010101010101010101010101
01010101010101020202020202020202020202020202020202030303030303030303040404040404
04040404050505050505050506060606060607070707070808080809090909090A0A0A0A0A0A0B0B
0B0C0C0C0D0D0D0D0E0E0F0F0F0F101011111111121213131314151516161617171819191A1A1A1B
1B1C1D1D1E1F1F20202122232324252526272728292A2B2C2D2E2F2F303132333435363738393A3B
3C3D3E3F3F404142434445464748494A4C4D4E4F50525354565758595B5C
>
<
FFFFFFFFFFFEFEFEFEFEFDFDFDFDFDFCFCFCFBFBFBFAFAFAFAF9F9F9F8F8F7F7F7F6F6F6F5F5F4F4
F3F3F3F2F2F1F1F0F0F0EFEFEEEEEDEDECECEBEBEAEAE9E9E8E8E7E7E6E6E5E4E4E3E3E2E2E1E1E0
DFDFDEDEDDDCDCDBDBDAD9D9D8D8D7D6D6D5D5D4D3D3D2D1D1D0CFCFCECDCDCCCBCBCAC9C9C8C7C7
C6C5C5C4C3C2C2C1C0C0BFBEBDBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9
A8A7A7A6A5A4A3A3A2A1A09F9F9E9D9C9B9A9A9998979695959493929190908F8E8D8C8B8A8A8988
8786858483828281807F7E7D7C7B7A7A797877767574737271706F6F6E6D6C6B6A69686766656463
6261605F5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
>
<
FFFFFFFFFFFEFEFEFEFEFDFDFDFDFDFCFCFCFBFBFBFAFAFAFAF9F9F9F8F8F7F7F7F6F6F6F5F5F4F4
F3F3F3F2F2F1F1F0F0F0EFEFEEEEEDEDECECEBEBEAEAE9E9E8E8E7E7E6E6E5E4E4E3E3E2E2E1E1E0
DFDFDEDEDDDCDCDBDBDAD9D9D8D8D7D6D6D5D5D4D3D3D2D1D1D0CFCFCECDCDCCCBCBCAC9C9C8C7C7
C6C5C5C4C3C2C2C1C0C0BFBEBDBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9
A8A7A7A6A5A4A3A3A2A1A09F9F9E9D9C9B9A9A9998979695959493929190908F8E8D8C8B8A8A8988
8786858483828281807F7E7D7C7B7A7A797877767574737271706F6F6E6D6C6B6A69686766656463
6261605F5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
>
<
FFFFFFFFFFFEFEFEFEFEFDFDFDFDFDFCFCFCFBFBFBFAFAFAFAF9F9F9F8F8F7F7F7F6F6F6F5F5F4F4
F3F3F3F2F2F1F1F0F0F0EFEFEEEEEDEDECECEBEBEAEAE9E9E8E8E7E7E6E6E5E4E4E3E3E2E2E1E1E0
DFDFDEDEDDDCDCDBDBDAD9D9D8D8D7D6D6D5D5D4D3D3D2D1D1D0CFCFCECDCDCCCBCBCAC9C9C8C7C7
C6C5C5C4C3C2C2C1C0C0BFBEBDBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9
A8A7A7A6A5A4A3A3A2A1A09F9F9E9D9C9B9A9A9998979695959493929190908F8E8D8C8B8A8A8988
8786858483828281807F7E7D7C7B7A7A797877767574737271706F6F6E6D6C6B6A69686766656463
6261605F5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
>
4 %_Br
[
0.5765 0.4392 0.4353 0.3608 0.2745 0.2745 0.2745 2 50 100 %_BS
%_0.5765 0.4392 0.4353 0.3608 0.2745 0.2745 0.2745 2 50 100 Bs
0 0 0 0 1 1 1 2 62.1469 0 %_BS
%_0 0 0 0 1 1 1 2 62.1469 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 7)
(Unnamed gradient 7) 0 2 Bd
[
<
302F2E2D2C2B2A29282827262524232221201F1E1D1C1B1B1A1817161514131211100F0E0D0C0B0A
0909080706050403020100
>
<
2120201F1E1E1D1D1C1B1B1A1919181717161515141313121110100F0E0E0D0C0C0B0A0A09080807
0606050404030302010100
>
<
1A1A1919181717161615151414131312111110100F0F0E0E0D0C0C0B0B0A0A090908080707060605
0504040303020201010000
>
<
03030303030202020202020202020202010101010101010101010101000000000000000000000000
0000000000000000000000
>
<
CCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E6E7E8E9EAEBECEDEEEFF0F1F2F3F4
F5F6F7F8F9FAFBFCFDFEFF
>
<
CCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E6E7E8E9EAEBECEDEEEFF0F1F2F3F4
F5F6F7F8F9FAFBFCFDFEFF
>
<
CCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E6E7E8E9EAEBECEDEEEFF0F1F2F3F4
F5F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 52.2472 %_BS
%_0 0 0 0 1 1 1 2 50 52.2472 Bs
0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 2 50 0 %_BS
%_0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 8)
(Unnamed gradient 8) 0 2 Bd
[
<
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909
09090909090909090909090909080808080808080808080808080707070707070707070707070707
07070707070707070707070707070707070707070707070708080808080808090909090909090909
090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090909090909
09090909090808080808080808080808080909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A
09090909090909090909090909090909090909090909090909090909090909090909090909090A0A
0A0A0A0A0A0909090909090909090909090909090909090909090909090909090909090909090909
09090909090909090909090909090909080808080808080808080808080808080808080808080808
08080809090909090909090909090909090909090909090909090808080808080808070707
>
<
1E1E1E1E1E1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F1F1F1F1F20202020202020202121212121212323
23232323242424242425252525262626262627272727292929292A2A2A2A2B2B2B2C2C2C2C2D2D2D
2E2E2E2F2F2F3030303131313232323333333434343535353636373737373738383839393A3A3A3B
3B3C3C3D3D3D3E3E3F3F404041414142424343444445454646474749494A4A4B4B4C4C4D4D4E4E4F
4F5050515152535354545555565657585859595A5B5B5C5C5D5D5E5F5F6060616262636464656566
67676869696A6B6B6C6C6D6E6E6F707071727474757676777878797A7A7B7C7D7D7E7F7F80818282
8384858586878788898A8B8B8C8D8E8E8F90919192939495959697999A9A9B9C9D9E9E9FA0A1A2A2
A3A4A5A6A7A7A8A9AAABACADADAEB0B1B2B3B4B4B5B6B7B8B9BABBBCBCBDBEBFC0C1C2C3C4C5C5C6
C7C8C9CACBCDCECFD0D2D3D4D5D6D6D7D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEAEBEC
>
<
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
EFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F1
F1F1F1F1F1F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEB
EBEBEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7
E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6
E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8
E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
0.0039
0.9765
<
DCDCDCDCDCDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D8D8
D8D8D8D8D7D7D7D7D7D6D6D6D6D5D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D0D0D0D0CFCFCF
CECECECDCDCDCCCCCCCBCBCBCACACAC9C9C9C8C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0
C0BFBFBEBEBEBDBDBCBCBBBBBABABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEAD
ADACACABABAAA9A9A8A8A7A7A6A6A5A4A4A3A3A2A1A1A0A09F9F9E9D9D9C9C9B9A9A999898979796
959594939392919190908F8E8E8D8C8C8B8A8989888787868585848383828180807F7E7E7D7C7B7B
7A797878777676757473727271706F6F6E6D6C6C6B6A696868676665646463626160605F5E5D5C5C
5B5A5958575756555453525151504F4E4D4C4B4B4A49484746454443434241403F3E3D3C3B3A3A39
3837363534333231302F2E2D2C2B2B2A292827262524232221201F1E1D1C1B1A1918171615
>
0.0431
4 %_Br
[
0.0275 0.9255 0.9098 0.0039 0.9765 0.0824 0.0431 2 50 82.0225 %_BS
%_0.0275 0.9255 0.9098 0.0039 0.9765 0.0824 0.0431 2 50 82.0225 Bs
0.0392 0.1176 0.9333 0.0039 0.9765 0.8627 0.0431 2 67.9688 12.9213 %_BS
%_0.0392 0.1176 0.9333 0.0039 0.9765 0.8627 0.0431 2 67.9688 12.9213 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 9)
(Unnamed gradient 9) 0 2 Bd
[
<
00010203040506070809090A0B0C0D0E0F101112131415161718191A1B1B1C1D1E1F202122232425
272828292A2B2C2D2E2F3030313233343536373838393A3B3C3D3E3F3F40414243444445464748
>
<
0001010203030404050606070808090A0A0B0C0C0D0E0E0F10101111121313141515161717181919
1B1B1C1D1D1E1E1F202021222223242425252627272829292A2B2B2C2C2D2E2E2F303031313233
>
<
00000101020203030404050506060707080809090A0A0B0B0C0C0D0D0E0E0F0F1010111112131314
1515161617171819191A1A1B1B1C1D1D1E1E1F1F20212122222323242525262627282829292A2B
>
<
00000000000000000000000000000000000000000000000101010101010101010101010102020202
020202020202030303030303040404040404040505050505050606060607070707080808090909
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
>
4 %_Br
[
0.2824 0.2 0.1686 0.0353 0.6902 0.6902 0.6902 2 50 100 %_BS
%_0.2824 0.2 0.1686 0.0353 0.6902 0.6902 0.6902 2 50 100 Bs
0 0 0 0 1 1 1 2 50 34.2697 %_BS
%_0 0 0 0 1 1 1 2 50 34.2697 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 1 ([Registration]) 0 Xs
([Registration]) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(\321\353\356\351 1) Ln
0 A
u
u
1 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
1345.7021 2561.4087 m
1516.4697 2139.4707 l
1626.5186 2273.5254 l
1648.9131 2273.5254 1669.5186 2273.5254 V
1771.2295 2168.0781 2156.3525 1695.3965 2131.0068 1250.7051 C
2128.4521 799.7832 1735.9189 436.4512 1254.2568 439.1777 c
772.5986 441.9063 384.2041 809.6621 386.7568 1260.582 C
386.4951 1939.9229 994.5186 2405.707 y
1037.5186 2405.707 l
1097.5439 2262.1914 l
1302.7021 2561.4087 l
1345.7021 2561.4087 l
Bb
1 (Unnamed gradient 26) 1259.3936 2864.6963 -90 3072.5408 1 0.0004 0.0004 0.9362 -3.3287 585.7408 Bg
1.1105 -2876.4626 -1776.4906 0.6422 2157.9355 2775.5 Xm
2.4303 -6295.2686 -1776.4906 0.6422 2155.5054 9070.7686 Bc
1.1105 -2876.4626 -1776.4906 0.6422 2157.9355 2775.5 Bm
2.4303 -6295.2686 -1776.4906 0.6422 2159.0459 -100.9629 Bc
f
0 BB
1559.4697 2139.4707 m
1669.5186 2273.5254 l
2202.9736 1758.9238 2174.0068 1250.7051 V
2171.4521 799.7832 1778.9189 436.4512 1297.2568 439.1777 c
815.5986 441.9063 427.2041 809.6621 429.7568 1260.582 C
429.4951 1939.9229 1037.5186 2405.707 y
1140.5439 2262.1914 l
1345.7021 2561.4087 l
1559.4697 2139.4707 l
Bb
1 (Unnamed gradient 9) 2047.0591 1919.1143 -145.9981 1698.7942 1 0 0 1 0 0 Bg
-1408.3331 -949.9998 -1147.0482 1700.4486 2651.6924 1022.7725 Xm
-6450.3779 -4351.1426 -1147.0482 1700.4486 8619.4395 5048.3535 Bc
-925.7022 -624.4382 -1147.0482 1700.4486 2169.0615 697.2109 Bm
-6450.3779 -4351.1426 -1147.0482 1700.4486 1243.3594 72.7725 Bc
f
0 BB
2155.3564 1086.2598 m
2071.9268 714.6699 1718.7119 436.791 1297.2568 439.1777 c
815.5986 441.9063 427.2041 809.6621 429.7568 1260.582 C
429.6455 1548.6211 538.8896 1798.2676 664.7744 1990.2979 C
447.6553 1090.8047 1582.9639 424.9727 2155.3564 1086.2598 C
Bb
1 (Unnamed gradient 4) 392.6743 572.2822 40.2521 1779.7665 1 0 0 1 0 0 Bg
1358.333 1150 1219.163 -1440.0255 -194.3057 1265.5986 Xm
4508.2251 3816.7803 1219.163 -1440.0255 -4702.5308 -2551.1816 Bc
1358.333 1150 1219.163 -1440.0255 -194.3057 1265.5986 Bm
4508.2251 3816.7803 1219.163 -1440.0255 1164.0273 2415.5986 Bc
f
0 BB
U
u
1546.374 1937.4492 m
1659.2002 2083.5254 l
2060.71 1678.0352 2036.1006 1246.2637 V
2033.9307 863.1719 1700.4443 554.4961 1291.2373 556.8125 c
882.0322 559.1289 552.0635 871.5664 554.2314 1254.6563 C
554.0088 1831.8066 1012.5186 2227.5254 y
1116.7842 2045.3418 l
1332.3955 2359.8047 l
1546.374 1937.4492 l
Bb
1 (Unnamed gradient 11) 1295.6147 2614.8848 -90 2610.3306 1 0.0004 0.0004 0.9362 -3.3287 585.7408 Bg
0.9434 -2443.749 -1512.958 0.5469 2062.3765 2541.665 Xm
2.4558 -6361.439 -1512.958 0.5469 2060.1641 8271.5742 Bc
0.4081 -1057.1277 -1512.958 0.5469 2062.6201 1910.1348 Bm
2.4558 -6361.439 -1512.958 0.5469 2063.0283 853.0068 Bc
f
0 BB
1541.6807 1893.2354 m
1661.1143 2035.626 l
2018.667 1665.9453 1995.4111 1257.9395 V
1993.3604 895.9316 1678.2295 604.2441 1291.5439 606.4336 c
904.8604 608.623 593.0518 903.8633 595.1006 1265.8691 C
594.8916 1811.2539 1009.8506 2185.8047 y
1116.085 1997.5684 l
1330.4365 2310.1934 l
1541.6807 1893.2354 l
Bb
1 (Unnamed gradient 5) 2158.0986 1724.1465 -161.252 2411.2725 1 0 0 1 0 0 Bg
-2283.333 -775.0002 -556.4254 1639.3602 2450.0161 864.0898 Xm
-7292.7329 -2475.2717 -556.4254 1639.3602 9511.8506 3260.9902 Bc
-1244.2883 -422.3316 -556.4254 1639.3602 2219.1177 785.7188 Bm
-7292.7329 -2475.2717 -556.4254 1639.3602 974.8291 363.3867 Bc
f
0 BB
1541.6807 1893.2354 m
1661.1143 2035.626 l
2018.667 1665.9453 1995.4111 1257.9395 V
1961.8057 886.5781 1328.1572 879.1484 992.9365 1184.8594 C
744.0498 1411.8359 689.4385 1865.3906 1009.8506 2185.8047 C
1044.2822 2124.7949 1116.085 1997.5684 y
1330.4365 2310.1934 l
1541.6807 1893.2354 l
Bb
1 (Unnamed gradient 1) 1392.0786 2512.3159 -90 1945.0723 1 0.0004 0.0004 0.9362 -3.3287 585.7408 Bg
0.703 -1820.9449 -1333.1516 0.4819 2020.3657 2445.6572 Xm
2.5086 -6498.1577 -1333.1516 0.4819 2017.9282 8759.6738 Bc
0.3238 -838.8622 -1333.1516 0.4819 2020.437 2261.5166 Bm
2.5086 -6498.1577 -1333.1516 0.4819 2020.7607 1422.6543 Bc
f
0 BB
1541.6807 1893.2354 m
1661.1143 2035.626 l
2018.667 1665.9453 1995.4111 1257.9395 V
1964.2354 951.5996 1420.7646 990.4043 1088.2979 1235.4141 C
796.3076 1450.5957 682.5518 1858.5039 1009.8506 2185.8047 C
1044.2822 2124.7949 1116.085 1997.5684 y
1330.4365 2310.1934 l
1541.6807 1893.2354 l
Bb
1 (Unnamed gradient 8) 1735.9072 2361.5332 -112.1094 1726.9916 1 0 0 1 0 0 Bg
-650 -1600 -1420.0647 576.9013 2425.3887 2081.4316 Xm
-2721.1057 -6698.106 -1420.0647 576.9013 5062.5059 8572.7969 Bc
-449.1573 -1105.6179 -1420.0647 576.9013 2341.3999 1874.6904 Bm
-2721.1057 -6698.106 -1420.0647 576.9013 1892.2427 769.0723 Bc
f
0 BB
1740.876 1787.8584 m
1806.2861 1722.4492 1913.7061 1518.6836 1921.5732 1345.9141 C
1921.6865 1235.168 1838.0732 1169.1289 1718.8955 1143.5762 C
1825.1572 1319.291 1798.5908 1590.7539 1740.876 1787.8584 C
Bb
1 (Unnamed gradient 22) 1917.7119 2563.7148 -112.1094 966.1472 0.9948 -0.1023 0.1023 0.9948 -790.1757 1531.6984 Bg
-270.1931 -927.5969 -318.9081 92.8925 2089.1816 1803.043 Xm
-2097.377 -7200.48 -318.9081 92.8925 4177.4512 8972.2549 Bc
-83.4867 -286.6171 -318.9081 92.8925 2080.0742 1771.7754 Bm
-177.5989 -609.7126 -318.9081 92.8925 1996.5874 1485.1592 Bm
-2097.377 -7200.48 -318.9081 92.8925 1818.9888 875.4453 Bc
f
0 BB
/BBAccumRotation (0.096778) XT
U
U
u
3693.0137 4740.9565 m
3800.1953 4680.1841 4524.6504 4222.8257 4524.6504 3516.3882 c
4524.6504 3036.1655 4135.3555 2646.8706 3655.1328 2646.8706 c
3174.9141 2646.8706 2785.6172 3036.1655 2785.6172 3516.3882 c
2785.6172 4262.7222 3655.1328 4740.9565 y
3684.7637 4740.9565 3693.0137 4740.9565 V
Bb
1 (Unnamed gradient 26) 3655.1338 4952.4951 -90 2838.2524 1 0 0 1 0 0 Bg
-0.0001 -2838.2524 -1743.0332 0.0001 4526.6504 4952.4951 Xm
-0.0004 -9137.5947 -1743.0332 0.0001 4526.6504 14090.0898 Bc
-0.0001 -2838.2524 -1743.0332 0.0001 4526.6504 4952.4951 Bm
-0.0004 -9137.5947 -1743.0332 0.0001 4526.6504 2114.2422 Bc
f
0 BB
4562.5313 3516.3882 m
4562.5313 3036.1655 4173.2363 2646.8706 3693.0137 2646.8706 c
3212.793 2646.8706 2823.498 3036.1655 2823.498 3516.3882 c
2823.498 4262.7222 3693.0137 4740.9565 y
4562.5313 4277.2144 4562.5313 3516.3882 v
Bb
1 (Unnamed gradient 12) 4780.1211 4584.0088 -137.0273 2665.104 1 0 0 1 0 0 Bg
-1950.0002 -1816.6669 -1435.7809 1541.1593 5465.6426 3848.1733 Xm
-7394.1919 -6888.6064 -1435.7809 1541.1593 12355.9023 10267.3037 Bc
-964.045 -898.1274 -1435.7809 1541.1593 4961.71 3378.6978 Bm
-7394.1919 -6888.6064 -1435.7809 1541.1593 3997.665 2480.5703 Bc
f
0 BB
4562.5313 3516.3882 m
4562.5313 3036.1655 4173.2363 2646.8706 3693.0137 2646.8706 c
3212.793 2646.8706 2823.498 3036.1655 2823.498 3516.3882 c
2823.498 3845.6675 2992.7529 4122.7603 3181.9131 4329.6201 C
2828.7168 3245.2876 4218.9258 2823.8896 4562.5313 3516.3882 C
Bb
1 (Unnamed gradient 15) 4334.5283 4009.7886 -145.6293 2140.3696 1 0 0 1 0 0 Bg
-1766.6674 -1208.3331 -1102.3242 1611.6749 4919.3398 3154.7539 Xm
-8203 -5610.5391 -1102.3242 1611.6749 12824.5859 8561.6416 Bc
-1468.9146 -1004.6815 -1102.3242 1611.6749 4621.5869 2951.1025 Bm
-8203 -5610.5391 -1102.3242 1611.6749 3152.6719 1946.4209 Bc
f
0 BB
4412.9316 3546.9312 m
4412.9316 3149.3315 4090.6152 2827.0132 3693.0137 2827.0132 c
3295.416 2827.0132 2973.0977 3149.3315 2973.0977 3546.9312 c
2973.0977 4164.8589 3693.0137 4560.814 y
4412.9316 4176.8589 4412.9316 3546.9312 v
Bb
1 (Unnamed gradient 13) 3693.0146 4735.9575 -90 2349.9341 1 0 0 1 0 0 Bg
-0.0001 -2349.9341 -1443.834 0.0001 4414.9316 4735.9575 Xm
-0.0004 -9211.8711 -1443.834 0.0001 4414.9316 13947.8281 Bc
-0.0001 -2349.9341 -1443.834 0.0001 4414.9316 4735.9575 Bm
-0.0004 -9211.8711 -1443.834 0.0001 4414.9316 2386.0234 Bc
f
0 BB
4382.4766 3553.1499 m
4382.4766 3172.3687 4073.793 2863.687 3693.0137 2863.687 c
3312.2363 2863.687 3003.5527 3172.3687 3003.5527 3553.1499 c
3003.5527 4144.937 3693.0137 4524.1401 y
4382.4766 4156.4272 4382.4766 3553.1499 v
Bb
1 (Unnamed gradient 24) 4631.625 3829.1582 -171.573 2293.6709 1 0 0 1 0 0 Bg
-2268.9072 -336.1346 -249.4741 1683.9493 4759.8984 2963.3105 Xm
-10017.79 -1484.1177 -249.4741 1683.9493 14777.6895 4447.4282 Bc
-1274.6666 -188.8396 -249.4741 1683.9493 4759.8984 2963.3105 Bm
-994.2405 -147.295 -249.4741 1683.9493 3485.2314 2774.4712 Bm
-10017.79 -1484.1177 -249.4741 1683.9493 2490.9912 2627.1758 Bc
f
0 BB
4382.4766 3553.1499 m
4382.4766 3221.4722 3831.3359 3150.3354 3515.2344 3346.5542 C
3180.1387 3554.564 3090.0098 4050.3979 3502.8242 4395.0933 C
3610.6328 4478.8296 3693.0137 4524.1401 y
4382.4766 4156.4272 4382.4766 3553.1499 V
Bb
1 (Unnamed gradient 16) 4258.6699 4308.4751 -130.3141 1558.6381 1 0 0 1 0 0 Bg
-1008.4036 -1188.476 -1163.4473 987.1672 4868.4258 3791.1064 Xm
-6415.9663 -7561.6768 -1163.4473 987.1672 11278.7266 11346.1064 Bc
-521.1973 -614.2685 -1163.4473 987.1672 4862.7607 3784.4297 Bm
-481.5412 -567.5308 -1163.4473 987.1672 4341.5635 3170.1611 Bm
-6415.9663 -7561.6768 -1163.4473 987.1672 3860.0225 2602.6304 Bc
f
0 BB
4382.4766 3553.1499 m
4382.4766 3342.2202 3854.6152 3269.9155 3540.6934 3475.7554 C
3254.4609 3663.437 3161.498 4107.189 3502.8242 4395.0933 C
3610.6328 4478.8296 3693.0137 4524.1401 y
4382.4766 4156.4272 4382.4766 3553.1499 V
Bb
1 (Unnamed gradient 14) 3833.1885 4642.4233 -90 1587.0254 1 0 0 1 0 0 Bg
-0.0001 -1587.0254 -1224.9785 0.0001 4384.4766 4642.4233 Xm
-0.0004 -9408.9053 -1224.9785 0.0001 4384.4766 14051.3281 Bc
0 -891.5871 -1224.9785 0.0001 4384.4766 4642.4233 Bm
0 -695.4383 -1224.9785 0.0001 4384.4766 3750.8364 Bm
-0.0004 -9408.9053 -1224.9785 0.0001 4384.4766 3055.3979 Bc
f
0 BB
4267.3359 3633.9624 m
4267.3359 3543.8101 4145.332 3485.6968 3994.041 3477.062 C
3994.8672 4061.2769 3722.3984 4401.4175 y
4267.3359 4110.7827 4267.3359 3633.9624 V
Bb
1 (Unnamed gradient 18) 3994.8672 4494.793 -90 1252.8397 1 0 0 1 0 0 Bg
-0.0001 -1252.8397 -548.9375 0 4269.3359 4494.793 Xm
-0.0004 -9595.4912 -548.9375 0 4269.3359 13836.9014 Bc
0 -816.4573 -548.9375 0 4269.3359 4241.4097 Bm
-0.0004 -9595.4912 -548.9375 0 4269.3359 3424.9521 Bc
f
0 BB
U
u
0 Ap
3100.2207 1769.373 m
2819.5137 2238.5332 3339.168 2616.4185 3625.8203 2218.6426 C
3867.1113 2575.7114 4476.5859 2269.8418 4151.9609 1768.9805 C
4711.3867 2009.8359 4936.5898 1356.1348 4563.3926 1205.4102 C
5018.5078 885.8848 4432.4766 259.6895 3783.4316 839.4199 C
3783.4316 713.3906 4035.4863 461.0098 y
3771.8359 335.3066 l
3739.3203 335.3066 l
3540.7422 498.4492 3512.4707 854.2813 V
2780.5781 196.6768 2340.0518 959.502 2694.7539 1188.9844 C
2286.9253 1392.9902 2592.4648 2042.9883 3100.2207 1769.373 C
Bb
1 (Unnamed gradient 6) 4609.998 2173.4434 -137.7875 2329.6899 1 0 0 1 0 0 Bg
-1725.5031 -1565.2776 -1720.7485 1896.8883 5483.5547 1210.4668 Xm
-7606.522 -6900.2012 -1720.7485 1896.8883 13090.0762 8110.668 Bc
-1725.5031 -1565.2776 -1720.7485 1896.8883 5483.5547 1210.4668 Bm
-7606.522 -6900.2012 -1720.7485 1896.8883 3758.0518 -354.8105 Bc
f
0 BB
3132.7363 1769.373 m
2852.0293 2238.5332 3371.6836 2616.4185 3658.3359 2218.6426 C
3899.627 2575.7114 4509.1016 2269.8418 4184.4766 1768.9805 C
4743.9023 2009.8359 4969.1055 1356.1348 4595.9082 1205.4102 C
5051.0234 885.8848 4464.9902 259.6895 3815.9473 839.4199 C
3815.9473 713.3906 4068.002 461.0098 y
3771.8359 335.3066 l
3573.2578 498.4492 3544.9863 854.2813 V
2813.0938 196.6768 2372.5674 959.502 2727.2695 1188.9844 C
2319.4404 1392.9902 2624.9785 2042.9883 3132.7363 1769.373 C
Bb
1 (Unnamed gradient 10) 4642.5117 2173.4434 -137.7875 2329.689 1 0 0 1 0 0 Bg
-1725.5023 -1565.277 -1720.7485 1896.8883 5516.0684 1210.4668 Xm
-7630.604 -6922.0474 -1720.7485 1896.8883 12875.2461 7886.291 Bc
-1454.0751 -1319.0537 -1720.7485 1896.8883 5244.6416 964.2432 Bm
-7630.604 -6922.0474 -1720.7485 1896.8883 3790.5664 -354.8105 Bc
f
0 BB
2711.9004 1786.1943 m
2499.0488 1478.9316 3094.4551 1348.6348 3656.0127 1189.001 C
4168.8398 1043.2207 4669.2803 681.666 4669.2803 1142.2744 C
4977.5234 812.3213 4424.4248 295.9229 3815.9473 839.4199 C
3815.9473 713.3906 4068.002 461.0098 y
3771.8359 335.3066 l
3573.2578 498.4492 3544.9863 854.2813 V
2813.0938 196.6768 2372.5674 959.502 2727.2695 1188.9844 C
2455.1323 1325.1143 2500.6333 1659.8281 2711.9004 1786.1943 C
Bb
1 (Unnamed gradient 7) 2336.3838 1281.75 -13.7159 2530.4941 1 0 0 1 0 0 Bg
2458.333 -600 -361.3988 -1480.7311 2474.1665 1846.2764 Xm
7733.458 -1887.4882 -361.3988 -1480.7311 -5259.2915 3733.7646 Bc
1284.4097 -313.4831 -361.3988 -1480.7311 2474.1665 1846.2764 Bm
7733.458 -1887.4882 -361.3988 -1480.7311 3758.5762 1532.793 Bc
f
0 BB
3276.207 1639.0898 m
2930.8867 2151.3496 3404.6055 2509.7036 3658.5293 2120.3398 C
3872.2734 2473.4375 4392.9805 2239.7266 4050.8555 1648.2676 C
4657.0449 1972.2559 4850.1309 1382.877 4489.0605 1222.7852 C
4940.8809 939.7402 4358.3457 338.5273 3722.5684 1048.6426 C
3692.3145 753.707 3955.3496 495.9707 y
3808.0488 428.6445 l
3563.2363 668.0156 3591.9297 1036.957 V
2943.5957 340 2427.1196 912.5156 2833.7617 1208.2344 C
2472.4946 1388.9492 2653.5469 1953.418 3276.207 1639.0898 C
Bb
1 (Unnamed gradient 27) 2627.7129 647.7559 34.0412 2172.2468 1 0 0 1 0 0 Bg
1800.0001 1216 1308.2306 -1936.5256 2006.3584 1567.5234 Xm
6910.5869 4668.4849 1308.2306 -1936.5256 -4358.1611 -2732.0635 Bc
657.3036 444.045 1308.2306 -1936.5256 2552.4258 1936.4219 Bm
6910.5869 4668.4849 1308.2306 -1936.5256 3209.7295 2380.4668 Bc
f
0 BB
3325.1914 1593.3672 m
2938.916 2141.4199 3412.4766 2490.5703 3658.5449 2096.8711 C
3894.7148 2468.084 4384.7129 2189.8145 3998.8691 1599.5391 C
4641.8105 1969.0117 4823.291 1382.2246 4463.3809 1227.084 C
4914.0313 907.3496 4324.2188 393.1543 3708.1113 1091.4297 C
3648.2031 751.582 3926.2207 502.7988 y
3819.0977 458.1836 l
3567.6582 716.7949 3613.2227 1092.084 V
3011.5078 390.1289 2439.8433 877.1035 2859.293 1212.9844 C
2488.2388 1400.373 2681.8184 1941.791 3325.1914 1593.3672 C
Bb
1 (Unnamed gradient 30) 4742.8926 1575.3828 -169.3803 2461.9102 1 0 0 1 0 0 Bg
-2419.7429 -453.7018 -411.6113 2195.2605 4943.1816 507.1748 Xm
-10302.4551 -1931.7104 -411.6113 2195.2605 15245.6367 2438.8848 Bc
-1522.5347 -285.4753 -411.6113 2195.2605 4943.1816 507.1748 Bm
-435.0099 -81.5644 -411.6113 2195.2605 3420.6475 221.6992 Bm
-10302.4551 -1931.7104 -411.6113 2195.2605 2985.6367 140.1348 Bc
f
0 BB
4141.6016 965.4492 m
3828.5469 1041.0645 3491.4238 1233.2578 3325.1914 1593.3672 C
2938.916 2141.4199 3412.4766 2490.5703 3658.5449 2096.8711 C
3894.7148 2468.084 4384.7129 2189.8145 3998.8691 1599.5391 C
4641.8105 1969.0117 4823.291 1382.2246 4463.3809 1227.084 C
4663.4453 1087.0176 4435.5195 906.7949 4141.6016 965.4492 C
Bb
1 (Unnamed gradient 29) 4672.0684 1764.7422 -169.3803 1674.9106 1 0 0 1 0 0 Bg
-1646.2231 -308.6668 -322.3545 1719.2241 4819.8047 976.8135 Xm
-10265.3213 -1924.7473 -322.3545 1719.2241 14853.9141 2858.2085 Bc
-638.1426 -119.6517 -322.3545 1719.2241 4588.5938 933.4609 Bm
-601.149 -112.7154 -322.3545 1719.2241 3950.4512 813.8096 Bm
-10265.3213 -1924.7473 -322.3545 1719.2241 3349.3018 701.0938 Bc
f
0 BB
4068.002 1053.6699 m
3886.8555 1091.9023 3532.3828 1242.7109 3325.1914 1593.3672 C
2938.916 2141.4199 3412.4766 2490.5703 3658.5449 2096.8711 C
3894.7148 2468.084 4384.7129 2189.8145 3998.8691 1599.5391 C
4641.8105 1969.0117 4823.291 1382.2246 4463.3809 1227.084 C
4663.4453 1087.0176 4361.9219 995.0156 4068.002 1053.6699 C
Bb
1 (Unnamed gradient 17) 4664.9961 1802.4629 -169.3803 1674.9106 1 0 0 1 0 0 Bg
-1646.2231 -308.6668 -303.8754 1620.6688 4801.3262 1075.3691 Xm
-10258.3701 -1923.4442 -303.8754 1620.6688 14846.9824 2958.9297 Bc
-1433.509 -268.7829 -303.8754 1620.6688 4588.6123 1035.4854 Bm
-10258.3701 -1923.4442 -303.8754 1620.6688 3155.1035 766.7021 Bc
f
0 BB
4332.5801 1678.332 m
4562.2969 1681.8125 4631.9922 1471.4883 4525.0449 1335.9199 C
4525.0449 1475.8633 4459.0605 1589.2891 4332.5801 1678.332 C
Bb
1 (Unnamed gradient) 4577.3789 1534.9824 -169.3803 250.0106 1 0 0 1 0 0 Bg
-245.7284 -46.0741 -69.2955 369.576 4612.0264 1350.1943 Xm
-10136.71 -1900.6333 -69.2955 369.576 14747.3555 3250.5688 Bc
-179.4646 -33.6496 -69.2955 369.576 4610.6455 1349.9355 Bm
-10136.71 -1900.6333 -69.2955 369.576 4431.1807 1316.2861 Bc
f
0 BB
3870.6836 2195.7168 m
4035.9707 2238.0195 4192.7441 2052.8027 4019.123 1736.2227 C
4007.8691 1715.7012 4061.459 2004.9395 3870.6836 2195.7168 C
Bb
1 (Unnamed gradient 28) 4109.2988 1996.5762 -169.3803 230.914 1 0 0 1 0 0 Bg
-226.959 -42.5548 -94.3914 503.4206 4157.0977 1741.6475 Xm
-9726.1855 -1823.6597 -94.3914 503.4206 13882.0078 3565.0679 Bc
-165.7566 -31.0794 -94.3914 503.4206 4155.8223 1741.4082 Bm
-9726.1855 -1823.6597 -94.3914 503.4206 3990.0654 1710.3291 Bc
f
0 BB
U
u
783.1201 4121.5122 m
963.1152 4816.9346 1886.7949 4664.7153 1949.936 4086.0278 C
2875.3213 4081.6602 2649.2588 2660.667 1549.79 3068.2153 C
385.2539 2537.8184 -190.8633 3904.2461 783.1201 4121.5122 C
Bb
1 (Unnamed gradient 35) 2419.0156 4055.0146 -160.7475 2360.1689 0.9998 -0.0181 0.0181 0.9998 -124.334 130.286 Bg
-2213.6982 -818.4971 -905.5532 2449.1494 2902.0381 2751.998 Xm
-8018.5269 -2964.7856 -905.5532 2449.1494 10920.5645 5716.7837 Bc
-2213.6982 -818.4971 -905.5532 2449.1494 2902.0381 2751.998 Bm
-8018.5269 -2964.7856 -905.5532 2449.1494 688.3398 1933.501 Bc
f
0 BB
823.7412 4135.0156 m
1003.7363 4830.438 1927.417 4678.2178 1990.5571 4099.5313 C
2915.9424 4095.1621 2689.8828 2674.1699 1590.4111 3081.7188 C
425.8765 2551.3203 -175.9033 3889.1958 823.7412 4135.0156 C
Bb
1 (Unnamed gradient 9) 2460.0928 4067.8545 -160.7475 2375.3096 0.9998 -0.0181 0.0181 0.9998 -124.334 130.286 Bg
-2227.8992 -823.7478 -905.5537 2449.1506 2942.876 2765.5796 Xm
-8056.8384 -2978.9512 -905.5537 2449.1506 10236.2217 5462.2354 Bc
-1464.4058 -541.4523 -905.5537 2449.1506 2179.3828 2483.2842 Bm
-8056.8384 -2978.9512 -905.5537 2449.1506 714.9771 1941.832 Bc
f
0 BB
570.125 4031.0059 m
147.2651 3236.1201 2492.0469 3078.6411 2523.3799 3793.2935 C
2697.3936 3399.5039 2355.21 2798.2251 1590.4111 3081.7188 C
547.481 2606.7065 -62.9497 3644.6885 570.125 4031.0059 C
Bb
1 (Unnamed gradient 2) 2271.8853 3798.7583 -163.8184 1950.9504 0.9998 -0.0181 0.0181 0.9998 -124.334 130.286 Bg
-1863.4935 -577.5804 -506.2451 1633.3385 2566.3896 2861.5854 Xm
-7880.4258 -2442.4983 -506.2451 1633.3385 10206.0264 5229.4526 Bc
-1591.298 -493.2148 -506.2451 1633.3385 2325.6011 2786.9541 Bm
-7880.4258 -2442.4983 -506.2451 1633.3385 734.3032 2293.7393 Bc
f
0 BB
931.5361 4070.3438 m
1079.6641 4642.645 1839.8115 4517.3765 1891.7734 4041.1416 C
2643.9053 4027.7793 2590.1924 2853.1699 1562.4717 3203.5273 C
469.4785 2738.458 51.9878 3912.2227 931.5361 4070.3438 C
Bb
1 (Unnamed gradient 33) 2149.8169 4088.5469 -147.9103 1754.8046 0.9998 -0.0181 0.0181 0.9998 -124.334 130.286 Bg
-1469.5526 -959.0381 -1272.3689 1949.6754 2849.6348 3020.0957 Xm
-6885.6831 -4493.6348 -1272.3689 1949.6754 9248.2188 7195.8467 Bc
-577.9141 -377.1499 -1272.3689 1949.6754 2362.5361 2702.2124 Bm
-6885.6831 -4493.6348 -1272.3689 1949.6754 1784.6221 2325.0625 Bc
f
0 BB
956.1191 4055.5957 m
1096.9795 4599.8198 1819.8345 4480.6958 1869.2476 4027.8267 C
2584.4785 4015.1191 2586.1211 2899.0928 1556.0996 3231.3047 C
474.6108 2788.2881 119.7207 3905.2329 956.1191 4055.5957 C
Bb
1 (Unnamed gradient 31) 2356.7837 4081.4272 -156.9087 2016.875 0.9998 -0.0181 0.0181 0.9998 -124.334 130.286 Bg
-1840.6371 -824.5239 -885.0362 1975.7224 2838.4326 3009.9263 Xm
-7510.8086 -3364.5098 -885.0362 1975.7224 9914.9336 6179.8853 Bc
-1406.3295 -629.9733 -885.0362 1975.7224 2404.125 2815.3755 Bm
-7510.8086 -3364.5098 -885.0362 1975.7224 997.7954 2185.4023 Bc
f
0 BB
1696.7397 3446.6353 m
1287.7783 3478.5044 922.1626 3689.2583 956.1191 4055.5957 C
1096.9795 4599.8198 1819.8345 4480.6958 1869.2476 4027.8267 C
2129.7969 4023.1978 2295.6504 3872.1519 2351.4297 3698.04 C
2401.3652 3504.4868 2011.5898 3422.1011 1696.7397 3446.6353 C
Bb
1 (Unnamed gradient 38) 2261.2622 4171.2632 -156.9087 1354.8691 0.9998 -0.0181 0.0181 0.9998 -124.334 130.286 Bg
-1236.4784 -553.8876 -628.292 1402.576 2533.6523 3561.5542 Xm
-7177.7734 -3215.3247 -628.292 1402.576 9711.4258 6776.8789 Bc
-1236.4784 -553.8876 -628.292 1402.576 2533.6523 3561.5542 Bm
-7177.7734 -3215.3247 -628.292 1402.576 1297.1738 3007.6665 Bc
f
0 BB
1652.9795 3513.1504 m
1244.0181 3545.0195 960.9106 3791.3857 956.1191 4055.5957 C
1096.9795 4599.8198 1819.8345 4480.6958 1869.2476 4027.8267 C
2129.7969 4023.1978 2295.6504 3872.1519 2351.4297 3698.04 C
2372.3691 3568.7988 1967.8301 3488.6162 1652.9795 3513.1504 C
Bb
1 (Unnamed gradient 36) 2247.8779 4195.8975 -156.9087 1321.5386 0.9998 -0.0181 0.0181 0.9998 -124.334 130.286 Bg
-1206.0603 -540.2617 -599.4517 1338.1941 2502.3936 3624.8525 Xm
-7167.9785 -3210.937 -599.4517 1338.1941 9155.4248 6605.1162 Bc
-691.1133 -309.5882 -599.4517 1338.1941 1987.4463 3394.1792 Bm
-7167.9785 -3210.937 -599.4517 1338.1941 1296.333 3084.5908 Bc
f
0 BB
2115.2324 3610.7847 m
2145.7988 3698.5449 2159.4521 3818.4526 2044.4834 3929.3257 C
2144.5132 3883.7217 2210.5537 3802.373 2239.1309 3713.1729 C
2245.9136 3671.3066 2194.7979 3636.1172 2115.2324 3610.7847 C
Bb
1 (Unnamed gradient 37) 2207.7549 3811.1675 -156.9087 178.7445 0.9998 -0.0181 0.0181 0.9998 -124.334 130.286 Bg
-163.1255 -73.073 -136.1501 303.9365 2276.2124 3670.3955 Xm
-7205.8403 -3227.8975 -136.1501 303.9365 9462.8076 6889.6719 Bc
-124.6352 -55.831 -136.1501 303.9365 2256.9673 3661.7744 Bm
-7205.8403 -3227.8975 -136.1501 303.9365 2132.332 3605.9434 Bc
f
0 BB
1470.4551 4332.4746 m
1623.6846 4307.6904 1762.25 4195.8701 1780.9336 4024.6377 C
1691.8271 4046.0645 1573.207 4001.0762 y
1605.2598 4202.4722 1470.4551 4332.4746 V
Bb
1 (Unnamed gradient 37) 1738.6299 4219.9624 -156.9087 245.4239 0.9998 -0.0181 0.0181 0.9998 -124.334 130.286 Bg
-223.9784 -100.3324 -168.3757 375.8757 1814.5791 4037.5186 Xm
-6798.6504 -3045.4944 -168.3757 375.8757 8586.8057 7071.1758 Bc
-171.1295 -76.6585 -168.3757 375.8757 1788.1548 4025.6816 Bm
-6798.6504 -3045.4944 -168.3757 375.8757 1617.0254 3949.0229 Bc
f
0 BB
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
