%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 10.0
%%For: (123) (123)
%%Title: (hands-pointers-7.eps)
%%CreationDate: 11/9/2009 12:37 AM
%%BoundingBox: 277 -1240 712 -766
%%HiResBoundingBox: 277.2793 -1239.2988 711.6689 -766.8623
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([Registration])
%%+ 0 0 0 (black)
%%+ 0 0.2314 0 (g1)
%%+ 0 0.4314 0.102 (g2)
%%+ 0.4784 0.8196 0 (g3)
%%+ 0.3412 0 0 (r1)
%%+ 0.5804 0 0 (r2)
%%+ 0.8902 0 0 (r3)
%%+ 0 0 0.1176 (w1)
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 3 () 
%AI3_TemplateBox: 494.5 -1002.3623 494.5 -1002.3623
%AI3_TileBox: 349 -648 917 168
%AI3_DocumentPreview: Header
%AI5_ArtSize: 450 470
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -48 -553.8623 1 1132 920 18 1 0 18 118 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:349 -648
%%AI3_PaperRect:-12 830 583 -12
%%AI3_Margin:12 -12 -12 12
%AI7_GridSettings: 150 15 150 15 0 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
18 Bn
%AI5_BeginGradient: (Unnamed gradient 103)
(Unnamed gradient 103) 1 2 Bd
[
<
8686868686878787878787888888888989898A8A8A8B8B8B8C8C8C8D8D8D8E8E8F8F8F9090919192
9293939494949595969697989899999A9A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A5A5A6A7A7A8
A9A9AAABABACADADAFB0AFB1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBDBDBEBFC0C1C1C3C4C5C5C6C7
C8CACBCBCCCDCED0D0D1D2D3D5D6D7D7D9DADBDDDEDFDFE0E2E2E3E4E4E5E5E5E5E5E6E7E7E7E7E8
E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECECEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000010101010101010101010101010101010101020202020202020202020202
02020202020303030304040405050505060606070707080708080809090909090A0A0A0B0A0B0B0B
0B0C0B0C0C0C0D0C0D0D0E0D0E0E0E0E0F0E0F0F0F0F101110101110111112121213141314141515
1616171718191A1A1B1D1E201F212324252627292A2B2B2D2E
>
<
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFE
FEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFE
FEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFDFEFE
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000001010101010101010101010101010101010101
01010101010102020202020202020202020202020202030303030303030303030404040404040404
040505050505060606060708070809090A0A0A0B0C0C0C0D0E
>
<
7A7A7A7A7A79797979797978787878777777767676757575747474737373727271717170706F6F6E
6E6D6D6C6C6C6B6B6A6A6968686767666665656464636262616160605F5E5E5D5D5C5B5B5A595958
5757565555545353525151504F4F4E4D4C4C4B4A4A494847474645444443424140403F3E3D3D3C3B
3A3938383736353434333231302F2E2E2D2C2B2A2928282726252423222120201F1E1D1C1B1A1918
1716151413131211100F0E0D0C0B0A09080706050403020100
>
<
D1D1D1D1D1D1D0D0D0D0D0D0CFCFCFCFCFCECECECECDCDCDCCCCCCCCCBCBCBCACACAC9C9C9C8C8C8
C7C7C6C6C6C5C5C4C4C4C3C3C2C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B5
B5B4B4B3B3B2B2B1B1B0AFAFAEAEADADACABABAAAAA9A8A8A7A7A6A5A5A4A4A3A2A2A1A0A09F9E9E
9D9C9C9B9B9A9999989796969594949392929190908F8E8D8D8C8B8B8A8988888786858584838282
81807F7F7E7D7C7C7B7A797878777675747473727170706F6E
>
<
00000000000000000000000000000101010101010101010101010101020202020202020202020202
03030303030303030304040404040404040405050505050505050606060606060606070707070707
0708080808080808090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0C0C0C0C0C0C0D0D0D0D0D0D
0E0E0E0E0E0E0F0F0F0F0F1010101010101111111111121212121213131313131314141414141515
151515161616161617171717171818181819191919191A1A1A
>
4 %_Br
[
0.5255 0 0.9843 0 0.4784 0.8196 0 2 63.253 0 %_BS
%_0.5255 0 0.9843 0 0.4784 0.8196 0 (g3) 0 1 5 63.253 0 Bs
0.9294 0.1804 0.9961 0.0549 0 0.4314 0.102 2 50 100 %_BS
%_0.9294 0.1804 0.9961 0.0549 0 0.4314 0.102 (g2) 0 1 5 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 115)
(Unnamed gradient 115) 0 3 Bd
[
<
484746454444434241403F3F3E3E3D3C3B3A39383837363635343332313130302F2E2E2D2C2B2B2A
292828282726262524242322222120201F1E1E1D1D1C1B1B1B1B1A19191818171716161515141313
131212111110100F0F0E0E0E0D0D0C0C0C0B0B0A0A0A090909090909080808070707070606060505
05050504040404030303030303020202020202010101010101010101010000000000000000000000
00000000
>
<
3332313130302F2E2E2D2C2C2B2B2B2A292928272726252525242423222222212020201F1E1E1E1D
1D1C1C1B1B1A1A19191918171717161615151514141313131212111111101010100F0F0E0E0E0D0D
0D0C0C0C0C0B0B0A0A0A0A0A09090808080808070707060606060606050505040404040404040303
03030303030303020202020202010101010101010101010101010101010000000000000000000000
00000000
>
<
2B2A2929282827262625252423232322222121201F1F1E1E1E1D1D1C1B1B1B1A1A19191918171717
161616151514141413131312121111111010100F0F0F0E0E0E0E0D0D0D0C0C0C0C0B0B0B0B0A0A0A
0A090909090808080807070707070606060606050505050505040404040404030303030303030202
02020202020202010101010101010101010101000000000000000000000000000000000000000000
00000000
>
<
09090908080807070707060606060605050505050504040404040404040403030303030303020202
02020202020202020202020202010101010101010101010101010101010101010101010000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000
>
<
B0B1B2B3B4B5B6B7B8B9BABBBCBCBDBEBFC0C1C2C3C4C5C5C6C7C8C9CACACBCCCDCECECFD0D1D1D2
D3D4D4D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E0E1E2E2E3E3E4E5E5E6E6E7E7E8E8E9E9EAEBEB
EBECECEDEDEEEEEFEFF0F0F0F1F1F2F2F2F3F3F4F4F4F5F5F5F6F6F6F7F7F7F8F8F8F8F9F9F9FAFA
FAFAFAFBFBFBFBFCFCFCFCFCFCFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFF
>
<
B0B1B2B3B4B5B6B7B8B9BABBBCBCBDBEBFC0C1C2C3C4C5C5C6C7C8C9CACACBCCCDCECECFD0D1D1D2
D3D4D4D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E0E1E2E2E3E3E4E5E5E6E6E7E7E8E8E9E9EAEBEB
EBECECEDEDEEEEEFEFF0F0F0F1F1F2F2F2F3F3F4F4F4F5F5F5F6F6F6F7F7F7F8F8F8F8F9F9F9FAFA
FAFAFAFBFBFBFBFCFCFCFCFCFCFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFF
>
<
B0B1B2B3B4B5B6B7B8B9BABBBCBCBDBEBFC0C1C2C3C4C5C5C6C7C8C9CACACBCCCDCECECFD0D1D1D2
D3D4D4D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E0E1E2E2E3E3E4E5E5E6E6E7E7E8E8E9E9EAEBEB
EBECECEDEDEEEEEFEFF0F0F0F1F1F2F2F2F3F3F4F4F4F5F5F5F6F6F6F7F7F7F8F8F8F8F9F9F9FAFA
FAFAFAFBFBFBFBFCFCFCFCFCFCFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFF
>
4 %_Br
<
4F4F4F4F4F4F4F4F4F4F4F4E4E4D4D4C4B4A48
>
<
38383838383838383838383737373736353433
>
<
30303030303030303030302F2F2E2E2E2D2C2B
>
<
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A09
>
<
A8A8A8A8A8A8A8A8A8A8A8A9A9AAAAABACAEB0
>
<
A8A8A8A8A8A8A8A8A8A8A8A9A9AAAAABACAEB0
>
<
A8A8A8A8A8A8A8A8A8A8A8A9A9AAAAABACAEB0
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 100 Bs
0.69 0 28.4314 38.5542 %_BS
%_0.69 0 28.4314 38.5542 Bs
0.66 0 87 0 %_BS
%_0.66 0 87 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 125)
(Unnamed gradient 125) 0 3 Bd
[
<
6C6B6A6A69676766656463636261605F5E5D5C5B5A5A59585756555453525251504F4E4D4C4B4A49
484746464544434241403F3E3D3C3C3B3A3937363534333231302F2E2E2D2C2B2A29282726252423
2221201F1E1D1D1C1B1A191817161514131211100F0E0D0C0B0A0908080706050403020100
>
<
4F4E4E4D4C4B4B4A4949484747464544444342424140403F3E3D3D3C3B3B3A393838373636353434
3332323130302F2E2E2D2C2C2B2A29292827262525242323222121201F1F1E1D1D1C1B1B1A191918
171716161514141312121110100F0E0E0D0C0C0B0A0A090808070606050404030302010100
>
<
3232313030302F2F2E2E2D2C2C2B2B2B2A2A2928282726272626252424232322232222212120201F
1F1F1F1E1E1D1D1C1C1B1C1B1B1A1A19191818191818171716161516151514141313121212111110
100F0F0E0E0E0D0D0C0C0C0B0B0A0A09090908080707060606050504040303020201010000
>
<
10100F0F0F0F0E0E0E0D0D0C0C0C0C0C0B0B0B0A0A0A0A0A09090909080808070707070707070606
06060606050505050504040404040404040303030303030303030202020202020202020202020101
01010101010101010101010101000000000000000000000000000000000000000000000000
>
<
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
DBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
DBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
98999A9B9C9C9D9E9FA0A1A2A3A4A4A5A6A7A8A9AAABACACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABB
BCBCBDBEBFC0C1C2C3C4C4C5C6C7C8C9CACBCCCCCDCECFD0D1D2D3D3D4D5D6D7D8D9DADBDBDCDDDE
DFE0E1E2E3E3E4E5E6E7E8E9EAEBEBECEDEEEFF0F1F2F3F3F4F5F6F7F8F9FAFBFBFCFDFEFF
>
4 %_Br
<
3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F404040404040404040404041414141
4141424242424243434343444444444545454646464747484847494949494B4A4B4B4C4D4D4E4E4F
5050515252535455545656585859595A5B5C5D5E5F606162636565666768696B6C
>
<
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2D2D2E2E2E2E
2E2E2E2E2E2E2E2F2F2F2F3030303031313031313132323333323333343435353535363737383738
39393A3A3A3B3C3C3C3D3E3F3F404041414243434445464747494A4A4B4C4D4E4F
>
<
25252525252525252525252525252525252525252525252525242424252525252525252525252525
26262525252525262626262525272726262727272727272727282727282827282828282829282A29
282A292A2A2A2A2A2C2B2C2B2C2C2C2D2C2D2E2E2E2E2F2F2F2F30313131313232
>
<
06060606060606060606060606060606060606060606060606060606070707070707070707070707
07070707070707070707070707080808080808080808080808080808080808090909090909090909
090A0A0A0A0A0A0B0B0B0B0B0C0C0C0C0C0C0D0D0D0D0D0D0E0E0F0F0F0F101010
>
<
BABABABABABABABABABABABABABABABABABABABABABABABABAB9B9B9B9B9B9B9B9B9B9B9B8B8B8B8
B8B8B7B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B1B1B1B0B0AFAFAEAEADADACABABAAAAA9
A8A8A7A6A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9998979695949291908F8E8D8B8A
>
<
BABABABABABABABABABABABABABABABABABABABABABABABABAB9B9B9B9B9B9B9B9B9B9B9B8B8B8B8
B8B8B7B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B1B1B1B0B0AFAFAEAEADADACABABAAAAA9
A8A8A7A6A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9998979695949291908F8E8D8B8A
>
<
BABABABABABABABABABABABABABABABABABABABABABABABABABABABAB9B9B9B9B9B9B9B9B9B9B9B9
B8B8B8B8B8B8B8B7B7B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B2B2B2B1B1B1B0B0AFAFAEAE
AEADADACACABABAAA9A9A8A8A7A6A6A5A5A4A3A2A2A1A0A09F9E9D9C9B9B9A9998
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 100 Bs
0.4235 0.3098 0.1961 0.0627 0.5412 0.5412 0.5961 2 50 81.3253 %_BS
%_0.4235 0.3098 0.2 0.0667 0 0 0.1176 (w1) 0.54 1 5 50 81.3253 Bs
0.73 0 79.2593 0 %_BS
%_0.73 0 79.2593 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 127)
(Unnamed gradient 127) 1 2 Bd
[
<
1B1B1B1B1B1B1B1B1B1B1B1B1B1B1C1B1B1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1E1E
1E1E1E1E1F1F1F1F1F20202020212121212222222223232323242424252525252626262727272828
282929292A2A2A2B2B2B2C2B2C2C2C2D2D2E2E2E2F2F303030313132323333343434353535353636
3737383839393A3A3B3B3C3C3D3D3E3E3F3F404141414142424343444545464647484849494A4A4A
4B4B4C4D4D4E4F4F505151525352545454555656575858595A5B5A5C5C5C5D5E5F5F606162626363
65646566676768696A6B6A6B6C6D6E6E6F70717271727374757676777778797A7B7C7C7D7D7E8080
8182818383848586878889898B8C8D8C8D8D8F90909192949495969798989A9B9C9D
>
<
12121212121212121212121212121313131313131313131313131313131313131414141414141515
15151515151515151516161616171717171717171718181818191919191919191A1A1A1B1B1B1B1B
1B1C1C1C1D1D1D1D1D1D1E1E1F1F1F1F1F2020202121212121222223222323242424242425252626
272627272828292929292A2A2B2B2B2B2C2C2D2D2D2E2E2F2F2F2F30313031313233333333343535
35353637373738383939393A3B3B3C3C3C3D3E3E3E3F3F3F40414142424243444544454647464748
4949494A4B4B4C4C4D4E4E4E4F50515051525354535455565657575858595A5B5B5C5C5D5E5E5F60
616161626363646566676768696A6B6A6B6C6D6E6E6F70717273737475767778797A
>
<
0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F
0F0F1010101010101010101010111111111111111111121212121212121213131313141313131414
1414141414151515161615161616171616171717171717181819191819191919191A1A1A1A1A1B1B
1A1B1B1C1B1C1C1C1C1C1D1D1D1D1E1E1F1F1E1F1F1F1F2020202021202121222122222222232323
2424242425242525252626272627272729282929292A2A2B2A2B2C2B2C2C2D2D2D2E2E2E2F302F30
2F3031313132323333333434353535363637373738393939393A3A3B3B3C3C3C3D3E3E3E3F403F40
40414242424344434444454645464748484949494A4B4B4B4C4C4D4E4E4F4F4F5051
>
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101020202020202020202020202020202020202
02020202020202020202020202020202020303030303030303030303030303030303030304040404
04040404040404040404040405050505050505050505050606060606060606070707070707070707
0808080808080808080909090909090A0A0A0A0A0A0B0B0B0B0B0C0C0C0C0C0D0C0D0D0D0D0E0E0E
0E0F0F0F0F1010101110111212121213131313131414151515161617171817181919191A1A1B1A1B
1C1C1D1D1E1F1F1F20202122212223242525252627282828292A2A2B2C2D2C2D2E2F
>
<
E3E3E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E0E0E0E0E0E0DFDF
DFDFDFDFDEDEDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADADAD9D9D9D8D8D8D8D7D7D7D6D6D6D5D5
D5D4D4D4D3D3D3D2D2D2D1D1D0D0D0CFCFCECECECDCDCCCCCCCBCBCACAC9C9C8C8C8C7C7C6C6C5C5
C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBABAB9B9B8B8B7B7B6B5B5B4B4B3B2B2B1B1B0AFAF
AEAEADACACABAAAAA9A8A8A7A6A6A5A4A4A3A2A2A1A0A09F9E9D9D9C9B9B9A999898979695959493
929291908F8F8E8D8C8B8B8A8988878786858483838281807F7E7E7D7C7B7A797877777675747372
7170706F6E6D6C6B6A69686766656464636261605F5E5D5C5B5A5958575655545352
>
<
E3E3E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E0E0E0E0E0E0DFDF
DFDFDFDFDEDEDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADADAD9D9D9D8D8D8D8D7D7D7D6D6D6D5D5
D5D4D4D4D3D3D3D2D2D2D1D1D0D0D0CFCFCECECECDCDCCCCCCCBCBCACAC9C9C8C8C8C7C7C6C6C5C5
C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBABAB9B9B8B8B7B7B6B5B5B4B4B3B2B2B1B1B0AFAF
AEAEADACACABAAAAA9A8A8A7A6A6A5A4A4A3A2A2A1A0A09F9E9D9D9C9B9B9A999898979695959493
929291908F8F8E8D8C8B8B8A8988878786858483838281807F7E7E7D7C7B7A797877777675747372
7170706F6E6D6C6B6A69686766656464636261605F5E5D5C5B5A5958575655545352
>
<
E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0
E0E0DFDFDFDFDFDEDEDEDEDEDEDDDDDDDDDDDCDCDCDCDBDBDBDBDADADADAD9D9D9D9D8D8D8D8D7D7
D7D6D6D6D6D5D5D5D4D4D4D3D3D3D2D2D2D1D1D1D0D0D0CFCFCECECECDCDCDCCCCCBCBCBCACAC9C9
C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B6B6
B5B5B4B4B3B3B2B2B1B0B0AFAFAEAEADACACABABAAA9A9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E
9E9D9C9C9B9A9A99989897969595949393929191908F8E8E8D8C8C8B8A8989888786868584838382
81807F7F7E7D7C7C7B7A7978787776757473737271706F6F6E6D6C6B6A6969686766
>
4 %_Br
[
0.89 0 69.2771 0 %_BS
%_0.89 0 69.2771 0 Bs
0.6157 0.4784 0.3176 0.1843 0.3216 0.3216 0.4 2 50 100 %_BS
%_0.6157 0.4784 0.3176 0.1843 0 0 0.1176 (w1) 0.32 1 5 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 165)
(Unnamed gradient 165) 0 3 Bd
[
<
4B4B4B4C4C4D4D4E4E4E4F4F5050515152525253535454555555565657575858585859595A5A5B5B
5B5C5C5D5D5D5E5E5F5F5F606061616162626363636464646565
>
<
EDECECECECECECECECECECECEDEDEDEDEDEDEDEEEEEEEEEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F3F3
F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F0F0EFEEEEEDEDEDECECEB
>
<
F5F6F6F6F7F7F8F8F8F8F7F7F7F7F6F6F6F6F5F5F5F4F4F3F3F3F2F1F1F0F0EFEEEEEEEDEDECECEB
EBEBEAEAE9E9E9E9E8E8E8E8E8E8E8E8E9EAEAEBECEDEDEEEFF0
>
<
2D2E2E2F3031323333343435363738393A3A3B3C3D3E3F40414242444546474849494A4B4C4D4E4F
51525354555658595A5B5C5D5F60616264656667696A6B6C6E6F
>
<
9493939291908F8E8E8D8C8B8A89888786868584838281807F7E7D7C7B7A79787777767574737271
706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857
>
0
0
4 %_Br
<
1919191A1A1B1C1C1D1D1E1E1F20212121222323242425252627282828292A2A2B2C2C2C2D2E2E2F
30313132333333343535363737383839393A3B3B3C3C3C3D3D3E3E3F404041414242434444454546
4647474849494A4A4A4B
>
0.9294
<
F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F4F4F4F3F3F3F2F2F2F1F1F1F0F0F0EFEFEFEFEEEE
EEEDEDEDECECECECEBEBEBEBEBEBEBEAEAEAEAEBEBEBEBEBEBEBEBECECECECEDEDEDEEEEEFEFEFF0
F0F1F2F2F3F3F4F4F5F5
>
<
04040404040505050505050506060606060707070808080909090A0A0A0A0B0B0C0C0C0C0D0D0E0E
0F0F0F1010101111121213131414151616171818191A1A1A1B1C1C1D1E1E1F202021222223242525
26272828292A2B2C2D2D
>
<
E3E3E2E1E1E0DFDFDEDDDCDCDBDAD9D8D8D7D6D5D4D4D3D2D1D0CFCFCECDCCCBCAC9C8C8C7C6C5C4
C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
9D9C9B9A999897969594
>
0
0
4 %_Br
[
0.3961 0.9216 0.9412 0.4353 0.3412 0 0 2 52.4096 100 %_BS
%_0.3961 0.9216 0.9412 0.4353 0.3412 0 0 (r1) 0 1 5 52.4096 100 Bs
0.2941 0.9294 0.9608 0.1765 0.5804 0 0 2 52.4096 59.0361 %_BS
%_0.2941 0.9294 0.9608 0.1765 0.5804 0 0 (r2) 0 1 5 52.4096 59.0361 Bs
0.098 0.9294 0.9647 0.0157 0.8902 0 0 2 54.2169 0 %_BS
%_0.098 0.9294 0.9647 0.0157 0.8902 0 0 (r3) 0 1 5 54.2169 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 172)
(Unnamed gradient 172) 0 3 Bd
[
<
6C6B6A69686766656563636261605F5E5D5C5B5A59585856565554535251504F4E4D4C4B4A494949
484746454443424141403F
>
<
4F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A3A39383837363535343333
33323131302F2E2E2E2D2C
>
<
32323231313031302F302F2F2E2E2E2D2E2D2C2C2C2C2B2C2B2A2B2A2A292A292829282828282727
2726272627262526252525
>
<
101010100F0F0F0F0E0E0E0D0D0D0D0D0D0C0C0C0C0C0B0B0B0B0B0A0A0A0A090909090909080808
0808080808070707070706
>
<
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B0
B1B2B3B4B5B6B7B8B8B9BA
>
<
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B0
B1B2B3B4B5B6B7B8B8B9BA
>
<
9899999A9B9C9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A8A9AAAAABACADADAEAFAFB0B1B1B2B3B3
B4B5B5B6B6B7B8B8B9B9BA
>
4 %_Br
<
000000010101020202030304040405050606070708080808090A0A0B0B0C0C0D0E0E0F1010111112
13131415151617171819191A1B1C1C1D1E1D1E1F202021222323242526262728292A2A2B2C2D2E2E
2F2F3031323233343536373738393A3B3C3C3C3D3E3F4041424343444546464748494A4B4B4C4D4E
4F505151525354555657585858595A5B5C5D5E5F60616163636465666767696A6A6B6C
>
<
00000001010101010102020303030303040404040505060606070708080808090A0A0A0B0B0C0C0C
0D0D0E0E0E0F101010111112121313141414151616161717181819191A1A1B1B1C1D1D1D1E1F1F1F
20212122232323242525262627272829292A2A2B2C2C2D2D2E2F2F2F303132323334343535363637
3838393A3B3B3C3D3D3E3F3F3F40414142434444454646474849494A4B4B4C4D4E4E4F
>
<
00000000000001010101010202020202030303030404040405050505060606060707070808080809
0909090A0A0A0B0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F1010101111111212121312131414141415
15151616161717171718181819191A191A1A1B1B1B1C1C1D1C1D1E1E1E1E1F1F201F202021222122
22232324232424252626262728282929292A2A2B2B2C2D2C2D2E2E2F2F303030313232
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000001010101010101010101010101010101010101010101020202020202020202020202
02020303030303030303030303040404040404040404050505050505050606060606060707070707
07070808080809090909090A0A0A0B0B0B0B0B0C0C0C0C0C0D0D0E0E0E0F0F0F0F1010
>
<
FFFFFFFEFEFEFDFDFDFCFCFBFBFBFAFAF9F9F8F8F7F7F6F6F5F4F4F3F3F2F2F1F0F0EFEEEEEDEDEC
EBEBEAE9E9E8E7E7E6E5E5E4E3E2E2E1E0E0DFDEDDDDDCDBDADAD9D8D7D7D6D5D4D3D3D2D1D0CFCF
CECDCCCBCACAC9C8C7C6C5C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B8B7B6B5B4B3B2B1B0AFAFAEADAC
ABAAA9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
>
<
FFFFFFFEFEFEFDFDFDFCFCFBFBFBFAFAF9F9F8F8F7F7F6F6F5F4F4F3F3F2F2F1F0F0EFEEEEEDEDEC
EBEBEAE9E9E8E7E7E6E5E5E4E3E2E2E1E0E0DFDEDDDDDCDBDADAD9D8D7D7D6D5D4D3D3D2D1D0CFCF
CECDCCCBCACAC9C8C7C6C5C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B8B7B6B5B4B3B2B1B0AFAFAEADAC
ABAAA9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
>
<
FFFFFFFEFEFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F0F0EFEFEE
EEEDEDECEBEBEAEAE9E8E8E7E6E6E5E5E4E3E3E2E1E1E0DFDFDEDDDDDCDBDBDAD9D9D8D7D6D6D5D4
D4D3D2D1D1D0CFCFCECDCCCCCBCAC9C9C8C7C6C6C5C4C3C2C2C1C0BFBFBEBDBCBBBBBAB9B8B7B7B6
B5B4B3B2B2B1B0AFAEADADACABAAA9A8A8A7A6A5A4A3A2A2A1A09F9E9D9C9C9B9A9998
>
4 %_Br
[
0.73 0 50 100 %_BS
%_0.73 0 50 100 Bs
0.4235 0.3098 0.1961 0.0627 0.5412 0.5412 0.5961 2 47.7612 59.0361 %_BS
%_0.4235 0.3098 0.2 0.0667 0 0 0.1176 (w1) 0.54 1 5 47.7612 59.0361 Bs
0 0 0 0 1 1 1 2 59.1837 0 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 59.1837 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 180)
(Unnamed gradient 180) 0 3 Bd
[
0
0
0
0
1
1
1
4 %_Br
<
3F3F3E3D3C3B3A3938383736353433323130302F2E2D2C2B2A292828272625242322201F1E1D1C1B
1B1A191817161514131211100F0E0D0C0B0A0909080706050403020100
>
<
2C2C2B2B2A292928272726252524242322222120201F1E1E1D1D1C1B1B1A19191817161515141313
12111110100F0E0E0D0C0C0B0A0A090808070606050404030302010100
>
<
2524232322222121201F1F1E1E1D1D1C1B1B1A1A19191817171616151514141313121110100F0F0E
0E0D0D0C0C0B0B0A0A0909080807070606050504040303020201010000
>
<
06060606050505050505040404040404040303030303030202020202020202020202010101010101
0101010101010000000000000000000000000000000000000000000000
>
<
BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDDDEDFE0E1E2
E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDDDEDFE0E1E2
E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDDDEDFE0E1E2
E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 100 Bs
0 0 0 0 1 1 1 2 50 42.1687 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 42.1687 Bs
0.73 0 50 0 %_BS
%_0.73 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 194)
(Unnamed gradient 194) 0 3 Bd
[
<
00010203040506070809090A0B0C0D0E0F101112131415161718191A1B1B1C1D1E1F202223242526
272828292A2B2C2D2E2F3030313233343536373838393A3B3C3D3E3F3F
>
<
0001010203030404050606070808090A0A0B0C0C0D0E0E0F1010111112131314151516171819191A
1B1B1C1D1D1E1E1F202021222223242425252627272829292A2B2B2C2C
>
<
00000101020203030404050506060707080809090A0A0B0B0C0C0D0D0E0E0F0F1010111213131414
1515161617171819191A1A1B1B1C1D1D1E1E1F1F202121222223232425
>
<
00000000000000000000000000000000000000000000000101010101010101010101010202020202
0202020202020303030303030404040404040405050505050506060606
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBA
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBA
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBA
>
4 %_Br
<
11100F0E0D0C0B0A09080706050403020100
>
<
0C0B0A0A0908080706050404030302010100
>
<
080807070606050504040303020201010000
>
0
<
EDEEEFF0F1F2F3F4F5F7F8F9FAFBFCFDFEFF
>
<
EDEEEFF0F1F2F3F4F5F7F8F9FAFBFCFDFEFF
>
<
EFF0F1F2F3F4F5F6F7F7F8F9FAFBFCFDFEFF
>
4 %_Br
[
0.73 0 50 100 %_BS
%_0.73 0 50 100 Bs
0 0 0 0 1 1 1 2 50 57.8313 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 57.8313 Bs
0.0667 0.0471 0.0314 0 0.9294 0.9294 0.9373 2 50 0 %_BS
%_0.0667 0.0471 0.0314 0 0 0 0.1176 (w1) 0.93 1 5 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 225)
(Unnamed gradient 225) 1 2 Bd
[
<
00010203040506070808090A0B0C0D0E0F1011121314161718191A1B1C1D1E1E1F20212223242526
272829
>
<
0001010203030404050606070808090A0A0B0C0C0D0E0F101011121213141415161617171819191A
1B1B1C
>
<
000001010202030304040505060606070708080909090A0B0B0C0C0C0D0D0D0E0E0F0F1010101111
121213
>
<
00000000000000000000000000000000000000000000000101010101010101010101010101010102
020202
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4
>
<
FFFEFDFCFBFAFAF9F8F7F6F5F4F3F2F1F1F0EFEEEDECEBEAE9E8E7E7E6E5E4E3E2E1E0DFDEDEDDDC
DBDAD9
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 0 Bs
0.1608 0.1098 0.0745 0.0078 0.8314 0.8314 0.851 2 50 100 %_BS
%_0.1608 0.1098 0.0745 0.0078 0 0 0.1176 (w1) 0.83 1 5 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3)
(Unnamed gradient 3) 0 2 Bd
[
<
9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFAFB0B1B2B3B4B5B6B7B8B8B9BABBBCBDBEBEBFC0C1C2
C2C3C4C5C5C6C7C8C8C9CACBCBCCCDCDCECFCFD0D1D1D2D2D3D3D4D5D5D6D6D6D7D7D8D8D8D9D9
>
0 %_Br
[
0.85 0 82.7957 100 %_BS
%_0.85 0 82.7957 100 Bs
0.62 0 40.3614 0 %_BS
%_0.62 0 40.3614 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 44)
(Unnamed gradient 44) 1 2 Bd
[
<
1B1B1B1B1B1B1B1B1B1B1B1B1C1C1B1B1B1B1B1B1B1B1C1C1C1C1C1C1D1D1D1D1D1D1E1E1E1E1E1F
1F1F1F202020202121212222222223232324242425252526262627272728282929292A2A2B2B2B2C
2C2C2C2D2D2D2E2E2F2F3030313132323333343435353635373737383839393A3A3B3C3C3D3D3E3F
3F40414142414343434445454647474849494A4B4C4C4C4E4D4E4F50505152535354555655565758
59595A5B5C5D5E5E5E60616162626364656667676768696A6B6C6D6E6F7071707172737475757678
78797A7B7C7D7E7F
>
<
12121212121212121212121213131313131313131313131313131313141414141414151515151515
15151516161616171717171717171818181919191919191A1A1A1B1B1B1B1B1C1C1C1D1D1D1D1D1E
1E1F1F1F1F1F202021212121222223232323242424242525262727272728282929292A2A2B2B2B2C
2C2D2D2D2E2E2F2F2F30313131323233333334353635363737383839393A3A3B3B3C3C3D3D3E3E3F
40404041424344434445464647474848494A4B4B4B4C4D4D4E4F5050515253525354555556575759
595A5B5B5C5D5E5F
>
<
0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F101010
10101010101010111111111111111112121212121212131313131313131414141414141515151615
15161616161617171717171818191818191919191A1A191A1A1A1A1B1B1B1B1C1C1C1C1D1D1D1D1E
1E1E1E1F1E1F1F1F2020202021202121212222222223232324232424242526252627262728272829
28292A292A2B2A2B2C2B2C2D2D2D2E2F2E2F2F303031313232323334343434363636363738383938
393A3A3B3B3B3C3D
>
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010102020202020202020202020202020202020202020202020202
02020202020203030303030303030303030303030303030404040404040404040404040404050505
05050505050505060606060606060706070707070707070708080808080809090909090A0A0A0A0A
0A0B0B0B0B0B0B0C0C0C0C0C0D0D0D0E0E0E0E0F0F0F101010101111111112121312131414151515
1516171717171818
>
<
E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E0E0E0E0E0E0DFDFDFDFDFDE
DEDEDEDDDDDDDDDCDCDCDBDBDBDBDADADAD9D9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D2D2D2D1
D1D0D0CFCFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C4C4C3C3C2C2C1C1C0BFBFBEBEBDBC
BCBBBABAB9B9B8B7B7B6B5B5B4B3B3B2B1B1B0AFAEAEADACACABAAA9A9A8A7A6A6A5A4A3A3A2A1A0
9F9F9E9D9C9B9A9A99989796959594939291908F8F8E8D8C8B8A89888786858584838281807F7E7D
7C7B7A7978777675
>
<
E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E0E0E0E0E0E0DFDFDFDFDFDE
DEDEDEDDDDDDDDDCDCDCDBDBDBDBDADADAD9D9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D2D2D2D1
D1D0D0CFCFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C4C4C3C3C2C2C1C1C0BFBFBEBEBDBC
BCBBBABAB9B9B8B7B7B6B5B5B4B3B3B2B1B1B0AFAEAEADACACABAAA9A9A8A7A6A6A5A4A3A3A2A1A0
9F9F9E9D9C9B9A9A99989796959594939291908F8F8E8D8C8B8A89888786858584838281807F7E7D
7C7B7A7978777675
>
<
E3E3E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E0E0E0E0E0E0DFDFDF
DFDFDEDEDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D6D6D6D5D5D5D4D4
D4D3D3D2D2D2D1D1D1D0D0CFCFCECECECDCDCCCCCBCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2
C2C1C1C0C0BFBFBEBDBDBCBCBBBBBABAB9B8B8B7B7B6B5B5B4B4B3B2B2B1B0B0AFAEAEADACACABAA
AAA9A8A8A7A6A6A5A4A4A3A2A1A1A09F9F9E9D9C9C9B9A999998979695959493929291908F8E8D8D
8C8B8A8989888786
>
4 %_Br
[
0.89 0 69.2771 0 %_BS
%_0.89 0 69.2771 0 Bs
0.498 0.3725 0.2392 0.0941 0.4588 0.4588 0.5255 2 50 100 %_BS
%_0.4941 0.3686 0.2431 0.098 0 0 0.1176 (w1) 0.46 1 5 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 45)
(Unnamed gradient 45) 0 2 Bd
[
<
7C7C7C7B7B7B7A7A797979787877787676757575757474737372717270716F6F6F6E6E6D6C6C6B6A
6A69686967676766656564636363616161605F5F5E5D5C5C5B5A595A585857575655545353525151
50504F4E4D4C4C4B4A494847474646454443434241403F3E3E3D3C3C3A3A39383837363534333231
30302F2F2E2D2C2B2A29282726262524232221201F1E1E1D1C1B1A19181717161514131211100F0E
0D0C0B0A0908080706050403020100
>
<
5C5C5C5B5B5B5B5B595A5A595958595757575756565555555554535452535251515050504F4F4E4D
4E4D4C4C4B4B4B4A49494948484746464645444444434242424140403F3F3E3E3D3D3C3B3B3B3A39
383838373636363534343332323231302F2F2F2E2D2D2C2C2C2B2A29292827272726252524232322
212121201F1F1E1D1D1C1B1B1A1A19191817171616151414131212111010100F0E0E0D0C0C0B0A0A
090808070606050404030302010100
>
<
3C3C3C3B3B3B3A3A3B3A3A3A393A3839393838383837373636363635363435343434343332323232
31313130302F2F2F2E2E2E2E2D2C2D2C2B2B2B2B2A2A2A2928292827282726262625262524232423
23232222212221202120201F1F1F1E1E1E1E1D1D1D1C1C1B1B1B1A1A1A1A19191918181717171716
1616151514141414131312121211111010100F0F0E0E0D0D0D0C0C0C0B0B0B0A0A09090808080707
060605050504040303020201010000
>
<
18181817171717171716161615161515151515141414141313121312121212111111111110101010
0F100F0F0F0E0E0E0E0E0D0D0D0C0C0C0C0C0C0C0B0B0B0B0A0B0A0A0A0A09090909090908080808
07070707070707070706060606060605050505050505040404040404040404030303030303030303
03030202020202020202020202020101010101010101010101010101010101000000000000000000
000000000000000000000000000000
>
<
7878787979797A7A7B7B7B7C7C7D7D7E7E7F7F80808181828283848485858687878888898A8A8B8C
8C8D8E8E8F9090919292939494959697979899999A9B9C9C9D9E9F9FA0A1A2A2A3A4A5A6A6A7A8A9
AAAAABACADAEAEAFB0B1B2B3B3B4B5B6B7B8B8B9BABBBCBDBDBEBFC0C1C2C3C4C4C5C6C7C8C9CACB
CCCCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E7E8E9EAEBECEDEEEFF0
F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
7878787979797A7A7B7B7B7C7C7D7D7E7E7F7F80808181828283848485858687878888898A8A8B8C
8C8D8E8E8F9090919292939494959697979899999A9B9C9C9D9E9F9FA0A1A2A2A3A4A5A6A6A7A8A9
AAAAABACADAEAEAFB0B1B2B3B3B4B5B6B7B8B8B9BABBBCBDBDBEBFC0C1C2C3C4C4C5C6C7C8C9CACB
CCCCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E7E8E9EAEBECEDEEEFF0
F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
8888888989898A8A8A8B8B8B8C8C8D8D8D8E8E8F8F90909191929293939494959596969798989999
9A9A9B9C9C9D9D9E9F9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A9A9AAABABACADADAEAFAFB0B1B2B2B3
B4B4B5B6B7B7B8B9B9BABBBCBCBDBEBFBFC0C1C1C2C3C4C5C5C6C7C8C8C9CACBCBCCCDCECFCFD0D1
D2D2D3D4D5D6D6D7D8D9DADBDBDCDDDEDFDFE0E1E2E3E4E4E5E6E7E8E9E9EAEBECEDEEEFEFF0F1F2
F3F4F5F5F6F7F8F9FAFBFBFCFDFEFF
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 100 Bs
0.4863 0.3608 0.2353 0.0941 0.4706 0.4706 0.5333 2 58.4337 0 %_BS
%_0.4863 0.3608 0.2353 0.0941 0 0 0.1176 (w1) 0.47 1 5 58.4337 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 697)
(Unnamed gradient 697) 1 2 Bd
[
<
8F8F8F8F8F909090909091909090929191939292949394949495959696969797989899989A999B9A
9C9C9D9D9D9D9E9E9FA0A0A1A0A2A3A3A4A4A5A5A5A6A8A7A9AAA9AAABABACADADAEB0AFB0B1B2B1
B3B4B5B5B6B8B9B8B9BBBCBBBDBEBFC1C0C1C3C4C5C6C6C7C8C9CBCCCBCCCECFD0D1D3D4D3D4D5D7
D8DADBDCDEE0E1E3E2E4E6E7E9EBECEEEFEFF0F0F0F0F0F0F0F0F0
>
<
6D6D6D6D6D6E6E6E6E6E6F6E6E6E706F6F7170707171727271737373737374747575767677767877
79797A7A7A7A7B7B7C7D7D7E7D7F80808181818282838584868685878888898A8A8B8C8B8C8E8F8E
909192929395969495989997999B9C9E9D9EA0A1A2A3A3A4A5A6A8AAA9AAACADAFB0B3B4B3B5B6B9
BBBCBEC0C3C5C7CAC9CCCED1D3D5D7DBDEE0E2E3E4E5E6E8E9EAEC
>
<
49494949494949494949494A4A4A4A4B4B4A4B4B4B4C4C4C4D4C4C4D4D4D4E4E4E4E4E4F4F504F50
5050515151515252525253525453545454545556565656575657585858585959595A595A5B5A5B5C
5B5C5C5C5D5C5D5E5E5E5E5F5F5F605F606160616161616262636263636463646465646566666666
66676768676868686969696A6A6A6B6B6B6B6C6C6D6D6E6E6E6F6F
>
<
2525252525262626262625272727262828272828282929292A2A2A2A2A2A2B2B2C2C2C2D2C2E2D2F
2E2E2F2F303031313232333334343535363637383839393A3A3B3C3C3D3D3E404041404243434446
4547484849494A4C4E4D4F515052535355565657595A5A5C5D5F5E6062646365666867696B6D6F6E
6F717374737577787B7A7C7D7F818382838587898C8E9190939598
>
<
616161616160606060605F5F5F5F5E5E5E5D5D5D5C5C5B5B5B5A5A59595958585757565655555454
53535252515150504F4E4E4D4D4C4B4B4A4A4948484746464544444342424140403F3E3E3D3C3B3B
3A393838373635353433323231302F2E2E2D2C2B2A2929282726252424232221201F1E1D1D1C1B1A
19181716151413121211100F0E0D0C0B0A09080706050403020100
>
<
616161616160606060605F5F5F5F5E5E5E5D5D5D5C5C5B5B5B5A5A59595958585757565655555454
53535252515150504F4E4E4D4D4C4B4B4A4A4948484746464544444342424140403F3E3E3D3C3B3B
3A393838373635353433323231302F2E2E2D2C2B2A2929282726252424232221201F1E1D1D1C1B1A
19181716151413121211100F0E0D0C0B0A09080706050403020100
>
<
7373737373727272727272717171717070706F6F6F6E6E6E6D6D6D6C6C6C6B6B6A6A6A6969686867
676766666565646463636262616160605F5F5E5D5D5C5C5B5B5A5959585857565655555453535251
51504F4F4E4E4D4C4B4B4A49494847474645454443424241403F3F3E3D3C3C3B3A39393837363535
3433323131302F2E2D2D2C2B2A2928282726252423222121201F1E
>
4 %_Br
[
0.5608 0.4275 0.2863 0.1451 0.3804 0.3804 0.451 2 63.253 0 %_BS
%_0.5608 0.4275 0.2863 0.1451 0 0 0.1176 (w1) 0.38 1 5 63.253 0 Bs
0.9412 0.9255 0.4353 0.5961 0 0 0.1176 2 50 100 %_BS
%_0.9412 0.9255 0.4353 0.5961 0 0 0.1176 (w1) 0 1 5 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 707)
(Unnamed gradient 707) 0 2 Bd
[
<
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F0F0F0F0EFEFEFEFEFEFEFEDEEEEEEECEDED
EBEBECE9E9EAE7E7E7E6E6E6E4E4E4E3E3E3E1E1DFE0E0DDDEDCDCDDDBDCDADADAD8D8D7D7D6D6D4
D5D3D4D4D2D3D1D2D0D1CFCFCECECDCDCCCCCBCBCAC8C9C7C7C6C6C5C5C4C4C3C1C2C0C1C0BEBFBD
BEBCBBBBBABAB9B7B8B7B5B6B4B3B3B2B1B1B0AFB0AFADAEACABACAAAAABA9A8A6A7A6A5A4A5A3A2
A1A1A0A09E9F9E9D9C9D9B9A9998989897959495949392919090908F8E8D8C8B8C8A898988868685
858583838281807F7E7D7C7C7B7B7A79787877757574737272716F6F6E6D6C
>
<
ECECECECECECECECECECECECECECECECEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E8E8E8E8
E8E8E6E6E6E7E7E7E5E5E5E6E6E4E4E4E5E5E3E3E3E4E2E2E2E2E0E0E0E0DEDEDEDADBDBDBD7D7D7
D5D5D6D3D3D4D1D1D1CECECECCCCCCCACACAC7C7C4C5C5C2C3C0C0C1BEBFBCBCBDBBBBB9B9B7B7B5
B6B3B4B4B2B3B0B1AFB0ADADACACABABAAAAA8A8A7A5A6A4A4A3A3A2A2A1A1A09E9F9D9E9D9B9C99
9B99989897979694959492939190908F8E8E8D8B8C8B8A8B8988898786878685838483818181807F
7E7E7D7D7B7C7B7A797A787776767675747372737271706F6E6E6E6D6C6B6A696A69686767656564
656463626161605F5E5D5D5C5B5B5B5A59595857565555545453525150504F
>
<
6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6E6E6E6E6E6E6E6E6E6E6E
6E6E6E6E6E6D6D6D6D6D6D6D6D6D6D6D6C6C6C6C6C6B6C6C6C6C6B6B6B6B6B6B6B6B6B6B6B6B6A6A
6A6A6A6A6A696A6A6A69696969696968686868686868686867686867676667676666666666666666
65666565656465646464646463636363636362626262616262616161616161606160605F5F5F5E5F
5E5E5E5E5D5D5D5D5C5C5C5B5C5B5B5B5A5A5A5A5959595859585758575656565655555554535453
5252525152515051504F4F4F4E4D4D4D4C4C4C4B4A4A4A4948484847464746454445444343434342
414041403F3F3E3E3E3D3C3C3B3B3A3A393838383837363635343534343332
>
<
98989898989898989898989898989898999595959595959595959595969393939393939393939090
90909191918E8E8E8E8E8E8B8B8C8C8C898989898986878787878585858583838384828282838080
81817E7F7F7C7D7D7D7C7C7C7A7A7A78787877777875757673747472737071716F6F6F6E6E6C6C6D
6A6B69696A676866666465656363626260605E5E5D5D5B5C5C5A5A59595757565654555351525050
4E4F4D4D4C4C4A4B494748464745454443434242403F403E3E3D3B3C3B393A393937363736343534
3333323131302F2F2E2D2D2C2C2B2B2A292A29272727262525252423222322212021201F1F1F1E1E
1D1C1C1B1B1A191A1919181817171716151514151414131212121211111110
>
<
00000000000000000000000000000000010101010101010101010101020202020202020203030303
0303040404040404050505050506060606060707070708080808090909090A0A0A0B0B0B0B0C0C0C
0D0D0D0E0E0E0F0F0F10101011111112121213131414141515161616171718181819191A1A1B1B1C
1C1D1D1D1E1E1F1F202021212222232324242525262727282829292A2A2B2B2C2D2D2E2E2F303031
313233333434353636373838393A3A3B3C3C3D3E3E3F40404142424344444546474748494A4A4B4C
4D4D4E4F505051525353545556575758595A5B5B5C5D5E5F6060616263646566666768696A6B6C6D
6D6E6F70717273747576777879797A7B7C7D7E7F808182838485868788898A
>
<
00000000000000000000000000000000010101010101010101010101020202020202020203030303
0303040404040404050505050506060606060707070708080808090909090A0A0A0B0B0B0B0C0C0C
0D0D0D0E0E0E0F0F0F10101011111112121213131414141515161616171718181819191A1A1B1B1C
1C1D1D1D1E1E1F1F202021212222232324242525262727282829292A2A2B2B2C2D2D2E2E2F303031
313233333434353636373838393A3A3B3C3C3D3E3E3F40404142424344444546474748494A4A4B4C
4D4D4E4F505051525353545556575758595A5B5B5C5D5E5F6060616263646566666768696A6B6C6D
6D6E6F70717273747576777879797A7B7C7D7E7F808182838485868788898A
>
<
1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F1F1F1F1F1F2020202020202020202121
21212121212222222222222323232323242424242425252525252626262627272727282828282929
29292A2A2A2B2B2B2B2C2C2C2D2D2D2E2E2E2F2F2F30303031313132323333333434343535363636
373738383839393A3A3B3B3B3C3C3D3D3E3E3F3F4040414141424243434444454546464748484949
4A4A4B4B4C4C4D4D4E4F4F50505151525353545455565657575859595A5B5B5C5C5D5E5E5F606061
6262636464656666676868696A6B6B6C6D6D6E6F70707172737374757676777879797A7B7C7C7D7E
7F808081828384848586878889898A8B8C8D8E8E8F90919293949495969798
>
4 %_Br
[
0.4235 0.3098 0.1961 0.0627 0.5412 0.5412 0.5961 2 50 100 %_BS
%_0.4235 0.3098 0.2 0.0667 0 0 0.1176 (w1) 0.54 1 5 50 100 Bs
0.9412 0.9255 0.4353 0.5961 0 0 0.1176 2 70.2703 0 %_BS
%_0.9412 0.9255 0.4353 0.5961 0 0 0.1176 (w1) 0 1 5 70.2703 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 708)
(Unnamed gradient 708) 1 2 Bd
[
<
00010203040506070808090A0B0C0D0E0F101112131415161718191A1B1C1D1D1E1F202122232425
2628292A2B2C2D2E2F2F303132333435363738393A3B3C3C3D3E3F40414243444546464748494A4B
4C4D
>
<
0001010203030404050606070808090A0A0B0C0C0D0E0E0F10101112121314141516161717181919
1A1B1C1D1D1E1F1F2021212223232425252627272829292A2B2C2C2D2E2E2F303031323233343435
3636
>
<
000001010202030304040505060606070708080909090A0A0B0B0C0C0C0D0D0E0E0E0F0F10101111
121212121313141415151516161617171818191819191A1A1B1B1C1C1C1C1D1D1E1E1F1F201F2020
2121
>
<
00000000000000000000000000000000000000000000000001010101010101010101010101010102
02020202020202020202020303030303030303030404040404040405050505050506060606060607
0707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEAD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEAD
>
<
FFFEFDFCFBFBFAF9F8F7F6F5F4F3F3F2F1F0EFEEEDECEBEBEAE9E8E7E6E5E4E3E3E2E1E0DFDEDDDC
DBDBDAD9D8D7D6D5D4D3D3D2D1D0CFCECDCCCBCBCAC9C8C7C6C5C4C3C3C2C1C0BFBEBDBCBBBBBAB9
B8B7
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 0 Bs
0.302 0.2118 0.1294 0.0275 0.6784 0.6784 0.7176 2 50 100 %_BS
%_0.302 0.2118 0.1294 0.0275 0 0 0.1176 (w1) 0.68 1 5 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 712)
(Unnamed gradient 712) 1 2 Bd
[
<
4B4A4A4A494948474746464545444443424242414140403F3E3E3D3D3C3C3C3B3B3A393939383837
37363635353433333332313131302F2E2E2E2D2C2C2C2B2B2A2A2929282828272726252525242423
232322222121212120201F1F1E1E1D1D1D1D1D1C1C1B1B1B1A1A1A1919191919191919
>
0.9294
<
F5F5F4F4F3F3F2F2F1F0F0EFEFEFEEEEEDEDEDEDECECECECEBEBEBEBEBEBEBEBEAEAEAEAEAEBEBEB
EBEBEBEBEBECECECECEDEDEDEDEEEEEEEEEFEFEFEFF0F0F0F0F1F1F1F1F2F2F2F2F3F3F3F3F4F4F4
F4F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6
>
<
2D2D2C2B2A2928282726252524232222212020201F1E1E1D1C1C1B1A1A1A19181817161616151414
131313121211111110100F0F0F0F0E0E0E0D0D0C0C0C0C0C0B0B0A0A0A0A0A090909090908080807
0707070706060606060606060505050505050505050505050404040404040404040404
>
<
9495969798999A9B9C9D9E9FA0A1A2A3A4A5A5A6A7A8A9AAABACADAEAFAFB0B1B2B3B4B5B5B6B7B8
B9BABABBBCBDBEBEBFC0C1C2C2C3C4C5C5C6C7C8C8C9CACACBCCCDCDCECFCFD0D0D1D2D2D3D4D4D5
D5D6D7D7D8D8D9D9DADADBDBDCDCDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E3
>
0
0
4 %_Br
[
0.2941 0.9294 0.9608 0.1765 0.5804 0 0 2 37.9518 0 %_BS
%_0.2941 0.9294 0.9608 0.1765 0.5804 0 0 (r2) 0 1 5 37.9518 0 Bs
0.098 0.9294 0.9647 0.0157 0.8902 0 0 2 50 100 %_BS
%_0.098 0.9294 0.9647 0.0157 0.8902 0 0 (r3) 0 1 5 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 724)
(Unnamed gradient 724) 0 3 Bd
[
<
00010203040506070808090A0B0D0E0F101112131415161718
>
<
00010102030304040506060708090A0A0B0C0C0D0E0E0F1010
>
<
0000010102020303040405050606070708080809090A0A0B0B
>
<
00000000000000000000000000000000000000000000000101
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F1F0EFEEEDECEBEAE9E8E7E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F1F0EFEEEDECEBEAE9E8E7E6
>
<
FFFEFDFCFBFAFAF9F8F7F6F5F4F3F2F1F0EFEFEEEDECEBEAE9
>
4 %_Br
<
1817161514131211100F0E0D0B0A0908080706050403020100
>
<
10100F0E0E0D0C0C0B0A0A0908070606050404030302010100
>
<
0B0B0A0A090908080807070606050504040303020201010000
>
<
01010000000000000000000000000000000000000000000000
>
<
E6E7E8E9EAEBECEDEEEFF0F1F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
E6E7E8E9EAEBECEDEEEFF0F1F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
E9EAEBECEDEEEFEFF0F1F2F3F4F5F6F7F8F9FAFAFBFCFDFEFF
>
4 %_Br
[
0.0941 0.0627 0.0431 0.0039 0.902 0.902 0.9137 2 50 100 %_BS
%_0.098 0.0667 0.0471 0.0039 0 0 0.1176 (w1) 0.9 1 5 50 100 Bs
0 0 0 0 1 1 1 2 50 60.241 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 60.241 Bs
0.0941 0.0627 0.0431 0.0039 0.902 0.902 0.9137 2 50 0 %_BS
%_0.098 0.0667 0.0471 0.0039 0 0 0.1176 (w1) 0.9 1 5 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 95)
(Unnamed gradient 95) 0 3 Bd
[
<
EDEDEDECECECECECECECECEBECECECECECECECECECECECECECECECECECECEDECEDECECECECEDECEC
EBECECECEBEBEBEBEAEAEAE9E9E9E9E8E8E7E7E5E5E4E3E3E2E2E1E1DFDEDEDDDDDCDBDBDADAD8D7
D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCBCBCAC9C9C8C8C8C7C6C6C5C4C4C3C2C2C1C0C1BFBF
BFBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B3B2B1B0B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3
A2A1A1A09F9E9E9D9C9B9B9A99989797969594939393929190908F8E8D8C8C8B8A8988888786
>
<
5F5F5F5E5E5E5D5D5D5C5C5C5C5C5B5B5B5A5A595958585858575756565554545354525352515150
504F4E4E4D4D4D4C4C4B4A4B4949494847484746464545454443434342414141403F403F3E3D3D3D
3C3B3B3A3A39393837373736353434343332323131302F2F2E2E2D2D2B2B2A2A2A29282726252625
242322222121201F1E1E1D1C1B1B1A191918171615141414131211100F0E0D0D0C0B0B0A0A090807
0606050403030303030302020202020202020101010101010000000000000000000000000000
>
<
FEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFDFDFCFCFCFBFBFB
>
<
5454545353535151514F4F4F4D4D4B4B4B494947474545434341413F3F3D3C3C3A3A393937353634
3432313130302E2C2D2B2A2A28272726252524232322222221201F1F1E1D1D1C1B1B1B1A19181818
171616161514141413121212111010100F0F0E0D0E0D0D0C0C0C0C0B0B0A0A0A0A09090808070807
07060606060606050505040404040403030303020202020202020101010101010101010101010000
0000000000000000000000000000000000000000000000000000000000000000000000000000
>
<
00000000010101020202020303030404040505060606070708080809090A0A0B0B0C0C0D0D0D0E0E
0F0F101011111212131414151516161717181819191A1B1B1C1C1D1D1E1F1F202021222223232425
252626272828292A2A2B2B2C2D2D2E2F2F3031313233333435353637373839393A3B3B3C3D3D3E3F
3F40414242434444454647474849494A4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C
5D5E5E5F606161626364646566676868696A6B6C6C6D6E6F707071727374747576777878797A
>
<
3B3B3B3C3C3C3D3D3D3E3E3E3F3F40404041414242434344444545464647484849494A4A4B4C4C4D
4D4E4F4F5050515252535454555656575858595A5A5B5C5C5D5E5F5F606161626364646566676768
696A6A6B6C6D6D6E6F707071727374747576777878797A7B7C7C7D7E7F8081818283848586878788
898A8B8C8D8D8E8F90919293949495969798999A9B9C9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABAC
ADAEAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1
>
0
4 %_Br
0.9294
<
2E2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F3030303030323232323333333434343535353636363737
383838383839393A3A3B3B3C3C3C3D3D3E3E3F3F3F40404142424344444546474748494B4B4C4D4E
4F4F50515253545555565758595A5B5B5C5D5E5F
>
0.9961
<
0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F101010101010101111111212121312121313
14141415151616171718181818191A1A1B1B1C1C1C1D1D1E1F1F21222224262727292B2D2D2E3032
34333537393B3C3E3E40424446494B4D4F515354
>
0
<
6E6E6E6E6E6E6E6E6E6E6D6D6D6D6D6D6D6C6C6C6C6C6B6B6B6B6A6A6A6969696868686767676666
656565646463636262616160605F5E5E5D5D5C5C5B5A5A59585857565655545353525150504F4E4D
4C4C4B4A49484746464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A1A1A1A1A1A1A1A1A1919191919191919191918181818181818171717171716161616
16151515151414141413131313121212121111111010100F0F0F0E0E0E0D0D0C0C0C0B0B0B0A0A09
0908080807070606050504040303030202010100
>
4 %_Br
[
0.5255 0 0.9843 0 0.4784 0.8196 0 2 50 100 %_BS
%_0.5255 0 0.9843 0 0.4784 0.8196 0 (g3) 0 1 5 50 100 Bs
0.9294 0.3725 0.9961 0.3294 0 0.2314 0 2 59.0909 69.2771 %_BS
%_0.9294 0.3725 0.9961 0.3294 0 0.2314 0 (g1) 0 1 5 59.0909 69.2771 Bs
0.9294 0.1804 0.9961 0.0549 0 0.4314 0.102 2 70.2703 0 %_BS
%_0.9294 0.1804 0.9961 0.0549 0 0.4314 0.102 (g2) 0 1 5 70.2703 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
1 Bn
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 1 ([Registration]) 0 Xs
([Registration]) Pc
0 0 0 1 0 0 0 (black) 0 1 Xk
(black) Pc
0.9412 0.9255 0.4353 0.5961 0 0 0.1176 (w1) 0 1 Xk
(w1) Pc
0.9294 0.3725 0.9961 0.3294 0 0.2314 0 (g1) 0 1 Xk
(g1) Pc
0.9294 0.1804 0.9961 0.0549 0 0.4314 0.102 (g2) 0 1 Xk
(g2) Pc
0.5255 0 0.9843 0 0.4784 0.8196 0 (g3) 0 1 Xk
(g3) Pc
0.3961 0.9216 0.9412 0.4353 0.3412 0 0 (r1) 0 1 Xk
(r1) Pc
0.2941 0.9294 0.9608 0.1765 0.5804 0 0 (r2) 0 1 Xk
(r2) Pc
0.098 0.9294 0.9647 0.0157 0.8902 0 0 (r3) 0 1 Xk
(r3) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(back) Ln
0 A
1 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
300.9878 -1239.2988 m
300.9878 -766.8623 L
688.4102 -766.8623 L
688.4102 -1239.2988 L
300.9878 -1239.2988 L
Bb
1 (Unnamed gradient 724) 307.5684 -1179.3252 43.2838 547.4247 1 0 0 1 0 0 Bg
398.5069 375.3212 420.6505 -446.6364 97.2422 -956.0059 Xm
5862.6631 5521.5649 420.6505 -446.6364 -5765.4209 -6477.5713 Bc
240.0646 226.0973 420.6505 -446.6364 97.2422 -956.0059 Bm
158.4424 149.224 420.6505 -446.6364 337.3066 -729.9087 Bm
5862.6631 5521.5649 420.6505 -446.6364 495.749 -580.6846 Bc
f0 BB
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
uu0 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
536.8301 -794.1895 m
529.3574 -794.1895 522.9004 -799.4463 521.4814 -806.6973 c
521.2881 -807.6953 520.8438 -810.4434 520.8418 -814.5752 c
520.8418 -819.0811 521.4043 -826.1855 524.0791 -834.4658 c
526.668 -842.4893 530.7383 -850.125 536.1992 -857.208 C
532.7236 -856.873 529.3955 -856.6582 526.3496 -856.7021 c
525.0254 -856.7217 523.7861 -856.79 522.666 -856.9053 c
518.1523 -857.1055 513.1104 -857.6543 507.8398 -858.5234 c
502.8447 -859.3525 497.5039 -860.4775 491.9663 -861.8662 c
482.9028 -864.1533 476.2368 -866.4141 475.5078 -866.6641 c
466.8208 -869.668 462.0933 -879.126 464.9492 -887.7334 c
466.0352 -890.9941 468.0786 -893.7383 470.7622 -895.6699 C
468.0747 -897.3252 465.8989 -899.6992 464.4604 -902.583 c
462.4697 -906.5801 462.1372 -911.0762 463.5195 -915.2334 c
465.2139 -920.3271 469.2446 -924.0732 474.2095 -925.4951 C
471.1709 -929.7949 470.1968 -935.3564 471.8843 -940.4121 c
473.939 -946.5576 479.4131 -950.7031 485.8213 -951.1543 C
485.7495 -951.5732 485.6914 -951.9961 485.6484 -952.4219 c
485.2207 -956.8145 486.5322 -961.042 489.3403 -964.3291 c
492.1489 -967.6094 496.1182 -969.5488 500.5186 -969.7969 c
501.1211 -969.8262 503.2803 -969.9297 506.5625 -969.96 c
509.2432 -970.1357 512.584 -970.1445 516.3457 -969.9912 c
533.9688 -969.2695 556.0938 -965.3223 566.7852 -962.0439 C
687.8076 -957.2598 L
687.8076 -865.0273 L
587.7002 -866.7471 L
585.1152 -862.7441 582.3604 -858.9316 579.5 -855.4072 c
578.6035 -854.2969 577.5469 -853.3164 576.3613 -852.4971 c
571.0547 -848.8066 566.5273 -844.7852 562.9063 -840.5479 c
559.957 -837.084 557.5664 -833.4277 555.7998 -829.6807 c
552.7754 -823.2578 552.1367 -817.8379 552.1328 -814.4229 c
552.1328 -812.9893 552.2539 -812.165 552.2607 -812.1299 C
552.6172 -809.7354 L
552.4775 -809.7041 L
552.5625 -802.4473 547.2998 -795.8887 539.8105 -794.4688 c
538.8271 -794.2832 537.8242 -794.1895 536.8301 -794.1895 C
536.8301 -794.1895 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 44) 509.1514 -836.2178 -30.796 239.482 1 0 0 1 0 0 Bg
205.714 -122.6107 -122.6107 -205.714 509.1514 -836.2178 Bm
f0 BB
517.0078 -779.3232 m
509.5352 -779.3232 503.0791 -784.6543 501.6592 -792.0029 c
501.4668 -793.0137 501.0215 -795.7969 501.0195 -799.9854 c
501.0195 -804.5518 501.582 -811.7568 504.2568 -820.1758 c
506.8457 -828.3438 510.916 -836.1475 516.377 -843.4248 C
512.9023 -843.0322 509.5732 -842.7646 506.5283 -842.7646 c
505.2031 -842.7646 503.9648 -842.8154 502.8438 -842.916 c
498.3311 -843.0518 493.2881 -843.5322 488.0176 -844.332 c
483.0229 -845.0938 477.6826 -846.1465 472.1445 -847.459 c
463.0811 -849.6143 456.415 -851.7734 455.686 -852.0117 c
446.999 -854.874 442.2715 -864.248 445.1274 -872.916 c
446.2134 -876.2031 448.2568 -878.9961 450.9404 -880.9922 C
448.2529 -882.5869 446.0771 -884.9111 444.6387 -887.7607 c
442.6479 -891.708 442.3154 -896.1953 443.6978 -900.3906 c
445.3921 -905.5342 449.4229 -909.4033 454.3877 -910.9775 C
451.3491 -915.1943 450.375 -920.7344 452.0625 -925.8555 c
454.1172 -932.0869 459.5913 -936.4414 465.9995 -937.127 C
465.9277 -937.5459 465.8696 -937.9688 465.8267 -938.3955 c
465.3989 -942.7949 466.7104 -947.0957 469.5186 -950.5117 c
472.3271 -953.9258 476.2964 -956.041 480.6968 -956.4717 c
481.2993 -956.5254 483.4585 -956.7188 486.7412 -956.8848 c
489.4214 -957.1729 492.7617 -957.3203 496.5234 -957.3203 c
514.1465 -957.3203 536.2725 -954.2109 546.9629 -951.293 C
667.9863 -951.293 L
667.9863 -854.0273 L
567.8789 -854.0273 L
565.2939 -849.8633 562.5391 -845.8965 559.6787 -842.2305 c
558.7822 -841.0762 557.7246 -840.0537 556.54 -839.1953 c
551.2324 -835.3359 546.7061 -831.1563 543.085 -826.7744 c
540.1357 -823.1992 537.7451 -819.4365 535.9785 -815.5908 c
532.9541 -809.0059 532.3145 -803.4678 532.3105 -799.9814 c
532.3105 -798.5176 532.4316 -797.6768 532.4385 -797.6406 C
532.7959 -795.1973 L
532.6563 -795.165 L
532.7402 -787.7549 527.4785 -781.0557 519.9883 -779.6074 c
519.0049 -779.4189 518.0029 -779.3232 517.0078 -779.3232 C
517.0078 -779.3232 L
Bb
1 (Unnamed gradient 194) 442.9033 -868.3218 0 225.083 1 0 0 1 0 0 Bg
225.083 0 0 -181.9971 442.9033 -777.3232 Xm
8143.5352 0 0 -181.9971 -7700.6318 -777.3232 Bc
130.1684 0 0 -181.9971 442.9033 -777.3232 Bm
94.9146 0 0 -181.9971 573.0713 -777.3232 Bm
8143.5352 0 0 -181.9971 667.9863 -777.3232 Bc
f0 BB
Uu687.9863 -918.7188 m
687.9863 -1014.2129 L
702.0781 -1008.3877 711.6689 -996.8779 711.6689 -983.626 C
711.6689 -888.208 L
711.6689 -901.46 702.0781 -912.9209 687.9863 -918.7188 C
Bb
1 (Unnamed gradient 115) 687.7617 -951.2104 0 23.8162 1 0 0 1 0 0 Bg
23.8162 0 0 -130.0049 687.7617 -886.208 Xm
8387.5371 0 0 -130.0049 -7699.7754 -886.208 Bc
9.1821 0 0 -130.0049 687.7617 -886.208 Bm
14.6341 0 0 -130.0049 696.9443 -886.208 Bm
8387.5371 0 0 -130.0049 711.5781 -886.208 Bc
f0 BB
1 Ap
667.9863 -854.0273 m
692.1113 -854.0273 711.6689 -869.7705 711.6689 -888.9023 c
711.6689 -984.3223 l
711.6689 -965.1885 692.1113 -951.293 667.9863 -951.293 c
667.9863 -854.0273 l
Bb
1 (Unnamed gradient 125) 672.752 -907.3018 0 37.3776 1.1753 0 0 1.2133 -1472.3988 -1715.098 Bg
43.9299 0 0 -135.1481 667.5703 -851.6011 Xm
9840.0791 0 0 -135.1481 -9172.5088 -851.6011 Bc
35.7261 0 0 -135.1481 667.5703 -851.6011 Bm
8.2038 0 0 -135.1481 703.2969 -851.6011 Bm
9840.0791 0 0 -135.1481 711.5 -851.6011 Bc
f0 BB
667.9863 -857.4941 m
692.1113 -857.4941 711.6689 -871.9707 711.6689 -889.8281 c
711.6689 -980.5947 l
711.6689 -962.7363 692.1113 -947.8262 667.9863 -947.8262 c
667.9863 -857.4941 l
Bb
1 (Unnamed gradient 707) 672.752 -907.1943 0 37.3776 1.1753 0 0 1.2133 -1472.3988 -1715.098 Bg
43.9299 0 0 -127.9538 667.5703 -855.0674 Xm
9840.0791 0 0 -127.9538 -9172.5088 -855.0674 Bc
43.9299 0 0 -127.9538 667.5703 -855.0674 Bm
9840.0791 0 0 -127.9538 711.5 -855.0674 Bc
f0 BB
0 Ap
711.6689 -983.9004 m
711.6689 -965.001 692.3662 -951.7168 667.9863 -951.293 c
690.8633 -951.6895 709.4111 -965.001 709.4111 -983.9004 c
709.4111 -996.8447 700.8174 -1007.9531 687.9863 -1013.7402 C
687.9863 -1014.2129 L
702.1074 -1008.5713 711.6689 -997.1836 711.6689 -983.9004 c
Bb
1 (Unnamed gradient 45) 689.5957 -947.9302 -89.3263 64.5555 1 0 0 1 0 0 Bg
0.759 -64.551 -47.5151 -0.5587 713.4648 -947.6494 Xm
98.6074 -8385.9072 -47.5151 -0.5587 614.8574 7438.2583 Bc
0.759 -64.551 -47.5151 -0.5587 713.4648 -947.6494 Bm
98.6074 -8385.9072 -47.5151 -0.5587 714.2236 -1012.2002 Bc
f0 BB
U*u
0 g
517.0078 -782.79 m
517.7832 -782.79 518.5645 -782.8652 519.332 -783.0127 c
525.8164 -784.2656 530.1572 -790.5771 529.0078 -797.0859 C
528.8691 -797.9209 L
528.9229 -797.9336 L
528.8828 -798.4219 528.8447 -799.1113 528.8447 -799.9883 c
528.8496 -803.8164 529.543 -809.8818 532.8281 -817.04 c
534.7207 -821.1553 537.2725 -825.1738 540.4121 -828.9805 c
544.2188 -833.5859 548.96 -837.9658 554.5039 -841.998 c
555.4248 -842.668 556.2471 -843.4619 556.9463 -844.3613 c
560.0078 -848.2881 562.9492 -852.5654 565.6816 -857.0781 C
565.9355 -857.4941 L
668.1514 -857.4941 L
668.1514 -947.8262 L
546.4932 -947.8262 L
546.3789 -947.8574 L
536.002 -950.7559 513.4941 -953.8545 496.5234 -953.8545 c
492.8823 -953.8545 489.6655 -953.7129 486.915 -953.4229 c
483.7036 -953.2627 481.6069 -953.0742 481.0332 -953.0195 c
477.5537 -952.6807 474.415 -951.0088 472.1948 -948.3105 c
469.9751 -945.6113 468.939 -942.21 469.2769 -938.7314 c
469.4058 -937.3965 469.7388 -936.0938 470.2656 -934.8594 C
470.8545 -933.4736 L
469.3618 -933.6611 L
468.8325 -933.7236 468.3013 -933.7559 467.7754 -933.7559 c
462.1187 -933.7559 457.1255 -930.1445 455.3545 -924.7695 c
453.5366 -919.2568 455.6226 -913.125 460.4307 -909.8613 C
462.9312 -908.1631 L
459.9097 -908.2783 L
459.7437 -908.2842 459.5781 -908.2871 459.4121 -908.2871 c
453.752 -908.2871 448.7578 -904.6797 446.9897 -899.3086 c
445.896 -895.9873 446.1602 -892.4424 447.7339 -889.3213 c
449.3076 -886.2012 452.0015 -883.8799 455.3301 -882.7832 c
455.4644 -882.7373 456.2778 -882.4736 457.6221 -882.0645 C
460.562 -881.1641 L
457.5864 -880.3965 L
453.2432 -879.2734 449.8164 -876.0723 448.4189 -871.8311 c
446.1626 -864.9805 449.8984 -857.5674 456.7637 -855.3066 c
457.481 -855.0693 464.021 -852.9531 472.9429 -850.832 c
478.3916 -849.5391 483.6396 -848.5039 488.5376 -847.7607 c
493.6743 -846.9795 498.5771 -846.5137 503.1631 -846.3701 c
504.1777 -846.2793 505.3105 -846.2295 506.5283 -846.2295 c
511.2012 -846.2295 516.6797 -846.9072 522.3535 -847.665 C
524.6357 -847.9707 L
523.123 -846.2363 L
522.6143 -845.6553 522.1113 -845.0762 521.6309 -844.4902 c
515.1406 -836.6416 510.4063 -828.1113 507.5605 -819.1279 c
505.0186 -811.1309 504.4863 -804.3037 504.4863 -799.9854 c
504.4883 -795.9873 504.9268 -793.3652 505.0625 -792.6621 c
506.168 -786.9424 511.1924 -782.79 517.0078 -782.79 C
517.0078 -782.79 L
f1 D
472.0171 -905.8438 m
472.0459 -905.9932 472.0615 -906.1416 472.0615 -906.291 c
472.0615 -906.8662 471.8447 -907.4287 471.4619 -907.834 c
469.2656 -910.1973 468.0542 -913.292 468.0527 -916.5586 c
468.0527 -917.4316 468.1421 -918.3115 468.3213 -919.167 c
469.1704 -923.2568 471.939 -926.6484 475.73 -928.2402 c
476.0498 -928.373 476.3115 -928.6729 476.4209 -929.0225 C
476.4307 -929.0615 L
476.4595 -929.1738 476.4741 -929.2871 476.4741 -929.4141 c
476.4761 -929.6953 476.3887 -929.9688 476.2256 -930.1875 c
474.8047 -932.1299 474.02 -934.5371 474.02 -936.9707 c
474.02 -938.5146 474.3237 -940.0166 474.9209 -941.4346 c
476.4946 -945.1572 479.9287 -947.7529 483.8813 -948.209 C
484.1309 -948.2246 L
485.2314 -948.2246 486.1558 -947.3975 486.2808 -946.3047 c
486.416 -945.1152 485.5596 -944.0439 484.373 -943.9043 c
481.9722 -943.6299 479.8809 -942.041 478.9146 -939.749 c
478.5425 -938.8682 478.3535 -937.9316 478.3535 -936.9707 c
478.3535 -935.4502 478.8389 -933.9512 479.7217 -932.7471 c
480.4307 -931.7754 480.8066 -930.626 480.8081 -929.4072 c
480.8066 -928.9053 480.7402 -928.4121 480.6123 -927.9346 c
480.1582 -926.2578 478.9888 -924.9141 477.4058 -924.2441 c
476.625 -923.9199 475.9131 -923.4727 475.2832 -922.9355 C
474.1948 -920.7559 L
474.6045 -922.2793 L
473.5947 -921.1855 472.8789 -919.8105 472.562 -918.291 c
472.4448 -917.7197 472.3862 -917.1387 472.3862 -916.5586 c
472.3848 -914.4229 473.2036 -912.3184 474.6333 -910.7891 c
475.7646 -909.5693 476.3916 -907.9717 476.3931 -906.291 c
476.3931 -905.8613 476.3511 -905.4238 476.2642 -904.9951 c
475.8428 -902.9043 474.4404 -901.1484 472.5098 -900.2998 c
469.7925 -899.1113 467.9053 -896.3779 467.7031 -893.3379 c
467.6919 -893.1484 467.6846 -892.9629 467.6846 -892.7754 c
467.6831 -889.9092 469.1641 -887.2197 471.5488 -885.7539 c
473.1475 -884.7656 474.1387 -883.0439 474.2002 -881.1436 C
474.2017 -880.9668 L
474.2002 -879.1426 473.3169 -877.4238 471.8359 -876.375 c
469.5166 -874.7383 468.1299 -872.0693 468.1299 -869.2275 c
468.1299 -868.9805 468.1406 -868.7334 468.1621 -868.4844 c
468.4277 -865.3994 470.3296 -862.6592 473.1289 -861.3369 c
473.6528 -861.0879 474.0459 -860.6504 474.2407 -860.1055 c
474.437 -859.5615 474.4063 -858.9736 474.1592 -858.4512 c
473.8037 -857.6973 473.0342 -857.2139 472.2012 -857.2139 c
471.8784 -857.2139 471.5664 -857.2813 471.2749 -857.4199 c
467.0913 -859.4043 464.2446 -863.498 463.8467 -868.1104 c
463.8149 -868.4844 463.7983 -868.8584 463.7983 -869.2275 c
463.7998 -873.4766 465.8711 -877.4717 469.3423 -879.9189 c
469.6636 -880.1455 469.8711 -880.5557 469.8682 -881.0156 c
469.8564 -881.4385 469.6245 -881.8516 469.2739 -882.0645 c
465.624 -884.3174 463.3555 -888.4238 463.353 -892.7754 c
463.353 -893.0605 463.3618 -893.3477 463.3818 -893.6279 c
463.6953 -898.3242 466.5264 -902.4023 470.772 -904.2656 c
471.3994 -904.543 471.877 -905.1455 472.0171 -905.8467 C
472.0171 -905.8438 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 697) 499.7979 -810.0547 -21.3275 185.6333 1 0 0 1 0 0 Bg
172.9205 -67.5145 -67.5145 -172.9205 499.7979 -810.0547 Bm
f0 BB
*U
Uuu0 D
0.9412 0.9255 0.4353 0.5961 0 0 0.1176 (w1) 0 1 Xk
554.2813 -935.5439 m
549.8242 -935.5439 545.9795 -934.0576 542.8555 -931.126 c
539.7148 -928.1816 538.1221 -924.5674 538.1221 -920.3857 C
538.1221 -887.5986 L
538.1221 -883.3857 539.7236 -879.7549 542.8818 -876.8096 c
546.0244 -873.8789 549.8594 -872.3926 554.2813 -872.3926 c
558.7383 -872.3926 562.5762 -873.8887 565.6846 -876.8379 c
568.8066 -879.7988 570.3887 -883.4189 570.3887 -887.5986 C
570.3887 -895.2793 L
558.7197 -895.2793 L
558.7197 -887.4072 L
558.7197 -886.1973 558.2695 -885.1865 557.3447 -884.3193 c
556.4043 -883.4375 555.3008 -883.0088 553.9746 -883.0088 c
552.6494 -883.0088 551.5566 -883.4355 550.6348 -884.3145 c
549.7227 -885.1826 549.2793 -886.1943 549.2793 -887.4072 C
549.2793 -920.29 L
549.2793 -921.501 549.7207 -922.5029 550.6289 -923.3545 c
551.5518 -924.2197 552.6465 -924.6406 553.9746 -924.6406 c
555.3047 -924.6406 556.4082 -924.2188 557.3496 -923.3506 c
558.2715 -922.499 558.7197 -921.498 558.7197 -920.29 C
558.7197 -911.1709 L
570.3887 -911.1709 L
570.3887 -920.3857 L
570.3887 -924.6006 568.7871 -928.2227 565.627 -931.1533 c
562.4854 -934.0664 558.668 -935.5439 554.2813 -935.5439 C
554.2813 -935.5439 L
f*u
587.9404 -935.4961 m
583.4814 -935.4961 579.6455 -934 576.5371 -931.0518 c
573.416 -928.0908 571.833 -924.4707 571.833 -920.29 C
571.833 -887.5029 L
571.833 -883.29 573.4346 -879.6592 576.5928 -876.7139 c
579.7354 -873.7832 583.5527 -872.2969 587.9404 -872.2969 c
592.3965 -872.2969 596.2422 -873.792 599.3682 -876.7402 c
602.5078 -879.7021 604.0996 -883.3232 604.0996 -887.5029 C
604.0996 -920.29 L
604.0996 -924.5039 602.498 -928.1338 599.3398 -931.0801 c
596.1973 -934.0098 592.3623 -935.4961 587.9404 -935.4961 C
587.9404 -935.4961 L
f1 D
587.6855 -882.9609 m
586.3545 -882.9609 585.25 -883.3828 584.3096 -884.251 c
583.3887 -885.1016 582.9395 -886.1025 582.9395 -887.3115 C
582.9395 -920.1943 L
582.9395 -921.4033 583.3887 -922.4043 584.3096 -923.2549 c
585.25 -924.123 586.3545 -924.5449 587.6855 -924.5449 c
589.0137 -924.5449 590.1074 -924.124 591.0303 -923.2588 c
591.9375 -922.4072 592.3789 -921.4053 592.3789 -920.1943 C
592.3789 -887.3115 L
592.3789 -886.1006 591.9375 -885.0986 591.0303 -884.2471 c
590.1074 -883.3818 589.0137 -882.9609 587.6855 -882.9609 C
587.6855 -882.9609 L
f*U
*u
0 D
621.6514 -935.4961 m
617.1934 -935.4961 613.3555 -934 610.2471 -931.0518 c
607.126 -928.0908 605.543 -924.4697 605.543 -920.29 C
605.543 -887.5029 L
605.543 -883.2891 607.1445 -879.6592 610.3037 -876.7139 c
613.4453 -873.7832 617.2627 -872.2969 621.6514 -872.2969 c
626.1074 -872.2969 629.9521 -873.792 633.0781 -876.7402 c
636.2178 -879.7021 637.8105 -883.3232 637.8105 -887.5029 C
637.8105 -920.29 L
637.8105 -924.5039 636.209 -928.1338 633.0498 -931.0801 c
629.9072 -934.0098 626.0723 -935.4961 621.6514 -935.4961 C
621.6514 -935.4961 L
f1 D
621.3955 -882.9609 m
620.0645 -882.9609 618.96 -883.3828 618.0205 -884.251 c
617.0986 -885.1025 616.6504 -886.1035 616.6504 -887.3115 C
616.6504 -920.1943 L
616.6504 -921.4023 617.0986 -922.4033 618.0205 -923.2549 c
618.96 -924.123 620.0645 -924.5449 621.3955 -924.5449 c
622.7236 -924.5449 623.8184 -924.124 624.7402 -923.2588 c
625.6484 -922.4072 626.0889 -921.4053 626.0889 -920.1943 C
626.0889 -887.3115 L
626.0889 -886.1006 625.6484 -885.0977 624.7402 -884.2471 c
623.8184 -883.3818 622.7236 -882.9609 621.3955 -882.9609 C
621.3955 -882.9609 L
f*U
0 D
639.333 -934.7773 m
639.333 -873.0635 L
650.6455 -873.0635 L
650.6455 -924.1133 L
667.3076 -924.1133 L
667.3076 -934.7773 L
639.333 -934.7773 L
fUu552.6289 -933.5615 m
548.2578 -933.5615 544.4902 -932.1055 541.4297 -929.2334 c
538.3574 -926.3535 536.8008 -922.8213 536.8008 -918.7344 C
536.8008 -885.9473 L
536.8008 -881.8291 538.3672 -878.2803 541.4561 -875.3994 c
544.5352 -872.5283 548.2939 -871.0723 552.6289 -871.0723 c
557 -871.0723 560.7598 -872.5371 563.8047 -875.4268 c
566.8584 -878.3223 568.4063 -881.8623 568.4063 -885.9473 C
568.4063 -893.2969 L
557.3975 -893.2969 L
557.3975 -885.7559 L
557.3975 -884.4492 556.9141 -883.3604 555.9189 -882.4268 c
554.9141 -881.4844 553.7373 -881.0264 552.3223 -881.0264 c
550.9082 -881.0264 549.7412 -881.4834 548.7539 -882.4238 c
547.7744 -883.3574 547.2979 -884.4473 547.2979 -885.7559 C
547.2979 -918.6387 L
547.2979 -919.9453 547.7734 -921.0273 548.752 -921.9443 c
549.7383 -922.8701 550.9063 -923.3203 552.3223 -923.3203 c
553.7393 -923.3203 554.917 -922.8691 555.9219 -921.9414 c
556.915 -921.0244 557.3975 -919.9434 557.3975 -918.6387 C
557.3975 -909.8506 L
568.4063 -909.8506 L
568.4063 -918.7344 L
568.4063 -922.8535 566.8398 -926.3945 563.75 -929.2598 c
560.6719 -932.1143 556.9297 -933.5615 552.6289 -933.5615 C
552.6289 -933.5615 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 708) 544.8906 -873.2275 -28.7289 104.2671 1 0 0 1 0 0 Bg
91.4322 -50.1176 -50.1176 -91.4322 544.8906 -873.2275 Bm
f0 BB
*u
0 g
586.2891 -933.5137 m
581.918 -933.5137 578.1582 -932.0488 575.1133 -929.1602 c
572.0596 -926.2646 570.5117 -922.7246 570.5117 -918.6387 C
570.5117 -885.8516 L
570.5117 -881.7334 572.0771 -878.1846 575.166 -875.3037 c
578.2461 -872.4326 581.9883 -870.9766 586.2891 -870.9766 c
590.6582 -870.9766 594.4258 -872.4404 597.4893 -875.3291 c
600.5605 -878.2266 602.1172 -881.7666 602.1172 -885.8516 C
602.1172 -918.6387 L
602.1172 -922.7568 600.5508 -926.3057 597.4619 -929.1865 c
594.3828 -932.0576 590.624 -933.5137 586.2891 -933.5137 C
586.2891 -933.5137 L
f1 D
586.0332 -880.9785 m
584.6152 -880.9785 583.4375 -881.4297 582.4336 -882.3574 c
581.4404 -883.2734 580.958 -884.3545 580.958 -885.6602 C
580.958 -918.543 L
580.958 -919.8486 581.4404 -920.9297 582.4336 -921.8457 c
583.4375 -922.7734 584.6152 -923.2246 586.0332 -923.2246 c
587.4492 -923.2246 588.6172 -922.7744 589.6045 -921.8486 c
590.582 -920.9307 591.0576 -919.8496 591.0576 -918.543 C
591.0576 -885.6602 L
591.0576 -884.3535 590.582 -883.2725 589.6045 -882.3545 c
588.6172 -881.4287 587.4492 -880.9785 586.0332 -880.9785 C
586.0332 -880.9785 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 708) 544.8906 -873.2275 -28.7289 104.2667 1 0 0 1 0 0 Bg
91.4319 -50.1175 -50.1175 -91.4319 544.8906 -873.2275 Bm
f0 BB
*U
*u
0 D
0 g
620 -933.5137 m
615.6289 -933.5137 611.8682 -932.0488 608.8232 -929.1602 c
605.7705 -926.2646 604.2227 -922.7246 604.2227 -918.6387 C
604.2227 -885.8516 L
604.2227 -881.7334 605.7891 -878.1846 608.8779 -875.3037 c
611.9561 -872.4326 615.6982 -870.9766 620 -870.9766 c
624.3691 -870.9766 628.1377 -872.4404 631.2002 -875.3291 c
634.2715 -878.2256 635.8281 -881.7666 635.8281 -885.8516 C
635.8281 -918.6387 L
635.8281 -922.7568 634.2617 -926.3057 631.1729 -929.1865 c
628.0938 -932.0576 624.335 -933.5137 620 -933.5137 C
620 -933.5137 L
f1 D
619.7441 -880.9785 m
618.3262 -880.9785 617.1484 -881.4297 616.1445 -882.3574 c
615.1514 -883.2744 614.668 -884.3545 614.668 -885.6602 C
614.668 -918.543 L
614.668 -919.8486 615.1514 -920.9287 616.1445 -921.8457 c
617.1484 -922.7734 618.3262 -923.2246 619.7441 -923.2246 c
621.1602 -923.2246 622.3281 -922.7744 623.3154 -921.8486 c
624.293 -920.9316 624.7686 -919.8506 624.7686 -918.543 C
624.7686 -885.6602 L
624.7686 -884.3525 624.293 -883.2715 623.3154 -882.3545 c
622.3281 -881.4287 621.1602 -880.9785 619.7441 -880.9785 C
619.7441 -880.9785 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 708) 544.8906 -873.2275 -28.7289 104.2673 1 0 0 1 0 0 Bg
91.4324 -50.1177 -50.1177 -91.4324 544.8906 -873.2275 Bm
f0 BB
*U
0 D
638.0127 -932.7949 m
638.0127 -871.7432 L
648.6631 -871.7432 L
648.6631 -922.793 L
665.3252 -922.793 L
665.3252 -932.7949 L
638.0127 -932.7949 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 708) 544.8906 -873.2275 -28.7289 104.2667 1 0 0 1 0 0 Bg
91.4319 -50.1175 -50.1175 -91.4319 544.8906 -873.2275 Bm
f0 BB
UUuu536.7373 -990.9854 m
529.251 -990.2275 522.7871 -994.916 521.3652 -1002.0215 c
521.1719 -1003.002 520.7275 -1005.7021 520.7246 -1009.8203 c
520.7246 -1014.3076 521.2881 -1021.4277 523.9668 -1029.8779 c
526.5586 -1038.0518 530.6357 -1045.9443 536.1055 -1053.4258 C
532.623 -1052.8096 529.291 -1052.3438 526.2402 -1052.1709 c
524.9141 -1052.0947 523.6729 -1052.0762 522.5518 -1052.1172 c
518.0332 -1052.0146 512.9854 -1052.2588 507.7119 -1052.8604 c
502.7148 -1053.4385 497.373 -1054.3418 491.8389 -1055.5596 c
482.7798 -1057.5791 476.127 -1059.793 475.3989 -1060.0332 c
466.728 -1062.9814 462.0176 -1072.6162 464.8643 -1081.3135 c
465.9473 -1084.6074 467.9849 -1087.3711 470.6631 -1089.3184 C
467.9814 -1091.002 465.8115 -1093.4229 464.377 -1096.3574 c
462.3916 -1100.4326 462.0605 -1105 463.4385 -1109.1885 c
465.1279 -1114.3203 469.1475 -1118.042 474.103 -1119.4453 C
471.0703 -1123.8193 470.0986 -1129.458 471.7827 -1134.5449 c
473.833 -1140.7246 479.2959 -1144.8271 485.6982 -1145.2715 C
485.626 -1145.6943 485.5684 -1146.1211 485.5254 -1146.5498 c
485.0981 -1150.9727 486.4082 -1155.2227 489.2144 -1158.5225 c
492.021 -1161.8164 495.9883 -1163.7676 500.3887 -1164.0586 c
500.9912 -1164.0938 503.1504 -1164.2168 506.4346 -1164.2998 c
509.1162 -1164.5156 512.459 -1164.5918 516.2236 -1164.54 c
533.8633 -1164.2383 556.041 -1161.7441 566.7588 -1159.4531 C
607.1992 -1161.2607 647.6602 -1165.5859 687.8975 -1172.3125 C
687.8975 -1143.1963 687.8975 -1114.0811 687.8975 -1084.9648 C
654.6143 -1077.7861 621.1777 -1072.2256 587.7266 -1068.3496 C
585.1357 -1064.0938 582.373 -1060.0059 579.5059 -1056.1943 c
578.6074 -1054.9912 577.5469 -1053.8965 576.3594 -1052.9463 c
571.0391 -1048.6592 566.501 -1044.1758 562.8711 -1039.5947 c
559.915 -1035.8447 557.5186 -1031.9785 555.748 -1028.0898 c
552.7168 -1021.417 552.0752 -1016.0029 552.0713 -1012.6299 c
552.0723 -1011.2139 552.1934 -1010.415 552.1992 -1010.3789 C
552.3193 -1009.6045 552.4385 -1008.8301 552.5586 -1008.0566 C
552.5117 -1008.042 552.4648 -1008.0254 552.418 -1008.0107 C
552.502 -1000.8594 547.2275 -993.752 539.7236 -991.5684 c
538.7383 -991.2803 537.7344 -991.0859 536.7373 -990.9854 C
536.7373 -990.9854 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 44) 509.1064 -1030.0313 -30.796 248.2043 1 0 0 0.94 0 497.3658 Bg
213.2064 -119.4518 -127.0764 -200.414 509.1064 -1034.2471 Bm
f0 BB
516.8867 -974.3662 m
509.4072 -973.7383 502.9492 -978.6416 501.5293 -985.9131 c
501.3369 -986.915 500.8926 -989.6758 500.8906 -993.874 c
500.8896 -998.4492 501.4521 -1005.7021 504.1279 -1014.291 c
506.7178 -1022.6123 510.79 -1030.6455 516.2559 -1038.2666 C
512.7773 -1037.6523 509.4473 -1037.1904 506.4004 -1037.0273 c
505.0742 -1036.9561 503.835 -1036.9414 502.7148 -1036.9893 c
498.2012 -1036.9023 493.1587 -1037.1699 487.8926 -1037.8027 c
482.9019 -1038.4063 477.5688 -1039.3398 472.042 -1040.5889 c
462.9976 -1042.6533 456.3574 -1044.9014 455.6309 -1045.1436 c
446.9761 -1048.127 442.2749 -1057.8184 445.1162 -1066.5742 c
446.1973 -1069.8936 448.2314 -1072.6865 450.9033 -1074.6602 C
448.2271 -1076.3408 446.0615 -1078.7656 444.6299 -1081.7109 c
442.6489 -1085.7949 442.3184 -1090.3857 443.6934 -1094.6113 c
445.3794 -1099.792 449.3911 -1103.5859 454.3369 -1105.0605 C
451.3101 -1109.4287 450.3403 -1115.0996 452.021 -1120.25 c
454.0674 -1126.5137 459.5205 -1130.752 465.9116 -1131.3203 C
465.8398 -1131.7441 465.7822 -1132.1768 465.7393 -1132.6084 c
465.313 -1137.0723 466.6206 -1141.3965 469.4219 -1144.7969 c
472.2241 -1148.1934 476.1855 -1150.2598 480.5796 -1150.6563 c
481.1812 -1150.7041 483.3374 -1150.8789 486.6172 -1151.0391 c
489.2949 -1151.3193 492.6333 -1151.4756 496.3936 -1151.5088 c
514.0117 -1151.6035 536.1758 -1149.5244 546.8906 -1147.3828 C
587.3184 -1150.0371 627.8066 -1155.207 668.1104 -1162.7793 C
668.1104 -1131.8857 668.1104 -1100.9922 668.1104 -1070.0977 C
634.7715 -1062.8828 601.3066 -1057.3008 567.8555 -1053.4219 C
565.2646 -1049.0273 562.502 -1044.8115 559.6357 -1040.8867 c
558.7363 -1039.6484 557.6768 -1038.5254 556.4883 -1037.5508 c
551.1689 -1033.165 546.6328 -1028.5781 543.0049 -1023.8896 c
540.0498 -1020.0596 537.6543 -1016.1055 535.8848 -1012.1279 c
532.8555 -1005.3086 532.2148 -999.7559 532.21 -996.292 c
532.21 -994.8369 532.332 -994.0146 532.3389 -993.9775 C
532.458 -993.1807 532.5771 -992.3838 532.6973 -991.5869 C
532.6504 -991.5713 532.6035 -991.5566 532.5566 -991.542 C
532.6406 -984.1963 527.3691 -976.999 519.8711 -974.9043 c
518.8867 -974.6309 517.8828 -974.4502 516.8867 -974.3662 C
516.8867 -974.3662 L
Bb
1 (Unnamed gradient 194) 442.9033 -1068.5732 0 225.207 1 0 0 1 0 0 Bg
225.207 0 0 -193.041 442.9033 -971.7383 Xm
8143.5317 0 0 -193.041 -7700.6284 -971.7383 Bc
130.2402 0 0 -193.041 442.9033 -971.7383 Bm
94.9669 0 0 -193.041 573.1436 -971.7383 Bm
8143.5317 0 0 -193.041 668.1104 -971.7383 Bc
f0 BB
Uu688.0752 -1135.8496 m
688.0752 -1165.9941 688.0752 -1196.1377 688.0752 -1226.2813 C
702.1309 -1223.417 711.668 -1214.6729 711.6689 -1202.207 C
711.6689 -1172.3096 711.6689 -1142.4111 711.6689 -1112.5137 C
711.668 -1124.9814 702.1309 -1133.4102 688.0752 -1135.8496 C
Bb
1 (Unnamed gradient 115) 687.8516 -1169.3975 0 23.7268 1 0 0 1 0 0 Bg
23.7268 0 0 -117.7676 687.8516 -1110.5137 Xm
8387.6279 0 0 -117.7676 -7699.7759 -1110.5137 Bc
9.1477 0 0 -117.7676 687.8516 -1110.5137 Bm
14.5791 0 0 -117.7676 696.999 -1110.5137 Bm
8387.6279 0 0 -117.7676 711.5781 -1110.5137 Bc
f0 BB
1 Ap
668.1104 -1070.0977 m
692.2168 -1075.2598 711.6689 -1095.1963 711.6689 -1113.165 c
711.6689 -1143.0635 711.6689 -1172.9609 711.6689 -1202.8594 c
711.6689 -1184.8887 692.2168 -1167.249 668.1104 -1162.7793 c
668.1104 -1131.8857 668.1104 -1100.9922 668.1104 -1070.0977 C
Bb
1 (Unnamed gradient 125) 672.8594 -1086.4033 0 37.2705 1.1753 0 0 1.2133 -1472.3988 -1715.098 Bg
43.804 0 0 -137.6149 667.6973 -1067.6709 Xm
9840.209 0 0 -137.6149 -9172.5117 -1067.6709 Bc
35.6237 0 0 -137.6149 667.6973 -1067.6709 Bm
8.1803 0 0 -137.6149 703.3213 -1067.6709 Bm
9840.209 0 0 -137.6149 711.501 -1067.6709 Bc
f0 BB
668.1104 -1073.4023 m
692.2168 -1078.5391 711.6689 -1097.2676 711.6689 -1114.0371 c
711.6689 -1142.4766 711.6689 -1170.915 711.6689 -1199.3545 c
711.6689 -1182.5869 692.2168 -1163.9697 668.1104 -1159.4775 c
668.1104 -1130.7852 668.1104 -1102.0938 668.1104 -1073.4023 C
Bb
1 (Unnamed gradient 95) 672.8594 -1086.3213 0 37.2705 1.1753 0 0 1.2133 -1472.3988 -1715.098 Bg
43.804 0 0 -130.8053 667.6973 -1070.9756 Xm
9840.209 0 0 -130.8053 -9172.5117 -1070.9756 Bc
30.3462 0 0 -130.8053 667.6973 -1070.9756 Bm
13.4579 0 0 -130.8053 698.043 -1070.9756 Bm
9840.209 0 0 -130.8053 711.501 -1070.9756 Bc
f0 BB
0 Ap
711.6689 -1202.4639 m
711.668 -1184.7197 692.6953 -1167.3457 668.1104 -1162.7793 c
690.9736 -1167.0195 709.4219 -1184.2119 709.4219 -1201.9756 c
709.4209 -1214.1611 700.873 -1222.7715 688.0752 -1225.832 C
688.0752 -1225.9814 688.0752 -1226.1318 688.0752 -1226.2813 C
702.1602 -1223.5947 711.668 -1214.9619 711.6689 -1202.4639 C
Bb
1 (Unnamed gradient 45) 689.6162 -1159.3877 -89.3263 65.1505 1 0 0 1 0 0 Bg
0.766 -65.146 -47.2934 -0.5561 713.3672 -1159.1084 Xm
98.6073 -8385.8975 -47.2934 -0.5561 614.7598 7226.7896 Bc
0.766 -65.146 -47.2934 -0.5561 713.3672 -1159.1084 Bm
98.6073 -8385.8975 -47.2934 -0.5561 714.1328 -1224.2549 Bc
f0 BB
U*u
0 g
516.8867 -977.8252 m
517.6621 -977.8887 518.4453 -978.0283 519.2139 -978.2422 c
525.7061 -980.0439 530.0537 -986.75 528.9023 -993.1055 C
528.8564 -993.3779 528.8096 -993.6523 528.7637 -993.9248 C
528.7813 -993.9297 528.7988 -993.9355 528.8174 -993.9414 C
528.7773 -994.4238 528.7393 -995.1055 528.7393 -995.9766 c
528.7441 -999.7842 529.4375 -1005.8672 532.7295 -1013.2754 c
534.625 -1017.5303 537.1807 -1021.7461 540.3271 -1025.8174 c
544.1406 -1030.7354 548.8926 -1035.5273 554.4482 -1040.0986 c
555.3711 -1040.8545 556.1963 -1041.7236 556.8965 -1042.6875 c
559.9658 -1046.8828 562.9131 -1051.4209 565.6523 -1056.168 C
565.7373 -1056.3145 565.8223 -1056.46 565.9072 -1056.6074 C
600.1182 -1060.4707 634.3457 -1066.1182 668.4395 -1073.4727 C
668.4395 -1102.1611 668.4395 -1130.8506 668.4395 -1159.5391 C
627.8701 -1151.8613 587.1133 -1146.6182 546.4199 -1143.9258 C
546.3818 -1143.9346 546.3438 -1143.9414 546.3057 -1143.9502 C
535.9063 -1146.082 513.3574 -1148.1318 496.3936 -1148.0322 c
492.7534 -1147.9971 489.5391 -1147.8428 486.791 -1147.5537 c
483.582 -1147.3975 481.4888 -1147.2256 480.9155 -1147.1738 c
477.4404 -1146.8564 474.3081 -1145.2119 472.0923 -1142.5234 c
469.877 -1139.8281 468.8442 -1136.4102 469.1807 -1132.8857 c
469.3091 -1131.5313 469.6416 -1130.209 470.1675 -1128.9531 C
470.3633 -1128.4834 470.5591 -1128.0137 470.7549 -1127.5439 C
470.2583 -1127.6133 469.7622 -1127.6846 469.2656 -1127.7549 C
468.7378 -1127.8271 468.208 -1127.8662 467.6831 -1127.876 c
462.04 -1127.9707 457.0649 -1124.4502 455.3003 -1119.0459 c
453.4893 -1113.498 455.5664 -1107.2021 460.3589 -1103.7949 C
461.1899 -1103.207 462.021 -1102.6191 462.8521 -1102.0332 C
461.8477 -1102.0869 460.8438 -1102.1416 459.8398 -1102.1982 C
459.6748 -1102.209 459.5093 -1102.2158 459.3438 -1102.2168 c
453.7021 -1102.3242 448.73 -1098.8096 446.9702 -1093.4014 c
445.8813 -1090.0527 446.1436 -1086.4316 447.7109 -1083.2139 c
449.2773 -1079.9951 451.9595 -1077.5684 455.2759 -1076.3984 c
455.4097 -1076.3525 456.2202 -1076.0713 457.5596 -1075.6387 C
458.5366 -1075.3203 459.5132 -1075.0049 460.4902 -1074.6914 C
459.5015 -1074.4404 458.5127 -1074.1914 457.5244 -1073.9443 C
453.1963 -1072.8584 449.7842 -1069.6777 448.3926 -1065.3936 c
446.147 -1058.4697 449.8638 -1050.834 456.7046 -1048.4824 c
457.4189 -1048.2402 463.9355 -1046.0381 472.8389 -1044.0078 c
478.2769 -1042.7803 483.5181 -1041.8613 488.4121 -1041.2676 c
493.5449 -1040.6514 498.4463 -1040.3848 503.0332 -1040.4629 c
504.0488 -1040.4209 505.1816 -1040.4297 506.4004 -1040.4941 c
511.0742 -1040.7393 516.5586 -1041.7451 522.2383 -1042.8945 C
523 -1043.0479 523.7617 -1043.2031 524.5234 -1043.3584 C
524.0186 -1042.7471 523.5137 -1042.1348 523.0088 -1041.5234 C
522.501 -1040.9111 521.9961 -1040.2988 521.5146 -1039.6826 c
515.0176 -1031.3965 510.2803 -1022.5947 507.4326 -1013.4395 c
504.8896 -1005.2773 504.3574 -998.4121 504.3574 -994.0889 c
504.3594 -990.0879 504.7979 -987.4902 504.9336 -986.7939 c
506.04 -981.1445 511.0654 -977.3418 516.8867 -977.8252 C
516.8867 -977.8252 L
f1 D
471.915 -1099.5996 m
471.9438 -1099.7529 471.9595 -1099.9033 471.9595 -1100.0518 c
471.9595 -1100.6338 471.7432 -1101.2051 471.3608 -1101.6152 c
469.1694 -1104.0166 467.9614 -1107.1631 467.96 -1110.4678 c
467.9595 -1111.3516 468.0493 -1112.2412 468.2275 -1113.1055 c
469.0747 -1117.2305 471.8364 -1120.624 475.6206 -1122.208 c
475.9399 -1122.3398 476.2012 -1122.6436 476.3105 -1122.9951 C
476.3135 -1123.0098 476.3169 -1123.0215 476.3203 -1123.0342 C
476.3491 -1123.1475 476.3633 -1123.2617 476.3638 -1123.3887 c
476.3652 -1123.6729 476.2783 -1123.9492 476.1152 -1124.1729 c
474.6968 -1126.1426 473.9141 -1128.582 473.9141 -1131.041 c
473.9141 -1132.6006 474.2168 -1134.1143 474.813 -1135.5391 c
476.3838 -1139.2803 479.812 -1141.8623 483.7603 -1142.3105 C
483.8433 -1142.3164 483.9263 -1142.3203 484.0093 -1142.3252 C
485.1089 -1142.3213 486.0322 -1141.4902 486.1572 -1140.3906 c
486.2925 -1139.1934 485.4365 -1138.1133 484.2515 -1137.9746 c
481.853 -1137.6992 479.7646 -1136.1104 478.7998 -1133.8047 c
478.4287 -1132.918 478.2402 -1131.9736 478.2397 -1131.0059 c
478.2397 -1129.4717 478.7246 -1127.9551 479.606 -1126.7373 c
480.314 -1125.7559 480.6895 -1124.5977 480.6909 -1123.3691 c
480.6895 -1122.8633 480.623 -1122.3652 480.4951 -1121.8828 c
480.0415 -1120.1934 478.874 -1118.8398 477.2935 -1118.167 c
476.5142 -1117.8418 475.8037 -1117.3945 475.1748 -1116.8535 C
474.8125 -1116.123 474.4507 -1115.3906 474.0884 -1114.6592 C
474.2246 -1115.1709 474.3608 -1115.6836 474.4971 -1116.1943 C
473.4893 -1115.0977 472.7749 -1113.7129 472.459 -1112.1807 c
472.3418 -1111.6035 472.2832 -1111.0156 472.2832 -1110.4297 c
472.2817 -1108.2705 473.0991 -1106.1396 474.5259 -1104.5898 c
475.6553 -1103.3564 476.2813 -1101.7441 476.2827 -1100.0469 c
476.2822 -1099.6133 476.2407 -1099.1719 476.1538 -1098.7383 c
475.7334 -1096.627 474.3335 -1094.8535 472.4067 -1093.999 c
469.6953 -1092.7998 467.813 -1090.0479 467.6108 -1086.9727 c
467.5996 -1086.7793 467.5923 -1086.5928 467.5923 -1086.4033 c
467.5908 -1083.501 469.0684 -1080.7734 471.4478 -1079.2949 c
473.043 -1078.2969 474.0327 -1076.5625 474.0938 -1074.6445 C
474.0942 -1074.5859 474.0947 -1074.5264 474.0952 -1074.4678 C
474.0938 -1072.625 473.2124 -1070.8809 471.7344 -1069.8135 c
469.4199 -1068.1484 468.0366 -1065.4473 468.0366 -1062.5713 c
468.0366 -1062.3203 468.0474 -1062.0723 468.0688 -1061.8213 c
468.334 -1058.6992 470.231 -1055.9346 473.0244 -1054.625 c
473.5474 -1054.3799 473.9399 -1053.9443 474.1343 -1053.3955 c
474.3301 -1052.8477 474.2993 -1052.252 474.0527 -1051.7217 c
473.6982 -1050.9561 472.9297 -1050.459 472.0986 -1050.4482 c
471.7769 -1050.4443 471.4653 -1050.5088 471.1743 -1050.6475 c
467 -1052.6172 464.1616 -1056.7666 463.7646 -1061.4385 c
463.7334 -1061.8193 463.7168 -1062.1973 463.7168 -1062.5703 c
463.7178 -1066.877 465.7832 -1070.9111 469.2461 -1073.3916 c
469.5669 -1073.6201 469.7739 -1074.0352 469.771 -1074.502 c
469.7593 -1074.9277 469.5278 -1075.3447 469.1782 -1075.5625 c
465.5371 -1077.8438 463.2749 -1082.0234 463.2725 -1086.4346 c
463.2725 -1086.7236 463.2813 -1087.0117 463.3013 -1087.2959 c
463.6138 -1092.0547 466.4365 -1096.1455 470.6729 -1098.0107 c
471.2988 -1098.2881 471.7754 -1098.8984 471.915 -1099.6035 C
471.915 -1099.6016 471.915 -1099.6016 471.915 -1099.5996 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 103) 499.8545 -1000.7813 -21.3275 184.745 1 0 0 0.94 0 497.3658 Bg
172.093 -63.16 -67.1914 -161.7675 499.8545 -1006.752 Bm
f0 BB
*U
Uuu0 D
0.9294 0.1804 0.9961 0.0549 0 0.4314 0.102 (g2) 0 1 Xk
554.0605 -1132.3398 m
549.5938 -1131.9932 545.7402 -1130.2578 542.6104 -1127.1494 c
539.4629 -1124.0234 537.8682 -1120.3428 537.8682 -1116.1982 C
537.8682 -1105.3633 537.8682 -1094.5303 537.8682 -1083.6963 C
537.8672 -1079.5205 539.4727 -1076.0391 542.6367 -1073.3828 c
545.7861 -1070.7451 549.6289 -1069.6133 554.0605 -1070.04 c
558.5293 -1070.4697 562.375 -1072.3418 565.4912 -1075.5781 c
568.6201 -1078.8203 570.207 -1082.5518 570.207 -1086.6553 C
570.207 -1089.1689 570.207 -1091.6826 570.207 -1094.1973 C
566.3076 -1093.7832 562.4082 -1093.3926 558.5098 -1093.0264 C
558.5098 -1090.4404 558.5098 -1087.8545 558.5098 -1085.2695 C
558.5098 -1084.0781 558.0586 -1083.0381 557.1309 -1082.0947 c
556.1875 -1081.1348 555.083 -1080.6064 553.7529 -1080.4834 c
552.4258 -1080.3604 551.3301 -1080.6836 550.4063 -1081.4697 c
549.4922 -1082.2461 549.0479 -1083.2061 549.0479 -1084.4063 C
549.0479 -1095.2344 549.0479 -1106.0635 549.0479 -1116.8936 C
549.0479 -1118.0898 549.4912 -1119.1133 550.4004 -1120.0254 c
551.3262 -1120.9512 552.4219 -1121.4531 553.7529 -1121.5596 c
555.0859 -1121.666 556.1934 -1121.3428 557.1367 -1120.5654 c
558.0605 -1119.8037 558.5098 -1118.8574 558.5098 -1117.667 C
558.5098 -1114.6719 558.5098 -1111.6768 558.5098 -1108.6816 C
562.4082 -1109.0293 566.3076 -1109.4014 570.207 -1109.7979 C
570.207 -1112.8125 570.207 -1115.8281 570.207 -1118.8447 C
570.2061 -1122.9824 568.6016 -1126.3818 565.4336 -1128.9707 c
562.2832 -1131.5537 558.457 -1132.6807 554.0605 -1132.3398 C
554.0605 -1132.3398 L
f*u
587.8027 -1135.498 m
583.334 -1134.9961 579.4873 -1133.1299 576.3711 -1129.9258 c
573.2422 -1126.7031 571.6543 -1122.999 571.6543 -1118.8945 C
571.6543 -1108.1699 571.6543 -1097.4443 571.6543 -1086.7188 C
571.6543 -1082.5859 573.2617 -1079.1992 576.4268 -1076.6836 c
579.5771 -1074.1865 583.4043 -1073.2031 587.8027 -1073.7793 c
592.2705 -1074.3643 596.124 -1076.3555 599.2578 -1079.6699 c
602.4043 -1082.9941 604 -1086.748 604 -1090.8096 C
604 -1101.4297 604 -1112.0518 604 -1122.6719 C
603.999 -1126.7686 602.3955 -1130.082 599.2285 -1132.5498 c
596.0791 -1135.0088 592.2354 -1135.9961 587.8027 -1135.498 C
587.8027 -1135.498 L
f1 D
587.5469 -1084.1611 m
586.2129 -1083.9912 585.1064 -1084.2637 584.1621 -1084.9961 c
583.2383 -1085.7139 582.79 -1086.6377 582.79 -1087.8203 C
582.79 -1098.541 582.79 -1109.2607 582.79 -1119.9814 C
582.79 -1121.1641 583.2383 -1122.1934 584.1621 -1123.1279 c
585.1064 -1124.083 586.2119 -1124.6201 587.5469 -1124.7734 c
588.8779 -1124.9277 589.9746 -1124.6445 590.9004 -1123.9111 c
591.8105 -1123.1875 592.252 -1122.2646 592.252 -1121.083 C
592.252 -1110.3945 592.252 -1099.7051 592.252 -1089.0146 C
592.252 -1087.834 591.8105 -1086.7969 590.9004 -1085.8477 c
589.9746 -1084.8828 588.8779 -1084.332 587.5469 -1084.1611 C
587.5469 -1084.1611 L
f*U
*u
0 D
621.5859 -1139.8672 m
617.1201 -1139.2139 613.2754 -1137.2314 610.1602 -1133.9492 c
607.0322 -1130.6504 605.4463 -1126.9258 605.4463 -1122.8662 C
605.4463 -1112.249 605.4463 -1101.6338 605.4463 -1091.0176 C
605.4463 -1086.9258 607.0518 -1083.6299 610.2168 -1081.252 c
613.3652 -1078.8916 617.1904 -1078.0547 621.5859 -1078.7793 c
626.0498 -1079.5146 629.9004 -1081.6182 633.0293 -1085.0098 c
636.1729 -1088.4102 637.7676 -1092.1816 637.7676 -1096.2002 C
637.7676 -1106.7119 637.7676 -1117.2246 637.7676 -1127.7354 C
637.7676 -1131.79 636.1641 -1135.0127 633.001 -1137.3457 c
629.8545 -1139.6719 626.0146 -1140.5146 621.5859 -1139.8672 C
621.5859 -1139.8672 L
f1 D
621.3301 -1089.0449 m
619.9971 -1088.8301 618.8896 -1089.0625 617.9492 -1089.7529 c
617.0254 -1090.4316 616.5762 -1091.3311 616.5762 -1092.5 C
616.5762 -1103.1104 616.5762 -1113.7227 616.5762 -1124.333 C
616.5762 -1125.5039 617.0254 -1126.5361 617.9492 -1127.4951 c
618.8896 -1128.4746 619.9971 -1129.0449 621.3301 -1129.2432 c
622.6602 -1129.4404 623.7568 -1129.2012 624.6797 -1128.5059 c
625.5898 -1127.8242 626.0313 -1126.9238 626.0313 -1125.7549 C
626.0313 -1115.1748 626.0313 -1104.5938 626.0313 -1094.0137 C
626.0313 -1092.8447 625.5898 -1091.8057 624.6797 -1090.834 c
623.7568 -1089.8447 622.6602 -1089.2598 621.3301 -1089.0449 C
621.3301 -1089.0449 L
f*U
0 D
639.291 -1141.918 m
639.291 -1122.1416 639.291 -1102.3652 639.291 -1082.5879 C
643.0654 -1083.2744 646.8389 -1083.9814 650.6104 -1084.7109 C
650.6104 -1101.0127 650.6104 -1117.3164 650.6104 -1133.6182 C
656.166 -1134.6074 661.7188 -1135.6396 667.2676 -1136.7168 C
667.2676 -1140.1045 667.2676 -1143.4932 667.2676 -1146.8799 C
657.9512 -1145.1006 648.625 -1143.4463 639.291 -1141.918 C
fUu552.4043 -1130.2568 m
548.0244 -1129.9229 544.248 -1128.2236 541.1816 -1125.1807 c
538.1035 -1122.125 536.5439 -1118.5283 536.5439 -1114.4756 C
536.5439 -1103.6367 536.5439 -1092.7988 536.5439 -1081.9609 C
536.5439 -1077.877 538.1133 -1074.4746 541.208 -1071.8691 c
544.293 -1069.2783 548.0596 -1068.167 552.4043 -1068.5781 c
556.7852 -1068.9941 560.5547 -1070.8223 563.6074 -1073.9883 c
566.668 -1077.1572 568.2207 -1080.8076 568.2207 -1084.8203 C
568.2207 -1087.2266 568.2207 -1089.6338 568.2207 -1092.04 C
564.541 -1091.6553 560.8633 -1091.29 557.1846 -1090.9482 C
557.1846 -1088.4707 557.1846 -1085.9932 557.1846 -1083.5156 C
557.1855 -1082.2266 556.6992 -1081.1064 555.7021 -1080.0928 c
554.6934 -1079.0664 553.5156 -1078.5059 552.0977 -1078.375 c
550.6807 -1078.2441 549.5107 -1078.5928 548.5215 -1079.4355 c
547.54 -1080.2725 547.0625 -1081.3096 547.0625 -1082.6035 C
547.0625 -1093.4395 547.0625 -1104.2754 547.0625 -1115.1113 C
547.0625 -1116.4033 547.5391 -1117.5078 548.5186 -1118.4883 c
549.5078 -1119.4766 550.6777 -1120.0117 552.0977 -1120.123 c
553.5176 -1120.2363 554.6982 -1119.8867 555.7051 -1119.0566 c
556.7012 -1118.2344 557.1846 -1117.2109 557.1846 -1115.9258 C
557.1846 -1113.0371 557.1846 -1110.1504 557.1846 -1107.2637 C
560.8633 -1107.5879 564.541 -1107.9346 568.2207 -1108.3008 C
568.2207 -1111.2109 568.2207 -1114.1191 568.2207 -1117.0273 C
568.2207 -1121.0752 566.6484 -1124.4004 563.5518 -1126.9404 c
560.4668 -1129.4756 556.7148 -1130.585 552.4043 -1130.2568 C
552.4043 -1130.2568 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 225) 544.7266 -1098.3096 -28.7289 104.2673 1 0 0 0.94 0 497.3658 Bg
91.4324 -47.1107 -50.1177 -85.9465 544.7266 -1098.4287 Bm
f0 BB
*u
0 g
586.1465 -1133.375 m
581.7646 -1132.8877 577.9961 -1131.0635 574.9424 -1127.9258 c
571.8818 -1124.7764 570.3301 -1121.1533 570.3301 -1117.1416 C
570.3301 -1106.4121 570.3301 -1095.6826 570.3301 -1084.9531 C
570.3301 -1080.9111 571.9004 -1077.5977 574.9961 -1075.1328 c
578.084 -1072.6807 581.835 -1071.7139 586.1465 -1072.2734 c
590.5264 -1072.8408 594.3047 -1074.7861 597.375 -1078.0303 c
600.4531 -1081.2813 602.0127 -1084.9512 602.0127 -1088.9219 C
602.0127 -1099.5488 602.0127 -1110.1768 602.0127 -1120.8037 C
602.0127 -1124.8096 600.4434 -1128.0537 597.3467 -1130.4717 c
594.2607 -1132.8887 590.4932 -1133.8584 586.1465 -1133.375 C
586.1465 -1133.375 L
f1 D
585.8906 -1082.0127 m
584.4697 -1081.834 583.2891 -1082.1289 582.2822 -1082.9121 c
581.2871 -1083.6865 580.8027 -1084.6875 580.8027 -1085.9648 C
580.8027 -1096.6914 580.8027 -1107.418 580.8027 -1118.1445 C
580.8027 -1119.4229 581.2871 -1120.5332 582.2822 -1121.5391 c
583.2891 -1122.5586 584.4697 -1123.1309 585.8906 -1123.293 c
587.3105 -1123.4541 588.4814 -1123.1514 589.4707 -1122.3652 c
590.4512 -1121.585 590.9277 -1120.5869 590.9268 -1119.3115 C
590.9268 -1108.6182 590.9268 -1097.9238 590.9268 -1087.2305 C
590.9268 -1085.9561 590.4512 -1084.8379 589.4707 -1083.8154 c
588.4814 -1082.7832 587.3105 -1082.1934 585.8906 -1082.0127 C
585.8906 -1082.0127 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 225) 544.7275 -1098.3096 -28.7289 104.2661 1 0 0 0.94 0 497.3658 Bg
91.4313 -47.1101 -50.1171 -85.9454 544.7275 -1098.4287 Bm
f0 BB
*U
*u
0 D
0 g
619.9316 -1137.709 m
615.5527 -1137.0732 611.7852 -1135.1338 608.7334 -1131.9209 c
605.6748 -1128.6953 604.123 -1125.0557 604.123 -1121.084 C
604.123 -1110.4629 604.123 -1099.8438 604.123 -1089.2236 C
604.123 -1085.2207 605.6934 -1081.998 608.7881 -1079.667 c
611.873 -1077.3496 615.623 -1076.5244 619.9316 -1077.2305 c
624.3086 -1077.9453 628.083 -1080.0029 631.1494 -1083.3223 c
634.2236 -1086.6436 635.7832 -1090.333 635.7832 -1094.2627 C
635.7832 -1104.7803 635.7832 -1115.2988 635.7832 -1125.8174 C
635.7832 -1129.7822 634.2158 -1132.9375 631.1221 -1135.2236 c
628.0391 -1137.5098 624.2744 -1138.3379 619.9316 -1137.709 C
619.9316 -1137.709 L
f1 D
619.6758 -1086.8613 m
618.2549 -1086.6328 617.0752 -1086.8848 616.0693 -1087.625 c
615.0742 -1088.3564 614.5908 -1089.3301 614.5898 -1090.5928 C
614.5898 -1101.21 614.5898 -1111.8281 614.5898 -1122.4453 C
614.5898 -1123.7109 615.0742 -1124.8271 616.0693 -1125.8584 c
617.0752 -1126.9014 618.2549 -1127.5107 619.6758 -1127.7207 c
621.0947 -1127.9297 622.2637 -1127.6709 623.2529 -1126.9258 c
624.2324 -1126.1904 624.708 -1125.2188 624.708 -1123.9561 C
624.708 -1113.3711 624.708 -1102.7861 624.708 -1092.2021 C
624.708 -1090.9395 624.2324 -1089.8164 623.2529 -1088.7705 c
622.2637 -1087.7139 621.0938 -1087.0889 619.6758 -1086.8613 C
619.6758 -1086.8613 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 225) 544.7266 -1098.3096 -28.7289 104.2672 1 0 0 0.94 0 497.3658 Bg
91.4323 -47.1106 -50.1177 -85.9464 544.7266 -1098.4287 Bm
f0 BB
*U
0 D
637.9697 -1139.7949 m
637.9697 -1120.2236 637.9697 -1100.6504 637.9697 -1081.0781 C
641.5234 -1081.7217 645.0762 -1082.3838 648.627 -1083.0645 C
648.627 -1099.377 648.627 -1115.6895 648.627 -1132.002 C
654.1836 -1132.9805 659.7373 -1134.0049 665.2871 -1135.0742 C
665.2871 -1138.2539 665.2871 -1141.4326 665.2871 -1144.6133 C
656.1895 -1142.8857 647.083 -1141.2803 637.9697 -1139.7949 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 225) 544.7266 -1098.3096 -28.7289 104.2671 1 0 0 0.94 0 497.3658 Bg
91.4322 -47.1106 -50.1176 -85.9463 544.7266 -1098.4287 Bm
f0 BB
UUuu374.0884 -885.1992 m
382.2544 -886.3242 389.3105 -892.6172 390.8623 -900.1631 c
391.0728 -901.2021 391.5586 -904.0479 391.5605 -908.2266 c
391.5605 -912.7842 390.9458 -919.8936 388.0234 -927.8955 c
385.1938 -935.6611 380.7451 -942.8438 374.7783 -949.2959 C
378.5762 -949.4229 382.2129 -949.6504 385.541 -950.1035 c
386.9897 -950.3008 388.3433 -950.5361 389.5674 -950.8047 c
394.4995 -951.6133 400.0112 -952.8438 405.771 -954.4277 c
411.229 -955.9287 417.0649 -957.7734 423.1182 -959.9102 c
433.0225 -963.4072 440.3076 -966.5527 441.105 -966.8984 c
450.5977 -971.0449 455.7646 -981.0908 452.6436 -989.3076 c
451.457 -992.4219 449.2231 -994.9033 446.29 -996.4971 C
449.2275 -998.4844 451.605 -1001.123 453.1772 -1004.1758 c
455.353 -1008.4053 455.7173 -1012.9277 454.2061 -1016.9053 c
452.3545 -1021.7822 447.9497 -1025.0439 442.5225 -1025.8818 C
445.8438 -1030.5332 446.9092 -1036.2012 445.0649 -1041.0566 c
442.8188 -1046.9678 436.8369 -1050.5068 429.833 -1050.249 C
429.9121 -1050.6768 429.9756 -1051.1074 430.0215 -1051.5391 c
430.4888 -1055.9893 429.0562 -1060.0869 425.9878 -1063.0811 c
422.918 -1066.0762 418.5801 -1067.6045 413.771 -1067.3896 c
413.1133 -1067.3555 410.7534 -1067.2314 407.1655 -1066.917 c
404.2363 -1066.8115 400.5859 -1066.4707 396.4741 -1065.9209 c
377.2153 -1063.3418 353.0352 -1056.9961 341.1704 -1052.4922 C
300.9741 -1047.1045 L
301.1543 -949.8633 L
318.4941 -952.2227 L
321.3188 -948.4443 324.3296 -944.8896 327.4556 -941.6523 c
328.4355 -940.6309 329.5908 -939.7666 330.8857 -939.0869 c
336.686 -936.0215 341.6318 -932.5205 345.5898 -928.6836 c
348.8135 -925.5508 351.4253 -922.1494 353.3569 -918.5732 c
356.6616 -912.4482 357.3604 -907.0127 357.3633 -903.5313 c
357.3633 -902.0693 357.2324 -901.2109 357.2246 -901.1729 C
356.835 -898.6787 L
356.9878 -898.6689 L
356.895 -891.2539 362.646 -885.3545 370.8315 -885.0342 c
371.9058 -884.9941 373.001 -885.0498 374.0884 -885.1992 C
374.0884 -885.1992 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 127) -226.7261 -928.5967 -30.796 198.4721 -1 0 0 1 15590.5781 0 Bg
-170.4867 -101.6143 101.6143 -170.4867 423.3042 -928.5967 Bm
f0 BB
387.6978 -866.876 m
395.1699 -866.876 401.6265 -872.208 403.0464 -879.5547 c
403.2393 -880.5664 403.6836 -883.3506 403.6855 -887.5371 c
403.6855 -892.1035 403.123 -899.3105 400.4487 -907.7285 c
397.8599 -915.8955 393.7891 -923.6992 388.3291 -930.9766 C
391.8042 -930.585 395.1318 -930.3164 398.1772 -930.3164 c
399.5029 -930.3164 400.7417 -930.3672 401.8618 -930.4688 c
406.3745 -930.6055 411.418 -931.085 416.6885 -931.8857 c
421.6826 -932.6445 427.0229 -933.6973 432.5615 -935.0117 c
441.6245 -937.166 448.2905 -939.3262 449.02 -939.5635 c
457.7061 -942.4268 462.4341 -951.7998 459.5781 -960.4688 c
458.4927 -963.7549 456.4487 -966.5479 453.7646 -968.5449 C
456.4526 -970.1396 458.6279 -972.4629 460.0669 -975.3125 c
462.0576 -979.2598 462.3911 -983.748 461.0083 -987.9434 c
459.314 -993.0869 455.2832 -996.9551 450.3174 -998.5293 C
453.3564 -1002.7461 454.3311 -1008.2871 452.6436 -1013.4072 c
450.5884 -1019.6387 445.1147 -1023.9941 438.7061 -1024.6797 C
438.7783 -1025.0977 438.8364 -1025.5215 438.8784 -1025.9473 c
439.3062 -1030.3467 437.9951 -1034.6484 435.1875 -1038.0635 c
432.3784 -1041.4785 428.4092 -1043.5938 424.0088 -1044.0234 c
423.4067 -1044.0781 421.2476 -1044.2705 417.9644 -1044.4365 c
415.2842 -1044.7246 411.9438 -1044.873 408.1816 -1044.873 c
390.5591 -1044.873 368.4336 -1041.7627 357.5767 -1038.8457 C
320.7959 -1038.8457 L
320.9609 -941.5801 L
336.8271 -941.5801 L
339.4121 -937.415 342.167 -933.4482 345.0273 -929.7832 c
345.9238 -928.6279 346.981 -927.6055 348.166 -926.748 c
353.4736 -922.8887 357.999 -918.709 361.6206 -914.3271 c
364.5703 -910.751 366.9604 -906.9883 368.728 -903.1436 c
371.752 -896.5586 372.3911 -891.0205 372.394 -887.5342 c
372.394 -886.0703 372.2739 -885.2295 372.2671 -885.1924 C
371.9102 -882.749 L
372.0503 -882.7178 L
371.9653 -875.3066 377.2275 -868.6084 384.7178 -867.1592 c
385.7007 -866.9707 386.7026 -866.876 387.6978 -866.876 C
387.6978 -866.876 L
Bb
1 (Unnamed gradient 180) -265.2246 -955.8745 0 141.0068 -1 0 0 1 15590.5781 0 Bg
-141.0068 0 0 -181.9971 461.8027 -864.876 Xm
-7435.4067 0 0 -181.9971 7897.209 -864.876 Bc
-59.4608 0 0 -181.9971 461.8027 -864.876 Bm
-81.5461 0 0 -181.9971 402.3418 -864.876 Bm
-7435.4067 0 0 -181.9971 320.7959 -864.876 Bc
f0 BB
Uu300.9629 -1006.2725 m
300.9629 -1101.7656 L
286.8721 -1095.9404 277.2793 -1084.4297 277.2793 -1071.1787 C
277.2793 -975.7617 L
277.2793 -989.0117 286.8721 -1000.4727 300.9629 -1006.2725 C
Bb
1 (Unnamed gradient 3) 832.0439 -1038.7637 0 23.8172 -1 0 0 1 16527.2305 0 Bg
-23.8172 0 0 -130.0039 301.1865 -973.7617 Xm
-8531.8203 0 0 -130.0039 8833.0078 -973.7617 Bc
-23.8172 0 0 -130.0039 301.1865 -973.7617 Bm
-8531.8203 0 0 -130.0039 277.3691 -973.7617 Bc
f0 BB
1 Ap
320.9609 -941.5801 m
296.8354 -941.5801 277.2793 -957.3223 277.2793 -976.4541 c
277.2793 -1071.874 l
277.2793 -1052.7402 296.8354 -1038.8457 320.9609 -1038.8457 c
320.9609 -941.5801 l
Bb
1 (Unnamed gradient 172) 795.5166 -979.4619 0 37.3766 -1.1753 0 0 1.2133 17999.6309 -1715.098 Bg
-43.9287 0 0 -135.1471 321.376 -939.1533 Xm
-9984.3652 0 0 -135.1471 10305.7422 -939.1533 Bc
-25.9338 0 0 -135.1471 321.376 -939.1533 Bm
-17.9949 0 0 -135.1471 295.4424 -939.1533 Bm
-9984.3652 0 0 -135.1471 277.4473 -939.1533 Bc
f0 BB
320.9614 -945.0459 m
296.8359 -945.0459 277.2793 -959.5234 277.2793 -977.3809 c
277.2793 -1068.1465 l
277.2793 -1050.2891 296.8359 -1035.3789 320.9614 -1035.3789 c
320.9614 -945.0459 l
Bb
1 (Unnamed gradient 165) 795.5166 -979.3545 0 37.3766 -1.1753 0 0 1.2133 17999.6309 -1715.098 Bg
-43.9287 0 0 -127.9538 321.376 -942.6191 Xm
-9984.3662 0 0 -127.9538 10305.7422 -942.6191 Bc
-25.9338 0 0 -127.9538 321.376 -942.6191 Bm
-17.9949 0 0 -127.9538 295.4424 -942.6191 Bm
-9984.3662 0 0 -127.9538 277.4473 -942.6191 Bc
f0 BB
0 Ap
277.2793 -1071.4531 m
277.2793 -1052.5527 295.9487 -1038.8457 320.9609 -1038.8457 c
298.0825 -1038.8457 279.5381 -1052.5527 279.5381 -1071.4531 c
279.5381 -1084.3965 288.1328 -1095.5059 300.9629 -1101.292 C
300.9629 -1101.7656 L
286.8418 -1096.124 277.2793 -1084.7363 277.2793 -1071.4531 c
Bb
1 (Unnamed gradient 45) 833.8789 -1035.4824 -89.3263 64.5555 -1 0 0 1 16527.2305 0 Bg
-0.759 -64.551 47.5142 -0.5587 275.4829 -1035.2021 Xm
-100.3039 -8530.1807 47.5142 -0.5587 375.7866 7494.978 Bc
-0.759 -64.551 47.5142 -0.5587 275.4829 -1035.2021 Bm
-100.3039 -8530.1807 47.5142 -0.5587 274.7236 -1099.7529 Bc
f0 BB
U*u
0 g
387.8633 -870.3428 m
393.6782 -870.3428 398.7036 -874.4951 399.8086 -880.2139 c
399.9438 -880.918 400.3833 -883.54 400.3853 -887.5371 c
400.3853 -891.8555 399.8525 -898.6826 397.311 -906.6816 c
394.4644 -915.6631 389.7295 -924.1943 383.2402 -932.043 c
382.7598 -932.6279 382.2559 -933.208 381.749 -933.7881 C
380.2358 -935.5225 L
382.5171 -935.2178 L
388.1904 -934.46 393.6709 -933.7822 398.3428 -933.7822 c
399.561 -933.7822 400.6934 -933.8311 401.7085 -933.9229 c
406.2949 -934.0654 411.1968 -934.5322 416.3325 -935.3125 c
421.231 -936.0566 426.479 -937.0918 431.9287 -938.3848 c
440.8491 -940.5049 447.3896 -942.6211 448.1074 -942.8594 c
454.9731 -945.1201 458.709 -952.5322 456.4521 -959.3828 c
455.0547 -963.624 451.627 -966.8271 447.2847 -967.9492 C
444.3086 -968.7158 L
447.2495 -969.6172 L
448.5933 -970.0264 449.4072 -970.2891 449.541 -970.335 c
452.8691 -971.4316 455.563 -973.7529 457.1367 -976.874 c
458.7104 -979.9941 458.9751 -983.54 457.8813 -986.8604 c
456.1133 -992.2314 451.1191 -995.8398 445.459 -995.8398 c
445.293 -995.8398 445.1274 -995.8359 444.9609 -995.8301 C
441.9404 -995.7148 L
444.4404 -997.4131 L
449.248 -1000.6768 451.3345 -1006.8086 449.5161 -1012.3213 c
447.7451 -1017.6973 442.7529 -1021.3076 437.0957 -1021.3076 c
436.5698 -1021.3076 436.0386 -1021.2764 435.5093 -1021.2129 C
434.0166 -1021.0264 L
434.605 -1022.4121 L
435.1318 -1023.6465 435.4648 -1024.9492 435.5938 -1026.2832 c
435.9321 -1029.7617 434.8965 -1033.1641 432.6763 -1035.8633 c
430.4565 -1038.5605 427.3179 -1040.2324 423.8379 -1040.5723 c
423.2642 -1040.626 421.167 -1040.8154 417.9556 -1040.9756 c
415.2051 -1041.2666 411.9888 -1041.4072 408.3467 -1041.4072 c
391.3774 -1041.4072 368.8691 -1038.3086 358.4917 -1035.4102 C
358.3774 -1035.3789 L
320.6309 -1035.3789 L
320.6309 -945.0459 L
338.9355 -945.0459 L
339.1899 -944.6299 L
341.9224 -940.1172 344.8623 -935.8398 347.9253 -931.9141 c
348.624 -931.0146 349.4468 -930.2207 350.3672 -929.5508 c
355.9106 -925.5186 360.6523 -921.1377 364.458 -916.5322 c
367.5977 -912.7256 370.1509 -908.707 372.0425 -904.5918 c
375.3281 -897.4346 376.0215 -891.3691 376.0269 -887.541 c
376.0269 -886.6641 375.9888 -885.9746 375.9487 -885.4854 C
376.0024 -885.4736 L
375.8633 -884.6377 L
374.7144 -878.1299 379.0542 -871.8174 385.5386 -870.5645 c
386.3062 -870.417 387.0879 -870.3428 387.8633 -870.3428 C
387.8633 -870.3428 L
f1 D
432.8545 -993.3994 m
432.9941 -992.6982 433.4722 -992.0947 434.0996 -991.8174 c
438.3452 -989.9551 441.1763 -985.876 441.4893 -981.1797 c
441.5098 -980.8994 441.5186 -980.6123 441.5186 -980.3281 c
441.5156 -975.9756 439.2471 -971.8691 435.5977 -969.6172 c
435.2461 -969.4033 435.0151 -968.9902 435.0029 -968.5684 c
434.9995 -968.1084 435.208 -967.6982 435.5283 -967.4717 c
439 -965.0244 441.0713 -961.0293 441.0728 -956.7793 c
441.0728 -956.4102 441.0562 -956.0371 441.0249 -955.6621 c
440.6265 -951.0488 437.7798 -946.9561 433.5967 -944.9717 c
433.3042 -944.833 432.9927 -944.7656 432.6689 -944.7656 c
431.8374 -944.7656 431.0669 -945.249 430.7119 -946.0029 c
430.4639 -946.5254 430.4336 -947.1143 430.6304 -947.6582 c
430.8247 -948.2031 431.2183 -948.6406 431.7417 -948.8896 c
434.541 -950.2119 436.4429 -952.9531 436.7085 -956.0371 c
436.7305 -956.2861 436.7407 -956.5332 436.7407 -956.7793 c
436.7407 -959.6221 435.3545 -962.292 433.0347 -963.9277 c
431.5542 -964.9756 430.6709 -966.6963 430.6694 -968.5195 C
430.6709 -968.6953 L
430.7324 -970.5967 431.7236 -972.3174 433.3228 -973.3057 c
435.707 -974.7725 437.1875 -977.4609 437.186 -980.3281 c
437.186 -980.5146 437.1792 -980.7002 437.1675 -980.8916 c
436.9658 -983.9307 435.0791 -986.6641 432.3618 -987.8525 c
430.4302 -988.7012 429.0278 -990.457 428.6074 -992.5469 c
428.5205 -992.9756 428.478 -993.4131 428.478 -993.8428 c
428.4795 -995.5244 429.106 -997.123 430.2373 -998.3408 c
431.668 -999.8701 432.4863 -1001.9746 432.4849 -1004.1113 c
432.4849 -1004.6904 432.4258 -1005.2734 432.3086 -1005.8438 c
431.9922 -1007.3623 431.2764 -1008.7383 430.2666 -1009.8311 C
430.6768 -1008.3096 L
429.5874 -1010.4883 L
428.958 -1011.0254 428.2466 -1011.4717 427.4658 -1011.7959 c
425.8823 -1012.4668 424.7124 -1013.8105 424.2593 -1015.4863 c
424.1304 -1015.9639 424.0649 -1016.458 424.063 -1016.96 c
424.0649 -1018.1777 424.4399 -1019.3271 425.1494 -1020.2988 c
426.0327 -1021.5039 426.5181 -1023.002 426.5181 -1024.5234 c
426.5181 -1025.4834 426.3286 -1026.4199 425.9565 -1027.3018 c
424.9907 -1029.5938 422.8984 -1031.1826 420.4976 -1031.457 c
419.3115 -1031.5967 418.4551 -1032.668 418.5903 -1033.8564 c
418.7153 -1034.9502 419.6396 -1035.7754 420.7402 -1035.7754 C
420.9897 -1035.7607 L
424.9429 -1035.3047 428.376 -1032.71 429.9497 -1028.9873 c
430.5479 -1027.5693 430.8506 -1026.0674 430.8506 -1024.5234 c
430.8506 -1022.0889 430.0664 -1019.6826 428.6455 -1017.7402 c
428.4829 -1017.5205 428.3945 -1017.2471 428.396 -1016.9658 c
428.396 -1016.8389 428.4116 -1016.7256 428.4409 -1016.6152 C
428.4507 -1016.5752 L
428.5591 -1016.2246 428.8213 -1015.9258 429.1406 -1015.793 c
432.9312 -1014.2012 435.7007 -1010.8086 436.5498 -1006.7188 c
436.729 -1005.8652 436.8184 -1004.9834 436.8184 -1004.1113 c
436.8169 -1000.8447 435.6055 -997.749 433.4092 -995.3867 c
433.0269 -994.9814 432.8101 -994.418 432.8101 -993.8428 c
432.8101 -993.6943 432.8252 -993.5459 432.8545 -993.3955 C
432.8545 -993.3994 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 712) 462.1548 -968.8672 -176.1575 137.3616 1 0 0 1 0 0 Bg
-137.0528 -9.2051 -9.2051 137.0528 462.1548 -968.8672 Bm
f0 BB
*U
ULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
