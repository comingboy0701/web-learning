%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 10.0
%%For: (123) (123)
%%Title: (hands-pointers-8.eps)
%%CreationDate: 11/9/2009 12:37 AM
%%BoundingBox: 273 -1237 716 -766
%%HiResBoundingBox: 273.417 -1236.8623 715.8125 -766.8623
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([Registration])
%%+ 0.8902 0.349 0 (o1)
%%+ 1 0.5608 0 (o2)
%%+ 0.3412 0 0 (r1)
%%+ 0.5804 0 0 (r2)
%%+ 0.8902 0 0 (r3)
%%+ 0 0 0.1176 (w1)
%%+ 1 0.8902 0 (y2)
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 3 () 
%AI3_TemplateBox: 494.5 -1002.3623 494.5 -1002.3623
%AI3_TileBox: 349 -648 917 168
%AI3_DocumentPreview: Header
%AI5_ArtSize: 450 470
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -43 -628.8623 1.0741 1132 920 18 1 0 18 118 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:349 -648
%%AI3_PaperRect:-12 830 583 -12
%%AI3_Margin:12 -12 -12 12
%AI7_GridSettings: 150 15 150 15 0 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
16 Bn
%AI5_BeginGradient: (Unnamed gradient 115)
(Unnamed gradient 115) 0 3 Bd
[
<
484746454444434241403F3F3E3E3D3C3B3A39383837363635343332313130302F2E2E2D2C2B2B2A
292828282726262524242322222120201F1E1E1D1D1C1B1B1B1B1A19191818171716161515141313
131212111110100F0F0E0E0E0D0D0C0C0C0B0B0A0A0A090909090909080808070707070606060505
05050504040404030303030303020202020202010101010101010101010000000000000000000000
00000000
>
<
3332313130302F2E2E2D2C2C2B2B2B2A292928272726252525242423222222212020201F1E1E1E1D
1D1C1C1B1B1A1A19191918171717161615151514141313131212111111101010100F0F0E0E0E0D0D
0D0C0C0C0C0B0B0A0A0A0A0A09090808080808070707060606060606050505040404040404040303
03030303030303020202020202010101010101010101010101010101010000000000000000000000
00000000
>
<
2B2A2929282827262625252423232322222121201F1F1E1E1E1D1D1C1B1B1B1A1A19191918171717
161616151514141413131312121111111010100F0F0F0E0E0E0E0D0D0D0C0C0C0C0B0B0B0B0A0A0A
0A090909090808080807070707070606060606050505050505040404040404030303030303030202
02020202020202010101010101010101010101000000000000000000000000000000000000000000
00000000
>
<
09090908080807070707060606060605050505050504040404040404040403030303030303020202
02020202020202020202020202010101010101010101010101010101010101010101010000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000
>
<
B0B1B2B3B4B5B6B7B8B9BABBBCBCBDBEBFC0C1C2C3C4C5C5C6C7C8C9CACACBCCCDCECECFD0D1D1D2
D3D4D4D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E0E1E2E2E3E3E4E5E5E6E6E7E7E8E8E9E9EAEBEB
EBECECEDEDEEEEEFEFF0F0F0F1F1F2F2F2F3F3F4F4F4F5F5F5F6F6F6F7F7F7F8F8F8F8F9F9F9FAFA
FAFAFAFBFBFBFBFCFCFCFCFCFCFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFF
>
<
B0B1B2B3B4B5B6B7B8B9BABBBCBCBDBEBFC0C1C2C3C4C5C5C6C7C8C9CACACBCCCDCECECFD0D1D1D2
D3D4D4D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E0E1E2E2E3E3E4E5E5E6E6E7E7E8E8E9E9EAEBEB
EBECECEDEDEEEEEFEFF0F0F0F1F1F2F2F2F3F3F4F4F4F5F5F5F6F6F6F7F7F7F8F8F8F8F9F9F9FAFA
FAFAFAFBFBFBFBFCFCFCFCFCFCFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFF
>
<
B0B1B2B3B4B5B6B7B8B9BABBBCBCBDBEBFC0C1C2C3C4C5C5C6C7C8C9CACACBCCCDCECECFD0D1D1D2
D3D4D4D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E0E1E2E2E3E3E4E5E5E6E6E7E7E8E8E9E9EAEBEB
EBECECEDEDEEEEEFEFF0F0F0F1F1F2F2F2F3F3F4F4F4F5F5F5F6F6F6F7F7F7F8F8F8F8F9F9F9FAFA
FAFAFAFBFBFBFBFCFCFCFCFCFCFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFF
>
4 %_Br
<
4F4F4F4F4F4F4F4F4F4F4F4E4E4D4D4C4B4A48
>
<
38383838383838383838383737373736353433
>
<
30303030303030303030302F2F2E2E2E2D2C2B
>
<
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A09
>
<
A8A8A8A8A8A8A8A8A8A8A8A9A9AAAAABACAEB0
>
<
A8A8A8A8A8A8A8A8A8A8A8A9A9AAAAABACAEB0
>
<
A8A8A8A8A8A8A8A8A8A8A8A9A9AAAAABACAEB0
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 100 Bs
0.69 0 28.4314 38.5542 %_BS
%_0.69 0 28.4314 38.5542 Bs
0.66 0 87 0 %_BS
%_0.66 0 87 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 125)
(Unnamed gradient 125) 0 3 Bd
[
<
6C6B6A6A69676766656463636261605F5E5D5C5B5A5A59585756555453525251504F4E4D4C4B4A49
484746464544434241403F3E3D3C3C3B3A3937363534333231302F2E2E2D2C2B2A29282726252423
2221201F1E1D1D1C1B1A191817161514131211100F0E0D0C0B0A0908080706050403020100
>
<
4F4E4E4D4C4B4B4A4949484747464544444342424140403F3E3D3D3C3B3B3A393838373636353434
3332323130302F2E2E2D2C2C2B2A29292827262525242323222121201F1F1E1D1D1C1B1B1A191918
171716161514141312121110100F0E0E0D0C0C0B0A0A090808070606050404030302010100
>
<
3232313030302F2F2E2E2D2C2C2B2B2B2A2A2928282726272626252424232322232222212120201F
1F1F1F1E1E1D1D1C1C1B1C1B1B1A1A19191818191818171716161516151514141313121212111110
100F0F0E0E0E0D0D0C0C0C0B0B0A0A09090908080707060606050504040303020201010000
>
<
10100F0F0F0F0E0E0E0D0D0C0C0C0C0C0B0B0B0A0A0A0A0A09090909080808070707070707070606
06060606050505050504040404040404040303030303030303030202020202020202020202020101
01010101010101010101010101000000000000000000000000000000000000000000000000
>
<
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
DBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
DBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
98999A9B9C9C9D9E9FA0A1A2A3A4A4A5A6A7A8A9AAABACACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABB
BCBCBDBEBFC0C1C2C3C4C4C5C6C7C8C9CACBCCCCCDCECFD0D1D2D3D3D4D5D6D7D8D9DADBDBDCDDDE
DFE0E1E2E3E3E4E5E6E7E8E9EAEBEBECEDEEEFF0F1F2F3F3F4F5F6F7F8F9FAFBFBFCFDFEFF
>
4 %_Br
<
3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F404040404040404040404041414141
4141424242424243434343444444444545454646464747484847494949494B4A4B4B4C4D4D4E4E4F
5050515252535455545656585859595A5B5C5D5E5F606162636565666768696B6C
>
<
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2D2D2E2E2E2E
2E2E2E2E2E2E2E2F2F2F2F3030303031313031313132323333323333343435353535363737383738
39393A3A3A3B3C3C3C3D3E3F3F404041414243434445464747494A4A4B4C4D4E4F
>
<
25252525252525252525252525252525252525252525252525242424252525252525252525252525
26262525252525262626262525272726262727272727272727282727282827282828282829282A29
282A292A2A2A2A2A2C2B2C2B2C2C2C2D2C2D2E2E2E2E2F2F2F2F30313131313232
>
<
06060606060606060606060606060606060606060606060606060606070707070707070707070707
07070707070707070707070707080808080808080808080808080808080808090909090909090909
090A0A0A0A0A0A0B0B0B0B0B0C0C0C0C0C0C0D0D0D0D0D0D0E0E0F0F0F0F101010
>
<
BABABABABABABABABABABABABABABABABABABABABABABABABAB9B9B9B9B9B9B9B9B9B9B9B8B8B8B8
B8B8B7B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B1B1B1B0B0AFAFAEAEADADACABABAAAAA9
A8A8A7A6A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9998979695949291908F8E8D8B8A
>
<
BABABABABABABABABABABABABABABABABABABABABABABABABAB9B9B9B9B9B9B9B9B9B9B9B8B8B8B8
B8B8B7B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B1B1B1B0B0AFAFAEAEADADACABABAAAAA9
A8A8A7A6A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9998979695949291908F8E8D8B8A
>
<
BABABABABABABABABABABABABABABABABABABABABABABABABABABABAB9B9B9B9B9B9B9B9B9B9B9B9
B8B8B8B8B8B8B8B7B7B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B2B2B2B1B1B1B0B0AFAFAEAE
AEADADACACABABAAA9A9A8A8A7A6A6A5A5A4A3A2A2A1A0A09F9E9D9C9B9B9A9998
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 100 Bs
0.4235 0.3098 0.1961 0.0627 0.5412 0.5412 0.5961 2 50 81.3253 %_BS
%_0.4235 0.3098 0.2 0.0667 0 0 0.1176 (w1) 0.54 1 5 50 81.3253 Bs
0.73 0 79.2593 0 %_BS
%_0.73 0 79.2593 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 128)
(Unnamed gradient 128) 1 2 Bd
[
<
07070707070707070707060606050504040303020202020203040404050506060606070707070707
07070707060606060505040404040404040404050505060606060707070707070707070707070606
06060505
>
<
191A1B1C1D1E1F2021222324252728292A2B2D2E2F30313233343435363738393A3A3B3C3D3E3F40
414244454648494A4B4C4D4E4F505152545556565758595A5B5C5D5E5F606162636465666768696A
6B6D6E6F
>
<
EBECECECECECEDEDEDEDEEEEEEEEEEEEEFEFEFEFEFEFEFEFF0F0F0F1F1F1F2F2F2F3F3F4F4F4F4F5
F5F5F6F6F6F6F7F7F7F8F8F8F7F7F6F6F6F5F5F5F4F4F3F3F3F2F2F2F1F1F1F1F0F0F0F0EFEFEFEF
EFEFEEEE
>
<
01010101010101010101010100000000000000000000000000000000000001010101010101010101
01010101010101010100000000000000000000000000000000010101010101010101010101010100
00000000
>
1
<
E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBC
BBBAB8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493
9291908F
>
0
4 %_Br
[
0.0275 0.098 0.9216 0.0039 1 0.8902 0 2 50 0 %_BS
%_0.0275 0.098 0.9216 0.0039 1 0.8902 0 (y2) 0 1 5 50 0 Bs
0.0196 0.4353 0.9333 0 1 0.5608 0 2 50 100 %_BS
%_0.0196 0.4353 0.9333 0 1 0.5608 0 (o2) 0 1 5 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 136)
(Unnamed gradient 136) 0 2 Bd
[
<
9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFAFB0B1B2B3B4B5B6B7B8B8B9BABBBCBDBEBEBFC0C1C2
C2C3C4C5C5C6C7C8C8C9CACBCBCCCDCDCECFCFD0D1D1D2D2D3D3D4D5D5D6D6D6D7D7D8D8D8D9D9
>
0 %_Br
[
0.85 0 82.7957 100 %_BS
%_0.85 0 82.7957 100 Bs
0.62 0 40.3614 0 %_BS
%_0.62 0 40.3614 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 157)
(Unnamed gradient 157) 1 2 Bd
[
<
4B4A4A4A494948474746464545444443424242414140403F3E3E3D3D3C3C3C3B3B3A393939383837
37363635353433333332313131302F2E2E2E2D2C2C2C2B2B2A2A2929282828272726252525242423
232322222121212120201F1F1E1E1D1D1D1D1D1C1C1B1B1B1A1A1A1919191919191919
>
0.9294
<
F5F5F4F4F3F3F2F2F1F0F0EFEFEFEEEEEDEDEDEDECECECECEBEBEBEBEBEBEBEBEAEAEAEAEAEBEBEB
EBEBEBEBEBECECECECEDEDEDEDEEEEEEEEEFEFEFEFF0F0F0F0F1F1F1F1F2F2F2F2F3F3F3F3F4F4F4
F4F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6
>
<
2D2D2C2B2A2928282726252524232222212020201F1E1E1D1C1C1B1A1A1A19181817161616151414
131313121211111110100F0F0F0F0E0E0E0D0D0C0C0C0C0C0B0B0A0A0A0A0A090909090908080807
0707070706060606060606060505050505050505050505050404040404040404040404
>
<
9495969798999A9B9C9D9E9FA0A1A2A3A4A5A5A6A7A8A9AAABACADAEAFAFB0B1B2B3B4B5B5B6B7B8
B9BABABBBCBDBEBEBFC0C1C2C2C3C4C5C5C6C7C8C8C9CACACBCCCDCDCECFCFD0D0D1D2D2D3D4D4D5
D5D6D7D7D8D8D9D9DADADBDBDCDCDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E3
>
0
0
4 %_Br
[
0.2941 0.9294 0.9608 0.1765 0.5804 0 0 2 37.9518 0 %_BS
%_0.2941 0.9294 0.9608 0.1765 0.5804 0 0 (r2) 0 1 5 37.9518 0 Bs
0.098 0.9294 0.9647 0.0157 0.8902 0 0 2 50 100 %_BS
%_0.098 0.9294 0.9647 0.0157 0.8902 0 0 (r3) 0 1 5 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 165)
(Unnamed gradient 165) 0 3 Bd
[
<
4B4B4B4C4C4D4D4E4E4E4F4F5050515152525253535454555555565657575858585859595A5A5B5B
5B5C5C5D5D5D5E5E5F5F5F606061616162626363636464646565
>
<
EDECECECECECECECECECECECEDEDEDEDEDEDEDEEEEEEEEEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F3F3
F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F0F0EFEEEEEDEDEDECECEB
>
<
F5F6F6F6F7F7F8F8F8F8F7F7F7F7F6F6F6F6F5F5F5F4F4F3F3F3F2F1F1F0F0EFEEEEEEEDEDECECEB
EBEBEAEAE9E9E9E9E8E8E8E8E8E8E8E8E9EAEAEBECEDEDEEEFF0
>
<
2D2E2E2F3031323333343435363738393A3A3B3C3D3E3F40414242444546474849494A4B4C4D4E4F
51525354555658595A5B5C5D5F60616264656667696A6B6C6E6F
>
<
9493939291908F8E8E8D8C8B8A89888786868584838281807F7E7D7C7B7A79787777767574737271
706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857
>
0
0
4 %_Br
<
1919191A1A1B1C1C1D1D1E1E1F20212121222323242425252627282828292A2A2B2C2C2C2D2E2E2F
30313132333333343535363737383839393A3B3B3C3C3C3D3D3E3E3F404041414242434444454546
4647474849494A4A4A4B
>
0.9294
<
F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F4F4F4F3F3F3F2F2F2F1F1F1F0F0F0EFEFEFEFEEEE
EEEDEDEDECECECECEBEBEBEBEBEBEBEAEAEAEAEBEBEBEBEBEBEBEBECECECECEDEDEDEEEEEFEFEFF0
F0F1F2F2F3F3F4F4F5F5
>
<
04040404040505050505050506060606060707070808080909090A0A0A0A0B0B0C0C0C0C0D0D0E0E
0F0F0F1010101111121213131414151616171818191A1A1A1B1C1C1D1E1E1F202021222223242525
26272828292A2B2C2D2D
>
<
E3E3E2E1E1E0DFDFDEDDDCDCDBDAD9D8D8D7D6D5D4D4D3D2D1D0CFCFCECDCCCBCAC9C8C8C7C6C5C4
C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
9D9C9B9A999897969594
>
0
0
4 %_Br
[
0.3961 0.9216 0.9412 0.4353 0.3412 0 0 2 52.4096 100 %_BS
%_0.3961 0.9216 0.9412 0.4353 0.3412 0 0 (r1) 0 1 5 52.4096 100 Bs
0.2941 0.9294 0.9608 0.1765 0.5804 0 0 2 52.4096 59.0361 %_BS
%_0.2941 0.9294 0.9608 0.1765 0.5804 0 0 (r2) 0 1 5 52.4096 59.0361 Bs
0.098 0.9294 0.9647 0.0157 0.8902 0 0 2 54.2169 0 %_BS
%_0.098 0.9294 0.9647 0.0157 0.8902 0 0 (r3) 0 1 5 54.2169 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 172)
(Unnamed gradient 172) 0 3 Bd
[
<
6C6B6A69686766656563636261605F5E5D5C5B5A59585856565554535251504F4E4D4C4B4A494949
484746454443424141403F
>
<
4F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A3A39383837363535343333
33323131302F2E2E2E2D2C
>
<
32323231313031302F302F2F2E2E2E2D2E2D2C2C2C2C2B2C2B2A2B2A2A292A292829282828282727
2726272627262526252525
>
<
101010100F0F0F0F0E0E0E0D0D0D0D0D0D0C0C0C0C0C0B0B0B0B0B0A0A0A0A090909090909080808
0808080808070707070706
>
<
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B0
B1B2B3B4B5B6B7B8B8B9BA
>
<
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B0
B1B2B3B4B5B6B7B8B8B9BA
>
<
9899999A9B9C9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A8A9AAAAABACADADAEAFAFB0B1B1B2B3B3
B4B5B5B6B6B7B8B8B9B9BA
>
4 %_Br
<
000000010101020202030304040405050606070708080808090A0A0B0B0C0C0D0E0E0F1010111112
13131415151617171819191A1B1C1C1D1E1D1E1F202021222323242526262728292A2A2B2C2D2E2E
2F2F3031323233343536373738393A3B3C3C3C3D3E3F4041424343444546464748494A4B4B4C4D4E
4F505151525354555657585858595A5B5C5D5E5F60616163636465666767696A6A6B6C
>
<
00000001010101010102020303030303040404040505060606070708080808090A0A0A0B0B0C0C0C
0D0D0E0E0E0F101010111112121313141414151616161717181819191A1A1B1B1C1D1D1D1E1F1F1F
20212122232323242525262627272829292A2A2B2C2C2D2D2E2F2F2F303132323334343535363637
3838393A3B3B3C3D3D3E3F3F3F40414142434444454646474849494A4B4B4C4D4E4E4F
>
<
00000000000001010101010202020202030303030404040405050505060606060707070808080809
0909090A0A0A0B0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F1010101111111212121312131414141415
15151616161717171718181819191A191A1A1B1B1B1C1C1D1C1D1E1E1E1E1F1F201F202021222122
22232324232424252626262728282929292A2A2B2B2C2D2C2D2E2E2F2F303030313232
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000001010101010101010101010101010101010101010101020202020202020202020202
02020303030303030303030303040404040404040404050505050505050606060606060707070707
07070808080809090909090A0A0A0B0B0B0B0B0C0C0C0C0C0D0D0E0E0E0F0F0F0F1010
>
<
FFFFFFFEFEFEFDFDFDFCFCFBFBFBFAFAF9F9F8F8F7F7F6F6F5F4F4F3F3F2F2F1F0F0EFEEEEEDEDEC
EBEBEAE9E9E8E7E7E6E5E5E4E3E2E2E1E0E0DFDEDDDDDCDBDADAD9D8D7D7D6D5D4D3D3D2D1D0CFCF
CECDCCCBCACAC9C8C7C6C5C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B8B7B6B5B4B3B2B1B0AFAFAEADAC
ABAAA9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
>
<
FFFFFFFEFEFEFDFDFDFCFCFBFBFBFAFAF9F9F8F8F7F7F6F6F5F4F4F3F3F2F2F1F0F0EFEEEEEDEDEC
EBEBEAE9E9E8E7E7E6E5E5E4E3E2E2E1E0E0DFDEDDDDDCDBDADAD9D8D7D7D6D5D4D3D3D2D1D0CFCF
CECDCCCBCACAC9C8C7C6C5C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B8B7B6B5B4B3B2B1B0AFAFAEADAC
ABAAA9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
>
<
FFFFFFFEFEFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F0F0EFEFEE
EEEDEDECEBEBEAEAE9E8E8E7E6E6E5E5E4E3E3E2E1E1E0DFDFDEDDDDDCDBDBDAD9D9D8D7D6D6D5D4
D4D3D2D1D1D0CFCFCECDCCCCCBCAC9C9C8C7C6C6C5C4C3C2C2C1C0BFBFBEBDBCBBBBBAB9B8B7B7B6
B5B4B3B2B2B1B0AFAEADADACABAAA9A8A8A7A6A5A4A3A2A2A1A09F9E9D9C9C9B9A9998
>
4 %_Br
[
0.73 0 50 100 %_BS
%_0.73 0 50 100 Bs
0.4235 0.3098 0.1961 0.0627 0.5412 0.5412 0.5961 2 47.7612 59.0361 %_BS
%_0.4235 0.3098 0.2 0.0667 0 0 0.1176 (w1) 0.54 1 5 47.7612 59.0361 Bs
0 0 0 0 1 1 1 2 59.1837 0 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 59.1837 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 194)
(Unnamed gradient 194) 0 3 Bd
[
<
00010203040506070809090A0B0C0D0E0F101112131415161718191A1B1B1C1D1E1F202223242526
272828292A2B2C2D2E2F3030313233343536373838393A3B3C3D3E3F3F
>
<
0001010203030404050606070808090A0A0B0C0C0D0E0E0F1010111112131314151516171819191A
1B1B1C1D1D1E1E1F202021222223242425252627272829292A2B2B2C2C
>
<
00000101020203030404050506060707080809090A0A0B0B0C0C0D0D0E0E0F0F1010111213131414
1515161617171819191A1A1B1B1C1D1D1E1E1F1F202121222223232425
>
<
00000000000000000000000000000000000000000000000101010101010101010101010202020202
0202020202020303030303030404040404040405050505050506060606
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBA
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBA
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBA
>
4 %_Br
<
11100F0E0D0C0B0A09080706050403020100
>
<
0C0B0A0A0908080706050404030302010100
>
<
080807070606050504040303020201010000
>
0
<
EDEEEFF0F1F2F3F4F5F7F8F9FAFBFCFDFEFF
>
<
EDEEEFF0F1F2F3F4F5F7F8F9FAFBFCFDFEFF
>
<
EFF0F1F2F3F4F5F6F7F7F8F9FAFBFCFDFEFF
>
4 %_Br
[
0.73 0 50 100 %_BS
%_0.73 0 50 100 Bs
0 0 0 0 1 1 1 2 50 57.8313 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 57.8313 Bs
0.0667 0.0471 0.0314 0 0.9294 0.9294 0.9373 2 50 0 %_BS
%_0.0667 0.0471 0.0314 0 0 0 0.1176 (w1) 0.93 1 5 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 214)
(Unnamed gradient 214) 0 3 Bd
[
<
6565656565656464646464646464636363636363626262626161616161616060605F5F5F5F5F5E5E
5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5959595858585857575756565655555555545453535352
525251515050504F4F4E4E4E4D4D4C4C4C4B4B4A4A4A4A4949484747474646454544444443424241
414040403F3E3E3D3D3C3C3C3B3B3A39393838373736353535343333323131302F2E2E2D2C2C2B2B
2A2A29282827262525242323222121201F1E1D1D1C1B1A1919
>
<
EBEBEBECECECECECECEDEDEDEDEDEDEDEEEEEEEEEFEFF0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2
F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEEEEEEEEEEED
EDEDEDEDEDEDEDECECECECECECECECECECECEDEDEDEDEDEDEDEEEEEEEEEFEFEFF0F0F1F1F1F1F2F2
F3F3F3F4F4F5F5F6F6F7F7F7F8F9F9FAFAFBFCFCFDFCFCFCFCFBFAF9F8F8F7F6F5F5F4F3F3F2F2F2
F1F1F0F0EFEFEEEEEEEDEDEDECECECECECECECECECECEDEDED
>
<
F0F0F0EFEFEFEEEEEEEDEDEDEDEDECECEBEBEAEAEAEAE9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9
E9E9E9E9E9EAEAEAEBEBEBEBEBECECEDEDEDEEEEEEEFEFF0F0F1F1F1F2F2F3F3F3F3F4F4F5F5F5F5
F6F6F6F6F7F7F7F7F7F8F8F8F8F7F7F6F6F6F5F5F4F4F4F3F3F2F2F1F1F0F0EFEFEFEEEEEEEDEDED
ECECECECECEBEBEBEBEBEBEBEBEAEAEAEAEBEBEBEBEBEBEBEBECECECEDEDEDEEEEEEEFEFEFF0F0F0
F0F1F1F1F2F2F3F3F3F4F4F5F5F6F6F6F6F6F6F6F6F6F6F6F6
>
<
6F6F6F6E6E6E6C6C6C6B6B6B6A6A696967676666656564646262616160605F5F5D5C5C5B5B5A5959
58585655555453535252514F4F4E4D4C4C4B4A4A49484847464545444242424140403F3E3D3D3C3B
3A3A393837363635343433333231302F2F2E2D2D2C2B2B2A29282827272625252423222222212020
1F1E1E1E1D1C1C1B1A1A191918181716161514141313121212111110100F0F0F0E0E0D0D0C0C0C0C
0B0B0A0A0A0909090808070707060606060505050505040404
>
<
5757575858585959595A5A5A5B5B5C5C5D5D5E5E5F5F606061616262636364646566666767686969
6A6A6B6C6C6D6E6E6F6F70717172737474757676777878797A7B7B7C7D7D7E7F8080818283838485
86868788898A8A8B8C8D8E8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A2A2A3A4A5A6
A7A8A8A9AAABACADAEAFB0B0B1B2B3B4B5B6B7B8B9BABBBBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACA
CBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3
>
0
0
4 %_Br
<
4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4C4C4C4C4C4C4C4C4C4D4D4D4D4D4D4D4E4E4E4E4E
4E4F4F4F4F4F4F505050505151515151525252525353535354545455555555555656565757575858
5858585959595A5A5B5B5B5B5C5C5C5D5D5D5E5E5E5F5F5F60606161616162626363636464646565
>
<
EDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEFEFEFF0F0F0F0F0F1F1F1F1F1
F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F1F1F1F1F1F1F0F0EFEEEEEDEDEDECECEB
>
<
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8
F8F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F3F3F3F3F3F2F2F1F1F1F0F0F0
EFEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E9E9E8E8E8E8E8E8E8E8E8E9EAEAEBECEDEDEEEFF0
>
<
2D2D2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F30303030313131313232323333333334
343434343535353636373738383839393A3A3B3B3C3C3D3D3E3F3F40404142424242444545464747
4849494A4B4B4C4D4E4E4F515253535455565858595A5B5C5D5F6061616264656667696A6B6C6E6F
>
<
94949494949494949494949393939393939393929292929291919191909090908F8F8F8E8E8E8E8D
8D8C8C8C8B8B8B8A8A89898888888787868685858484838382818180807F7E7E7D7D7C7B7B7A7979
7877777675757473727271706F6E6E6D6C6B6A6A69686766656463626261605F5E5D5C5B5A595857
>
0
0
4 %_Br
[
0.098 0.9294 0.9647 0.0157 0.8902 0 0 2 50 100 %_BS
%_0.098 0.9294 0.9647 0.0157 0.8902 0 0 (r3) 0 1 5 50 100 Bs
0.3961 0.9216 0.9412 0.4353 0.3412 0 0 2 59.0909 69.2771 %_BS
%_0.3961 0.9216 0.9412 0.4353 0.3412 0 0 (r1) 0 1 5 59.0909 69.2771 Bs
0.2941 0.9294 0.9608 0.1765 0.5804 0 0 2 70.2703 0 %_BS
%_0.2941 0.9294 0.9608 0.1765 0.5804 0 0 (r2) 0 1 5 70.2703 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 226)
(Unnamed gradient 226) 0 2 Bd
[
<
00010203040506070808090A0B0C0D0E0F1011131415161718191A1B1C1D1D1E1F2021222324
>
<
0001010203030404050606070808090A0A0B0C0D0E0E0F101011121213141415161617171819
>
<
0000010102020303040405050606060707080809090A0A0B0B0C0C0C0D0D0E0E0E0F0F101011
>
<
0000000000000000000000000000000000000000000000010101010101010101010101010101
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9
>
<
FFFEFDFCFBFAF9F9F8F7F6F5F4F3F2F1F0EFEEEEEDECEBEAE9E8E7E6E5E4E3E3E2E1E0DFDEDD
>
4 %_Br
[
0.1412 0.098 0.0667 0.0039 0.851 0.851 0.8667 2 50 100 %_BS
%_0.1412 0.098 0.0667 0.0039 0 0 0.1176 (w1) 0.85 1 5 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 231)
(Unnamed gradient 231) 1 3 Bd
[
<
05050505050505050505050505050505060606060606060606060606060606060606060606060606
06060606070707070808080808080808090909090909090909090909090909090909090909090909
0909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C
0D0D0D0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0F0F0F0F0F0F0F10101010101010101010101011
11111111111211111111111212121212131313131313141414141415151515151515151515151616
1616161617171717171818181818191919
>
<
6F6F6F6F6F6F7070707070717171717271717172727274747474757575767677767677777878787A
7A7A7A7A7B7B7C7C7D7D7E7E7F7F808081818282838384848585868687878889898A8A8B8B8C8D8D
8E8E8F909091919293939495959697979899999A9B9B9C9D9D9E9F9FA0A1A2A2A3A4A4A5A6A7A7A8
A9A9AAACADADAEAFB0B1B1B2B3B4B4B5B6B7B8B8B9BABBBCBCBDBEBFC0C1C1C2C3C4C5C6C6C7C8C9
CACBCCCCCDCDCED0D1D2D3D3D4D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E7E7E8E8E9
E9EAEAEAEBEBEBECECECECECECEDEDEDED
>
<
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECEC
ECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECEDEDEDEDEDEDEDEEEEEEEEEEEFEFEFEFEFEFF0F0F0F0F0F0F1
F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F5F5
F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6
>
<
00000000000000000000000000000000010101010101010101010101010101000101010101010100
00000000010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101020202020202020202020202020202020202020202020202020202
02020202020201010101020202020202020202020202030303030303030303030303030303030304
0404040304040404040404040404040404
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFD
FDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9
F9F9F9F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F4
F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F0F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEEED
EDEDEDEDEDECECECECECECEBEBEBEBEBEAEAEAEAEAEAE9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6
E6E6E6E6E5E5E5E5E5E4E4E4E4E4E3E3E3
>
<
8F8F8F8F8F8F8E8E8E8E8E8D8D8D8D8C8C8C8C8B8B8B8A8A8A8A8989898888878787868685858584
848383838282818180807F7F7E7E7D7D7C7C7B7B7A7A797978787777767675747473737272717070
6F6F6E6D6D6C6C6B6A6A6968686766666564646362626160605F5E5E5D5C5B5B5A59595857565655
545453525151504F4E4D4D4C4B4A4A4948474646454443424241403F3E3D3D3C3B3A393838373635
3433323231302F2E2D2C2B2B2A29282726252423222221201F1E1D1C1B1A19181716151514131211
100F0E0D0C0B0A09080706050403020100
>
0
4 %_Br
<
1919191919191919191A1A1A1A1B1B1B1C1C1D1D1D1D1D1E1E1E1F1F202021212121222223232324
2425252526262727282828292A2A2A2B2B2C2C2C2D2E2E2E2F303031313232333334343535363737
3738383939393A3B3B3C3C3D3D3D3E3E3F404041414242424344444545464647474849494A4A4A4B
>
0.9294
<
F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F4F4
F4F3F3F3F3F3F2F2F2F1F1F1F1F1F0F0F0F0EFEFEFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEBEBEB
EBEBEBEAEAEAEAEAEBEBEBEBEBEBEBEBECECECECEDEDEDEDEEEEEFEFEFF0F0F1F2F2F3F3F4F4F5F5
>
<
04040404040404040404040404050505050505050505050505050606060606060606070707070708
08080809090909090A0A0A0A0B0B0B0C0C0C0C0C0D0D0D0E0E0F0F0F0F1010101111111212131313
141415161616171818191A1A1B1B1C1C1D1E1E1F2020212122222324252526272828292A2B2C2D2D
>
<
E3E3E3E3E3E2E2E2E2E1E1E1E1E0E0E0DFDFDEDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D4
D4D3D3D2D1D1D0D0CFCECECDCCCCCBCACAC9C8C8C7C6C6C5C4C3C3C2C1C0C0BFBEBDBDBCBBBAB9B9
B8B7B6B5B4B4B3B2B1B0AFAEADADACABAAA9A8A7A6A5A4A4A3A2A1A09F9E9D9C9B9A999897969594
>
0
0
4 %_Br
[
0.0196 0.4353 0.9333 0 1 0.5608 0 2 63.253 0 %_BS
%_0.0196 0.4353 0.9333 0 1 0.5608 0 (o2) 0 1 5 63.253 0 Bs
0.098 0.9294 0.9647 0.0157 0.8902 0 0 2 63.253 47.5904 %_BS
%_0.098 0.9294 0.9647 0.0157 0.8902 0 0 (r3) 0 1 5 63.253 47.5904 Bs
0.2941 0.9294 0.9608 0.1765 0.5804 0 0 2 50 100 %_BS
%_0.2941 0.9294 0.9608 0.1765 0.5804 0 0 (r2) 0 1 5 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 44)
(Unnamed gradient 44) 1 2 Bd
[
<
1B1B1B1B1B1B1B1B1B1B1B1B1C1C1B1B1B1B1B1B1B1B1C1C1C1C1C1C1D1D1D1D1D1D1E1E1E1E1E1F
1F1F1F202020202121212222222223232324242425252526262627272728282929292A2A2B2B2B2C
2C2C2C2D2D2D2E2E2F2F3030313132323333343435353635373737383839393A3A3B3C3C3D3D3E3F
3F40414142414343434445454647474849494A4B4C4C4C4E4D4E4F50505152535354555655565758
59595A5B5C5D5E5E5E60616162626364656667676768696A6B6C6D6E6F7071707172737475757678
78797A7B7C7D7E7F
>
<
12121212121212121212121213131313131313131313131313131313141414141414151515151515
15151516161616171717171717171818181919191919191A1A1A1B1B1B1B1B1C1C1C1D1D1D1D1D1E
1E1F1F1F1F1F202021212121222223232323242424242525262727272728282929292A2A2B2B2B2C
2C2D2D2D2E2E2F2F2F30313131323233333334353635363737383839393A3A3B3B3C3C3D3D3E3E3F
40404041424344434445464647474848494A4B4B4B4C4D4D4E4F5050515253525354555556575759
595A5B5B5C5D5E5F
>
<
0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F101010
10101010101010111111111111111112121212121212131313131313131414141414141515151615
15161616161617171717171818191818191919191A1A191A1A1A1A1B1B1B1B1C1C1C1C1D1D1D1D1E
1E1E1E1F1E1F1F1F2020202021202121212222222223232324232424242526252627262728272829
28292A292A2B2A2B2C2B2C2D2D2D2E2F2E2F2F303031313232323334343434363636363738383938
393A3A3B3B3B3C3D
>
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010102020202020202020202020202020202020202020202020202
02020202020203030303030303030303030303030303030404040404040404040404040404050505
05050505050505060606060606060706070707070707070708080808080809090909090A0A0A0A0A
0A0B0B0B0B0B0B0C0C0C0C0C0D0D0D0E0E0E0E0F0F0F101010101111111112121312131414151515
1516171717171818
>
<
E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E0E0E0E0E0E0DFDFDFDFDFDE
DEDEDEDDDDDDDDDCDCDCDBDBDBDBDADADAD9D9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D2D2D2D1
D1D0D0CFCFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C4C4C3C3C2C2C1C1C0BFBFBEBEBDBC
BCBBBABAB9B9B8B7B7B6B5B5B4B3B3B2B1B1B0AFAEAEADACACABAAA9A9A8A7A6A6A5A4A3A3A2A1A0
9F9F9E9D9C9B9A9A99989796959594939291908F8F8E8D8C8B8A89888786858584838281807F7E7D
7C7B7A7978777675
>
<
E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E0E0E0E0E0E0DFDFDFDFDFDE
DEDEDEDDDDDDDDDCDCDCDBDBDBDBDADADAD9D9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D2D2D2D1
D1D0D0CFCFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C4C4C3C3C2C2C1C1C0BFBFBEBEBDBC
BCBBBABAB9B9B8B7B7B6B5B5B4B3B3B2B1B1B0AFAEAEADACACABAAA9A9A8A7A6A6A5A4A3A3A2A1A0
9F9F9E9D9C9B9A9A99989796959594939291908F8F8E8D8C8B8A89888786858584838281807F7E7D
7C7B7A7978777675
>
<
E3E3E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E0E0E0E0E0E0DFDFDF
DFDFDEDEDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D6D6D6D5D5D5D4D4
D4D3D3D2D2D2D1D1D1D0D0CFCFCECECECDCDCCCCCBCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2
C2C1C1C0C0BFBFBEBDBDBCBCBBBBBABAB9B8B8B7B7B6B5B5B4B4B3B2B2B1B0B0AFAEAEADACACABAA
AAA9A8A8A7A6A6A5A4A4A3A2A1A1A09F9F9E9D9C9C9B9A999998979695959493929291908F8E8D8D
8C8B8A8989888786
>
4 %_Br
[
0.89 0 69.2771 0 %_BS
%_0.89 0 69.2771 0 Bs
0.498 0.3725 0.2392 0.0941 0.4588 0.4588 0.5255 2 50 100 %_BS
%_0.4941 0.3686 0.2431 0.098 0 0 0.1176 (w1) 0.46 1 5 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 45)
(Unnamed gradient 45) 0 2 Bd
[
<
7C7C7C7B7B7B7A7A797979787877787676757575757474737372717270716F6F6F6E6E6D6C6C6B6A
6A69686967676766656564636363616161605F5F5E5D5C5C5B5A595A585857575655545353525151
50504F4E4D4C4C4B4A494847474646454443434241403F3E3E3D3C3C3A3A39383837363534333231
30302F2F2E2D2C2B2A29282726262524232221201F1E1E1D1C1B1A19181717161514131211100F0E
0D0C0B0A0908080706050403020100
>
<
5C5C5C5B5B5B5B5B595A5A595958595757575756565555555554535452535251515050504F4F4E4D
4E4D4C4C4B4B4B4A49494948484746464645444444434242424140403F3F3E3E3D3D3C3B3B3B3A39
383838373636363534343332323231302F2F2F2E2D2D2C2C2C2B2A29292827272726252524232322
212121201F1F1E1D1D1C1B1B1A1A19191817171616151414131212111010100F0E0E0D0C0C0B0A0A
090808070606050404030302010100
>
<
3C3C3C3B3B3B3A3A3B3A3A3A393A3839393838383837373636363635363435343434343332323232
31313130302F2F2F2E2E2E2E2D2C2D2C2B2B2B2B2A2A2A2928292827282726262625262524232423
23232222212221202120201F1F1F1E1E1E1E1D1D1D1C1C1B1B1B1A1A1A1A19191918181717171716
1616151514141414131312121211111010100F0F0E0E0D0D0D0C0C0C0B0B0B0A0A09090808080707
060605050504040303020201010000
>
<
18181817171717171716161615161515151515141414141313121312121212111111111110101010
0F100F0F0F0E0E0E0E0E0D0D0D0C0C0C0C0C0C0C0B0B0B0B0A0B0A0A0A0A09090909090908080808
07070707070707070706060606060605050505050505040404040404040404030303030303030303
03030202020202020202020202020101010101010101010101010101010101000000000000000000
000000000000000000000000000000
>
<
7878787979797A7A7B7B7B7C7C7D7D7E7E7F7F80808181828283848485858687878888898A8A8B8C
8C8D8E8E8F9090919292939494959697979899999A9B9C9C9D9E9F9FA0A1A2A2A3A4A5A6A6A7A8A9
AAAAABACADAEAEAFB0B1B2B3B3B4B5B6B7B8B8B9BABBBCBDBDBEBFC0C1C2C3C4C4C5C6C7C8C9CACB
CCCCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E7E8E9EAEBECEDEEEFF0
F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
7878787979797A7A7B7B7B7C7C7D7D7E7E7F7F80808181828283848485858687878888898A8A8B8C
8C8D8E8E8F9090919292939494959697979899999A9B9C9C9D9E9F9FA0A1A2A2A3A4A5A6A6A7A8A9
AAAAABACADAEAEAFB0B1B2B3B3B4B5B6B7B8B8B9BABBBCBDBDBEBFC0C1C2C3C4C4C5C6C7C8C9CACB
CCCCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E7E8E9EAEBECEDEEEFF0
F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
8888888989898A8A8A8B8B8B8C8C8D8D8D8E8E8F8F90909191929293939494959596969798989999
9A9A9B9C9C9D9D9E9F9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A9A9AAABABACADADAEAFAFB0B1B2B2B3
B4B4B5B6B7B7B8B9B9BABBBCBCBDBEBFBFC0C1C1C2C3C4C5C5C6C7C8C8C9CACBCBCCCDCECFCFD0D1
D2D2D3D4D5D6D6D7D8D9DADBDBDCDDDEDFDFE0E1E2E3E4E4E5E6E7E8E9E9EAEBECEDEEEFEFF0F1F2
F3F4F5F5F6F7F8F9FAFBFBFCFDFEFF
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 100 Bs
0.4863 0.3608 0.2353 0.0941 0.4706 0.4706 0.5333 2 58.4337 0 %_BS
%_0.4863 0.3608 0.2353 0.0941 0 0 0.1176 (w1) 0.47 1 5 58.4337 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 52)
(Unnamed gradient 52) 1 2 Bd
[
<
0707070808080807080807070707070606050606060505060606060607080808090A0A0A0A0B0B0B
0B0B0C0C0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0E0E0D0D0D0E0E0E0E0E0F0F0F0F0F101010
10101111111111121212121212121212121313131312131313131414141414151515151516161616
16171717171717171717171818181818181818
>
<
191A1B1B1C1D1E1F2021222425262728292B2B2C2D2F3030313233343536373738393A3B3C3D3D3E
3F404142434446464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566
676868696A6C6D6D6E6F7071727374757777787A7B7C7D7E7F808182838485868788898A8A8B8C8E
8F8F9091939494969798999A9B9C9D9E9FA0A1
>
<
EBECECECEDEDEDEDEEEEEEEFEFEFF0F0F0F0F1F1F1F1F1F1F1F2F2F2F3F3F3F3F3F4F4F4F4F4F4F5
F5F5F5F5F6F6F6F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEEEDEDEDEDEDECEC
ECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBECECECECECEC
ECEDEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0
>
<
01010101010101010101010101010101000000000000000101010101010101010101010101010101
01010101010101010101010102020202020202020202020202010101010101010101010101020202
02020202020202020202020203030302020202020202020202020202020202030303030303030303
03030303030304040403030403030303040404
>
<
FFFFFFFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F8F8F8F8F7F7F7
F7F7F6F6F6F6F6F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0EFEFEF
EFEFEEEEEEEEEEEDEDEDEDEDECECECECECEBEBEBEBEBEAEAEAEAE9E9E9E9E9E8E8E8E8E8E7E7E7E7
E7E6E6E6E6E6E5E5E5E5E5E4E4E4E4E4E3E3E3
>
<
E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBC
BBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594
939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C
6B6A696867666564636261605F5E5D5C5B5A59
>
0
4 %_Br
[
0.0275 0.098 0.9216 0.0039 1 0.8902 0 2 50 0 %_BS
%_0.0275 0.098 0.9216 0.0039 1 0.8902 0 (y2) 0 1 5 50 0 Bs
0.0941 0.6314 0.9412 0.0157 0.8902 0.349 0 2 50 100 %_BS
%_0.0941 0.6314 0.9412 0.0157 0.8902 0.349 0 (o1) 0 1 5 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 685)
(Unnamed gradient 685) 1 2 Bd
[
<
383838383838383838383838383A39393939393939393A3A3A3A3A3A3A3B3B3B3B3B3C3C3C3C3C3D
3D3D3D3E3E3E3E3F3F3F3F4040404141404042424142424243434344444545454646464747484849
49494A494B4A4B4B4B4C4C4D4D4E4E4F4F50505151525252525354545555565657575859595A595B
5B5B5C5C5D5E5E5F6060616262636363646565666767676968696A6C6B6C6D6E6E6F707170717273
7374757577767878797A7A7B7B7D7E7E807F8081828383858485868788898A8B8C8D8D8F8E8F9091
9293949496979898999B9C9D
>
<
272727272727272727272727272828282828282828282929292929292929292929292A2A2A2A2A2B
2B2B2B2B2B2B2B2C2C2C2C2D2D2D2D2D2D2D2E2E2E2F2F2F2F2F2F30303131313131313232333333
3333343435353535353636373737373838393939393A3A3B3B3B3C3C3D3D3D3D3E3E3F403F404041
424242424344444545454647464748484949494A4B4B4B4C4C4D4D4F4E4F50515051525352535455
54555657585758595A5B5A5B5C5D5E5E605F60616162636463646566676769696A6B6C6D6C6D6E6F
70717172737475767678797A
>
<
20202020202020202020202020202121212121212121202021212121212121212222212121212222
22222222222222222323232324242323242424242524242425252525252525262626272626272726
272727282728282829282829292A2A292A2A2B2A2A2B2B2B2B2C2C2D2C2C2D2D2D2D2E2D2F2E2F2F
2F2F30303130313131313232333233343334343534353635373637363738383839393A393A3B3A3B
3C3C3C3D3C3E3D3E3E3E3F404040414141424342434344444545464646474647484849494A4A4B4B
4B4C4D4D4D4E4E4F504F5051
>
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050506060606060606060606060606060607070707070707070707070707080808080808080808
080808080809090909090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0C0C0C0C0C0C0D0D0D0D
0D0D0E0E0E0E0E0E0E0E0F0F0F0F1010101111111112121213121313131413141514151515161616
17171818181919191A191A1B1C1B1C1C1C1D1E1D1E1F201F20212222222323232425252526272828
28292A2B2A2B2C2D2E2D2E2F
>
<
C2C2C2C2C2C2C2C2C2C2C2C2C2C1C1C1C1C1C1C1C1C1C0C0C0C0C0C0C0BFBFBFBFBFBEBEBEBEBEBD
BDBDBDBCBCBCBCBBBBBBBBBABABAB9B9B9B9B8B8B8B7B7B7B6B6B6B5B5B4B4B4B3B3B3B2B2B1B1B0
B0B0AFAFAEAEADADADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A3A3A2A2A1A1A0A09F9E9E9D9D9C
9B9B9A9A9998989796969594949392929190908F8E8E8D8C8C8B8A89898887868685848383828180
807F7E7D7C7C7B7A7978787776757473727271706F6E6D6C6C6B6A69686766656463626161605F5E
5D5C5B5A5958575655545352
>
<
C2C2C2C2C2C2C2C2C2C2C2C2C2C1C1C1C1C1C1C1C1C1C0C0C0C0C0C0C0BFBFBFBFBFBEBEBEBEBEBD
BDBDBDBCBCBCBCBBBBBBBBBABABAB9B9B9B9B8B8B8B7B7B7B6B6B6B5B5B4B4B4B3B3B3B2B2B1B1B0
B0B0AFAFAEAEADADADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A3A3A2A2A1A1A0A09F9E9E9D9D9C
9B9B9A9A9998989796969594949392929190908F8E8E8D8C8C8B8A89898887868685848383828180
807F7E7D7C7C7B7A7978787776757473727271706F6E6D6C6C6B6A69686766656463626161605F5E
5D5C5B5A5958575655545352
>
<
C2C2C2C2C2C2C2C2C2C2C2C2C2C2C1C1C1C1C1C1C1C1C1C1C0C0C0C0C0C0C0C0BFBFBFBFBFBFBEBE
BEBEBEBDBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B7B7B7B7B6B6B6B5B5B5B4B4B4
B3B3B3B2B2B1B1B1B0B0B0AFAFAEAEAEADADACACACABABAAAAA9A9A8A8A8A7A7A6A6A5A5A4A4A3A3
A2A2A1A1A0A09F9F9E9E9D9D9C9C9B9A9A99999898979696959594949392929190908F8F8E8D8D8C
8B8B8A8989888887868685848383828181807F7F7E7D7C7C7B7A7979787777767574737372717070
6F6E6D6C6C6B6A6968686766
>
4 %_Br
[
0.76 0 69.2771 0 %_BS
%_0.76 0 69.2771 0 Bs
0.6157 0.4784 0.3176 0.1843 0.3216 0.3216 0.4 2 50 100 %_BS
%_0.6157 0.4784 0.3176 0.1843 0 0 0.1176 (w1) 0.32 1 5 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 727)
(Unnamed gradient 727) 0 3 Bd
[
<
2D2C2B2A29282827262524232221201F1E1D1C1B1B1A1918161514131211100F0E0D0C0B0A090908
0706050403020100
>
<
1F1E1E1D1D1C1B1B1A1919181717161515141313121111100F0E0E0D0C0C0B0A0A09080807060605
0404030302010100
>
<
19181717161615151414131312111110100F0F0E0E0D0D0C0B0B0A0A090908080707060605050404
0303020201010000
>
<
03030202020202020202020202010101010101010101010101000000000000000000000000000000
0000000000000000
>
<
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7
F8F9FAFBFCFDFEFF
>
<
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7
F8F9FAFBFCFDFEFF
>
<
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7
F8F9FAFBFCFDFEFF
>
4 %_Br
<
00010203040506070809090A0B0C0D0E0F1011121314151618191A1B1B1C1D1E1F20212223242526
272828292A2B2C2D
>
<
0001010203030404050606070808090A0A0B0C0C0D0E0E0F1011111213131415151617171819191A
1B1B1C1D1D1E1E1F
>
<
00000101020203030404050506060707080809090A0A0B0B0C0D0D0E0E0F0F101011111213131414
1515161617171819
>
<
00000000000000000000000000000000000000000000000101010101010101010101010202020202
0202020202020303
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CF
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 0 0 0.1176 (w1) 1 1 5 50 100 Bs
0.81 0 50 53.012 %_BS
%_0.81 0 50 53.012 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
1 Bn
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 1 ([Registration]) 0 Xs
([Registration]) Pc
0.9412 0.9255 0.4353 0.5961 0 0 0.1176 (w1) 0 1 Xk
(w1) Pc
0.0275 0.098 0.9216 0.0039 1 0.8902 0 (y2) 0 1 Xk
(y2) Pc
0.0941 0.6314 0.9412 0.0157 0.8902 0.349 0 (o1) 0 1 Xk
(o1) Pc
0.0196 0.4353 0.9333 0 1 0.5608 0 (o2) 0 1 Xk
(o2) Pc
0.3961 0.9216 0.9412 0.4353 0.3412 0 0 (r1) 0 1 Xk
(r1) Pc
0.2941 0.9294 0.9608 0.1765 0.5804 0 0 (r2) 0 1 Xk
(r2) Pc
0.098 0.9294 0.9647 0.0157 0.8902 0 0 (r3) 0 1 Xk
(r3) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(back) Ln
0 A
1 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
300.2314 -1236.8623 m
300.2314 -766.8623 L
689.1328 -766.8623 L
689.1328 -1236.8623 L
300.2314 -1236.8623 L
Bb
1 (Unnamed gradient 226) 307.7349 -1177.9346 43.2838 546.8882 1 0 0 1 0 0 Bg
398.1164 374.9534 420.1297 -446.0834 97.6689 -954.8916 Xm
5862.7515 5521.6484 420.1297 -446.0834 -5765.0825 -6476.54 Bc
398.1164 374.9534 420.1297 -446.0834 97.6689 -954.8916 Bm
5862.7515 5521.6484 420.1297 -446.0834 495.7852 -579.938 Bc
f0 BB
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
uu0 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
418.4907 -986.1133 m
411.5522 -985.124 406.0464 -979.5088 405.4468 -972.3525 c
404.9849 -966.8496 407.5073 -961.6299 411.6689 -958.3457 C
409.4482 -958.4854 407.9253 -958.5576 407.3584 -958.584 C
407.0786 -958.5928 L
398.4795 -958.8359 391.3887 -952.0537 391.2686 -943.4756 c
391.2031 -938.832 393.1445 -934.4756 396.5063 -931.3984 C
392.4644 -931.1709 388.7754 -929.4463 386.0532 -926.5098 c
383.2148 -923.4453 381.7686 -919.4326 381.9756 -915.21 c
382.2769 -909.0283 386.0786 -903.7568 391.4141 -901.3232 C
383.9634 -899.7813 378.6211 -893.0117 379.0933 -885.1699 c
379.4063 -880.0059 382.3574 -874.9316 386.228 -872.7891 c
394.4487 -868.251 414.8086 -863.623 423.4663 -861.8877 c
437.7603 -859.0303 450.0093 -857.1475 459.9165 -856.2715 C
458.7466 -854.9922 457.6851 -853.8086 457.0669 -853.0342 c
450.3398 -844.6387 445.5498 -835.2197 443.2163 -825.8096 c
442.0459 -821.1094 441.4536 -816.4111 441.4536 -811.8477 c
441.4575 -807.042 442.1152 -803.7998 442.3984 -802.6309 c
444.2231 -795.1582 450.9141 -789.9463 458.666 -789.9463 c
459.9893 -789.9463 461.3193 -790.1025 462.6138 -790.4102 c
471.1982 -792.4531 476.5513 -800.7676 475.0645 -809.7578 c
474.9888 -810.2266 474.9487 -810.8896 474.9487 -811.7266 c
474.9521 -813.9443 475.334 -817.5205 477.126 -821.9512 c
479.4917 -827.7461 483.4243 -833.1963 489.1484 -838.5996 c
494.1641 -843.3174 500.4551 -847.8037 507.8516 -851.9346 c
509.1953 -852.6846 510.3301 -853.5352 511.4238 -854.6182 c
516.915 -860.0586 521.9922 -865.9619 526.5283 -872.1855 C
689.1182 -869.8975 L
689.1182 -974.0273 L
455.3301 -981.6064 455.1992 -981.6035 V
448.4497 -981.4893 L
444.7285 -982.7188 440.7559 -983.7148 436.3433 -984.5293 c
429.1797 -985.8389 423.4443 -986.1807 421.3105 -986.2666 C
418.4907 -986.1133 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 44) 443.0659 -836.8506 -30.796 308.7904 1 0 0 1 0 0 Bg
265.2496 -158.0954 -158.0954 -265.2496 443.0659 -836.8506 Bm
f0 BB
396.1606 -970.666 m
389.2222 -969.4414 383.7163 -963.6191 383.1167 -956.4121 c
382.6548 -950.8711 385.1772 -945.7021 389.3389 -942.5205 C
387.1182 -942.5977 385.5952 -942.627 385.0283 -942.6367 C
384.7485 -942.6377 L
376.1494 -942.6377 369.0586 -935.6406 368.9385 -927.042 c
368.873 -922.3867 370.8145 -918.0693 374.1763 -915.0645 C
370.1343 -914.7402 366.4453 -912.9258 363.7231 -909.9219 c
360.8848 -906.791 359.4385 -902.7441 359.6455 -898.5234 c
359.9468 -892.3447 363.7485 -887.1436 369.084 -884.8066 C
361.6333 -883.124 356.291 -876.2568 356.7632 -868.4229 c
357.0762 -863.2637 360.0273 -858.2314 363.8979 -856.1416 c
372.1187 -851.7051 392.4785 -847.3184 401.1362 -845.6777 c
415.4302 -842.9668 427.6792 -841.2061 437.5864 -840.4316 C
436.4165 -839.1221 435.355 -837.9102 434.7368 -837.1191 c
428.0098 -828.5498 423.2197 -818.9805 420.8862 -809.4502 c
419.7158 -804.6934 419.1235 -799.9424 419.1235 -795.3311 c
419.1274 -790.4746 419.7852 -787.2002 420.0684 -786.0195 c
421.8931 -778.4688 428.584 -773.1992 436.3359 -773.1992 c
437.6592 -773.1992 438.9893 -773.3574 440.2837 -773.6699 c
448.8682 -775.7451 454.2212 -784.1992 452.7344 -793.333 c
452.6587 -793.8096 452.6187 -794.4834 452.6187 -795.334 c
452.6221 -797.5879 453.0039 -801.2236 454.7959 -805.7363 c
457.1616 -811.6436 461.0942 -817.2158 466.8184 -822.7627 c
471.834 -827.6152 478.125 -832.2529 485.521 -836.5488 c
486.8657 -837.3301 488 -838.2129 489.0938 -839.332 c
494.585 -844.9629 499.6621 -851.0723 504.1982 -857.5137 C
666.7881 -857.5137 L
666.7881 -967.3262 L
433 -967.3301 432.8691 -967.3232 V
426.1196 -966.9863 L
422.3984 -968.1074 418.4258 -968.9834 414.0132 -969.6602 c
406.8496 -970.7441 401.1143 -970.8984 398.9805 -970.9141 C
396.1606 -970.666 L
Bb
1 (Unnamed gradient 194) 356.7632 -872.0566 0 310.0249 1 0 0 1 0 0 Bg
310.0249 0 0 -201.7148 356.7632 -771.1992 Xm
8057.2354 0 0 -201.7148 -7700.4722 -771.1992 Bc
179.2914 0 0 -201.7148 356.7632 -771.1992 Bm
130.7335 0 0 -201.7148 536.0547 -771.1992 Bm
8057.2354 0 0 -201.7148 666.7881 -771.1992 Bc
f0 BB
Uu689.1328 -930.2207 m
689.1328 -1037.7988 L
705.0078 -1031.2363 715.8125 -1018.2695 715.8125 -1003.3418 C
715.8125 -895.8506 L
715.8125 -910.7783 705.0078 -923.6895 689.1328 -930.2207 C
Bb
1 (Unnamed gradient 115) 688.8799 -966.8247 0 26.8302 1 0 0 1 0 0 Bg
26.8302 0 0 -145.9482 688.8799 -893.8506 Xm
8388.627 0 0 -145.9482 -7699.7476 -893.8506 Bc
10.3442 0 0 -145.9482 688.8799 -893.8506 Bm
16.486 0 0 -145.9482 699.2236 -893.8506 Bm
8388.627 0 0 -145.9482 715.71 -893.8506 Bc
f0 BB
1 Ap
666.6035 -857.5137 m
693.7813 -857.5137 715.8125 -875.0771 715.8125 -896.6309 c
715.8125 -1004.124 l
715.8125 -982.5684 693.7813 -967.3262 666.6035 -967.3262 c
666.6035 -857.5137 l
Bb
1 (Unnamed gradient 125) 671.5313 -916.8989 0 42.1053 1.1753 0 0 1.2133 -1472.3988 -1715.098 Bg
49.4864 0 0 -151.4635 666.1357 -855.0869 Xm
9838.5928 0 0 -151.4635 -9172.457 -855.0869 Bc
40.2449 0 0 -151.4635 666.1357 -855.0869 Bm
9.2414 0 0 -151.4635 706.3809 -855.0869 Bm
9838.5928 0 0 -151.4635 715.6221 -855.0869 Bc
f0 BB
666.6035 -861.249 m
693.7813 -861.249 715.8125 -877.5576 715.8125 -897.6738 c
715.8125 -999.9248 l
715.8125 -979.8086 693.7813 -963.6045 666.6035 -963.6045 c
666.6035 -861.249 l
Bb
1 (Unnamed gradient 214) 671.5313 -916.708 0 42.1053 1.1753 0 0 1.2133 -1472.3988 -1715.098 Bg
49.4864 0 0 -143.529 666.1357 -858.8228 Xm
9838.5928 0 0 -143.529 -9172.457 -858.8228 Bc
34.2827 0 0 -143.529 666.1357 -858.8228 Bm
15.2036 0 0 -143.529 700.418 -858.8228 Bm
9838.5928 0 0 -143.529 715.6221 -858.8228 Bc
f0 BB
0 Ap
715.8125 -1003.6504 m
715.8125 -982.3584 694.6934 -967.3262 666.6035 -967.3262 c
692.3779 -967.3262 713.2686 -982.3584 713.2686 -1003.6504 c
713.2686 -1018.2324 703.5869 -1030.7461 689.1328 -1037.2646 C
689.1328 -1037.7988 L
705.041 -1031.4424 715.8125 -1018.6152 715.8125 -1003.6504 c
Bb
1 (Unnamed gradient 45) 690.9502 -963.5571 -89.3263 72.3062 1 0 0 1 0 0 Bg
0.8502 -72.3012 -53.0252 -0.6235 717.5869 -963.2441 Xm
98.6189 -8386.8877 -53.0252 -0.6235 618.9678 7423.6436 Bc
0.8502 -72.3012 -53.0252 -0.6235 717.5869 -963.2441 Bm
98.6189 -8386.8877 -53.0252 -0.6235 718.4375 -1035.5449 Bc
f0 BB
U*u
0 g
398.8789 -967.1846 m
392.6313 -967.1846 387.3433 -962.3154 386.8237 -956.1035 c
386.2822 -949.5898 391.1304 -943.7461 397.6357 -943.0781 C
398.9663 -942.999 L
399.25 -942.9971 L
399.5513 -942.9902 400.0093 -942.9795 400.6021 -942.9541 c
401.6958 -942.9082 403.4326 -942.8115 405.4941 -942.6064 c
406.1479 -942.543 406.8457 -942.4629 407.5581 -942.374 c
412.479 -941.9551 416.9058 -941.4629 421.0605 -940.8721 c
428.0137 -939.873 433.4761 -938.7363 438.2446 -937.291 c
438.7275 -937.1455 439.2148 -936.9678 439.7524 -936.7402 C
440.7632 -937.4609 441.6392 -938.3125 442.3662 -939.2754 c
446.3818 -944.6006 445.3208 -952.1992 439.9966 -956.2158 c
436.2417 -959.0283 431.9316 -961.1807 426.4287 -962.9902 c
422.4927 -964.2695 418.248 -965.2471 413.4531 -965.9814 c
407.2275 -966.9219 402.1318 -967.1367 399.6748 -967.1826 C
398.8789 -967.1846 L
f0 g
437.041 -963.6084 m
439.0513 -962.5215 440.9775 -961.293 442.7949 -959.9316 c
446.3711 -957.2373 448.6787 -953.3115 449.2969 -948.8818 c
449.9185 -944.4512 448.7734 -940.0459 446.0806 -936.4736 c
445.4736 -935.6699 444.7754 -934.9092 443.998 -934.2041 C
449.2134 -929.9248 451.3755 -922.917 449.3877 -916.3916 c
448.1665 -912.3809 445.4478 -908.9648 441.835 -906.8438 C
446.3564 -902.416 448.0103 -895.8506 446.0366 -889.75 c
444.5317 -885.0957 441.0972 -881.3779 436.6523 -879.4893 C
442.7329 -875.4131 445.5098 -867.8047 443.293 -860.6523 c
441.1045 -853.6016 434.6792 -848.8623 427.3008 -848.8623 c
425.6255 -848.8623 423.9541 -849.1162 422.3364 -849.6182 c
420.4941 -850.1924 418.0225 -850.748 415.3755 -851.1875 c
411.5127 -851.833 406.7407 -852.333 401.5835 -852.6348 c
397.2725 -852.8857 392.606 -853.0127 387.7031 -853.0127 c
386.8672 -853.0127 386.0313 -853.0088 385.1958 -853.001 C
390.3491 -851.6748 395.7646 -850.4824 401.8301 -849.335 c
416.7681 -846.5039 429.4238 -844.7197 439.4585 -844.0244 C
440.3701 -844.8721 441.145 -845.6836 441.8716 -846.5635 c
443.8345 -848.9404 446.0513 -851.792 447.6064 -854.9082 c
449.2314 -858.166 449.9873 -861.3027 449.9912 -864.7744 c
449.9912 -867.0869 449.6494 -869.458 448.9443 -872.0205 c
447.7886 -876.2471 447.1997 -880.4941 447.1997 -884.6465 c
447.1924 -896.1279 451.6045 -906.6641 459.9565 -915.1182 c
468.3374 -923.6055 480.0073 -928.4746 491.9756 -928.4746 c
496.2139 -928.4746 500.4258 -927.873 504.4971 -926.6875 c
505.7285 -926.3281 506.4375 -925.0342 506.0771 -923.8037 c
505.79 -922.8174 504.874 -922.1289 503.8457 -922.1289 c
503.625 -922.1289 503.4063 -922.1592 503.1953 -922.2207 c
499.5498 -923.2822 495.7734 -923.8223 491.9756 -923.8223 c
481.2437 -923.8223 470.7798 -919.457 463.2671 -911.8506 c
455.8057 -904.2793 451.8589 -894.874 451.8516 -884.6465 c
451.8516 -880.9043 452.3862 -877.0732 453.4326 -873.2529 c
454.2358 -870.3164 454.6431 -867.4639 454.6431 -864.7744 c
454.6465 -860.6074 453.7056 -856.6992 451.7681 -852.8291 c
450.0127 -849.3164 447.6973 -846.3174 445.4585 -843.6035 c
445.1899 -843.2754 444.3354 -842.3389 443.271 -841.166 c
441.3447 -839.0527 438.71 -836.1563 437.6665 -834.8242 c
431.2627 -826.6641 426.7124 -817.584 424.5029 -808.5654 c
423.4019 -804.0947 422.8452 -799.6426 422.8452 -795.334 c
422.8486 -790.875 423.438 -787.9414 423.689 -786.8887 c
425.106 -781.0176 430.3066 -776.9199 436.3359 -776.9199 c
437.3652 -776.9199 438.4009 -777.0439 439.4106 -777.2871 c
446.0806 -778.8994 450.2305 -785.5439 449.064 -792.7354 c
448.9512 -793.4189 448.897 -794.2695 448.897 -795.334 c
448.9043 -799.0361 449.7471 -803.1084 451.3394 -807.1094 c
453.9053 -813.5205 458.1211 -819.5156 464.2266 -825.4346 c
469.4604 -830.4971 475.9951 -835.3203 483.6494 -839.7666 c
484.7104 -840.3828 485.5684 -841.0518 486.4336 -841.9346 c
492.1211 -847.7607 497.3477 -854.1191 501.9736 -860.834 C
502.2539 -861.2354 L
666.7881 -861.249 L
666.7881 -963.6045 L
648.6338 -963.6045 445.8477 -963.6133 437.041 -963.6084 C
f0 g
384.7485 -938.916 m
378.1738 -938.916 372.751 -933.5664 372.6602 -926.9902 c
372.5947 -922.4502 375.0298 -918.3291 379.0313 -916.1768 C
381.1138 -916.2295 383.8398 -916.2773 387.0166 -916.2773 c
395.2881 -916.2734 403.0186 -915.9678 409.9932 -915.3682 c
414.6597 -914.9668 418.833 -914.4512 422.7471 -913.791 c
427.4863 -912.9893 431.5791 -912.0225 435.2534 -910.8389 c
435.9878 -910.6006 436.7256 -910.2969 437.4961 -909.9131 C
441.0684 -911.2148 443.8345 -914.1191 444.939 -917.7451 c
445.8799 -920.8379 445.5601 -924.1094 444.0415 -926.96 c
442.5225 -929.8125 439.9854 -931.9014 436.8926 -932.8428 c
432.3564 -934.2158 427.1162 -935.3037 420.4033 -936.2656 c
415.4048 -936.9775 409.7749 -937.5684 403.6729 -938.0215 c
394.0894 -938.7334 386.4097 -938.8906 384.9668 -938.9141 C
384.7485 -938.916 L
f0 g
387.0166 -911.625 m
380.1909 -911.625 375.3862 -911.4043 374.8594 -911.3809 c
368.1865 -911.0547 363.0366 -905.3662 363.3599 -898.7061 c
363.6763 -892.2578 368.9785 -887.2031 375.4336 -887.2031 c
375.6333 -887.2031 375.833 -887.209 376.0332 -887.2178 C
378.0215 -887.2969 378.9917 -887.3232 v
380.9248 -887.3779 383.709 -887.4346 387.0166 -887.4346 c
392.3047 -887.4346 397.3706 -887.2969 402.0771 -887.0215 c
408.0122 -886.6826 413.5005 -886.1035 417.9531 -885.3516 c
421.21 -884.8027 424.1245 -884.127 426.3818 -883.3945 c
427.5918 -883.0039 428.8462 -882.8047 430.1035 -882.8047 c
435.3657 -882.8047 439.9893 -886.1689 441.6099 -891.1816 c
443.6631 -897.5273 440.1704 -904.3604 433.8252 -906.4111 c
430.3687 -907.5254 426.4907 -908.4414 421.9731 -909.2051 c
418.1934 -909.8398 414.1436 -910.3418 409.5938 -910.7344 c
402.7393 -911.3232 395.1426 -911.623 387.0166 -911.625 C
387.0166 -911.625 L
f387.6484 -881.8555 m
379.2388 -881.8555 373.0166 -881.5215 371.8535 -881.4521 c
365.166 -881.0488 360.0742 -875.3027 360.4775 -868.6455 c
360.8628 -862.2734 366.1616 -857.2813 372.5405 -857.2813 c
372.7876 -857.2813 373.0347 -857.29 373.2817 -857.3047 C
374.2739 -857.3555 L
374.9536 -857.3906 375.9678 -857.4365 377.2471 -857.4814 c
379.584 -857.5674 383.2871 -857.665 387.6484 -857.665 c
392.6934 -857.665 397.4546 -857.5342 401.8555 -857.2754 c
407.1729 -856.9668 412.1152 -856.4492 416.1392 -855.7744 c
419.0293 -855.2969 421.646 -854.7031 423.7139 -854.0586 c
424.8843 -853.6973 426.0913 -853.5146 427.3008 -853.5146 c
432.6294 -853.5146 437.2705 -856.9375 438.8477 -862.0293 c
439.8071 -865.1152 439.5054 -868.3906 437.9971 -871.25 c
436.4927 -874.1064 433.9629 -876.209 430.8774 -877.167 c
427.6973 -878.1504 424.1792 -878.959 420.1196 -879.6387 c
416.6587 -880.2129 412.9805 -880.667 408.8809 -881.0234 c
402.4844 -881.5752 395.3428 -881.8555 387.6484 -881.8555 C
387.6484 -881.8555 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 231) 434.2983 -807.2451 -21.3275 236.5961 1 0 0 1 0 0 Bg
220.3932 -86.0496 -86.0496 -220.3932 434.2983 -807.2451 Bm
f0 BB
*U
Uuu*u
0.2941 0.9294 0.9608 0.1765 0.5804 0 0 (r2) 0 1 Xk
523.8721 -949.9238 m
523.8721 -880.3477 L
541.0967 -880.3477 L
545.5508 -880.3477 549.6289 -881.4658 553.2148 -883.6709 c
556.3467 -885.5801 558.6113 -888.5635 559.9434 -892.5381 c
560.6621 -894.6377 561.0273 -897.1553 561.0273 -900.0156 c
561.0273 -904.7754 559.6445 -908.6592 556.918 -911.5615 c
556.2109 -912.3184 555.4199 -912.9727 554.5537 -913.5166 C
556.3936 -914.5557 558.0107 -916.1201 559.377 -918.1865 c
560.5537 -920.0137 561.4307 -922.376 561.9893 -925.2158 c
562.2686 -926.6807 562.4102 -928.3203 562.4102 -930.0938 c
562.4102 -934.5234 561.4961 -938.3496 559.6934 -941.4668 c
558.2754 -943.9375 556.2412 -945.9434 553.6504 -947.4248 c
550.7598 -949.083 547.834 -949.9238 544.9551 -949.9238 C
523.8721 -949.9238 L
f1 D
541.0967 -937.9648 m
544.3906 -937.9648 546.6133 -936.4082 547.8896 -933.2051 c
548.3438 -932.0918 548.5732 -930.792 548.5732 -929.3369 c
548.5732 -925.8105 547.877 -923.2383 546.5039 -921.6934 c
545.291 -920.3027 543.5225 -919.6299 541.0967 -919.6299 C
537.4785 -919.6299 L
537.4785 -937.9648 L
541.0967 -937.9648 L
f541.0967 -907.9951 m
544.0703 -907.9951 546.0078 -906.6748 547.0186 -903.957 c
547.4004 -902.917 547.5938 -901.5898 547.5938 -900.0156 c
547.5938 -897.4795 546.9512 -895.5586 545.6826 -894.3057 c
544.5068 -893.1416 543.0078 -892.5762 541.0967 -892.5762 C
537.4785 -892.5762 L
537.4785 -907.9951 L
541.0967 -907.9951 L
f*U
0 D
564.0371 -949.9238 m
564.0371 -880.3477 L
596.875 -880.3477 L
596.875 -892.4688 L
576.7793 -892.4688 L
576.7793 -909.0752 L
591.4619 -909.0752 L
591.4619 -921.1963 L
576.7793 -921.1963 L
576.7793 -937.8027 L
596.875 -937.8027 L
596.875 -949.9238 L
564.0371 -949.9238 L
f617.2705 -950.7334 m
612.833 -950.7334 609.0879 -949.6768 606.1396 -947.5928 c
603.6826 -945.8926 601.71 -943.5469 600.2871 -940.626 c
598.8779 -937.7402 598.043 -934.3984 597.8066 -930.6934 C
597.7471 -929.7686 L
609.916 -928.9434 L
610.0186 -929.8232 L
610.4531 -933.5381 611.4873 -936.2383 613.0938 -937.8496 c
614.166 -938.9512 615.333 -939.4824 616.668 -939.4824 C
616.8857 -939.4775 L
618.9766 -939.415 620.5967 -938.4717 621.8525 -936.5938 c
622.4775 -935.6963 622.7891 -934.3662 622.7891 -932.625 c
622.7891 -930.0801 621.5039 -927.4814 618.9678 -924.8994 C
609.3408 -916.3486 L
605.6719 -913.0166 603.0352 -909.9775 601.4951 -907.3076 c
599.8086 -904.249 598.9561 -900.8975 598.9561 -897.3311 c
598.9561 -890.8809 601.3105 -885.917 605.9609 -882.5762 c
608.8418 -880.5576 612.4307 -879.5371 616.6377 -879.5371 c
620.6631 -879.5371 624.1729 -880.3975 627.0693 -882.0947 c
629.3486 -883.4316 631.2139 -885.3242 632.6133 -887.7207 c
633.999 -890.0957 634.8447 -892.8594 635.126 -895.9346 C
635.2041 -896.792 L
622.9619 -898.8848 L
622.8525 -897.9043 L
622.5684 -895.3408 621.793 -893.334 620.5498 -891.9404 c
619.7285 -891.0244 618.543 -890.5781 616.9258 -890.5781 c
615.2578 -890.5781 614.0283 -891.248 613.166 -892.625 c
612.418 -893.8037 612.041 -895.3076 612.041 -897.0996 c
612.041 -899.9482 613.3955 -902.9199 616.0674 -905.9326 c
617.1006 -907.1104 618.6836 -908.5215 620.7744 -910.1318 c
623.3213 -912.1221 625.0332 -913.5449 625.8682 -914.3633 c
628.5889 -916.915 630.7354 -919.4902 632.2344 -922.0029 c
632.9395 -923.1797 633.5195 -924.2871 633.958 -925.2939 c
635.0391 -927.8096 635.6064 -930.1074 635.6475 -932.127 c
635.7275 -937.0459 634.3418 -941.3174 631.5273 -944.8232 c
629.6553 -947.2285 626.9766 -948.9541 623.5752 -949.9404 c
621.7725 -950.4658 619.6514 -950.7334 617.2705 -950.7334 C
617.2705 -950.7334 L
f648.2471 -949.9238 m
648.2471 -892.5225 L
636.6738 -892.5225 L
636.6738 -880.4014 L
672.5068 -880.4014 L
672.5068 -892.5225 L
660.9912 -892.5225 L
660.9912 -949.9238 L
648.2471 -949.9238 L
fUu*u
0 g
522.3828 -947.6914 m
522.3828 -878.8594 L
539.2354 -878.8594 L
543.6211 -878.8594 547.6318 -879.959 551.1592 -882.1279 c
554.2148 -883.9902 556.4258 -886.9072 557.7295 -890.7959 c
558.4355 -892.8584 558.7949 -895.3359 558.7949 -898.1553 c
558.7949 -902.8174 557.4463 -906.6152 554.7852 -909.4463 c
553.9502 -910.3408 552.9922 -911.0879 551.9297 -911.6748 C
553.96 -912.6719 555.7305 -914.2998 557.2061 -916.5313 c
558.3545 -918.3154 559.2129 -920.6338 559.7637 -923.4277 c
560.0381 -924.8672 560.1768 -926.4824 560.1768 -928.2334 c
560.1768 -932.5967 559.2793 -936.3604 557.5107 -939.4199 c
556.125 -941.834 554.1367 -943.793 551.6035 -945.2412 c
548.7695 -946.8672 545.9063 -947.6914 543.0938 -947.6914 C
522.3828 -947.6914 L
f1 D
0 g
539.2354 -936.4766 m
542.7002 -936.4766 545.0352 -934.8438 546.375 -931.4824 c
546.8457 -930.3271 547.084 -928.9805 547.084 -927.4766 c
547.084 -923.8564 546.3564 -921.2012 544.9219 -919.5859 c
543.6523 -918.1318 541.7402 -917.3975 539.2354 -917.3975 C
535.2451 -917.3975 L
535.2451 -936.4766 L
539.2354 -936.4766 L
f539.2354 -906.5068 m
542.3848 -906.5068 544.4355 -905.1064 545.5068 -902.2266 c
545.9043 -901.1436 546.1055 -899.7734 546.1055 -898.1553 c
546.1055 -895.5166 545.4248 -893.5059 544.084 -892.1807 c
542.835 -890.9443 541.25 -890.3438 539.2354 -890.3438 C
535.2451 -890.3438 L
535.2451 -906.5068 L
539.2354 -906.5068 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 52) 531.6934 -864.8242 -28.7289 120.0234 1 0 0 1 0 0 Bg
105.249 -57.6912 -57.6912 -105.249 531.6934 -864.8242 Bm
f0 BB
*U
0 D
562.5479 -947.6914 m
562.5479 -878.8594 L
594.6416 -878.8594 L
594.6416 -890.2363 L
574.5469 -890.2363 L
574.5469 -907.5869 L
589.2285 -907.5869 L
589.2285 -918.9639 L
574.5469 -918.9639 L
574.5469 -936.3145 L
594.6416 -936.3145 L
594.6416 -947.6914 L
562.5479 -947.6914 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 52) 531.6934 -864.8242 -28.7289 120.0238 1 0 0 1 0 0 Bg
105.2493 -57.6914 -57.6914 -105.2493 531.6934 -864.8242 Bm
f0 BB
615.4102 -948.501 m
611.0508 -948.501 607.3779 -947.4668 604.4941 -945.4287 c
602.0869 -943.7637 600.1582 -941.4658 598.7617 -938.6025 c
597.373 -935.7607 596.5508 -932.4658 596.3164 -928.8086 C
596.2813 -928.2539 L
607.7275 -927.4785 L
607.7891 -928.0068 L
608.2324 -931.8057 609.3027 -934.5801 610.9697 -936.252 c
612.1133 -937.4258 613.3672 -937.9941 614.8076 -937.9941 c
614.8848 -937.9941 614.9629 -937.9922 615.042 -937.9893 c
617.2559 -937.9229 618.9746 -936.9258 620.3018 -934.9395 c
620.9668 -933.9854 621.3008 -932.584 621.3008 -930.7646 c
621.3008 -928.1191 619.9795 -925.4316 617.373 -922.7783 C
607.7275 -914.21 L
604.0908 -910.9072 601.4775 -907.8975 599.96 -905.2617 c
598.3047 -902.2646 597.4668 -898.9736 597.4668 -895.4707 c
597.4668 -889.1475 599.7734 -884.2852 604.3184 -881.0186 c
607.1309 -879.0469 610.6484 -878.0488 614.7773 -878.0488 c
618.7354 -878.0488 622.1816 -878.8926 625.0205 -880.5557 c
627.2441 -881.8604 629.0645 -883.708 630.4316 -886.0479 c
631.79 -888.375 632.6191 -891.0869 632.8945 -894.1084 C
632.9414 -894.6221 L
621.4277 -896.5918 L
621.3623 -896.0029 L
621.0693 -893.3613 620.2627 -891.2852 618.9668 -889.833 c
618.0713 -888.832 616.7949 -888.3457 615.0654 -888.3457 c
613.2588 -888.3457 611.9258 -889.0723 610.9902 -890.5674 c
610.2051 -891.8047 609.8086 -893.376 609.8086 -895.2393 c
609.8086 -898.1816 611.1943 -901.2363 613.9287 -904.3193 c
614.9766 -905.5137 616.5771 -906.9414 618.6875 -908.5664 c
621.2207 -910.5469 622.9229 -911.96 623.7471 -912.7686 c
626.4482 -915.3027 628.5732 -917.8506 630.0547 -920.333 c
630.752 -921.4971 631.3242 -922.5898 631.7559 -923.582 c
632.8174 -926.0518 633.375 -928.3027 633.415 -930.2744 c
633.4932 -935.1025 632.1348 -939.293 629.377 -942.7305 c
627.5498 -945.0762 624.9355 -946.7578 621.6113 -947.7227 c
619.8418 -948.2393 617.7559 -948.501 615.4102 -948.501 C
615.4102 -948.501 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 52) 531.6992 -864.8242 -28.7289 120.0165 1 0 0 1 0 0 Bg
105.2429 -57.6878 -57.6878 -105.2429 531.6992 -864.8242 Bm
f0 BB
646.7588 -947.6914 m
646.7588 -890.29 L
635.1855 -890.29 L
635.1855 -878.9131 L
670.2744 -878.9131 L
670.2744 -890.29 L
658.7588 -890.29 L
658.7588 -947.6914 L
646.7588 -947.6914 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 52) 531.6895 -864.8242 -28.7289 120.0237 1 0 0 1 0 0 Bg
105.2492 -57.6913 -57.6913 -105.2492 531.6895 -864.8242 Bm
f0 BB
UUuu596.04 -1206.7568 m
603.6211 -1207.4111 609.625 -1203.4229 610.2783 -1196.7861 c
610.7803 -1191.6875 608.0322 -1186.1035 603.4912 -1181.9629 C
605.917 -1182.6445 607.5762 -1183.0918 608.1943 -1183.2578 C
608.2959 -1183.2842 608.3984 -1183.3105 608.5 -1183.3379 C
617.8721 -1185.7119 625.5898 -1181.2002 625.7197 -1173.1514 c
625.792 -1168.7959 623.6787 -1164.1602 620.0176 -1160.3555 C
624.4189 -1161.2275 628.4336 -1160.6211 631.3965 -1158.6191 c
634.4844 -1156.5391 636.0566 -1153.1855 635.832 -1149.1641 c
635.5039 -1143.2803 631.3701 -1137.2178 625.5625 -1133.4082 C
633.6719 -1134.0859 639.4795 -1129.3418 638.9668 -1121.8496 c
638.626 -1116.916 635.418 -1111.2578 631.207 -1108.083 c
622.2676 -1101.2646 600.0625 -1090.9775 590.6113 -1086.9971 c
575.0146 -1080.293 561.6289 -1075.3223 550.7969 -1072.0068 C
552.0752 -1071.0586 553.2363 -1070.1777 553.9121 -1069.584 c
561.2666 -1063.1748 566.5 -1055.375 569.0488 -1046.9482 c
570.3271 -1042.7461 570.9736 -1038.3916 570.9746 -1033.999 c
570.9707 -1029.373 570.252 -1026.0654 569.9414 -1024.8594 c
567.9492 -1017.1377 560.6396 -1010.1709 552.1631 -1008.0225 c
550.7168 -1007.6543 549.2617 -1007.4385 547.8477 -1007.3809 c
538.46 -1007.0166 532.5996 -1013.7568 534.2275 -1022.915 c
534.3105 -1023.3916 534.3555 -1024.0527 534.3555 -1024.8672 c
534.3496 -1027.0322 533.9336 -1030.4248 531.9727 -1034.3027 c
529.3828 -1039.3828 525.085 -1043.752 518.8184 -1047.7148 c
513.3281 -1051.1904 506.4404 -1054.1973 498.3408 -1056.7148 c
496.8691 -1057.1729 495.627 -1057.7793 494.4282 -1058.627 c
488.4092 -1062.8926 482.8472 -1067.7734 477.8789 -1073.127 C
418.5137 -1062.1943 359.0967 -1055.2041 300.0493 -1052.3564 C
300.0493 -1089.458 300.0493 -1126.5586 300.0493 -1163.6592 C
299.9526 -1163.668 363.8296 -1164.6729 427.8457 -1173.1035 c
491.8428 -1180.2871 555.9785 -1194.5195 555.9531 -1194.5098 C
558.4131 -1194.9258 560.8711 -1195.3496 563.3301 -1195.7773 C
567.3975 -1197.7334 571.7373 -1199.5303 576.5557 -1201.2627 c
584.3789 -1204.0615 590.6367 -1205.6914 592.9629 -1206.2578 C
593.9883 -1206.4238 595.0146 -1206.5889 596.04 -1206.7568 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 685) 383.3398 -1051.9004 -30.796 336.5442 -1 0 0 0.94 16346.3721 497.5831 Bg
-289.09 -161.9666 172.3049 -271.7446 569.0322 -1055.0215 Bm
f0 BB
593.2471 -1178.4219 m
600.1865 -1178.5039 605.6797 -1174.0313 606.2783 -1167.3184 c
606.7383 -1162.1631 604.2227 -1156.7715 600.0693 -1152.9678 C
602.2861 -1153.4609 603.8047 -1153.7832 604.3711 -1153.9014 C
604.4639 -1153.9199 604.5576 -1153.9385 604.6504 -1153.957 C
613.2285 -1155.6143 620.293 -1150.4639 620.4131 -1142.3701 c
620.4775 -1137.9893 618.5439 -1133.5039 615.1934 -1129.9746 C
619.2217 -1130.499 622.8965 -1129.5664 625.6094 -1127.3154 c
628.4355 -1124.9746 629.876 -1121.4785 629.6699 -1117.457 c
629.3691 -1111.5703 625.585 -1105.8213 620.2676 -1102.4668 C
627.6924 -1102.4893 633.0088 -1097.2393 632.54 -1089.7549 c
632.2275 -1084.8262 629.29 -1079.4082 625.4346 -1076.5664 c
617.25 -1070.4678 596.9277 -1061.9346 588.2793 -1058.6748 c
574.0049 -1053.1855 561.7559 -1049.2217 551.8457 -1046.7139 C
553.0146 -1045.665 554.0771 -1044.6953 554.6953 -1044.0508 c
561.4258 -1037.0693 566.2139 -1028.8447 568.5469 -1020.1973 c
569.7168 -1015.8848 570.3086 -1011.4648 570.3086 -1007.0605 c
570.3047 -1002.4238 569.6465 -999.1631 569.3633 -997.9775 c
567.541 -990.3926 560.8516 -983.9863 553.0957 -982.4844 c
551.7725 -982.2275 550.4414 -982.123 549.1465 -982.1748 c
540.5576 -982.5313 535.1963 -989.7188 536.6855 -998.7715 c
536.7617 -999.2422 536.8008 -999.8984 536.8018 -1000.7168 c
536.7979 -1002.8848 536.416 -1006.3164 534.6221 -1010.3457 c
532.2539 -1015.626 528.3203 -1020.3213 522.5879 -1024.7441 c
517.5645 -1028.6211 511.2617 -1032.1289 503.8516 -1035.2139 c
502.5039 -1035.7754 501.3682 -1036.4697 500.2725 -1037.4004 c
494.7651 -1042.0889 489.6758 -1047.3525 485.1304 -1053.043 C
430.813 -1046.1709 376.439 -1042.666 322.3296 -1042.6836 C
322.3296 -1079.6074 322.3296 -1116.5303 322.3296 -1153.4561 C
322.2559 -1153.4629 380.7627 -1151.6543 439.3472 -1156.1191 c
497.9219 -1159.6279 556.5732 -1169.1211 556.5645 -1169.1113 C
558.8145 -1169.3506 561.0645 -1169.5957 563.3145 -1169.8457 C
567.0352 -1171.5117 571.0068 -1172.9932 575.416 -1174.373 c
582.5742 -1176.6006 588.3008 -1177.7627 590.4316 -1178.1543 C
591.3691 -1178.2432 592.3086 -1178.333 593.2471 -1178.4219 C
Bb
1 (Unnamed gradient 727) 319.832 -1080.2979 0 298.7758 -1 0 0 1 16346.3721 0 Bg
-298.7758 0 0 -200.3809 632.54 -980.123 Xm
-8020.3008 0 0 -200.3809 8652.8408 -980.123 Bc
-158.387 0 0 -200.3809 632.54 -980.123 Bm
-140.3887 0 0 -200.3809 474.1528 -980.123 Bm
-8020.3008 0 0 -200.3809 333.7642 -980.123 Bc
f0 BB
U/BBAccumRotation (0.000000) XT
u299.9912 -1116.6221 m
299.9912 -1152.9688 299.9912 -1189.3164 299.9912 -1225.6631 C
284.1675 -1219.9404 273.4175 -1207.6514 273.417 -1192.4229 C
273.417 -1155.8975 273.417 -1119.374 273.417 -1082.8496 C
273.418 -1098.0791 284.1675 -1110.5615 299.9912 -1116.6221 C
Bb
1 (Unnamed gradient 136) 832.9883 -1154.2568 0 26.7241 -1 0 0 1 16527.2305 0 Bg
-26.7241 0 0 -146.8135 300.2422 -1080.8496 Xm
-8532.7373 0 0 -146.8135 8832.9785 -1080.8496 Bc
-26.7241 0 0 -146.8135 300.2422 -1080.8496 Bm
-8532.7373 0 0 -146.8135 273.5181 -1080.8496 Bc
f0 BB
1 Ap
322.4712 -1042.6836 m
295.3306 -1042.7227 273.417 -1061.6934 273.417 -1083.6475 c
273.417 -1120.1709 273.417 -1156.6963 273.417 -1193.2217 c
273.417 -1171.2656 295.3306 -1154.1377 322.4712 -1153.4521 c
322.4712 -1116.5283 322.4712 -1079.6064 322.4712 -1042.6836 C
Bb
1 (Unnamed gradient 172) 794.1885 -1071.1338 0 41.9727 -1.1753 0 0 1.2133 17999.6309 -1715.098 Bg
-49.3305 0 0 -155.3913 322.937 -1040.2568 Xm
-9982.7549 0 0 -155.3913 10305.6914 -1040.2568 Bc
-29.1228 0 0 -155.3913 322.937 -1040.2568 Bm
-20.2077 0 0 -155.3913 293.814 -1040.2568 Bm
-9982.7549 0 0 -155.3913 273.6064 -1040.2568 Bc
f0 BB
322.4712 -1046.4492 m
295.3306 -1046.5098 273.417 -1064.2197 273.417 -1084.71 c
273.417 -1119.4531 273.417 -1154.1963 273.417 -1188.9404 c
273.417 -1168.4521 295.3306 -1150.3633 322.4712 -1149.6982 c
322.4712 -1115.2822 322.4712 -1080.8652 322.4712 -1046.4492 C
Bb
1 (Unnamed gradient 165) 794.1885 -1070.9219 0 41.9727 -1.1753 0 0 1.2133 17999.6309 -1715.098 Bg
-49.3305 0 0 -147.3444 322.937 -1044.0225 Xm
-9982.7549 0 0 -147.3444 10305.6914 -1044.0225 Bc
-29.1228 0 0 -147.3444 322.937 -1044.0225 Bm
-20.2077 0 0 -147.3444 293.814 -1044.0225 Bm
-9982.7549 0 0 -147.3444 273.6064 -1044.0225 Bc
f0 BB
0 Ap
273.417 -1192.7373 m
273.4175 -1171.0557 294.8667 -1154.1572 322.4712 -1153.4521 c
296.7354 -1154.1016 275.9487 -1170.8721 275.9482 -1192.5508 c
275.9492 -1207.4141 285.5811 -1219.3604 299.9912 -1225.123 C
299.9912 -1225.3027 299.9912 -1225.4824 299.9912 -1225.6631 C
284.1313 -1220.1543 273.418 -1208.002 273.417 -1192.7373 C
Bb
1 (Unnamed gradient 45) 835.0088 -1149.5986 -89.3263 74.0822 -1 0 0 1 16527.2305 0 Bg
-0.8711 -74.0771 52.8397 -0.6213 271.6733 -1149.2861 Xm
-100.3118 -8530.8516 52.8397 -0.6213 371.9854 7381.5649 Bc
-0.8711 -74.0771 52.8397 -0.6213 271.6733 -1149.2861 Bm
-100.3118 -8530.8516 52.8397 -0.6213 270.8022 -1223.3633 Bc
f0 BB
U/BBAccumRotation (0.000000) XT
*u
1 D
0 g
590.6738 -1174.6523 m
596.9121 -1175.7646 602.2021 -1172.1406 602.7217 -1166.3486 c
603.2607 -1160.2813 598.416 -1153.8008 591.916 -1151.9678 C
591.4727 -1151.8613 591.0293 -1151.7549 590.5869 -1151.6504 C
590.4922 -1151.6318 590.3984 -1151.6133 590.3047 -1151.5957 C
590.0039 -1151.5332 589.5469 -1151.4395 588.9551 -1151.3066 c
587.8623 -1151.0645 586.127 -1150.6582 584.0684 -1150.0947 c
583.415 -1149.917 582.7178 -1149.7148 582.0068 -1149.5039 c
577.0908 -1148.2305 572.667 -1147.001 568.5137 -1145.7373 c
561.5635 -1143.6113 556.0986 -1141.6455 551.3291 -1139.5127 c
550.8457 -1139.2969 550.3574 -1139.0498 549.8203 -1138.748 C
548.8086 -1139.2783 547.9336 -1139.9639 547.2051 -1140.7754 c
543.1855 -1145.2783 544.249 -1152.7334 549.5762 -1157.3945 c
553.332 -1160.6631 557.6445 -1163.3838 563.1465 -1165.999 c
567.082 -1167.8506 571.3262 -1169.4766 576.1172 -1170.9824 c
582.3379 -1172.9258 587.4258 -1174.0313 589.8799 -1174.5107 C
590.1445 -1174.5566 590.4102 -1174.6045 590.6738 -1174.6523 C
f0 g
552.5322 -1164.9336 m
550.5215 -1163.585 548.5938 -1162.1182 546.7764 -1160.541 c
543.1973 -1157.418 540.8867 -1153.3125 540.2686 -1148.9609 c
539.6465 -1144.6113 540.793 -1140.5439 543.4883 -1137.5176 c
544.0957 -1136.8369 544.7939 -1136.2148 545.5723 -1135.6553 C
540.3535 -1130.7412 538.1875 -1123.6855 540.1777 -1117.7109 c
541.4004 -1114.0439 544.1211 -1111.1826 547.7363 -1109.7285 C
543.2119 -1104.7471 541.5566 -1098.1816 543.5313 -1092.6348 c
545.0371 -1088.4082 548.4746 -1085.4023 552.9209 -1084.3506 C
546.8379 -1079.4014 544.0586 -1071.6426 546.2773 -1065.1445 c
548.4668 -1058.75 554.8965 -1055.3164 562.2744 -1056.6768 c
563.9502 -1056.9854 565.6211 -1057.54 567.2383 -1058.3232 c
569.0811 -1059.2158 571.5508 -1060.2139 574.1953 -1061.1426 c
578.0566 -1062.4971 582.8242 -1063.9043 587.9746 -1065.2285 c
592.2793 -1066.333 596.9375 -1067.4121 601.8438 -1068.4473 c
602.6777 -1068.623 603.5117 -1068.7959 604.3457 -1068.9658 C
599.1992 -1066.6133 593.7852 -1064.3535 587.7275 -1062.04 c
572.8105 -1056.3223 560.1543 -1052.2871 550.1143 -1049.8516 C
549.2021 -1050.5039 548.4268 -1051.1465 547.6992 -1051.8652 c
545.7354 -1053.8057 543.5176 -1056.165 541.96 -1058.8965 c
540.335 -1061.7559 539.5771 -1064.6475 539.5742 -1067.9834 c
539.5742 -1070.208 539.916 -1072.5439 540.6221 -1075.123 c
541.7793 -1079.375 542.3672 -1083.5527 542.3672 -1087.5439 c
542.375 -1098.5811 537.96 -1107.9932 529.6016 -1114.8984 c
521.209 -1121.8623 509.5186 -1124.9795 497.5254 -1123.5469 c
493.2754 -1123.0371 489.0532 -1121.9629 484.9771 -1120.3594 c
483.7417 -1119.8721 483.0313 -1118.5352 483.3926 -1117.377 c
483.6768 -1116.4473 484.5981 -1115.8789 485.6289 -1115.9941 c
485.8477 -1116.0186 486.0664 -1116.0732 486.2813 -1116.1582 c
489.9346 -1117.6025 493.7153 -1118.5684 497.5254 -1119.0303 c
508.2813 -1120.3271 518.7617 -1117.5234 526.2852 -1111.2666 c
533.7539 -1105.0596 537.7031 -1096.6367 537.7109 -1086.7969 c
537.7109 -1083.1973 537.1768 -1079.4248 536.1289 -1075.5811 c
535.3242 -1072.625 534.917 -1069.8145 534.918 -1067.2256 c
534.9131 -1063.2139 535.8564 -1059.6055 537.7949 -1056.2021 c
539.5518 -1053.1162 541.8691 -1050.624 544.1104 -1048.4004 c
544.3799 -1048.1318 545.2344 -1047.3779 546.2998 -1046.4395 c
548.2275 -1044.7451 550.8633 -1042.4365 551.9063 -1041.3457 c
558.3145 -1034.6855 562.8633 -1026.8672 565.0732 -1018.6719 c
566.1738 -1014.6123 566.7305 -1010.4678 566.7305 -1006.3486 c
566.7266 -1002.0859 566.1377 -999.1641 565.8867 -998.1074 c
564.4707 -992.2109 559.2695 -987.2422 553.2383 -986.0801 c
552.209 -985.8809 551.1729 -985.8008 550.1621 -985.8398 c
543.4883 -986.1162 539.334 -991.7559 540.502 -998.8809 c
540.6143 -999.5576 540.6689 -1000.3848 540.6689 -1001.4082 c
540.6621 -1004.9668 539.8184 -1008.7295 538.2246 -1012.2969 c
535.6563 -1018.0166 531.4385 -1023.0596 525.3242 -1027.7646 c
520.083 -1031.8027 513.5371 -1035.4385 505.8691 -1038.625 c
504.8057 -1039.0664 503.9463 -1039.5918 503.0791 -1040.3232 c
497.3799 -1045.1641 492.1382 -1050.6396 487.502 -1056.5742 C
487.4097 -1056.6914 487.3169 -1056.8115 487.2246 -1056.9307 C
432.2583 -1049.9375 377.2295 -1046.3916 322.4712 -1046.4492 C
322.4712 -1080.8652 322.4712 -1115.2822 322.4712 -1149.6982 C
328.6899 -1149.5059 382.5845 -1148.2666 436.7651 -1152.2646 c
490.937 -1155.5205 545.3936 -1163.7891 552.5322 -1164.9336 C
f0 g
604.792 -1150.459 m
611.3496 -1151.7305 616.7549 -1147.7793 616.8447 -1141.583 c
616.9102 -1137.3076 614.4824 -1132.9102 610.4932 -1130.0635 C
608.416 -1129.6914 605.6982 -1129.1875 602.5283 -1128.5615 c
594.2617 -1126.9189 586.543 -1125.1777 579.5742 -1123.3418 c
574.9121 -1122.1113 570.7412 -1120.8809 566.8281 -1119.5723 c
562.0898 -1117.9863 557.9971 -1116.375 554.3203 -1114.6328 c
553.5869 -1114.2822 552.8496 -1113.8721 552.0781 -1113.377 C
548.5029 -1114.04 545.7354 -1116.3926 544.6299 -1119.7031 c
543.6875 -1122.5273 544.0078 -1125.7178 545.5293 -1128.6924 c
547.0488 -1131.665 549.5869 -1134.0645 552.6816 -1135.4609 c
557.2197 -1137.499 562.4609 -1139.3848 569.1719 -1141.4492 c
574.166 -1142.9746 579.793 -1144.5186 585.8867 -1146.0576 c
595.459 -1148.4648 603.1348 -1150.1133 604.5732 -1150.4141 C
604.6465 -1150.4287 604.7188 -1150.4443 604.792 -1150.459 C
f0 g
602.5283 -1124.1514 m
609.3379 -1125.5049 614.1279 -1126.2959 614.6523 -1126.3809 c
621.3057 -1127.4492 626.4336 -1123.2002 626.1113 -1116.8506 c
625.7959 -1110.6992 620.5156 -1104.7666 614.0801 -1103.4053 c
613.8818 -1103.3633 613.6826 -1103.3252 613.4824 -1103.293 C
613.4824 -1103.292 611.5 -1102.9463 610.5332 -1102.7705 c
608.6055 -1102.4189 605.8281 -1101.8926 602.5283 -1101.2207 c
597.2383 -1100.1406 592.1816 -1099.0078 587.4814 -1097.8379 c
581.5547 -1096.3652 576.0703 -1094.791 571.6191 -1093.2627 c
568.3652 -1092.1436 565.4512 -1090.9746 563.1934 -1089.875 c
561.9844 -1089.2871 560.7305 -1088.875 559.4727 -1088.6553 c
554.209 -1087.7344 549.583 -1090.1904 547.9609 -1094.7334 c
545.9063 -1100.4922 549.4023 -1107.6006 555.75 -1110.6289 c
559.207 -1112.2725 563.0859 -1113.8066 567.6025 -1115.3252 c
571.3809 -1116.5928 575.4268 -1117.792 579.9727 -1118.999 c
586.8223 -1120.8105 594.4063 -1122.5332 602.5283 -1124.1514 C
602.5283 -1124.1514 L
f601.8984 -1095.8027 m
610.29 -1097.5195 616.4902 -1098.5488 617.6484 -1098.7314 c
624.3135 -1099.7881 629.3838 -1095.5195 628.9805 -1089.1563 c
628.5986 -1083.0654 623.3223 -1077.1475 616.9648 -1075.749 c
616.7188 -1075.6934 616.4727 -1075.6494 616.2246 -1075.6084 C
615.8955 -1075.5518 615.5654 -1075.4951 615.2363 -1075.4395 C
614.5596 -1075.3242 613.5479 -1075.1426 612.2725 -1074.9111 c
609.9424 -1074.4844 606.25 -1073.7813 601.8984 -1072.8691 c
596.8496 -1071.8086 592.0977 -1070.7129 587.7021 -1069.5889 c
582.3926 -1068.2295 577.4531 -1066.7793 573.4336 -1065.3711 c
570.5449 -1064.3652 567.9287 -1063.3076 565.8604 -1062.3105 c
564.6914 -1061.748 563.4854 -1061.3496 562.2744 -1061.127 c
556.9463 -1060.1514 552.3027 -1062.6201 550.7246 -1067.2295 c
549.7646 -1070.0234 550.0664 -1073.2158 551.5762 -1076.2188 c
553.0811 -1079.2158 555.6113 -1081.665 558.6982 -1083.125 c
561.8789 -1084.623 565.3965 -1086.0205 569.4551 -1087.4121 c
572.9141 -1088.5908 576.5898 -1089.707 580.6855 -1090.8242 c
587.0762 -1092.5645 594.2061 -1094.2256 601.8984 -1095.8027 C
601.8984 -1095.8027 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 157) 591.4492 -1185.8086 171.0694 264.2867 1 0 0 0.94 0 497.5831 Bg
-261.0828 38.5657 41.0274 245.4178 591.4492 -1180.8945 Bm
f0 BB
*U
/BBAccumRotation (0.000000) XT
Uuu*u
0 D
0.2941 0.9294 0.9608 0.1765 0.5804 0 0 (r2) 0 1 Xk
330.1846 -1135.7549 m
330.1846 -1112.3994 330.1846 -1089.0449 330.1846 -1065.6885 C
335.9199 -1065.6895 341.6582 -1065.7314 347.3989 -1065.8115 C
351.853 -1065.876 355.9312 -1067.0801 359.519 -1069.3711 c
362.6519 -1071.3516 364.9185 -1074.3975 366.251 -1078.4072 c
366.9707 -1080.5244 367.3364 -1083.0479 367.3364 -1085.9053 c
367.3364 -1090.6602 365.9526 -1094.5068 363.2231 -1097.3506 c
362.5171 -1098.0898 361.7251 -1098.7305 360.8584 -1099.2598 C
362.6992 -1100.333 364.3174 -1101.9287 365.6841 -1104.0225 c
366.8618 -1105.8721 367.7393 -1108.252 368.2983 -1111.1006 c
368.5776 -1112.5703 368.7192 -1114.209 368.7192 -1115.9805 c
368.7192 -1120.4033 367.8052 -1124.207 366.0015 -1127.291 c
364.5815 -1129.7383 362.5464 -1131.7148 359.9541 -1133.1719 c
357.0625 -1134.8037 354.1357 -1135.627 351.2568 -1135.6211 C
344.229 -1135.6055 337.2046 -1135.6504 330.1846 -1135.7549 C
f1 D
347.3989 -1123.6191 m
350.6929 -1123.625 352.9155 -1122.0801 354.1929 -1118.8818 c
354.6465 -1117.7695 354.8755 -1116.4717 354.8755 -1115.0137 c
354.8755 -1111.4805 354.1797 -1108.8945 352.8066 -1107.335 c
351.5928 -1105.9287 349.8247 -1105.2393 347.3989 -1105.2246 C
346.1929 -1105.2188 344.9873 -1105.2139 343.7813 -1105.21 C
343.7813 -1111.3457 343.7813 -1117.4824 343.7813 -1123.6191 C
344.9873 -1123.6172 346.1929 -1123.6172 347.3989 -1123.6191 C
f347.3989 -1093.5518 m
350.3726 -1093.5762 352.3105 -1092.2783 353.3213 -1089.5674 c
353.7026 -1088.5313 353.8965 -1087.2041 353.8965 -1085.627 c
353.8965 -1083.0869 353.2529 -1081.1514 351.9849 -1079.877 c
350.8091 -1078.6914 349.3091 -1078.1025 347.3989 -1078.0801 C
346.1929 -1078.0664 344.9873 -1078.0547 343.7813 -1078.0449 C
343.7813 -1083.2051 343.7813 -1088.3672 343.7813 -1093.5273 C
344.9873 -1093.5342 346.1929 -1093.542 347.3989 -1093.5518 C
f*U
0 D
370.3481 -1135.8125 m
370.3481 -1112.6582 370.3481 -1089.5059 370.3481 -1066.3525 C
381.3032 -1066.7139 392.2651 -1067.2178 403.2314 -1067.8623 C
403.2314 -1071.8672 403.2314 -1075.873 403.2314 -1079.877 C
396.521 -1079.5 389.8115 -1079.1748 383.1045 -1078.9043 C
383.1045 -1084.4141 383.1045 -1089.9258 383.1045 -1095.4375 C
388.0049 -1095.6182 392.9067 -1095.8262 397.8091 -1096.0645 C
397.8091 -1100.0732 397.8091 -1104.083 397.8091 -1108.0928 C
392.9067 -1107.8682 388.0049 -1107.6719 383.1045 -1107.5049 C
383.1045 -1113.0146 383.1045 -1118.5254 383.1045 -1124.0361 C
389.8115 -1124.2412 396.521 -1124.5 403.2314 -1124.8115 C
403.2314 -1128.8154 403.2314 -1132.8203 403.2314 -1136.8252 C
392.2651 -1136.3457 381.3032 -1136.0078 370.3481 -1135.8125 C
f423.6748 -1138.6836 m
419.2256 -1138.4199 415.4727 -1137.1738 412.519 -1134.9609 c
410.0566 -1133.1514 408.0806 -1130.7314 406.6519 -1127.7715 c
405.2388 -1124.8438 404.4023 -1121.4922 404.165 -1117.8096 C
404.145 -1117.5039 404.1255 -1117.1973 404.106 -1116.8916 C
408.1714 -1116.8184 412.2368 -1116.7637 416.3032 -1116.7295 C
416.3379 -1117.0205 416.3721 -1117.3135 416.4067 -1117.6055 C
416.8413 -1121.2988 417.8779 -1124.0293 419.4878 -1125.7178 c
420.5625 -1126.8672 421.7314 -1127.4619 423.0698 -1127.543 C
423.1426 -1127.5469 423.2158 -1127.5498 423.2886 -1127.5537 C
425.3838 -1127.6201 427.0083 -1126.7959 428.2661 -1125.0264 c
428.8931 -1124.1846 429.2061 -1122.8945 429.2061 -1121.1777 c
429.2061 -1118.6699 427.917 -1116.0166 425.376 -1113.3037 C
422.1592 -1110.2773 418.9429 -1107.2578 415.7266 -1104.2471 C
412.0498 -1100.7256 409.4072 -1097.5684 407.8652 -1094.8408 c
406.1714 -1091.7139 405.3174 -1088.3477 405.3169 -1084.8145 c
405.3174 -1078.4248 407.6792 -1073.6426 412.3398 -1070.6367 c
415.2271 -1068.832 418.8242 -1068.0684 423.04 -1068.3828 c
427.0742 -1068.6836 430.5918 -1069.8135 433.4956 -1071.7236 c
435.7803 -1073.2266 437.6499 -1075.2461 439.0527 -1077.7227 c
440.4429 -1080.1758 441.29 -1082.9648 441.5718 -1086.0137 C
441.5977 -1086.2959 441.624 -1086.5791 441.6499 -1086.8623 C
437.5591 -1087.2012 433.4683 -1087.5586 429.3784 -1087.9375 C
429.3418 -1087.6123 429.3057 -1087.2891 429.269 -1086.9648 C
428.9844 -1084.417 428.2075 -1082.3809 426.9604 -1080.9121 c
426.1377 -1079.9473 424.9492 -1079.417 423.3281 -1079.3008 c
421.6567 -1079.1797 420.4243 -1079.7549 419.5601 -1081.0547 c
418.811 -1082.1689 418.4326 -1083.6289 418.4326 -1085.3975 c
418.4321 -1088.2129 419.7905 -1091.2354 422.4683 -1094.3936 c
423.5054 -1095.627 425.0918 -1097.1299 427.1865 -1098.8662 c
429.7803 -1101.0449 431.4487 -1102.5283 432.2925 -1103.4053 c
435.0205 -1106.123 437.1724 -1108.8203 438.6733 -1111.4072 c
439.3804 -1112.6201 439.9629 -1113.7559 440.4014 -1114.7783 c
441.4849 -1117.335 442.0527 -1119.6367 442.0947 -1121.625 c
442.1748 -1126.4678 440.7847 -1130.5566 437.9644 -1133.7988 c
436.0869 -1136.0322 433.4023 -1137.5439 429.9937 -1138.2939 c
428.187 -1138.6953 426.061 -1138.8262 423.6748 -1138.6836 C
423.6748 -1138.6836 L
f454.7266 -1140.1084 m
454.7266 -1121.3574 454.7266 -1102.6055 454.7266 -1083.8564 C
450.8594 -1083.4844 446.9917 -1083.1299 443.1245 -1082.7939 C
443.1245 -1078.8242 443.1245 -1074.8545 443.1245 -1070.8857 C
455.0977 -1071.959 467.0723 -1073.1973 479.0444 -1074.5957 C
479.0444 -1078.5342 479.0444 -1082.4717 479.0444 -1086.4102 C
475.1968 -1085.9717 471.3486 -1085.5488 467.501 -1085.1426 C
467.501 -1103.8408 467.501 -1122.5391 467.501 -1141.2344 C
463.2427 -1140.8389 458.9849 -1140.4639 454.7266 -1140.1084 C
fUu*u
0 g
328.6978 -1133.5293 m
328.6978 -1110.417 328.6978 -1087.3037 328.6978 -1064.1904 C
334.3086 -1064.1865 339.9224 -1064.2207 345.5386 -1064.293 C
349.9219 -1064.3506 353.9341 -1065.5273 357.4624 -1067.7793 c
360.5195 -1069.7109 362.7319 -1072.6846 364.0356 -1076.6064 c
364.7427 -1078.6865 365.1021 -1081.1709 365.1021 -1083.9893 c
365.1021 -1088.6504 363.7524 -1092.4111 361.0903 -1095.1904 c
360.2544 -1096.0703 359.2964 -1096.8008 358.2334 -1097.3711 C
360.2637 -1098.4004 362.0352 -1100.0635 363.5117 -1102.3242 c
364.6606 -1104.1299 365.5205 -1106.4639 366.0708 -1109.2676 c
366.3452 -1110.7129 366.4849 -1112.3291 366.4849 -1114.0781 c
366.4844 -1118.4375 365.5869 -1122.1807 363.8169 -1125.2119 c
362.4302 -1127.6055 360.4414 -1129.54 357.9077 -1130.9668 c
355.0728 -1132.5713 352.209 -1133.3838 349.396 -1133.3789 C
342.4927 -1133.3711 335.5933 -1133.4209 328.6978 -1133.5293 C
f1 D
0 g
345.5386 -1122.125 m
349.002 -1122.127 351.3379 -1120.5039 352.6772 -1117.1436 c
353.1479 -1115.9893 353.3862 -1114.6416 353.3862 -1113.1348 c
353.3862 -1109.5078 352.6587 -1106.8398 351.2241 -1105.207 c
349.9551 -1103.7373 348.0425 -1102.9863 345.5386 -1102.9736 C
344.2085 -1102.9678 342.8789 -1102.9639 341.5493 -1102.9619 C
341.5493 -1109.3516 341.5493 -1115.7393 341.5493 -1122.1279 C
342.8789 -1122.125 344.2085 -1122.123 345.5386 -1122.125 C
f345.5386 -1092.0439 m
348.6865 -1092.0654 350.7378 -1090.6865 351.8096 -1087.8135 c
352.2056 -1086.7334 352.4077 -1085.3613 352.4077 -1083.7402 c
352.4077 -1081.0967 351.7266 -1079.0703 350.3857 -1077.7227 c
349.1367 -1076.4648 347.5518 -1075.8428 345.5386 -1075.8203 C
344.2085 -1075.8057 342.8789 -1075.7949 341.5493 -1075.7852 C
341.5493 -1081.1973 341.5493 -1086.6094 341.5493 -1092.0215 C
342.8789 -1092.0264 344.2085 -1092.0332 345.5386 -1092.0439 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 128) 335.7715 -1086.8379 -28.7289 120.0227 1 0 0 0.94 2.4004 497.5831 Bg
105.2484 -54.2294 -57.6908 -98.9335 338.1719 -1087.8623 Bm
f0 BB
*U
0 D
368.8579 -1133.5566 m
368.8579 -1110.6436 368.8579 -1087.7314 368.8579 -1064.8184 C
379.5645 -1065.1621 390.2773 -1065.6416 400.9946 -1066.2568 C
400.9946 -1070.0176 400.9946 -1073.7783 400.9946 -1077.54 C
394.2842 -1077.1709 387.5752 -1076.8555 380.8687 -1076.5918 C
380.8687 -1082.3525 380.8687 -1088.1133 380.8687 -1093.873 C
385.769 -1094.0469 390.6704 -1094.25 395.5723 -1094.4795 C
395.5723 -1098.2441 395.5723 -1102.0088 395.5723 -1105.7744 C
390.6704 -1105.5566 385.769 -1105.3662 380.8687 -1105.2051 C
380.8687 -1110.9668 380.8687 -1116.7266 380.8687 -1122.4873 C
387.5752 -1122.6836 394.2842 -1122.9316 400.9946 -1123.2334 C
400.9946 -1126.9941 400.9946 -1130.7539 400.9946 -1134.5166 C
390.2773 -1134.0605 379.5645 -1133.7402 368.8579 -1133.5566 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 128) 335.7715 -1086.8379 -28.7289 120.0225 1 0 0 0.94 2.4004 497.5831 Bg
105.2482 -54.2293 -57.6907 -98.9333 338.1719 -1087.8623 Bm
f0 BB
421.8096 -1136.3691 m
417.4399 -1136.1143 413.7588 -1134.8975 410.8696 -1132.7354 c
408.4575 -1130.9648 406.5229 -1128.5967 405.1226 -1125.6924 c
403.731 -1122.8105 402.9072 -1119.5059 402.6729 -1115.8691 C
402.6611 -1115.6855 402.6494 -1115.502 402.6377 -1115.3184 C
406.4609 -1115.2461 410.2852 -1115.1904 414.1094 -1115.1543 C
414.1299 -1115.3291 414.1504 -1115.5039 414.1709 -1115.6807 C
414.6162 -1119.4619 415.6885 -1122.2637 417.3589 -1124.0137 c
418.5044 -1125.2383 419.7612 -1125.874 421.2046 -1125.9619 c
421.2827 -1125.9658 421.3604 -1125.9688 421.439 -1125.9697 c
423.6592 -1126.041 425.3818 -1125.167 426.7109 -1123.293 c
427.3784 -1122.3965 427.7139 -1121.0371 427.7139 -1119.2432 c
427.7139 -1116.6348 426.3892 -1113.8945 423.7764 -1111.1055 C
420.5542 -1108.0732 417.3315 -1105.0508 414.1099 -1102.0342 C
410.4648 -1098.5449 407.8467 -1095.4209 406.3237 -1092.7266 c
404.6641 -1089.6641 403.8257 -1086.3574 403.8257 -1082.8848 c
403.8257 -1076.6201 406.1357 -1071.9307 410.6929 -1068.9883 c
413.5127 -1067.2207 417.0371 -1066.4727 421.1748 -1066.7764 c
425.1421 -1067.0664 428.5957 -1068.1709 431.4419 -1070.04 c
433.6704 -1071.502 435.4946 -1073.4746 436.8652 -1075.8926 c
438.2275 -1078.2949 439.0581 -1081.0352 439.334 -1084.0273 C
439.3496 -1084.1982 439.3657 -1084.3672 439.3813 -1084.5371 C
435.5342 -1084.8604 431.687 -1085.2031 427.8403 -1085.5625 C
427.8184 -1085.3672 427.7969 -1085.1729 427.7749 -1084.9775 C
427.481 -1082.3506 426.6733 -1080.2432 425.374 -1078.7148 c
424.4756 -1077.6602 423.1963 -1077.0859 421.4634 -1076.9629 c
419.6533 -1076.833 418.3169 -1077.459 417.3789 -1078.873 c
416.5923 -1080.043 416.1948 -1081.5693 416.1948 -1083.4102 c
416.1948 -1086.3203 417.584 -1089.4268 420.3237 -1092.6553 c
421.376 -1093.9063 422.98 -1095.4238 425.0938 -1097.1738 c
427.6382 -1099.3076 429.3438 -1100.8252 430.1655 -1101.6777 c
432.874 -1104.3711 435.0044 -1107.041 436.4873 -1109.5967 c
437.187 -1110.7949 437.7612 -1111.915 438.1938 -1112.9229 c
439.2568 -1115.4316 439.8159 -1117.6895 439.8564 -1119.6299 c
439.9351 -1124.3857 438.5723 -1128.4014 435.8086 -1131.5859 c
433.9761 -1133.7656 431.356 -1135.2441 428.0249 -1135.9824 c
426.252 -1136.377 424.1602 -1136.5078 421.8096 -1136.3691 C
421.8096 -1136.3691 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 128) 335.772 -1086.8379 -28.7289 120.0225 1 0 0 0.94 2.4004 497.5831 Bg
105.2482 -54.2293 -57.6907 -98.9333 338.1724 -1087.8623 Bm
f0 BB
453.2344 -1137.7949 m
453.2344 -1119.0391 453.2344 -1100.2803 453.2344 -1081.5244 C
449.3667 -1081.1553 445.4995 -1080.8037 441.6323 -1080.4697 C
441.6323 -1076.7422 441.6323 -1073.0156 441.6323 -1069.2881 C
453.3564 -1070.3311 465.0825 -1071.5303 476.8062 -1072.8838 C
476.8062 -1076.582 476.8062 -1080.2803 476.8062 -1083.9795 C
472.9585 -1083.5439 469.1104 -1083.126 465.2622 -1082.7236 C
465.2622 -1101.4316 465.2622 -1120.1387 465.2622 -1138.8467 C
461.2529 -1138.4785 457.2437 -1138.1289 453.2344 -1137.7949 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 128) 335.7715 -1086.8379 -28.7289 120.0227 1 0 0 0.94 2.4004 497.5831 Bg
105.2484 -54.2294 -57.6908 -98.9335 338.1719 -1087.8623 Bm
f0 BB
UU/BBAccumRotation (0.000000) XT
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
