%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.0
%%For: (User) ()
%%Title: (Room of the artist.eps)
%%CreationDate: 1/1/2010 9:43 PM
%%BoundingBox: 0 0 6001 5000
%%HiResBoundingBox: 0 0 6000.001 5000
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([\721\756\742\754\745\771\745\755\750\745])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 3000.5 2499.5 3000.5 2499.5
%AI3_TileBox: 2604 2212 3396 2788
%AI3_DocumentPreview: Header
%AI5_ArtSize: 6000 5000
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 11
%AI8_OpenToView: -2527.5327 5676.0029 0.1667 1876 1091 18 1 0 44 79 0 0
%AI5_OpenViewLayers: 77777777777
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 108 8
%%BeginData: 15818 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFD1DFFA8A7A7FD7CFFA87C75A0A7FD7BFFCA7CA09F
%CAFD7BFFA8A09F9FA1FD7CFF7CA09FC9FD7BFFA8A09FA0A0FD7CFF7CA09F
%A7FD7CFFA075A0A0FD7CFF7CA0A0A0FD7CFFA175A0A0FD7CFFA1A09FA0CF
%FD7BFFA775A075CFFD7BFFA7A0A0A0CAFD7BFFA875A075CAFD7BFFA8A0A0
%A0A7FD7BFFCA75A075A7FD44FFA8FD36FFCAA0A0A0A1FD44FFAFFD37FF75
%A09FA7FD43FFA859FD37FFA09FA0A0FD43FF7D83AFFD36FF7CA075A0FD42
%FFAF7D7CCAFD36FFA19FA0A0FD43FF52A7A7FD36FF7C9F7BA0CAFD31FFA8
%FD0FFF7D76A1A7CAFFCACAFD32FFA775A09FFD32FFA954FD0EFF5251C9A7
%FFFFCA93FD32FFA1A09FA0A8FD31FF7D0385FD08FFCFCAFFFFAF2E8484A8
%A8FF768DCAFD31FFCA7CA09FCACFCFCFFD2EFFA828A9FD08FFA6CFFFFFA8
%60678B8BFFFFA19ACAFD30FFA775FD05A09FA7FD2EFFA1A0A7FD07FFA89F
%CDFFFFAF358B60AFAFFF76A7A8FD30FFA1757BA6A0A07CA6A0FD2EFFA876
%C9A8FD06FFA87BCEFFFF84608B8B8BFFA876A0CAFD30FFA74B767CA0757C
%7BA0A8FFA8FD2BFF7D76A1C9CAFD05FF7D7DA1FFFFA8358B608BAFA84BA7
%A1FD08FF8383FD26FFA77575A6A0A076A6A0C9A0C8CAFD2AFF7D51A7A1CF
%FD05FF7D7CC9CFFF84608B8B8BFF76769AC9CAFD07FF32ADFD21FFA8A69F
%CAFFA851757CA67CA0A0A67B9F9FCFFD06FFA8FFFD05A8FD1DFF522F0730
%08FD05FF52A1A1CFFF84358B60AFAF938C8C8CBBFD06FF7D1089FD21FFCA
%9FC79FFFA87575A0A0A6A0A07CA7A0A1A1AFFD0BA8FD1EFF5407082A097F
%FFFFFF7D52A0C9A7FF8460668B8BFF93938CB5B5FD06FF7D7CCFFD1FFFA8
%FFA8A07BA0A8A8767D7DA77DFD0CA8FFA8FFA8FFA8A8A8FD1DFF5307072A
%087FFFFFFF7C7AA4A5CCCF84598B60AFAF938C8C8CB5CAFD04FFA851A7A7
%FD1AFFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA9FFA8FFA9FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FD1EFFA90730083131FFFFFFA5A5A4CCFEFF8460
%678BAFFF93B58CB5B5FD05FF527CA7CFFD14FFFD0CA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD1DFFA80707
%080831FFFFFFA57AA4A4CCCF84608B84AFFF938C8C8CB5FD04FF7D4B7CC9
%A7FD14FF7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD1DFF2930083109FFFFFF
%A5A5A4CCFEFF5A60678BAFFF93938CB5B5FD04FF582C5D82A7FD14FFA8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8FD1EFF2F0708080985FFFFA67AA4A4CCCF60
%608B84AFA8938C8C8CB5FD04FF1039163F3EFD14FF7DFFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FD1DFF542A08300985FFFFA5A5A4CCCCFF598B678BAFFF93
%938CB5B5FFFFFFAE3339393E3FFD14FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FD1EFF7E072A073155FFFFA5A4A4A4CCCF60608B84AFFF9A8C8C8CB5FFFF
%FFA81039163F64FD14FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD1FFFA8292A08
%0855FFFFA5A5A4CCCCFF598B608BAFFF93938CB5B5FFFFFF5E331639FA89
%FD14FFA8A8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FD1FFF0730073009FFFFA5A4A4
%A4CCA860608B84AFFF93688C8CB5CAFFFF58101616FA89FD14FFA8A8A8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FD20FF3007082A31A9FFA5A5A4CCCCFF598B66AFAF
%FF93938CB5B5FFFFFF3339163FFAFD15FFA8A8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FD1FFF2F29082A09A9FFA5A4A4A4CCA860608B84AFFF9368FC8CB5CAFF
%A8331016163FFD15FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD1EFF7E0730
%08315BFFA5A4A4CCCCAF598B67AFAFFF93938CB5B5FFFFAE1039163F63FD
%15FFA87DFFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FD1DFF7E0707080855CFA5A4
%A4A4CDA859608B84AFFF938C8C8CB5CAFF581016161689FD15FFA8A8A8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FD1FFF0730083131FFA5CCA4CCCDAF598B8BAF
%AFFF93938CB5FCFFFF831039163F89FD15FFA87DFFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8A8FD1FFF2907082A31A8A5A4A4A4CD8460608B8BFFFF9A8C8C8CB5CA
%FF33391639FAFD16FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD1FFF2F2A08
%3009A9A4CCA4CCCCAF598B60AFFFFF93938CB5FCFFFF331016393FFD16FF
%A87DA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FD20FF7E0708072B5AA5A4A4A4CC8460
%608B84FFFF9A688C8CB5CAAE1039103F3FFD16FFA8A8A8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FD1FFF84070830095BA4CCA4FECDAF608B8AAFFFFF9A938CB5
%FCFF833316393E88FD17FF7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD20FFAF0730
%073130A5A4A4A4CD8460608B8BFFFF9A688C93B5FF831016163F89FD16FF
%A8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD20FF2F08082A317BCCA4CCCD8560
%8B8BAFFFFF9A8C8CB5B5FF33391639FAAEFD17FF7DFFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FD1FFF292A0830087BA4A4A4CC5960608B8A7D7D998C8C8CB5
%CA331016163FAEFD17FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD20FF7E072A
%083158CCA4CC9E59608B8BAF265168938CB5FC511039163F3FFD18FF7DA8
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A8A8FD1FFF7D0708080953A4A4FEA42E60608B
%8451266E8C8C8CFC26101616FA64FD18FFA8A8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FD20FFCF7D5A082B29FEA4CC7A59608B8BAF4B5168938CB5FC2D103910
%577CFD18FF7DA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FD1FFFA8C9A7A87E7EA5
%A5FE7A2E60608B834B26688C8C8CFC2C57505120A1FD18FFA8A8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FD21FFA7CACACFCFFFFFFFA8AFA8AFA8A87C7C76A076
%A0757C75754A4AA1FD18FF7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD1FFFCF
%A7A7CAA8CFA8FFFFFFCAFFA8A8A1A8A1A17C7D767651754B5126A7FD18FF
%A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD21FFA7CAA7CFCAFFCFFFFFFFA8CFA8
%A8A1A77DA17C7C767651754A4AA7FD18FF7DFD04A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FD1FFFA8C9A7CAA7CFA8FFCAFFA8CAA8A8A1A77DA17C7C757651754A51
%4AA8FD18FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD21FFA7CAA7CFCAFFCFFF
%FFFFA8FFA8A8A1A7A1A17CA0767651754A51A8FD18FF7DA8A8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8A8A8FFA8A8A8FD20FFCAA7CAA7CFCAFFFFFFA8CFA8A8A7A77DA17C7C76
%7C51754A514AFD19FFA87DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA9FFA8FFA8CFA8CAA7A7A0A09FA0A8FFA8FD21FFA7CAA8CF
%A8FD05FFA8CFA8A8A7A77CA17C7C757C75754A75FD19FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8AFA8FFA8FFA8FFA8A8A7A7A0A09FA0999F749F98
%9F749F9FFFAFFD22FFCAA1CAA8CFA8FFFFFFA8CFA8A8A1A77DA17C7C7676
%51754B4A4BFD19FFA87DFFA8FFA8FFA8FFA8FFA9FFA9FFA9FFA8CFA7C9A0
%C9A0A0FD049F99FD0B9FCFFD23FFA8CACACFCAFD05FFCACFA8CAA7A77DA1
%7C7C757C75754A7CFD19FFA8A8A8FFA8FFA8FFA8FFA8CAA7A7A0A09F9F99
%9F999F989F999F999F9F9F999F999F999F989F999F9FFD24FFCFA1CAA8CF
%A8FFFFFFA8FFA8A8A1A77DA17C7C767651754B4A75FD1AFFA8FFA8FFA8FF
%A8FFAFA1999F9F9F99FD0B9F999F999F999F9F9F99C9C9CFCAFD17FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8CAA7CFCAFFCFFFFFFFA8CFA8A8A1A77DA1
%7C7C767651754A7CA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD
%05FFFD04A8FFA8AFA8A0759F999F999F999F999F999F989F999F9FA0A0C9
%A7CFA79F7575A8FD17FFA8CFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8CAA7CA
%A7CFA8FFCAFFA8CAA8A8A1A77DA17C7C757651754A4A76FFA8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8FD07FFA8FD05FF75759FC29F9F99FD06
%9FC9C9CFCFFFCFFFA8CAA7C9759F75CAFD18FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8CAA7CFCAFFCFFFFFFFA8FFA8A8A1A7A1A17CA0767651754A
%A1FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0DFFA0749F99A0
%A0A7A7CF7C7575A0A7A7A0A07BA075A0759F759F7575A0FD15FFA8A8A8FF
%A8CAA8FFA8CAA8FFA8CAA8FF9CB996C9A7CAA7CFCAFFFFFFA8CFA8A8A7A7
%7DA17C7C767C51754A4B7CFFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FF
%A8CAFD0DFFA79F759F7CA7A1A17CA075A0759F759F75A09FA075A09FA075
%A075A0FD14FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFBFBEA0CAA8CF
%A8FD05FFA8CFA8A8A7A77CA17C7C757C75754AA7FFFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FD0DFFA7749F7599759F759F75A0759F759F75
%9F759F759F759F759F759975FD13FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A7A1CAA8CFA8FFFFFFA8CFA8A8A1A77DA17C7C767651754A
%4A7DFFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FD0EFFA19F759F75
%A09FA07BA09FA09F9F9FA09FA0A0A7A1CAA7CFA8A0759FA8FD13FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFCACFCAFD05FFCACFA8CAA7
%A77DA17C7C757C75754AA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FD0DFFA1749F759F759F759F759F759FA1CAA8CFCAFD07FF759F74A7
%FD10FFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA7CAA8
%CFA8FFFFFFA8FFA8A8A1A77DA17C7C767651754B4B9BCBA8AEA8FFA8CFA8
%FFA8CAA8FFA8CAA8FFA8CAA8FD0EFFA199759FA0C9A7CFCFA7757CA1FD0C
%FFA1759FA0FD11FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8CAA7CFCAFFCFFFFFFFA8CFA8A8A1A77DA17C7C767651754BB8B9B9BFC5
%A2FFA8FFAEFFA8FFA8FFA8FFA8FFA8FFA8FD0DFFA1757575CAFD06FFA8FD
%0DFFA17575A0CFFD0DFFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA7CAA7CFA8FFCAFFA8CAA8A8A1A77DA17C7C757651754A75
%6B906C9690B990BF9CC5A2CBA8AEA8FFA8A8A8FFA8A8FD0DFFA09F75A0CA
%FD15FF7B9F75CFFD0EFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8CFA7CFCAFFCFFFFFFFA8FFA8A8A1A7A1A17CA0767651754B71
%719690966C9696B996B9B9BFBECBA8FFA8FFA8FFA8FD0DFFA0759975FD17
%FF7599A8FD0BFFA8A8A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8
%FFA8CAA8FFA8CAA7CFCAFFFFFFA8CFA8A8A7A77DA17C7C767C51754A7577
%7146716B716B966C966B96909696CAA8CAA8FFA8CAFD0DFF759F75A0FD18
%FFA8FD0BFFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8CFA7CFA8FD05FFA8CFA8A8A7A77CA17C7C757C757575FFA8A87D
%A2777146716B966B966C969CFFA8FFA8FFA8FD0CFFA8757575A0FD23FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A9A7
%CAA8CFA8FFFFFFA8CFA8A8A1A77DA17C7C767651754A7CA8FFA8FFA8FFA8
%A877774C4D467171CAA8FFA8A8A8FD0EFF7599A0FD25FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCACFCAFD05FFCA
%CFA8CAA7A77DA17C7C757C75757CFFA8FFA8FFA8FFA8FFFFFFA8A877A1A8
%FFA8FFA8FFA8FD0DFFA77CFD23FFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CA
%A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8FFA8CAA8CFA8FFFFFFA8FFA8A8A1A7
%7DA17C7C767651754A7DA8FFA8CAA8FFA8CAA8FFA8FFA8FFA8A8A8FFA8CA
%A8FD34FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8CFA7CFCAFFCFFFFFFFA8CFA8A8A1A77DA17C7C767651757DFF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD30FFA8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8CA
%A7CFA8FFCAFFA8CAA8A8A1A77DA17C7C757651754AA1A8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8FD31FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA7CFCAFFCFFFFFFFA8
%FFA8A8A1A7A1A17CA076765175A1FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FD2EFFCFA8A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA7CFCAFFFFFFA8CFA8A8A7A77D
%A17C7C767C51754AA8A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8
%CAFD2FFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8CFA8FD05FFA8CFA8A8A7A77CA17C7C757C5175
%A7FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD2CFFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8CAA7CFA8FFFFFFA8CFA8A8A1A77DA17C7C767651754BA8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FD2EFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8CFCAFD05FFCACFA8CAA7A77DA17C7C757C5175A8FFA8FFA8FFA9FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FD2AFFA8FFA8CAA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8CFA8CF
%A8FFFFFFA8FFA8A8A1A77DA17C7C7676517551A9A9FFA8CAA8CAA6C9A8FF
%A8CFA8FFA8FFA8FFA8CAA8FD2CFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFCAFFCFFF
%FFFFA8CFA8A8A1A77DA1767D7676517CC9C9C8C8C7C7C0C6C1C9A7CAA7C9
%C8C9A7FFA8FFA8FFA8FD28FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8CAA7CFA8FF
%FFFFA8FFA8A8A1A77CA17B9F9EC19EC0C0C69EC19EC19E9F7A9FA0A7A0A7
%9F9E9FFD04A8FFA8A8FD29FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FD04FF
%CFC9C9C8C7C1C7C0C7C0C7C1C79FC79F9F9E9F9E9E9E9F9EA77CA1A1A7A8
%FFA9FFA8FFA8FFA8FD27FFA8A8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FF
%A8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8FFA8FFA8AFA8FFA8CAA7C9A6C8
%C1C7C0C69EC79E9F9E9F9E9E749F749E749E9E9F749F74757475517D7DFF
%A8FFA8FFA8CAA8FFA8CAFD27FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA9FFA8CFA7CEC8C8C7C7C0C7C0
%C7C0C19E9F9F9F7A9F9E9E9E9F9E9F7A9F757B747550755075757C7CA8A8
%FFA8FFA8FFA8FFA8FFA8FFA8FD24FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8CAA7C9A6C89FC7C0C69EC79E
%9F9E9F9E9E749E749E749E749F749F747550754A504A75517676A17DA8A8
%FFA8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FD26FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8C8C1C7C1C79EC79F9F9E
%9F9E9F9E9E9E9F9E9F9F9F747B75754A755175757C7CA7A7CFA8FFA8FFFF
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD22FFA8FFA8CAA8FFA8
%CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8FFA8C99F9F9E
%9F7A9E749E9E9E749F7A9F747574744A755075517C7CA17DA8A8FFA8FFA8
%FFA8FFA8FFA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FFA8CAA8FD24FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFC7C79E9E9E9F9F9F747B75754A755175517C7CA7A1CFA8FFA8FFFFFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FD20FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8C97B7550744A754A75517C7CA17DA8A8FFA8FFA8
%FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8FD21FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A0757C7CA8A7CFA8FFFFFF
%A9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD1FFFA8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8FD
%1FFFA8FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF
%CAFFA8FFCAFFA8FFCAFD7FFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\317\345\360\345\365\356\344") (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (\310\355\361\362\360\363\354\345\355\362\340\360\350\351 Adobe \357\356 \360\340\341\356\362\345 \361 \361\350\354\342\356\353\340\354\350) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\322\360\340\361\361\350\360\356\342\352\340) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\312\340\353\353\350\343\360\340\364\350\367\345\361\352\340\377 \352\350\361\362\374") (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\321\356\361\362\340\342\355\373\345 \364\350\343\363\360\373 Adobe) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe Envelope) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\373\361\362\360\340\377 \347\340\353\350\342\352\340") (Live Paint.aip)
%AI5_End_NonPrinting--
9 Bn
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
9FA0A1A1A2A2A3A3A4A4A5A6A6A6A7A7A8A9AAAAABABACACACADADAEAEAFAFB0B0B1B1B2B2B3B3B4
B4B5B5B6B6B7B7B8B9B9BABABABBBBBCBDBDBEBEBFC1C2C2C3C4C4C5C6C6C7C7C8C8C8C9C9CACBCB
CCCCCDCDCECECFCFD0D0D0D0D1D1D1D2D2D3D3D4D4D5D5D6D6D6D7D7D7D7D8D8D8D8D8D8D8D9D9D9
D9D9D9DADADADADBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDBDBDBDADADADAD9
DAD9D9D8D8D7D7D6D6D6D5D5D5D4D3D3D2D2D2D2D1D1D1D0D0CFCFCECECDCCCBCBCACAC9C8C6C5C5
C4C4C3C3C2C0BFBEBDBCBBBBBAB8B7B6B6B5B5B4B5B3B3B2B2
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000102
03040607090A0B0D0F101213151618191A1C1D1E20212224252628292A2B2C2E2F30313233343637
38393A3B3C3D3E3F414243444545464748494A4B4C4D4E4F5051525253545555565758595A5B5C5D
5D5E5F60616263646565666768696A6B6C6C6D6E6E6F7071717273747576777878797A7B7C7E7F80
81828384858788898B8C8E8F929496989A9C9EA0A3A6A8AAAC
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFAF7F5F3F1F0EEEBE8E6E3E1DE
DDDBD9D5D4D1CFCCCAC8C6C4C0BDBBB9B7B5B3B0ACAAA7A5A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000010101010102020202030304040405050506070808090A0B0C0D0D0F1011121314151617
18191B1C1D1F20212224252628292A2C2D2E303133343638393B3D3E404143444648494B4D4E5051
535557585A5C5E6061636567696B6D6F71727476787A7C7E80828486888A8C8E90929496989A9B9D
9FA1A3A5A6A8AAABADAEAFB1B2B3B5B6B7B8B9BABABABBBCBD
>
<
060606060707070707070707080808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B
0B0B0B0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010101010
10101111111111111112121212121212121313131313131313141414141414141415151515151515
161616161616161617171717171717171818181818181819191919191919191A1A1A1A1A1A1A1A1B
1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020
20202020202121212121212121222222222222222223232323
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
060606060607070707070707070808080808080808080909090909090909090A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F
0F0F1010101010101010101111111111111111111212121212121212131313131313131313141414
14141414141515151515151515151616161616161616161717171717171717181818181818181818
19191919191919191A1A1A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1C1D1D1D1D1D1D
1D1D1D1E1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F1F2020202020
>
4 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
0.623529 0 1 0 0.023529 1 0.023529 2 50 0 %_BS
%_0.623529 0 1 0 0.023529 1 0.023529 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 11)
(Unnamed gradient 11) 0 3 Bd
[
<
00000001010202020304040405050606070808090A0A0B0B0C0D0D0E101011101112121314141515
161717191A1A1B1B1C1D1D1E1F1F202121222223242425272729292A2B2B2C2D2D2E2E2F30303133
32343335363637383839393B3C3C3D3E3E3F3F41424243444445464647474849494B4C4C4D4D4E4F
4E4F50505151515252535454545455565657585758585959595A5B5A5B5B5C5C5C5D5D5D5E5E5E5F
5E5F605F606160616161626162636262626263626363626363636463646464646364656465656565
65656666666666666766666666676667676667666667666767666766676767676767676767676767
676767676868676869686968686A696A
>
<
0000000000010203020304040505050707080809090B0C0B0C0D0F100F1011131313141515171617
18191A1A1B1C1D1E1D1E20202121222224252525262829282A2B2D2E2D2F2F303231323334363536
37383A393A3B3C3D3D3E4041424142434546454647494A494A4B4C4E4D4F4F515252535455565657
58595A5A5A5C5D5D5D5E5F60616162626364646566676868696A6B6C6B6C6D6E6F6E6F7071727273
747576757677787979797A7C7D7C7D7E7F807F818182848384858687868788898B8A8B8C8D8E8E8E
90919191929394959496979899989A9B9B9D9C9E9E9FA1A0A1A2A3A4A4A4A6A7A8A7A8AAABACABAC
ADAFAFAFB0B0B2B3B1B3B4B5B6B4B6B6
>
<
000000010102030304050506070809090A0A0C0D0D0E0F111213131416161718191B1B1C1D1D1F20
2121222425262627292A2A2B2C2E2F2F3031333435363738393B3C3D3E3F4041424445464748494A
4B4C4D4F5051525354555657585A5B5C5D5E5F6061626365666768696B6C6D6E6F71727375767878
797A7B7D7E7F80818384858687898A8B8C8D8F9091929394959697989A9B9C9D9EA0A1A2A3A4A6A7
A8A9AAACADAEAFB0B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C2C3C4C5C6C8C9CACBCCCECFD1D2D3D5D6
D7D8D9DCDDDEDFE1E3E5E6E8E9EBEDEEEFF1F3F5F6F6F8FAFBFCFDFEFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000101010101010102020202
02030303030404050506060607070808090A0A0B0C0C0D0E0E0F1010111112131415151617181819
1A1B1C1D1E1F20212122232426262728292B2B2C2D2F2F3031323435353738393A3B3C3D3E404041
424445454748494B4B4C4E4F5051525355565657595A5B5C5D5E5F6061636465676769696B6D6D6E
70717373747677797A7A7C7D7F808082
>
<
FFFEFEFDFCFCFBFBFAF9F9F8F7F7F6F6F5F4F4F3F2F2F1F1F0EFEFEEEDEDECECEBEAEAE9E8E8E7E7
E6E5E5E4E3E3E2E2E1E0E0DFDEDEDDDCDCDBDBDAD9D9D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECD
CDCCCCCBCACAC9C8C8C7C7C6C5C5C4C3C3C2C2C1C0C0BFBEBEBDBCBCBBBBBAB9B9B8B7B7B6B6B5B4
B4B3B2B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A7A6A5A5A4A3A3A2A2A1A0A09F9E9E9D9C9C9B
9B9A999998979796969594949392929191908F8F8E8D8D8C8C8B8A8A898888878786858584838382
828180807F7E7E7D7C7C7B7B7A797978777776767574747372727171706F6F6E6D6D6C6C6B6A6A69
6868676766656564636362626160605F
>
<
FFFEFDFDFCFBFAF9F9F8F7F6F5F5F4F3F2F1F1F0EFEEEDEDECEBEAE9E9E8E7E6E5E5E4E3E2E1E1E0
DFDEDDDDDCDBDAD9D9D8D7D6D5D5D4D3D2D1D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0
BFBEBDBDBCBBBAB9B9B8B7B6B5B5B4B3B2B1B1B0AFAEADADACABAAA9A9A8A7A6A5A5A4A3A2A1A1A0
9F9E9D9D9C9B9A999998979695959493929191908F8E8D8D8C8B8A89898887868585848382818180
7F7E7D7D7C7B7A797978777675757473727171706F6E6D6D6C6B6A69696867666565646362616160
5F5E5D5D5C5B5A595958575655555453525151504F4E4D4D4C4B4A49494847464545444342414140
3F3E3D3D3C3B3A393938373635353433
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
<
23222121212020201F1F1F1E1E1D1C1C1C1B1B1B1A1A1A1818181717171616161515151414141313
131212121111111010100F0F0E0E0E0D0D0D0C0C0C0B0B0B0A0A0A09090908080807070605050504
04040303030202030202020202020101010000000000
>
<
3A383937373735353433333232302F2F2E2E2D2B2C2B292A29292827272626252424222322202120
1E1F1E1E1D1C1C1B1B1A1919191717161715151513141312121110100F0F0E0D0D0C0C0B0A0A0909
08070806050605050404040303020202010000000000
>
<
6C6B6969676665636262605F5D5C5B5958565555535251504F4E4D4C4A4948474644444241403E3D
3D3B3A39383736353333322F2E2D2C2B29292826262423222120201E1D1C1B1A1917161514131211
10100E0D0D0B0B090908070605050403020201000000
>
0
<
DDDDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E4E4E4E5E5E5E6E6E6E7E7E7E8E8E8E9E9E9EAEA
EAEBEBEBECECECEDEDEDEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F8
F8F8F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFEFEFEFFFF
>
<
C1C2C2C3C3C4C5C5C6C7C7C8C8C9CACACBCBCCCDCDCECFCFD0D0D1D2D2D3D3D4D5D5D6D6D7D8D8D9
DADADBDBDCDDDDDEDEDFE0E0E1E2E2E3E3E4E5E5E6E6E7E8E8E9EAEAEBEBECEDEDEEEEEFF0F0F1F1
F2F3F3F4F5F5F6F6F7F8F8F9F9FAFBFBFCFDFDFEFEFF
>
<
999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0
C1C2C3C4C5C6C7C8C9CACBCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9
EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
[
0.415686 0.713725 1 0.509804 0.372549 0.2 0 2 50 100 %_BS
%_0.415686 0.713725 1 0.509804 0.372549 0.2 0 2 50 100 Bs
0 0 0 0 1 1 1 2 50 29.6703 %_BS
%_0 0 0 0 1 1 1 2 50 29.6703 Bs
0.137255 0.227451 0.423529 0 0.866667 0.756863 0.6 2 50 0 %_BS
%_0.137255 0.227451 0.423529 0 0.866667 0.756863 0.6 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 12)
(Unnamed gradient 12) 0 2 Bd
[
<
0101030304050607080A0B0C0D0E0F10121314161718191A1B1C1D1F20212122232426262728292A
2B2C2D2E2F2F303132333334353637373839393A3B3C3D3D3E3F4041414243444445454647474848
494A4A4B4C4C4D4E4E4F4F5051515253545454555657575859595A5A5B5C5C5D5D5D5E5F60606061
616263636464656566676768686869696A6B6B6C6C6D6D6E6F6F7070707272737373757577777778
7879797B7A7B7C7D7E7F7F8080828282838385858687888A8A8A8C8C8E8F8F91919394949697999A
9B9D9EA0A1A2A4A6A8A9AAADAFB0B2
>
<
6E6F6F7070717272737273757475757677777878797A797A7A7B7C7B7C7C7D7E7E7F7E7F80808180
81828283828384848584858686868687868788888988898A898A8A8B8C8B8C8B8C8D8C8D8D8E8E8E
8F8E8F908F908F909190919192939293929394939493949594959495969696969798979897989998
9998999A9A9B9A9B9B9B9B9B9C9C9C9D9C9C9D9D9D9D9D9E9D9E9D9E9F9E9F9F9FA09F9F9E9FA09F
A09FA09FA0A1A0A1A0A0A1A0A1A0A1A2A1A1A1A1A2A1A1A0A1A2A1A2A1A2A3A2A2A1A2A3A2A3A3A4
A5A4A5A4A6A7A6A8A7A9AAAAACABAC
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBF7F7
F5F5F4F5F3F1F2EEEEEBE8E6E4E4E3E2E2E0DEDCDAD9D7D6D3D1D1D0D0CECCC9C7C7C4C2C2C0BEBC
BABAB8B8B3B1B1AEAEACAAA7A5A5A3
>
<
00000000000000000000000000000000000000000001010101010101020202020203030304040404
050505060607080809090A0A0B0B0C0D0D0E0F0F101112121314151516171818191A1B1C1C1D1E1F
20212223242525262828292A2B2C2D2E2F3032323434363738393A3B3C3D3E3F4042434445464748
4A4A4C4D4E4F50525354555658595A5B5C5E5F60626264666768696B6D6D6F707273747677797A7B
7D7E80818284858787898B8C8E8F919393959597999A9C9C9EA0A1A3A3A5A7A7A9AAACADAEAFAFB1
B2B3B4B5B6B7B7B8B9BABBBABBBCBD
>
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A29282726252423
>
<
9F9E9E9D9D9C9B9B9A9A999898979796959594949392929191908F8F8E8E8D8C8C8B8B8A89898888
878686858584838382828180807F7F7E7E7D7C7C7B7B7A7979787877767675757473737272717070
6F6F6E6D6D6C6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858
575756555554545352525151504F4F4E4E4D4C4C4B4B4A4949484847464645454443434242414040
3F3F3E3E3D3C3C3B3B3A39393838373636353534333332323130302F2F2E2D2D2C2C2B2A2A292928
27272626252424232322212120201F
>
<
00000000010101010101010202020202020303030303030304040404040404050505050505060606
0606060607070707070707080808080808090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0C0C0C
0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0F0F0F0F0F0F0F10101010101010111111111111111212
12121212131313131313131414141414141415151515151516161616161616171717171717171818
18181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E
1E1E1E1E1F1F1F1F1F1F1F20202020
>
4 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
0.003922 0.431373 1 0 0.976471 0.623529 0 2 50 0 %_BS
%_0.003922 0.431373 1 0 0.976471 0.623529 0 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 17)
(Unnamed gradient 17) 0 2 Bd
[
<
232425262728292A2B2C2E2F303132333435363738393A3B3C3D3E3F4041424345464748494A4B4C
4D4E4E4F50515253545455565758595A5B5B5C5D5E5F606161626364646566676768696A6B6B6C6D
6D6E6F70707172737474757677787879797A7B7C7C7D7E7E7F808081828282838384858586868788
88898A8A8A8B8C8C8E8E8E8F8F9090919293939494949595969797989999999A9B9B9C9C9D9E9E9F
A0A0A1A1A2A3A3A4A5A5A6A7A7A8A9AAABABACADADAEAFB0B0B2B2
>
<
3A3B3C3D3C3D3E3F40414243424344454647484948494A4B4C4D4E4F4F4F50515253545455565758
595A5B5A5B5C5D5D5E5F6060606162636465666566676868696A6A6A6B6C6D6E6F706F7071727274
7475747576777778797A797A7A7C7C7D7E7D7E7F8081818283828283848585868786878789898A8B
8C8A8C8C8D8E8F8F8F8F9091919293949394949596969898979898999A9B9B9C9B9B9D9D9E9F9F9E
9F9FA1A1A2A3A3A2A3A4A4A6A6A6A8A6A8A8A9AAAAABACAAABACAC
>
<
6C6D6C6D6F6F70717072737374747576767778787A7B7A7C7D7C7D7F7F8081808181828484858685
868887898A898A8B8B8C8D8D8E8D8E8F8F9091919293929394939596959697959695979997989A98
999B9B9C9D9C9D9D9C9D9F9E9F9E9FA09FA1A2A1A2A2A1A2A3A3A4A4A3A4A5A3A4A6A5A6A5A6A7A5
A6A8A7A7A8A7A7A8A8A9A9A8A9A9A8A9A9A9AAA8A9AAA8A9ABA9AAAAA8A9AAA8AAABA9AAA8A8A9A8
A9A9A7A8A8A6A7A9A7A7A8A6A6A7A5A7A5A5A6A4A4A4A2A5A5A3A3
>
<
00000000000000000000000000000000000000000000000000000001010101010101020202030303
03040404050506060707080808090A0B0B0C0D0D0E0F0F1011121213141516161718191A1B1C1D1E
1F2021222324252727292A2A2C2D2E2F30313334353637393A3B3C3E3F404243454647494A4B4D4E
505152545657595B5B5D5F606264656767696B6C6E7172747576797B7C7E8082838586898A8C8E8F
91939497999A9C9E9FA1A3A4A6A9AAABACAEB0B1B3B5B7B8BABBBD
>
<
DDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6
B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E
8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766
6564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E
3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
C1C0BFBEBEBDBCBBBAB9B8B7B7B6B5B4B3B2B1B0B0AFAEADACABAAA9A9A8A7A6A5A4A3A3A2A1A09F
9E9D9C9C9B9A99989796959594939291908F8E8E8D8C8B8A8988888786858483828181807F7E7D7C
7B7A7A79787776757473737271706F6E6D6D6C6B6A69686766666564636261605F5F5E5D5C5B5A59
58585756555453525251504F4E4D4C4B4B4A49484746454444434241403F3E3D3D3C3B3A39383737
36353433323130302F2E2D2C2B2A2929282726252423222221201F
>
<
9998989796969594949392929191908F8F8E8D8D8C8B8B8A89898887878685858484838282818080
7F7E7E7D7C7C7B7A7A7978787777767575747373727171706F6F6E6D6D6C6B6B6A6A696868676666
6564646362626160605F5E5E5D5D5C5B5B5A5959585757565555545353525151504F4F4E4E4D4C4C
4B4A4A4948484746464544444342424141403F3F3E3D3D3C3B3B3A39393837373635353434333232
3130302F2E2E2D2C2C2B2A2A292828272726252524232322212120
>
4 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
0.137255 0.227451 0.423529 0 0.866667 0.756863 0.6 2 50 0 %_BS
%_0.137255 0.227451 0.423529 0 0.866667 0.756863 0.6 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2)
(Unnamed gradient 2) 0 2 Bd
[
<
373838393B3C3D3E3E40414142434445464747484A4A4B4C4D4E4F4F515252535555565758595A5B
5C5E5E5F6061616263646566666769696A6B6B6C6E6E6F7070717273747575777879797A7B7C7D7E
7F8082828384848687878889898B8C8C8D8E8E8F909292939494959696979898999A9A9B9C9C9D9E
9E9F9F9FA0A1A1A2A3A4A4A5A6A5A6A7A7A8A9A9AAABAAABACACACADADADAEAEAFAFB0B0B0B1B1B2
B2B2B3B3B3B4B4B4B4B5B4B5B6B5B5B6B5B6B6B6B6B7B7B6B7B7B7B7B8B7B7B8B7B7B8B6B7B7B6B7
B7B6B6B7B5B6B6B5B5B5B6B4B5B5B4B4B5B3B4B4B2B3B3B2B2
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000001
0203040505060808090A0B0C0E0F1011121314151718191A1C1D1E1F20212324252628292A2C2D2E
30313334363738393A3C3D3E3F4041434445464747484A4B4C4D4E4F505152535455565758595A5B
5C5D5E5F606162636465666768696A6B6C6D6E6F6F70717273747576777878797A7B7C7D7D7E7F80
81828383858586878888898A8B8C8D8D8E8F9091919292939494959696979898999A9B9C9C9D9E9E
9FA0A0A0A1A2A2A3A3A4A4A5A5A6A7A7A8A9A9A9AAABABACAC
>
<
0C0D0D0E0F10111212131414151616171819191A1B1B1C1D1D1E1F20202122222324252626272829
2A2B2C2D2E2F2F3031323233343536363738393A3A3B3C3D3E3F4040414243444546464748494A4B
4D4E4F5051525354545556575859595A5B5C5C5D5E5F6060616263636465666766676768696A6A6B
6C6C6D6E6F6F70707172737374757676777878797A7A7B7C7C7D7E7E7F7F80818182828384858586
8787888889898A8B8B8C8D8D8E8E8F8F9090909191929393949495959696979797989899999A9A9B
9B9B9C9C9D9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000101010101010101020202020303030404040505060607080808090A0A0B0C0D0E
0E0F101112131415161718191A1B1C1D1F20212224252627292A2B2D2E303132343537383A3B3D3E
404143444648494B4C4E5052535557595A5C5E60626466686A6C6E70727376787A7C7E8082848689
8B8D8F929496989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBD
>
<
BBBABAB9B8B8B7B6B6B5B4B4B3B2B2B1B0AFAFAEADADACABABAAA9A9A8A7A7A6A5A5A4A3A3A2A1A1
A09F9F9E9D9C9C9B9A9A9998989796969594949392929190908F8E8E8D8C8C8B8A89898887878685
85848383828181807F7F7E7D7D7C7B7B7A7979787776767574747372727170706F6E6E6D6C6C6B6A
6A69686867666665646363626161605F5F5E5D5D5C5B5B5A5959585757565555545352525150504F
4E4E4D4C4C4B4A4A49484847464645444443424241403F3F3E3D3D3C3B3B3A393938373736353534
3333323131302F2F2E2D2C2C2B2A2A29282827262625242423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
0.215686 0 0.047059 0 0.733333 1 1 2 50 0 %_BS
%_0.215686 0 0.047059 0 0.733333 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 21)
(Unnamed gradient 21) 0 2 Bd
[
<
00000000000000000000000000000000000001020304050608090A0B0C0D0E0F1011121314151617
18191A1B1C1D1E1F2020212223232425262728292A2A2B2C2D2D2E2F2F3030313232333435353637
37383839393A3A3B3B3C3C3C3D3D3E3E3E3F3F40404141424343444445454646464747484849494A
4A4B4B4B4C4C4D4D4E4E4F4F505051515252535353545455555657575858595A5A5B5B5C5C5D5E5E
5F60616263646566676768696A6B6C6D6E6F7071737475767778797B7C7E7F8182838587898A8C8D
8F91929496989A9B9D9FA1A2A4A4A6A8AAACAEB0B2
>
<
F5F5F5F6F6F7F7F8F8F9F9F9FAFAFAFBFBFBFCFCFCFCFCFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFEFEFEFEFDFDFDFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F8F8F8F7F7
F7F6F6F6F6F5F5F4F4F3F3F2F1F1F0F0EFEFEFEEEEEEEDEDECEBEBEAE9E9E8E7E7E6E5E4E3E2E2E1
E0E0DFDFDEDDDDDCDBDAD9D8D7D6D5D4D4D3D2D1D0CFCFCECDCCCBCAC9C8C7C6C5C4C3C3C2C1C0BF
BEBDBCBBBAB9B9B8B7B6B6B5B4B2B1B0AFAFAEADAC
>
<
D7D8D9DADADBDCDCDFE0E0E0E1E1E1E2E3E3E4E5E5E6E7E9EAEAEBEBECECECEDEDEDEDEDEDEFEFEF
EFEFEFEFEFEFEFEFEFEFEEEEF1F1F0F0F0F0F0F0F0F0F0EFEFEEEEF0EFEFEEEEEDEDEDEEEEEEEEEE
EDF0EFEEEDEDECEBEAE9E8E7E6E5E4E3E5E4E4E3E3E3E3E3E3E3E2E1E1E0DFE1DFDEDDDCDAD9D8D8
D7D7D6D5D5D6D6D5D4D3D2D1D0CECDCBCBCAC9C8CAC9C9C8C7C6C6C5C4C3C2C1C0BFBEBFBEBDBCBC
BBBAB9B8B7B6B6B5B4B5B4B3B2B1B1B0AFAEAEADACACABAAACACABAAA9A9A8A7A6A5A5A4A4A3A3A5
A5A4A4A4A3A3A3A3A2A2A2A1A1A3A3A3A3A3A3A3A3
>
<
00000000000000000000000000000000000000000000000001010101010101010102020202030303
0404040505050606070708090A0A0B0C0D0D0E0F1011121213141516171718191A1B1C1D1E1F2021
222324252627282A2B2C2D2E2F30323334353638393A3B3C3E3F40414244454647494A4B4D4E4F50
5253545557585A5B5C5E5F60626364666768696A6C6D6F70717374757778797B7C7D7F8182838586
87888A8B8C8D8F90919394969798999A9B9C9E9FA0A1A2A3A5A6A6A7A8A9AAABACADAEAEAFAFB0B2
B2B3B3B4B5B5B6B6B7B7B8B8B9BABBBBBBBCBCBCBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A29282726252423
>
0.121569
<
2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A292929292929292929292929292929282828282828282828282828282828272727272727272727
27272727272626262626262626262626262626262525252525252525252525252525252424242424
24242424242424242423232323232323232323232323232322222222222222222222222222222221
212121212121212121212121212020202020202020
>
4 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
0 0.960784 0.843137 0 1 0.121569 0.184314 2 50 0 %_BS
%_0 0.960784 0.843137 0 1 0.121569 0.184314 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3)
(Unnamed gradient 3) 0 3 Bd
[
<
858686878788898A8A8B8C8C8D8E8E8F9091919292939394959595969697979899999A9B9C9C9C9C
9D9D9D9FA0A1A1A1A2A2A2A3A3A5A5A5A6A6A6A7A7A7A8A9A9AAAAAAAAABABABACADADADADAEAEAE
AFAFB1B1B1B2B2
>
<
76777878797A7B7C7D7D7E7F80808182838384858586878789898A8B8B8C8D8D8E8F909191929293
9394949696969797989899999A9B9C9C9D9D9E9E9F9FA0A1A2A2A2A3A3A4A4A4A6A7A7A7A8A8A9A9
A9AAABABACACAC
>
<
85868788898788898A8B8C8D8D8E8F8E8E8F90909192929391929393949595969797969697989899
9A9A9B999A9A9B9C9C9D9D9E9E9D9D9E9E9F9FA0A0A1A19FA0A0A1A1A1A2A2A3A1A1A2A2A2A3A3A3
A4A4A2A2A2A3A3
>
<
2324262728292B2C2D2F303233353637383A3B3D3F4042444546484A4B4D4F5152545557585A5C5E
6062646567696B6D6F71737678787B7D7F818486888A8C8D90929497999B9DA0A1A3A5A7A9ABAEB0
B2B4B5B7B9BBBD
>
<
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A
29282726252423
>
<
7574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E
4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726
2524232221201F
>
<
6D6C6B6A6969686766656463626160605F5E5D5C5B5A59585857565554535251504F4F4E4D4C4B4A
49484747464544434241403F3E3E3D3C3B3A39383736353534333231302F2E2D2D2C2B2A29282726
25242423222120
>
4 %_Br
<
232425262728292A2B2C2D2E2F3132333435363738393A3B3C3D3F404142434445464748494A4C4D
4E4F4F5151525354555658595A5B5C5D5E5F60616263646565666768696A6B6C6C6D6E6F70717273
747576777879797B7B7D7E7E80808182838485
>
<
3A3B3C3B3C3D3E3E3E3F40414142434443444546474748494A494A4C4C4C4D4E4F504F5051535253
545556555657585758595A5B5A5B5C5D5C5D5E5F60606061626262636465656667686768696A696A
6B6C6D6C6D6E6F6F7071727272737475747576
>
<
6C6B6C6C6E6D6E6F706F6F7070717172727373747474757476767777787877787879797A7A7B7B7D
7C7B7C7D7E7D7E7E7F7E7D7E7E7F7F80808180808181828182828382838383848384848584858584
85848585868485858685848585868586868685
>
<
00000000000000000000000000000000000000000000000000000000000000010101010101020202
020203030303030304040505050606070707080809090A0B0C0C0C0D0E0E0F101011111213141414
1516171718191A1A1B1C1D1E1E1F2021212223
>
<
DDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6
B5B4B3B2B1B0AFAEADACAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D
8C8B8A898887868584838281807F7E7D7C7B7A
>
<
C1C0BFBFBEBDBCBCBBBAB9B8B8B7B6B5B5B4B3B2B1B1B0AFAEAEADACABABAAA9A8A7A7A6A5A4A4A3
A2A1A0A09F9E9D9D9C9B9A999998979696959493929291908F8F8E8D8C8B8B8A8988888786858584
83828181807F7E7E7D7C7B7A7A797877777675
>
<
999998989797969695959594949393929291919090908F8F8E8E8D8D8C8C8C8B8B8A8A8989888887
87878686858584848383838282818180807F7F7F7E7E7D7D7C7C7B7B7A7A7A797978787777767676
757574747373727271717170706F6F6E6E6D6D
>
4 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
0.521569 0.462745 0.521569 0.137255 0.478431 0.458824 0.427451 2 50 59.3407 %_BS
%_0.521569 0.462745 0.521569 0.137255 0.478431 0.458824 0.427451 2 50 59.3407 Bs
0.137255 0.227451 0.423529 0 0.866667 0.756863 0.6 2 50 0 %_BS
%_0.137255 0.227451 0.423529 0 0.866667 0.756863 0.6 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 5)
(Unnamed gradient 5) 0 3 Bd
[
<
717172737474757677777878797A7A7B7C7D7D7E7E7F7F808081818183838485868687878889898B
8B8C8E8F8F91919293939495969698989A9A9B9C9C9D9E9F9FA1A1A3A3A5A5A7A7A8A9AAABACADAE
AFB0B2B2
>
<
9FA09FA0A1A0A1A2A1A2A3A2A2A2A2A4A3A4A4A3A4A5A4A5A6A4A6A6A5A6A7A6A7A5A7A7A5A7A7A6
A7A8A6A7A8A7A8A9A8A8AAA8A9A8A9AAA9AAABA9AAABA9ABABAAABACABACACACACAAACACABABADAB
ACADACAC
>
<
9F9F9FA09FA19FA0A0A09FA1A2A1A2A1A2A1A2A2A2A1A3A1A2A4A2A3A3A4A2A4A3A5A3A4A6A4A5A4
A5A3A5A3A4A4A4A2A4A5A3A5A3A6A4A4A4A4A2A5A5A3A6A4A4A4A4A2A5A3A3A3A3A6A4A4A4A4A2A5
A2A3A3A3
>
<
484A4A4C4D4E4F515253545657585A5B5C5D5F606263656668696A6C6D6F707173747577797A7C7C
7F8082838686898A8B8D8F909193949697999A9B9E9FA0A1A3A4A6A7A9AAACACAEB0B1B3B3B5B6B7
B8BABBBD
>
<
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827
26252423
>
<
5554545352525150504F4E4E4D4D4C4B4B4A494948474746454544434342414140403F3E3E3D3C3C
3B3A3A3938383736363534343333323131302F2F2E2D2D2C2B2B2A29292827272626252424232222
2120201F
>
<
4D4C4C4B4B4A4A4949484847464645454444434342424141403F3F3E3E3D3D3C3C3B3B3A39393838
3737363635353434333232313130302F2F2E2E2D2C2C2B2B2A2A2929282827272625252424232322
22212120
>
4 %_Br
<
10111111121213131314151617161718181918191A1B1B1B1C1D1E1F1F2021212322242526272728
292A2B2B2C2D2E2F2F31323334343536373838393A3B3C3C3D3E3F40404142434443444546474748
48494A4A4B4C4D4E4E4F50515151525353545354555656565657585958595A5A5B5A5B5B5C5D5C5D
5D5E5F5E5E5F606060606161626162626363626363646564646566666566666768676869696A696A
6B6C6D6C6D6E6E6F6F7071
>
<
0000000000000000000000000000000000000000000000000001020203040505060809090A0B0D0E
0F10111213141617191A1B1C1D1E1F2021222425262728292B2C2D2E2F3031323335363738393A3B
3C3D3E4041424344464748494A4B4C4D4E4E50515152535455565758595A5B5C5D5F606161626464
656667696A6B6B6C6E6F707171737475767778797A7B7C7E7F8081818384858687898A8B8C8D8F90
919293959698999B9C9E9F
>
<
F6F5F3F2F1F1F0F0EFEEEEEEEFF0F2F3F5F6F7F9FAFCFCFDFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFBF9F8F6F5F6F5F5F4
F4F2F2EFEFEEECEBE7E6E4E3E2E0DFDEDDDBDAD7D6D5D3D2CFCFCCCBCAC7C6C4C3C0BFBEBBBAB7B6
B3B1AEADACA9A7A4A3A09F
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000010101010101
0102020202020303030404050506060607080809090A0A0B0B0C0D0E0E0F10111212131415161617
18191A1B1B1C1E1F1F202123242425262829292B2C2D2E2F303132333435363738393A3C3D3E3E3F
4041424243444546464748
>
<
FFFEFDFDFCFBFAF9F9F8F7F6F5F5F4F3F2F1F1F0EFEEEDEDECEBEAE9E9E8E7E6E5E5E4E3E2E1E1E0
DFDEDDDDDCDBDAD9D9D8D7D6D5D5D4D3D2D1D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0
BFBEBDBDBCBBBAB9B9B8B7B6B5B5B4B3B2B1B1B0AFAEADADACABAAA9A9A8A7A6A5A5A4A3A2A1A1A0
9F9E9D9D9C9B9A999998979695959493929191908F8E8D8D8C8B8A89898887868585848382818180
7F7E7D7D7C7B7A79797877
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A5958575655
>
<
0303040405050606060707080809090A0A0A0B0B0C0C0D0D0D0E0E0F0F1010101111121213131414
1415151616171717181819191A1A1B1B1B1C1C1D1D1E1E1E1F1F2020212121222223232424252525
2626272728282829292A2A2B2B2B2C2C2D2D2E2E2F2F2F3030313132323233333434353535363637
3738383939393A3A3B3B3C3C3C3D3D3E3E3F3F404040414142424343434444454546464647474848
49494A4A4A4B4B4C4C4D4D
>
4 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
0.443137 0.623529 0.623529 0.282353 0.466667 0.333333 0.301961 2 50 63.7363 %_BS
%_0.443137 0.623529 0.623529 0.282353 0.466667 0.333333 0.301961 2 50 63.7363 Bs
0.062745 0 0.964706 0 1 1 0.011765 2 50 0 %_BS
%_0.062745 0 0.964706 0 1 1 0.011765 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 8)
(Unnamed gradient 8) 0 2 Bd
[
<
DBDBDBDCDCDCDDDDDDDDDDDEDEDEDEDEDEDFDFDFDFDFDFE0E0E0E0E0E1E1E1E2E2E3E3E3E4E4E4E5
E5E6E6E6E7E7E7E8E8E9E9E9E9EAEAEAEBEBECECEDEDEDEEEFEFF0F1F1F2F3F4F5F6F7F8F9FAFBFC
FDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFEFCFBFAFAF9F8F6F5F4F2F1EFEEECEBE9E8E6E5E4E2DFDEDDDCDAD8
D7D5D2D0CECDCCCAC9C5C4C2C0BFBDBBBAB6B5B3B2
>
<
BCBCBCBDBDBDBEBEBEBFBFBFC0C0C1C1C2C2C2C2C3C3C3C4C4C5C6C6C6C7C7C7C8C8C8C9CACACBCB
CCCCCCCDCDCECFCFD0D0D1D1D2D2D3D3D4D5D6D6D7D7D8D8D9DADBDCDCDDDEDEDFE0E0E1E2E3E4E4
E5E6E6E7E8E9EAEBECEDEEEFEFF0F1F2F4F4F4F4F4F3F3F3F3F3F4F4F3F3F3F3F3F3F3F3F3F3F4F4
F4F4F4F4F4F4F5F5F4F4F4F4F4F5F5F5F6F6F6F6F6F7F7F6F6F6F6F6F6F6F6F6F5F5F5F5F7F6F5F5
F4F3F2F2F2F1F3F2F2F1F0EFEDECEBEAEBEAE9E8E6E5E3E2E0DEDFDEDCDAD8D6D4D3D1CFD0CECCCB
C9C7C6C4C2C0C1BFBDBBB9B7B5B4B2B1B2B1AFAEAC
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000001030304050608090B0C0E0F11121416181A1B1D1E202122242527
292A2C2D2F303133343637383A3B3C3D3F404142444546474848494A4B4C4C4D4E4F505152535455
565758595A5B5C5D5E5F606162636465656667686A6B6C6D6E7070717374757678797A7B7C7D7F80
818384858788898B8C8E90919395989A9B9D9FA1A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000101010101010101010101020202030303040405060707080809090A0B0C0D0D0E
0F0F1011121314151618191A1B1C1D1E1F20212223242526292B2D2F3132343637393A3C3D3F4143
4547494B4D4E50525355585A5C5E61636567696B6D70727477797B7E80828587898B8E9092949698
9A9C9EA0A2A4A6A8AAACAEB0B2B3B5B6B8B9BABBBD
>
<
0606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0A0B0B0B0B0B
0B0B0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F10101010101010
11111111111111111212121212121213131313131313131414141414141414151515151515151616
161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1A1B1B1B1B
1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1F1F1F1F1F1F1F1F202020202020
202021212121212121222222222222222223232323
>
<
35353535353534343434343434343434333333333333333333333232323232323232323231313131
313131313131303030303030303030302F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2D2D2D2D
2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A29292929
29292929292928282828282828282828272727272727272727272626262626262626262625252525
25252525252524242424242424242424232323232323232323232222222222222222222221212121
212121212121202020202020202020201F1F1F1F1F
>
<
FCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5
D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEAD
ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685
84838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D
5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635
34333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
0.858823 0.737255 0 0 0.023529 0.207843 0.988235 2 50 0 %_BS
%_0.858823 0.737255 0 0 0.023529 0.207843 0.988235 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (\713\750\755\745\751\755\773\751 \743\760\740\744\750\745\755\762 1)
(\713\750\755\745\751\755\773\751 \743\760\740\744\750\745\755\762 1) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455555658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2F2F30313233343536373838393A3B3C3D3E3F4041
434445464748494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\713\750\755\745\751\755\773\751 \743\760\740\744\750\745\755\762 2)
(\713\750\755\745\751\755\773\751 \743\760\740\744\750\745\755\762 2) 0 6 Bd
[
<
C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2
D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADA
DADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDADBDBDADBDA
DADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6
>
<
3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E7072
7476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3
B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCF
CFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7
>
<
232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000
>
0
<
0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F1010
1111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F202020212122
22232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F30303131323232333334
3435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242
>
<
A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D
7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F
2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
>
<
C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9
C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCF
D0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2
>
4 %_Br
<
8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E
8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C
9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9
AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9
B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3
C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E1010121213131616
18181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5
D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4
A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C
59575553514E4D4A484644413F3C3A373633312E2C29282523
>
0
<
737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665
656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A5959585857575656555554545353
5252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E
3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827
272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F
0F0E0E0D0C0C0B0B0A09090807070606050404030302010100
>
<
F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEE
EDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBE
BEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACAC
ABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0
>
<
0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425
252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F40414142
4344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F6061626363
6465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F808182838485868687
88898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACAD
AEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6
>
4 %_Br
<
0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F3031
32343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A
5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575
757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282
>
<
444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18
181515141212100F0F0C0C0B09090606060404020201000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000
>
1
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2
B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D
8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473
>
<
BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECF
CFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDE
DFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDED
EEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8
>
<
00000000000101010101010101010102020202020202020203030303030303030304040404040404
04040405050505050505050505060606060606060606070707070707070707070808080808080808
0808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F
>
4 %_Br
0
<
9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A
6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444
>
1
0
1
<
7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4
A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF
>
0
4 %_Br
0
<
FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2
F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDE
DDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6
C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AE
AEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1
A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E
>
1
0
1
<
000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F202122232424
25262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444
454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E
5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F707070717172
72727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D
7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F
>
0
4 %_Br
[
0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS
%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 Bs
0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS
%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs
0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS
%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs
0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS
%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs
0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS
%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs
0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS
%_0 0.992157 1 0 1 0 0 2 33.3333 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\720\740\744\750\740\753\774\755\773\751 \743\760\740\744\750\745\755\762 1)
(\720\740\744\750\740\753\774\755\773\751 \743\760\740\744\750\745\755\762 1) 1 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455555658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2F2F30313233343536373838393A3B3C3D3E3F4041
434445464748494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
1 0 50 0 %_BS
%_1 0 50 0 Bs
0 0 50 100 %_BS
%_0 0 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\720\740\744\750\740\753\774\755\773\751 \743\760\740\744\750\745\755\762 2)
(\720\740\744\750\740\753\774\755\773\751 \743\760\740\744\750\745\755\762 2) 1 6 Bd
[
0
<
FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2
F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDE
DDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6
C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AE
AEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1
A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E
>
1
0
1
<
000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F202122232424
25262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444
454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E
5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F707070717172
72727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D
7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F
>
0
4 %_Br
0
<
9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A
6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444
>
1
0
1
<
7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4
A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF
>
0
4 %_Br
<
0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F3031
32343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A
5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575
757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282
>
<
444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18
181515141212100F0F0C0C0B09090606060404020201000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000
>
1
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2
B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D
8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473
>
<
BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECF
CFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDE
DFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDED
EEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8
>
<
00000000000101010101010101010102020202020202020203030303030303030304040404040404
04040405050505050505050505060606060606060606070707070707070707070808080808080808
0808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F
>
4 %_Br
<
8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E
8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C
9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9
AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9
B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3
C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E1010121213131616
18181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5
D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4
A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C
59575553514E4D4A484644413F3C3A373633312E2C29282523
>
0
<
737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665
656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A5959585857575656555554545353
5252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E
3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827
272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F
0F0E0E0D0C0C0B0B0A09090807070606050404030302010100
>
<
F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEE
EDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBE
BEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACAC
ABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0
>
<
0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425
252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F40414142
4344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F6061626363
6465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F808182838485868687
88898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACAD
AEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6
>
4 %_Br
<
C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2
D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADA
DADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDADBDBDADBDA
DADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6
>
<
3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E7072
7476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3
B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCF
CFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7
>
<
232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000
>
0
<
0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F1010
1111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F202020212122
22232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F30303131323232333334
3435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242
>
<
A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D
7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F
2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
>
<
C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9
C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCF
D0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2
>
4 %_Br
[
0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS
%_0 0.992157 1 0 1 0 0 2 33.3333 0 Bs
0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS
%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs
0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS
%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs
0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS
%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs
0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS
%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs
0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS
%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (\723\747\756\760 "\721\754\745\771\745\755\755\773\745 \752\742\740\744\760\740\762\773")
(\723\747\756\760 "\721\754\745\771\745\755\755\773\745 \752\742\740\744\760\740\762\773") 0 0 55.0781 55.0801 [
%AI3_Tile
(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa
 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 0 m
0 55.0801 L
55.0781 55.0801 L
55.0781 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa
 0.043137 0 0.713725 0 1 1 0.4 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
26.1436 52.3262 m
26.1436 29.4307 L
3.03125 29.4307 L
3.03125 52.3262 L
26.1436 52.3262 L
f
25.0264 50.123 m
5.89063 50.123 L
5.89063 32.4961 L
25.0264 32.4961 L
25.0264 50.123 L
f
*U
*u
5.89063 50.123 m
25.0264 50.123 L
25.0264 32.4961 L
5.89063 32.4961 L
5.89063 50.123 L
n
10.0313 34.2578 m
24.1338 34.2578 L
24.1338 48.3613 L
10.0313 48.3613 L
10.0313 34.2578 L
n
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa
 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
22.4082 48.793 m
8.30566 48.793 L
8.30566 34.6895 L
22.4082 34.6895 L
22.4082 48.793 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 Xa
 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
52.6943 24.7852 m
52.6943 1.67578 L
28.9355 1.67578 L
28.9355 24.7852 L
52.6943 24.7852 L
f
47.6777 22.582 m
30.0527 22.582 L
30.0527 4.95703 L
47.6777 4.95703 L
47.6777 22.582 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa
 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
30.0527 22.582 m
50.6982 22.582 L
50.6982 4.95703 L
30.0527 4.95703 L
30.0527 22.582 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa
 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
47.4199 21.252 m
32.2393 21.252 L
32.2393 6.50293 L
47.4199 6.50293 L
47.4199 21.252 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa
 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
27.5391 27.5391 m
27.5391 0 L
0 0 L
0 27.5391 L
27.5391 27.5391 L
f
25.4316 26.1445 m
2.75293 26.1445 L
2.75293 2.16992 L
25.4316 2.16992 L
25.4316 26.1445 L
f
*U
*u
4.95605 7.40039 m
22.582 7.40039 L
22.582 25.0273 L
4.95605 25.0273 L
4.95605 7.40039 L
n
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa
 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
22.582 5.67383 m
4.95605 5.67383 L
4.95605 25.0273 L
22.582 25.0273 L
22.582 5.67383 L
f
20.3887 21.3281 m
7.58105 21.3281 L
7.58105 10.0313 L
20.3887 10.0313 L
20.3887 21.3281 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa
 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6.93555 8.73633 m
21.0371 8.73633 L
21.0371 22.8379 L
6.93555 22.8379 L
6.93555 8.73633 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.623529 0 0.003922 0 0.2 0.776471 0.956863 Xa
 0.623529 0 0.003922 0 0.2 0.776471 0.956863 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
55.0781 55.0801 m
55.0781 27.5391 L
27.5391 27.5391 L
27.5391 55.0801 L
55.0781 55.0801 L
f
52.3252 50.9688 m
30.292 50.9688 L
30.292 28.9355 L
52.3252 28.9355 L
52.3252 50.9688 L
f
*U
*u
30.292 50.9688 m
52.3252 50.9688 L
52.3252 28.9355 L
30.292 28.9355 L
30.292 50.9688 L
n
32.4951 30.0527 m
50.1221 30.0527 L
50.1221 47.6777 L
32.4951 47.6777 L
32.4951 30.0527 L
n
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa
 0.043137 0 0.713725 0 1 1 0.4 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
50.1221 30.0527 m
32.4951 30.0527 L
32.4951 48.9727 L
50.1221 48.9727 L
50.1221 30.0527 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.901961 0 0 1 0.2 0.6 Xa
 0 0.901961 0 0 1 0.2 0.6 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
34.9063 33.749 m
49.0078 33.749 L
49.0078 47.8506 L
34.9063 47.8506 L
34.9063 33.749 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-5190.8833 10690.9551 m
-5099.0479 10690.9551 L
-5099.0479 10686.6758 L
-5190.8833 10686.6758 L
-5190.8833 10690.9551 L
n
0 O
0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa
-5190.6631 10688.2754 m
-5191 10688.3418 -5190.4814 10688.5313 -5190.8833 10688.3887 C
-5190.8379 10688.2705 -5190.7725 10688.1816 -5190.6631 10688.2754 C
f
-5100.1675 10688.4414 m
-5101.2529 10689.2041 -5102.6816 10688.4336 -5103.8701 10688.9199 C
-5104.0098 10688.9521 -5103.8354 10688.5029 -5104.1484 10688.6025 C
-5105.3008 10689.1953 -5107.1162 10688.8418 -5108.5195 10688.3848 C
-5108.4346 10688.2666 L
-5108.7021 10688.1816 -5109.0283 10688.5723 -5109.3115 10688.5176 C
-5109.3135 10688.4395 -5109.2207 10688.4063 -5109.2861 10688.2979 C
-5109.3574 10688.5352 -5109.7979 10688.4082 -5109.9189 10688.585 C
-5110.0303 10688.4922 -5110.0195 10688.3047 -5110.1641 10688.2002 C
-5110.3262 10688.4697 L
-5110.7769 10689.1094 -5111.4209 10688.4258 -5112.0361 10688.7559 C
-5112.0063 10688.6934 -5111.9453 10688.6445 -5111.9941 10688.585 C
-5112.9814 10688.9727 -5114.2168 10688.8994 -5115.3208 10689.0439 C
-5115.2769 10688.9482 -5115.2363 10688.7754 -5115.3008 10688.6689 C
-5115.3555 10688.9512 -5115.6963 10689.0225 -5115.9922 10689.0781 C
-5116.1255 10688.7871 -5116.4995 10689.3438 -5116.8467 10689.1826 C
-5116.8169 10689.1191 L
-5117.0732 10689.4238 -5117.1973 10688.9434 -5117.4053 10689.3086 C
-5117.5684 10689.0801 L
-5117.6807 10689.4902 -5117.9395 10688.8672 -5118.1514 10689.0762 C
-5118.1445 10689.1602 L
-5118.3442 10689.2598 -5118.4482 10689.0537 -5118.6338 10689.123 C
-5118.6514 10689.0762 L
-5119.0854 10689.1826 -5119.3379 10688.9551 -5119.3271 10689.2754 C
-5119.4795 10689.0186 -5118.9063 10689.1582 -5119.1455 10688.7842 C
-5120.5732 10689.1152 -5122.0459 10689.0498 -5123.4834 10689.0566 C
-5123.6465 10688.9277 -5123.7505 10688.8887 -5123.7871 10688.7666 C
-5123.9307 10688.832 -5124.3281 10688.8262 -5124.4585 10688.9902 C
-5124.4102 10688.9834 -5124.5513 10688.8262 -5124.6274 10688.8105 C
-5124.8887 10688.6895 -5124.9131 10689.1621 -5125.2002 10689.0186 C
-5125.0859 10688.9336 -5125.0469 10688.8301 -5125.0854 10688.7109 C
-5125.3301 10688.9609 -5125.6577 10688.9209 -5125.9473 10689.0029 C
-5125.9023 10688.9482 -5125.8325 10688.917 -5125.8433 10688.8154 C
-5126.1602 10689.0986 -5126.4209 10688.7559 -5126.6982 10688.9346 C
-5126.5947 10688.75 L
-5127.0415 10688.5254 -5126.7266 10689.1367 -5127.1128 10689.0039 C
-5127.02 10688.9453 -5127.0527 10688.873 -5127.0361 10688.7979 C
-5127.3965 10689.1338 -5127.9795 10689.0225 -5128.3389 10689.1367 C
-5128.3174 10689.1113 -5128.3232 10689.0605 Y
-5128.7148 10689.1025 -5129.1245 10688.998 -5129.5552 10689.1445 C
-5129.7119 10689.0625 -5129.5039 10688.6934 -5129.9185 10688.7617 C
-5129.9033 10689.1328 -5130.6221 10688.9141 -5130.3779 10689.335 C
-5130.7319 10689.2734 -5131.2925 10689.1338 -5131.5283 10689.2598 C
-5131.3691 10689.1191 -5131.7007 10688.8066 -5131.4063 10688.7754 C
-5131.6289 10688.5498 L
-5131.5957 10688.3984 -5131.3999 10688.6016 -5131.4707 10688.4102 C
-5131.6182 10688.4258 -5132.0479 10688.5723 -5132.1797 10688.5117 C
-5132.4531 10688.7393 -5132.7041 10689.1641 -5133.1465 10689.2109 C
-5132.9385 10689.0664 -5133.2646 10688.8018 -5133.1235 10688.7383 C
-5133.7407 10689.4482 L
-5133.8877 10689.4658 -5133.7725 10689.1563 -5133.9854 10689.2529 C
-5133.9746 10689.3506 -5134.0674 10689.4121 -5134.1318 10689.4922 C
-5134.1875 10689.4482 -5134.7441 10689.585 -5134.8081 10689.2178 C
-5134.8735 10689.0762 -5134.5684 10689.1426 -5134.7314 10689.0117 C
-5135.0029 10689.0146 -5135.0151 10689.1406 -5135.2871 10689.1465 C
-5135.2925 10689.0977 L
-5135.4717 10689.0439 -5135.8213 10689.2529 -5135.6265 10689.4551 C
-5135.5015 10689.4658 -5135.6738 10689.2354 -5135.4888 10689.3418 C
-5135.6152 10689.5537 -5135.9312 10689.6133 -5136.2031 10689.6162 C
-5136.1104 10689.5586 -5136.1216 10689.4609 -5136.0845 10689.3574 C
-5136.4497 10689.6445 -5136.8369 10689.7354 -5137.2451 10689.8555 C
-5137.2515 10690.0293 -5137.0928 10689.5391 -5137.0327 10689.6309 C
-5137.5557 10689.3896 -5138.1128 10689.9727 -5138.5479 10689.6201 C
-5138.4766 10689.5898 -5138.5098 10689.8672 -5138.5146 10689.8184 C
-5138.7666 10689.7969 -5138.7549 10689.5449 -5138.9189 10689.6377 C
-5138.9355 10689.4902 -5139.1255 10689.6855 -5139.2944 10689.7305 C
-5139.3818 10689.8369 -5139.3384 10689.6582 -5139.1914 10689.6426 C
-5139.4268 10689.7666 -5140.3691 10689.9941 -5140.9131 10689.7793 C
-5140.9023 10689.8779 -5141.2471 10690.1377 -5141.3721 10690.1279 C
-5141.3232 10689.8984 L
-5141.4375 10689.7617 -5141.7422 10689.9189 -5141.7632 10689.7227 C
-5142.0303 10690 -5140.7344 10689.4863 -5141.0957 10689.7002 C
-5141.1895 10689.5098 -5141.5991 10690.0645 -5141.5215 10689.7529 C
-5141.7725 10689.7617 -5142.0161 10690.0186 -5142.2559 10689.8047 C
-5142.1865 10689.8418 -5142.0522 10689.4873 -5142.2549 10689.5039 C
-5142.6123 10689.5449 -5142.3564 10689.6133 -5142.6465 10689.6895 C
-5142.8281 10689.7832 L
-5142.8398 10690.0059 -5143.1475 10689.7529 -5143.0146 10690.0029 C
-5143.0586 10689.8184 -5143.5337 10690.1152 -5143.4971 10689.7461 C
-5143.4473 10689.4551 L
-5143.6016 10689.4766 -5143.7002 10689.7617 -5143.8213 10689.8896 C
-5143.8418 10689.8633 -5143.8823 10689.8047 -5143.8745 10689.7578 C
-5143.8994 10690.2031 -5144.2432 10689.7207 -5144.4268 10690.0645 C
-5144.7505 10689.9102 -5145.2495 10690.0498 -5145.4023 10689.7734 C
-5145.6514 10689.9082 -5145.8784 10690.0674 -5146.1621 10689.9727 C
-5146.1055 10689.9307 -5146.0283 10689.9189 -5146.0122 10689.8223 C
-5146.1904 10689.6914 -5146.2344 10689.8086 -5146.3975 10689.8809 C
-5146.3608 10689.8145 -5146.7539 10689.6201 -5146.9521 10689.4629 C
-5147.1992 10689.5957 -5147.1143 10689.8359 -5147.1392 10689.9824 C
-5147.3652 10689.5439 -5147.8379 10690.2656 -5148.1211 10689.8672 C
-5148.0352 10689.8066 -5147.7598 10689.6514 -5147.9658 10689.542 C
-5148.1919 10689.1025 -5148.4219 10689.8643 -5148.7861 10689.6543 C
-5148.6968 10690.0186 L
-5148.8594 10689.7939 -5149.2334 10690.2305 -5149.1963 10689.8594 C
-5149.3184 10689.9902 -5149.6265 10689.7383 -5149.5859 10690.0938 C
-5150.1846 10689.7939 -5151.0425 10690.2754 -5151.4102 10689.6377 C
-5151.4961 10689.6973 -5151.7104 10689.6367 -5151.6665 10689.8193 C
-5151.5239 10690.0176 -5151.4673 10689.6777 -5151.4141 10689.8125 C
-5151.4912 10689.8232 -5151.5078 10689.9209 -5151.5161 10689.9697 C
-5151.7021 10689.8887 -5151.8486 10689.8633 -5151.6729 10689.5674 C
-5152.0869 10689.3477 -5152.1001 10690.1719 -5152.6274 10690.0322 C
-5152.6035 10689.8857 -5152.6436 10689.8301 -5152.7979 10689.8535 C
-5153.0903 10690.1055 L
-5153.4312 10690.0469 -5153.2842 10689.7705 -5153.2925 10689.5215 C
-5153.4746 10689.5645 -5153.6973 10689.5527 -5153.7803 10689.7383 C
-5154.0015 10689.4258 L
-5153.8398 10689.6514 -5154.1514 10689.5762 -5154.2368 10689.6367 C
-5154.1514 10689.5762 L
-5154.1846 10689.4697 -5154.3955 10689.5352 -5154.5024 10689.5664 C
-5154.4766 10689.7207 -5154.2617 10689.7832 -5154.1445 10689.8281 C
-5154.2373 10689.9375 -5154.3823 10689.9121 -5154.5059 10690.042 C
-5154.4648 10689.7969 -5154.8027 10689.8672 -5154.9473 10689.8418 C
-5155.1133 10689.7891 -5155.1348 10690.0605 -5155.1831 10690.0527 C
-5155.1875 10689.9258 -5155.4541 10690.0313 -5155.3247 10689.8535 C
-5155.2681 10689.8125 -5155.1953 10689.9766 -5155.1016 10689.8643 C
-5155.2109 10689.7705 -5155.1982 10689.5498 -5155.4258 10689.7109 C
-5155.5967 10689.832 -5155.3818 10690.1934 -5155.7061 10690.0391 C
-5155.6211 10689.9785 -5155.6055 10689.8809 -5155.5391 10689.7939 C
-5155.8433 10689.667 L
-5155.8564 10689.8887 L
-5155.8975 10689.832 -5155.8691 10689.8125 -5155.8877 10689.7832 C
-5155.9785 10690.0176 -5156.3521 10689.8555 -5156.4209 10690.1191 C
-5156.5742 10690.1426 -5156.7441 10689.9648 -5156.8906 10689.9395 C
-5156.8623 10689.9199 L
-5157.0415 10689.7891 -5157.2793 10689.876 -5157.4297 10690.0254 C
-5157.4219 10689.9766 L
-5157.5195 10689.96 -5157.7505 10689.9941 -5157.8735 10690.126 C
-5158.1201 10689.957 -5157.9561 10689.2842 -5158.2295 10689.5645 C
-5158.48 10689.5723 -5158.6221 10689.9727 -5158.5215 10690.1152 C
-5158.9717 10689.9648 -5159.4834 10690.3281 -5159.9009 10689.9824 C
-5159.9658 10690.0723 -5159.9248 10690.1289 -5160.0586 10690.1816 C
-5160.7197 10690.0938 -5161.4551 10690.4453 -5161.9814 10690.0078 C
-5161.79 10689.9141 -5161.9688 10689.7842 -5161.9727 10689.6582 C
-5162.1309 10689.8574 -5162.1631 10689.4512 -5162.2197 10689.7939 C
-5162.2041 10689.9941 -5162.2197 10690.0918 -5162.0337 10690.1729 C
-5162.4282 10690.2813 -5163.0283 10690.2813 -5163.2471 10690.0938 C
-5163.1377 10690.1865 -5163.2227 10690.248 -5163.3086 10690.3086 C
-5163.2803 10689.9873 -5163.5713 10689.9395 -5163.7915 10690.0527 C
-5163.8223 10690.248 L
-5163.9658 10690.0469 L
-5164.0503 10690.1094 -5164.0591 10690.457 -5164.2773 10690.2695 C
-5164.2891 10690.1934 -5164.3018 10690.1162 -5164.3418 10690.0605 C
-5164.5693 10690.2207 -5164.8906 10690.4922 -5165.1377 10690.3262 C
-5165.3398 10690.042 L
-5165.4453 10690.0723 -5165.6235 10690.2441 -5165.4375 10690.3262 C
-5165.8594 10690.1543 -5166.1309 10690.1328 -5166.2646 10689.8857 C
-5166.9912 10690.4873 -5168.0459 10690.5117 -5168.8906 10690.4688 C
-5168.8652 10690.3223 L
-5169.0923 10690.1855 -5168.9834 10690.5781 -5169.1416 10690.4766 C
-5169.0684 10690.3369 -5169.3145 10690.1729 -5169.1362 10690.0029 C
-5169.4609 10689.8477 -5169.5547 10690.2559 -5169.7656 10690.3223 C
-5169.7979 10690.5146 -5169.5957 10690.1992 -5169.6367 10690.4434 C
-5169.6729 10690.5117 -5170.0859 10690.2939 -5170.1362 10690.585 C
-5170.2178 10690.4697 -5170.1543 10690.2559 -5170.1104 10690.1377 C
-5170.3086 10690.2793 L
-5170.5513 10689.9395 -5169.7559 10689.6719 -5170.0107 10689.2529 C
-5170.1934 10689.2979 L
-5170.3682 10688.9941 -5169.71 10688.9551 -5170.1689 10688.8506 C
-5170.3682 10688.9941 -5170.5381 10689.417 -5170.3608 10689.5449 C
-5170.7754 10689.626 -5170.5527 10690.2383 -5170.9985 10690.2139 C
-5171.1201 10690.0439 -5170.6416 10690.1729 -5170.7275 10689.9336 C
-5170.9375 10689.6992 -5171.1484 10690.0645 -5171.3354 10689.9824 C
-5171.1279 10690.0918 -5171.3032 10690.3857 -5171.4375 10690.4395 C
-5171.6641 10690.3018 -5171.29 10690.1641 -5171.6113 10690.1338 C
-5171.6641 10690.3018 -5171.9595 10690.4277 -5171.7041 10690.5449 C
-5171.8203 10690.9258 -5172.0381 10690.4395 -5172.2129 10690.7344 C
-5172.3174 10690.4658 -5171.8823 10690.1152 -5172.2354 10689.9814 C
-5172.1792 10690.2393 -5172.6704 10690.332 -5172.4839 10690.7139 C
-5172.6221 10690.6406 -5172.6367 10690.4375 -5172.5361 10690.2793 C
-5172.7334 10690.1201 -5173.0151 10690.75 -5173.0801 10690.2383 C
-5173.1479 10690.5029 L
-5173.21 10690.417 -5173.2983 10690.3506 -5173.3994 10690.21 C
-5173.5732 10690.2041 -5173.96 10690.5664 -5173.9443 10690.1689 C
-5174 10690.21 -5174.3975 10690.1914 -5174.2441 10690.4658 C
-5173.9971 10690.6338 -5173.96 10690.2656 -5173.8223 10690.6377 C
-5173.9971 10690.335 -5174.1787 10690.6777 -5174.3213 10690.7793 C
-5174.3447 10690.626 L
-5174.4297 10690.6855 -5174.6255 10690.6514 -5174.6787 10690.8184 C
-5174.6133 10690.7305 -5174.6475 10690.626 -5174.7148 10690.5879 C
-5174.8042 10690.8223 L
-5175.1494 10690.9395 -5174.8857 10690.4102 -5175.2217 10690.4785 C
-5174.9663 10690.2969 L
-5175.0225 10690.3359 -5175.1367 10690.1162 -5175.2979 10690.1895 C
-5175.3604 10690.4033 -5175.4775 10690.6602 -5175.5313 10690.8262 C
-5175.7207 10690.9199 -5175.6162 10690.5859 -5175.8027 10690.8047 C
-5175.5586 10690.5469 L
-5175.5215 10690.4766 -5175.7231 10690.1934 -5175.9761 10690.1992 C
-5176.1377 10690.2734 -5176.3887 10690.582 -5176.1338 10690.6992 C
-5176.2607 10690.7031 -5176.4385 10690.5723 -5176.3379 10690.417 C
-5176.6255 10690.4902 -5176.2998 10690.6465 -5176.5479 10690.7793 C
-5176.6494 10690.6367 -5176.9658 10690.4336 -5177.1563 10690.2266 C
-5176.8975 10689.8682 L
-5177.0693 10689.8643 L
-5176.8467 10689.5781 -5177.1826 10689.6465 -5177.0566 10689.3438 C
-5177.1743 10689.2969 -5177.3169 10689.3994 -5177.4307 10689.4785 C
-5177.0864 10689.9629 -5177.8159 10690.1406 -5177.7158 10690.582 C
-5178.1875 10690.7031 -5178.0107 10689.5078 -5178.5024 10690.1992 C
-5178.4219 10690.3145 -5178.6533 10690.6504 -5178.3564 10690.5225 C
-5178.6494 10690.4746 -5178.5557 10690.9658 -5178.9014 10690.7832 C
-5178.6455 10690.6016 -5179.1763 10690.3359 -5178.8066 10690.0723 C
-5178.8311 10690.2178 -5178.6001 10690.1826 -5178.5435 10690.1426 C
-5178.6641 10689.9727 -5178.5186 10689.6973 -5178.8184 10689.6973 C
-5179.0015 10689.7393 -5179.2524 10689.748 -5179.2158 10689.9785 C
-5179.2085 10690.2314 -5178.9365 10689.9512 -5179.0537 10690.207 C
-5179.4185 10690.2949 -5179.4795 10689.9102 -5179.6304 10690.3594 C
-5179.3999 10690.3232 -5179.3423 10690.585 -5179.3467 10690.7578 C
-5179.6143 10690.8633 L
-5179.5625 10690.6953 L
-5179.9922 10690.5742 -5179.6895 10691 -5180.1055 10690.9551 C
-5180.3008 10690.623 L
-5180.2017 10690.3369 -5179.6953 10690.75 -5179.7695 10690.2842 C
-5180.04 10690.2656 -5180.1299 10690.5029 -5180.3848 10690.3818 C
-5180.3281 10690.3418 -5180.2505 10690.3301 -5180.1943 10690.2891 C
-5180.2915 10690.2734 -5180.3877 10689.6563 -5180.7734 10690.0176 C
-5180.9727 10690.1582 -5180.8262 10690.1826 -5180.8311 10690.3574 C
-5181.2656 10690.4102 -5181.3955 10690.5879 -5181.6753 10690.6152 C
-5181.6177 10690.2754 -5182.1699 10690.582 -5181.8608 10690.2344 C
-5181.7188 10690.4336 -5181.0903 10690.4141 -5180.9365 10690.0898 C
-5181.0947 10689.6865 -5180.5952 10690.1465 -5180.5024 10689.7383 C
-5180.8506 10689.7285 -5180.8335 10689.332 -5180.8896 10689.0723 C
-5180.9863 10689.0537 -5181.0801 10689.1641 -5181.1377 10689.2041 C
-5181.1787 10689.4482 -5181.0522 10689.4453 -5181.0449 10689.6973 C
-5181.4336 10689.6309 -5181.8081 10689.7666 -5182.0225 10690.0059 C
-5182.1523 10689.8848 -5182.1113 10689.6406 -5181.9575 10689.6162 C
-5182.4199 10689.6895 -5182.9141 10689.6563 -5183.3535 10689.582 C
-5183.0693 10689.9814 -5183.8433 10689.6758 -5183.6494 10690.0078 C
-5183.4141 10690.0977 -5183.2119 10690.3818 -5183.3418 10690.5605 C
-5183.4888 10690.5352 -5183.3369 10690.3857 -5183.3984 10690.3008 C
-5183.5859 10690.5186 -5183.6895 10689.9512 -5183.8735 10690.2949 C
-5183.4512 10690.167 -5183.7915 10689.8086 -5183.7139 10689.4961 C
-5184.0186 10689.6719 -5183.7007 10689.2734 -5184.0024 10689.2734 C
-5184.3057 10689.4473 -5184.6787 10689.585 -5185.0161 10689.6514 C
-5185.4399 10689.3555 -5186.0898 10689.6465 -5186.4683 10689.6582 C
-5186.6665 10689.5 -5186.5322 10689.1465 -5186.7471 10689.0859 C
-5186.9995 10689.0918 -5186.5601 10689.4658 -5186.9336 10689.3047 C
-5186.8975 10689.2344 L
-5187.0107 10689.3154 -5187.5825 10688.9941 -5187.6929 10689.5029 C
-5187.5776 10689.1191 L
-5187.6475 10689.085 -5187.7119 10689.1719 -5187.7695 10689.2129 C
-5187.7725 10689.0879 -5187.8535 10688.9746 -5187.7402 10688.8926 C
-5187.9707 10688.6289 -5188.2241 10688.9346 -5188.4746 10688.9453 C
-5188.3135 10689.1719 L
-5188.7422 10689.3496 -5189.0293 10689.126 -5189.4443 10689.2041 C
-5189.4316 10688.9824 L
-5189.6787 10689.1152 L
-5189.6182 10688.8994 -5189.8447 10688.7617 -5189.9751 10688.9414 C
-5189.3335 10688.3984 L
-5189.1553 10688.5293 -5189.5283 10688.667 -5189.4165 10688.8848 C
-5189.3213 10689.0762 -5188.9375 10689.0146 -5188.8755 10688.8018 C
-5189.0225 10688.7773 -5189.0293 10688.8262 -5189.1436 10688.9063 C
-5189.1919 10688.5977 -5188.9688 10688.6094 -5188.8584 10688.4033 C
-5188.9355 10688.417 -5189.0449 10688.3223 -5189.0615 10688.4199 C
-5188.9102 10688.2695 -5188.7578 10688.2461 -5188.5059 10688.2383 C
-5188.6763 10688.3594 -5188.4131 10688.4297 -5188.4775 10688.5176 C
-5188.4575 10688.2461 -5188.2168 10688.1621 -5187.9053 10688.2383 C
-5187.6831 10688.5527 -5187.3208 10688.0361 -5186.96 10688.123 C
-5187.1064 10688.3984 -5187.2935 10688.6191 -5187.5127 10688.7305 C
-5187.2861 10688.8682 -5187.2607 10688.7227 -5187.0337 10688.8613 C
-5186.9238 10688.6563 -5186.8457 10688.3418 -5186.5503 10688.2168 C
-5186.5342 10688.4199 L
-5186.2666 10688.3154 -5186.2666 10688.0146 -5185.9258 10688.0723 C
-5185.3418 10688.1719 -5184.7407 10688.1719 -5184.2949 10688.1973 C
-5184.2783 10688.3994 L
-5184.0303 10687.9658 -5183.4521 10688.2393 -5183.1182 10688.0469 C
-5182.5503 10688.2422 -5181.8848 10687.8535 -5181.5938 10688.2031 C
-5180.5913 10688.0469 -5179.7148 10687.8945 -5178.6768 10687.9688 C
-5178.8516 10688.2637 L
-5178.6655 10688.0469 -5178.7305 10688.4336 -5178.5479 10688.3896 C
-5178.7578 10688.1543 -5178.2949 10688.085 -5178.1665 10687.9033 C
-5177.7041 10688.1328 -5177.1104 10687.8818 -5176.7007 10687.6758 C
-5176.6846 10687.8789 L
-5176.2705 10687.498 -5175.7759 10687.832 -5175.2598 10687.8945 C
-5175.2007 10687.9785 -5175.1074 10688.1689 -5174.9536 10688.1465 C
-5174.6738 10687.8184 -5174.5273 10687.8418 -5174.1167 10687.6367 C
-5173.8169 10687.6367 -5173.3301 10687.7178 -5173.0254 10687.8457 C
-5171.8975 10687.3848 -5170.7456 10687.6797 -5169.5732 10687.4023 C
-5169.4888 10687.6406 L
-5168.3521 10687.1309 -5166.9541 10687.5938 -5165.9839 10687.332 C
-5166.0776 10687.7393 L
-5165.7734 10687.8643 -5165.3843 10687.6328 -5165.4619 10687.3438 C
-5165.1567 10687.4688 -5164.7007 10687.1465 -5164.5068 10687.4814 C
-5164.1953 10687.5566 -5164.1255 10687.2939 -5163.8662 10687.2383 C
-5163.2422 10687.3926 -5163.0107 10687.3574 -5162.4224 10687.2813 C
-5162.5684 10687.2559 L
-5162.6328 10687.3457 -5162.6387 10687.5186 -5162.4922 10687.5449 C
-5162.2725 10687.4307 -5161.6846 10687.6543 -5161.9033 10687.1689 C
-5161.2754 10687.4482 -5160.4385 10686.9395 -5159.8271 10687.3184 C
-5159.8789 10687.1855 -5159.7246 10687.1602 -5159.6602 10687.0703 C
-5159.1089 10687.0645 -5158.5293 10687.3359 -5158.0898 10687.1094 C
-5158.0024 10687.1758 -5158.2295 10687.3359 -5158.0049 10687.3496 C
-5157.8721 10687.2979 -5158.0024 10687.1758 -5157.8384 10687.1016 C
-5156.9453 10686.8535 -5156.0303 10687.3574 -5155.2188 10687.2939 C
-5153.7754 10687.0361 -5152.2695 10687.167 -5150.8867 10687.123 C
-5150.9023 10687.2207 L
-5150.4395 10686.8477 -5149.8159 10687.6025 -5149.4463 10687.042 C
-5149.3369 10687.1338 -5149.0283 10687.0859 -5149.1094 10687.2734 C
-5148.7407 10687.0098 -5148.0771 10687.5215 -5147.5439 10687.1865 C
-5147.5928 10687.1777 -5147.6211 10687.1973 -5147.6777 10687.2393 C
-5147.1392 10687.4551 -5146.6641 10687.1602 -5146.0957 10687.3555 C
-5146.1533 10687.3975 -5146.2583 10687.4277 -5146.2754 10687.5254 C
-5146.0557 10687.7129 -5145.7549 10687.1133 -5145.6348 10687.585 C
-5145.5088 10687.5801 -5145.5449 10687.3477 -5145.6221 10687.3613 C
-5144.3779 10687.5449 -5143.0498 10687.2441 -5141.7549 10687.1367 C
-5140.8271 10687.4189 -5141.6982 10687.9297 -5140.9663 10687.5781 C
-5140.9063 10687.6689 -5140.9229 10687.3984 -5140.9131 10687.4961 C
-5140.6299 10687.3643 -5140.4717 10688.0215 -5140.2754 10687.7754 C
-5140.3564 10687.4863 -5140.1445 10687.6133 -5140.1387 10687.4375 C
-5139.5713 10687.626 -5139.4575 10687.8857 -5139.0098 10687.667 C
-5139.0435 10687.8184 L
-5138.5186 10687.3887 -5137.9102 10687.6191 -5137.4673 10687.123 C
-5134.5728 10687.0322 -5131.7983 10686.7578 -5128.9761 10686.7002 C
-5126.1865 10686.7949 -5123.4551 10686.5723 -5120.6221 10686.8359 C
-5119.9585 10687.2354 -5119.9087 10687.2246 -5119.1797 10687.0625 C
-5119.2095 10687.1279 -5119.2549 10687.1426 -5119.2061 10687.2031 C
-5119.1699 10686.876 -5118.6929 10687.1719 -5118.6235 10686.8594 C
-5117.5762 10686.9199 -5116.6113 10686.8301 -5115.5337 10686.8281 C
-5115.7041 10686.8633 -5115.7896 10687.1309 -5115.5869 10687.1094 C
-5115.3755 10686.8994 L
-5115.3408 10686.9922 L
-5115.2021 10686.9434 -5115.0513 10686.7813 -5115.1943 10686.6758 C
-5112.4873 10686.3926 -5109.8242 10687.0498 -5107.1729 10686.9697 C
-5106.5439 10687.1064 -5105.6475 10686.9814 -5104.9629 10686.9141 C
-5102.9355 10687.3506 -5101.1084 10687.7041 -5099.0479 10687.3984 C
-5099.3174 10688.2461 -5100.1675 10688.4414 V
f
-5190.2578 10688.2422 m
-5190.1855 10688.4063 -5189.9497 10688.4961 -5190.1377 10688.7139 C
-5190.1611 10688.5605 -5190.2822 10688.3887 -5190.2578 10688.2422 C
f
-5183.9619 10689.9297 m
-5183.9536 10689.8809 -5183.8721 10689.9961 -5183.8521 10690.0225 C
-5183.9297 10690.0352 -5184.0024 10690.1729 -5184.0645 10690.0879 C
-5183.9854 10690.0762 -5183.9976 10689.998 -5183.9619 10689.9297 C
f
-5182.3521 10690.0273 m
-5182.3765 10690.1729 -5182.7207 10690.2891 -5182.9238 10690.3066 C
-5182.3521 10690.0273 L
f
-5180.8521 10690.6289 m
-5180.7227 10690.7529 -5180.7583 10690.8193 -5180.9326 10690.8154 C
-5180.9453 10690.7383 -5180.8877 10690.6992 -5180.8521 10690.6289 C
f
-5180.7456 10690.2969 m
-5180.6211 10690.2939 -5180.5591 10690.3789 -5180.4985 10690.4629 C
-5180.5029 10690.3369 -5180.7871 10690.542 -5180.7456 10690.2969 C
f
-5177.4893 10690.7207 m
-5177.4111 10690.71 -5177.2417 10690.5879 -5177.1689 10690.75 C
-5177.2505 10690.6367 -5177.5498 10690.9346 -5177.4893 10690.7207 C
f
-5175.9761 10690.5 m
-5175.9272 10690.5098 -5175.9072 10690.5361 -5175.8506 10690.4961 C
-5175.7607 10690.5625 -5175.8555 10690.6689 -5175.9312 10690.6826 C
-5175.9761 10690.5 L
f
-5148.4287 10689.9141 m
-5148.5923 10689.9863 L
-5148.5684 10689.8418 L
-5148.4287 10689.9141 L
f
-5136.3574 10689.9063 m
-5136.1943 10689.8145 -5136.2441 10690.0439 -5136.2168 10690.0645 C
-5136.3643 10690.0801 -5136.1621 10689.8848 -5136.3574 10689.9063 C
f
-5129.8486 10689.1777 m
-5129.8984 10689.1816 L
-5129.8818 10688.8818 L
-5129.8486 10689.1777 L
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 5 \357\362., \357\353\356\361\352\350\351/ Adobe ArtOnPat) -
(h Brush Tool/ \323\343\356\353\374\355\356-\361\345\360\373\351/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 \757\762., \757\753\756\761\752\750\751)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\723\743\756\753\774\755\756-\761\745\760\773\751)
(1 / Unnamed Brush Pat/ / / / / 5 0.137255 0.121569 0.12549 /  ) -
(1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\721\756\742\754\745\771\745\755\750\745]) 0 Xs
([\721\756\742\754\745\771\745\755\750\745])
Pc
0 0 0 0 1 1 1 Xa
(\701\745\753\773\751)
Pc
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
(\727\745\760\755\773\751)
Pc
0 0.992157 1 0 1 0 0 Xa
(RGB \752\760\740\761\755\773\751)
Pc
0.062745 0 0.964706 0 1 1 0 Xa
(RGB \746\745\753\762\773\751)
Pc
0.627451 0 1 0 0 1 0 Xa
(RGB \747\745\753\745\755\773\751)
Pc
0.517647 0 0.12549 0 0 1 1 Xa
(RGB \743\756\753\763\741\756\751)
Pc
0.882353 0.768627 0 0 0 0 1 Xa
(RGB \761\750\755\750\751)
Pc
0.270588 0.815686 0 0 1 0 1 Xa
(RGB \757\763\760\757\763\760\755\773\751)
Pc
0.168627 0.980392 0.92549 0.066667 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0.003922 0.992157 0.972549 0 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0 0.796078 0.968627 0 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0 0.34902 0.870588 0 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.047059 0 0.933333 0 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.745098 0 0.996078 0 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.862745 0.176471 1 0.039216 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.901961 0.333333 0.988235 0.258824 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.760784 0 0.74902 0 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.87451 0.52549 0 0 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.992157 0.964706 0.035294 0.003922 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
1 1 0.262745 0.247059 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.34902 1 0.372549 0.109804 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.117647 1 0.494118 0.007843 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0 0.968627 0.203922 0 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.227451 0.27451 0.4 0 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.4 0.427451 0.52549 0.066667 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.505882 0.529412 0.607843 0.235294 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.576471 0.603922 0.639216 0.419608 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.227451 0.384314 0.635294 0.011765 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.317647 0.490196 0.741176 0.098039 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.360784 0.572549 0.839216 0.227451 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.392157 0.639216 0.933333 0.356863 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.415686 0.698039 0.968627 0.490196 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.478431 0.733333 0.835294 0.682353 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (\713\750\755\745\751\755\773\751 \743\760\740\744\750\745\755\762 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\713\750\755\745\751\755\773\751 \743\760\740\744\750\745\755\762 1)
Pc
Bb
0 0 0 0 Bh
2 (\720\740\744\750\740\753\774\755\773\751 \743\760\740\744\750\745\755\762 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\720\740\744\750\740\753\774\755\773\751 \743\760\740\744\750\745\755\762 1)
Pc
Bb
2 (\713\750\755\745\751\755\773\751 \743\760\740\744\750\745\755\762 2) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\713\750\755\745\751\755\773\751 \743\760\740\744\750\745\755\762 2)
Pc
Bb
0 0 0 0 Bh
2 (\720\740\744\750\740\753\774\755\773\751 \743\760\740\744\750\745\755\762 2) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\720\740\744\750\740\753\774\755\773\751 \743\760\740\744\750\745\755\762 2)
Pc
(\723\747\756\760 "\721\754\745\771\745\755\755\773\745 \752\742\740\744\760\740\762\773") 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\723\747\756\760 "\721\754\745\771\745\755\755\773\745 \752\742\740\744\760\740\762\773")
Pc
0 g
(K=100)
Pc
0.1 g
(K=90)
Pc
0.2 g
(K=80)
Pc
0.3 g
(K=70)
Pc
0.4 g
(K=60)
Pc
0.5 g
(K=50)
Pc
0.6 g
(K=40)
Pc
0.7 g
(K=30)
Pc
0.8 g
(K=20)
Pc
0.9 g
(K=10)
Pc
0.95 g
(R=241 G=241  B=242)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 8 0 0 0 0 50 Lb
(1) Ln
0 A
0 O
0.368627 0.509804 0.780392 0.168627 0.576471 0.439216 0.278431 Xa
0 J 0 j 1 w 4 M []0 d0 XR
807.8911 3443.6758 m
785.6484 3428.8477 l
789.356 3265.7354 l
815.3052 3269.4414 l
807.8911 3443.6758 l
f
624.3965 1004.3945 m
609.5679 1022.9316 l
642.9321 1575.292 l
672.5889 1578.999 l
624.3965 1004.3945 l
f
0.427451 0.521569 0.788235 0.243137 0.498039 0.396078 0.254902 Xa
1056 4796 m
1026 4790 1010 4784.5 1004.5 4781 c
999 4777.5 969.2529 4747.7939 971.6265 4731.897 C
981 4735 998 4741 y
1056 4796 l
f
0.219608 0.403922 0.752941 0.019608 0.776471 0.592157 0.34902 Xa
993.8691 4743.0186 m
1045.7686 4850.5249 1138.4473 4761.5542 V
1153.2754 4594.7339 1271.9033 3197.1533 y
1131.0332 3197.1533 l
993.8691 4743.0186 l
f
0.403922 0.494118 0.839216 0.196078 0.537255 0.431373 0.243137 Xa
1502.3672 3496.8066 m
1457.8818 3481.9785 l
1418.334 3430.0713 1425.748 3368.2881 V
1465.2959 3375.7026 1524.6094 3378.1792 y
1502.3672 3496.8066 l
f
0.368627 0.509804 0.780392 0.168627 0.576471 0.439216 0.278431 Xa
1004.9912 3630.8853 m
1079.1333 3642.0063 l
1171.8105 3575.2783 l
1171.8105 3234.2241 l
1027.2339 3230.5176 l
1004.9912 3630.8853 l
f
971.6265 4731.897 m
993.8691 4743.0186 l
1127.3252 3260.1743 l
1097.668 3256.4668 l
971.6265 4731.897 l
f
0.219608 0.32549 0.690196 0.007843 0.788235 0.65098 0.403922 Xa
1129.8018 3253.3745 m
1155.7515 3590.7222 1055.6597 3638.915 V
1203.9443 3642.6216 1363.3501 3657.4502 y
1456.0278 3579.6011 1415.2495 3279.3252 V
1370.7642 3271.9106 1129.8018 3253.3745 y
f
0.184314 0.313725 0.854902 0.003922 0.827451 0.666667 0.27451 Xa
819.6357 3230.5176 m
804.8071 3441.8223 l
912.3125 3523.3789 949.3838 3312.0732 V
960.5059 3100.7681 956.7979 3219.3955 y
819.6357 3230.5176 l
f
0.196078 0.345098 0.823529 0.007843 0.807843 0.639216 0.301961 Xa
1574.6406 3284.8848 m
1556.1055 3488.7769 l
1411.5278 3570.3335 1437.478 3262.6426 V
1496.792 3266.3506 1574.6406 3284.8848 y
f
0.337255 0.270588 0.270588 0 0.67451 0.67451 0.678431 Xa
2111.5645 3432.5547 m
143.0874 3250.9067 l
209.8154 1749.5254 l
280.2505 1604.9482 l
2278.3838 1886.6895 l
2200.5352 3410.3115 l
2111.5645 3432.5547 l
f
0.101961 0.07451 0.078431 0 0.886275 0.886275 0.886275 Xa
280.2505 1604.9482 m
2278.3838 1886.6895 l
2200.5352 3410.3115 l
191.2798 3232.3701 l
280.2505 1604.9482 l
f
0.333333 0.572549 0.952941 0.192157 0.588235 0.4 0.176471 Xa
1053.1831 1575.8984 m
1201.4673 1598.1426 l
1201.4673 1323.8145 l
1153.2754 1286.7461 1053.1831 1305.2793 V
1053.1831 1375.7158 1053.1831 1575.8984 y
f
0.368627 0.509804 0.780392 0.168627 0.576471 0.439216 0.278431 Xa
1764.3403 1591.9727 m
1738.3916 1606.8008 l
819.0278 1506.71 l
815.3198 1480.7588 l
1764.3403 1591.9727 l
f
0.25098 0.439216 0.843137 0.043137 0.737255 0.54902 0.27451 Xa
797.3926 1484.4668 m
1798.313 1599.3867 l
1835.3843 1443.6885 l
771.4424 1310.2324 l
797.3926 1484.4668 l
f
0.266667 0.533333 0.890196 0.086275 0.698039 0.47451 0.231373 Xa
1720.4639 1684.6514 m
1813.1416 1254.627 l
1957.7188 1054.4424 1979.9614 1199.0195 V
1950.3047 1343.5977 1868.748 1703.1855 y
1720.4639 1684.6514 l
f
827.0498 1551.1963 m
723.251 1540.0732 l
663.937 1554.9014 l
623.1577 1006.249 l
675.0576 898.7441 793.6851 1121.1709 V
812.2212 1332.4746 827.0498 1551.1963 y
f
0.333333 0.572549 0.952941 0.192157 0.588235 0.4 0.176471 Xa
618.0464 1555.3799 m
606.1572 1647.0283 l
668.1499 1658.9473 l
673.7251 1702.376 l
708.5234 1722.417 l
726.4292 1526.7227 l
618.0464 1555.3799 l
f
/BBAccumRotation (0.128977) XT
0.188235 0.462745 0.941176 0.019608 0.8 0.556863 0.211765 Xa
2113.417 1729.1367 m
2102.2964 1910.7842 l
708.4224 1721.7217 l
719.543 1525.2451 l
2113.417 1729.1367 l
f
0.458824 0.521569 0.756863 0.266667 0.466667 0.384314 0.262745 Xa
1270.0488 3555.8154 m
1246.4165 3547.0117 L
1219.0771 3528.939 1228.0693 3486.2646 V
1230.1982 3474.2598 1237.0332 3448.5415 1270.0488 3443.6758 C
1294.146 3448.3096 1298.7798 3452.9434 y
1270.0488 3555.8154 l
f
1 Ap
0.329412 0.415686 0.72549 0.070588 0.658824 0.541176 0.352941 Xa
1329.3633 3502.9902 m
1329.3633 3473.3037 1307.7866 3449.2363 1281.1719 3449.2363 c
1254.5547 3449.2363 1232.9785 3473.3037 1232.9785 3502.9902 c
1232.9785 3532.6753 1254.5547 3556.7427 1281.1719 3556.7427 c
1307.7866 3556.7427 1329.3633 3532.6753 1329.3633 3502.9902 c
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(table) Ln
0 A
0 Ap
0 O
0.101961 0.078431 0.086275 0 0.886275 0.882353 0.878431 Xa
0 J 0 j 1 w 4 M []0 d0 XR
6000.001 1722.7949 m
6000 0 l
1395.6821 0 l
3087.3447 1710.7959 l
6000.001 1722.7949 l
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(pencil 7) Ln
0 A
0 O
0 J 0 j 1 w 4 M []0 d0 XR
3995.002 1578.3574 m
3657.5654 1555.4307 l
3958.7666 1400.4287 l
3995.002 1578.3574 l
Bb
1 (Unnamed gradient 17) 3241.6553 3566.877 -41.603 81.5854 0.476981 0.878913 -0.878913 0.476981 11248.3623 -1639.1992 Bg
-18.5116 -79.4575 -323.8425 75.4473 3980.0166 1482.8281 Xm
-1935.9219 -8309.5615 -323.8425 75.4473 5915.9385 9792.3896 Bc
-18.5116 -79.4575 -323.8425 75.4473 3980.0166 1482.8281 Bm
-1935.9219 -8309.5615 -323.8425 75.4473 3961.5049 1403.3711 Bc
f
0 BB
0.270588 0.815686 0 0 1 0 1 Xa
3657.5654 1555.4307 m
3774.1201 1495.4512 l
3767.1963 1511.377 3771.6318 1531.291 v
3776.0723 1551.208 3788.3604 1564.3174 y
3657.5654 1555.4307 l
f
0.239216 0.831372 0 0 1 0 0.952941 Xa
5695.1221 1197.791 m
5668.9072 1164.3848 l
3974.7402 1533.3848 l
3960.0049 1546.6934 3966.6729 1556.5137 V
3970.0215 1571.5508 3995.002 1578.3574 y
5695.1221 1197.791 l
f
0.423529 0.898039 0 0 0.713726 0.031373 0.74902 Xa
5668.9072 1164.3848 m
5650.7979 1083.1006 l
3954.6416 1450.8379 l
3938.9395 1479.9287 3942.9248 1497.8145 v
3946.9092 1515.6973 3974.7402 1533.3848 y
5668.9072 1164.3848 l
f
0.662745 1 0.2 0.078431 0.447059 0.054902 0.458824 Xa
5650.7979 1083.1006 m
5664.6748 1030.5205 l
3958.7666 1400.4287 l
3936.417 1416.9248 3939.0449 1428.7148 V
3941.6699 1440.5039 3954.6416 1450.8379 y
5650.7979 1083.1006 l
f
0.090196 0.34902 0 0 0.956863 0.682353 0.956863 Xa
5650.7979 1083.1006 m
5651.4746 1086.1494 l
3952.624 1454.8682 L
3954.6416 1450.8379 l
5650.7979 1083.1006 l
f
0.039216 0.188235 0 0 0.945098 0.827451 0.94902 Xa
5668.9072 1164.3848 m
3974.7402 1533.3848 l
3971.3828 1531.0967 l
5668.251 1161.4404 l
5668.9072 1164.3848 l
f
0.137255 0.227451 0.423529 0 0.866667 0.756863 0.6 Xa
5695.1221 1197.791 m
5668.9072 1164.3848 l
5650.7979 1083.1006 l
5664.6748 1030.5205 l
5690.1709 1072.1934 l
5706.8389 1146.9766 l
5695.1221 1197.791 l
f
1 Ap
0.270588 0.815686 0 0 1 0 1 Xa
5671.0908 1075.5918 m
5664.2471 1077.1182 5662.751 1096.5518 5667.7549 1118.9961 c
5672.7568 1141.4395 5682.3584 1158.4033 5689.2041 1156.877 c
5696.0498 1155.3496 5697.5439 1135.916 5692.5439 1113.4727 c
5687.542 1091.0283 5677.9385 1074.0674 5671.0908 1075.5918 c
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 6 79 255 255 0 50 Lb
(2) Ln
0 A
0 O
0.498039 0.580392 0.87451 0.443137 0.356863 0.282353 0.152941 Xa
0 J 0 j 1 w 4 M []0 d0 XR
5039.998 2279.7549 m
5039.998 2342.8828 4758.3691 2394.0586 4410.9629 2394.0586 c
4063.5537 2394.0586 3781.9248 2342.8828 3781.9248 2279.7549 c
3781.9248 2216.626 4063.5537 2165.4512 4410.9629 2165.4512 c
4758.3691 2165.4512 5039.998 2216.626 5039.998 2279.7549 c
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(pencil) Ln
0 A
0 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
5199.1641 3147.8428 m
5157.5596 3557.3477 l
4981.2695 3184.6816 l
5199.1641 3147.8428 l
Bb
1 (Unnamed gradient 17) 4155.5498 -697.3506 -41.603 99.2908 -0.862486 0.50608 -0.50608 -0.862486 24137.3477 12422.5166 Bg
-97.3998 19.2855 78.4331 396.1197 5082.4463 3162.6094 Xm
-9286.6133 1838.7817 78.4331 396.1197 14369.0605 1323.8281 Bc
-97.3998 19.2855 78.4331 396.1197 5082.4463 3162.6094 Bm
-9286.6133 1838.7817 78.4331 396.1197 4985.0469 3181.895 Bc
f
0 BB
5157.5596 3557.3477 m
5089.3379 3413.1377 l
5108.4316 3422.209 5132.8379 3417.6206 v
5157.2402 3413.0317 5173.6875 3398.6167 y
5157.5596 3557.3477 l
Bb
1 (Unnamed gradient 1) 2151.4424 -754.1035 -71.222 83.4545 -0.502638 0.864497 -0.864497 -0.502638 23939.3086 6619.0503 Bg
-81.8089 16.4907 31.3883 155.7151 5147.7666 3399.3198 Xm
-7225.6543 1456.5137 31.3883 155.7151 12373.4219 1942.8057 Bc
-81.8089 16.4907 31.3883 155.7151 5147.7666 3399.3198 Bm
-7225.6543 1456.5137 31.3883 155.7151 5065.958 3415.8105 Bc
f
0 BB
0.627451 0 1 0 0.027451 1 0 Xa
4805.3965 1064.4297 m
4763.6953 1094.957 l
5143.6406 3170.6592 l
5159.2305 3189.1216 5171.4434 3181.4116 V
5189.8711 3177.9468 5199.1641 3147.8428 y
4805.3965 1064.4297 l
f
0.737255 0 1 0 0.019608 0.788235 0.019608 Xa
4763.6953 1094.957 m
4664.0908 1113.6816 l
5042.4141 3191.748 l
5077.165 3212.0308 5099.0791 3207.9087 v
5120.9912 3203.7881 5143.6406 3170.6592 y
4763.6953 1094.957 l
f
0.858823 0.184314 1 0.062745 0.023529 0.556863 0.023529 Xa
4664.0908 1113.6816 m
4600.6982 1094.6621 l
4981.2695 3184.6816 l
5000.4277 3212.5361 5014.873 3209.8208 V
5029.3184 3207.103 5042.4141 3191.748 y
4664.0908 1113.6816 l
f
0.32549 0 0.486274 0 0.654902 0.976471 0.654902 Xa
4664.0908 1113.6816 m
4667.8271 1112.9814 l
5047.2373 3194.3643 L
5042.4141 3191.748 l
4664.0908 1113.6816 l
f
0.239216 0 0.364706 0 0.752941 0.976471 0.733333 Xa
4763.6953 1094.957 m
5143.6406 3170.6592 l
5140.7207 3174.6475 l
4760.0879 1095.6338 l
4763.6953 1094.957 l
f
0.137255 0.227451 0.423529 0 0.866667 0.756863 0.6 Xa
4805.3965 1064.4297 m
4763.6953 1094.957 l
4664.0908 1113.6816 l
4600.6982 1094.6621 l
4652.4238 1065.3447 l
4744.0625 1048.1113 l
4805.3965 1064.4297 l
f
1 Ap
0.627451 0 1 0 0 1 0 Xa
4655.7832 1088.6924 m
4657.3613 1097.0791 4680.9355 1099.6836 4708.4395 1094.5146 c
4735.9434 1089.3418 4756.9668 1078.3506 4755.3906 1069.9658 c
4753.8125 1061.5742 4730.2324 1058.9658 4702.7314 1064.1367 c
4675.2246 1069.3076 4654.2051 1080.3008 4655.7832 1088.6924 c
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(pencil 2) Ln
0 A
0 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
4771.8428 3430.7842 m
4654.5156 3818.9033 l
4554.2246 3425.3838 l
4771.8428 3430.7842 l
Bb
1 (Unnamed gradient 17) 3727.0674 -315.374 -41.603 97.8072 -0.749859 0.661597 -0.661597 -0.749859 23816.9121 9422.0879 Bg
-97.8067 0.30933 1.25821 397.8328 4656.2012 3423.0615 Xm
-9036.6377 28.5799 1.25821 397.8328 13692.8398 3394.4814 Bc
-97.8067 0.30933 1.25821 397.8328 4656.2012 3423.0615 Bm
-9036.6377 28.5799 1.25821 397.8328 4558.3945 3423.3711 Bc
f
0 BB
4654.5156 3818.9033 m
4615.7051 3666.6226 l
4632.457 3678.9883 4656.9189 3679.1445 v
4681.3789 3679.3032 4699.9941 3668.4629 y
4654.5156 3818.9033 l
Bb
1 (Unnamed gradient 21) 3641.4072 -400.2246 -42.3576 69.9703 -0.749859 0.661597 -0.661597 -0.749859 23816.9121 9422.0879 Bg
-69.9609 1.14276 2.56242 156.8734 4663.6445 3663.8394 Xm
-8870.4932 144.8932 2.56242 156.8734 13534.1367 3518.9463 Bc
-69.9609 1.14276 2.56242 156.8734 4663.6445 3663.8394 Bm
-8870.4932 144.8932 2.56242 156.8734 4593.6836 3664.9819 Bc
f
0 BB
0 0.992157 1 0 1 0 0 Xa
4783.3613 1342.2119 m
4737.2969 1363.8799 l
4713.8633 3442.3945 l
4725.459 3463.1826 4738.7207 3458.0273 V
4757.1904 3458.1445 4771.8428 3430.7842 y
4783.3613 1342.2119 l
f
0.086275 1 1 0.019608 0.847059 0 0 Xa
4737.2969 1363.8799 m
4637.4609 1363.2324 l
4612.0156 3443.7285 l
4641.7969 3469.8789 4663.7637 3470.0225 v
4685.7266 3470.165 4713.8633 3442.3945 y
4737.2969 1363.8799 l
f
0.188235 1 1 0.117647 0.717647 0.015686 0.015686 Xa
4637.4609 1363.2324 m
4579.748 1332.9092 l
4554.2246 3425.3838 l
4567.5059 3455.9219 4581.9844 3456.0137 V
4596.4629 3456.1089 4612.0156 3443.7285 y
4637.4609 1363.2324 l
f
0 0.501961 0.282353 0 0.976471 0.596078 0.596078 Xa
4637.4609 1363.2324 m
4641.2031 1363.2549 l
4616.1875 3447.166 L
4612.0156 3443.7285 l
4637.4609 1363.2324 l
f
0.05098 0.258824 0.14902 0 0.929412 0.764706 0.764706 Xa
4737.2969 1363.8799 m
4713.8633 3442.3945 l
4710.2871 3445.7012 l
4733.6787 1363.8555 l
4737.2969 1363.8799 l
f
0.137255 0.227451 0.423529 0 0.866667 0.756863 0.6 Xa
4783.3613 1342.2119 m
4737.2969 1363.8799 l
4637.4609 1363.2324 l
4579.748 1332.9092 l
4635.2793 1314.2969 l
4727.1299 1314.8906 l
4783.3613 1342.2119 l
f
1 Ap
0 0.992157 1 0 1 0 0 Xa
4634.1328 1337.5039 m
4634.0801 1345.9111 4656.3848 1352.8701 4683.9531 1353.0508 c
4711.5186 1353.2275 4733.9141 1346.5576 4733.9707 1338.1523 c
4734.0205 1329.7412 4711.7158 1322.7803 4684.1484 1322.6025 c
4656.5811 1322.4229 4634.1855 1329.0947 4634.1328 1337.5039 c
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(pencil 3) Ln
0 A
0 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
4527.2344 3681.3027 m
4433.332 4085.3384 l
4304.7207 3690.2964 l
4527.2344 3681.3027 l
Bb
1 (Unnamed gradient 17) 4065.7705 -205.583 -41.603 100.0581 -0.791371 0.611335 -0.611335 -0.791371 23600.584 9771.0977 Bg
-99.8243 6.83485 27.7952 405.9541 4408.6797 3681.1733 Xm
-9356.1289 640.6026 27.7952 405.9541 13764.8086 3040.5708 Bc
-99.8243 6.83485 27.7952 405.9541 4408.6797 3681.1733 Bm
-9356.1289 640.6026 27.7952 405.9541 4308.8555 3688.0083 Bc
f
0 BB
4433.332 4085.3384 m
4383.5625 3932.4668 l
4401.4893 3943.9736 4426.4668 3942.5068 v
4451.4512 3941.0361 4469.7305 3928.7285 y
4433.332 4085.3384 l
Bb
1 (Unnamed gradient 2) 2317.8218 -291.8564 -63.4349 85.4572 -0.38899 0.921242 -0.921242 -0.38899 22668.4297 4039.5603 Bg
-85.2816 -5.47526 -10.4191 162.286 4443.9131 3925.0669 Xm
-7522.3359 -482.9502 -10.4191 162.286 11966.25 4408.0171 Bc
-85.2816 -5.47526 -10.4191 162.286 4443.9131 3925.0669 Bm
-7522.3359 -482.9502 -10.4191 162.286 4358.6318 3919.5918 Bc
f
0 BB
0.223529 0 0.058824 0 0.721569 1 0.992157 Xa
4399.7832 1548.4033 m
4354.2012 1573.5957 l
4468.8203 3697.019 l
4482.0449 3717.4678 4495.2402 3711.3223 V
4514.0996 3710.2129 4527.2344 3681.3027 y
4399.7832 1548.4033 l
f
0.403922 0 0.141176 0 0.505882 0.937255 0.92549 Xa
4354.2012 1573.5957 m
4252.2393 1579.5859 l
4364.9414 3705.1685 l
4397.084 3729.8833 4419.5166 3728.5645 v
4441.9492 3727.2441 4468.8203 3697.019 y
4354.2012 1573.5957 l
f
0.643137 0.117647 0.360784 0 0.352941 0.686275 0.670588 Xa
4252.2393 1579.5859 m
4191.3027 1552.4756 l
4304.7207 3690.2964 l
4320.3115 3720.584 4335.0996 3719.7153 V
4349.8848 3718.8442 4364.9414 3705.1685 y
4252.2393 1579.5859 l
f
0.290196 0 0.07451 0 0.647059 0.968627 0.976471 Xa
4252.2393 1579.5859 m
4256.0645 1579.3613 l
4369.4248 3708.4019 L
4364.9414 3705.1685 l
4252.2393 1579.5859 l
f
0.219608 0 0.098039 0 0.764706 0.917647 0.909804 Xa
4354.2012 1573.5957 m
4468.8203 3697.019 l
4465.3926 3700.6348 l
4350.5059 1573.8086 l
4354.2012 1573.5957 l
f
0.137255 0.227451 0.423529 0 0.866667 0.756863 0.6 Xa
4399.7832 1548.4033 m
4354.2012 1573.5957 l
4252.2393 1579.5859 l
4191.3027 1552.4756 l
4246.7549 1529.7764 l
4340.5586 1524.2578 l
4399.7832 1548.4033 l
f
1 Ap
0.223529 0 0.05098 0 0.721569 1 1 Xa
4247.1289 1553.543 m
4247.6348 1562.1289 4270.8691 1567.7461 4299.0234 1566.0928 c
4327.1777 1564.4355 4349.5957 1556.1357 4349.0898 1547.5508 c
4348.584 1538.9609 4325.3486 1533.3428 4297.1953 1534.9971 c
4269.041 1536.6523 4246.624 1544.957 4247.1289 1553.543 c
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(pencil 4) Ln
0 A
0 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
4220.5527 3325.2598 m
4113.8184 3722.0615 l
3999.9531 3326.5801 l
4220.5527 3325.2598 l
Bb
1 (Unnamed gradient 3) 8904.9395 220.5527 -41.603 99.1188 -0.769873 0.638196 -0.638196 -0.769873 26835.3105 6233.4224 Bg
-99.0616 3.36502 13.6856 402.8867 4103.1787 3321.0723 Xm
-14207.9053 482.6272 13.6856 402.8867 18311.084 2838.4453 Bc
-58.7839 1.99682 13.6856 402.8867 4103.1787 3321.0723 Bm
-40.2778 1.36819 13.6856 402.8867 4044.3945 3323.0688 Bm
-14207.9053 482.6272 13.6856 402.8867 4004.1172 3324.4375 Bc
f
0 BB
/BBAccumRotation (1.779021) XT
4113.8184 3722.0615 m
4069.7539 3569.0215 l
4087.1094 3581.0234 4111.8906 3580.4238 v
4136.6748 3579.8164 4155.1904 3568.2588 y
4113.8184 3722.0615 l
Bb
1 (Unnamed gradient 5) 6741.3955 -2295.3145 -70.2011 83.8291 -0.35707 0.934078 -0.934078 -0.35707 25706.5508 537.3417 Bg
-83.813 1.6407 3.0899 157.8429 4123.0801 3565.9775 Xm
-11965.1621 234.2272 3.0899 157.8429 16088.2422 3331.7505 Bc
-53.4193 1.04572 3.0899 157.8429 4123.0801 3565.9775 Bm
-30.3937 0.59498 3.0899 157.8429 4069.6611 3567.0234 Bm
-11965.1621 234.2272 3.0899 157.8429 4039.2666 3567.6182 Bc
f
0 BB
/BBAccumRotation (1.779021) XT
0.062745 0 0.964706 0 1 1 0 Xa
4167.0537 1209.2988 m
4121.0674 1232.6846 l
4162.1836 3338.8291 l
4174.5801 3359.5264 4187.8516 3353.8877 V
4206.5645 3353.4321 4220.5527 3325.2598 y
4167.0537 1209.2988 l
f
/BBAccumRotation (1.779021) XT
0.2 0.043137 1 0 0.839216 0.839216 0 Xa
4121.0674 1232.6846 m
4019.918 1235.1426 l
4059.0615 3343.3608 l
4090.0449 3368.9175 4112.2988 3368.377 v
4134.5518 3367.8359 4162.1836 3338.8291 y
4121.0674 1232.6846 l
f
/BBAccumRotation (1.779021) XT
0.337255 0.176471 1 0.003922 0.709804 0.709804 0.023529 Xa
4019.918 1235.1426 m
3960.5137 1206.2266 l
3999.9531 3326.5801 l
4014.3555 3357.0967 4029.0244 3356.7427 V
4043.6943 3356.3823 4059.0615 3343.3608 y
4019.918 1235.1426 l
f
/BBAccumRotation (1.779021) XT
0.05098 0 0.482353 0 0.968627 0.968627 0.603922 Xa
4019.918 1235.1426 m
4023.7109 1235.0518 l
4063.3936 3346.7109 L
4059.0615 3343.3608 l
4019.918 1235.1426 l
f
/BBAccumRotation (1.779021) XT
0.086275 0.031373 0.27451 0 0.917647 0.917647 0.764706 Xa
4121.0674 1232.6846 m
4162.1836 3338.8291 l
4158.667 3342.2896 l
4117.4004 1232.7715 l
4121.0674 1232.6846 l
f
/BBAccumRotation (1.779021) XT
0.137255 0.227451 0.423529 0 0.866667 0.756863 0.6 Xa
4167.0537 1209.2988 m
4121.0674 1232.6846 l
4019.918 1235.1426 l
3960.5137 1206.2266 l
4016.1855 1185.6455 l
4109.2393 1183.3789 l
4167.0537 1209.2988 l
f
/BBAccumRotation (1.779021) XT
1 Ap
0.086275 0 0.976471 0 0.976471 1 0 Xa
4015.7461 1209.1855 m
4015.9541 1217.7031 4038.7637 1224.0586 4066.6914 1223.377 c
4094.623 1222.6973 4117.1016 1215.2432 4116.8945 1206.7266 c
4116.6865 1198.2061 4093.873 1191.8516 4065.9453 1192.5313 c
4038.0166 1193.21 4015.5391 1200.668 4015.7461 1209.1855 c
f
/BBAccumRotation (1.779021) XT
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(pencil 5) Ln
0 A
0 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
3797.3105 3434.8442 m
3609.1504 3807.2627 l
3577.7207 3390.5415 l
3797.3105 3434.8442 l
Bb
1 (Unnamed gradient 17) 4344.2236 2966.5342 -41.603 100.6511 -0.623796 0.781587 -0.781587 -0.623796 20823.0137 4448.7837 Bg
-99.1814 -17.1372 -69.6864 403.309 3681.4795 3406.4399 Xm
-9516.1904 -1644.2693 -69.6864 403.309 13197.6699 5050.709 Bc
-99.1814 -17.1372 -69.6864 403.309 3681.4795 3406.4399 Bm
-9516.1904 -1644.2693 -69.6864 403.309 3582.2979 3389.3027 Bc
f
0 BB
3609.1504 3807.2627 m
3596.9873 3646.0049 l
3611.7598 3661.5239 3636.5195 3666.0493 v
3661.2842 3670.5728 3682.083 3662.9087 y
3609.1504 3807.2627 l
Bb
1 (Unnamed gradient 8) 4115.207 2338.8076 -66.1613 75.3021 -0.159393 0.987215 -0.987215 -0.159393 18558.0723 -898.1288 Bg
-72.8483 -19.0666 -41.0482 156.8339 3658.8428 3654.7588 Xm
-9029.6006 -2363.3228 -41.0482 156.8339 12688.4434 6018.0815 Bc
-72.8483 -19.0666 -41.0482 156.8339 3658.8428 3654.7588 Bm
-9029.6006 -2363.3228 -41.0482 156.8339 3585.9941 3635.6924 Bc
f
0 BB
0.862745 0.737255 0 0 0 0.192157 1 Xa
4181.625 1320.1543 m
4131.0703 1333.8926 l
3736.4736 3436.2622 l
3744.5176 3459.4009 3758.8789 3456.542 V
3777.5752 3459.9585 3797.3105 3434.8442 y
4181.625 1320.1543 l
f
0.921569 0.823529 0 0 0.019608 0.2 0.768627 Xa
4131.0703 1333.8926 m
4030.0068 1315.4219 l
3633.0176 3419.4448 l
3658.5322 3451.2632 3680.7695 3455.3252 v
3703.0049 3459.3896 3736.4736 3436.2622 y
4131.0703 1333.8926 l
f
1 0.933333 0.086275 0.027451 0.023529 0.168627 0.576471 Xa
4030.0068 1315.4219 m
3976.9258 1274.3926 l
3577.7207 3390.5415 l
3585.7295 3423.8599 3600.3887 3426.5405 V
3615.0439 3429.2178 3633.0176 3419.4448 y
4030.0068 1315.4219 l
f
0.368627 0.266667 0 0 0.603922 0.682353 0.968627 Xa
4030.0068 1315.4219 m
4033.7949 1316.1172 l
3636.6289 3423.6743 L
3633.0176 3419.4448 l
4030.0068 1315.4219 l
f
0.215686 0.156863 0 0 0.764706 0.796078 0.917647 Xa
4131.0703 1333.8926 m
3736.4736 3436.2622 l
3732.2607 3438.9766 l
4127.4082 1333.2246 l
4131.0703 1333.8926 l
f
0.137255 0.227451 0.423529 0 0.866667 0.756863 0.6 Xa
4181.625 1320.1543 m
4131.0703 1333.8926 l
4030.0068 1315.4219 l
3976.9258 1274.3926 l
4036.5244 1265.4414 l
4129.5107 1282.4277 l
4181.625 1320.1543 l
f
1 Ap
0.858823 0.729412 0 0 0 0.215686 1 Xa
4031.2207 1288.7539 m
4029.6699 1297.2656 4051.0322 1308.2988 4078.9395 1313.4004 c
4106.8457 1318.4961 4130.7354 1315.7324 4132.29 1307.2227 c
4133.8438 1298.7109 4112.4785 1287.6777 4084.5713 1282.5742 c
4056.665 1277.4746 4032.7803 1280.2422 4031.2207 1288.7539 c
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 5 255 79 255 0 50 Lb
(pencil cup) Ln
0 A
0 O
0 J 0 j 1 w 4 M []0 d0 XR
4908.2207 526.3115 m
4685.4375 421.7686 4414.6006 421.7686 v
4143.7656 421.7686 3916.6143 526.3115 Y
3781.1953 2282.0215 L
3960.2959 2165.4512 4434.2588 2165.4512 V
4908.2207 2165.4512 5040.7754 2282.7998 Y
4908.2207 526.3115 L
Bb
1 (Unnamed gradient 11) 3781.1953 1352.2842 0 1259.5801 1 0 0 1 0 0 Bg
1259.5801 0 0 -1865.0313 3781.1953 2284.7998 Xm
8975.1953 0 0 -1865.0313 -5194 2284.7998 Bc
373.7216 0 0 -1865.0313 3781.1953 2284.7998 Bm
885.8585 0 0 -1865.0313 4154.917 2284.7998 Bm
8975.1953 0 0 -1865.0313 5040.7754 2284.7998 Bc
f
0 BB
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(pencil 6) Ln
0 A
0 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
5294.6396 607.7881 m
5707.7363 549.0449 l
5323.123 385.5918 l
5294.6396 607.7881 l
Bb
1 (Unnamed gradient 17) 3752.2021 2045.2051 -41.603 100.6511 -0.540166 0.841559 0.841559 0.540166 8252.9385 -2026.0469 Bg
15.5858 -99.437 404.348 63.3776 5304.8955 488.9678 Xm
1403.7402 -8955.833 404.348 63.3776 3901.1553 9444.8008 Bc
15.5858 -99.437 404.348 63.3776 5304.8955 488.9678 Bm
1403.7402 -8955.833 404.348 63.3776 5320.4814 389.5313 Bc
f
0 BB
5707.7363 549.0449 m
5558.9033 485.7939 l
5568.8633 504.7637 5565.208 529.667 v
5561.5469 554.5742 5547.6152 571.8145 y
5707.7363 549.0449 l
Bb
1 (Unnamed gradient 12) 5616.2402 562.6289 -69.3046 105.068 1 0 0 1 0 0 Bg
37.1311 -98.2882 -154.8974 -58.5168 5693.6895 591.8877 Xm
3831.9521 -10143.4023 -154.8974 -58.5168 1861.7373 10735.291 Bc
37.1311 -98.2882 -154.8974 -58.5168 5693.6895 591.8877 Bm
3831.9521 -10143.4023 -154.8974 -58.5168 5730.8203 493.5996 Bc
f
0 BB
0 0.34902 1 0 1 0.690196 0 Xa
3168.4297 293.4004 m
3197.6592 249.9258 l
5315.5 550.6221 l
5334.834 565.6631 5327.5195 578.3486 V
5324.7598 597.1533 5294.6396 607.7881 y
3168.4297 293.4004 l
f
0.239216 0.443137 1 0.039216 0.756863 0.545098 0.023529 Xa
3197.6592 249.9258 m
3212.5859 148.2783 l
5332.7598 447.2393 l
5354.71 481.6123 5351.4258 503.9785 v
5348.1426 526.3418 5315.5 550.6221 y
3197.6592 249.9258 l
f
0.403922 0.607843 1 0.333333 0.466667 0.317647 0.054902 Xa
3212.5859 148.2783 m
3190.7539 84.8418 l
5323.123 385.5918 l
5352.1133 403.8662 5349.9473 418.6094 V
5347.7832 433.3516 5332.7598 447.2393 y
3212.5859 148.2783 l
f
0.039216 0.145098 0.443137 0 0.956863 0.839216 0.603922 Xa
3212.5859 148.2783 m
3212.0293 152.0908 l
5335.6055 452.0166 L
5332.7598 447.2393 l
3212.5859 148.2783 l
f
0.082353 0.109804 0.227451 0 0.909804 0.858824 0.768627 Xa
3197.6592 249.9258 m
5315.5 550.6221 l
5319.4229 547.5029 l
3198.2012 246.2441 l
3197.6592 249.9258 l
f
0.137255 0.227451 0.423529 0 0.866667 0.756863 0.6 Xa
3168.4297 293.4004 m
3197.6592 249.9258 l
3212.5859 148.2783 l
3190.7539 84.8418 l
3163.1563 138.4199 l
3149.416 231.9395 l
3168.4297 293.4004 l
f
1 Ap
0 0.282353 1 0 1 0.737255 0 Xa
3186.9395 140.875 m
3195.4961 142.1348 3199.0947 165.9082 3194.9717 193.9775 c
3190.8486 222.0439 3180.5684 243.7842 3172.0078 242.5254 c
3163.4463 241.2666 3159.8496 217.4902 3163.9717 189.4238 c
3168.0938 161.3564 3178.375 139.6201 3186.9395 140.875 c
f
0 0 0 0 1 1 1 Xa
6000.001 4866.165 m
0 4866.165 L
0 5000 L
6000.001 5000 L
6000.001 4866.165 L
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
