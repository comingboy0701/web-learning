%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: eco5.eps
%%Creator: Adobe Illustrator(R) 12
%%AI8_CreatorVersion: 12.0.0%AI9_PrintingDataBegin%%For: ִלטענטי
%%CreationDate: 11/20/2008
%%BoundingBox: 0 0 108 57
%%HiResBoundingBox: 0 0 107.8653 56.1348
%%CropBox: 0 0 107.8653 56.1348
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%+ procset Adobe_CoolType_Core 2.23 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_BuildNumber: Adobe Illustrator(R) 12.0.0 x198 R agm 4.3861 ct 5.530
%ADO_ContainsXMP: MainFirst
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 70 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/set_gvm
{
	currentglobal exch setglobal
}bdf
/reset_gvm
{
	setglobal
}bdf
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/thold_halftone
{ 
	level3
		{sethalftone currenthalftone}
		{
			dup /HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}
			{
				begin
				Width Height mul {
					Thresholds read {pop} if
				} repeat
				end
				currenthalftone
			} ifelse
		}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			/srcDataStrs [ imageDict begin
				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
				{
					Width Decode length 2 div mul cvi string
				} repeat
				end ] def		
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put
			imageDict /Decode [0 1] put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		DataSource 0 get type
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch get exec length exch 0 ne {pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type /dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{ 
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		dup /CSDBase known {
			/CSDBase get /CSD get_res /Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5 {cleartomark} bind def
}{
	/pdfmark_5 {pdfmark} bind def
}ifelse
/ReadBypdfmark_5
{
	2 dict begin
	/makerString exch def string /tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
		pop pop cleartomark exit
		}{
			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5
		} ifelse
	}loop
	end
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.
%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for
%% definitions of some fundamental procedures.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 201 dict dup begin put
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_in_pattern false def
/AGMCORE_currentpagedevice nd
/knockout_unitsq nd
currentglobal true setglobal
[/CSA /Gradient /Procedure]
{
	/Generic /Category findresource dup length dict copy /Category defineresource pop
} forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_&setoverprint /setoverprint ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not AGMCORE_currentpagedevice/OverrideSeparations known and
						{
							AGMCORE_currentpagedevice/OverrideSeparations get
							{
								/HqnSpots /ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace
							false
							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup (Cyan) eq exch /Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup (Magenta) eq exch /Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup (Yellow) eq exch /Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup (Black) eq exch /Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type /dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading /AGMCORE_ignoreshade known
					currentdict end exch
					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where {
						begin
						dup 0 get dup /Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[ 
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get [ 
									exch {
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									} forall 
								] 1 xpt
							}if
						}ifelse
						end
					} if
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin /clonedict load end def
	/clonearray Adobe_AGM_Utils begin /clonearray load end def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/getrampcolor
	{ 
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type /stringtype eq {indx get} if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		} for
		ColorSpaceFamily /Separation eq 
		{sep}
		{
			ColorSpaceFamily /DeviceN eq
			{devn} {setcolor}ifelse
		}ifelse
	} bdf
	/sssetbackground {aload pop setcolor} bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		c1x c2x eq
		{
			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
		} ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			/max { 2 copy gt { pop } {exch pop} ifelse } bdf
			/min { 2 copy lt { pop } {exch pop} ifelse } bdf
			rampdict begin
			40 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}
						{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{ /theta 89.99 def}
							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}
							{
								/L1maxX 0 def
								/L2maxX 0 def
							} ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						} ifelse
					} ifelse
				} ifelse
			} if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt { exch } if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			} if
		} if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		newpath
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}
		{
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			} repeat
			pop
		} ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}
			{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}
					{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{ /theta 89.99 def}
						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}
						{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					} ifelse
				} ifelse
			} ifelse
		} if
		grestore
		grestore
		end
		end
		end
		} ifelse
	} bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		x1 x2 eq
		{
			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			rampdict begin
			20 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt { exch } if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				} if
			} if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				} if
			} if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			} repeat
			pop
			ext1 {
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				} if
			} if
			grestore
			grestore
			end
			end
			end
		} ifelse
	} bdf
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
/capture_currentpagedevice {
	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf
} def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup //Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name /MappedCSA xdf}ifelse
} def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup () eq exch (All) eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc {setcolor} bdf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		7 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {
					/AliasedColorants false def
					exit
				}
				{
					new_LookupTables names_index get 0 get null eq {
						dup /Names get names_index get /name xdf
						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
						or or or not {
							/AliasedColorants false def
							exit
						} if
					} if
				} ifelse
			} for
			lut_entry_len 1 eq {
				/AliasedColorants false def
			} if
			AliasedColorants {
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	dup not {
		CSA map_csa
	} if
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants {
				/currentspotalias current_spot_alias def
				false set_spot_alias
			} if
			Names {
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				/names_index names_index 1 add def
			} forall
			AvoidAliasedColorants {
				currentspotalias set_spot_alias
			} if
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
 					0 0 0 0 /setcmykcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				{setcolor} bdf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSDBase known {
			CSDBase /CSD get_res begin
			currentdict /Names known {
				currentdict devncs
			}{
				1 currentdict sepcs
			} ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt /Names where {pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal {
					/tableIndex xdf
					Lookup dup type /stringtype eq {
						compCnt tableIndex map_index
					}{
						exec
					} ifelse
					/Names where {
						pop setdevicencolor
					}{
						setsepcolor
					} ifelse
					currentgray
					tableIndex exch
					HiVal mul cvi 
					NewLookup 3 1 roll put
				} for
				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
				end
			}{
				level3
				{
					currentdict /Names known {
						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt
					} ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict /Names known {
						Lookup dup type /stringtype eq
							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
					}{
						Lookup dup type /stringtype eq
							{/exch cvx /get cvx 255 /div cvx}
							{/exec cvx}ifelse
							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx
					} ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			} ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 
			begin
			CSDBase /CSD get_res begin
			currentdict /Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
			end
		}{
			/Lookup get 4 3 -1 roll map_index setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {
			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup /CSD eq {
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	} ifelse
}def
/del_res
{
	{
		aload pop exch
		dup /CSD eq {
			pop 
			{
				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef
			}forall
		}{
			exch
			{
				1 index undefineresource
			}forall
			pop
		} ifelse
	} forall
}def
/get_res
{
	dup /CSD eq {
		pop
		dup type dup /nametype eq exch /stringtype eq or {
			AGMCORE_CSD_cache exch get
		} if
	}{
		findresource
	} ifelse
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		/CSA get_res
	} if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	clonedict
	begin
	/OldPaintProc /PaintProc load def
	/PaintProc
	{
		mark exch
		dup /OldPaintProc get stopped
		{closefile restore end} if
		cleartomark
	}  def
	end
  } {pop} ifelse
} def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	1 index dup /ID get exch /Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}{null}ifelse
	Intent ne {
		Intent /ColorRendering {findresource} stopped
		{
			pop pop systemdict /findcolorrendering known
			{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				true
			}
			{false} ifelse
		}
		{true} ifelse
		{
			dup begin
			currentdict /TransformPQR known {
				currentdict /TransformPQR get aload pop
				3 {{} eq 3 1 roll} repeat or or
			}
			{true} ifelse
			currentdict /MatrixPQR known {
				currentdict /MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true} ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR [
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind
				] def
				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def
				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def
				currentdict end
			} if
			setcolorrendering_opt
		} if		
	}if
} def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict /ColorRendering known{
			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0} ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get /CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		currentdict/TintProc known currentdict/CSA known and 3 1 roll
		//Adobe_AGM_Core begin
		dup /customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			4 -1 roll{
				exch pop /sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
			pop
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
/set_def_ht
{
	AGMCORE_def_ht sethalftone
} def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.25 0
%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.25 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.25 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict /Adobe_CoolType_Data 2 copy known not
	 { 2 copy 10 dict put }
if
get
	 begin
	 /@opStackCountByLevel 32 dict def
	 /@opStackLevel 0 def
	 /@dictStackCountByLevel 32 dict def
	 /@dictStackLevel 0 def
	 end
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup /args
			7 index
			5 add array put
			put get
			}
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{ pop count }
			if
			dup /argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					 { (*) { pop stop } 128 string /Category resourceforall }
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup
					 {
						  /@shouldNotDisappearDictValue known
								{
										  {
												end
												currentdict 1 index eq
													 { pop exit }
												if
										  }
									 loop
								}
						  if
					 }
				if
				end
		}
		{ false }
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
		currentglobal false setglobal
	  userdict /Adobe_CoolType_Data 2 copy known not
		  { 2 copy 10 dict put }
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0
%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.
%%Version: 1.21 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 27 add dict copy }
	{ 27 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
				mark
				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put
					 {
					 ((Hex) 57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
					 }
				stopped
					 {
					 cleartomark
					 Adobe_CoolType_Utility /@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						  {
						  2 copy get 3 index eq
								{ 1 index length exch sub 1 sub { end } repeat exit }
								{ pop }
						  ifelse
						  }
					 for
					 pop pop
					 Adobe_CoolType_Utility /@eexecStartData get eexec
					 }
					 { cleartomark }
				ifelse
			} }
			{ {
				Adobe_CoolType_Utility /@eexecStartData get eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/AGMIMG_flushfilters
{
	dup type /arraytype ne
		{1 array astore}if
	aload length
		{
		dup type /filetype eq
			{
			dup status 1 index currentfile ne and
				{dup flushfile closefile}
				{pop}
			ifelse
			}{pop}ifelse
		} repeat
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator /imagemask eq{
 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									[ /Separation Name [/DeviceGray]
	 									{ 
	 										sep_colorspace_proc AGMCORE_get_ink_data
											1 exch sub
	 									} bind
										] AGMCORE_&setcolorspace
										/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0 () /SubFileDecode filter
				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0 () /SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx
			}for
		/convProc load /exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2 /add cvx /index cvx
			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx
			}for
	]bind cvx 0 () /SubFileDecode filter
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt {1 add 2 div cvi}{exit}ifelse
			} loop
			string
		} repeat
		end ] def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [ [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA get_csa_by_name 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							devn_alt_datasource
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get get_csa_by_name
				}{
					/Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="ן»¿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2008-11-20T16:39:14+03:00</xap:CreateDate>
         <xap:ModifyDate>2008-11-20T16:39:14+03:00</xap:ModifyDate>
         <xap:MetadataDate>2008-11-20T16:39:14+03:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>136</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAiAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYqx7WvPnlzSuSyXH1idf9029HNfdq8R9+azU9r4MW18R7hv8AsapZYhONNuri6sIb&#xA;meD6tLMocwFuRUHcAmi706+GZ2DIZwEiOEno2RNhE5al2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpJrnm3TdLDRg/WLof7qQ7A/5Tds0+v7aw4PSPVPuH&#xA;6S1TyiLzXzN511W+Vlmm9K3Owt4qqp9j3b6c5PVdqZ9RsTUe4cv2uLPKSgvIWjHWvMsHrrytretx&#xA;MvbihHFfpYivtlvZGlGbOAfpjufh+1GGPFJ7lnfuwdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVaZlVSzEBVFST0AGCUgBZ5KxDzB5mmkR4rJzFbD4XuOjOfB&#xA;fDOP7S7ZlluOI8OMc5dT7vx8nGnlvlyefajeKis7GijcnOYAs7OMWPeje3wkvBE5t4jQvT4Vr4nx&#xA;y7kxepflFYLHYX14R8Ukiwg+AjXkf+J51ns3i9E595r5f2uXphsS9AzpnJdirsVQOs6NZavYvaXa&#xA;nid0kU0dGpsynxGY+p00M0OGX9jGURIUXjevQ+Z/LWpNayXlwEPxQTxySKsieIoeo6Eds4fVwz6b&#xA;JwmUvIgndwZiUTVr7Dz15jjoF1GViO0hEnh/OGyuPamphymfv+9Rll3shsfzI1taCYQzjuWXif8A&#xA;hSB+GZeP2i1EefDL4fqbBnkyGx/MOzloLq2eI/zRsHH3Hjmxw+00D9cCPdv+psGoHVkFjrOmX1Pq&#xA;1wrMf2D8Lf8AAtQ5u9N2jgzfRIE93I/It0Zg8kbmaydirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirHdfvzcXB06N/TgjHO8l8FG9P8++cp2zrDlyfl4moR3mf0fjq0ZJWaYHq+oCaQ8BwhTa&#xA;JPAf1PfOXzZeM7bRHIONKVsO1Caa8uvq0CtIF3KqCSSN+g8MQKDWWUz6xpC+VLPStO5NcOi/XSVZ&#xA;QjD4nFWA5Et3G1Mzc88QxREd5Hn5NpI4aDPfy3g9Ly0p/wB+TSP+pf8AjXOq9n41pr75FycA9LKc&#xA;3jc7FXYq7FUo80eXbXXtLe0lAWZatbTd0k7fQehGYWv0UdRjMTz6HuLDJDiFPBr/AE+e0uZbeZDH&#xA;PCxR17hlNM88nAwkYy2IdcRS231CSE8Zasv83cZAi1tO7W8VlDK1QehGVmKU4s7uEkCQFf8ALU/w&#xA;OTiYH6hXmGYIZXpuu6naRh+f12zHUk1ZR8+o+nN5pu09Rpxd+Li+0fpH2hujMjzDKtP1O0v4vUga&#xA;pH20OzL8xnV6LtDFqY3A+8dQ5EZiXJFZmsnYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVsriON3&#xA;PRQW+4VyGSXDEnuCl5jfai/1WZi1ZbmT94fZfiP3ls8xOUmEifqnLf7/ALy4Blt72Ha7qkVpayTS&#xA;uEUbBj0yGLGZGgwAJIA3JSbQvP2n6No+t6ta2c2oyW0Kh3iRmaNGNZJONORVV+Jj2pvtm90vZmU8&#xA;wDxDbcbe9z5dnZ8d8car7Px5JnolzZ6jY29/ZSCa0uUWSGUVFVYVGxoR8jmjzY5QkYyFEOART27y&#xA;dB6HluySlCVZz/s3LfqOd/2NDh0sPn8yXOxD0hOc2jY7FXYq7FXYq82/NPQVEsOrxLT1f3NzT+YD&#xA;4G+lRT6M5H2i0lEZR12P6HE1EOqR+XvKmj61proS0d+jUeVSfhqTQlOhFM0el0/iki92qEAWK39l&#xA;f6JqU1pKKSRNR1/ZYEVBHzGV5cRhIxlzDAgg0mVjqCSqCp37qeozHlGltPNM1We1lEkTUP7SndWH&#xA;gRksOaWOVxZxkQyJLuNQup6YxiKkC4g/kJ/WjZmcfARnwHhI5ju/YWy+oZnpOpRahZrOmzfZkT+V&#xA;s7ns7XR1OITHPqO4uTCfELRmZ7N2KuxV2KuxV2KuxV2KuxV2KuxVjvmweboYGu9CmR1QfvLNo1Zz&#xA;TqUYg1/1fu8M1naP5mI4sJ+Fb/D9TVk4uYefRfmj5jVuNxMqEbGsSU/VnLHtvVfzh8g43jyT7Tvz&#xA;D1J+PqtFIp7lSP8AiBH6sni9odQD6uE+8fqZjOWV2PmW0uYwLhREknwiUHnESexbbj9ObvT9t457&#xA;ZBwg9ecfn0+LcMoPN575p0670q6aKUEwMS1vL+yyn38fEZyeu0E9PPhP09D3uLkiYl5b57tbvUrN&#xA;hbsaW/xlFp8VKFh1H7Nf1d8v7OzxxSPELsU5vY8oDVwM5cIvn3f2/TfnvsxTyDca+mqTQ2tbkSOy&#xA;EcCsccTDiVkPQgb/ADzeZM8cFSPp2+b3eu1mEYZnJMT9R4RVfDz972Tyv5as7OK20rSLVIIvhSKK&#xA;MU6ClWPUmg3Y5y15dRlA+qci+bbyL3C0t0trWG3T7EKKi/JRTPS8OIY4CA5RADngUKVctS7FXYq7&#xA;FXYql+v6Wup6Rc2RHxSJWIns67r+IzE1+m8bDKHUjb39GM42KeMQzX2n3XrWsjW9whI5LsfcEHr8&#xA;jnnGPLPHK4mpB14JC61aDV9daXX5zIbleHrErEA4AVPshVA2p0y6WWWbJczufgm+I7pb5i0WbQdZ&#xA;ktkk5hQrxP3KOKjkBktTpzinwlE48JpWsdQWVfBh9pfDMOUUAp5p2otBIGG6MOMidmU9RksWQwlf&#xA;Tr5hlE0y7yTeFdUltlblFIhI9ypqp+4nN97O5ODUSgPpkPu5fY34TvTN87ZynYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq89866DBpmppr0FpHPbTkx31uygryb9oVBA5eNOvzzke3NCMcxmiPSfqHn+373FzQ&#xA;o2w6w02wvdQ1E2kx0/b1bC3kZfTNKlkYmn0UP35o4445ZkR2HS/uaAAS1o/mJ42oDQsKSRN0YeB8&#xA;cxokw5ckRlT0TTrlNR8j6ibhfUigjnWIyAMQEi5KRXupOxzrezp+JoJie8Y8VX3AX9jlQNwNpNof&#xA;5X6Ze6HZ3clxNFeTx+pIRxZPiJK/CRX7NO+VaXsLHlwRmSRIi/JjDACLTC3/ACsto3q2oOyeAjCn&#xA;7+R/Vkh7MxveZr3ftT+X82TaP5d0zSlrbIWlIo00hq5Hh2A+jNzouzMOm+gervPNuhjEeSZ5sGbT&#xA;uqKXYhVUVYnoAMjKQiLPIKx2+80ijG2ZIrdSR9YlBJYj+RBuc5jU9vSl/dVGH86XX+rH9f2NEsvc&#xA;xXUfNd05IW6mI8eXpj/gU/rmhzdp5Z/xzPx4fsDTLIe9jd55xu0JVb2Zm/lSRj/HKBqM38+X+mLX&#xA;xnvXaR5g866leraaXcXLyt0BkZlUDqzciVUCuZulz6qcuHHOZPv/AFsoymTQeuaDZaza2gGrX/16&#xA;5YCvFERE9l4gM3zP3Z2+kxZYR/eS45e4OZAEDcsC886N9U1h5kWkN3WVT25H7Y+/f6c4rt3S+FnJ&#xA;H0z3+PX8ebi5o0Xknm+08wa15q8u+V9GmksILy5aTVdWWIlbeK3j9eiyMPT5mNHYLWpIUdDmT2Dp&#xA;ceQyOSjtsL+Zrmz02ISNJf598xWmnaqlnpFyyvGOEfqurPNx6u6gKpJHXioHyzMzaPDREYenv/a9&#xA;vo+w9MYCOQDily33+HVMfLesNqenRX6J6ctSk0e9OS9evYjfNDrNN4OTguxzeH1mn8LIY710vnTK&#xA;LS8DKCD8xmEYuO9I/LnT5aTarMOMPExQk7A71dvkKUzp/ZzSGJlmltGqH6S5WCPVP9R80W9uhaFQ&#xA;6gkCZzxQkfy9Wb6MztV29CP92OIfzjsPh1l8GyWXuYjqP5haqrUhkjjJPFQqAkk7AANyrmkydv6q&#xA;R9JA9w/XbQc8kDeea/zCTULfT4nJu7kAxwiOAtQkjccTTp3yWPtPXSkICR4j04Y/qR4k7p6NoVrr&#xA;FvZAate/Xbx6FyqJGif5K8VUn5n8M6/SY8sYfvJcUvcB9zlwBA3KY5lMnYq7FXYq7FXYq7FXYqo3&#xA;lpBeWstrOvKGZSrj2P8ATKs2GOWBhLkUEWKeS695TvbC4eNomeKv7uZQSrDt07+2ed6zs/Lp5mJB&#xA;I6HoXBnjIKG0j8vdY1W4UhGtLYGrXMikUH+QpoWP4ZkaHsrNnPLhj3n9HesMJkzyyP1TyjfaTOFS&#xA;6sEe1m4igf1dklA/4sDV+dc35yjFosmM0JYwYn48j/nW5ANQI7ky8uX9lFolpFNcxRyRqVKM6ggB&#xA;iBsT4Zd2RrsQ00BKcRIDkSO8sschwhT8x6Fp/mKzKwXIS9iBNvcRPWh/lfid1rmRq9Pi1cPRIcQ5&#xA;EH766LOIkHnFqdctZxY288/6TtjILy2aTgAEYDnG9VUgg9PuzjDHLCXAJSjMHldfpcXcbdWQ+XfP&#xA;k0gVZZ/UB6eqag+3L7Sn51zN0nbWbGakb/rfr5j37hshmLI/Mmpev5Wlu7WvAlfVH7SgMAwPyPXN&#xA;12nqfH0JnDkavy33DbklcLDyzUteoasxY9EQdgOw9s4o3I2XDJSuBZNS9drm7FpFEnJYwCzSMeig&#xA;ClctjEUT3IG6b2cWmz6Xb6Xp+mc9TuKLNcycWPMkf3fcD7qZdUZiMIAmZ/GzIURQG71nyt5Zs9B0&#xA;5YIlDXLgG6n7u3h/qjtnd9n6COmx0PqPM/jo5uPGIhOcz2xK/MejLqunNCKCeP44GP8AMO3ybNb2&#xA;roPzOIxH1Dcfjza8kOIPHvM2kajLp15ZW0sllflSiSqSjow7VFCK9D7ZwukzHTZwZD6TuPscbFkO&#xA;OYPc8L1Xy9rkurRGbT3lvYiVSRzRlrsTXevLOkx6jHKMiZ8MT8be1y+0mjiISiOOcR1uJj9hu/K3&#xA;pflvQp7DSo7eRSZnPJlHWrdqZzWoy+JOw8n2przq88stUDyHkGTTeUdf06wj1e5tSlqXVWickPQ7&#xA;gso3UHp45kZOz8uPGMs4+m/j+xwjjIFl6f5n1KG38vWUlovCxuOHEJ8I9MpyRdugOdB25mrTQEP7&#xA;uVcu6rAcrLL0iuTzHWfMUrvQH1JaUVR9lR2+QzkTcjcnEMkrax1HnBd3DFXl/eQENRgAdmABqu/T&#xA;JG410RRetfl5oElvaPrF8Wl1C+Hwyyks4i7btv8AH1+VM7LsPSGMPGnvOff3ft/U5mGG1nmWY5v2&#xA;92KuxV2KuxV2KuxV2KuxV2KuxVLNe1pNLtOYX1J3qIo+23Vmp2GavtXtIaXHfOZ5D9PuDXknwhgM&#xA;t897dPNdzUdwSXpXoNgAM4DLllnyGWSW56uITZ3Ul9ZkMioxQdXAJA+nKRikRYBpFKrCe3ht7oPx&#xA;9YsY2UkEFCAd/pyfhzgIzG18vgtVuh9RF3qLfXoXddQt0pLNGSrtGNg5K0NV6E+FPA5lnPkzev8A&#xA;ykBuepHf7xyJ7q7iUkk79WM2miarJerFpsLyzMf7tenzJ6D5nK8GGeaXDEcRYCJJ2ej2kk/+FINE&#xA;tif0tqJlt51lH9wakTsw32QD4fHrnUYCIaaOCG+XISDfT+dfu+1yR9PCOZYd5j/L3UNHnMqcruxO&#xA;4uQN18RIBXj8+majtHsrJpzY9UO/9bTkwmPuS6204kgBak9Bmntrp6d5J8p/o1Pr92lLyQUiQ9Y1&#xA;PWv+Uc7TsTss4h4mQes8h3D9bmYcdbllmdE3uxV2KoHUtD0zUd7qAM4FBIKq4+kfxzC1fZ2HP9cd&#xA;+/qwlAHmlB/L7QC1SZiP5eYp+C1zXD2c01/xfP8AYw8CKaab5d0XTiGtLREkH+7TVn/4JqnNlpuz&#xA;8GH6IgHv5n5lnGAHJX1SyS+025tHAYTRsoB8SPhP0HfLNVhGXFKHeCmQsUwe1lk1PytD5cQgXssw&#xA;hSRhy9OFT6plp/krVRnLaPUjUaWOn/jMq9w+ri+HJx4nijw9WN6n+W+tabcMUia9t61SeIFmI/yk&#xA;FWB/D3zC1nY+fEdhxx7x+prlhITXyx5Hu7m6R7yBoLRDyk5gqXp+yoO+/jh7O7Hy5pgziY4xzva/&#xA;IJx4iTu9QVVVQqgBQKADYADO8ArYOa3hV2KuxV2KuxV2KuxV2KuxV2KuxVgfmHX1h1y/iaIzhYRB&#xA;Dx2CnjyPKvbkxrnE9qayP5mYkLqPCP2/EuJkn6ilXlaxTUtZiglBaBAZZgO6r0B9ixAzXdkaQZ84&#xA;jL6Rufh+1hijZelyz2dnCpmkjtoRRELsqLWmyitB0GehTyY8URxERjy7g5pIDGLzRfKV1fSXTalF&#xA;EslCYopYlHLuanl1zndR2fosuQzOUAHoJRaJQgTdo/SLDypa3MbWVxFJd7hG9cO5qKGihqdPbM3R&#xA;aTRYpg45RM/61n5X+hnCMAdlHzZcXtu9lHYM8bzepyWL4S1OFK0+eYXtBmyYjjGImPFxfT1+ljmJ&#xA;FUxay1W6tr97iMF7xwykkcmLNtX3IzmNNrcuPKcg3mb+ZaIzINqttrGs3F3HFHdSmWVwqqXJWrGm&#xA;6namW4dbqsmQCM5cUj37fLkkTkTzZRrepafoqx+lbxPqDiqtwVSB0LtxAO5zqu0tZi0YHDGJynyH&#xA;zNN85CPvYtL5j1i4lqbqQMdgsZKD5ALTOTydqarJL65fDb7nHOSR6tfp3WYJRyuZldd+MjMfvVqj&#xA;AO0NVjlvOd+ZP3FeOQ6so8ueZ2vpfqV4At1SsbgUD0FSCOzd86nsfto5z4eT6+h7/wBrkY8t7FM9&#xA;a1i30u09aX4nY8YogaFj/Qdzm07Q18NNj4jueg72c5iIYRd+adWuX5G4aJeyREoB925+k5w2o7Z1&#xA;OU3xGPlHb9rinLIqbazrMRUvc3CV3Xk77/ecqOt1UOc8g95P6Uccu9PdC83yvcraaiQfUIVJ6BSG&#xA;PQMBQUPjnQdldvSlMY83XlL9bdjzb0U58wSTLb2yRSvCZZ1Quho1CjGn4Ztu2ZzGOIhIxJmBY51R&#xA;bMhNMIjupNK1fkSecEg9TiaFlqCR9IzicWSel1AJ5xO/mP2uKDwlUvPNOq3Mpf6w0K/sxxEoAPo3&#xA;P05bqe2NTllfEYjujsmWWRR0Ou6jpyWdzLcPcQ3NTJFIeWy0rxJJPRsy9N2lqNOIzlIzhLmDv8iy&#xA;EyKLOI3SRFkQ8kcBlYdCDuDndxkJAEci5beSV2KuxV2KuxV2KuxV2KuxV2KuxV53c3FjaeddTGoO&#xA;I0KFkala1RX49DuVzh9VjxjW5PENDn9g/Q4kq4zaF/Lu8jXzE0Z29eGRIx7gq/6kOR9nZiOpr+dE&#xA;j7j+hGA+plH5g2l5c6NDHaQSTyC5VikSlyF4OK0Wu2+b72gwzyYAIAyPGOW/Qt2cEjZ5zNYajbyw&#xA;x3VvLbGduMZlRkqagGnICtK5xWXTZMdccTG+8U4hiRzTzTdPOm+cdPtuRYMVcE9dwQfxGbDs/Ace&#xA;rgD3tkBUwynzjqsGm3WnzTwtOjLOvFSAQaxkHfbN/wBuZYY54zMWPV/vW7NIAi2H6fbXep6hHPwM&#xA;cNxcgO6GnEu9W4f6ucrgwHPmG1Cc/vPRx4gkvSrfRNKt5YpoLZI5YQQkgry3FDU/tGh6nPQMfZ+C&#xA;EhKMQJR6/jn8XNEAHnPmfVGfX78MqsA3ogMK8QlBVfA1XOG7XzGWpnfu+Th5Zeoqfl/zFBpNzJcP&#xA;bfWZSvGM8+HAH7R+y25yPZmujppmZjxGtt6rv6Fcc+E2j9U842Gqy2huLMwLBKGeYP6h9P8AaHEK&#xA;pPY5ma7tTHqzEShw0ed3t16Mp5RLogb/AF21bW4buyr6Nu0fpswKl+BrUqdxXp8swsueEdQJ4+US&#xA;PjTEyHFYTL8wr5jrMcFTwhhXbtyYkkj6KZsPaTIZZxHpGP3/AIDPOd0q03VtPsLm0vPSNzLGGMsJ&#xA;biA9fgO6noN81mjzQwTjkI4iL2vr06NcZAG0z1vzxBqmnvaNY+mxIaOUycipBrUDgO22bPtDtuOp&#xA;xGBx13G+X2Nk83EKpjkt/JLIZJGq5AFen2QFHT2GaCUiTZaSWcebryWTynpt2WIlleCQsNjyaFmq&#xA;Ke+dh2zllLRY5/xExP8AsS5OU+gFhkUr3TyyS3FZftFpWJZyWAoCdyd85M8WWRMj6j3uNzZ55i8v&#xA;aVbeXZmt4FWW2UOk37ZoRy5N3qM7HtLsrBDSnhiBKI59fj3uVkxgR2eeG6Y0BYkKKKCSQAd9h2zi&#xA;jIkAE7BxLevaIa6NYHxtoT/yTGem6H+4x/1I/c7CH0hG5lMnYq7FXYq7FXYq7FXYq7FXYq7FXnn5&#xA;h6RNNew6haKVmC8LhGoNlPwyA7huvE/RnG+0GEGQmAQa32+3bbyPds4meO9sLE1xZX0M1ozRXKEO&#xA;tRQrIP2RXqP15z+LKYSEomiGgGjszqy/MDU5oo/Us4/rAI5lJCEK13qhViPobN8faWdD0+r37H4f&#xA;tcgZylep3l9r+oRNqDi0trMOUEfGvKo+yfiqTQf0zX6rtCeql6yIiPd+N2uUjI7obTJ72TzLYXl7&#xA;LwnDBWDAELxUgbLQUplej1MjqIykeXVET6gSnPnq8t7+4soLdWuvq4cO1eIrJx6kAdOObDt/Vwym&#xA;Aib4b399e5szSBpA+WfrK+YNPs57km0glkaONdow3BitCab8ux3zG7HzE6jHCR9IJr30WOI+oBnu&#xA;p63b2cggDD1jStd+PL7IpUVY+H0kjOv1vaMcJ4b9X3ft+XmQ5UpgPOvNVtcQ61JPEkdxHfxlg4Id&#xA;QxWj0Pw/Ep3r75xvaUaymdiXH3b79fi4mQb+9U0aPSdPSKXUbdb2G5SrNxr6TDcGla0+Kh/syGiz&#xA;Y8RvLETjL5j8df2LAgc0VqPmDyjbyRxW2hrcyNUyV5RKPCnJSx8d1GbHJ2howBw4RI9e74bb/IMz&#xA;kh3Klve6LcahDbDRIYubKGcN6iqDuWYkJ8IHbY5XDWYMmQRGKMB8/ny+XP7kCQJ5O/MG1S41GG8g&#xA;PqqIxDIF6GQVcAsO/Fv1eOWe0IEpjJHcVRPnz+75bJzizaQ6CltDcveX8Kz20FPWtftNxZgtVHit&#xA;a9emajRZIRyAzAlAc/2ebVCgd2TXGpeR2aKPTdOS8lkYA1V4UArv8TipPyGb7U6zQRA8PGJy+X3t&#xA;xlDoLQt1rHly2vWtToEUpXj8aSAdRU7Fe1fHMY9oaaJqWCN+/wDYxM49yt5qvLa68vWlrbkhxNGV&#xA;UiihFjdRwH8oqKd8PaOtx5NOIxuxIe7YH6R3fb37pySBjTDFhnjnUgGREdfUdASFq1By22zRYt5D&#xA;3tAei+YddS+tL+1tCzRQxkGSMVUmtOTMAfhrsoG7H269Z2n2gM0JwhZjEbkcvie7uH8R8ueVknYI&#xA;Dzi8e2jjjCSM91ycXAOwFKcabd9++clQrzcV695ZvBLpVlGWVTHbwr6VavtGvxGnQeGegdm6kShG&#xA;NjaMduvLn7vwe5zsctgnGbVsdirsVdirsVdirsVdirsVdiqE1C2u5kpby+m3ien3UOYWswZJj0Sr&#xA;8e5jIE8ng+t/nHZW2p3en3kN9bfVZWjaaWzkRCUqoZkUE0au3wqaHOT1PZ2qs7g+419mwYy0eUix&#xA;ux6X85PKbBJImmdKlpEjjYBKfa4+oEqT+Fcwx2Pn6gD4/qRHs/KeiKk/OzyakREUtzJKaFY1t3DH&#xA;ltRg3FfhpUnlkR2NnJ3AHxCjQZSapYfzo8oCFgrXHNgpEPpOrDkT8O6BafI74f5Gz3yHzUaDLdUo&#xA;j86/KkksPprdxlW4mSVUBHcFeDMWZSK9Oh98n/I2eO+3wLL+TsvkqXv50+VRzmkllnYP8JWGbkD0&#xA;5sZAiMS1dv45Edk6iZ3G57yP7WA0OY8w7/lePllJkAkuFanNnWNwBXoRuWVh12qMMeyM8dxVjzT+&#xA;Qzdy+b84/K09z6095LLIzN6z+nKpPWpHqhd2AAK9AOmSn2dqpkyluT5hfyOY8x9qZ3f5y+T5IYre&#xA;bUyYFao4q7CoX7YARjvXj4ZD8nq5Q4KPDzrZj+VzEckFcfnJ5LidY4bqaUsnqSBYZQq70oSaMPoB&#xA;FMgOyM5F19oSNDl7kEv5yeT7wJLM8q8DVfVgkJ4k039IOAR19xk5dj548hfxH6VloMvdaLs/zo8p&#xA;WSzSi4nLx19PhE5c8V5VO1AWPZtunvhh2XqIyBiKPvDL8hmHRzfnx5cFq8yLdTzSgq8f1fm1Dvyq&#xA;54rud+L1rlsezNTZB4d+po/rISNDmuqQzfnB5Umt09aKeOCYuDyt5BxZd6goOLbjpU79TlX8jZwe&#xA;Q+bA6DL3OsPzh8tK7pxvOSKXjPos4KpSpYKeVT49Biexs/SvmyPZ+UBuf87fKkk/EJc+mVDCZoTx&#xA;qV5UrXnT9k/CPnTH+Rc4F7fNf5Py1dKkv53+WZrmOSc3bRIFRTFCAFJ/ZNeJbj40JOTn2VqJjfhs&#xA;D8fgp/k/MRdK+o/mz5aijE3oX8ixyGGV/q0yxhgofi/qBBWjbLue9OmVx7F1HUAfFhHQ5T0+1qL8&#xA;zrSW3kisbO+1NnYpb20NrKrsyxiTiC6ryPE/ZFTTfpTLcfY2eVAivj+pI0WTrt8UI35izzgtJ5f1&#xA;RlUPsLYEc4iqnfkKUZwH8D4dMl/IWbvH2/qZHs+ffH5vf/JsWpHyxp7yRfo95IVdrWWJRMpIr+84&#xA;SMvJup7jvnVaHSZcWIR4oj3R/Te/yUQMdrZEK0FTU9yNs2Yut2bsKuxV2KuxV2KuxV2KuxV2KuxV&#xA;RuLKzuf96II5vhaP94it8DijruDsw2I74KSClNx5F8k3Eyzz+X9OlnQIqyvaQFwI04IORStFTZfA&#xA;YOCPcyGSXeVZfKPlZRaAaRZ0sVEdmDBGfSVSCAlRtQqCMeAdyOOXe3ceUvK9xdx3k+k2kt1D6foz&#xA;NChZPSJZOJp8PEsemPCFEz3oK6/LvyLcw3MUmhWaLdlWuGgiWB2ZWLB+cXBg9WPxA1364DjiejIZ&#xA;ZDqg4/yk/LeOxjsV0C1NvFKJ0DqXbmCpNXcs5VuA5qTRu9cAxR7knNM9W9S/Kf8ALvUiv1vQ7d+E&#xA;hlUKGQcinp0opA4qPsr9kHcCuJxR7lGafepad+Tn5Z6eB6GgW7MITb85uc7cCxZjWVn+Mkmrj4qb&#xA;VpgGGA6JOeZ6rrr8oPy1uTIX0C2X1QwYR84wOZUsUVGVUJ9MCqgGm3QnE4Y9yjPPvRv/ACrryN6k&#xA;jrotqnOMQhEjCIiB2kIiVaCPmzkvwpy/arkvDj3MfFl3pVP+SX5XT3gvH0GETCV5zwaRFLOoUqVV&#xA;gvAcaqn2VO4AqcicMO5kM8x1TXTfy58j6Zp0en2OjW8FvCZHhcAmaN5l4SSR3BJmRyu3NX5e+SGO&#xA;I5BjLLImyVey8j+U7HSP0Ta6ZDDY0PJUFHLNGImkMo/eGRkUBn5cj3OEQFUg5JE3aNfQNCkgSCXT&#xA;raSGON4UjeFGAjkFJEowPwv+0O/fDwhHEe9XttN061/3ltYYKIIh6Uap8C9E+ED4R4YgAIMiUHce&#xA;VPK1xN61xo9jNN8J9WS2hZqoOK/EVJ+Fdhg4B3JE5d6+Py35dimaaPS7NJnmNy8qwRBjOxq0pYLU&#xA;ue7dceEdy8Z70Tdabp13JFLdWsNxLAHEMksauyCQcX4lgSvJdjTrhICASF5s7Q3CXJgjNzEhjjn4&#xA;rzVGIJVWpUKaDbGlt01paTx+lNDHLHyEnB1DLzVuQahHUNvXxxpQVXCh2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;v//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:AEE6AD13FFB6DD11AD9CE1E1CFCABE20</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:B6FBDD9E08B7DD11AD9CE1E1CFCABE20</xapMM:InstanceID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_AGM_Core/capture_currentpagedevice get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -56.1348 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 56.1348 li
107.865 56.1348 li
107.865 0 li
cp
clp
[1 0 0 1 0 0 ] concat
107.865 56.1348 mo
0 56.1348 li
0 0 li
107.865 0 li
107.865 56.1348 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
23.7813 27.4634 mo
23.7813 27.4634 25.2544 30.5303 25.7974 30.9478 cv
26.4058 31.4175 25.9771 31.4634 25.0742 31.334 cv
24.6919 31.2793 24.5498 29.875 24.0757 29.1514 cv
23.4321 28.1729 22.4956 27.8091 22.4956 27.8091 cv
23.7813 27.4634 li
cp
level3{
gsave
clp
[.854339 -3.31874 3.31874 .854339 23.9063 31.0352 ] concat
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.721569 .94902 .219608 ]
/C1 [.721569 .94902 .219608 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.721569 .94902 .219608 ]
/C1 [.372549 .623529 0 ]
/N 1.17247 
>>
]
/Bounds [.00561798 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.854339 -3.31874 3.31874 .854339 23.9063 31.0352 ] concat
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\@B#W\$riT[^NWQ[C*EM['[3IZa7!EZEgd@Z*CR<Yct@8YHP+3Y-"h.XfSV*X/i;$WiE(uWMuhpW2HPk
VP^5eV59u`Una][U8"BUTqS-PTV%jKSt;OESXl:@S=?";R[T\5R@'A/Q^=&)QBmf$Q'@MtPEV/mP*(lh
OH>QbO,f6\NK&pVN/W[QMMd:JM2@%ELPLY>L5(D9KS5#2K7ec-JUrB&J:E&uIXZ`oI=-EiH[C'bH?jd]
G^+FVGBS.PF`heJF)uDCEcH)=E,]`6Df0H0D/F**CMR^#C2%BrBP;$kB4baeAS#C_@q0"X@UW\R?sm>K
~>
<~o()>@naZ/>nF5r:nF,i7n*]W3md9E/mHj3+m-F!'lg!d#lKRQtkih6okND$jk2tgfjlPRajQ,@]j5T(X
iSibSi8EPNhr!;IhVR)Eh;$f@gY:K:g=k65g"=s0f[na,f%/F&e^`1!eC2mqdaHRkdF$=fd*L%acHa_[
c-=JVbfe2Qb0%lKaiMQEa2c6?`l?!:`Pf^5_o'C/_SX.*^qdb#^V@Ls^:h4n]Y(kg]=PSb\[f8\\@8rV
[^NWP[C*BKZa7!DZEga?Z*:I9YHP+3Y-"h-XK8J'X/`2!WMuhpW2HPjVP^2dV50o^USFQXU7n9RTV.pL
~>
<~3&iiU2`EZS2`EWQ2E!HO2Dm?L2)R6J1c.$G1c$pD1G^dA1,:U?0ekC;0eb:80JG.50/"t2/hSb//hJY,
/M&G(/1`;%.k<,".Olnt.4H\p.4?Sm-mpAi-RU5f-71&c,pai_,U=W\,9nEX+sJ3T+sA*Q+WqmM+<VaJ
+!2OF*Zc=B*??.?*#oq;)]K_7)B'M3)&X;0(`4),(Ddl(()@Z$'bqGu'GM5q'GD,n'+toj&eP]f&J,Kb
&.]9^%h9'Z%LijV%1EXR$k!FN$OR4J$4."F#m^eB#R:S>#6kA:"pG/6"U"r2"9S`.!s/N*!W`<&!<<*"
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
newpath
18.7368 24.2378 mo
20.9731 25.5757 22.6509 26.9829 23.7813 28.0708 cv
24.0918 27.7217 24.3525 27.3579 24.5425 26.999 cv
25.7197 24.7881 23.5278 22.541 19.8213 21.645 cv
16.3965 20.8184 11.8804 21.3149 11.2104 21.3955 cv
12.4419 21.5771 15.3237 22.1968 18.7368 24.2378 cv
cp
level3{
gsave
clp
[-3.19854 5.32002 -5.32002 -3.19854 19.9175 20.8076 ] concat
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.372549 .623529 0 ]
/C1 [.721569 .94902 .219608 ]
/N 1.02485 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.19854 5.32002 -5.32002 -3.19854 19.9175 20.8076 ] concat
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\@8rU[^NTO[C!<JZa7!DZE^[>Yct@8YHP+3Y-"h-XK8J'X/`2"WMukqW2QVlVP^5eV59u`Una][U8"?T
TqJ'OT:_aISt;LDSXc4>S"#k8R[KS3R$a8-Q^=#(Q'IW!Pa%AqPEM)lOcbcfOH>NaNfK-ZNK&mUN/NUP
MMd:JM26tDLPLY>L5(D9KnP,4K7ef.JqAQ)J:N0"It)orIXQWmI!g<gH[C'bH?jd\G^+FVGBS.QF`hhK
FEDSFF)l;AEH,u;E,]`6Df0H0D/F**Chmg%C2.KtBk_6oBP1sjAnGXdAS#C_A7K+Z@U`eT@:<PO?sd8J
~>
<~o'u8?nF5r9n*f]4md9E/m-O*)lg*j$lKRQtkih6nkND!ik2k^djQ,C^j5].Yio/kTi8EPNhr!;IhVI#D
gt^]>gY:H9g=b04f\"j.f@SU)f%&=$eC<!se'landa?Iid*U.ccd0n^cHa\Zc-4DUbKJ)Ob0%iJaiMQE
a2c6?`l?!:`Pf^5_o'C/_SX.*_8*k%^V@Ot^:q=p]tM(k]Xtef]"5J`\[f5[\@8rV[^NWP[C*BK['[0G
Za-mBZ*CR<Yct=7YHG%2Xf\_,XK8M(X/i8#Wi;tsW2QYmVl-DhVP^2dV50o_USFTYU8"?TTqS-PTV%jK
~>
<~3&`cT2`<QP2Dm?L2)R3I1c.!E1G^gB1,:U>0ekC;0JG170/"t30.nk0/hJY,/M/M)/1`;%.k<,".Olns
.4H\p-n$Jl-RU8h-RL/e-7'ra,paf^,U=TZ,9nEW+sJ3S+X&!P+<VdL+!2RH+!)IE*ZZ7A*??+>*#on:
)]K_7)B'M3)&X;0(`4),(`*u)(D[c%()@W"'bqDs'GM5p',)#l&eYfi&J5Te&J,Kb&.]9^%hB-[%LrpW
%1NaT$k*OQ$O[=M$47+I$4."F#m^eB#RCY?#6tJ<"pP89"U,&5"9\i1"9S`.!s8T+!WiE(!<E3$!!!!!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
newpath
18.7368 24.2378 mo
15.3237 22.1968 12.4419 21.5771 11.2104 21.3955 cv
11.1548 21.4033 11.125 21.4067 11.125 21.4067 cv
11.125 21.4067 13.6377 22.8618 14.9907 25.1689 cv
17.1528 28.8584 17.2065 28.7031 17.4492 29.0151 cv
19.2026 31.272 22.1738 29.8828 23.7813 28.0708 cv
22.6509 26.9829 20.9731 25.5757 18.7368 24.2378 cv
cp
level3{
gsave
clp
[3.82397 -6.51959 6.51959 3.82397 14.5679 29.6587 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.82397 -6.51959 6.51959 3.82397 14.5679 29.6587 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
20.6401 22.8667 mo
22.2051 23.5693 23.4307 24.6055 24.0957 25.6689 cv
23.6758 24.5098 22.6064 23.3916 21.1318 22.7295 cv
20.2139 22.3174 19.2725 22.145 18.4224 22.1846 cv
19.1367 22.3052 19.8896 22.5308 20.6401 22.8667 cv
cp
level3{
gsave
clp
[9.80875 1.65945 -1.65945 9.80875 22.0771 23.4971 ] concat
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.941176 1 .74902 ]
/C1 [.941176 1 .74902 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.372549 .623529 0 ]
/C1 [.941176 1 .74902 ]
/N 1.02485 
>>
]
/Bounds [.00561798 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.80875 1.65945 -1.65945 9.80875 22.0771 23.4971 ] concat
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~nF5o8md9E.m-F!&l07EqkN:pgjlGL_io8qUi8<GKhVI#CgY:H9g"=s/f@JO'eC;srda?Ihd*L%`c-=JV
bKJ&MaiMQD`l?!:`5KR1_SO((^q[Ut]tM(j]=PSa\[],X[^NTO['R*EZE^[=YHP+3XfSV)X/`2!W2QVl
VP^2cUna]ZU7n6QT:_^HSXc4>S!oe6R$a5,QBmf#P`q;oP*(ifO,o<]NJrgSMi*CKM26qBL5(D9KS+o/
Jq8K'It)orI=6KjH[:!`H$FRXG'8"NFEDSFEcH)<E,TZ4DJa3+CMR["Bk_6oB4baeARo=]@q&nU@:3JM
~>
<~s8W)trr)fnr;?HhqYL'aq=sa[p\4FUp@\+Oo^qbHoCDJCnaZ,<nF,i6mdBK0mHj3*lg*j$l07Hrkih3m
k2tgfjlGL`j5]1Zio/kTi8EPNhqm5Hh;-lAgtUT<g=k65g"=s/f@SU)f%&=#eC;sre'c[ldF$=fcd0q_
cHa\Zbfn;SbKJ&NaiVZGaN2EB`l?$;`Pf^5_o'C/_SO()^qdb#^V7Fr]tM+l]Xtef]"5J`\[]/Z\$riT
[^ENN['[3HZa-mBZ*CR<Yck76Y-+q0Xf\\+X/i;$WiE%tW2QYmVl-DhVPU,bUnjc\US=KWTqS0QTV.pL
~>
<~^V@Lr]tCtg\[f5Z[^NTNZa6sBYck75XfSV)Wi;trVl$>fUnaZYTqJ$MSt2CAS!ob4R$X,(Q'@JqP*(ie
O,f3YMi3ILLkph@KnY24JqAQ(It)oqI!^3dH$FRXG'.qLF)l;@E,TZ4D/=$(C2%BqB4b^dA7K(X@:3GL
?<pf@>?Y04=BAO(<E)mq;Gg7e:JOVY9M7uM8Ou?A7R]^56UF()5X.Fr4Zkef3]T/Z2`<NN1c$mB0eb76
/hJV*.k2ts-mp>g,pX`\+sA*P+!)ID*#fh8)&O2,()@W!',(uj&.f?^%LigS$OR1H#R:P<"U"r1!WiB&
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
newpath
17.6797 25.501 mo
17.5283 25.7295 16.98 25.5845 16.459 25.1768 cv
15.937 24.7705 15.6362 24.2539 15.7891 24.0249 cv
15.9424 23.7969 16.4888 23.9404 17.0098 24.3481 cv
17.5337 24.7559 17.833 25.2715 17.6797 25.501 cv
cp
level3{
gsave
clp
[1.9441 1.40196 -1.40196 1.9441 15.7627 24.061 ] concat
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.721569 .94902 .219608 ]
/C1 [.372549 .623529 0 ]
/N 1.07707 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.9441 1.40196 -1.40196 1.9441 15.7627 24.061 ] concat
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\@8rV[^NWQ[C*EL['[3HZa6sCZE^[>Z*:I:YHP.4Y-+n/XfSV*X/i;$WiE%tWMuhpW2HPkVP^5eV59u`
Una]ZU8"?TTqJ'OT:_aISt;LDSXc4?S"#n9R[TY4R@'A/Q^=#(QBd`#Pa%DrPEV/mP*(lhOH>NaO,f6\
NK&pVN/W[QMMd:JM2@%ELkgb@L5(D9KnP,4K7ef.Jq8K(J:N0"It)orIXQWlI!g9fH[:!aH$OXZG^"@U
G'8"NF`__IF)uDCEcH)=E,]c7Df0H1D/F-+Ci!m&C2.KtBk_6oB4kjhAnGUcA7T4\@q/tW@:<SP?sm>K
~>
<~o'u8?naQ&;nF,i7mdBN2mHs<-m-O*)lg*j$lK[Wul0.?pkND$kk2tgfjlPRajQ,@]j5T(XiSibRi8EMM
hr!;IhVI#Dgt^]>gY:H9g=b04g"=s0f@SX*f%/C%e^W*ue'ldodaHOjdEp7ecd0q_cHa\Zc-4DUbKJ)O
b0%iJaiVWFaN)?A`l?$;`Pod6_o'C/_SX.*_8*k%^V@Ot^:q:o]tD"j]=Y\d]"5G_\[]/Z\$riT[^NTO
[C!<JZa7!DZEga?Z*:I9YHP+3Y-"h.XK8M(X/i8#Wi;tsW2QYmVl-DhV5:#aUnjc\US=KWTqS0QTV.pL
~>
<~3&`cT2`EZR2E!HO2)R6K2)I-H1c.$F1G^gC1,:U?1,1L<0ek@90JG160/"t2/hSb//M/P+/M&G(/1`;%
.k<)!.Olns.4H\p-n$Jl-mpAi-RL/e-71#b,paf^,U=W[,9nEW+sJ3T+X&!P+WqmM+<M[I+!2OF*Zc=B
*??.?*#oq;)]K_7)B'M4)&X;0(`4),(`*u)(D[c%()@W"'bqDs'GM2o',)#l&eYfh&J5Td&.fBa%hB0]
%LrsY%1NaU%1EXR$k!FN$OR4J$47(G#mgkC#RCY?#6tJ<"pP88"U,&4"9\i0!s8W-!WiE)!<E3%!!!!!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
newpath
17.481 25.3359 mo
17.333 25.5557 16.8408 25.4453 16.3818 25.085 cv
15.9224 24.7256 15.666 24.2554 15.814 24.0342 cv
15.9619 23.813 16.4541 23.9248 16.9146 24.2837 cv
17.3745 24.6431 17.6289 25.1133 17.481 25.3359 cv
cp
level3{
gsave
clp
[1.39095 1.08608 -.961244 1.44386 17.1045 25.2236 ] concat
/4 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.721569 .94902 .219608 ]
/C1 [1 1 1 ]
/N 1.07707 
>>
]
/Bounds [.00561798 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.39095 1.08608 -.961244 1.44386 17.1045 25.2236 ] concat
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W)trr)forVZTkqtp9eqYL'aq>'g\q"OOWp\+=Sp%A"Mo^qeIoCMPDo()>@naQ&;n*f`6mdBN1mHs9,
m-O'(lg!d#lKRQtkih6okND$jk2tdejlPRajQ#:\j5T(XiSibSi8EPNhr!>JhVR)Eh;-lAgtUT<g=k97
g"G'3f\"j.f@SX*f%/C%e^`1!eC2mqe'c[mdF$@hd*U.dcd0q_cHa_[c-=JVbfn8RbKJ&Nb/qcIaiMQE
aN)?A`l?$<`Pog8`5KU4_o'C/_SX1+_83t'^qdb#^V@Ot^:q=p]tM+l]Y(nh]=Y\d]"5J`\[f8]\@B&Y
~>
<~s8W)trr2orrr2orrr2orrr2orrVc]nrVc]nrVc]nrVc]nrVc]mr;?Kjr;?Kjr;?Kjr;?Kjr;6Bgqtp9f
qtp9fqtp9fqtp9fqYL'bqYL'bqYL'bqYL'bqYL$`q>'j^q>'j^q>'j^q>'j^q=sa[q"XXZq"XXZq"XXZ
q"XXZp\4FVp\4FVp\4FVp\4FVp\4FVp@e4Rp@e4Rp@e4Rp@e4Rp@e4Qp%A"Np%A"Np%A"Np%A"Np%A"M
o^qeJo^qeJo^qeJo^qeJo^qeJoCMSFoCMSFoCMSFoCMSFoCMSFoCDJCo()ABo()ABo()ABo()ABo()AB
~>
<~s8W)sr;?Hgq=s^Xp@\(Lo'u8>n*]T0m-Es$ki_-kjlGI]io/hQhVI#CgY1?5f[n^)eC2mpdEp4bcHXSV
b0%iIa2Z*;`5BI._8*h"]tD"i]",>\\$i]OZa6sBYck75XfSS(Wi;qpVP^2cUS=KVTV%gISXc1<R[KP0
QBmf#PEM)kOH5E^NJrdQMM[.ELPCM9K7ec,J:E&tI=-EhH?ja[GBS+OFE;JBEH#i6DJa3*CMIQsBP1pg
A7T1Z@:<PN?=$oB>?b96=BJX*<`N*t;c6Ih:esh]9h\2Q8kDTF7n,s:6psC/6:!k%5<_7o4?P\d3]T2[
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
newpath
16.5532 24.3945 mo
16.5269 24.46 16.4063 24.4663 16.2803 24.4077 cv
16.1543 24.3496 16.0723 24.2485 16.0972 24.1831 cv
16.1221 24.1172 16.2437 24.1113 16.3696 24.1694 cv
16.4961 24.2275 16.5781 24.3281 16.5532 24.3945 cv
cp
level3{
gsave
clp
[.463773 .193863 -.178772 .427604 16.1113 24.1987 ] concat
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.721569 .94902 .219608 ]
/C1 [1 1 1 ]
/N 1.48547 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.463773 .193863 -.178772 .427604 16.1113 24.1987 ] concat
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#rrVZTkqtp6dqYBs^q"XUXp@e4Qp%7nKoCMPDo'u8?nF5o8n*]W3mHs9,m-F!'lK[Wul0.?pkND$j
k2k^djQ,C^j5].Yio/kTi8EPNhqm5Hh;-oBgt^Z=gY1B8g=b04f\"j.f@SU)f%&=$eC<!te'ldodaHOj
dF$=fd*L%acd'h]c-=MXbfn;SbKJ)Ob0%lKaiVZGaN2HCa2c6?`l?$;`Pog7`5KU3_o'C0_SX1,_83t(
_8*k%^qd_"^V@Ot^:q=q]tM+m]tM(k]Y(ni]=Y\e]=YYc]"5Ja]",A^\[f8]\[f5[\@B&Y\@B&Y\@B&Y
~>
<~s8N#srr2orrr2orrr2lprVc]nrVc]nrVc]nr;?Kjr;?Kjr;?Kjr;?Hhqtp9fqtp9fqtp9fqtg0cqYL'b
qYL'bqYL'bq>'j^q>'j^q>'j^q>'j^q"XXZq"XXZq"XXZq"XXZp\4FVp\4FVp\4FVp\4FVp\4CTp@e4R
p@e4Rp@e4Rp@e4Rp@\+Op%A"Np%A"Np%A"Np%A"Np%7nKo^qeJo^qeJo^qeJo^qeJo^qeJoCMSFoCMSF
oCMSFoCMSFoCMSFoCMSFoCMSEo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
~>
<~s8DlmqYBp[p%7kHnaQ#7m-Es$ki_*ij5T%Uhqm2EgY1?4f%&:!da?FfcHXSVb/q`F`l,d3_8*h"]tCtg
\[],W[C!9GZ*:F7XfSS(Wi;qpVPU)`U7n6PSt2C@S!ob4Q^3o$PEM&jOH5E]N/NRNM26qAKnP,3Jq8H%
IsufnH[:!`G^"=SF`_\GEcH&:Df0E.Chmd"BkV-lAn>L`@q&nU?sm>J?<pf@>?Y35=BJX*<`N*u;c?Rk
;,C(b:JOVY9MA)P8kMZH84Z6@7Rfg86psC06:*t(5sR\"5<h=q4Ztqj4?P\e4$#D`3]T2\3B/uX3&ilW
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
newpath
17.0527 24.5518 mo
17.0317 24.5957 16.9561 24.5967 16.8823 24.5547 cv
16.8091 24.5122 16.7681 24.4424 16.7891 24.3994 cv
16.811 24.3545 16.8877 24.3545 16.959 24.3965 cv
17.0317 24.4395 17.0737 24.5088 17.0527 24.5518 cv
cp
level3{
gsave
clp
[.281697 .0845149 -.0568716 .25 16.7769 24.4331 ] concat
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.721569 .94902 .219608 ]
/C1 [1 1 1 ]
/N 1.57551 
>>
]
/Bounds [.00561798 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.281697 .0845149 -.0568716 .25 16.7769 24.4331 ] concat
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W)trVc]mr;6BfqYBs_q"XUXp\+=Rp%7nKoCMPDo'u8>nF5o8mdBN1mHj3+lg*j$lKRQskih3mkN:pg
jlPRajQ#:[io8qUiS`YPhr!;IhVI#Dgt^]>gY:H9g=b04f\"j.f@SU)f%&=$eC<!se'ldodaHOjdEp7e
d*L%acHa_[c-=MWbfn;SbKJ&Nb0%iJaiVWFaN2EBa2c3>`l?!:`Pod6`5KR2_o'C/_SX1+_83t(^qdb$
^q[Y!^V@Ls^:q=p]tM+m]tD"j]Y(nh]=Y\e]=YYc]"5Ja]"5G_\[f8]\[f8\\@B&Y\@B&Y\@B&Y\@B&Y
~>
<~s8W)trr2orrr2orrr2oqrVc]nrVc]nrVc]nr;?Kjr;?Kjr;?Kjr;6Bgqtp9fqtp9fqtp9eqYL'bqYL'b
qYL'bqYBs_q>'j^q>'j^q>'j^q=sa[q"XXZq"XXZq"XXZq"OOWp\4FVp\4FVp\4FVp\4CTp@e4Rp@e4R
p@e4Rp@e4Rp%A"Np%A"Np%A"Np%A"Np%A"No^qeJo^qeJo^qeJo^qeJo^qeJo^qeIoCMSFoCMSFoCMSF
oCMSFoCMSFoCMSFoCMSEo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
~>
<~s8W)sqtg-`p@\(Lo'l,9mHj-&ki_*ij5T%Uhqm/Cg=b-1f$r0sdEp4bc-4>PaN)<>`5BI.^q[Rq]=PP_
\$i]OZa-j?YHG"/X/`.tVl$;dUS=HTT:VUDS!ob4Q^3o$P`q8mOH5E]N/NRMM26qAKnP)1Jq8H%IXQWl
H[9s^G^"=RFEDSEEH#l8DJa6,CMITuBP1siARo=]@U`bR?sd5H?!LW=>$>'2=BAO(<E3!s;c6Lj:f'q`
:/4MW9M8#N8kDTF84Q0>7R]a66psC06:*t(5sR\"5<h=q5!;%l4?P_f4$,Mb3]];^3B9)[3&ilW3&ilW
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
newpath
20.1592 26.8687 mo
19.959 27.0586 19.457 26.793 19.041 26.2773 cv
18.6226 25.7632 18.4473 25.1929 18.6489 25.0039 cv
18.8486 24.814 19.3491 25.0786 19.7666 25.5942 cv
20.1826 26.1094 20.3589 26.6797 20.1592 26.8687 cv
cp
level3{
gsave
clp
[1.57838 1.80503 -1.80503 1.57838 18.6143 25.0337 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.57838 1.80503 -1.80503 1.57838 18.6143 25.0337 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
20.0029 26.6621 mo
19.8091 26.8452 19.354 26.625 18.9854 26.1704 cv
18.6172 25.7158 18.4761 25.2007 18.6709 25.0181 cv
18.8638 24.835 19.3193 25.0547 19.686 25.5098 cv
20.0537 25.9644 20.1968 26.48 20.0029 26.6621 cv
cp
level3{
gsave
clp
[1.11163 1.37279 -1.26323 1.19093 19.6626 26.4644 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.11163 1.37279 -1.26323 1.19093 19.6626 26.4644 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
19.3091 25.5356 mo
19.271 25.5928 19.1504 25.5718 19.04 25.4873 cv
18.9307 25.4019 18.8735 25.2847 18.9136 25.2266 cv
18.9521 25.167 19.0723 25.189 19.1816 25.2734 cv
19.291 25.3599 19.3477 25.4761 19.3091 25.5356 cv
cp
level3{
gsave
clp
[.407105 .292741 -.269953 .375358 18.9033 25.2305 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.407105 .292741 -.269953 .375358 18.9033 25.2305 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
19.7603 25.8032 mo
19.7305 25.8398 19.6563 25.8242 19.5942 25.7666 cv
19.5327 25.7085 19.5078 25.6313 19.5381 25.5928 cv
19.5703 25.5557 19.644 25.5718 19.7056 25.6289 cv
19.7666 25.686 19.7915 25.7646 19.7603 25.8032 cv
cp
level3{
gsave
clp
[.255967 .146214 -.112027 .231257 19.5181 25.6235 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.255967 .146214 -.112027 .231257 19.5181 25.6235 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
26.6997 23.3584 mo
26.6997 23.3584 26.7119 29.0356 26.2002 30.0586 cv
25.627 31.2046 26.3042 30.9619 27.5684 30.1128 cv
28.1045 29.752 27.2959 27.5381 27.4829 26.1089 cv
27.7388 24.1709 28.8818 22.9448 28.8818 22.9448 cv
26.6997 23.3584 li
cp
level3{
gsave
clp
[-3.69394 -4.36647 -4.36647 3.69394 29.105 28.8154 ] concat
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.69394 -4.36647 -4.36647 3.69394 29.105 28.8154 ] concat
clp
/0 /Gradient get_res exec grestore
}if
newpath
31.9385 14.8457 mo
29.5503 18.48 28.0488 21.8145 27.1406 24.2715 cv
26.4199 23.9731 25.7646 23.6128 25.2188 23.2144 cv
21.8418 20.7456 23.5044 15.7759 28.4258 11.7378 cv
32.9702 8.00879 40.1206 5.47607 41.1851 5.11035 cv
39.4658 6.27783 35.5869 9.30029 31.9385 14.8457 cv
cp
level3{
gsave
clp
[8.6726 5.67371 5.67371 -8.6726 27.6719 10.5503 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.6726 5.67371 5.67371 -8.6726 27.6719 10.5503 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
31.9385 14.8457 mo
35.5869 9.30029 39.4658 6.27783 41.1851 5.11035 cv
41.2729 5.08008 41.3203 5.06445 41.3203 5.06445 cv
41.3203 5.06445 38.6001 9.0752 38.2432 13.5269 cv
37.6738 20.6396 37.4805 20.4458 37.3428 21.0903 cv
36.3457 25.7554 30.8735 25.8257 27.1406 24.2715 cv
28.0488 21.8145 29.5503 18.48 31.9385 14.8457 cv
cp
level3{
gsave
clp
[-10.4811 -7.02061 -7.02061 10.4811 42.1421 19.9683 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-10.4811 -7.02061 -7.02061 10.4811 42.1421 19.9683 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
28.0835 14.168 mo
26.2397 16.3604 25.1514 18.8076 24.9233 20.8892 cv
24.7134 18.8423 25.5088 16.3853 27.2437 14.3208 cv
28.3247 13.0342 29.6118 12.0903 30.9189 11.5332 cv
29.9326 12.2349 28.9658 13.1187 28.0835 14.168 cv
cp
level3{
gsave
clp
[-13.5349 9.61659 9.61659 13.5349 26.3779 16.168 ] concat
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-13.5349 9.61659 9.61659 13.5349 26.3779 16.168 ] concat
clp
/2 /Gradient get_res exec grestore
}if
newpath
34.2329 16.3071 mo
34.6196 16.5098 35.3481 15.9292 35.8608 15.0122 cv
36.3735 14.0938 36.4766 13.188 36.0903 12.9858 cv
35.7041 12.7842 34.9766 13.3647 34.4644 14.2817 cv
33.9517 15.1987 33.8491 16.106 34.2329 16.3071 cv
cp
level3{
gsave
clp
[-1.81089 3.34744 3.34744 1.81089 36.0679 12.9722 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.81089 3.34744 3.34744 1.81089 36.0679 12.9722 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
34.4229 15.9448 mo
34.7939 16.1392 35.4624 15.6426 35.915 14.8335 cv
36.3662 14.0244 36.4312 13.2104 36.0586 13.0156 cv
35.686 12.8213 35.019 13.3188 34.5664 14.127 cv
34.1133 14.9365 34.0488 15.749 34.4229 15.9448 cv
cp
level3{
gsave
clp
[-1.36712 2.44523 2.43035 1.2697 34.9097 15.5249 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.36712 2.44523 2.43035 1.2697 34.9097 15.5249 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
35.1865 14.0215 mo
35.2705 14.0923 35.4575 14.0146 35.6099 13.8467 cv
35.7593 13.6802 35.814 13.4868 35.7319 13.4141 cv
35.6504 13.3428 35.4624 13.4209 35.3115 13.5879 cv
35.1602 13.7549 35.106 13.9497 35.1865 14.0215 cv
cp
level3{
gsave
clp
[-.54054 .610534 .562919 .49835 35.729 13.4155 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.54054 .610534 .562919 .49835 35.729 13.4155 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
34.5396 14.585 mo
34.6025 14.6309 34.7183 14.5796 34.7983 14.4702 cv
34.8794 14.3623 34.8945 14.2383 34.8345 14.1938 cv
34.771 14.1494 34.6567 14.2012 34.5742 14.3101 cv
34.4932 14.4185 34.4775 14.5425 34.5396 14.585 cv
cp
level3{
gsave
clp
[-.355146 .325395 .262059 .328171 34.8613 14.231 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.355146 .325395 .262059 .328171 34.8613 14.231 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
32.2104 18.9229 mo
32.478 19.0688 32.9692 18.6758 33.3086 18.042 cv
33.6479 17.4106 33.7051 16.7793 33.437 16.6338 cv
33.1699 16.4883 32.6777 16.8823 32.3384 17.5146 cv
31.9995 18.1455 31.9424 18.7764 32.2104 18.9229 cv
cp
level3{
gsave
clp
[-1.23607 2.28489 2.28489 1.23607 33.4419 16.6348 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.23607 2.28489 2.28489 1.23607 33.4419 16.6348 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
32.3335 18.6719 mo
32.5928 18.8135 33.0439 18.4766 33.3428 17.918 cv
33.6421 17.3618 33.6738 16.7949 33.415 16.6533 cv
33.1572 16.5127 32.7056 16.8501 32.4067 17.4072 cv
32.1069 17.9653 32.0742 18.5313 32.3335 18.6719 cv
cp
level3{
gsave
clp
[-.903243 1.68515 1.68666 .920524 32.6621 18.3784 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.903243 1.68515 1.68666 .920524 32.6621 18.3784 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
32.8306 17.3423 mo
32.8887 17.3921 33.0171 17.3413 33.1182 17.2275 cv
33.2192 17.1128 33.2549 16.9795 33.1978 16.9272 cv
33.1401 16.8774 33.0103 16.9272 32.9097 17.042 cv
32.8086 17.1577 32.7739 17.2915 32.8306 17.3423 cv
cp
level3{
gsave
clp
[-.36731 .414873 .382518 .338642 33.1978 16.9282 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.36731 .414873 .382518 .338642 33.1978 16.9282 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
32.3945 17.7261 mo
32.438 17.7583 32.5171 17.7251 32.5708 17.6499 cv
32.6235 17.5752 32.6353 17.4902 32.5898 17.458 cv
32.5479 17.4268 32.4688 17.4609 32.4141 17.5356 cv
32.3599 17.6104 32.3516 17.6953 32.3945 17.7261 cv
cp
level3{
gsave
clp
[-.239471 .21941 .176704 .221282 32.6084 17.4868 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.239471 .21941 .176704 .221282 32.6084 17.4868 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
43.9126 30.481 mo
43.9126 30.481 41.9258 33.8838 41.2598 34.3164 cv
40.5142 34.8022 41.0054 34.8945 42.0596 34.8306 cv
42.5078 34.8032 42.8013 33.1938 43.416 32.4043 cv
44.249 31.332 45.3647 31.0005 45.3647 31.0005 cv
43.9126 30.481 li
cp
level3{
gsave
clp
[-.677414 -3.91209 -3.91209 .677414 43.4365 34.6016 ] concat
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.677414 -3.91209 -3.91209 .677414 43.4365 34.6016 ] concat
clp
/0 /Gradient get_res exec grestore
}if
newpath
50.0386 27.2261 mo
47.332 28.562 45.2627 30.0317 43.8555 31.1826 cv
43.5293 30.751 43.2637 30.3062 43.0767 29.8755 cv
41.9214 27.2109 44.6631 24.8208 49.0278 24.1318 cv
53.0581 23.4951 58.2261 24.4902 58.9917 24.645 cv
57.5527 24.7417 54.1699 25.1875 50.0386 27.2261 cv
cp
level3{
gsave
clp
[3.19885 6.44159 6.44159 -3.19885 48.9863 23.1582 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.19885 6.44159 6.44159 -3.19885 48.9863 23.1582 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
50.0386 27.2261 mo
54.1699 25.1875 57.5527 24.7417 58.9917 24.645 cv
59.0557 24.6592 59.0898 24.666 59.0898 24.666 cv
59.0898 24.666 56.0522 26.1113 54.2773 28.6499 cv
51.4355 32.7075 51.3887 32.5249 51.0811 32.8623 cv
48.8447 35.3042 45.5439 33.4248 43.8555 31.1826 cv
45.2627 30.0317 47.332 28.562 50.0386 27.2261 cv
cp
level3{
gsave
clp
[-3.80894 -7.88396 -7.88396 3.80894 54.3423 33.8779 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.80894 -7.88396 -7.88396 3.80894 54.3423 33.8779 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
47.9692 25.4668 mo
46.0942 26.1323 44.584 27.2144 43.7158 28.3794 cv
44.3091 27.0801 45.6494 25.8896 47.4121 25.2622 cv
48.5117 24.8721 49.6147 24.7593 50.5913 24.8853 cv
49.7563 24.958 48.8667 25.1489 47.9692 25.4668 cv
cp
level3{
gsave
clp
[-11.4785 1.00336 1.00336 11.4785 46.2339 26.0659 ] concat
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-11.4785 1.00336 1.00336 11.4785 46.2339 26.0659 ] concat
clp
/2 /Gradient get_res exec grestore
}if
newpath
50.8999 28.9077 mo
51.0591 29.1641 51.6982 29.0718 52.3276 28.7026 cv
52.957 28.3335 53.3369 27.8271 53.1777 27.5713 cv
53.0176 27.3154 52.377 27.4063 51.749 27.7754 cv
51.1196 28.1455 50.7393 28.6509 50.8999 28.9077 cv
cp
level3{
gsave
clp
[-2.25912 1.36744 1.36744 2.25912 53.1694 27.5566 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.25912 1.36744 1.36744 2.25912 53.1694 27.5566 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
51.1392 28.7563 mo
51.293 29.0034 51.8687 28.9409 52.4233 28.6147 cv
52.978 28.2896 53.3018 27.8247 53.147 27.5767 cv
52.9932 27.3296 52.418 27.3931 51.8643 27.7183 cv
51.3086 28.0444 50.9844 28.5093 51.1392 28.7563 cv
cp
level3{
gsave
clp
[-1.67604 .983983 1.00829 1.61356 51.5923 28.6733 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.67604 .983983 1.00829 1.61356 51.5923 28.6733 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
52.2729 27.8745 mo
52.2969 27.9443 52.4365 27.9644 52.5859 27.918 cv
52.7344 27.8701 52.8364 27.7744 52.813 27.7017 cv
52.7881 27.6304 52.6475 27.6094 52.498 27.6577 cv
52.3496 27.7051 52.2485 27.8018 52.2729 27.8745 cv
cp
level3{
gsave
clp
[-.53941 .176054 .162359 .497296 52.8003 27.7002 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.53941 .176054 .162359 .497296 52.8003 27.7002 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
51.6875 27.9829 mo
51.708 28.0322 51.7949 28.041 51.8828 28.0049 cv
51.9688 27.9697 52.0215 27.9009 52.0005 27.8525 cv
51.9785 27.8042 51.8916 27.7939 51.8047 27.8306 cv
51.7168 27.8677 51.6655 27.9355 51.6875 27.9829 cv
cp
level3{
gsave
clp
[-.326491 .0699469 .0415587 .28813 52.0142 27.8789 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.326491 .0699469 .0415587 .28813 52.0142 27.8789 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
48.769 29.7627 mo
48.8774 29.9424 49.3105 29.8789 49.7354 29.6206 cv
50.1592 29.3613 50.4165 29.0034 50.3076 28.8232 cv
50.1978 28.6411 49.7661 28.7046 49.3413 28.9639 cv
48.915 29.2231 48.6592 29.5801 48.769 29.7627 cv
cp
level3{
gsave
clp
[-1.54228 .933539 .933539 1.54228 50.311 28.8262 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.54228 .933539 .933539 1.54228 50.311 28.8262 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
48.9302 29.6548 mo
49.0366 29.8306 49.4258 29.7876 49.8003 29.5591 cv
50.1748 29.3311 50.3936 29.0024 50.2866 28.8267 cv
50.1826 28.6509 49.7935 28.6938 49.4189 28.9243 cv
49.0444 29.1528 48.8262 29.479 48.9302 29.6548 cv
cp
level3{
gsave
clp
[-1.13245 .691279 .68706 1.14348 49.2339 29.5972 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.13245 .691279 .68706 1.14348 49.2339 29.5972 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
49.6968 29.0342 mo
49.7134 29.0835 49.8081 29.0991 49.9092 29.0659 cv
50.0088 29.0342 50.0781 28.9639 50.0615 28.9136 cv
50.0439 28.8628 49.9497 28.8496 49.8486 28.8828 cv
49.7485 28.9155 49.6807 28.9839 49.6968 29.0342 cv
cp
level3{
gsave
clp
[-.36574 .119371 .110085 .337186 50.0493 28.915 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.36574 .119371 .110085 .337186 50.0493 28.915 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
49.3003 29.1113 mo
49.3149 29.145 49.374 29.1528 49.4336 29.1274 cv
49.4902 29.1001 49.5244 29.0527 49.5112 29.019 cv
49.4961 28.9849 49.438 28.9771 49.3784 29.0034 cv
49.3203 29.0288 49.2842 29.0771 49.3003 29.1113 cv
cp
level3{
gsave
clp
[-.21999 .0471304 .0280024 .194143 49.522 29.0371 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.21999 .0471304 .0280024 .194143 49.522 29.0371 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
40.6699 31.9634 mo
40.6699 31.9634 41.6436 34.2158 42.021 34.5322 cv
42.4453 34.8882 42.1367 34.9092 41.4883 34.7905 cv
41.2139 34.7402 41.1533 33.7217 40.8325 33.188 cv
40.3965 32.4639 39.7334 32.1753 39.7334 32.1753 cv
40.6699 31.9634 li
cp
level3{
gsave
clp
[.712325 -2.36798 2.36798 .712325 40.6567 34.5396 ] concat
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.712325 -2.36798 2.36798 .712325 40.6567 34.5396 ] concat
clp
/0 /Gradient get_res exec grestore
}if
newpath
37.1265 29.4917 mo
38.6997 30.52 39.8682 31.583 40.6523 32.4004 cv
40.8853 32.1587 41.083 31.9038 41.2314 31.6514 cv
42.1455 30.0894 40.6309 28.4077 37.9834 27.6553 cv
35.5405 26.96 32.2715 27.187 31.7852 27.2246 cv
32.667 27.3916 34.7266 27.9209 37.1265 29.4917 cv
cp
level3{
gsave
clp
[-2.45991 3.74165 -3.74165 -2.45991 38.0811 27.0483 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.45991 3.74165 -3.74165 -2.45991 38.0811 27.0483 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
37.1265 29.4917 mo
34.7266 27.9209 32.667 27.3916 31.7852 27.2246 cv
31.7441 27.229 31.7236 27.23 31.7236 27.23 cv
31.7236 27.23 33.4922 28.3516 34.4004 30.0542 cv
35.8525 32.7759 35.8955 32.666 36.0601 32.897 cv
37.2607 34.5742 39.4399 33.6592 40.6523 32.4004 cv
39.8682 31.583 38.6997 30.52 37.1265 29.4917 cv
cp
level3{
gsave
clp
[2.94423 -4.58607 4.58607 2.94423 33.9678 33.272 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.94423 -4.58607 4.58607 2.94423 33.9678 33.272 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
38.5381 28.5591 mo
39.6465 29.1118 40.499 29.8926 40.9492 30.6782 cv
40.6787 29.8311 39.9395 28.9941 38.8975 28.4746 cv
38.2471 28.1519 37.5737 27.998 36.9595 28.0024 cv
37.4727 28.1108 38.0078 28.2944 38.5381 28.5591 cv
cp
level3{
gsave
clp
[7.015 1.47951 -1.47951 7.015 39.5586 29.0498 ] concat
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.015 1.47951 -1.47951 7.015 39.5586 29.0498 ] concat
clp
/2 /Gradient get_res exec grestore
}if
newpath
35.7549 29.395 mo
35.6362 29.5435 35.2485 29.439 34.8857 29.1621 cv
34.5254 28.8887 34.3291 28.5459 34.4463 28.3999 cv
34.5649 28.2539 34.9526 28.3584 35.3145 28.6328 cv
35.6758 28.9082 35.8721 29.25 35.7549 29.395 cv
cp
level3{
gsave
clp
[1.29373 1.01448 -1.01448 1.29373 34.4575 28.3936 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.29373 1.01448 -1.01448 1.29373 34.4575 28.3936 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
35.6172 29.2842 mo
35.5029 29.4258 35.1528 29.3433 34.834 29.1016 cv
34.5166 28.8589 34.3496 28.5469 34.4653 28.4063 cv
34.5781 28.2646 34.9297 28.3472 35.2471 28.5889 cv
35.5659 28.8325 35.7314 29.1445 35.6172 29.2842 cv
cp
level3{
gsave
clp
[.962487 .73371 -.744075 .921936 35.3418 29.2046 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.962487 .73371 -.744075 .921936 35.3418 29.2046 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
34.9824 28.6548 mo
34.9639 28.6963 34.875 28.6987 34.7861 28.6582 cv
34.6982 28.6187 34.6431 28.5503 34.6631 28.5073 cv
34.6836 28.4658 34.7705 28.4634 34.8584 28.5029 cv
34.9482 28.5449 35.0034 28.6118 34.9824 28.6548 cv
cp
level3{
gsave
clp
[.318537 .148478 -.136896 .293692 34.6001 28.4751 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.318537 .148478 -.136896 .293692 34.6001 28.4751 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
35.3374 28.7666 mo
35.3198 28.7954 35.2646 28.793 35.2144 28.7656 cv
35.1636 28.7373 35.1362 28.6899 35.1528 28.6626 cv
35.1694 28.6348 35.2241 28.6348 35.2749 28.6636 cv
35.3252 28.6919 35.354 28.7393 35.3374 28.7666 cv
cp
level3{
gsave
clp
[.196545 .0677067 -.0472833 .174945 35.1479 28.6826 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.196545 .0677067 -.0472833 .174945 35.1479 28.6826 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
37.1089 30.8281 mo
36.9497 31.1465 36.5522 31.0972 36.2202 30.7168 cv
35.8887 30.3394 35.748 29.7744 35.9072 29.4595 cv
36.0664 29.1406 36.4653 29.1904 36.7969 29.5693 cv
37.1289 29.9473 37.2695 30.5117 37.1089 30.8281 cv
cp
level3{
gsave
clp
[1.4665 .990541 -.990541 1.4665 35.7754 29.6519 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4665 .990541 -.990541 1.4665 35.7754 29.6519 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
36.9849 30.6719 mo
36.8311 30.9785 36.4697 30.9565 36.1768 30.6226 cv
35.8833 30.2886 35.771 29.769 35.9263 29.4639 cv
36.0786 29.1572 36.4414 29.1792 36.7344 29.5122 cv
37.0269 29.8472 37.1396 30.3667 36.9849 30.6719 cv
cp
level3{
gsave
clp
[.885257 1.00944 -1.00342 1.99669 36.6968 30.6196 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.885257 1.00944 -1.00342 1.99669 36.6968 30.6196 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
36.4326 29.7329 mo
36.4019 29.8198 36.3062 29.8569 36.2192 29.814 cv
36.1328 29.7715 36.0864 29.667 36.1182 29.5791 cv
36.1504 29.4922 36.2456 29.4561 36.3315 29.5 cv
36.4204 29.5405 36.4653 29.646 36.4326 29.7329 cv
cp
level3{
gsave
clp
[.325437 .12444 -.114716 .300052 36.1519 29.6069 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.325437 .12444 -.114716 .300052 36.1519 29.6069 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
36.7939 29.8096 mo
36.7686 29.8691 36.7104 29.8896 36.6597 29.8535 cv
36.6113 29.8184 36.5918 29.7427 36.6172 29.6836 cv
36.6401 29.624 36.7002 29.6055 36.7476 29.6406 cv
36.7969 29.6758 36.8179 29.7515 36.7939 29.8096 cv
cp
level3{
gsave
clp
[.196428 .0523981 -.0339642 .173943 36.6045 29.7173 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.196428 .0523981 -.0339642 .173943 36.6045 29.7173 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
76.9004 27.061 mo
76.9004 27.061 78.959 33.9404 79.9521 34.9927 cv
81.0635 36.1714 80.1563 36.1255 78.3164 35.5586 cv
77.5342 35.3179 77.7046 32.3423 76.9546 30.6782 cv
75.9375 28.4243 74.1064 27.3564 74.1064 27.3564 cv
76.9004 27.061 li
cp
level3{
gsave
clp
[2.87888 -6.63681 6.63681 2.87888 75.979 34.5464 ] concat
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.87888 -6.63681 6.63681 2.87888 75.979 34.5464 ] concat
clp
/0 /Gradient get_res exec grestore
}if
newpath
67.4478 18.666 mo
71.6675 22.1929 74.7017 25.6836 76.7007 28.3276 cv
77.4629 27.7026 78.1255 27.0283 78.6406 26.3462 cv
81.8291 22.1226 78.001 16.7119 70.5669 13.6187 cv
63.6997 10.7627 54.1182 10.3037 52.6948 10.251 cv
55.2036 11.0386 61.0044 13.2813 67.4478 18.666 cv
cp
level3{
gsave
clp
[-8.43157 10.0375 -10.0375 -8.43157 71.0479 11.8989 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-8.43157 10.0375 -10.0375 -8.43157 71.0479 11.8989 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
67.4478 18.666 mo
61.0044 13.2813 55.2036 11.0386 52.6948 10.251 cv
52.5762 10.2466 52.5132 10.2441 52.5132 10.2441 cv
52.5132 10.2441 57.2705 14.1099 59.3291 19.3691 cv
62.6191 27.7764 62.7793 27.4707 63.1812 28.2012 cv
66.0952 33.4858 72.7476 31.5732 76.7007 28.3276 cv
74.7017 25.6836 71.6675 22.1929 67.4478 18.666 cv
cp
level3{
gsave
clp
[10.13 -12.329 12.329 10.13 56.96 28.5898 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.13 -12.329 12.329 10.13 56.96 28.5898 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
71.8687 16.437 mo
74.9014 18.4199 77.1147 20.9858 78.1504 23.4233 cv
77.6572 20.8662 75.7954 18.1816 72.9409 16.3154 cv
71.1611 15.1509 69.2578 14.4785 67.4717 14.2813 cv
68.9229 14.77 70.4155 15.4883 71.8687 16.437 cv
cp
level3{
gsave
clp
[19.9044 6.70528 -6.70528 19.9044 74.6621 18.2271 ] concat
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.9044 6.70528 -6.70528 19.9044 74.6621 18.2271 ] concat
clp
/2 /Gradient get_res exec grestore
}if
newpath
65.2002 21.2734 mo
64.8081 21.6592 63.7139 21.2217 62.7583 20.2983 cv
61.8027 19.3755 61.3457 18.3145 61.7393 17.9287 cv
62.1323 17.5435 63.2266 17.9805 64.1821 18.9043 cv
65.1377 19.8281 65.5947 20.8892 65.2002 21.2734 cv
cp
level3{
gsave
clp
[3.41424 3.39166 -3.39166 3.41424 61.7646 17.9019 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.41424 3.39166 -3.39166 3.41424 61.7646 17.9019 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
64.8408 20.9023 mo
64.4609 21.2744 63.4692 20.9155 62.6265 20.1016 cv
61.7842 19.2866 61.4082 18.3252 61.7886 17.9531 cv
62.1685 17.5806 63.1592 17.9399 64.0029 18.7549 cv
64.8452 19.5688 65.2197 20.5313 64.8408 20.9023 cv
cp
level3{
gsave
clp
[2.54779 2.46262 -2.4789 2.42633 64.0898 20.5723 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54779 2.46262 -2.4789 2.42633 64.0898 20.5723 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
63.2109 18.8525 mo
63.1372 18.9692 62.8804 18.9438 62.6377 18.7954 cv
62.3936 18.6484 62.2563 18.4341 62.3301 18.3179 cv
62.4023 18.2002 62.6597 18.2266 62.9023 18.3735 cv
63.1475 18.522 63.2847 18.7363 63.2109 18.8525 cv
cp
level3{
gsave
clp
[.87594 .540977 -.498777 .807621 62.2979 18.2959 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.87594 .540977 -.498777 .807621 62.2979 18.2959 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
64.2026 19.3008 mo
64.1426 19.3765 63.9844 19.3569 63.8467 19.2549 cv
63.7085 19.1523 63.645 19.0088 63.7031 18.9326 cv
63.7622 18.8569 63.9219 18.8779 64.0591 18.979 cv
64.1963 19.0811 64.2612 19.2241 64.2026 19.3008 cv
cp
level3{
gsave
clp
[.548902 .264356 -.197515 .493021 63.6855 18.9873 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.548902 .264356 -.197515 .493021 63.6855 18.9873 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
68.6074 23.7021 mo
68.3359 23.9766 67.5972 23.6792 66.9556 23.0376 cv
66.3149 22.395 66.0151 21.6523 66.2856 21.3779 cv
66.5557 21.1035 67.2959 21.3999 67.9375 22.0425 cv
68.5776 22.6841 68.8789 23.4263 68.6074 23.7021 cv
cp
level3{
gsave
clp
[2.33066 2.31525 -2.31525 2.33066 66.2803 21.377 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.33066 2.31525 -2.31525 2.33066 66.2803 21.377 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
68.3657 23.4429 mo
68.1045 23.709 67.4346 23.4648 66.8687 22.9004 cv
66.3032 22.3335 66.0571 21.6592 66.3184 21.3931 cv
66.5796 21.1284 67.251 21.3726 67.8164 21.938 cv
68.3823 22.5039 68.6284 23.1782 68.3657 23.4429 cv
cp
level3{
gsave
clp
[1.70991 1.71079 -1.70784 1.73201 67.8613 23.2217 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.70991 1.71079 -1.70784 1.73201 67.8613 23.2217 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
67.2773 22.0151 mo
67.2266 22.0972 67.0522 22.082 66.8887 21.98 cv
66.7236 21.8779 66.6323 21.7295 66.6831 21.646 cv
66.7334 21.5625 66.9082 21.5776 67.0718 21.6802 cv
67.2368 21.7822 67.3291 21.9316 67.2773 22.0151 cv
cp
level3{
gsave
clp
[.595968 .368068 -.339356 .549486 66.645 21.6265 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.595968 .368068 -.339356 .549486 66.645 21.6265 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
67.9473 22.3213 mo
67.9067 22.3755 67.7979 22.3623 67.7056 22.292 cv
67.6123 22.2217 67.5708 22.1206 67.6113 22.0664 cv
67.6519 22.0127 67.7598 22.0259 67.853 22.0962 cv
67.9453 22.1665 67.9868 22.2676 67.9473 22.3213 cv
cp
level3{
gsave
clp
[.371449 .178893 -.133661 .333634 67.6016 22.1069 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.371449 .178893 -.133661 .333634 67.6016 22.1069 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
80.5605 30.7847 mo
80.5605 30.7847 79.2192 33.7944 78.7051 34.2153 cv
78.1309 34.6865 78.5459 34.7183 79.417 34.5688 cv
79.7861 34.5054 79.8838 33.1411 80.3232 32.4282 cv
80.9185 31.4614 81.814 31.0835 81.814 31.0835 cv
80.5605 30.7847 li
cp
level3{
gsave
clp
[-.920236 -3.18943 -3.18943 .920236 80.5376 34.2471 ] concat
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.920236 -3.18943 -3.18943 .920236 80.5376 34.2471 ] concat
clp
/0 /Gradient get_res exec grestore
}if
newpath
85.355 27.5205 mo
83.2275 28.877 81.6426 30.2871 80.5771 31.3735 cv
80.2661 31.0439 80.0049 30.6982 79.8105 30.3564 cv
78.6074 28.2476 80.667 26.0112 84.2324 25.04 cv
87.5244 24.1436 91.9116 24.4985 92.563 24.5566 cv
91.3755 24.7686 88.603 25.4478 85.355 27.5205 cv
cp
level3{
gsave
clp
[3.24677 5.06228 5.06228 -3.24677 84.1143 24.2358 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.24677 5.06228 5.06228 -3.24677 84.1143 24.2358 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
85.355 27.5205 mo
88.603 25.4478 91.3755 24.7686 92.563 24.5566 cv
92.6167 24.562 92.6465 24.5654 92.6465 24.5654 cv
92.6465 24.5654 90.2539 26.0439 89.0083 28.3164 cv
87.0171 31.9492 86.9619 31.8018 86.7358 32.1094 cv
85.1001 34.3438 82.1851 33.0825 80.5771 31.3735 cv
81.6426 30.2871 83.2275 28.877 85.355 27.5205 cv
cp
level3{
gsave
clp
[-3.88519 -6.20496 -6.20496 3.88519 89.5439 32.6577 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.88519 -6.20496 -6.20496 3.88519 89.5439 32.6577 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
83.4736 26.2461 mo
81.9775 26.9697 80.8188 28.0068 80.2056 29.0557 cv
80.5801 27.9214 81.5845 26.8096 82.9937 26.1274 cv
83.8721 25.7021 84.7773 25.5078 85.6011 25.5234 cv
84.9126 25.6597 84.1909 25.8989 83.4736 26.2461 cv
cp
level3{
gsave
clp
[-9.44596 1.88092 1.88092 9.44596 82.0981 26.9023 ] concat
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.44596 1.88092 1.88092 9.44596 82.0981 26.9023 ] concat
clp
/2 /Gradient get_res exec grestore
}if
newpath
87.1992 27.4136 mo
87.3555 27.6113 87.8794 27.4775 88.3682 27.1128 cv
88.8579 26.748 89.1284 26.2935 88.9712 26.0947 cv
88.8154 25.897 88.291 26.0308 87.8022 26.3945 cv
87.3135 26.7593 87.0425 27.2148 87.1992 27.4136 cv
cp
level3{
gsave
clp
[-1.7532 1.34305 1.34305 1.7532 88.9658 26.0781 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.7532 1.34305 1.34305 1.7532 88.9658 26.0781 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
87.3862 27.2656 mo
87.5366 27.4575 88.0088 27.3521 88.4395 27.0313 cv
88.8711 26.7095 89.0986 26.2944 88.9482 26.1021 cv
88.7964 25.9111 88.3242 26.0156 87.8936 26.3374 cv
87.4609 26.6582 87.2344 27.0742 87.3862 27.2656 cv
cp
level3{
gsave
clp
[-1.30347 .970531 .98507 1.24918 87.7505 27.165 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.30347 .970531 .98507 1.24918 87.7505 27.165 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
88.2471 26.4287 mo
88.2734 26.4854 88.3921 26.4888 88.5107 26.436 cv
88.6309 26.3833 88.7065 26.2935 88.6802 26.2363 cv
88.6528 26.1792 88.5352 26.1758 88.4155 26.2285 cv
88.2954 26.2813 88.2207 26.3701 88.2471 26.4287 cv
cp
level3{
gsave
clp
[-.432073 .195484 .180234 .39837 88.7007 26.23 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.432073 .195484 .180234 .39837 88.7007 26.23 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
87.7705 26.5747 mo
87.7925 26.6118 87.8662 26.6118 87.9341 26.5732 cv
88.0024 26.5361 88.041 26.4736 88.0176 26.436 cv
87.9956 26.3975 87.9224 26.3975 87.854 26.436 cv
87.7847 26.4736 87.7476 26.5361 87.7705 26.5747 cv
cp
level3{
gsave
clp
[-.264243 .0876978 .0606738 .235006 88.0337 26.4595 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.264243 .0876978 .0606738 .235006 88.0337 26.4595 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
84.73 30.373 mo
84.8423 30.4946 85.1782 30.3794 85.4805 30.1147 cv
85.7813 29.8511 85.9341 29.5371 85.8218 29.416 cv
85.709 29.2944 85.3726 29.4097 85.0718 29.6743 cv
84.7695 29.938 84.6172 30.251 84.73 30.373 cv
cp
level3{
gsave
clp
[-1.07827 .972078 .972078 1.07827 85.8218 29.3999 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.07827 .972078 .972078 1.07827 85.8218 29.3999 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
84.8442 30.2666 mo
84.9521 30.3838 85.2563 30.2905 85.522 30.0576 cv
85.7881 29.8237 85.9155 29.5391 85.8066 29.4229 cv
85.6968 29.3052 85.3926 29.3984 85.1279 29.6313 cv
84.8618 29.8643 84.7344 30.1489 84.8442 30.2666 cv
cp
level3{
gsave
clp
[-.803517 .704598 .710906 .766968 85.0815 30.1899 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.803517 .704598 .710906 .766968 85.0815 30.1899 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
85.3638 29.6719 mo
85.3848 29.7085 85.4629 29.7051 85.5376 29.6631 cv
85.6133 29.6226 85.6582 29.5601 85.6377 29.5239 cv
85.6177 29.4878 85.5396 29.4922 85.4639 29.5327 cv
85.3892 29.5732 85.3442 29.6357 85.3638 29.6719 cv
cp
level3{
gsave
clp
[-.272656 .150698 .138937 .251389 85.6729 29.5005 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.272656 .150698 .138937 .251389 85.6729 29.5005 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
85.0596 29.793 mo
85.0762 29.8169 85.1235 29.8125 85.1675 29.7842 cv
85.209 29.7554 85.2319 29.7129 85.2158 29.6895 cv
85.1982 29.6655 85.1499 29.6699 85.1069 29.6982 cv
85.064 29.7271 85.043 29.7686 85.0596 29.793 cv
cp
level3{
gsave
clp
[-.169703 .0718665 .0524816 .15188 85.2251 29.6997 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.169703 .0718665 .0524816 .15188 85.2251 29.6997 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
66.7446 24.293 mo
67.0576 24.9487 67.7539 25.5903 68.5977 26.0713 cv
67.6113 25.6387 66.8052 25.0215 66.5107 24.4043 cv
66.3262 24.0186 66.3701 23.6914 66.5918 23.4463 cv
66.5488 23.6934 66.5952 23.978 66.7446 24.293 cv
cp
0 0 0 rgb
f
65.7046 26.3013 mo
66.4141 26.1416 67.3486 26.291 68.2485 26.6567 cv
67.2983 26.1494 66.314 25.897 65.6475 26.0474 cv
65.231 26.1416 65.0005 26.3789 64.9453 26.7041 cv
65.1123 26.5186 65.3647 26.3779 65.7046 26.3013 cv
cp
f
71.1436 25.4023 mo
72.3047 26.377 72.4619 28.1016 71.4941 29.2549 cv
70.5273 30.4067 68.8018 30.5518 67.6411 29.5767 cv
66.48 28.6021 66.3237 26.8789 67.2905 25.7256 cv
68.2583 24.5732 69.9839 24.4282 71.1436 25.4023 cv
cp
level3{
gsave
clp
[3.50306 -4.17377 4.17377 3.50306 67.6445 29.5806 ] concat
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.101961 .54902 .101961 ]
/C1 [.101961 .54902 .101961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.372549 .623529 0 ]
/C1 [.101961 .54902 .101961 ]
/N 2.14747 
>>
]
/Bounds [.00561798 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.50306 -4.17377 4.17377 3.50306 67.6445 29.5806 ] concat
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)B'M4)]Th<*?H7D+<VgN+sJ6V,U=Z^-71)g-n-Sp.P!##/1iG+/hSe10JG491,:XA1c.'I2)[?O2`NcV
3B9,]4$,Md4?Yhj5!D.p5<qJ!5s[h(6:4+-6psF377B[87Ros=84Z9C8P)NH8kVfM92&#Q9he>V:/4PZ
:JXb_:f'tc;,L1g;GpCj;c?Un<)cgr<)lpu<E3(#<`W7&='&I)='/R,=BJ[.=]nm1=]np3>$>*5>$G38
>?b<9>?kE<>[1N=>[1N=?!U`A?!U`A?!U`A?!^iD?=$rE?=$rE?=$rE?=$rE?=$rE?=$rE?=$rE?=$rE
~>
<~N/W^SN/W^SNK&pWNK&pXNfK-[NfK0]O,o?_OH>QcOH>QcOcbcgOcbchP*1ukP*1ulPEV2oPEV2pPa%Ds
Pa%DsQ'IW"Q'IW"Q'R`%QBmi&QBml(Q^=&*Q^=&*Q^F/-R$a8.R$a8.R@0J2R@0J2R@0J2R[T\6R[T\6
R[T\6R[]e9S"#n:S"#n:S"#n:S"-"=S=H+>S=H+>S=H+>S=H+?SXl=BSXl=BSXl=BSXl=BSXl=BSXl=B
St;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OF
~>
<~)B'J2)&X;/(`4)+(Ddl(()@Z$()7Q!'bqDs'GM5p',)#m'+toj&eYcg&J5Te&.fBa&.]9^%hB0\%LrsY
%LrpW%1NaU$k*OQ$k*OP$O[=M$O[:K$47+I$4."F#mgnE#m^eB#RC\A#R:S>#6tJ=#6tG;"pP89"pP89
"U,&5"U,&5"U,#3"9\i1"9\i1"9\f/!s8W-!s8W-!s8W,!WiE)!WiE)!WiE)!WiE(!<E3%!<E3%!<E3%
!<E3%!<E3%!<<*"zzzzzzzzzzzz!!!!!~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
newpath
67.8267 24.562 mo
68.4053 24.9707 68.5317 25.7861 68.1099 26.3848 cv
67.687 26.9834 66.8765 27.1382 66.2988 26.7295 cv
65.7207 26.3218 65.5933 25.5059 66.0151 24.9072 cv
66.437 24.3096 67.2485 24.1548 67.8267 24.562 cv
cp
0 0 0 rgb
f
70.9033 24.9336 mo
72.0146 25.8672 72.1543 27.5313 71.2139 28.6504 cv
70.2739 29.771 68.6108 29.9224 67.498 28.9888 cv
66.3867 28.0562 66.248 26.3921 67.187 25.2705 cv
68.1274 24.1514 69.7915 24 70.9033 24.9336 cv
cp
level3{
gsave
clp
[4.02717 3.38002 -3.38002 4.02717 67.187 25.2666 ] concat
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .105882 0 ]
/C1 [.380392 .0313726 0 ]
/N 2.36289 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .105882 0 ]
/C1 [.721569 .94902 .219608 ]
/N 1.3247 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.721569 .94902 .219608 ]
/C1 [.372549 .623529 0 ]
/N 1.74584 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 .101961 ]
/C1 [.372549 .623529 0 ]
/N 2.14747 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 .470588 0 ]
/C1 [1 1 .101961 ]
/N 2.14747 
>>
]
/Bounds [1 1 1 1 ]
/Encode [1 0 0 1 0 1 1 0 1 0 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.02717 3.38002 -3.38002 4.02717 67.187 25.2666 ] concat
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~@:<VTA7]@bB4u!oCMRa'DJsH4EH6)@FEMbMGBe@XH@(!dI=6QoJ:N3&JqJ`0Knb>;LkpnEMMmCON/`jX
O,oBbOcklkPE_>tQBml(R$a;0R[T_8S=H.@St;RHTV.sOTq\9VUSFW\V5:&dVPg>jW2Q\pWN)tuX/i>'
XKAV,Y-+q2YHP.6YctC;Z*CU?ZEpmDZa@*H['d<L[C*HO[^NZS\$riV\@B&Y\@K/\\[f8^]"5Ja]">Sd
]=Y\e]=beh]Y(ni]Y(qk]tM+m]tM+m]tM+n^:q=q^:q=q^:q=q^:q=q^:q=q^:q=q^:q=q^:q=q^:q=q
~>
<~#RC\A#RC_C#mgnE$47+I$47.K$O[=M$OdFP$k*OQ%1NaU%1NdW%LrsY%Ls![%hB0]%hK9`&.fBa&.oKd
&J5Te&J5Wg&eYfi&eYfj',)#m',)#m',2,p'GM5q'GM5r'bqGu'bqGu'bqH!()@Z$()@Z$()@Z$(Ddl(
(Ddl((Ddl((Ddl)(`4),(`4),(`4),(`4),(`4,.)&X;0)&X;0)&X;0)&X;0)&X;0)&X;1)B'M4)B'M4
)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
newpath
67.4849 28.978 mo
67.9717 28.6846 68.4448 28.2837 68.8613 27.7861 cv
69.7642 26.7109 70.1807 25.4531 70.0576 24.459 cv
69.0591 24.123 67.9087 24.4116 67.187 25.272 cv
66.2515 26.3867 66.3853 28.042 67.4849 28.978 cv
cp
level3{
gsave
clp
[2.45743 1.41919 -1.41919 2.45743 66.9219 25.6465 ] concat
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .105882 0 ]
/C1 [1 1 1 ]
/N 2.36289 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.45743 1.41919 -1.41919 2.45743 66.9219 25.6465 ] concat
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8Muqr;?HgqYBs^q"OOVp%@tLoCMPDnaZ,<n*f]4mHs9,lg*j$l07EqkND$jk2k^cjQ#:\io8qUiS`YO
hr!;Ih;-oBgtUT<g=k96g"G$1f[na+f%/C%e^`1!eC2mqdaHRkdF$@gd*U+bcd0n^cHa\Zc-=JVbfn8R
bKJ&Nb0%lKaiVZHaN2HDaN)?Aa2c3>`l?$<`Pog8`Pod6`5KU4`5BL1_o'C0_ns:-_SX1,_SX.*_83t(
_83t(_8*k%^qdb$^qdb$^qdb$^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
~>
<~s8;`gp@RqFmd06&k2bO[hV?i<f@A?tccs\VaMu09_8![r]"#2VZa$a;XfJG"VPU&]TUq^DR[BG,P`h/i
NfAsSLkg_<K7\W'IXHKgH$=FSFE2A?Df0B,C2%?oAn5C\@:3GK?!LT;=]ea+<E)mp;,C%a:/+DT8kDQE
7n,p86pj:,5sRXu5!;"j4$#A^3&iiT2Dm<J1G^dA0eb:70.nk//M&G'.k3"u.4HYn-RU8g-71#b,U=W[
,9nBV+sJ0R+X%sN+<VaJ+!2OF*Zc@D*??.@*??+>*#oq<*#oq;)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8
~>
<~s8;`fp%._Am-<frj5JnOg=Y!+da6:`b/hQ>_8![q\[])TZEUL5Wi2ekUS4<NS=5h2Q'7>kNf8jPLPCJ6
JU`,rH?j^XFE;G@DJa3)BkM$h@q&hQ?<g]<=]\X(;c6Ih:JFMU8kDQC779L05sRXu4Zkee3B/rU2)I*E
0eb75/M/M(.Ocbo-RL,b,U4KV+WqjK*ZZ4?)]K\5)&O/+()@W"'GD,m&eP]e&.]9]%LrpW$k*LO$OR4I
#mgkC#R:S>#6kA:"U,&5"9\i1!s8W-!s/N*!WiE)!<E3%!<E3%zzzzz!!!!!~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
newpath
68.9644 26.6875 mo
68.7305 26.9658 68.7666 27.3799 69.0449 27.6123 cv
69.3237 27.8467 69.7368 27.8101 69.9707 27.5322 cv
70.2046 27.2544 70.1675 26.8394 69.8906 26.6064 cv
69.6123 26.3735 69.1973 26.4097 68.9644 26.6875 cv
cp
69.8926 24.4395 mo
69.8994 24.4307 69.9058 24.4219 69.9111 24.4141 cv
69.5039 24.3032 69.0752 24.293 68.6655 24.3809 cv
68.7041 24.437 68.749 24.4888 68.8042 24.5337 cv
69.1304 24.8081 69.6182 24.7656 69.8926 24.4395 cv
cp
70.9448 25.6499 mo
70.6914 25.9517 70.7373 26.4087 71.0483 26.6689 cv
71.2769 26.8613 71.584 26.8931 71.8315 26.7769 cv
71.8008 26.2935 71.6382 25.8188 71.3481 25.4136 cv
71.1943 25.4434 71.0513 25.5225 70.9448 25.6499 cv
cp
67.521 27.4443 mo
67.2651 27.229 66.8687 27.2773 66.627 27.5498 cv
66.6279 27.5576 66.6304 27.5654 66.6313 27.5718 cv
66.6348 27.584 66.6367 27.5938 66.6392 27.6035 cv
66.6479 27.6348 66.6543 27.665 66.6631 27.6948 cv
66.6665 27.707 66.6699 27.7178 66.6743 27.73 cv
66.6821 27.7588 66.6909 27.7871 66.7007 27.8159 cv
66.7051 27.8291 66.7095 27.8423 66.7139 27.854 cv
66.7236 27.8818 66.7334 27.9082 66.7422 27.9355 cv
66.749 27.9487 66.7544 27.9629 66.7598 27.9761 cv
66.77 28.0015 66.7798 28.0278 66.793 28.0532 cv
66.7983 28.0664 66.8062 28.0806 66.8125 28.0947 cv
66.8237 28.1191 66.8345 28.144 66.8467 28.1685 cv
66.8535 28.1826 66.8623 28.1968 66.8696 28.2114 cv
66.8818 28.2344 66.894 28.2573 66.9072 28.2803 cv
66.916 28.2959 66.9248 28.3101 66.9336 28.3242 cv
66.9468 28.3462 66.96 28.3682 66.9731 28.3916 cv
66.9829 28.4058 66.9927 28.4199 67.0039 28.4341 cv
67.0171 28.4561 67.0313 28.4771 67.0454 28.498 cv
67.0566 28.5122 67.0674 28.5273 67.0786 28.542 cv
67.0928 28.5625 67.1069 28.5825 67.1235 28.6021 cv
67.1245 28.6035 67.127 28.6055 67.1289 28.6079 cv
67.2871 28.5825 67.4434 28.499 67.5605 28.3594 cv
67.8003 28.0737 67.7837 27.6631 67.521 27.4443 cv
cp
69.2534 28.7471 mo
69.0479 28.9922 68.9854 29.3086 69.0557 29.5977 cv
69.7051 29.6279 70.3594 29.4194 70.8799 28.9834 cv
70.8218 28.8506 70.7339 28.7275 70.6152 28.6284 cv
70.207 28.2861 69.5972 28.3389 69.2534 28.7471 cv
cp
level3{
gsave
clp
[10.7512 .69108 -.69108 10.7512 69.1919 26.9165 ] concat
/10 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 ]
/C1 [0 0 0 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 0 0 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds [.011236 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.7512 .69108 -.69108 10.7512 69.1919 26.9165 ] concat
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~z!<N?+"U52;#mq%K%1Wm[&J>`k'c%T&)&aG6*?H:F+X/-V,pjuf.4Qi!/M8\10etOA2)[BQ3BB5a4[)(
q5sdq,77Kd<8P2WL9hnJ\;,U=l<E<1'=^#$7?!^lG@:E_WAS,RgBkhF"D/O92EH6,BF`r"TH@($fIXcm
!JqJ`1L51SAMMmFQNfT9aP*;,qQC!u,R[]h<StD[LU8+N\VPgAlWiN5'Y-5(7ZEppG[^WcW]">Vg^;%J
"_Sa=2`lH0Bb0/#RcHjkbdaQ^rf%8R-g=tE=hV[8MioB+]k3(smlKdg(mdKZ8o(2MHp@n@XqYU3h~>
<~z!<N?+"U52;#mq%K%1Wm[&J>`k'c%T&)&aG6*?H:F+X/-V,pjuf.4Qi!/M8\10etOA2)[BQ3BB5a4[)(
q5sdq,77Kd<8P2WL9hnJ\;,U=l<E<1'=^#$7?!^lG@:E_WAS,RgBkhF"D/O92EH6,BF`r"TH@($fIXcm
!JqJ`1L51SAMMmFQNfT9aP*;,qQC!u,R[]h<StD[LU8+N\VPgAlWiN5'Y-5(7ZEppG[^WcW]">Vg^;%J
"_Sa=2`lH0Bb0/#RcHjkbdaQ^rf%8R-g=tE=hV[8MioB+]k3(smlKdg(mdKZ8o(2MHp@n@XqYU3h~>
<~z!<N?+"U52;#mq%K%1Wm[&J>`k'c%T&)&aG6*?H:F+X/-V,pjuf.4Qi!/M8\10etOA2)[BQ3BB5a4[)(
q5sdq,77Kd<8P2WL9hnJ\;,U=l<E<1'=^#$7?!^lG@:E_WAS,RgBkhF"D/O92EH6,BF`r"TH@($fIXcm
!JqJ`1L51SAMMmFQNfT9aP*;,qQC!u,R[]h<StD[LU8+N\VPgAlWiN5'Y-5(7ZEppG[^WcW]">Vg^;%J
"_Sa=2`lH0Bb0/#RcHjkbdaQ^rf%8R-g=tE=hV[8MioB+]k3(smlKdg(mdKZ8o(2MHp@n@XqYU3h~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
newpath
29.0938 39.8955 mo
29.0938 36.7705 li
36.2813 36.7705 li
36.2813 43.1592 li
34.9063 44.0977 33.6914 44.7363 32.6348 45.0742 cv
31.5781 45.4131 30.3262 45.583 28.876 45.583 cv
27.0918 45.583 25.6367 45.2793 24.5117 44.6719 cv
23.3877 44.0635 22.5156 43.1582 21.8965 41.957 cv
21.2783 40.7539 20.9688 39.375 20.9688 37.8174 cv
20.9688 36.1777 21.3066 34.7529 21.9844 33.54 cv
22.6611 32.3281 23.6523 31.4072 24.959 30.7793 cv
25.9775 30.2939 27.3486 30.0518 29.0723 30.0518 cv
30.7344 30.0518 31.9766 30.2021 32.8008 30.5029 cv
33.625 30.8037 34.3086 31.2705 34.8525 31.9033 cv
35.3955 32.5361 35.8047 33.3379 36.0781 34.3086 cv
31.5938 35.1143 li
31.4092 34.543 31.0957 34.1055 30.6553 33.8027 cv
30.2148 33.5 29.6523 33.3486 28.9688 33.3486 cv
27.9492 33.3486 27.1377 33.7021 26.5322 34.4082 cv
25.9277 35.1152 25.625 36.2324 25.625 37.7607 cv
25.625 39.3857 25.9307 40.5459 26.542 41.2422 cv
27.1533 41.9385 28.0059 42.2861 29.0986 42.2861 cv
29.6172 42.2861 30.1133 42.2119 30.584 42.0625 cv
31.0557 41.9131 31.5957 41.6592 32.2031 41.2988 cv
32.2031 39.8955 li
29.0938 39.8955 li
cp
level3{
gsave
clp
[-1.08886e-6 24.9103 -24.9103 -1.08886e-6 54.4502 27.125 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.08886e-6 24.9103 -24.9103 -1.08886e-6 54.4502 27.125 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
38.79 34.4424 mo
42.6914 34.4424 li
42.6914 36.2207 li
43.0664 35.4492 43.4541 34.918 43.8535 34.6279 cv
44.2529 34.3379 44.7471 34.1924 45.334 34.1924 cv
45.9492 34.1924 46.6211 34.3848 47.3525 34.7695 cv
46.0615 37.7344 li
45.5693 37.5293 45.1797 37.4268 44.8936 37.4268 cv
44.3467 37.4268 43.9238 37.6523 43.623 38.1045 cv
43.1924 38.7412 42.9775 39.9316 42.9775 41.6777 cv
42.9775 45.333 li
38.79 45.333 li
38.79 34.4424 li
cp
level3{
gsave
clp
[-1.08886e-6 24.9103 -24.9103 -1.08886e-6 54.4502 27.125 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.08886e-6 24.9103 -24.9103 -1.08886e-6 54.4502 27.125 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
56.2461 38.9268 mo
56.1641 38.1172 55.9482 37.5371 55.5967 37.1865 cv
55.2461 36.8359 54.7842 36.6611 54.2119 36.6611 cv
53.5508 36.6611 53.0225 36.9258 52.627 37.4541 cv
52.375 37.7832 52.2148 38.2744 52.1465 38.9268 cv
56.2461 38.9268 li
cp
60.4961 40.9268 mo
52.1367 40.9268 li
52.2119 41.5957 52.3926 42.0947 52.6797 42.4229 cv
53.082 42.8945 53.6084 43.1299 54.2578 43.1299 cv
54.667 43.1299 55.0566 43.0273 55.4248 42.8203 cv
55.6504 42.6904 55.8926 42.46 56.1523 42.1299 cv
60.2617 42.5049 li
59.6328 43.6035 58.874 44.3906 57.9854 44.8672 cv
57.0967 45.3447 55.8223 45.583 54.1611 45.583 cv
52.7188 45.583 51.584 45.3789 50.7578 44.9727 cv
49.9297 44.5654 49.2451 43.9189 48.7012 43.0332 cv
48.1582 42.1475 47.8867 41.1055 47.8867 39.9082 cv
47.8867 38.2051 48.4316 36.8262 49.5215 35.7725 cv
50.6113 34.7188 52.1172 34.1924 54.0371 34.1924 cv
55.5957 34.1924 56.8262 34.4287 57.7285 34.9004 cv
58.6299 35.373 59.3164 36.0576 59.7891 36.9541 cv
60.2598 37.8506 60.4961 39.0176 60.4961 40.4551 cv
60.4961 40.9268 li
cp
level3{
gsave
clp
[-1.08886e-6 24.9103 -24.9103 -1.08886e-6 54.4502 27.125 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.08886e-6 24.9103 -24.9103 -1.08886e-6 54.4502 27.125 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
70.2529 38.9268 mo
70.1709 38.1172 69.9551 37.5371 69.6035 37.1865 cv
69.2529 36.8359 68.791 36.6611 68.2188 36.6611 cv
67.5576 36.6611 67.0293 36.9258 66.6348 37.4541 cv
66.3818 37.7832 66.2217 38.2744 66.1543 38.9268 cv
70.2529 38.9268 li
cp
74.5029 40.9268 mo
66.1436 40.9268 li
66.2188 41.5957 66.3994 42.0947 66.6865 42.4229 cv
67.0898 42.8945 67.6152 43.1299 68.2637 43.1299 cv
68.6738 43.1299 69.0625 43.0273 69.4316 42.8203 cv
69.6572 42.6904 69.8994 42.46 70.1592 42.1299 cv
74.2686 42.5049 li
73.6396 43.6035 72.8809 44.3906 71.9922 44.8672 cv
71.1035 45.3447 69.8291 45.583 68.168 45.583 cv
66.7256 45.583 65.5918 45.3789 64.7637 44.9727 cv
63.9375 44.5654 63.252 43.9189 62.709 43.0332 cv
62.165 42.1475 61.8936 41.1055 61.8936 39.9082 cv
61.8936 38.2051 62.4385 36.8262 63.5283 35.7725 cv
64.6191 34.7188 66.124 34.1924 68.0449 34.1924 cv
69.6025 34.1924 70.833 34.4287 71.7344 34.9004 cv
72.6367 35.373 73.3242 36.0576 73.7949 36.9541 cv
74.2676 37.8506 74.5029 39.0176 74.5029 40.4551 cv
74.5029 40.9268 li
cp
level3{
gsave
clp
[-1.08886e-6 24.9103 -24.9103 -1.08886e-6 54.4502 27.125 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.08886e-6 24.9103 -24.9103 -1.08886e-6 54.4502 27.125 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
76.4316 34.4424 mo
80.3164 34.4424 li
80.3164 36.2109 li
80.8965 35.4863 81.4834 34.9697 82.0771 34.6582 cv
82.6709 34.3477 83.3936 34.1924 84.2471 34.1924 cv
85.4004 34.1924 86.3027 34.5361 86.9541 35.2236 cv
87.6055 35.9111 87.9316 36.9727 87.9316 38.4082 cv
87.9316 45.333 li
83.7441 45.333 li
83.7441 39.3369 li
83.7441 38.6523 83.6182 38.168 83.3652 37.8848 cv
83.1133 37.5996 82.7588 37.458 82.3018 37.458 cv
81.7969 37.458 81.3877 37.6494 81.0742 38.0332 cv
80.7598 38.416 80.6035 39.1045 80.6035 40.0967 cv
80.6035 45.333 li
76.4316 45.333 li
76.4316 34.4424 li
cp
level3{
gsave
clp
[-1.08886e-6 24.9103 -24.9103 -1.08886e-6 54.4502 27.125 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.08886e-6 24.9103 -24.9103 -1.08886e-6 54.4502 27.125 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
29.0938 39.8955 mo
29.0938 36.7705 li
36.2813 36.7705 li
36.2813 43.1592 li
34.9063 44.0977 33.6914 44.7363 32.6348 45.0742 cv
31.5781 45.4131 30.3262 45.583 28.876 45.583 cv
27.0918 45.583 25.6367 45.2793 24.5117 44.6719 cv
23.3877 44.0635 22.5156 43.1582 21.8965 41.957 cv
21.2783 40.7539 20.9688 39.375 20.9688 37.8174 cv
20.9688 36.1777 21.3066 34.7529 21.9844 33.54 cv
22.6611 32.3281 23.6523 31.4072 24.959 30.7793 cv
25.9775 30.2939 27.3486 30.0518 29.0723 30.0518 cv
30.7344 30.0518 31.9766 30.2021 32.8008 30.5029 cv
33.625 30.8037 34.3086 31.2705 34.8525 31.9033 cv
35.3955 32.5361 35.8047 33.3379 36.0781 34.3086 cv
31.5938 35.1143 li
31.4092 34.543 31.0957 34.1055 30.6553 33.8027 cv
30.2148 33.5 29.6523 33.3486 28.9688 33.3486 cv
27.9492 33.3486 27.1377 33.7021 26.5322 34.4082 cv
25.9277 35.1152 25.625 36.2324 25.625 37.7607 cv
25.625 39.3857 25.9307 40.5459 26.542 41.2422 cv
27.1533 41.9385 28.0059 42.2861 29.0986 42.2861 cv
29.6172 42.2861 30.1133 42.2119 30.584 42.0625 cv
31.0557 41.9131 31.5957 41.6592 32.2031 41.2988 cv
32.2031 39.8955 li
29.0938 39.8955 li
cp
level3{
gsave
clp
[-1.08886e-6 24.9103 -24.9103 -1.08886e-6 28.625 27.125 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.08886e-6 24.9103 -24.9103 -1.08886e-6 28.625 27.125 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
38.79 34.4424 mo
42.6914 34.4424 li
42.6914 36.2207 li
43.0664 35.4492 43.4541 34.918 43.8535 34.6279 cv
44.2529 34.3379 44.7471 34.1924 45.334 34.1924 cv
45.9492 34.1924 46.6211 34.3848 47.3525 34.7695 cv
46.0615 37.7344 li
45.5693 37.5293 45.1797 37.4268 44.8936 37.4268 cv
44.3467 37.4268 43.9238 37.6523 43.623 38.1045 cv
43.1924 38.7412 42.9775 39.9316 42.9775 41.6777 cv
42.9775 45.333 li
38.79 45.333 li
38.79 34.4424 li
cp
level3{
gsave
clp
[-7.81046e-7 17.8682 -17.8682 -7.81046e-7 43.0713 32.0928 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-7.81046e-7 17.8682 -17.8682 -7.81046e-7 43.0713 32.0928 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
56.2461 38.9268 mo
56.1641 38.1172 55.9482 37.5371 55.5967 37.1865 cv
55.2461 36.8359 54.7842 36.6611 54.2119 36.6611 cv
53.5508 36.6611 53.0225 36.9258 52.627 37.4541 cv
52.375 37.7832 52.2148 38.2744 52.1465 38.9268 cv
56.2461 38.9268 li
cp
60.4961 40.9268 mo
52.1367 40.9268 li
52.2119 41.5957 52.3926 42.0947 52.6797 42.4229 cv
53.082 42.8945 53.6084 43.1299 54.2578 43.1299 cv
54.667 43.1299 55.0566 43.0273 55.4248 42.8203 cv
55.6504 42.6904 55.8926 42.46 56.1523 42.1299 cv
60.2617 42.5049 li
59.6328 43.6035 58.874 44.3906 57.9854 44.8672 cv
57.0967 45.3447 55.8223 45.583 54.1611 45.583 cv
52.7188 45.583 51.584 45.3789 50.7578 44.9727 cv
49.9297 44.5654 49.2451 43.9189 48.7012 43.0332 cv
48.1582 42.1475 47.8867 41.1055 47.8867 39.9082 cv
47.8867 38.2051 48.4316 36.8262 49.5215 35.7725 cv
50.6113 34.7188 52.1172 34.1924 54.0371 34.1924 cv
55.5957 34.1924 56.8262 34.4287 57.7285 34.9004 cv
58.6299 35.373 59.3164 36.0576 59.7891 36.9541 cv
60.2598 37.8506 60.4961 39.0176 60.4961 40.4551 cv
60.4961 40.9268 li
cp
level3{
gsave
clp
[-7.98573e-7 18.2692 -18.2692 -7.98573e-7 54.1914 32.0459 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-7.98573e-7 18.2692 -18.2692 -7.98573e-7 54.1914 32.0459 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
70.2529 38.9268 mo
70.1709 38.1172 69.9551 37.5371 69.6035 37.1865 cv
69.2529 36.8359 68.791 36.6611 68.2188 36.6611 cv
67.5576 36.6611 67.0293 36.9258 66.6348 37.4541 cv
66.3818 37.7832 66.2217 38.2744 66.1543 38.9268 cv
70.2529 38.9268 li
cp
74.5029 40.9268 mo
66.1436 40.9268 li
66.2188 41.5957 66.3994 42.0947 66.6865 42.4229 cv
67.0898 42.8945 67.6152 43.1299 68.2637 43.1299 cv
68.6738 43.1299 69.0625 43.0273 69.4316 42.8203 cv
69.6572 42.6904 69.8994 42.46 70.1592 42.1299 cv
74.2686 42.5049 li
73.6396 43.6035 72.8809 44.3906 71.9922 44.8672 cv
71.1035 45.3447 69.8291 45.583 68.168 45.583 cv
66.7256 45.583 65.5918 45.3789 64.7637 44.9727 cv
63.9375 44.5654 63.252 43.9189 62.709 43.0332 cv
62.165 42.1475 61.8936 41.1055 61.8936 39.9082 cv
61.8936 38.2051 62.4385 36.8262 63.5283 35.7725 cv
64.6191 34.7188 66.124 34.1924 68.0449 34.1924 cv
69.6025 34.1924 70.833 34.4287 71.7344 34.9004 cv
72.6367 35.373 73.3242 36.0576 73.7949 36.9541 cv
74.2676 37.8506 74.5029 39.0176 74.5029 40.4551 cv
74.5029 40.9268 li
cp
level3{
gsave
clp
[-7.98573e-7 18.2692 -18.2692 -7.98573e-7 68.1982 32.0459 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-7.98573e-7 18.2692 -18.2692 -7.98573e-7 68.1982 32.0459 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
76.4316 34.4424 mo
80.3164 34.4424 li
80.3164 36.2109 li
80.8965 35.4863 81.4834 34.9697 82.0771 34.6582 cv
82.6709 34.3477 83.3936 34.1924 84.2471 34.1924 cv
85.4004 34.1924 86.3027 34.5361 86.9541 35.2236 cv
87.6055 35.9111 87.9316 36.9727 87.9316 38.4082 cv
87.9316 45.333 li
83.7441 45.333 li
83.7441 39.3369 li
83.7441 38.6523 83.6182 38.168 83.3652 37.8848 cv
83.1133 37.5996 82.7588 37.458 82.3018 37.458 cv
81.7969 37.458 81.3877 37.6494 81.0742 38.0332 cv
80.7598 38.416 80.6035 39.1045 80.6035 40.0967 cv
80.6035 45.333 li
76.4316 45.333 li
76.4316 34.4424 li
cp
level3{
gsave
clp
[-7.81046e-7 17.8682 -17.8682 -7.81046e-7 82.1816 32.0928 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-7.81046e-7 17.8682 -17.8682 -7.81046e-7 82.1816 32.0928 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
34.1416 41.7432 mo
33.7598 41.7266 33.4624 40.9741 33.4761 40.063 cv
33.4902 39.1514 33.811 38.4263 34.1934 38.4429 cv
34.5742 38.4585 34.8726 39.2104 34.8579 40.1216 cv
34.8438 41.0332 34.5229 41.7588 34.1416 41.7432 cv
cp
level3{
gsave
clp
[-.0960243 3.29848 -3.29848 -.0960243 34.2153 38.4429 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0960243 3.29848 -3.29848 -.0960243 34.2153 38.4429 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
34.1587 41.3882 mo
33.7905 41.3726 33.5015 40.708 33.5137 39.9053 cv
33.5264 39.1016 33.8354 38.4624 34.2036 38.4785 cv
34.5732 38.4941 34.8613 39.1582 34.8491 39.9614 cv
34.8369 40.7651 34.5278 41.4038 34.1587 41.3882 cv
cp
level3{
gsave
clp
[-.0388526 2.42931 -2.40477 -.102244 33.9707 40.8594 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0388526 2.42931 -2.40477 -.102244 33.9707 40.8594 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
34.4238 39.6118 mo
34.3296 39.6299 34.2207 39.4897 34.1802 39.2988 cv
34.1387 39.1074 34.1826 38.938 34.2764 38.9199 cv
34.3696 38.9023 34.4795 39.0425 34.52 39.2334 cv
34.5605 39.4243 34.5176 39.5938 34.4238 39.6118 cv
cp
level3{
gsave
clp
[.140423 .693659 -.639558 .129454 34.2788 38.9185 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.140423 .693659 -.639558 .129454 34.2788 38.9185 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
34.667 40.3179 mo
34.6006 40.3242 34.5352 40.2349 34.5215 40.1182 cv
34.5078 40.0015 34.5498 39.9023 34.6162 39.8955 cv
34.6831 39.8892 34.748 39.9785 34.7617 40.0952 cv
34.7754 40.2114 34.7329 40.311 34.667 40.3179 cv
cp
level3{
gsave
clp
[.125279 .399073 -.339697 .13251 34.5781 39.9038 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.125279 .399073 -.339697 .13251 34.5781 39.9038 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
78.0674 37.9678 mo
77.7051 38.0903 77.1558 37.4966 76.8398 36.6421 cv
76.5229 35.7871 76.5601 34.9946 76.9224 34.8721 cv
77.2837 34.749 77.833 35.3423 78.1489 36.1968 cv
78.4658 37.0518 78.4287 37.8447 78.0674 37.9678 cv
cp
level3{
gsave
clp
[1.10273 3.11024 -3.11024 1.10273 76.9414 34.8613 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.10273 3.11024 -3.11024 1.10273 76.9414 34.8613 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
77.9551 37.6313 mo
77.6055 37.7495 77.0967 37.2344 76.8179 36.4805 cv
76.5386 35.7271 76.5957 35.0205 76.9448 34.9014 cv
77.2949 34.7827 77.8042 35.2979 78.0825 36.0513 cv
78.3618 36.8047 78.3047 37.5117 77.9551 37.6313 cv
cp
level3{
gsave
clp
[.841547 2.27818 -2.28006 .773597 77.5859 37.2046 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.841547 2.27818 -2.28006 .773597 77.5859 37.2046 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
77.5596 35.8789 mo
77.4785 35.9297 77.3267 35.8379 77.2197 35.6743 cv
77.1123 35.5112 77.0918 35.3374 77.1729 35.2866 cv
77.2534 35.2368 77.4058 35.3271 77.5127 35.4907 cv
77.6201 35.6543 77.6406 35.8281 77.5596 35.8789 cv
cp
level3{
gsave
clp
[.38148 .595717 -.549249 .351722 77.1802 35.2944 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.38148 .595717 -.549249 .351722 77.1802 35.2944 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
78.042 36.4492 mo
77.9819 36.4785 77.8892 36.4194 77.8335 36.3159 cv
77.7793 36.2114 77.7827 36.1035 77.8428 36.0732 cv
77.9019 36.0439 77.9951 36.1035 78.0503 36.207 cv
78.105 36.311 78.1016 36.4189 78.042 36.4492 cv
cp
level3{
gsave
clp
[.261046 .326815 -.268825 .246373 77.8096 36.0957 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.261046 .326815 -.268825 .246373 77.8096 36.0957 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
24.8398 42.9453 mo
24.7573 43.0898 24.5308 43.002 24.335 42.748 cv
24.1392 42.4961 24.0469 42.1729 24.1304 42.0273 cv
24.2129 41.8833 24.4395 41.9707 24.6353 42.2236 cv
24.8311 42.4766 24.9229 42.7988 24.8398 42.9453 cv
cp
level3{
gsave
clp
[.878762 .717853 -.717853 .878762 24.0459 42.1289 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.878762 .717853 -.717853 .878762 24.0459 42.1289 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
24.7661 42.8398 mo
24.686 42.9805 24.4814 42.9141 24.3086 42.6914 cv
24.1357 42.4668 24.061 42.1729 24.1406 42.0332 cv
24.2202 41.8931 24.4258 41.9614 24.5981 42.1836 cv
24.771 42.4063 24.8462 42.7012 24.7661 42.8398 cv
cp
level3{
gsave
clp
[.522343 .673333 -.522343 .91206 24.6108 42.7715 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.522343 .673333 -.522343 .91206 24.6108 42.7715 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
24.4341 42.2559 mo
24.418 42.2969 24.3643 42.3018 24.3145 42.2656 cv
24.2642 42.2285 24.2358 42.166 24.252 42.125 cv
24.2676 42.084 24.3203 42.0781 24.3706 42.1152 cv
24.4209 42.1504 24.4492 42.2139 24.4341 42.2559 cv
cp
level3{
gsave
clp
[.198762 .0975226 -.0899095 .18325 24.2427 42.1416 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.198762 .0975226 -.0899095 .18325 24.2427 42.1416 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
24.6387 42.3516 mo
24.6255 42.3809 24.5928 42.3809 24.5645 42.3535 cv
24.5361 42.3281 24.5229 42.2842 24.5356 42.2568 cv
24.5479 42.2285 24.5811 42.2285 24.6089 42.2539 cv
24.6377 42.2803 24.6504 42.3242 24.6387 42.3516 cv
cp
level3{
gsave
clp
[.11877 .0435768 -.0309023 .105875 24.5278 42.2832 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.11877 .0435768 -.0309023 .105875 24.5278 42.2832 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
70.8081 44.249 mo
70.4111 44.3408 70.1489 43.9355 70.2217 43.3447 cv
70.2939 42.7539 70.6743 42.2002 71.0708 42.1084 cv
71.4678 42.0166 71.73 42.4209 71.6572 43.0137 cv
71.5854 43.6035 71.2046 44.1582 70.8081 44.249 cv
cp
level3{
gsave
clp
[.24231 2.08748 -2.08748 .24231 70.8188 42.1357 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.24231 2.08748 -2.08748 .24231 70.8188 42.1357 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
70.8486 44.0166 mo
70.4653 44.1045 70.207 43.7539 70.2705 43.2324 cv
70.335 42.7119 70.6978 42.2168 71.0811 42.1289 cv
71.4639 42.04 71.7222 42.3916 71.6582 42.9121 cv
71.5942 43.4346 71.2319 43.9277 70.8486 44.0166 cv
cp
level3{
gsave
clp
[-.193215 1.57623 -2.49823 .576255 70.6816 43.7266 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.193215 1.57623 -2.49823 .576255 70.6816 43.7266 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
71.2368 42.8008 mo
71.1382 42.8379 71.0337 42.7764 71.0034 42.6631 cv
70.9731 42.5518 71.0288 42.4307 71.1279 42.3936 cv
71.2266 42.3564 71.3311 42.4189 71.3618 42.5303 cv
71.3921 42.6426 71.3364 42.7637 71.2368 42.8008 cv
cp
level3{
gsave
clp
[.141544 .394584 -.363791 .130479 71.1113 42.4004 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.141544 .394584 -.363791 .130479 71.1113 42.4004 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
71.4458 43.1904 mo
71.3765 43.2119 71.314 43.1729 71.3062 43.1016 cv
71.2993 43.0283 71.3501 42.9531 71.4194 42.9326 cv
71.4897 42.9111 71.5518 42.9502 71.5591 43.0215 cv
71.5659 43.0938 71.5151 43.1689 71.4458 43.1904 cv
cp
level3{
gsave
clp
[.106333 .220768 -.185764 .105506 71.3794 42.9512 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.106333 .220768 -.185764 .105506 71.3794 42.9512 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
40.0356 39.3604 mo
39.5576 39.5288 39.1499 39.0015 39.1235 38.1826 cv
39.0977 37.3643 39.4634 36.564 39.9409 36.396 cv
40.4189 36.2275 40.8276 36.7549 40.854 37.5737 cv
40.8799 38.3911 40.5142 39.1924 40.0356 39.3604 cv
cp
level3{
gsave
clp
[.668486 2.83626 -2.83626 .668486 39.6543 36.4585 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.668486 2.83626 -2.83626 .668486 39.6543 36.4585 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
40.0405 39.0356 mo
39.5791 39.1982 39.186 38.7451 39.1626 38.0239 cv
39.1401 37.3018 39.4951 36.5845 39.9575 36.4224 cv
40.4185 36.2603 40.8115 36.7139 40.834 37.4351 cv
40.8574 38.1572 40.5024 38.8735 40.0405 39.0356 cv
cp
level3{
gsave
clp
[.0695241 2.18183 -3.00998 1.05922 39.7759 38.6563 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0695241 2.18183 -3.00998 1.05922 39.7759 38.6563 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
40.2856 37.3271 mo
40.1689 37.3877 40.0269 37.3149 39.9663 37.1646 cv
39.9058 37.0142 39.9526 36.8423 40.0688 36.7813 cv
40.1855 36.7207 40.3276 36.7935 40.3882 36.9434 cv
40.4487 37.0952 40.4028 37.2661 40.2856 37.3271 cv
cp
level3{
gsave
clp
[.260103 .524601 -.483669 .239779 40.0498 36.7939 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.260103 .524601 -.483669 .239779 40.0498 36.7939 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
40.6245 37.8398 mo
40.5415 37.877 40.4561 37.8286 40.4321 37.7319 cv
40.4097 37.6343 40.4585 37.5249 40.5405 37.4878 cv
40.623 37.4502 40.709 37.499 40.7324 37.5957 cv
40.7549 37.6934 40.7061 37.8027 40.6245 37.8398 cv
cp
level3{
gsave
clp
[.182579 .288201 -.239903 .175841 40.4902 37.52 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.182579 .288201 -.239903 .175841 40.4902 37.52 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
85.9722 42.9658 mo
85.8115 43.1699 85.5503 43.0605 85.3896 42.7207 cv
85.23 42.3828 85.23 41.9424 85.3906 41.7383 cv
85.5518 41.5342 85.812 41.6436 85.9731 41.9829 cv
86.1338 42.3223 86.1338 42.7617 85.9722 42.9658 cv
cp
level3{
gsave
clp
[.877409 .974855 -.974855 .877409 85.2417 41.8643 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.877409 .974855 -.974855 .877409 85.2417 41.8643 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
85.9155 42.8281 mo
85.7593 43.0254 85.519 42.9414 85.377 42.6436 cv
85.2344 42.3438 85.2461 41.9419 85.4023 41.7446 cv
85.5576 41.5483 85.7983 41.6304 85.9399 41.9292 cv
86.0815 42.2285 86.0703 42.6309 85.9155 42.8281 cv
cp
level3{
gsave
clp
[.42759 .904281 -1.01476 1.28686 85.7393 42.7412 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.42759 .904281 -1.01476 1.28686 85.7393 42.7412 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
85.7002 42.0371 mo
85.6646 42.0938 85.5938 42.1035 85.5425 42.0566 cv
85.4902 42.0098 85.4775 41.9238 85.5127 41.8652 cv
85.5483 41.8071 85.6187 41.7988 85.6709 41.8457 cv
85.7222 41.8931 85.7358 41.978 85.7002 42.0371 cv
cp
level3{
gsave
clp
[.206375 .143975 -.132742 .190288 85.5034 41.8794 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.206375 .143975 -.132742 .190288 85.5034 41.8794 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
85.9297 42.1582 mo
85.9038 42.1973 85.8604 42.2012 85.8335 42.167 cv
85.8062 42.1318 85.8052 42.0723 85.832 42.0332 cv
85.8584 41.9941 85.9014 41.9912 85.9282 42.0254 cv
85.9551 42.0605 85.9556 42.1201 85.9297 42.1582 cv
cp
level3{
gsave
clp
[.126242 .0697208 -.0531837 .113915 85.8169 42.0625 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.126242 .0697208 -.0531837 .113915 85.8169 42.0625 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
79.9053 44.5264 mo
79.7373 44.7061 79.4697 44.5908 79.3062 44.2705 cv
79.1426 43.9521 79.146 43.5449 79.3135 43.3672 cv
79.4805 43.1865 79.7485 43.3008 79.9121 43.6211 cv
80.0752 43.9414 80.0728 44.3467 79.9053 44.5264 cv
cp
level3{
gsave
clp
[.826463 .962326 -.962326 .826463 79.1963 43.4648 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.826463 .962326 -.962326 .826463 79.1963 43.4648 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
79.8462 44.3955 mo
79.6846 44.5684 79.4375 44.4805 79.2925 44.1992 cv
79.1489 43.916 79.1631 43.5469 79.3252 43.374 cv
79.4868 43.1992 79.7339 43.2881 79.8784 43.5703 cv
80.0225 43.8516 80.0083 44.2217 79.8462 44.3955 cv
cp
level3{
gsave
clp
[.435764 .853116 -1.05565 1.1334 79.6655 44.3057 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.435764 .853116 -1.05565 1.1334 79.6655 44.3057 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
79.6294 43.6563 mo
79.5933 43.707 79.5205 43.7129 79.4668 43.666 cv
79.4141 43.6211 79.4009 43.541 79.438 43.4893 cv
79.4751 43.4385 79.5479 43.4336 79.6016 43.4795 cv
79.6543 43.5244 79.6675 43.6045 79.6294 43.6563 cv
cp
level3{
gsave
clp
[.203959 .149443 -.137789 .188039 79.4321 43.499 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.203959 .149443 -.137789 .188039 79.4321 43.499 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
79.8657 43.7803 mo
79.8394 43.8145 79.7939 43.8164 79.7661 43.7832 cv
79.7388 43.75 79.7383 43.6953 79.7661 43.6611 cv
79.793 43.626 79.8379 43.625 79.8652 43.6582 cv
79.8936 43.6914 79.8936 43.7461 79.8657 43.7803 cv
cp
level3{
gsave
clp
[.12689 .0740033 -.0568564 .114736 79.7529 43.6826 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.12689 .0740033 -.0568564 .114736 79.7529 43.6826 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
66.5913 44.2031 mo
66.4346 44.4854 66.1802 44.334 66.0239 43.8652 cv
65.8677 43.3984 65.8677 42.791 66.0244 42.5107 cv
66.1816 42.2285 66.4351 42.3809 66.5918 42.8477 cv
66.7485 43.3145 66.7485 43.9219 66.5913 44.2031 cv
cp
level3{
gsave
clp
[1.12436 1.24924 -1.24924 1.12436 65.7451 42.7324 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.12436 1.24924 -1.24924 1.12436 65.7451 42.7324 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
66.5356 44.0127 mo
66.3838 44.2842 66.1494 44.1709 66.0107 43.7578 cv
65.8726 43.3457 65.8838 42.791 66.0361 42.5195 cv
66.187 42.248 66.4214 42.3623 66.5596 42.7744 cv
66.6978 43.1855 66.6875 43.7402 66.5356 44.0127 cv
cp
level3{
gsave
clp
[.417101 1.24517 -.987549 1.77268 66.3643 43.8936 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417101 1.24517 -.987549 1.77268 66.3643 43.8936 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
66.3262 42.9219 mo
66.2915 43.002 66.2222 43.0137 66.1719 42.9492 cv
66.1211 42.8848 66.1089 42.7666 66.1431 42.6865 cv
66.1782 42.6055 66.2471 42.5938 66.2969 42.6582 cv
66.3481 42.7236 66.3608 42.8398 66.3262 42.9219 cv
cp
level3{
gsave
clp
[.239117 .166817 -.153802 .220477 66.1157 42.7207 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.239117 .166817 -.153802 .220477 66.1157 42.7207 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
66.5498 43.0908 mo
66.5239 43.1445 66.4819 43.1484 66.4556 43.1016 cv
66.4292 43.0537 66.4282 42.9707 66.4546 42.918 cv
66.48 42.8633 66.5225 42.8584 66.5483 42.9063 cv
66.5747 42.9551 66.5752 43.0391 66.5498 43.0908 cv
cp
level3{
gsave
clp
[.139977 .0773062 -.0589699 .126308 66.4316 42.9648 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.139977 .0773062 -.0589699 .126308 66.4316 42.9648 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
57.9185 44.4326 mo
57.7622 44.7148 57.5078 44.5635 57.3511 44.0967 cv
57.1953 43.6289 57.1953 43.0215 57.3521 42.7402 cv
57.5088 42.459 57.7627 42.6094 57.9194 43.0762 cv
58.0762 43.5439 58.0762 44.1514 57.9185 44.4326 cv
cp
level3{
gsave
clp
[1.12436 1.24924 -1.24924 1.12436 57.0723 42.9619 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.12436 1.24924 -1.24924 1.12436 57.0723 42.9619 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
57.8633 44.2422 mo
57.7114 44.5137 57.4771 44.3994 57.3384 43.9873 cv
57.2002 43.5752 57.2109 43.0205 57.3628 42.75 cv
57.5146 42.4785 57.749 42.5918 57.8872 43.0039 cv
58.0254 43.416 58.0142 43.9717 57.8633 44.2422 cv
cp
level3{
gsave
clp
[.417229 1.24555 -.987851 1.77322 57.6919 44.123 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417229 1.24555 -.987851 1.77322 57.6919 44.123 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
57.6533 43.1514 mo
57.6187 43.2305 57.5498 43.2432 57.499 43.1787 cv
57.4487 43.1143 57.4365 42.9971 57.4707 42.916 cv
57.5059 42.835 57.5747 42.8223 57.6245 42.8867 cv
57.6753 42.9531 57.6885 43.0713 57.6533 43.1514 cv
cp
level3{
gsave
clp
[.239117 .166817 -.153802 .220477 57.4429 42.9502 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.239117 .166817 -.153802 .220477 57.4429 42.9502 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
57.8774 43.3203 mo
57.8516 43.374 57.8096 43.3779 57.7832 43.3311 cv
57.7563 43.2832 57.7559 43.2021 57.7822 43.1465 cv
57.8076 43.0938 57.8491 43.0879 57.876 43.1377 cv
57.9023 43.1855 57.9028 43.2676 57.8774 43.3203 cv
cp
level3{
gsave
clp
[.139977 .0773062 -.0589699 .126308 57.7603 43.1953 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.139977 .0773062 -.0589699 .126308 57.7603 43.1953 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
22.9165 40.1978 mo
22.5347 40.1812 22.2363 39.4297 22.251 38.5181 cv
22.2651 37.6074 22.5859 36.8813 22.9673 36.8975 cv
23.3491 36.9141 23.6465 37.6655 23.6323 38.5771 cv
23.6187 39.4883 23.2979 40.2139 22.9165 40.1978 cv
cp
level3{
gsave
clp
[-.0960243 3.29848 -3.29848 -.0960243 22.9893 36.8979 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0960243 3.29848 -3.29848 -.0960243 22.9893 36.8979 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
22.9336 39.8438 mo
22.5649 39.8281 22.2754 39.1636 22.2886 38.3604 cv
22.3008 37.5566 22.6099 36.9175 22.9785 36.9336 cv
23.3472 36.9492 23.6357 37.6133 23.623 38.417 cv
23.6108 39.2202 23.3018 39.8589 22.9336 39.8438 cv
cp
level3{
gsave
clp
[-.038847 2.42896 -2.40443 -.102229 22.7427 39.3149 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.038847 2.42896 -2.40443 -.102229 22.7427 39.3149 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
23.1982 38.0669 mo
23.104 38.0854 22.9956 37.9443 22.9551 37.7534 cv
22.9136 37.5625 22.957 37.3931 23.0513 37.375 cv
23.1445 37.3574 23.2539 37.4971 23.2944 37.6885 cv
23.335 37.8794 23.292 38.0488 23.1982 38.0669 cv
cp
level3{
gsave
clp
[.140423 .693659 -.639558 .129454 23.0547 37.374 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.140423 .693659 -.639558 .129454 23.0547 37.374 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
23.4414 38.7729 mo
23.3745 38.7793 23.3096 38.6899 23.2954 38.5737 cv
23.2817 38.457 23.3242 38.3574 23.3911 38.3511 cv
23.457 38.3447 23.5225 38.4341 23.5361 38.5503 cv
23.5503 38.667 23.5073 38.7661 23.4414 38.7729 cv
cp
level3{
gsave
clp
[.125079 .398436 -.339155 .132299 23.3535 38.3628 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.125079 .398436 -.339155 .132299 23.3535 38.3628 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
32.3647 43.708 mo
32.1201 43.6133 32.1821 43.1074 32.5024 42.582 cv
32.8223 42.0547 33.2803 41.7046 33.5244 41.7998 cv
33.769 41.8955 33.707 42.4004 33.3872 42.9268 cv
33.0669 43.4541 32.6089 43.8027 32.3647 43.708 cv
cp
level3{
gsave
clp
[-.984154 1.99613 -1.99613 -.984154 33.4355 41.7544 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.984154 1.99613 -1.99613 -.984154 33.4355 41.7544 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
32.4976 43.5059 mo
32.2612 43.4141 32.2988 42.9619 32.5806 42.498 cv
32.8638 42.0332 33.2832 41.7314 33.5195 41.8232 cv
33.7554 41.916 33.7183 42.3672 33.4355 42.8311 cv
33.1533 43.2959 32.7329 43.5986 32.4976 43.5059 cv
cp
level3{
gsave
clp
[-.853143 1.40349 -1.54057 -.601497 32.5532 43.1553 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.853143 1.40349 -1.54057 -.601497 32.5532 43.1553 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
33.2764 42.5322 mo
33.209 42.5215 33.1855 42.416 33.2241 42.2949 cv
33.2627 42.1758 33.3486 42.0859 33.416 42.0967 cv
33.4839 42.1074 33.5073 42.2129 33.4688 42.334 cv
33.4302 42.4541 33.3442 42.543 33.2764 42.5322 cv
cp
level3{
gsave
clp
[-.103638 .444153 -.409509 -.0955754 33.3979 42.0898 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.103638 .444153 -.409509 -.0955754 33.3979 42.0898 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
33.1948 42.9971 mo
33.1494 42.9873 33.1367 42.9189 33.167 42.8486 cv
33.1987 42.7783 33.2607 42.7295 33.3062 42.7412 cv
33.3521 42.752 33.3638 42.8193 33.3325 42.8896 cv
33.3022 42.96 33.2397 43.0088 33.1948 42.9971 cv
cp
level3{
gsave
clp
[-.0330126 .263342 -.231007 -.0132065 33.2651 42.7373 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0330126 .263342 -.231007 -.0132065 33.2651 42.7373 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
50.0962 38.3408 mo
50.0581 38.5029 49.8164 38.4829 49.5566 38.2964 cv
49.2964 38.1094 49.1172 37.8262 49.1548 37.6636 cv
49.1934 37.5015 49.4346 37.5205 49.6948 37.708 cv
49.9546 37.8945 50.1348 38.1782 50.0962 38.3408 cv
cp
level3{
gsave
clp
[1.04659 .438473 -.438473 1.04659 49.104 37.7847 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.04659 .438473 -.438473 1.04659 49.104 37.7847 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
49.9956 38.2627 mo
49.9595 38.4189 49.7437 38.4136 49.5151 38.249 cv
49.2856 38.083 49.1294 37.8228 49.1665 37.6665 cv
49.2036 37.5088 49.4189 37.5151 49.6479 37.6807 cv
49.877 37.8447 50.0337 38.106 49.9956 38.2627 cv
cp
level3{
gsave
clp
[.691981 .498063 -.240866 1.02266 49.8276 38.2407 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.691981 .498063 -.240866 1.02266 49.8276 38.2407 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
49.5103 37.7954 mo
49.5073 37.8398 49.458 37.8594 49.3994 37.8394 cv
49.3413 37.8188 49.2959 37.7666 49.2993 37.7222 cv
49.3027 37.6777 49.3521 37.6587 49.4106 37.6787 cv
49.4688 37.6987 49.5137 37.7515 49.5103 37.7954 cv
cp
level3{
gsave
clp
[.217085 .0368088 -.0339295 .200147 49.2974 37.7432 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.217085 .0368088 -.0339295 .200147 49.2974 37.7432 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
49.7339 37.8296 mo
49.73 37.8599 49.6992 37.8711 49.6641 37.854 cv
49.6299 37.8369 49.605 37.7983 49.6089 37.7681 cv
49.6133 37.7383 49.644 37.7275 49.6792 37.7446 cv
49.7134 37.7617 49.7383 37.7998 49.7339 37.8296 cv
cp
level3{
gsave
clp
[.125934 .00800304 .000464896 .109998 49.6074 37.7949 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.125934 .00800304 .000464896 .109998 49.6074 37.7949 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
44.0698 37.6094 mo
43.9941 37.7583 43.7637 37.6821 43.5542 37.4404 cv
43.3457 37.1987 43.2363 36.8813 43.311 36.7319 cv
43.3862 36.583 43.6167 36.6577 43.8257 36.9004 cv
44.0352 37.1421 44.1445 37.4595 44.0698 37.6094 cv
cp
level3{
gsave
clp
[.915983 .669739 -.669739 .915983 43.2319 36.8359 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.915983 .669739 -.669739 .915983 43.2319 36.8359 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
43.9897 37.5098 mo
43.917 37.6538 43.709 37.5977 43.5249 37.3838 cv
43.3398 37.1704 43.2495 36.8804 43.3213 36.7368 cv
43.3936 36.5928 43.6025 36.6489 43.7866 36.8628 cv
43.9712 37.0762 44.062 37.3662 43.9897 37.5098 cv
cp
level3{
gsave
clp
[.557852 .645719 -.472029 .939971 43.8311 37.4487 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.557852 .645719 -.472029 .939971 43.8311 37.4487 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
43.6265 36.9424 mo
43.6128 36.9849 43.5601 36.9922 43.5078 36.9595 cv
43.4561 36.9258 43.4248 36.8647 43.4375 36.8223 cv
43.4512 36.7793 43.5044 36.7725 43.5557 36.8057 cv
43.6079 36.8384 43.6396 36.9004 43.6265 36.9424 cv
cp
level3{
gsave
clp
[.203138 .0864915 -.0797368 .187294 43.4297 36.8403 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.203138 .0864915 -.0797368 .187294 43.4297 36.8403 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
43.8359 37.0283 mo
43.8252 37.0562 43.792 37.0596 43.7617 37.0352 cv
43.7324 37.0103 43.7173 36.9668 43.728 36.939 cv
43.7393 36.9106 43.772 36.9077 43.8018 36.9321 cv
43.8311 36.9565 43.8472 37 43.8359 37.0283 cv
cp
level3{
gsave
clp
[.120955 .0371461 -.0251874 .10738 43.7212 36.9644 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.120955 .0371461 -.0251874 .10738 43.7212 36.9644 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
50.2822 44.2832 mo
50.167 44.4023 49.9688 44.2627 49.8398 43.9697 cv
49.7119 43.6758 49.7012 43.3408 49.8164 43.2207 cv
49.9326 43.1006 50.1304 43.2402 50.2588 43.5342 cv
50.3872 43.8271 50.3975 44.1621 50.2822 44.2832 cv
cp
level3{
gsave
clp
[.677568 .910309 -.910309 .677568 49.7114 43.2949 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.677568 .910309 -.910309 .677568 49.7114 43.2949 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
50.2354 44.165 mo
50.124 44.2803 49.9414 44.166 49.8281 43.9063 cv
49.7148 43.6484 49.7139 43.3447 49.8252 43.2295 cv
49.9365 43.1123 50.1191 43.2275 50.2329 43.4863 cv
50.3462 43.7441 50.3477 44.0479 50.2354 44.165 cv
cp
level3{
gsave
clp
[.342492 .780801 -.727796 .756337 50.1016 44.0596 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.342492 .780801 -.727796 .756337 50.1016 44.0596 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
50.0557 43.5146 mo
50.0303 43.5518 49.9771 43.5439 49.9375 43.4961 cv
49.8975 43.4492 49.8867 43.3809 49.9111 43.3447 cv
49.9365 43.3076 49.9888 43.3174 50.0288 43.3643 cv
50.0684 43.4111 50.0811 43.4795 50.0557 43.5146 cv
cp
level3{
gsave
clp
[.168563 .142596 -.131475 .15541 49.8984 43.3584 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.168563 .142596 -.131475 .15541 49.8984 43.3584 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
50.2305 43.6592 mo
50.2114 43.6826 50.1792 43.6758 50.1587 43.6445 cv
50.1372 43.6113 50.1353 43.5664 50.1543 43.541 cv
50.1729 43.5176 50.2051 43.5244 50.2256 43.5576 cv
50.248 43.5889 50.249 43.6348 50.2305 43.6592 cv
cp
level3{
gsave
clp
[.104587 .07119 -.0557524 .0951668 50.1401 43.5645 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.104587 .07119 -.0557524 .0951668 50.1401 43.5645 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
49.9985 41.9043 mo
49.8833 42.0254 49.6855 41.8838 49.5571 41.5908 cv
49.4282 41.2988 49.4175 40.9629 49.5337 40.8428 cv
49.6489 40.7227 49.8467 40.8613 49.9751 41.1553 cv
50.1035 41.4482 50.1138 41.7832 49.9985 41.9043 cv
cp
level3{
gsave
clp
[.676985 .909526 -.909526 .676985 49.4292 40.9155 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.676985 .909526 -.909526 .676985 49.4292 40.9155 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
49.9526 41.7861 mo
49.8403 41.9033 49.6577 41.7871 49.5444 41.5293 cv
49.4316 41.2695 49.4307 40.9658 49.542 40.8506 cv
49.6538 40.7334 49.8359 40.8496 49.9492 41.1074 cv
50.0625 41.3662 50.064 41.6709 49.9526 41.7861 cv
cp
level3{
gsave
clp
[.342952 .78185 -.728774 .757353 49.8169 41.6812 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.342952 .78185 -.728774 .757353 49.8169 41.6812 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
49.772 41.1367 mo
49.7466 41.1738 49.6943 41.165 49.6543 41.1182 cv
49.6138 41.0703 49.6021 41.0029 49.6274 40.9658 cv
49.6528 40.9307 49.7051 40.9385 49.7456 40.9854 cv
49.7856 41.0322 49.7974 41.1006 49.772 41.1367 cv
cp
level3{
gsave
clp
[.169025 .142987 -.131835 .155836 49.6143 40.9805 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.169025 .142987 -.131835 .155836 49.6143 40.9805 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
49.9473 41.2803 mo
49.9277 41.3037 49.8955 41.2969 49.875 41.2656 cv
49.8535 41.2324 49.8521 41.1875 49.8706 41.1641 cv
49.8892 41.1387 49.9214 41.1475 49.9429 41.1787 cv
49.9644 41.2109 49.9663 41.2568 49.9473 41.2803 cv
cp
level3{
gsave
clp
[.104311 .0710021 -.0556053 .0949157 49.856 41.1875 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.104311 .0710021 -.0556053 .0949157 49.856 41.1875 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
40.666 43.8691 mo
40.4385 43.9629 40.2427 43.7471 40.2275 43.3887 cv
40.2129 43.0303 40.3848 42.6631 40.6123 42.5684 cv
40.8394 42.4766 41.0352 42.6914 41.0498 43.0508 cv
41.0649 43.4092 40.8926 43.7764 40.666 43.8691 cv
cp
level3{
gsave
clp
[.349502 1.2204 -1.2204 .349502 40.4634 42.6084 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.349502 1.2204 -1.2204 .349502 40.4634 42.6084 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
40.667 43.7266 mo
40.4482 43.8174 40.2598 43.6328 40.2461 43.3174 cv
40.2329 43 40.4009 42.6699 40.6196 42.5811 cv
40.8394 42.4902 41.0278 42.6738 41.041 42.9902 cv
41.0537 43.3066 40.8862 43.6357 40.667 43.7266 cv
cp
level3{
gsave
clp
[.0408721 .956408 -1.43052 .588558 40.5396 43.5703 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0408721 .956408 -1.43052 .588558 40.5396 43.5703 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
40.7793 42.9648 mo
40.7236 42.9971 40.6553 42.9697 40.6265 42.9063 cv
40.5972 42.8418 40.6191 42.7656 40.6738 42.7334 cv
40.7295 42.7012 40.7979 42.7285 40.8267 42.793 cv
40.856 42.8555 40.835 42.9336 40.7793 42.9648 cv
cp
level3{
gsave
clp
[.123519 .221997 -.204688 .11388 40.666 42.7373 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.123519 .221997 -.204688 .11388 40.666 42.7373 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
40.9414 43.1768 mo
40.9019 43.1963 40.8618 43.1787 40.8501 43.1377 cv
40.8389 43.0947 40.8618 43.0449 40.9009 43.0254 cv
40.9399 43.0059 40.981 43.0234 40.9922 43.0664 cv
41.0029 43.1074 40.9805 43.1563 40.9414 43.1768 cv
cp
level3{
gsave
clp
[.084403 .120222 -.0995747 .08052 40.8779 43.041 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.084403 .120222 -.0995747 .08052 40.8779 43.041 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
57.4707 39.8535 mo
56.9766 39.9683 56.6294 39.3989 56.6924 38.582 cv
56.7568 37.7666 57.209 37.0107 57.7012 36.8955 cv
58.1953 36.7813 58.5435 37.3506 58.479 38.167 cv
58.416 38.9824 57.9639 39.7383 57.4707 39.8535 cv
cp
level3{
gsave
clp
[.353753 2.89235 -2.89235 .353753 57.4097 36.9282 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.353753 2.89235 -2.89235 .353753 57.4097 36.9282 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
57.5112 39.5313 mo
57.0337 39.6421 56.6924 39.1479 56.7495 38.4287 cv
56.8062 37.7085 57.2373 37.0352 57.7139 36.9248 cv
58.1909 36.8135 58.5308 37.3071 58.4756 38.0269 cv
58.4194 38.7476 57.9873 39.4209 57.5112 39.5313 cv
cp
level3{
gsave
clp
[-.169582 2.17586 -3.10869 .722801 57.29 39.1245 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.169582 2.17586 -3.10869 .722801 57.29 39.1245 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
57.9419 37.8589 mo
57.8193 37.9072 57.686 37.8188 57.6426 37.6631 cv
57.5986 37.5063 57.6636 37.3408 57.7861 37.2935 cv
57.9082 37.2456 58.042 37.3335 58.0854 37.4893 cv
58.1289 37.6465 58.0645 37.8115 57.9419 37.8589 cv
cp
level3{
gsave
clp
[.200633 .548832 -.505976 .184969 57.7637 37.3018 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.200633 .548832 -.505976 .184969 57.7637 37.3018 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
58.2217 38.4058 mo
58.1357 38.4336 58.0552 38.377 58.043 38.2783 cv
58.0313 38.1787 58.0913 38.0752 58.1772 38.0474 cv
58.2637 38.019 58.3433 38.0767 58.3555 38.1758 cv
58.3687 38.2754 58.3081 38.3779 58.2217 38.4058 cv
cp
level3{
gsave
clp
[.149631 .30589 -.257201 .148189 58.1245 38.0737 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.149631 .30589 -.257201 .148189 58.1245 38.0737 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
26.2231 33.189 mo
25.9834 33.2417 25.8281 32.9951 25.8765 32.6387 cv
25.9243 32.2832 26.1582 31.9517 26.3979 31.8989 cv
26.6377 31.8477 26.793 32.0933 26.7446 32.4492 cv
26.6968 32.8057 26.4629 33.1367 26.2231 33.189 cv
cp
level3{
gsave
clp
[.131143 1.2628 -1.2628 .131143 26.2461 31.9116 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.131143 1.2628 -1.2628 .131143 26.2461 31.9116 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
26.2495 33.0488 mo
26.0181 33.0991 25.8643 32.8862 25.9067 32.5713 cv
25.9492 32.2573 26.1719 31.9619 26.4033 31.9111 cv
26.6348 31.8613 26.7886 32.0747 26.7461 32.3887 cv
26.7036 32.7026 26.481 32.998 26.2495 33.0488 cv
cp
level3{
gsave
clp
[-.128926 .949548 -1.51232 .329477 26.1504 32.8726 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.128926 .949548 -1.51232 .329477 26.1504 32.8726 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
26.4932 32.3179 mo
26.4326 32.3394 26.3701 32.3013 26.3525 32.2344 cv
26.3354 32.166 26.3696 32.0933 26.4302 32.0723 cv
26.4897 32.0508 26.5522 32.0884 26.5693 32.1558 cv
26.5874 32.2246 26.5532 32.2969 26.4932 32.3179 cv
cp
level3{
gsave
clp
[.0823005 .238431 -.219841 .0758663 26.4194 32.0767 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0823005 .238431 -.219841 .0758663 26.4194 32.0767 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
26.6157 32.5552 mo
26.5737 32.5674 26.5366 32.5435 26.5322 32.5 cv
26.5288 32.4565 26.5601 32.4116 26.6021 32.3989 cv
26.6445 32.3857 26.6816 32.4106 26.6855 32.4541 cv
26.689 32.4971 26.6582 32.5425 26.6157 32.5552 cv
cp
level3{
gsave
clp
[.0624074 .1337 -.112596 .0621811 26.5791 32.4087 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0624074 .1337 -.112596 .0621811 26.5791 32.4087 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
31.6846 34.0127 mo
31.4297 34.1196 31.1675 33.8032 31.0981 33.3052 cv
31.0293 32.8086 31.1797 32.3179 31.4346 32.2109 cv
31.6895 32.103 31.9517 32.4194 32.0205 32.9175 cv
32.0898 33.4146 31.939 33.9053 31.6846 34.0127 cv
cp
level3{
gsave
clp
[.527237 1.71986 -1.71986 .527237 31.2949 32.2524 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.527237 1.71986 -1.71986 .527237 31.2949 32.2524 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
31.6655 33.8149 mo
31.4194 33.9185 31.1709 33.647 31.1099 33.208 cv
31.0493 32.7695 31.1992 32.3306 31.4458 32.2266 cv
31.6914 32.123 31.9404 32.395 32.0005 32.833 cv
32.062 33.272 31.9111 33.7119 31.6655 33.8149 cv
cp
level3{
gsave
clp
[.184038 1.32508 -1.60522 .674808 31.4927 33.5884 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.184038 1.32508 -1.60522 .674808 31.4927 33.5884 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
31.689 32.7734 mo
31.6274 32.812 31.543 32.7686 31.5 32.6777 cv
31.4565 32.5864 31.4702 32.4824 31.5317 32.4438 cv
31.5918 32.4053 31.6763 32.4487 31.7197 32.5391 cv
31.7637 32.6299 31.749 32.7349 31.689 32.7734 cv
cp
level3{
gsave
clp
[.182618 .314351 -.289818 .168356 31.5176 32.4531 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.182618 .314351 -.289818 .168356 31.5176 32.4531 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
31.9106 33.082 mo
31.8672 33.1045 31.8159 33.0762 31.7964 33.0181 cv
31.7773 32.959 31.7974 32.8916 31.8408 32.8691 cv
31.8848 32.8447 31.9355 32.873 31.9546 32.9321 cv
31.9741 32.9912 31.9541 33.0576 31.9106 33.082 cv
cp
level3{
gsave
clp
[.124799 .170936 -.141307 .118635 31.8135 32.8906 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.124799 .170936 -.141307 .118635 31.8135 32.8906 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
51.6636 43.8682 mo
51.3188 43.9688 51.0244 43.6514 51.0049 43.1592 cv
50.9863 42.668 51.251 42.1855 51.5952 42.085 cv
51.9399 41.9834 52.2344 42.3008 52.2539 42.793 cv
52.2725 43.2842 52.0088 43.7666 51.6636 43.8682 cv
cp
level3{
gsave
clp
[.402346 1.70708 -1.70708 .402346 51.4287 42.123 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402346 1.70708 -1.70708 .402346 51.4287 42.123 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
51.667 43.6729 mo
51.334 43.7705 51.0503 43.4971 51.0332 43.0625 cv
51.0166 42.6289 51.2734 42.1973 51.6064 42.0996 cv
51.9399 42.002 52.2227 42.2754 52.2393 42.71 cv
52.2563 43.1445 52.0005 43.5752 51.667 43.6729 cv
cp
level3{
gsave
clp
[.0490941 1.31327 -2.17242 .638224 51.4751 43.4453 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0490941 1.31327 -2.17242 .638224 51.4751 43.4453 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
51.8438 42.6445 mo
51.7598 42.6816 51.6567 42.6367 51.6138 42.5469 cv
51.5703 42.4561 51.603 42.3535 51.687 42.3164 cv
51.7715 42.2803 51.8745 42.3242 51.918 42.4131 cv
51.9619 42.5059 51.9282 42.6084 51.8438 42.6445 cv
cp
level3{
gsave
clp
[.161489 .325708 -.300295 .148871 51.686 42.3184 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.161489 .325708 -.300295 .148871 51.686 42.3184 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
52.0884 42.9531 mo
52.0283 42.9746 51.9668 42.9463 51.9492 42.8887 cv
51.9331 42.8301 51.9678 42.7637 52.0278 42.7422 cv
52.0874 42.7188 52.1484 42.7471 52.166 42.8066 cv
52.1831 42.8652 52.1475 42.9297 52.0884 42.9531 cv
cp
level3{
gsave
clp
[.115585 .182452 -.151876 .11132 52 42.7559 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.115585 .182452 -.151876 .11132 52 42.7559 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
71.6392 38.1743 mo
71.479 38.3784 71.2178 38.2695 71.0571 37.9302 cv
70.897 37.5908 70.897 37.1504 71.0571 36.9463 cv
71.2188 36.7422 71.4795 36.8516 71.6406 37.1909 cv
71.8013 37.5298 71.8003 37.9707 71.6392 38.1743 cv
cp
level3{
gsave
clp
[.877409 .974855 -.974855 .877409 70.9087 37.0728 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.877409 .974855 -.974855 .877409 70.9087 37.0728 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
71.582 38.0356 mo
71.4263 38.2329 71.1855 38.1504 71.0439 37.8516 cv
70.9019 37.5522 70.9136 37.1499 71.0693 36.9531 cv
71.2246 36.7559 71.4653 36.8384 71.6069 37.1372 cv
71.749 37.437 71.7378 37.8389 71.582 38.0356 cv
cp
level3{
gsave
clp
[.427417 .903916 -1.01435 1.28634 71.4063 37.9487 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.427417 .903916 -1.01435 1.28634 71.4063 37.9487 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
71.3672 37.2446 mo
71.3311 37.3027 71.2607 37.312 71.209 37.2642 cv
71.1567 37.2178 71.1445 37.1323 71.1797 37.0742 cv
71.2158 37.0156 71.2861 37.0068 71.3374 37.0537 cv
71.3896 37.1011 71.4028 37.186 71.3672 37.2446 cv
cp
level3{
gsave
clp
[.206375 .143975 -.132742 .190288 71.1709 37.0874 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.206375 .143975 -.132742 .190288 71.1709 37.0874 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
71.5962 37.3667 mo
71.5703 37.4058 71.5269 37.4092 71.5 37.375 cv
71.4727 37.3398 71.4722 37.2803 71.499 37.2417 cv
71.5249 37.2026 71.5684 37.1992 71.5957 37.2334 cv
71.6226 37.2686 71.6226 37.3281 71.5962 37.3667 cv
cp
level3{
gsave
clp
[.126242 .0697208 -.0531837 .113915 71.4839 37.269 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.126242 .0697208 -.0531837 .113915 71.4839 37.269 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
80.2007 40.2148 mo
80.0259 40.4072 79.7437 40.3042 79.5693 39.9839 cv
79.396 39.6641 79.396 39.248 79.5698 39.0552 cv
79.7441 38.8628 80.0273 38.9658 80.2012 39.2866 cv
80.375 39.606 80.375 40.022 80.2007 40.2148 cv
cp
level3{
gsave
clp
[.86173 .957434 -.957434 .86173 79.4536 39.1563 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.86173 .957434 -.957434 .86173 79.4536 39.1563 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
80.1377 40.0835 mo
79.9697 40.2695 79.7085 40.1919 79.5547 39.9097 cv
79.4014 39.6274 79.4131 39.2476 79.582 39.0615 cv
79.7505 38.8755 80.0117 38.9536 80.1655 39.2358 cv
80.3184 39.5181 80.3071 39.8979 80.1377 40.0835 cv
cp
level3{
gsave
clp
[.464212 .85276 -1.1002 1.21472 79.9473 40.001 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.464212 .85276 -1.1002 1.21472 79.9473 40.001 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
79.9053 39.3369 mo
79.8667 39.3916 79.7896 39.3999 79.7339 39.356 cv
79.6777 39.3115 79.6641 39.231 79.7026 39.1753 cv
79.7407 39.1206 79.8174 39.1123 79.8735 39.1567 cv
79.9297 39.2017 79.9443 39.2817 79.9053 39.3369 cv
cp
level3{
gsave
clp
[.212328 .148128 -.136571 .195777 79.6978 39.1831 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.212328 .148128 -.136571 .195777 79.6978 39.1831 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
80.1538 39.4521 mo
80.1255 39.4893 80.0791 39.4927 80.0493 39.4604 cv
80.0205 39.4268 80.019 39.3711 80.0479 39.334 cv
80.0767 39.2969 80.1235 39.2944 80.1523 39.3267 cv
80.1821 39.3594 80.1826 39.4165 80.1538 39.4521 cv
cp
level3{
gsave
clp
[.132671 .0732714 -.0558922 .119716 80.0352 39.3574 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.132671 .0732714 -.0558922 .119716 80.0352 39.3574 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
85.8945 37.4497 mo
85.6255 37.814 85.1909 37.6191 84.9229 37.0127 cv
84.6558 36.4072 84.6558 35.6211 84.9238 35.2568 cv
85.1924 34.8921 85.627 35.0879 85.895 35.6938 cv
86.1631 36.2983 86.1631 37.0845 85.8945 37.4497 cv
cp
level3{
gsave
clp
[1.54053 1.71162 -1.71162 1.54053 84.6377 35.498 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.54053 1.71162 -1.71162 1.54053 84.6377 35.498 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
85.7983 37.2021 mo
85.5386 37.5537 85.1372 37.4063 84.9009 36.873 cv
84.6646 36.3389 84.6831 35.6211 84.9429 35.2686 cv
85.2017 34.9175 85.6035 35.0645 85.8394 35.5981 cv
86.0757 36.1318 86.0576 36.8506 85.7983 37.2021 cv
cp
level3{
gsave
clp
[.713907 1.61396 -1.69169 2.29719 85.5059 37.0488 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.713907 1.61396 -1.69169 2.29719 85.5059 37.0488 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
85.4395 35.7891 mo
85.3804 35.8936 85.2622 35.9087 85.1758 35.8247 cv
85.0898 35.7417 85.0679 35.5894 85.1279 35.4844 cv
85.1865 35.3804 85.3042 35.3647 85.3906 35.4482 cv
85.4775 35.5327 85.4995 35.6846 85.4395 35.7891 cv
cp
level3{
gsave
clp
[.354707 .247457 -.228151 .327057 85.1074 35.5132 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.354707 .247457 -.228151 .327057 85.1074 35.5132 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
85.8228 36.0078 mo
85.7788 36.0776 85.7065 36.084 85.6616 36.022 cv
85.6162 35.9595 85.6152 35.8535 85.6592 35.7842 cv
85.7031 35.7144 85.7754 35.709 85.8208 35.7705 cv
85.8652 35.8325 85.8662 35.9395 85.8228 36.0078 cv
cp
level3{
gsave
clp
[.215664 .119106 -.0908556 .194604 85.6318 35.8369 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.215664 .119106 -.0908556 .194604 85.6318 35.8369 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
22.8613 35.9448 mo
22.4824 36.0962 22.0928 35.6504 21.9897 34.9497 cv
21.8872 34.2495 22.1113 33.5586 22.4897 33.4072 cv
22.8691 33.2563 23.2593 33.7021 23.3613 34.4028 cv
23.4639 35.1021 23.2402 35.7939 22.8613 35.9448 cv
cp
level3{
gsave
clp
[.743627 2.42573 -2.42573 .743627 22.3027 33.4639 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.743627 2.42573 -2.42573 .743627 22.3027 33.4639 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
22.8335 35.6665 mo
22.4673 35.813 22.0977 35.4302 22.0068 34.813 cv
21.9165 34.1953 22.1401 33.5757 22.5059 33.4302 cv
22.8716 33.2842 23.2412 33.6665 23.332 34.2847 cv
23.4219 34.9023 23.1992 35.521 22.8335 35.6665 cv
cp
level3{
gsave
clp
[.272022 1.86734 -2.38684 .951055 22.5767 35.3462 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.272022 1.86734 -2.38684 .951055 22.5767 35.3462 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
22.8677 34.1992 mo
22.7769 34.2539 22.6519 34.1934 22.5869 34.0654 cv
22.522 33.937 22.5435 33.7891 22.6333 33.7358 cv
22.7241 33.6821 22.8496 33.7417 22.9136 33.8696 cv
22.979 33.999 22.9575 34.146 22.8677 34.1992 cv
cp
level3{
gsave
clp
[.260406 .448251 -.413268 .240069 22.6201 33.7437 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.260406 .448251 -.413268 .240069 22.6201 33.7437 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
23.1982 34.6333 mo
23.1328 34.667 23.0571 34.6265 23.0283 34.5444 cv
23 34.4609 23.0293 34.3662 23.0942 34.3335 cv
23.1592 34.3003 23.2344 34.3408 23.2627 34.4233 cv
23.2915 34.5063 23.2627 34.6011 23.1982 34.6333 cv
cp
level3{
gsave
clp
[.178734 .244811 -.202376 .169906 23.0562 34.3618 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.178734 .244811 -.202376 .169906 23.0562 34.3618 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
30.7148 43.9746 mo
30.5479 44.1543 30.2793 44.041 30.1157 43.7207 cv
29.9531 43.4004 29.9556 42.9951 30.1235 42.8145 cv
30.29 42.6357 30.5591 42.749 30.7217 43.0703 cv
30.8853 43.3896 30.8818 43.7949 30.7148 43.9746 cv
cp
level3{
gsave
clp
[.8271 .963066 -.963066 .8271 30.0039 42.9141 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.8271 .963066 -.963066 .8271 30.0039 42.9141 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
30.6563 43.8438 mo
30.4941 44.0176 30.2471 43.9297 30.1025 43.6475 cv
29.9585 43.3652 29.9731 42.9961 30.1353 42.8223 cv
30.2964 42.6484 30.5439 42.7363 30.688 43.0195 cv
30.832 43.3008 30.8179 43.6699 30.6563 43.8438 cv
cp
level3{
gsave
clp
[.435362 .852329 -1.05468 1.13235 30.4756 43.7539 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.435362 .852329 -1.05468 1.13235 30.4756 43.7539 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
30.4399 43.1055 mo
30.4028 43.1572 30.3296 43.1611 30.2764 43.1152 cv
30.2236 43.0703 30.2114 42.9902 30.2485 42.9385 cv
30.2856 42.8867 30.3584 42.8828 30.4111 42.9277 cv
30.4639 42.9736 30.4771 43.0527 30.4399 43.1055 cv
cp
level3{
gsave
clp
[.203959 .149443 -.137789 .188039 30.2427 42.9492 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.203959 .149443 -.137789 .188039 30.2427 42.9492 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
30.6763 43.2305 mo
30.6479 43.2637 30.604 43.2656 30.5762 43.2324 cv
30.5488 43.1982 30.5479 43.1426 30.5752 43.1094 cv
30.603 43.0742 30.6479 43.0742 30.6758 43.1074 cv
30.7031 43.1406 30.7036 43.1953 30.6763 43.2305 cv
cp
level3{
gsave
clp
[.128332 .0748443 -.0575025 .116039 30.5615 43.1328 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.128332 .0748443 -.0575025 .116039 30.5615 43.1328 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
41.3174 41.3154 mo
41.0859 41.1938 41.2031 40.6992 41.5801 40.2104 cv
41.9565 39.7231 42.4497 39.4263 42.6816 39.5479 cv
42.9146 39.6694 42.7974 40.1641 42.4209 40.6523 cv
42.0444 41.1401 41.5498 41.4375 41.3174 41.3154 cv
cp
level3{
gsave
clp
[-1.20012 1.87543 -1.87543 -1.20012 42.6016 39.4941 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.20012 1.87543 -1.87543 -1.20012 42.6016 39.4941 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
41.4722 41.1289 mo
41.2476 41.0107 41.3354 40.5664 41.667 40.1367 cv
41.999 39.7056 42.4502 39.4531 42.6748 39.5703 cv
42.8989 39.6885 42.8115 40.1323 42.48 40.563 cv
42.1475 40.9932 41.6968 41.2471 41.4722 41.1289 cv
cp
level3{
gsave
clp
[-1.00409 1.30062 -1.46422 -.768919 41.5664 40.7866 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.00409 1.30062 -1.46422 -.768919 41.5664 40.7866 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
42.355 40.2476 mo
42.2881 40.23 42.2773 40.1221 42.3286 40.0068 cv
42.3804 39.8911 42.4756 39.8125 42.5415 39.8311 cv
42.6074 39.8486 42.6191 39.9565 42.5679 40.0718 cv
42.5156 40.1875 42.4209 40.2656 42.355 40.2476 cv
cp
level3{
gsave
clp
[-.151869 .428765 -.395351 -.140009 42.5264 39.8267 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.151869 .428765 -.395351 -.140009 42.5264 39.8267 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
42.2222 40.7012 mo
42.1777 40.6855 42.1729 40.6172 42.2114 40.5508 cv
42.25 40.4834 42.3164 40.4424 42.3608 40.4585 cv
42.4048 40.4746 42.4092 40.5425 42.3711 40.6089 cv
42.333 40.6763 42.2656 40.7178 42.2222 40.7012 cv
cp
level3{
gsave
clp
[-.0619546 .257718 -.227793 -.0386649 42.3228 40.4512 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0619546 .257718 -.227793 -.0386649 42.3228 40.4512 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
65.4858 39.916 mo
65.3291 40.1978 65.0752 40.0474 64.9185 39.5786 cv
64.7627 39.1118 64.7627 38.5044 64.9189 38.2227 cv
65.0757 37.9419 65.3301 38.0928 65.4863 38.5601 cv
65.6431 39.0273 65.6431 39.6353 65.4858 39.916 cv
cp
level3{
gsave
clp
[1.12502 1.24996 -1.24996 1.12502 64.6392 38.4443 ] concat
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.12502 1.24996 -1.24996 1.12502 64.6392 38.4443 ] concat
clp
/3 /Gradient get_res exec grestore
}if
newpath
65.4302 39.7251 mo
65.2783 39.9971 65.0439 39.8823 64.9053 39.4717 cv
64.7676 39.0586 64.7783 38.5044 64.9302 38.2324 cv
65.082 37.9604 65.3164 38.0752 65.4541 38.4873 cv
65.5923 38.8984 65.5815 39.4536 65.4302 39.7251 cv
cp
level3{
gsave
clp
[.417139 1.24528 -.987638 1.77284 65.2588 39.6064 ] concat
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417139 1.24528 -.987638 1.77284 65.2588 39.6064 ] concat
clp
/4 /Gradient get_res exec grestore
}if
newpath
65.2207 38.6343 mo
65.1855 38.7144 65.1172 38.7271 65.0659 38.6621 cv
65.0161 38.5972 65.0034 38.4795 65.0381 38.3994 cv
65.0732 38.3188 65.1416 38.3066 65.1919 38.3711 cv
65.2427 38.4365 65.2559 38.5537 65.2207 38.6343 cv
cp
level3{
gsave
clp
[.239117 .166817 -.153802 .220477 65.0103 38.4336 ] concat
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.239117 .166817 -.153802 .220477 65.0103 38.4336 ] concat
clp
/5 /Gradient get_res exec grestore
}if
newpath
65.4438 38.8032 mo
65.4185 38.8569 65.3765 38.8613 65.3506 38.814 cv
65.3237 38.7661 65.3232 38.6846 65.3491 38.6309 cv
65.3745 38.5767 65.4165 38.5718 65.4424 38.6196 cv
65.4692 38.668 65.4702 38.7505 65.4438 38.8032 cv
cp
level3{
gsave
clp
[.139392 .0769834 -.0587237 .125781 65.3271 38.6787 ] concat
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.139392 .0769834 -.0587237 .125781 65.3271 38.6787 ] concat
clp
/6 /Gradient get_res exec grestore
}if
newpath
34.2993 20.4082 mo
33.6997 20.4458 32.9692 20.7725 32.3032 21.2451 cv
32.9858 20.6519 33.7402 20.2407 34.3057 20.2056 cv
34.6563 20.1826 34.8799 20.3047 34.9766 20.5386 cv
34.812 20.4341 34.5845 20.3877 34.2993 20.4082 cv
cp
0 0 0 rgb
f
33.209 19.0742 mo
33.062 19.6367 32.605 20.2729 32.0034 20.8247 cv
32.73 20.2803 33.2769 19.6343 33.4146 19.1064 cv
33.501 18.7769 33.4141 18.5386 33.1938 18.4067 cv
33.2676 18.5835 33.2778 18.8066 33.209 19.0742 cv
cp
f
31.8525 23.293 mo
30.7075 23.8589 29.3794 23.481 28.894 22.4443 cv
28.4058 21.4082 28.938 20.1138 30.085 19.5439 cv
31.231 18.9819 32.5557 19.3613 33.043 20.3926 cv
33.5317 21.4287 32.9956 22.7241 31.8525 23.293 cv
cp
level3{
gsave
clp
[1.80345 3.73155 -3.73155 1.80345 30.0669 19.5522 ] concat
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.80345 3.73155 -3.73155 1.80345 30.0669 19.5522 ] concat
clp
/7 /Gradient get_res exec grestore
}if
newpath
33.6963 21.1177 mo
33.1831 21.4204 32.5376 21.2808 32.2568 20.8022 cv
31.9722 20.3242 32.1597 19.6904 32.6758 19.3857 cv
33.1875 19.0791 33.8345 19.2222 34.1157 19.7012 cv
34.3999 20.1787 34.2129 20.813 33.6963 21.1177 cv
cp
0 0 0 rgb
f
32.2856 23.2505 mo
31.1865 23.7935 29.9126 23.416 29.4414 22.4126 cv
28.9653 21.4077 29.4722 20.1548 30.5669 19.6104 cv
31.666 19.0679 32.9399 19.4448 33.4155 20.4502 cv
33.8901 21.4521 33.3848 22.7085 32.2856 23.2505 cv
cp
level3{
gsave
clp
[-3.99049 1.9286 -1.9286 -3.99049 33.4111 20.4707 ] concat
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.99049 1.9286 -1.9286 -3.99049 33.4111 20.4707 ] concat
clp
/8 /Gradient get_res exec grestore
}if
newpath
30.5835 19.6035 mo
30.6182 20.0439 30.7378 20.5029 30.9448 20.9458 cv
31.4009 21.9131 32.1694 22.5737 32.9473 22.7686 cv
33.5645 22.1401 33.7793 21.2236 33.4155 20.4502 cv
32.9409 19.4478 31.6758 19.0713 30.5835 19.6035 cv
cp
level3{
gsave
clp
[-1.94145 1.39993 -1.39993 -1.94145 33.2178 20.1392 ] concat
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.94145 1.39993 -1.39993 -1.94145 33.2178 20.1392 ] concat
clp
/9 /Gradient get_res exec grestore
}if
newpath
31.7144 21.3364 mo
31.5986 21.0864 31.2793 20.9956 31.0068 21.1328 cv
30.7324 21.2656 30.604 21.5776 30.7197 21.8276 cv
30.8398 22.0791 31.1592 22.1704 31.4316 22.0332 cv
31.709 21.8994 31.8345 21.5884 31.7144 21.3364 cv
cp
33.0229 22.6582 mo
33.0264 22.6646 33.0288 22.6719 33.0347 22.6768 cv
33.2666 22.4126 33.4316 22.105 33.5195 21.7783 cv
33.4634 21.7939 33.4126 21.8115 33.3604 21.8364 cv
33.0342 21.9951 32.8853 22.3623 33.0229 22.6582 cv
cp
31.7432 23.0762 mo
31.6147 22.8042 31.2642 22.7065 30.9585 22.8569 cv
30.731 22.9712 30.5933 23.1851 30.5874 23.3989 cv
30.9541 23.5171 31.3638 23.5308 31.7681 23.4375 cv
31.8042 23.3174 31.7983 23.1904 31.7432 23.0762 cv
cp
31.6982 20.0698 mo
31.9482 19.9463 32.0605 19.6406 31.9492 19.3896 cv
31.9438 19.3877 31.9355 19.3872 31.9312 19.3853 cv
31.9229 19.3848 31.915 19.3838 31.9023 19.3818 cv
31.8779 19.3799 31.854 19.3784 31.8281 19.373 cv
31.8203 19.3721 31.8086 19.3735 31.8008 19.3726 cv
31.7749 19.3677 31.7524 19.3691 31.7275 19.3677 cv
31.7148 19.3652 31.7041 19.3657 31.6953 19.3652 cv
31.6714 19.3633 31.647 19.3623 31.6245 19.3633 cv
31.6133 19.3647 31.6001 19.3613 31.5854 19.3647 cv
31.5645 19.3613 31.5415 19.3628 31.5186 19.3643 cv
31.5044 19.3667 31.4927 19.3672 31.48 19.3643 cv
31.458 19.3691 31.4355 19.3711 31.416 19.3716 cv
31.4014 19.374 31.3867 19.376 31.375 19.377 cv
31.3521 19.3784 31.3296 19.3799 31.3071 19.3818 cv
31.293 19.3877 31.2817 19.3882 31.2666 19.3901 cv
31.2461 19.3955 31.2261 19.3955 31.2051 19.3999 cv
31.1904 19.4028 31.1753 19.4048 31.1587 19.4116 cv
31.1401 19.416 31.1177 19.4175 31.0962 19.4219 cv
31.0811 19.4248 31.0684 19.4302 31.0532 19.4316 cv
31.0322 19.437 31.0156 19.4443 30.9932 19.4492 cv
30.9902 19.4507 30.9902 19.4507 30.9873 19.4521 cv
30.9443 19.5752 30.9492 19.71 31.0088 19.834 cv
31.1289 20.0947 31.4375 20.1973 31.6982 20.0698 cv
cp
30.0957 20.9575 mo
29.9922 20.7388 29.7832 20.6016 29.5435 20.5723 cv
29.2808 21.0337 29.1895 21.5693 29.3193 22.0713 cv
29.4365 22.0703 29.5571 22.04 29.6782 21.9814 cv
30.0825 21.7856 30.2676 21.3257 30.0957 20.9575 cv
cp
level3{
gsave
clp
[4.00052 6.75017 -6.75017 4.00052 31.2153 21.5068 ] concat
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.00052 6.75017 -6.75017 4.00052 31.2153 21.5068 ] concat
clp
/10 /Gradient get_res exec grestore
}if
newpath
78.1128 45.5176 mo
78.1128 45.6387 77.9136 45.7363 77.6685 45.7363 cv
77.4233 45.7363 77.2246 45.6387 77.2246 45.5176 cv
77.2246 45.3965 77.4233 45.2988 77.6685 45.2988 cv
77.9136 45.2988 78.1128 45.3965 78.1128 45.5176 cv
cp
level3{
gsave
clp
[.394888 0 0 .255014 77.6689 45.5166 ] concat
/11 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.541176 .258824 .101961 ]
/C1 [.541176 .258824 .101961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.541176 .258824 .101961 ]
/C1 [.219608 .0784314 0 ]
/N 1.68248 
>>
]
/Bounds [.00561798 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394888 0 0 .255014 77.6689 45.5166 ] concat
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~MMd7IM2@(GM2@(GM2@(GM2@(GLkpkCLkpkCLkphALPLY?LPLV=L5(G;KnY57KnY25KS5#3K7ef/K7\],
JqAQ)JUr?%J:N0"It)rsIXZ`oI=6NkI!g<gH[C*cH?sj^H$OXZG^"@UGBS.QF`hhKFEDSFF)uABEcH)=
E,]c7Df0H1D/F-+Ci!m&CMITuBk_6oBP1siAnGUcARo=]@q/tW@:<SP?sd8I?=$oC>[1K;>?Y35=]ed.
='&F'<E3!t<)Z^n;Gg:f:esk^:/+GV9MA)P8kMZH84Z6@7Rfg86psC06:*t(5X.Is5!;%k4?GVc3]T2[
~>
<~6:*t(5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5X7S"5X7S"5X7S"5X.It5<h@s5<h@s5!D.o5!D.o5!D+m
4Ztqk4Ztni4?P_g4?P\e4$,Mc4$#D`3]];_3B9)[3B9&Y3&ilW3&`cT2`EZR2E!HO2)R6K2)R3I1c.$F
1G^gC1GU^@1,:R=0ekC:0JG170/"t3/hSb//hJY,/M/M)/1`;%.k<,".Olns.4H\o-n$Jk-RU8g-71&c
,pai_,U=W[,9nEW+sJ3S+X&!O+<VdK+!2OF*Zc=B*??+>*#fh9)]BV5)&X;0(`4)+(Ddi&()@W"'bh>r
~>
<~)B'J2)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;/(`4),(`4),(`4),(`4),(`*u)(Ddl(
(Ddl((Ddl(()@Z$()@Z$()@Z$()@W"'bqGu'bqGu'bh>r'GM5q'GM5q',)#m',)#m',)#l&eYfi&eYfi
&J5Te&J5Te&J,Kb&.fBa&.f?_%hB0]%hB0\%LrsY%LrsX%1NaU%1NaT$k*OQ$k*LO$O[=M$O[:K$47+I
$4."F#mgnE#RC\A#RC\@#6tJ=#6kA:"pP89"U,&5"U,#3"9\i1!s8W-!s8W,!WiE)!W`<&!<E3$!!!!!
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
newpath
79.0645 45.4297 mo
79.0142 45.5801 78.5396 45.6357 78.002 45.5547 cv
77.4648 45.4756 77.0688 45.2891 77.1187 45.1396 cv
77.1685 44.9902 77.6431 44.9346 78.1807 45.0146 cv
78.7178 45.0947 79.1138 45.2803 79.0645 45.4297 cv
cp
level3{
gsave
clp
[.864681 .12869 -.104109 .315218 78.0938 45.2832 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.864681 .12869 -.104109 .315218 78.0938 45.2832 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.5708 45.7686 mo
81.4824 45.6367 81.7427 45.4297 82.1489 45.3086 cv
82.5557 45.1875 82.9565 45.1973 83.0444 45.3301 cv
83.1313 45.4629 82.8726 45.668 82.4648 45.79 cv
82.0581 45.9121 81.6577 45.9023 81.5708 45.7686 cv
cp
level3{
gsave
clp
[-.654986 .195194 -.185073 -.280502 82.3071 45.5488 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.654986 .195194 -.185073 -.280502 82.3071 45.5488 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.0654 45.251 mo
81.0132 45.1104 81.3218 44.9385 81.7539 44.8672 cv
82.186 44.7939 82.5786 44.8506 82.6309 44.9922 cv
82.6821 45.1328 82.374 45.3047 81.9409 45.377 cv
81.5088 45.4492 81.1177 45.3926 81.0654 45.251 cv
cp
level3{
gsave
clp
[-.694342 .115483 -.109709 -.297369 81.8477 45.1211 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.694342 .115483 -.109709 -.297369 81.8477 45.1211 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.5752 45.0098 mo
81.6523 45.1826 81.4028 45.3857 81.0161 45.4639 cv
80.6304 45.542 80.2559 45.4658 80.1777 45.292 cv
80.1006 45.1191 80.3511 44.915 80.7378 44.8379 cv
81.1221 44.7598 81.498 44.8359 81.5752 45.0098 cv
cp
level3{
gsave
clp
[.620771 -.125598 .163133 .365245 80.877 45.1523 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.620771 -.125598 .163133 .365245 80.877 45.1523 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.2373 45.3467 mo
81.2007 45.5313 80.7227 45.6406 80.168 45.5918 cv
79.6123 45.543 79.1924 45.3535 79.2271 45.1699 cv
79.2632 44.9854 79.7432 44.876 80.2974 44.9248 cv
80.8521 44.9736 81.2734 45.1631 81.2373 45.3467 cv
cp
level3{
gsave
clp
[.893192 .0781724 -.0752771 .389414 80.2305 45.2578 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.893192 .0781724 -.0752771 .389414 80.2305 45.2578 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.5142 45.6436 mo
76.4263 45.5098 76.686 45.3047 77.0923 45.1836 cv
77.499 45.0615 77.9009 45.0713 77.9888 45.2041 cv
78.0757 45.3369 77.8169 45.543 77.4092 45.6641 cv
77.002 45.7852 76.6011 45.7764 76.5142 45.6436 cv
cp
level3{
gsave
clp
[-.655081 .195223 -.1851 -.280542 77.2505 45.4238 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.655081 .195223 -.1851 -.280542 77.2505 45.4238 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.7495 45.1973 mo
79.8271 45.3701 79.5771 45.5732 79.1914 45.6514 cv
78.8057 45.7295 78.4302 45.6523 78.3516 45.4795 cv
78.2754 45.3057 78.5259 45.1025 78.9116 45.0254 cv
79.2964 44.9463 79.6724 45.0234 79.7495 45.1973 cv
cp
level3{
gsave
clp
[.621006 -.125646 .163195 .365383 79.0513 45.3398 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.621006 -.125646 .163195 .365383 79.0513 45.3398 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.0664 45.1768 mo
79.0664 45.332 78.729 45.4561 78.313 45.4561 cv
77.8965 45.4561 77.5591 45.332 77.5591 45.1768 cv
77.5591 45.0215 77.8965 44.8965 78.313 44.8965 cv
78.729 44.8965 79.0664 45.0215 79.0664 45.1768 cv
cp
level3{
gsave
clp
[.669459 0 0 .326777 78.313 45.1777 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.669459 0 0 .326777 78.313 45.1777 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
82.0181 45.5303 mo
82.0181 45.6504 81.8188 45.749 81.5737 45.749 cv
81.3286 45.749 81.1304 45.6504 81.1304 45.5303 cv
81.1304 45.4092 81.3286 45.3115 81.5737 45.3115 cv
81.8188 45.3115 82.0181 45.4092 82.0181 45.5303 cv
cp
level3{
gsave
clp
[.394744 0 0 .254921 81.5742 45.5293 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394744 0 0 .254921 81.5742 45.5293 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.5308 45.4707 mo
77.5308 45.5918 77.332 45.6895 77.0869 45.6895 cv
76.8418 45.6895 76.6426 45.5918 76.6426 45.4707 cv
76.6426 45.3486 76.8418 45.251 77.0869 45.251 cv
77.332 45.251 77.5308 45.3486 77.5308 45.4707 cv
cp
level3{
gsave
clp
[.395212 0 0 .255223 77.0869 45.4688 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395212 0 0 .255223 77.0869 45.4688 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.3975 45.6689 mo
80.7153 44.9629 81.2363 43.9473 82.002 42.8809 cv
83.4326 40.8867 84.9834 40.3926 84.9834 40.3926 cv
84.9834 40.3926 83.459 40.498 81.7227 42.8516 cv
80.7837 44.125 80.2905 45.0693 80.0356 45.6689 cv
80.3975 45.6689 li
cp
level3{
gsave
clp
[-3.52211 6.94608 -6.19684 -3.57815 84.0957 39.8809 ] concat
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.721569 .94902 .219608 ]
/C1 [.372549 .623529 0 ]
/N 1.00819 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.52211 6.94608 -6.19684 -3.57815 84.0957 39.8809 ] concat
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\@8rU[^NTO[C!<JZa7!DZEga?Z*:I:YHP.4Y-+n/XfSV*X/i8#Wi;tsW2QYmVl-DhVPU,cUnjf]USFQX
U7n9RTV.pLT:VXGSXl=AS=H(<S!oe7R@0G0R$X/+QBmi%Q'ISuP`q;pP*1ujOcYZdO,o?^NfK*YNJrgT
Mi3LNMMd7ILkpkBLPLV=L4t>8KS5#2K7ec-JUrB&J:N-!IsuiqI=6NkI!g9fH[:!`H$OXZG^"@UG'8%O
F`heJFE;MDEcQ/>EH#l9Df9Q3DJj<.D/=$(CMR["C2%BrBP;'lB4kggAn>OaA7T1[@q&nV@:<SP?sm>K
~>
<~o'u8?nF5r9n*f]4md9E/m-O*)lg*m%lK[Wul0.?pkND$jk2tdejlGL`j5]1Zio8tViSi_Qi8<GLhVR,F
h;-lAgtUT<g=k96g"G$1f[na,f@JO(e^`4"eC;sre'c[mdF$@gd*U+bcd'h]c-=MWbfn8RbKJ&Nb/qcI
aN2HCa2c3>`l5p9`5KU3_o'@._SO()^qdb#^V@Ls^:h4n]tD"j]=Y\d]"5G_\[]/Z\$riT[^NTO[C!<J
Za7!DZEga?Z*:I:YHP.5Y-+q0Xf\\+XK/D&WiE(uWMuhpW2HPkVP^5eV59u`Una][U8"BUTqS-PTV%jK
~>
<~3&`cT2`<QP2E!EM2)R6J1c.$F1G^gC1,:U?0ekC;0eb:80JG.50/"q1/hSb./M/P*/1`>'.k<,#.k3"u
.Oceq.4HYn-n$Gj-RU8g-71&d,pai`,U=W\,U4NY,9e<U+sJ0R+X%sN+<VdK+!2RH*Zc@D*??.@*?6%=
*#fh9)]K\6)B'J2)&X;/(`4)+(Ddl(()@Z$()7Q!'bh>r'GM2o',(uk&eYfh&J5Td&.fBa%hB0]%LrsY
%LijV%1EXR$k*LO$O[=L$47+H#mgnE#RC\A#6tJ=#6kA:"pG/6"U,#3"9\f/!s8W,!WiE(!<E3%!!!!!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
newpath
79.6772 45.498 mo
80.0371 45.1104 80.4995 44.6641 81.0737 44.2061 cv
82.7993 42.8232 84.6406 42.4707 84.6406 42.4707 cv
84.6406 42.4707 82.8354 42.5576 80.7432 44.1885 cv
80.0825 44.7041 79.604 45.1406 79.2573 45.498 cv
79.6772 45.498 li
cp
level3{
gsave
clp
[-3.03006 6.22783 -5.14095 -3.11683 83.1289 41.5547 ] concat
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.372549 .623529 0 ]
/C1 [.721569 .94902 .219608 ]
/N 2.70582 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.03006 6.22783 -5.14095 -3.11683 83.1289 41.5547 ] concat
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\@8oS['R'CYck44XfSS'WMlbnVPU)`US=HTTV%gHSXc1<R[KP0Q^3o%P`q;oOcb`dO,f3ZN/W[PMM[1G
LPLV=KnY24K7\]+JUi9#IsuipI=-EhH[C'bH$OXZGB\7SG'.qMFEDSFF)l;AEH,u;E,]`6Df0H1D/F-+
Ci!p'CMR["C2.HsBk_6oBP;'lB4kjhAnGXeAS#FaAS#C_A7T4]@q0"Y@q0"X@U`eU@U`eT@:<SQ@:<SQ
@:<PO?smAM?smAM?smAM?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I
~>
<~o'u5<md9B-lg!`ukND!hjQ#:[iS`YOhVI#CgY1B7f\"g,f%&:"e'c[ld*U+acHXVXbKJ&NaiMQDa2Z-<
`Pf^4_SX.*^qd_"^V7Fq]tD"i]=PSa\[f5[\$riT[^ENN['[0GZa-mBZ*CR<Yct=7YHG%2Xf\_-XK8M(
X/i;$WiE(uWMukqW2QYnVl-GjVl$>gVP^2dV5:#bUnjf^Unjc\USFTZUS=KWU8"BVU7n9STqS0RTqS0R
TV.sNTV.sNTV.sNTV.pLT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJ
~>
<~3&``R2)R3H1GU^?0eb:70.nh./1`;%.Olkr-n$Gj-RL/d,pX`\,9e<U+X%sN+!2RG*ZZ7A*#on:)]BV5
)&X8.(`*u)()@Z#'bqDs'GM2o'+toj&J5Te&.fB`%hB0\%LrsX%1NaT$k*OQ$O[=M$47+I$4."F#mgkC
#RC\A#6tJ=#6tG;"pP89"U,&5"U,&5"9\i1"9\i1!s8W-!s8W-!s8T+!WiE)!WiE)!WiB'!<E3%!<E3%
!<E3%!<E3$zzzzzzzzzzzzz!!!!!~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
newpath
77.4619 45.376 mo
77.4834 45.3125 77.5083 45.248 77.5376 45.1807 cv
77.9482 44.2559 79.4336 43.582 79.4336 43.582 cv
79.4336 43.582 77.7358 44.1699 77.1973 45.2783 cv
77.1807 45.3115 77.1655 45.3447 77.1509 45.376 cv
77.4619 45.376 li
cp
level3{
gsave
clp
[.0555386 2.04714 -3.16353 1.24935 78.2803 44.0352 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0555386 2.04714 -3.16353 1.24935 78.2803 44.0352 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
79.8677 45.6084 mo
79.7734 45.2256 79.6182 44.7832 79.3647 44.3008 cv
78.5166 42.6865 76.6245 42.4375 76.6245 42.4375 cv
76.6245 42.4375 78.7075 42.4795 79.7739 44.4033 cv
80.0356 44.875 80.2065 45.2744 80.3179 45.6084 cv
79.8677 45.6084 li
cp
level3{
gsave
clp
[.328647 3.75414 3.58808 .645573 78.3594 42.7236 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.328647 3.75414 3.58808 .645573 78.3594 42.7236 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
78.2109 45.376 mo
79.3755 45.1709 80.3755 45.1416 80.3755 45.1416 cv
80.3755 45.1416 79.1694 45.1055 77.7056 45.376 cv
78.2109 45.376 li
cp
level3{
gsave
clp
[-2.77698 3.25249 -6.55439 -2.52152 79.4443 44.7842 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.77698 3.25249 -6.55439 -2.52152 79.4443 44.7842 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
79.9546 45.1768 mo
80.9526 45.0254 81.7485 45.0029 81.7485 45.0029 cv
81.7485 45.0029 80.7324 44.9717 79.4321 45.1768 cv
79.9546 45.1768 li
cp
level3{
gsave
clp
[-2.80603 3.28652 -6.62296 -2.54789 80.9307 44.6885 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.80603 3.28652 -6.62296 -2.54789 80.9307 44.6885 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
80.5396 45.0332 mo
80.8105 44.7275 81.1699 44.3818 81.6401 44.0215 cv
83.2686 42.7744 85.647 42.3242 85.647 42.3242 cv
85.647 42.3242 83.1685 42.5615 81.1689 44.0391 cv
80.6499 44.4229 80.2725 44.7539 79.998 45.0332 cv
80.5396 45.0332 li
cp
level3{
gsave
clp
[-1.78622 5.04381 -6.22129 -1.43076 83.4805 41.8262 ] concat
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.721569 .94902 .219608 ]
/C1 [.372549 .623529 0 ]
/N 2.08803 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.78622 5.04381 -6.22129 -1.43076 83.4805 41.8262 ] concat
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\@8rV\$riU\$riU\$riU\$riU\$riU\$riU\$rfS[^NWQ[^NWQ[^NTO[C*EM[C*EL['[3I['[0GZa7!E
Za-mBZEgd@Z*CR=Yct@9Yck76YHP+3Y-+n/Xf\_,XK8M(X/i8#WiE%tWMuhpW2HPkVP^5fV5:#aUnjc\
US=KWTqS-PTV%jKSt;OESXc4?S"#k8R[KS2R$X/+QBmf$Pa%AqPEM)kOcYZcO,f6[NJrgSMi*CKM26tC
LPCP;KnP)2JqAQ)J:N,uIXQWlH[C'bH$FRXGBS+OFEDSEEcH&;Df0H0Ci!m%C2%?pB4baeA7T1Z@:<PN
~>
<~o'u8?naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/=nF5r:nF5r:nF5r9n*f`6n*f`6n*]W3mdBN2mHs<.
mHs<-m-O**m-F!'lg*m%lK[["l07Hsl0.?pki_-lkND!ik2tdejlPRajQ,@]j5T(Xio/kTi8EPOhr!>J
hVR)Eh;$f@gY:K:g=k65g"=s/f@SU)f%&=#eC;srdaHRkdEp7dcd0n^c-=JVbfe2Pb/qcHaN)?@`l5p8
`5BL0_SO((^q[Xu^:h4m]Xtee]",>\\$rfS[C!<IZa-mAYct=7Y-"h-X/i8#WMlbnVP^2cUna]ZTqS-O
~>
<~3&`cT2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EWQ2E!HO2E!HO2E!HO2)R6K2)R6K2)R6K
1c.$G1c.$G1c$pD1G^gC1GU^@1,:U?0ekC;0ekC:0JG170J>(40/"t2/hSb//hJY,/M/M)/1`>&.k<,#
.Olnt.4H\p.4?Sm-mpAi-RL/e-7'ra,pX`],U4NY,9e<U+X&!P+<VdK+!2OF*Zc=B*?6%=)]K_7)B'J2
)&O2-(Ddl'()@W"'bh>r',(uk&eP]f&.f?_%h9'Z%1N^S$k!FM$4."F#RCY?#6kA9"U"r2!s8T+!<E0#
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
newpath
80.6919 44.7363 mo
82.4702 44.5566 84.0659 44.5723 84.0659 44.5723 cv
84.0659 44.5723 82.0283 44.4688 79.7202 44.7363 cv
80.6919 44.7363 li
cp
level3{
gsave
clp
[-4.20332 3.40098 -11.0442 -3.60446 82.5894 44.0908 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.20332 3.40098 -11.0442 -3.60446 82.5894 44.0908 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
80.2031 45.4336 mo
80.4268 45.3643 80.6675 45.2949 80.9233 45.2246 cv
83.7095 44.4727 87.2251 44.4395 87.2251 44.4395 cv
87.2251 44.4395 83.6543 44.2939 80.2554 45.1768 cv
79.9116 45.2646 79.6016 45.3516 79.3218 45.4336 cv
80.2031 45.4336 li
cp
level3{
gsave
clp
[-4.57285 4.54239 -11.3954 -4.03829 84.6797 43.5381 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.57285 4.54239 -11.3954 -4.03829 84.6797 43.5381 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
79.604 45.5459 mo
79.3486 45.3125 79.0371 45.0693 78.6572 44.8271 cv
76.8037 43.6455 73.9243 43.5615 73.9243 43.5615 cv
73.9243 43.5615 76.9561 43.3721 79.2383 44.7578 cv
79.7104 45.0439 80.0752 45.3076 80.3579 45.5459 cv
79.604 45.5459 li
cp
level3{
gsave
clp
[2.41328 6.57241 9.70921 -5.53781 76.2842 42.2168 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.41328 6.57241 9.70921 -5.53781 76.2842 42.2168 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
78.6074 45.3604 mo
78.4736 45.2773 78.3228 45.1885 78.1548 45.0977 cv
77.2231 44.5918 76.2378 44.3887 76.2378 44.3887 cv
76.2378 44.3887 77.2026 44.5088 78.3311 45.1094 cv
78.5029 45.2002 78.6514 45.2842 78.7808 45.3604 cv
78.6074 45.3604 li
cp
level3{
gsave
clp
[1.414 1.93977 2.35989 -.388172 77.0571 44.2539 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.414 1.93977 2.35989 -.388172 77.0571 44.2539 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
79.0176 45.1807 mo
79.2661 45.0547 79.5615 44.9209 79.9072 44.7871 cv
81.4746 44.1797 83.3579 44.0859 83.3579 44.0859 cv
83.3579 44.0859 81.4624 44.0488 79.5552 44.7637 cv
79.146 44.917 78.8193 45.0566 78.5576 45.1807 cv
79.0176 45.1807 li
cp
level3{
gsave
clp
[-2.48526 3.32555 -5.55034 -2.31384 81.8398 43.4531 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.48526 3.32555 -5.55034 -2.31384 81.8398 43.4531 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
78.0469 45.5195 mo
77.9146 45.3105 77.7251 45.0732 77.4517 44.8311 cv
76.5815 44.0586 75.0986 43.873 75.0986 43.873 cv
75.0986 43.873 76.6807 43.9072 77.7554 44.8174 cv
78.0786 45.0908 78.2896 45.3252 78.4243 45.5195 cv
78.0469 45.5195 li
cp
level3{
gsave
clp
[.671377 4.96394 3.37522 -2.63801 76.5034 42.7734 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.671377 4.96394 3.37522 -2.63801 76.5034 42.7734 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
79.7144 45.376 mo
79.7998 45.3262 79.8892 45.2764 79.9829 45.2256 cv
81.3794 44.4697 83.0869 44.2803 83.0869 44.2803 cv
83.0869 44.2803 81.3628 44.3242 79.6621 45.2148 cv
79.5562 45.2715 79.457 45.3252 79.3633 45.376 cv
79.7144 45.376 li
cp
level3{
gsave
clp
[-2.04515 3.73933 -4.75837 -1.90567 81.8042 43.7666 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.04515 3.73933 -4.75837 -1.90567 81.8042 43.7666 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
78.73 45.376 mo
78.6997 45.2617 78.6553 45.1426 78.5908 45.0186 cv
78.1338 44.1299 76.5044 43.6855 76.5044 43.6855 cv
76.5044 43.6855 78.3662 44.0049 78.9653 45.0605 cv
79.0278 45.1738 79.0786 45.2783 79.1187 45.376 cv
78.73 45.376 li
cp
level3{
gsave
clp
[-.0690321 2.8271 4.56746 .0750222 77.8301 43.708 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0690321 2.8271 4.56746 .0750222 77.8301 43.708 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
80.2598 45.5313 mo
80.0825 45.3887 79.8813 45.2402 79.6528 45.0898 cv
77.8843 43.9297 74.9634 43.5693 74.9634 43.5693 cv
74.9634 43.5693 78.064 43.7197 80.2505 45.0908 cv
80.498 45.2461 80.7144 45.3936 80.9028 45.5313 cv
80.2598 45.5313 li
cp
level3{
gsave
clp
[1.81457 4.98261 8.43684 -1.93491 77.375 43.0166 ] concat
/15 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.721569 .94902 .219608 ]
/C1 [.372549 .623529 0 ]
/N 1.67437 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.81457 4.98261 8.43684 -1.93491 77.375 43.0166 ] concat
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\@8rV\$riU\$riU\$riU\$rfS[^NWQ[^NWP[C*EM[C*BK['[3I['R*FZa6sCZEgdAZ*CR=Z*:I:Yck76
YHP+3Y-+n/Xf\\+XK8J'X/i8#Wi;tsWMlboVl-GjVP^5eV59u`Una][US=KWTqS0QTV.pLSt;OESXl:@
S=?";R[TY4R@'A.Q^=#(QBd`"Pa%AqP*1riOcYZcO,o<]NK&mUN/NUOMM[1GLkphAL5(D9KS4u1JqAQ)
JUi9#IsuipI=-EhH[:!`H$FRXGBS.PF`_\GEcQ/>E,]`6DJj<.Chmg$C2%BqBP1phAS#C_@q/tV@:3JM
~>
<~o'u8?naZ/>naZ/>naZ/>naZ/=nF5r:nF5r:n*f`6n*f`6mdBN2mdBK0mHs<.m-O**m-O'(lg*m%lK[["
l07Hskih6oki_-lkN:phk2k^djlGL`jQ#:\j5T(XiSibSi8EPNhr!>JhVR)Eh;$f@gY:K:g=k96g"G$1
f@SX*f%/C%e^W*ue'ldoda?Iid*U.ccd'h]c-=MWbfe2Qb0%iJaN2HCa2Z-=`Pod6_o'C/_SO((^qd_"
^:q:o]Y(nh]=PSa\[]/Y\$i`Q[C!<JZa6sCZ*CO;YHP+3Xf\\+X/i8#WMuhpVl$>fV50o^US=KVTqJ'N
~>
<~3&`cT2`EZS2`EZS2`EZS2`EZS2`EZS2E!HO2E!HO2E!HN2)R6K2)R6K2)I-H1c.$G1c$pD1G^gC1GU^@
1,:U?0ekC;0ek@90JG170J>(40/"q1/hSb//M/P+/M&G(/1`>&.k<,#.Olnt.4H\p.4?Sm-n$Gj-RU5f
-71#b,pai_,U=W[,9nEW+sJ3S+X&!O+<VdK+!2RG*Zc=B*??+>*#on:)]BV5)AsD1(`4),(Ddl'()@Z#
'bqDs'GD,n&eYfi&J5Td&.f?_%h9'Z%1NaT$k*LO$OR4J#mgnD#RCY?#6kA:"U,&4"9S`.!WiE(!<E0#
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
newpath
81.2441 45.4385 mo
81.1787 45.2949 81.0864 45.1406 80.9604 44.9775 cv
80.292 44.1162 78.6216 43.6143 78.6216 43.6143 cv
78.6216 43.6143 80.4805 44.0088 81.3286 45.0371 cv
81.4487 45.1836 81.5444 45.3174 81.6177 45.4385 cv
81.2441 45.4385 li
cp
level3{
gsave
clp
[.231177 2.41167 3.95346 .538586 80.0513 43.8086 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.231177 2.41167 3.95346 .538586 80.0513 43.8086 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
79.1187 45.5537 mo
78.8018 45.2002 78.2798 44.6904 77.5156 44.1582 cv
76.0835 43.1582 74.5327 42.9111 74.5327 42.9111 cv
74.5327 42.9111 76.0581 42.9648 77.7939 44.1436 cv
78.7324 44.7803 79.2256 45.2539 79.481 45.5537 cv
79.1187 45.5537 li
cp
level3{
gsave
clp
[2.38183 4.69729 4.19061 -2.41972 75.9282 42.1055 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.38183 4.69729 4.19061 -2.41972 75.9282 42.1055 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
79.4971 45.6709 mo
79.3511 45.4023 79.1597 45.0996 78.9077 44.7832 cv
78.0386 43.6895 76.7676 43.2949 76.7676 43.2949 cv
76.7676 43.2949 78.0928 43.502 79.1597 44.7979 cv
79.4375 45.1357 79.6392 45.4258 79.7861 45.6709 cv
79.4971 45.6709 li
cp
level3{
gsave
clp
[1.36822 3.8635 4.76544 -1.09595 77.7734 43.0635 ] concat
/16 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.372549 .623529 0 ]
/C1 [.721569 .94902 .219608 ]
/N 1.05927 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.36822 3.8635 4.76544 -1.09595 77.7734 43.0635 ] concat
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\@8rU[^NTO[C!<IZa6sCZE^[>Yct=7YHG%2Xf\\+XK/D&WiE(uWMlboVl-GiVP^2dUnjf]USFQXU7n9R
TV.pLT:VXGSXl=AS=?";R[T\5R@0G0Q^=&)QBmf$Q'@MtPEV/mP*(lhOH>QbO,o<]NK&pVN/W[QMi*CL
M2@(FLkgb@L5(G:KnY25KS+o0JqAQ)JUi9$It)rsIXZ]nI=-EiH[C*cH?jd]G^+IWGB\4RG'.qMFEDVG
F)uABEcH)=E,]c7Df9N2DJa6-Ci!p'CMR["C2%BrBP;'lB4kggAn>ObA7T4]@q0"X@U`bS@:3JN?sd8J
~>
<~o'u8>nF5o8n*]W3mHs<-m-O'(lg!d#l07Hrkih3mkN:phjlPUbjQ#:\io8tViSi_Qi8<GLhVR,Fh;-lA
gtUT<g=k96g"G$1f[na,f%/F&e^`1!eC2mqdaHRkdF$=fd*L%acHa_[c-=JVbfe2Qb0%lKaiVWFaN)?A
`l?$;`Pod6`5BL1_SX1+_83q&^q[Y!^:q=p]tM+l]Y(kg]=PSb\[f8\\@B#W\$i`R[C*EL['[3HZa6sC
ZE^[>Yct@8YHP+3Y-+n/XfSV*X/i;$WiE(uWMuhpW2HPkVP^5fV5:#aUnjc\USFQXU7n9STqJ'OTV%jK
~>
<~3&`cT2`<QP2Dm?L2)I-H1c.!E1G^dA1,:R=0ekC:0JG160/"t3/hSb//M/P+/1`>'/1W5$.k3"u.Oceq
.4HYn-n$Gj-RU8g-71&c,pai_,U=W\,9nEX+sJ3T+sA*Q+WqmM+<VaJ+!2OF*Zc=B*??.?*#oq;)]K_8
)B'M4)&X;0)&O2-(`*u)(Ddi&()@Z#'bqGt'GM5q',)#m&eYfi&eP]f&J,Kb&.f?_%hB0\%LrsX%1NaU
$k*OQ$k!FN$OR4J$47(G#mgnD#RC\A#6tJ=#6kA:"pG/6"U,#3"9\i0!s8W-!WiE)!W`<&!<E3$!!!!!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
newpath
77.8711 45.457 mo
77.937 45.3145 78.0293 45.1602 78.1558 44.9961 cv
78.8232 44.1338 80.4941 43.6328 80.4941 43.6328 cv
80.4941 43.6328 78.6353 44.0273 77.7871 45.0557 cv
77.6665 45.2031 77.5718 45.3359 77.4976 45.457 cv
77.8711 45.457 li
cp
level3{
gsave
clp
[-.231165 2.41154 -3.95325 .538558 79.0649 43.8271 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.231165 2.41154 -3.95325 .538558 79.0649 43.8271 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
80.1416 45.6895 mo
80.0825 45.4102 79.96 45.0635 79.7197 44.6738 cv
79.0884 43.6563 77.6812 43.0859 77.6812 43.0859 cv
77.6812 43.0859 79.231 43.5254 80.0234 44.7383 cv
80.2808 45.1328 80.4224 45.4463 80.4951 45.6895 cv
80.1416 45.6895 li
cp
level3{
gsave
clp
[2.81396 0 0 2.81396 77.6812 44.3877 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.81396 0 0 2.81396 77.6812 44.3877 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
81.0972 45.6279 mo
81.3145 45.5137 81.5625 45.3955 81.8433 45.2744 cv
83.7754 44.4385 86.5835 44.1328 86.5835 44.1328 cv
86.5835 44.1328 83.6582 44.2969 81.2871 45.2861 cv
80.9951 45.4092 80.7407 45.5225 80.519 45.6279 cv
81.0972 45.6279 li
cp
level3{
gsave
clp
[-2.13665 3.38827 -7.3531 -.929965 84.2114 43.833 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.13665 3.38827 -7.3531 -.929965 84.2114 43.833 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
81.7222 45.6963 mo
81.8462 45.2461 82.0269 44.7041 82.2896 44.1299 cv
82.9849 42.6006 83.9937 42.0566 83.9937 42.0566 cv
83.9937 42.0566 82.9438 42.3379 82.0898 44.1484 cv
81.7915 44.7783 81.6025 45.2939 81.4829 45.6963 cv
81.7222 45.6963 li
cp
level3{
gsave
clp
[-.772398 6.20523 -2.63593 -1.82408 83.0459 41.4004 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.772398 6.20523 -2.63593 -1.82408 83.0459 41.4004 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
78.0083 46.2656 mo
78.0083 46.3867 77.8091 46.4844 77.564 46.4844 cv
77.3188 46.4844 77.1201 46.3867 77.1201 46.2656 cv
77.1201 46.1445 77.3188 46.0469 77.564 46.0469 cv
77.8091 46.0469 78.0083 46.1445 78.0083 46.2656 cv
cp
level3{
gsave
clp
[.394876 0 0 .255006 77.5645 46.2646 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394876 0 0 .255006 77.5645 46.2646 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
78.8428 46.6182 mo
78.8428 46.7383 78.6436 46.8359 78.3984 46.8359 cv
78.1528 46.8359 77.9546 46.7383 77.9546 46.6182 cv
77.9546 46.4971 78.1528 46.3984 78.3984 46.3984 cv
78.6436 46.3984 78.8428 46.4971 78.8428 46.6182 cv
cp
level3{
gsave
clp
[.394864 0 0 .254999 78.3989 46.6162 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394864 0 0 .254999 78.3989 46.6162 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
78.6572 45.5098 mo
78.6572 45.6309 78.4585 45.7295 78.2139 45.7295 cv
77.9683 45.7295 77.769 45.6309 77.769 45.5098 cv
77.769 45.3896 77.9683 45.291 78.2139 45.291 cv
78.4585 45.291 78.6572 45.3896 78.6572 45.5098 cv
cp
level3{
gsave
clp
[.395213 0 0 .255224 78.2134 45.5088 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395213 0 0 .255224 78.2134 45.5088 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.0479 46.1338 mo
79.0479 46.2549 78.8486 46.3525 78.6035 46.3525 cv
78.3584 46.3525 78.1597 46.2549 78.1597 46.1338 cv
78.1597 46.0127 78.3584 45.9141 78.6035 45.9141 cv
78.8486 45.9141 79.0479 46.0127 79.0479 46.1338 cv
cp
level3{
gsave
clp
[.395206 0 0 .255219 78.604 46.1318 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395206 0 0 .255219 78.604 46.1318 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.0449 46.1338 mo
80.0449 46.2549 79.8467 46.3525 79.6016 46.3525 cv
79.3564 46.3525 79.1572 46.2549 79.1572 46.1338 cv
79.1572 46.0127 79.3564 45.9141 79.6016 45.9141 cv
79.8467 45.9141 80.0449 46.0127 80.0449 46.1338 cv
cp
level3{
gsave
clp
[.395069 0 0 .255131 79.6011 46.1318 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395069 0 0 .255131 79.6011 46.1318 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.4707 46.3789 mo
80.4707 46.5 80.272 46.5986 80.0273 46.5986 cv
79.7817 46.5986 79.5825 46.5 79.5825 46.3789 cv
79.5825 46.2588 79.7817 46.1611 80.0273 46.1611 cv
80.272 46.1611 80.4707 46.2588 80.4707 46.3789 cv
cp
level3{
gsave
clp
[.394872 0 0 .255004 80.0269 46.3789 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394872 0 0 .255004 80.0269 46.3789 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.8193 45.7686 mo
80.7319 45.6367 80.9922 45.4297 81.3975 45.3086 cv
81.8052 45.1875 82.207 45.1973 82.2939 45.3301 cv
82.3809 45.4629 82.1221 45.668 81.7144 45.79 cv
81.3081 45.9121 80.9072 45.9023 80.8193 45.7686 cv
cp
level3{
gsave
clp
[-.655298 .195288 -.185162 -.280636 81.5552 45.5488 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.655298 .195288 -.185162 -.280636 81.5552 45.5488 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.5522 45.8115 mo
80.5522 45.957 80.2534 46.0742 79.8838 46.0742 cv
79.5146 46.0742 79.2148 45.957 79.2148 45.8115 cv
79.2148 45.667 79.5146 45.5498 79.8838 45.5498 cv
80.2534 45.5498 80.5522 45.667 80.5522 45.8115 cv
cp
level3{
gsave
clp
[.593941 0 0 .306363 79.8833 45.8125 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.593941 0 0 .306363 79.8833 45.8125 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.8657 46.0869 mo
80.7529 46.0635 80.7065 45.877 80.7627 45.6709 cv
80.8188 45.4658 80.9556 45.3184 81.0684 45.3418 cv
81.1812 45.3662 81.2266 45.5527 81.1704 45.7578 cv
81.1138 45.9639 80.9785 46.1113 80.8657 46.0869 cv
cp
level3{
gsave
clp
[-.0898676 .33193 -.237714 -.0507317 80.9673 45.7139 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0898676 .33193 -.237714 -.0507317 80.9673 45.7139 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
82.4341 46.0469 mo
82.4868 46.2041 82.2461 46.4072 81.896 46.501 cv
81.5459 46.5938 81.2188 46.542 81.165 46.3848 cv
81.1123 46.2275 81.3535 46.0254 81.7031 45.9316 cv
82.0532 45.8389 82.3804 45.8906 82.4341 46.0469 cv
cp
level3{
gsave
clp
[.564371 -.150886 .113164 .332239 81.7993 46.2158 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.564371 -.150886 .113164 .332239 81.7993 46.2158 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.6411 45.7363 mo
80.6226 45.8359 80.3496 45.8809 80.0298 45.8359 cv
79.709 45.792 79.4639 45.6738 79.4819 45.5742 cv
79.4995 45.4746 79.7734 45.4287 80.0933 45.4736 cv
80.4141 45.5195 80.6592 45.6367 80.6411 45.7363 cv
cp
level3{
gsave
clp
[.515176 .0723562 -.0376252 .21128 80.064 45.6563 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.515176 .0723562 -.0376252 .21128 80.064 45.6563 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
78.9175 45.8291 mo
78.9253 45.9746 78.6318 46.1035 78.2622 46.1182 cv
77.8931 46.1328 77.5884 46.0264 77.5815 45.8818 cv
77.5737 45.7373 77.8677 45.6084 78.2358 45.5938 cv
78.605 45.5801 78.9102 45.6846 78.9175 45.8291 cv
cp
level3{
gsave
clp
[.593787 -.0231158 .0158921 .306284 78.25 45.8555 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.593787 -.0231158 .0158921 .306284 78.25 45.8555 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.812 45.6221 mo
80.8511 45.7344 80.6162 45.8975 80.2876 45.9893 cv
79.958 46.0801 79.6597 46.0635 79.6206 45.9531 cv
79.582 45.8408 79.8164 45.6777 80.1445 45.5869 cv
80.4736 45.4951 80.7725 45.5107 80.812 45.6221 cv
cp
level3{
gsave
clp
[.530217 -.146317 .0825748 .234686 80.2163 45.7881 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.530217 -.146317 .0825748 .234686 80.2163 45.7881 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.7549 45.8154 mo
79.7617 45.9395 79.5161 46.0498 79.2056 46.0625 cv
78.8965 46.0752 78.6406 45.9834 78.6338 45.8584 cv
78.6279 45.7344 78.8735 45.624 79.1841 45.6113 cv
79.4932 45.5996 79.749 45.6904 79.7549 45.8154 cv
cp
level3{
gsave
clp
[.499107 -.0202536 .0130202 .263297 79.1943 45.8389 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.499107 -.0202536 .0130202 .263297 79.1943 45.8389 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.3003 45.79 mo
79.3003 45.9092 79.0898 46.0059 78.8315 46.0059 cv
78.5732 46.0059 78.3628 45.9092 78.3628 45.79 cv
78.3628 45.6709 78.5732 45.5752 78.8315 45.5752 cv
79.0898 45.5752 79.3003 45.6709 79.3003 45.79 cv
cp
level3{
gsave
clp
[.417475 0 0 .250775 78.8335 45.7891 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417475 0 0 .250775 78.8335 45.7891 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.8403 45.8223 mo
77.8403 45.9424 77.6309 46.0381 77.3721 46.0381 cv
77.1133 46.0381 76.9038 45.9424 76.9038 45.8223 cv
76.9038 45.7041 77.1133 45.6064 77.3721 45.6064 cv
77.6309 45.6064 77.8403 45.7041 77.8403 45.8223 cv
cp
level3{
gsave
clp
[.417565 0 0 .250829 77.374 45.8213 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417565 0 0 .250829 77.374 45.8213 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
78.3027 45.957 mo
78.2573 46.0498 77.9795 46.0342 77.6812 45.9199 cv
77.3843 45.8076 77.1792 45.6396 77.2236 45.5469 cv
77.269 45.4531 77.5469 45.4707 77.8447 45.583 cv
78.1421 45.6973 78.3472 45.8652 78.3027 45.957 cv
cp
level3{
gsave
clp
[.481693 .182811 -.0957583 .195869 77.7617 45.751 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.481693 .182811 -.0957583 .195869 77.7617 45.751 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
78.0801 45.5771 mo
78.0347 45.6709 77.7568 45.6543 77.46 45.54 cv
77.1616 45.4268 76.9565 45.2588 77.002 45.166 cv
77.0474 45.0732 77.3242 45.0898 77.6226 45.2041 cv
77.9204 45.3174 78.1255 45.4844 78.0801 45.5771 cv
cp
level3{
gsave
clp
[.480974 .182538 -.0956153 .195577 77.5391 45.3721 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.480974 .182538 -.0956153 .195577 77.5391 45.3721 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.6758 45.9736 mo
81.6826 46.1191 81.3901 46.248 81.021 46.2627 cv
80.6509 46.2764 80.3457 46.1719 80.3394 46.0264 cv
80.3315 45.8818 80.625 45.7529 80.9951 45.7383 cv
81.3633 45.7236 81.6685 45.8291 81.6758 45.9736 cv
cp
level3{
gsave
clp
[.593938 -.0231217 .0158962 .306362 81.0083 46 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.593938 -.0231217 .0158962 .306362 81.0083 46 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.7285 45.5449 mo
77.7676 45.6572 77.5332 45.8203 77.2041 45.9121 cv
76.875 46.0029 76.5767 45.9863 76.5376 45.875 cv
76.498 45.7637 76.7329 45.6006 77.0625 45.5088 cv
77.3911 45.418 77.6899 45.4346 77.7285 45.5449 cv
cp
level3{
gsave
clp
[.530242 -.146324 .0825786 .234697 77.1333 45.71 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.530242 -.146324 .0825786 .234697 77.1333 45.71 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.9438 46.21 mo
77.9023 46.249 77.7964 46.2207 77.7065 46.1465 cv
77.6162 46.0713 77.5776 45.9795 77.6187 45.9395 cv
77.6602 45.9014 77.7661 45.9297 77.856 46.0039 cv
77.9453 46.0791 77.9854 46.1709 77.9438 46.21 cv
cp
level3{
gsave
clp
[.144541 .119969 -.0881702 .0823886 77.7813 46.0752 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.144541 .119969 -.0881702 .0823886 77.7813 46.0752 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.5962 45.8857 mo
79.603 46.0107 79.3569 46.1211 79.0479 46.1338 cv
78.7373 46.1455 78.481 46.0547 78.4751 45.9297 cv
78.4688 45.8047 78.7153 45.6943 79.0249 45.6826 cv
79.3345 45.6699 79.5903 45.7607 79.5962 45.8857 cv
cp
level3{
gsave
clp
[.499152 -.0202554 .0130213 .263321 79.0347 45.9102 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.499152 -.0202554 .0130213 .263321 79.0347 45.9102 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.96 45.7646 mo
79.96 45.8828 79.7495 45.9795 79.4917 45.9795 cv
79.2339 45.9795 79.0234 45.8828 79.0234 45.7646 cv
79.0234 45.6455 79.2339 45.5488 79.4917 45.5488 cv
79.7495 45.5488 79.96 45.6455 79.96 45.7646 cv
cp
level3{
gsave
clp
[.417206 0 0 .250613 79.4937 45.7627 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417206 0 0 .250613 79.4937 45.7627 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.6738 46.1289 mo
77.6558 46.2295 77.3823 46.2744 77.061 46.2295 cv
76.7412 46.1846 76.4961 46.0674 76.5142 45.9668 cv
76.5322 45.8682 76.8052 45.8223 77.126 45.8672 cv
77.4463 45.9121 77.6919 46.0293 77.6738 46.1289 cv
cp
level3{
gsave
clp
[.515444 .0723938 -.0376448 .21139 77.0962 46.0498 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.515444 .0723938 -.0376448 .21139 77.0962 46.0498 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.5981 46.8389 mo
81.5981 46.96 81.3999 47.0586 81.1548 47.0586 cv
80.9097 47.0586 80.7104 46.96 80.7104 46.8389 cv
80.7104 46.7188 80.9097 46.6211 81.1548 46.6211 cv
81.3999 46.6211 81.5981 46.7188 81.5981 46.8389 cv
cp
level3{
gsave
clp
[.394732 0 0 .254913 81.1543 46.8389 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394732 0 0 .254913 81.1543 46.8389 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.501 45.8594 mo
80.501 45.9795 80.3027 46.0781 80.0576 46.0781 cv
79.812 46.0781 79.6138 45.9795 79.6138 45.8594 cv
79.6138 45.7383 79.812 45.6406 80.0576 45.6406 cv
80.3027 45.6406 80.501 45.7383 80.501 45.8594 cv
cp
level3{
gsave
clp
[.3946 0 0 .254828 80.0576 45.8584 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.3946 0 0 .254828 80.0576 45.8584 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.7554 46.0137 mo
70.7554 46.1348 70.6094 46.2324 70.4282 46.2324 cv
70.2476 46.2324 70.1006 46.1348 70.1006 46.0137 cv
70.1006 45.8926 70.2476 45.7939 70.4282 45.7939 cv
70.6094 45.7939 70.7554 45.8926 70.7554 46.0137 cv
cp
level3{
gsave
clp
[.291669 0 0 .254998 70.4292 46.0117 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291669 0 0 .254998 70.4292 46.0117 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.4565 45.9258 mo
71.4204 46.0752 71.0698 46.1309 70.6743 46.0508 cv
70.2778 45.9707 69.9863 45.7852 70.0229 45.6348 cv
70.0591 45.4863 70.4097 45.4307 70.8057 45.5098 cv
71.2017 45.5908 71.4927 45.7754 71.4565 45.9258 cv
cp
level3{
gsave
clp
[.63783 .128723 -.0766554 .315299 70.7363 45.7793 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.63783 .128723 -.0766554 .315299 70.7363 45.7793 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.3037 46.2646 mo
73.2388 46.1309 73.4312 45.9258 73.7305 45.8047 cv
74.0303 45.6836 74.3262 45.6924 74.3901 45.8252 cv
74.4546 45.959 74.2642 46.1641 73.9634 46.2852 cv
73.6631 46.4063 73.3682 46.3975 73.3037 46.2646 cv
cp
level3{
gsave
clp
[-.482803 .195145 -.135879 -.280431 73.8472 46.0449 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.482803 .195145 -.135879 -.280431 73.8472 46.0449 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.9316 45.7471 mo
72.8931 45.6064 73.1206 45.4336 73.4395 45.3623 cv
73.7578 45.29 74.0469 45.3457 74.0845 45.4863 cv
74.123 45.6289 73.8965 45.8018 73.5771 45.8721 cv
73.2583 45.9453 72.9697 45.8896 72.9316 45.7471 cv
cp
level3{
gsave
clp
[-.51191 .11536 -.080752 -.297052 73.5078 45.6162 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.51191 .11536 -.080752 -.297052 73.5078 45.6162 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.3076 45.5049 mo
73.3643 45.6787 73.1797 45.8818 72.8955 45.96 cv
72.6108 46.0371 72.335 45.96 72.2778 45.7881 cv
72.2207 45.6143 72.4053 45.4111 72.6904 45.334 cv
72.9741 45.2549 73.251 45.332 73.3076 45.5049 cv
cp
level3{
gsave
clp
[.456989 -.12542 .119653 .364726 72.7935 45.6484 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.456989 -.12542 .119653 .364726 72.7935 45.6484 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.0581 45.8418 mo
73.0317 46.0273 72.6792 46.1357 72.2705 46.0879 cv
71.8604 46.0391 71.5513 45.8496 71.5767 45.665 cv
71.603 45.4805 71.9565 45.3721 72.3657 45.4199 cv
72.7744 45.4697 73.0845 45.6592 73.0581 45.8418 cv
cp
level3{
gsave
clp
[.658774 .0781842 -.0550185 .389473 72.3174 45.7539 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.658774 .0781842 -.0550185 .389473 72.3174 45.7539 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.5771 46.1387 mo
69.5132 46.0059 69.7036 45.7998 70.0034 45.6787 cv
70.3037 45.5576 70.5991 45.5664 70.6636 45.7002 cv
70.728 45.833 70.5371 46.0391 70.2368 46.1602 cv
69.9375 46.2813 69.6406 46.2715 69.5771 46.1387 cv
cp
level3{
gsave
clp
[-.483093 .195262 -.13596 -.280599 70.1206 45.9189 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.483093 .195262 -.13596 -.280599 70.1206 45.9189 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.9619 45.6924 mo
72.0195 45.8652 71.835 46.0693 71.5503 46.1465 cv
71.2656 46.2246 70.9888 46.1475 70.9321 45.9736 cv
70.8755 45.8018 71.0591 45.5986 71.3447 45.5195 cv
71.6284 45.4424 71.9053 45.5195 71.9619 45.6924 cv
cp
level3{
gsave
clp
[.457123 -.125457 .119688 .364834 71.4478 45.834 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.457123 -.125457 .119688 .364834 71.4478 45.834 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.4585 45.6709 mo
71.4585 45.8271 71.21 45.9531 70.9033 45.9531 cv
70.5957 45.9531 70.3472 45.8271 70.3472 45.6709 cv
70.3472 45.5166 70.5957 45.3916 70.9033 45.3916 cv
71.21 45.3916 71.4585 45.5166 71.4585 45.6709 cv
cp
level3{
gsave
clp
[.494668 0 0 .326886 70.9043 45.6738 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.494668 0 0 .326886 70.9043 45.6738 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.6338 46.0254 mo
73.6338 46.1465 73.4868 46.2451 73.3071 46.2451 cv
73.1255 46.2451 72.9795 46.1465 72.9795 46.0254 cv
72.9795 45.9043 73.1255 45.8076 73.3071 45.8076 cv
73.4868 45.8076 73.6338 45.9043 73.6338 46.0254 cv
cp
level3{
gsave
clp
[.291298 0 0 .254673 73.3076 46.0254 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291298 0 0 .254673 73.3076 46.0254 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.3271 45.9668 mo
70.3271 46.0879 70.1792 46.1846 69.9995 46.1846 cv
69.8184 46.1846 69.6719 46.0879 69.6719 45.9668 cv
69.6719 45.8457 69.8184 45.7471 69.9995 45.7471 cv
70.1792 45.7471 70.3271 45.8457 70.3271 45.9668 cv
cp
level3{
gsave
clp
[.291573 0 0 .254913 70.001 45.9648 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291573 0 0 .254913 70.001 45.9648 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.439 46.1641 mo
72.6738 45.459 73.0581 44.4424 73.6216 43.376 cv
74.6772 41.3818 75.8193 40.8877 75.8193 40.8877 cv
75.8193 40.8877 74.6958 40.9932 73.416 43.3477 cv
72.7246 44.6201 72.3613 45.5654 72.1729 46.1641 cv
72.439 46.1641 li
cp
level3{
gsave
clp
[-3.19671 6.30435 -5.62433 -3.24757 75.3682 40.6274 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.19671 6.30435 -5.62433 -3.24757 75.3682 40.6274 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
71.9087 45.9932 mo
72.1743 45.6045 72.5146 45.1602 72.938 44.7012 cv
74.2095 43.3184 75.5669 42.9668 75.5669 42.9668 cv
75.5669 42.9668 74.2368 43.0527 72.6943 44.6836 cv
72.2075 45.1992 71.8545 45.6367 71.5996 45.9932 cv
71.9087 45.9932 li
cp
level3{
gsave
clp
[-2.61607 5.37694 -4.43856 -2.69099 74.6021 42.3818 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.61607 5.37694 -4.43856 -2.69099 74.6021 42.3818 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
70.2754 45.8721 mo
70.2915 45.8086 70.3096 45.7441 70.3315 45.6758 cv
70.6348 44.751 71.729 44.0781 71.729 44.0781 cv
71.729 44.0781 70.4775 44.667 70.0811 45.7744 cv
70.0688 45.8076 70.0576 45.8389 70.0469 45.8721 cv
70.2754 45.8721 li
cp
level3{
gsave
clp
[.0666 2.45486 -3.79359 1.49818 70.873 44.416 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0666 2.45486 -3.79359 1.49818 70.873 44.416 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.0488 46.1045 mo
71.979 45.7217 71.8647 45.2793 71.6782 44.7969 cv
71.0532 43.1826 69.6592 42.9336 69.6592 42.9336 cv
69.6592 42.9336 71.1934 42.9756 71.98 44.8984 cv
72.1729 45.3701 72.2993 45.7695 72.3809 46.1045 cv
72.0488 46.1045 li
cp
level3{
gsave
clp
[.346006 3.95243 3.7776 .679671 70.9014 43.1465 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.346006 3.95243 3.7776 .679671 70.9014 43.1465 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
70.8286 45.8721 mo
71.6855 45.667 72.4233 45.6377 72.4233 45.6377 cv
72.4233 45.6377 71.5342 45.6016 70.4546 45.8721 cv
70.8286 45.8721 li
cp
level3{
gsave
clp
[-2.18313 2.55696 -5.15276 -1.9823 71.7563 45.3818 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.18313 2.55696 -5.15276 -1.9823 71.7563 45.3818 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.1133 45.6709 mo
72.8486 45.5215 73.4355 45.4971 73.4355 45.4971 cv
73.4355 45.4971 72.6865 45.4668 71.728 45.6709 cv
72.1133 45.6709 li
cp
level3{
gsave
clp
[-2.18882 2.56363 -5.1662 -1.98747 72.8477 45.2715 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.18882 2.56363 -5.1662 -1.98747 72.8477 45.2715 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.5444 45.5293 mo
72.7441 45.2217 73.0088 44.8789 73.3555 44.5166 cv
74.5552 43.2705 76.3081 42.8203 76.3081 42.8203 cv
76.3081 42.8203 74.481 43.0576 73.0083 44.5332 cv
72.6255 44.9189 72.3477 45.249 72.145 45.5293 cv
72.5444 45.5293 li
cp
level3{
gsave
clp
[-1.63392 4.61376 -5.69085 -1.30877 74.8276 42.4795 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.63392 4.61376 -5.69085 -1.30877 74.8276 42.4795 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
72.6563 45.2314 mo
73.9668 45.0527 75.1431 45.0674 75.1431 45.0674 cv
75.1431 45.0674 73.6411 44.9648 71.9404 45.2314 cv
72.6563 45.2314 li
cp
level3{
gsave
clp
[-3.21235 2.59916 -8.44045 -2.75468 74.0742 44.7188 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.21235 2.59916 -8.44045 -2.75468 74.0742 44.7188 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.2964 45.9287 mo
72.4609 45.8604 72.6382 45.791 72.8271 45.7217 cv
74.8804 44.9688 77.4717 44.9355 77.4717 44.9355 cv
77.4717 44.9355 74.8398 44.791 72.335 45.6709 cv
72.0815 45.7607 71.853 45.8467 71.6465 45.9287 cv
72.2964 45.9287 li
cp
level3{
gsave
clp
[-3.68422 3.65968 -9.18098 -3.25354 75.6924 44.3057 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.68422 3.65968 -9.18098 -3.25354 75.6924 44.3057 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
71.8545 46.042 mo
71.667 45.8076 71.437 45.5654 71.1567 45.3232 cv
69.7915 44.1416 67.6685 44.0566 67.6685 44.0566 cv
67.6685 44.0566 69.9023 43.8682 71.585 45.252 cv
71.9331 45.54 72.2017 45.8027 72.4106 46.042 cv
71.8545 46.042 li
cp
level3{
gsave
clp
[2.00192 5.4521 8.05421 -4.59386 69.3286 43.1104 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.00192 5.4521 8.05421 -4.59386 69.3286 43.1104 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
71.1196 45.8555 mo
71.0215 45.7725 70.9102 45.6846 70.7871 45.5928 cv
70.1001 45.0869 69.3735 44.8848 69.3735 44.8848 cv
69.3735 44.8848 70.085 45.0059 70.9165 45.6045 cv
71.0425 45.6973 71.1523 45.7803 71.2476 45.8555 cv
71.1196 45.8555 li
cp
level3{
gsave
clp
[1.30107 1.78484 2.17141 -.35717 69.894 44.7988 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.30107 1.78484 2.17141 -.35717 69.894 44.7988 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
71.4224 45.6758 mo
71.6055 45.5498 71.8232 45.417 72.0781 45.2822 cv
73.2329 44.6738 74.6211 44.582 74.6211 44.582 cv
74.6211 44.582 73.2246 44.5439 71.8188 45.2598 cv
71.5171 45.4121 71.2764 45.5518 71.0835 45.6758 cv
71.4224 45.6758 li
cp
level3{
gsave
clp
[-2.06192 2.75908 -4.60491 -1.9197 73.584 44.1494 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.06192 2.75908 -4.60491 -1.9197 73.584 44.1494 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
70.7065 46.0166 mo
70.6099 45.8057 70.4702 45.5703 70.2681 45.3262 cv
69.6274 44.5527 68.5342 44.3682 68.5342 44.3682 cv
68.5342 44.3682 69.6997 44.4014 70.4927 45.3125 cv
70.73 45.5869 70.8862 45.8213 70.9854 46.0166 cv
70.7065 46.0166 li
cp
level3{
gsave
clp
[.563605 4.16711 2.83342 -2.21455 69.543 43.5791 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.563605 4.16711 2.83342 -2.21455 69.543 43.5791 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
71.936 45.8721 mo
71.999 45.8223 72.0649 45.7715 72.1343 45.7217 cv
73.1631 44.9658 74.4219 44.7773 74.4219 44.7773 cv
74.4219 44.7773 73.1509 44.8193 71.897 45.7109 cv
71.8198 45.7666 71.7461 45.8193 71.6772 45.8721 cv
71.936 45.8721 li
cp
level3{
gsave
clp
[-1.73445 3.17125 -4.03547 -1.61616 73.541 44.4248 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.73445 3.17125 -4.03547 -1.61616 73.541 44.4248 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
71.2104 45.8721 mo
71.1885 45.7578 71.1553 45.6377 71.1079 45.5137 cv
70.771 44.624 69.5703 44.1807 69.5703 44.1807 cv
69.5703 44.1807 70.9419 44.5 71.3838 45.5566 cv
71.4307 45.668 71.4678 45.7744 71.4966 45.8721 cv
71.2104 45.8721 li
cp
level3{
gsave
clp
[-.0694742 2.84521 4.59672 .0755028 70.5527 44.1973 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0694742 2.84521 4.59672 .0755028 70.5527 44.1973 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.3379 46.0273 mo
72.2075 45.8828 72.0596 45.7363 71.8906 45.585 cv
70.5864 44.4258 68.4341 44.0664 68.4341 44.0664 cv
68.4341 44.0664 70.7197 44.2158 72.3311 45.5869 cv
72.5132 45.7422 72.6729 45.8896 72.8115 46.0273 cv
72.3379 46.0273 li
cp
level3{
gsave
clp
[1.61852 4.44426 7.52527 -1.72585 70.125 43.6787 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.61852 4.44426 7.52527 -1.72585 70.125 43.6787 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
73.0635 45.9346 mo
73.0156 45.791 72.9478 45.6367 72.8545 45.4727 cv
72.3618 44.6123 71.1313 44.1094 71.1313 44.1094 cv
71.1313 44.1094 72.5005 44.5049 73.1255 45.5332 cv
73.2148 45.6807 73.2852 45.8135 73.3389 45.9346 cv
73.0635 45.9346 li
cp
level3{
gsave
clp
[.246151 2.56787 4.20953 .57347 72.1616 44.25 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.246151 2.56787 4.20953 .57347 72.1616 44.25 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
71.4976 46.0498 mo
71.2637 45.6953 70.8784 45.1875 70.3154 44.6533 cv
69.2603 43.6543 68.1172 43.4082 68.1172 43.4082 cv
68.1172 43.4082 69.2412 43.4609 70.5205 44.6396 cv
71.2119 45.2764 71.5762 45.75 71.7642 46.0498 cv
71.4976 46.0498 li
cp
level3{
gsave
clp
[2.05599 4.05469 3.61732 -2.0887 69.0098 42.8936 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.05599 4.05469 3.61732 -2.0887 69.0098 42.8936 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
71.7759 46.168 mo
71.6685 45.8984 71.5269 45.5957 71.3413 45.2793 cv
70.7007 44.1855 69.7642 43.791 69.7642 43.791 cv
69.7642 43.791 70.7407 43.998 71.5278 45.2949 cv
71.7319 45.6309 71.8809 45.9229 71.9883 46.168 cv
71.7759 46.168 li
cp
level3{
gsave
clp
[1.28724 3.63483 4.48338 -1.03108 70.4023 43.6445 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.28724 3.63483 4.48338 -1.03108 70.4023 43.6445 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
70.5776 45.9531 mo
70.6265 45.8086 70.6938 45.6543 70.7876 45.4912 cv
71.2793 44.6299 72.5112 44.1279 72.5112 44.1279 cv
72.5112 44.1279 71.1401 44.5225 70.5161 45.5518 cv
70.4268 45.6982 70.3574 45.832 70.3022 45.9531 cv
70.5776 45.9531 li
cp
level3{
gsave
clp
[-.246121 2.56755 -4.20901 .5734 71.481 44.2686 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.246121 2.56755 -4.20901 .5734 71.481 44.2686 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.251 46.1855 mo
72.2075 45.9063 72.1177 45.5576 71.9399 45.1709 cv
71.4746 44.1523 70.4375 43.582 70.4375 43.582 cv
70.4375 43.582 71.5796 44.0225 72.1636 45.2344 cv
72.3535 45.6289 72.458 45.9424 72.5112 46.1855 cv
72.251 46.1855 li
cp
level3{
gsave
clp
[2.07373 0 0 2.07373 70.4375 44.8838 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.07373 0 0 2.07373 70.4375 44.8838 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.9551 46.124 mo
73.1157 46.0098 73.2979 45.8906 73.5054 45.7695 cv
74.9292 44.9326 76.999 44.6289 76.999 44.6289 cv
76.999 44.6289 74.8428 44.792 73.0952 45.7813 cv
72.8804 45.9043 72.6929 46.0176 72.5293 46.124 cv
72.9551 46.124 li
cp
level3{
gsave
clp
[-1.94611 3.08611 -6.69736 -.847033 75.3652 44.4229 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.94611 3.08611 -6.69736 -.847033 75.3652 44.4229 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
73.415 46.1914 mo
73.5073 45.7422 73.6406 45.1992 73.8345 44.624 cv
74.3462 43.0957 75.0903 42.5527 75.0903 42.5527 cv
75.0903 42.5527 74.3159 42.834 73.6865 44.6436 cv
73.4673 45.2744 73.3281 45.7891 73.2397 46.1914 cv
73.415 46.1914 li
cp
level3{
gsave
clp
[-.706643 5.67698 -2.41153 -1.6688 74.4468 42.1074 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.706643 5.67698 -2.41153 -1.6688 74.4468 42.1074 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
70.6782 46.7617 mo
70.6782 46.8818 70.5317 46.9805 70.3511 46.9805 cv
70.1704 46.9805 70.0234 46.8818 70.0234 46.7617 cv
70.0234 46.6416 70.1704 46.543 70.3511 46.543 cv
70.5317 46.543 70.6782 46.6416 70.6782 46.7617 cv
cp
level3{
gsave
clp
[.291411 0 0 .254772 70.3521 46.7607 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291411 0 0 .254772 70.3521 46.7607 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.293 47.1133 mo
71.293 47.2344 71.147 47.333 70.9663 47.333 cv
70.7847 47.333 70.6387 47.2344 70.6387 47.1133 cv
70.6387 46.9922 70.7847 46.8936 70.9663 46.8936 cv
71.147 46.8936 71.293 46.9922 71.293 47.1133 cv
cp
level3{
gsave
clp
[.291775 0 0 .25509 70.9673 47.1123 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291775 0 0 .25509 70.9673 47.1123 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.1567 46.0059 mo
71.1567 46.127 71.0103 46.2246 70.8301 46.2246 cv
70.6494 46.2246 70.5024 46.127 70.5024 46.0059 cv
70.5024 45.8848 70.6494 45.7881 70.8301 45.7881 cv
71.0103 45.7881 71.1567 45.8848 71.1567 46.0059 cv
cp
level3{
gsave
clp
[.291069 0 0 .254473 70.8306 46.0049 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291069 0 0 .254473 70.8306 46.0049 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.4443 46.6289 mo
71.4443 46.75 71.2974 46.8486 71.1177 46.8486 cv
70.9365 46.8486 70.79 46.75 70.79 46.6289 cv
70.79 46.5078 70.9365 46.4102 71.1177 46.4102 cv
71.2974 46.4102 71.4443 46.5078 71.4443 46.6289 cv
cp
level3{
gsave
clp
[.291594 0 0 .254932 71.1187 46.6279 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291594 0 0 .254932 71.1187 46.6279 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.1797 46.6289 mo
72.1797 46.75 72.0337 46.8486 71.853 46.8486 cv
71.6719 46.8486 71.5254 46.75 71.5254 46.6289 cv
71.5254 46.5078 71.6719 46.4102 71.853 46.4102 cv
72.0337 46.4102 72.1797 46.5078 72.1797 46.6289 cv
cp
level3{
gsave
clp
[.291594 0 0 .254932 71.8535 46.6279 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291594 0 0 .254932 71.8535 46.6279 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.4927 46.876 mo
72.4927 46.9971 72.3472 47.0938 72.166 47.0938 cv
71.9858 47.0938 71.8394 46.9971 71.8394 46.876 cv
71.8394 46.7549 71.9858 46.6563 72.166 46.6563 cv
72.3472 46.6563 72.4927 46.7549 72.4927 46.876 cv
cp
level3{
gsave
clp
[.291029 0 0 .254438 72.167 46.874 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291029 0 0 .254438 72.167 46.874 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.751 46.2646 mo
72.686 46.1309 72.8774 45.9258 73.1768 45.8047 cv
73.4766 45.6836 73.7729 45.6924 73.8374 45.8252 cv
73.9014 45.959 73.7109 46.1641 73.4097 46.2852 cv
73.1104 46.4063 72.8154 46.3975 72.751 46.2646 cv
cp
level3{
gsave
clp
[-.482831 .195156 -.135887 -.280447 73.2939 46.0449 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.482831 .195156 -.135887 -.280447 73.2939 46.0449 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.5532 46.3086 mo
72.5532 46.4531 72.3335 46.5703 72.061 46.5703 cv
71.7886 46.5703 71.5679 46.4531 71.5679 46.3086 cv
71.5679 46.1631 71.7886 46.0449 72.061 46.0449 cv
72.3335 46.0449 72.5532 46.1631 72.5532 46.3086 cv
cp
level3{
gsave
clp
[.438003 0 0 .306458 72.0605 46.3076 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.438003 0 0 .306458 72.0605 46.3076 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.7842 46.584 mo
72.7017 46.5576 72.667 46.373 72.7085 46.168 cv
72.7495 45.9619 72.8506 45.8135 72.9341 45.8379 cv
73.0171 45.8623 73.0503 46.0479 73.0088 46.2539 cv
72.9683 46.46 72.8672 46.6074 72.7842 46.584 cv
cp
level3{
gsave
clp
[-.0666032 .331568 -.175195 -.0506763 72.8584 46.2109 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0666032 .331568 -.175195 -.0506763 72.8584 46.2109 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.9399 46.543 mo
73.9795 46.7002 73.8018 46.9033 73.5444 46.9971 cv
73.2856 47.0889 73.0444 47.0371 73.0059 46.8799 cv
72.9663 46.7227 73.1436 46.5205 73.4023 46.4277 cv
73.6597 46.334 73.9009 46.3857 73.9399 46.543 cv
cp
level3{
gsave
clp
[.415878 -.150701 .082596 .331833 73.4722 46.7119 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.415878 -.150701 .082596 .331833 73.4722 46.7119 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.6191 46.2314 mo
72.6055 46.3311 72.4043 46.376 72.1685 46.3311 cv
71.9321 46.2871 71.7515 46.1709 71.7642 46.0693 cv
71.7773 45.9707 71.979 45.9258 72.2153 45.9697 cv
72.4512 46.0146 72.6328 46.1309 72.6191 46.2314 cv
cp
level3{
gsave
clp
[.379685 .0721835 -.0274297 .210776 72.189 46.1514 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.379685 .0721835 -.0274297 .210776 72.189 46.1514 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.3481 46.3252 mo
71.3545 46.4697 71.1382 46.5986 70.8662 46.6143 cv
70.5942 46.6289 70.3691 46.5234 70.3643 46.3779 cv
70.3589 46.2324 70.5742 46.1045 70.8467 46.0889 cv
71.1182 46.0752 71.3428 46.1797 71.3481 46.3252 cv
cp
level3{
gsave
clp
[.437691 -.0231124 .0115562 .306239 70.8555 46.3516 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.437691 -.0231124 .0115562 .306239 70.8555 46.3516 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.7446 46.1172 mo
72.7734 46.2295 72.6001 46.3926 72.3584 46.4834 cv
72.1152 46.5762 71.896 46.5596 71.8672 46.4473 cv
71.8379 46.3369 72.0112 46.1719 72.2529 46.0811 cv
72.4961 45.9902 72.7163 46.0068 72.7446 46.1172 cv
cp
level3{
gsave
clp
[.390687 -.146146 .0607735 .234412 72.3047 46.2813 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.390687 -.146146 .0607735 .234412 72.3047 46.2813 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.9663 46.3096 mo
71.9707 46.4355 71.79 46.5459 71.5615 46.5576 cv
71.333 46.5713 71.145 46.4795 71.1396 46.3555 cv
71.1357 46.2295 71.3164 46.1191 71.5449 46.1074 cv
71.7729 46.0947 71.9619 46.1855 71.9663 46.3096 cv
cp
level3{
gsave
clp
[.366762 -.0202152 .0101076 .262798 71.5508 46.334 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.366762 -.0202152 .0101076 .262798 71.5508 46.334 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.6304 46.2852 mo
71.6304 46.4053 71.4761 46.502 71.2856 46.502 cv
71.0947 46.502 70.9399 46.4053 70.9399 46.2852 cv
70.9399 46.168 71.0947 46.0703 71.2856 46.0703 cv
71.4761 46.0703 71.6304 46.168 71.6304 46.2852 cv
cp
level3{
gsave
clp
[.307738 0 0 .251126 71.2837 46.2852 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307738 0 0 .251126 71.2837 46.2852 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.5547 46.3193 mo
70.5547 46.4365 70.4004 46.5342 70.2095 46.5342 cv
70.019 46.5342 69.8647 46.4365 69.8647 46.3193 cv
69.8647 46.1992 70.019 46.1025 70.2095 46.1025 cv
70.4004 46.1025 70.5547 46.1992 70.5547 46.3193 cv
cp
level3{
gsave
clp
[.307592 0 0 .251006 70.2085 46.3174 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307592 0 0 .251006 70.2085 46.3174 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.895 46.4531 mo
70.8618 46.5459 70.6577 46.5293 70.4375 46.416 cv
70.2188 46.3027 70.0674 46.1357 70.1006 46.042 cv
70.1333 45.9492 70.3384 45.9668 70.5576 46.0801 cv
70.7769 46.1934 70.9282 46.3594 70.895 46.4531 cv
cp
level3{
gsave
clp
[.353714 .182656 -.0695831 .195703 70.4976 46.248 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.353714 .182656 -.0695831 .195703 70.4976 46.248 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.7319 46.0723 mo
70.6982 46.166 70.4937 46.1494 70.2739 46.0361 cv
70.0547 45.9229 69.9043 45.7549 69.9365 45.6621 cv
69.9697 45.5684 70.1748 45.5869 70.3945 45.6982 cv
70.6138 45.8125 70.7651 45.9795 70.7319 46.0723 cv
cp
level3{
gsave
clp
[.354511 .183067 -.06974 .196144 70.3345 45.8672 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.354511 .183067 -.06974 .196144 70.3345 45.8672 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.3813 46.4697 mo
73.3872 46.6152 73.1709 46.7441 72.8984 46.7588 cv
72.626 46.7725 72.4014 46.667 72.396 46.5234 cv
72.3906 46.3779 72.6069 46.248 72.8794 46.2344 cv
73.1509 46.2188 73.376 46.3252 73.3813 46.4697 cv
cp
level3{
gsave
clp
[.437831 -.0231198 .0115599 .306337 72.8877 46.4971 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.437831 -.0231198 .0115599 .306337 72.8877 46.4971 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.4722 46.04 mo
70.502 46.1523 70.3286 46.3154 70.0854 46.4063 cv
69.8438 46.499 69.6235 46.4824 69.5947 46.3701 cv
69.5659 46.2598 69.7393 46.0947 69.9814 46.0039 cv
70.2231 45.9131 70.4443 45.9297 70.4722 46.04 cv
cp
level3{
gsave
clp
[.39055 -.146095 .0607523 .23433 70.0322 46.2041 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.39055 -.146095 .0607523 .23433 70.0322 46.2041 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.6313 46.7061 mo
70.6001 46.7441 70.522 46.7168 70.4556 46.6416 cv
70.3896 46.5674 70.3608 46.4746 70.3911 46.4355 cv
70.4224 46.3965 70.5 46.4248 70.5669 46.5 cv
70.6328 46.5742 70.6621 46.667 70.6313 46.7061 cv
cp
level3{
gsave
clp
[.00105923 .00118806 -.000644127 .000815894 870.664 242.072 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.00105923 .00118806 -.000644127 .000815894 870.664 242.072 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.8491 46.3809 mo
71.8535 46.5068 71.6729 46.6172 71.4443 46.6289 cv
71.2158 46.6416 71.0273 46.5508 71.0229 46.4248 cv
71.0176 46.3008 71.2002 46.1904 71.4277 46.1777 cv
71.6563 46.166 71.8447 46.2568 71.8491 46.3809 cv
cp
level3{
gsave
clp
[.366845 -.0202198 .0101099 .262858 71.4346 46.4053 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.366845 -.0202198 .0101099 .262858 71.4346 46.4053 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.1167 46.2598 mo
72.1167 46.3779 71.9624 46.4766 71.772 46.4766 cv
71.5815 46.4766 71.4268 46.3779 71.4268 46.2598 cv
71.4268 46.1406 71.5815 46.0449 71.772 46.0449 cv
71.9624 46.0449 72.1167 46.1406 72.1167 46.2598 cv
cp
level3{
gsave
clp
[.307603 0 0 .251016 71.7705 46.2598 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307603 0 0 .251016 71.7705 46.2598 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.4321 46.625 mo
70.4185 46.7246 70.2173 46.7695 69.9805 46.7246 cv
69.7446 46.6807 69.5645 46.5645 69.5771 46.4629 cv
69.5908 46.3623 69.792 46.3193 70.0283 46.3623 cv
70.2642 46.4082 70.4448 46.5244 70.4321 46.625 cv
cp
level3{
gsave
clp
[.380055 .0722539 -.0274565 .210981 70.002 46.5449 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.380055 .0722539 -.0274565 .210981 70.002 46.5449 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.3242 47.3359 mo
73.3242 47.4551 73.1782 47.5537 72.9976 47.5537 cv
72.8169 47.5537 72.6709 47.4551 72.6709 47.3359 cv
72.6709 47.2148 72.8169 47.1162 72.9976 47.1162 cv
73.1782 47.1162 73.3242 47.2148 73.3242 47.3359 cv
cp
level3{
gsave
clp
[.291027 0 0 .254436 72.998 47.334 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291027 0 0 .254436 72.998 47.334 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.5156 46.3555 mo
72.5156 46.4766 72.3696 46.5742 72.189 46.5742 cv
72.0078 46.5742 71.8618 46.4766 71.8618 46.3555 cv
71.8618 46.2344 72.0078 46.1357 72.189 46.1357 cv
72.3696 46.1357 72.5156 46.2344 72.5156 46.3555 cv
cp
level3{
gsave
clp
[.291409 0 0 .25477 72.1899 46.3535 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291409 0 0 .25477 72.1899 46.3535 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.0181 46.2949 mo
27.0181 46.4063 26.8921 46.4971 26.7373 46.4971 cv
26.582 46.4971 26.4565 46.4063 26.4565 46.2949 cv
26.4565 46.1826 26.582 46.0918 26.7373 46.0918 cv
26.8921 46.0918 27.0181 46.1826 27.0181 46.2949 cv
cp
level3{
gsave
clp
[.249264 0 0 .236651 26.7358 46.2959 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249264 0 0 .236651 26.7358 46.2959 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.6187 46.2139 mo
27.5874 46.3525 27.2871 46.4033 26.9482 46.3291 cv
26.6084 46.2549 26.3579 46.083 26.3901 45.9443 cv
26.4209 45.8057 26.7207 45.7539 27.0601 45.8281 cv
27.3999 45.9023 27.6504 46.0742 27.6187 46.2139 cv
cp
level3{
gsave
clp
[.54572 .12014 -.0661787 .291186 27.0039 46.0791 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.54572 .12014 -.0661787 .291186 27.0039 46.0791 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.2021 46.5273 mo
29.147 46.4053 29.311 46.2139 29.5674 46.1016 cv
29.8247 45.9883 30.0781 45.9971 30.1333 46.1211 cv
30.1885 46.2441 30.0249 46.4346 29.7671 46.5469 cv
29.5098 46.6602 29.2573 46.6514 29.2021 46.5273 cv
cp
level3{
gsave
clp
[-.41414 .181569 -.116286 -.259092 29.6685 46.3242 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.41414 .181569 -.116286 -.259092 29.6685 46.3242 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.8833 46.0479 mo
28.8501 45.917 29.0454 45.7578 29.3184 45.6914 cv
29.5908 45.624 29.8389 45.6768 29.8721 45.8076 cv
29.9038 45.9375 29.7095 46.0977 29.4365 46.1641 cv
29.1636 46.2314 28.916 46.1787 28.8833 46.0479 cv
cp
level3{
gsave
clp
[-.439529 .107078 -.0693457 -.275343 29.3779 45.9277 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.439529 .107078 -.0693457 -.275343 29.3779 45.9277 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.2051 45.8242 mo
29.2544 45.9834 29.0962 46.1729 28.8525 46.2451 cv
28.6089 46.3174 28.3721 46.2461 28.3228 46.0859 cv
28.2739 45.9248 28.4316 45.7363 28.6763 45.6641 cv
28.9189 45.5918 29.1567 45.6631 29.2051 45.8242 cv
cp
level3{
gsave
clp
[.392467 -.116211 .102959 .338439 28.7627 45.9541 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.392467 -.116211 .102959 .338439 28.7627 45.9541 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.9917 46.1367 mo
28.9688 46.3076 28.6665 46.4092 28.3159 46.3633 cv
27.9648 46.3184 27.6997 46.1426 27.7212 45.9727 cv
27.7441 45.8018 28.0469 45.6992 28.3979 45.7451 cv
28.7485 45.791 29.0142 45.9658 28.9917 46.1367 cv
cp
level3{
gsave
clp
[.564244 .0724436 -.0479556 .361198 28.3564 46.0537 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.564244 .0724436 -.0479556 .361198 28.3564 46.0537 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.0073 46.4111 mo
25.9517 46.2881 26.1162 46.0967 26.3726 45.9854 cv
26.6299 45.8721 26.8838 45.8809 26.939 46.0039 cv
26.9937 46.1279 26.8301 46.3184 26.5728 46.4297 cv
26.3159 46.5439 26.0625 46.5342 26.0073 46.4111 cv
cp
level3{
gsave
clp
[-.414169 .181581 -.116294 -.25911 26.4731 46.208 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.414169 .181581 -.116294 -.25911 26.4731 46.208 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.0522 45.9971 mo
28.1006 46.1582 27.9424 46.3467 27.6987 46.4189 cv
27.4551 46.4912 27.2183 46.4199 27.1689 46.2588 cv
27.1206 46.0986 27.2778 45.9092 27.5225 45.8379 cv
27.7651 45.7646 28.0034 45.8369 28.0522 45.9971 cv
cp
level3{
gsave
clp
[.392766 -.1163 .103037 .338697 27.6099 46.1279 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.392766 -.1163 .103037 .338697 27.6099 46.1279 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.6206 45.9785 mo
27.6206 46.1221 27.4067 46.2383 27.144 46.2383 cv
26.8809 46.2383 26.6685 46.1221 26.6685 45.9785 cv
26.6685 45.835 26.8809 45.7188 27.144 45.7188 cv
27.4067 45.7188 27.6206 45.835 27.6206 45.9785 cv
cp
level3{
gsave
clp
[.42322 0 0 .302883 27.1431 45.9795 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.42322 0 0 .302883 27.1431 45.9795 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.4849 46.3057 mo
29.4849 46.418 29.3594 46.5098 29.2041 46.5098 cv
29.0493 46.5098 28.9243 46.418 28.9243 46.3057 cv
28.9243 46.1943 29.0493 46.1035 29.2041 46.1035 cv
29.3594 46.1035 29.4849 46.1943 29.4849 46.3057 cv
cp
level3{
gsave
clp
[.24922 0 0 .236609 29.2031 46.3076 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.24922 0 0 .236609 29.2031 46.3076 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.6499 46.252 mo
26.6499 46.3633 26.5244 46.4531 26.3696 46.4531 cv
26.2144 46.4531 26.0889 46.3633 26.0889 46.252 cv
26.0889 46.1387 26.2144 46.0479 26.3696 46.0479 cv
26.5244 46.0479 26.6499 46.1387 26.6499 46.252 cv
cp
level3{
gsave
clp
[.249138 0 0 .236531 26.3682 46.251 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249138 0 0 .236531 26.3682 46.251 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.4614 46.4355 mo
28.6616 45.7813 28.9907 44.8379 29.4741 43.8496 cv
30.3789 42.001 31.8618 42.04 31.8618 42.04 cv
31.8618 42.04 30.395 41.6406 29.2979 43.8232 cv
28.7056 45.0029 28.394 45.8789 28.2319 46.4355 cv
28.4614 46.4355 li
cp
level3{
gsave
clp
[-2.81129 5.54425 -4.94621 -2.85602 31.2197 41.6689 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.81129 5.54425 -4.94621 -2.85602 31.2197 41.6689 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
28.0059 46.2764 mo
28.2334 45.916 28.5254 45.5039 28.8882 45.0781 cv
29.978 43.7969 31.1416 43.4697 31.1416 43.4697 cv
31.1416 43.4697 30.0015 43.5498 28.6792 45.0625 cv
28.2622 45.54 27.9595 45.9463 27.7412 46.2764 cv
28.0059 46.2764 li
cp
level3{
gsave
clp
[-2.34474 4.81925 -3.9782 -2.41188 30.355 42.9932 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.34474 4.81925 -3.9782 -2.41188 30.355 42.9932 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.6064 46.1641 mo
26.6201 46.1045 26.6357 46.0439 26.6548 45.9824 cv
26.9141 45.125 27.8521 44.501 27.8521 44.501 cv
27.8521 44.501 26.7798 45.0459 26.439 46.0732 cv
26.4292 46.1045 26.4194 46.1348 26.4102 46.1641 cv
26.6064 46.1641 li
cp
level3{
gsave
clp
[.0639407 2.35684 -3.64212 1.43835 27.1162 44.791 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0639407 2.35684 -3.64212 1.43835 27.1162 44.791 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.126 46.3789 mo
28.0669 46.0234 27.9688 45.6143 27.8086 45.167 cv
27.2729 43.6699 26.0776 42.8311 26.0776 42.8311 cv
26.0776 42.8311 27.3931 43.4785 28.0669 45.2617 cv
28.2319 45.6992 28.3408 46.0693 28.4106 46.3789 cv
28.126 46.3789 li
cp
level3{
gsave
clp
[.399862 4.56763 4.36559 .785463 27.106 43.0156 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.399862 4.56763 4.36559 .785463 27.106 43.0156 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.0801 46.1641 mo
27.8154 45.9727 28.4468 45.9463 28.4468 45.9463 cv
28.4468 45.9463 27.6851 45.9131 26.7598 46.1641 cv
27.0801 46.1641 li
cp
level3{
gsave
clp
[-1.90804 2.23476 -4.50347 -1.73251 27.8818 45.7295 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.90804 2.23476 -4.50347 -1.73251 27.8818 45.7295 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.1812 45.9785 mo
28.8125 45.8389 29.3145 45.8164 29.3145 45.8164 cv
29.3145 45.8164 28.6724 45.7881 27.8516 45.9785 cv
28.1812 45.9785 li
cp
level3{
gsave
clp
[-1.90983 2.23686 -4.5077 -1.73414 28.8159 45.625 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.90983 2.23686 -4.5077 -1.73414 28.8159 45.625 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.5508 45.8457 mo
28.7222 45.5615 28.9492 45.2422 29.2466 44.9082 cv
30.2749 43.751 31.7773 43.334 31.7773 43.334 cv
31.7773 43.334 30.2119 43.5537 28.9487 44.9238 cv
28.6201 45.2803 28.3818 45.5869 28.2085 45.8457 cv
28.5508 45.8457 li
cp
level3{
gsave
clp
[-1.48511 4.19356 -5.17255 -1.18957 30.5376 43.0488 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.48511 4.19356 -5.17255 -1.18957 30.5376 43.0488 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
28.6465 45.5703 mo
29.77 45.4043 30.7788 45.418 30.7788 45.418 cv
30.7788 45.418 29.4917 45.3223 28.0332 45.5703 cv
28.6465 45.5703 li
cp
level3{
gsave
clp
[-2.78503 2.25342 -7.31769 -2.38825 29.8682 45.1211 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.78503 2.25342 -7.31769 -2.38825 29.8682 45.1211 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.3379 46.2168 mo
28.4795 46.1523 28.6313 46.0879 28.7935 46.0234 cv
30.5537 45.3262 32.7749 45.2949 32.7749 45.2949 cv
32.7749 45.2949 30.519 45.1602 28.3711 45.9785 cv
28.1543 46.0605 27.958 46.1406 27.7813 46.2168 cv
28.3379 46.2168 li
cp
level3{
gsave
clp
[-3.24324 3.22164 -8.08207 -2.86411 31.2778 44.7637 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.24324 3.22164 -8.08207 -2.86411 31.2778 44.7637 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.9595 46.3213 mo
27.7983 46.1045 27.6021 45.8789 27.3613 45.6543 cv
26.1909 44.5586 24.3716 44.4814 24.3716 44.4814 cv
24.3716 44.4814 26.2861 44.3057 27.729 45.5898 cv
28.0269 45.8555 28.2568 46.1006 28.4365 46.3213 cv
27.9595 46.3213 li
cp
level3{
gsave
clp
[1.77493 4.83389 7.14095 -4.07296 25.7729 43.6816 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.77493 4.83389 7.14095 -4.07296 25.7729 43.6816 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.3301 46.1484 mo
27.2456 46.0723 27.1504 45.9902 27.0444 45.9053 cv
26.4556 45.4355 25.833 45.248 25.833 45.248 cv
25.833 45.248 26.4419 45.3594 27.1558 45.916 cv
27.2637 46.001 27.3584 46.0781 27.439 46.1484 cv
27.3301 46.1484 li
cp
level3{
gsave
clp
[1.18464 1.62513 1.9771 -.325209 26.2568 45.1777 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.18464 1.62513 1.9771 -.325209 26.2568 45.1777 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.5889 45.9824 mo
27.7466 45.8652 27.9331 45.7412 28.1519 45.6172 cv
29.1416 45.0537 30.3306 44.9668 30.3306 44.9668 cv
30.3306 44.9668 29.1338 44.9326 27.9287 45.5957 cv
27.6709 45.7383 27.4644 45.8662 27.2993 45.9824 cv
27.5889 45.9824 li
cp
level3{
gsave
clp
[-1.82972 2.44836 -4.08631 -1.70351 29.4634 44.6055 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.82972 2.44836 -4.08631 -1.70351 29.4634 44.6055 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.9761 46.2969 mo
26.8921 46.1025 26.7729 45.8828 26.6001 45.6582 cv
26.0503 44.9424 25.1138 44.7705 25.1138 44.7705 cv
25.1138 44.7705 26.1128 44.8018 26.7925 45.6455 cv
26.9961 45.8994 27.1289 46.1172 27.2144 46.2969 cv
26.9761 46.2969 li
cp
level3{
gsave
clp
[.500974 3.70404 2.51855 -1.96845 25.9702 44.1006 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.500974 3.70404 2.51855 -1.96845 25.9702 44.1006 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
28.0293 46.1641 mo
28.083 46.1172 28.1396 46.0703 28.1997 46.0234 cv
29.0815 45.3232 30.1606 45.1484 30.1606 45.1484 cv
30.1606 45.1484 29.0713 45.1875 27.9961 46.0146 cv
27.9292 46.0654 27.8667 46.1152 27.8076 46.1641 cv
28.0293 46.1641 li
cp
level3{
gsave
clp
[-1.54788 2.83013 -3.60139 -1.44232 29.4238 44.8535 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.54788 2.83013 -3.60139 -1.44232 29.4238 44.8535 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.4072 46.1641 mo
27.3887 46.0576 27.3599 45.9463 27.3198 45.832 cv
27.0308 45.0078 26.001 44.5957 26.001 44.5957 cv
26.001 44.5957 27.1772 44.8916 27.5557 45.8711 cv
27.5957 45.9756 27.6284 46.0732 27.6533 46.1641 cv
27.4072 46.1641 li
cp
level3{
gsave
clp
[-.0644971 2.64138 4.26741 .0700937 26.8462 44.6094 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0644971 2.64138 4.26741 .0700937 26.8462 44.6094 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.3745 46.3076 mo
28.2622 46.1748 28.1353 46.0371 27.9907 45.8984 cv
26.8726 44.8232 25.0273 44.4883 25.0273 44.4883 cv
25.0273 44.4883 26.9868 44.6279 28.3682 45.8994 cv
28.5249 46.0439 28.6611 46.1797 28.7798 46.3076 cv
28.3745 46.3076 li
cp
level3{
gsave
clp
[1.46298 4.01718 6.80212 -1.56 26.4536 44.1611 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.46298 4.01718 6.80212 -1.56 26.4536 44.1611 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
28.9961 46.2217 mo
28.9546 46.0889 28.8965 45.9453 28.8169 45.7949 cv
28.3945 44.9951 27.3394 44.5303 27.3394 44.5303 cv
27.3394 44.5303 28.5137 44.8955 29.0493 45.8496 cv
29.1255 45.9863 29.1851 46.1094 29.2324 46.2217 cv
28.9961 46.2217 li
cp
level3{
gsave
clp
[.230979 2.4096 3.95007 .538125 28.2173 44.6494 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.230979 2.4096 3.95007 .538125 28.2173 44.6494 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
27.6533 46.3281 mo
27.4526 46 27.123 45.5283 26.6401 45.0332 cv
25.7354 44.1074 24.7559 43.8779 24.7559 43.8779 cv
24.7559 43.8779 25.7197 43.9277 26.8159 45.0195 cv
27.4092 45.6104 27.7207 46.0508 27.8818 46.3281 cv
27.6533 46.3281 li
cp
level3{
gsave
clp
[1.8428 3.63425 3.24224 -1.87212 25.4839 43.457 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.8428 3.63425 3.24224 -1.87212 25.4839 43.457 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.8916 46.4375 mo
27.8003 46.1885 27.6792 45.9072 27.52 45.6143 cv
26.9707 44.5996 26.1675 44.2344 26.1675 44.2344 cv
26.1675 44.2344 27.0049 44.4268 27.6792 45.6279 cv
27.8545 45.9404 27.9814 46.21 28.0747 46.4375 cv
27.8916 46.4375 li
cp
level3{
gsave
clp
[1.1773 3.32437 4.10045 -.943014 26.688 44.1143 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1773 3.32437 4.10045 -.943014 26.688 44.1143 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
26.8652 46.2383 mo
26.9072 46.1064 26.9648 45.9629 27.0449 45.8115 cv
27.4663 45.0127 28.5225 44.5469 28.5225 44.5469 cv
28.5225 44.5469 27.3477 44.9121 26.812 45.8662 cv
26.7358 46.0029 26.6758 46.126 26.6289 46.2383 cv
26.8652 46.2383 li
cp
level3{
gsave
clp
[-.230971 2.40951 -3.94993 .538105 27.6455 44.667 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.230971 2.40951 -3.94993 .538105 27.6455 44.667 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.2993 46.4541 mo
28.2622 46.1953 28.1851 45.873 28.0332 45.5137 cv
27.6343 44.5693 26.7456 44.04 26.7456 44.04 cv
26.7456 44.04 27.7246 44.4482 28.2251 45.5732 cv
28.3872 45.9375 28.4766 46.2285 28.5225 46.4541 cv
28.2993 46.4541 li
cp
level3{
gsave
clp
[1.77686 0 0 1.77686 26.7456 45.2471 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.77686 0 0 1.77686 26.7456 45.2471 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.9033 46.3975 mo
29.04 46.292 29.1968 46.1816 29.3745 46.0684 cv
30.5947 45.2939 32.3696 45.0107 32.3696 45.0107 cv
32.3696 45.0107 30.5215 45.1621 29.0234 46.0801 cv
28.8379 46.1934 28.6777 46.2988 28.5386 46.3975 cv
28.9033 46.3975 li
cp
level3{
gsave
clp
[-1.76746 2.80282 -6.08258 -.76928 31.0005 44.8379 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.76746 2.80282 -6.08258 -.76928 31.0005 44.8379 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
29.2979 46.46 mo
29.376 46.043 29.4902 45.54 29.6567 45.0068 cv
30.0952 43.5898 30.7329 43.0859 30.7329 43.0859 cv
30.7329 43.0859 30.0698 43.3467 29.5293 45.0254 cv
29.3418 45.6104 29.2222 46.0879 29.147 46.46 cv
29.2979 46.46 li
cp
level3{
gsave
clp
[-.642299 5.16006 -2.19195 -1.51684 30.1968 42.7139 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.642299 5.16006 -2.19195 -1.51684 30.1968 42.7139 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.9512 46.9883 mo
26.9512 47.1006 26.8257 47.1914 26.6714 47.1914 cv
26.5156 47.1914 26.3901 47.1006 26.3901 46.9883 cv
26.3901 46.877 26.5156 46.7861 26.6714 46.7861 cv
26.8257 46.7861 26.9512 46.877 26.9512 46.9883 cv
cp
level3{
gsave
clp
[.249146 0 0 .236538 26.6694 46.9893 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249146 0 0 .236538 26.6694 46.9893 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.4785 47.3145 mo
27.4785 47.4268 27.353 47.5176 27.1978 47.5176 cv
27.0435 47.5176 26.918 47.4268 26.918 47.3145 cv
26.918 47.2021 27.0435 47.1113 27.1978 47.1113 cv
27.353 47.1113 27.4785 47.2021 27.4785 47.3145 cv
cp
level3{
gsave
clp
[.249294 0 0 .236679 27.1968 47.3154 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249294 0 0 .236679 27.1968 47.3154 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.3618 46.2881 mo
27.3618 46.3994 27.2358 46.4912 27.0815 46.4912 cv
26.9263 46.4912 26.8008 46.3994 26.8008 46.2881 cv
26.8008 46.1758 26.9263 46.085 27.0815 46.085 cv
27.2358 46.085 27.3618 46.1758 27.3618 46.2881 cv
cp
level3{
gsave
clp
[.249349 0 0 .236731 27.0801 46.2891 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249349 0 0 .236731 27.0801 46.2891 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.6079 46.8662 mo
27.6079 46.9775 27.4824 47.0684 27.3281 47.0684 cv
27.1729 47.0684 27.0474 46.9775 27.0474 46.8662 cv
27.0474 46.7539 27.1729 46.6621 27.3281 46.6621 cv
27.4824 46.6621 27.6079 46.7539 27.6079 46.8662 cv
cp
level3{
gsave
clp
[.249211 0 0 .236601 27.3262 46.8662 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249211 0 0 .236601 27.3262 46.8662 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.2383 46.8662 mo
28.2383 46.9775 28.1128 47.0684 27.958 47.0684 cv
27.8032 47.0684 27.6777 46.9775 27.6777 46.8662 cv
27.6777 46.7539 27.8032 46.6621 27.958 46.6621 cv
28.1128 46.6621 28.2383 46.7539 28.2383 46.8662 cv
cp
level3{
gsave
clp
[.249223 0 0 .236611 27.9565 46.8662 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249223 0 0 .236611 27.9565 46.8662 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.5073 47.0947 mo
28.5073 47.2061 28.3818 47.2969 28.2266 47.2969 cv
28.0718 47.2969 27.9463 47.2061 27.9463 47.0947 cv
27.9463 46.9824 28.0718 46.8916 28.2266 46.8916 cv
28.3818 46.8916 28.5073 46.9824 28.5073 47.0947 cv
cp
level3{
gsave
clp
[.249132 0 0 .236525 28.2256 47.0947 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249132 0 0 .236525 28.2256 47.0947 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.7275 46.5273 mo
28.6724 46.4053 28.8364 46.2139 29.0928 46.1016 cv
29.3501 45.9883 29.6035 45.9971 29.6597 46.1211 cv
29.7144 46.2441 29.5508 46.4346 29.2935 46.5469 cv
29.0361 46.6602 28.7827 46.6514 28.7275 46.5273 cv
cp
level3{
gsave
clp
[-.414465 .181711 -.116377 -.259296 29.1943 46.3242 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.414465 .181711 -.116377 -.259296 29.1943 46.3242 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.5596 46.5674 mo
28.5596 46.7021 28.3696 46.8115 28.1362 46.8115 cv
27.9028 46.8115 27.7139 46.7021 27.7139 46.5674 cv
27.7139 46.4336 27.9028 46.3242 28.1362 46.3242 cv
28.3696 46.3242 28.5596 46.4336 28.5596 46.5674 cv
cp
level3{
gsave
clp
[.376132 0 0 .284143 28.1367 46.5693 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.376132 0 0 .284143 28.1367 46.5693 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.7563 46.8232 mo
28.686 46.8008 28.6567 46.6279 28.6919 46.4375 cv
28.7271 46.2461 28.814 46.1104 28.8848 46.1318 cv
28.9561 46.1543 28.9849 46.3271 28.9492 46.5176 cv
28.9136 46.709 28.8281 46.8457 28.7563 46.8232 cv
cp
level3{
gsave
clp
[-.0571455 .307157 -.150007 -.0469409 28.8218 46.4775 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0571455 .307157 -.150007 -.0469409 28.8218 46.4775 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.7476 46.7861 mo
29.7808 46.9316 29.6284 47.1201 29.4077 47.2061 cv
29.187 47.293 28.9795 47.2451 28.9463 47.0986 cv
28.9131 46.9531 29.0649 46.7656 29.2861 46.6787 cv
29.5073 46.5918 29.7144 46.6406 29.7476 46.7861 cv
cp
level3{
gsave
clp
[.356031 -.13874 .0714102 .307064 29.3467 46.9414 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.356031 -.13874 .0714102 .307064 29.3467 46.9414 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.6147 46.4971 mo
28.6035 46.5898 28.4312 46.6309 28.228 46.5898 cv
28.0264 46.5488 27.8711 46.4395 27.8823 46.3467 cv
27.894 46.2549 28.0669 46.2129 28.269 46.2549 cv
28.4717 46.2959 28.6265 46.4053 28.6147 46.4971 cv
cp
level3{
gsave
clp
[.32533 .0662898 -.0234564 .19581 28.25 46.4229 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.32533 .0662898 -.0234564 .19581 28.25 46.4229 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.5264 46.584 mo
27.5308 46.7188 27.3452 46.8379 27.1123 46.8516 cv
26.8794 46.8652 26.6865 46.7666 26.6821 46.6328 cv
26.6772 46.499 26.8628 46.3789 27.0957 46.3652 cv
27.3286 46.3525 27.5215 46.4502 27.5264 46.584 cv
cp
level3{
gsave
clp
[.37531 -.0214172 .0101987 .283523 27.1069 46.6094 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.37531 -.0214172 .0101987 .283523 27.1069 46.6094 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.7231 46.3916 mo
28.7471 46.4951 28.5991 46.6475 28.3916 46.7314 cv
28.1836 46.8164 27.9951 46.8018 27.9702 46.6982 cv
27.9453 46.5947 28.0942 46.4434 28.3018 46.3594 cv
28.5088 46.2744 28.6982 46.2891 28.7231 46.3916 cv
cp
level3{
gsave
clp
[.334763 -.135742 .0520516 .217392 28.3481 46.5449 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.334763 -.135742 .0520516 .217392 28.3481 46.5449 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.0557 46.5703 mo
28.0596 46.6855 27.9043 46.7891 27.7085 46.7998 cv
27.5127 46.8115 27.3506 46.7266 27.3472 46.6113 cv
27.3433 46.4961 27.498 46.3926 27.6943 46.3818 cv
27.8892 46.3701 28.0513 46.4551 28.0557 46.5703 cv
cp
level3{
gsave
clp
[.314997 -.0183493 .00815526 .243638 27.7012 46.5898 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.314997 -.0183493 .00815526 .243638 27.7012 46.5898 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.7676 46.5479 mo
27.7676 46.6582 27.6353 46.7471 27.4717 46.7471 cv
27.3081 46.7471 27.1758 46.6582 27.1758 46.5479 cv
27.1758 46.4375 27.3081 46.3486 27.4717 46.3486 cv
27.6353 46.3486 27.7676 46.4375 27.7676 46.5479 cv
cp
level3{
gsave
clp
[.262881 0 0 .232313 27.4727 46.5479 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.262881 0 0 .232313 27.4727 46.5479 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.8452 46.5771 mo
26.8452 46.6885 26.7129 46.7773 26.5493 46.7773 cv
26.3862 46.7773 26.2539 46.6885 26.2539 46.5771 cv
26.2539 46.4668 26.3862 46.3779 26.5493 46.3779 cv
26.7129 46.3779 26.8452 46.4668 26.8452 46.5771 cv
cp
level3{
gsave
clp
[.262996 0 0 .232415 26.5503 46.5781 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.262996 0 0 .232415 26.5503 46.5781 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.1372 46.7021 mo
27.1084 46.7891 26.9331 46.7734 26.7446 46.668 cv
26.5571 46.5635 26.4277 46.4072 26.4556 46.3223 cv
26.4844 46.2354 26.6602 46.252 26.8481 46.3555 cv
27.0361 46.4609 27.166 46.6162 27.1372 46.7021 cv
cp
level3{
gsave
clp
[.303114 .169417 -.0602146 .181664 26.7949 46.5127 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.303114 .169417 -.0602146 .181664 26.7949 46.5127 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.9976 46.3496 mo
26.9688 46.4365 26.793 46.4209 26.605 46.3154 cv
26.417 46.2109 26.2876 46.0547 26.3159 45.9697 cv
26.3447 45.8828 26.52 45.8984 26.7085 46.0039 cv
26.896 46.1084 27.0264 46.2637 26.9976 46.3496 cv
cp
level3{
gsave
clp
[.302875 .169284 -.0601671 .181521 26.6548 46.1602 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.302875 .169284 -.0601671 .181521 26.6548 46.1602 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.2686 46.7188 mo
29.2729 46.8525 29.0879 46.9727 28.8545 46.9854 cv
28.6211 46.999 28.4287 46.9014 28.4243 46.7666 cv
28.4194 46.6328 28.605 46.5127 28.8379 46.499 cv
29.0713 46.4863 29.2642 46.584 29.2686 46.7188 cv
cp
level3{
gsave
clp
[.375351 -.0214195 .0101998 .283553 28.8491 46.7432 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.375351 -.0214195 .0101998 .283553 28.8491 46.7432 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.7749 46.3203 mo
26.7998 46.4229 26.6519 46.5752 26.4438 46.6602 cv
26.2358 46.7451 26.0474 46.7295 26.0225 46.626 cv
25.998 46.5234 26.1465 46.3711 26.3535 46.2861 cv
26.5615 46.2012 26.75 46.2178 26.7749 46.3203 cv
cp
level3{
gsave
clp
[.335271 -.135948 .0521306 .217722 26.3999 46.4727 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.335271 -.135948 .0521306 .217722 26.3999 46.4727 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.9106 46.9365 mo
26.8848 46.9736 26.8174 46.9473 26.7607 46.877 cv
26.7041 46.8076 26.6797 46.7217 26.7056 46.6855 cv
26.7319 46.6504 26.7993 46.6768 26.856 46.7461 cv
26.9121 46.8154 26.937 46.9004 26.9106 46.9365 cv
cp
level3{
gsave
clp
[.0910774 .111544 -.0552605 .0767507 26.8076 46.8105 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0910774 .111544 -.0552605 .0767507 26.8076 46.8105 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.9546 46.6357 mo
27.959 46.752 27.8037 46.8545 27.6079 46.8662 cv
27.4126 46.877 27.251 46.793 27.2471 46.6768 cv
27.2427 46.5605 27.3984 46.459 27.5938 46.4473 cv
27.7896 46.4365 27.9512 46.5205 27.9546 46.6357 cv
cp
level3{
gsave
clp
[.314973 -.0183479 .00815463 .24362 27.6006 46.6563 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.314973 -.0183479 .00815463 .24362 27.6006 46.6563 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.1846 46.5234 mo
28.1846 46.6338 28.0522 46.7236 27.8887 46.7236 cv
27.7261 46.7236 27.5928 46.6338 27.5928 46.5234 cv
27.5928 46.4131 27.7261 46.3242 27.8887 46.3242 cv
28.0522 46.3242 28.1846 46.4131 28.1846 46.5234 cv
cp
level3{
gsave
clp
[.26306 0 0 .232471 27.8896 46.5244 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.26306 0 0 .232471 27.8896 46.5244 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.7407 46.8623 mo
26.729 46.9541 26.5562 46.9961 26.3535 46.9551 cv
26.1509 46.9131 25.9966 46.8047 26.0073 46.7119 cv
26.019 46.6191 26.1919 46.5771 26.3945 46.6191 cv
26.5962 46.6611 26.7515 46.7686 26.7407 46.8623 cv
cp
level3{
gsave
clp
[.325926 .0664113 -.0234994 .196169 26.3755 46.7871 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.325926 .0664113 -.0234994 .196169 26.3755 46.7871 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.2202 47.5215 mo
29.2202 47.6328 29.0947 47.7236 28.9395 47.7236 cv
28.7842 47.7236 28.6597 47.6328 28.6597 47.5215 cv
28.6597 47.4092 28.7842 47.3174 28.9395 47.3174 cv
29.0947 47.3174 29.2202 47.4092 29.2202 47.5215 cv
cp
level3{
gsave
clp
[.249229 0 0 .236617 28.9385 47.5215 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249229 0 0 .236617 28.9385 47.5215 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.5264 46.6113 mo
28.5264 46.7236 28.4014 46.8154 28.2466 46.8154 cv
28.0913 46.8154 27.9658 46.7236 27.9658 46.6113 cv
27.9658 46.5 28.0913 46.4092 28.2466 46.4092 cv
28.4014 46.4092 28.5264 46.5 28.5264 46.6113 cv
cp
level3{
gsave
clp
[.249213 0 0 .236602 28.2446 46.6133 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249213 0 0 .236602 28.2446 46.6133 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.5537 46.207 mo
34.5537 46.3262 34.7305 46.4219 34.9492 46.4219 cv
35.168 46.4219 35.3457 46.3262 35.3457 46.207 cv
35.3457 46.0879 35.168 45.9912 34.9492 45.9912 cv
34.7305 45.9912 34.5537 46.0879 34.5537 46.207 cv
cp
level3{
gsave
clp
[-.351793 0 0 .250938 34.9497 46.207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351793 0 0 .250938 34.9497 46.207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.7046 46.1211 mo
33.7495 46.2676 34.1733 46.3223 34.6519 46.2432 cv
35.1318 46.1641 35.4844 45.9814 35.4404 45.834 cv
35.3955 45.6875 34.9722 45.6318 34.4932 45.7109 cv
34.0142 45.79 33.6611 45.9727 33.7046 46.1211 cv
cp
level3{
gsave
clp
[-.771357 .127539 .0928486 .310175 34.5718 45.9756 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.771357 .127539 .0928486 .310175 34.5718 45.9756 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.4692 46.4541 mo
31.5479 46.3232 31.3164 46.1211 30.9531 46.001 cv
30.5908 45.8818 30.2329 45.8906 30.1543 46.0215 cv
30.0771 46.1523 30.3071 46.3555 30.6709 46.4746 cv
31.0342 46.5947 31.3911 46.585 31.4692 46.4541 cv
cp
level3{
gsave
clp
[.585087 .191966 .165417 -.275695 30.8115 46.2373 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.585087 .191966 .165417 -.275695 30.8115 46.2373 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.9204 45.9453 mo
31.9673 45.8057 31.6909 45.6357 31.3052 45.5664 cv
30.9199 45.4941 30.5703 45.5498 30.5234 45.6885 cv
30.478 45.8281 30.7529 45.9971 31.1392 46.0674 cv
31.5244 46.1387 31.874 46.084 31.9204 45.9453 cv
cp
level3{
gsave
clp
[.620118 .114232 .0979133 -.29272 31.2231 45.8164 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.620118 .114232 .0979133 -.29272 31.2231 45.8164 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.4648 45.707 mo
31.3965 45.876 31.6191 46.0771 31.9634 46.1543 cv
32.3076 46.2305 32.6421 46.1543 32.7114 45.9844 cv
32.7803 45.8135 32.5571 45.6133 32.2124 45.5371 cv
31.8687 45.46 31.5342 45.5361 31.4648 45.707 cv
cp
level3{
gsave
clp
[-.55412 -.123478 -.145928 .360229 32.0879 45.8467 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.55412 -.123478 -.145928 .360229 32.0879 45.8467 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.7666 46.0381 mo
31.7993 46.2197 32.2256 46.3281 32.7207 46.2793 cv
33.2163 46.2314 33.5913 46.0449 33.5596 45.8643 cv
33.5269 45.6826 33.0996 45.5742 32.605 45.623 cv
32.1099 45.6709 31.7349 45.8574 31.7666 46.0381 cv
cp
level3{
gsave
clp
[-.796254 .0775837 .0673753 .382814 32.6636 45.9502 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.796254 .0775837 .0673753 .382814 32.6636 45.9502 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.9795 46.3301 mo
36.0576 46.1992 35.8262 45.9971 35.4639 45.877 cv
35.1006 45.7578 34.7422 45.7676 34.6641 45.8975 cv
34.5869 46.0283 34.8179 46.2314 35.1807 46.3506 cv
35.5439 46.4697 35.9019 46.4609 35.9795 46.3301 cv
cp
level3{
gsave
clp
[.584889 .191901 .165361 -.275602 35.3218 46.1133 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.584889 .191901 .165361 -.275602 35.3218 46.1133 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.0938 45.8906 mo
33.0249 46.0605 33.248 46.2617 33.5913 46.3389 cv
33.9355 46.415 34.27 46.3389 34.3394 46.168 cv
34.4082 45.998 34.1851 45.7979 33.8408 45.7217 cv
33.4976 45.6445 33.1626 45.7207 33.0938 45.8906 cv
cp
level3{
gsave
clp
[-.55394 -.123438 -.145881 .360112 33.7158 46.0313 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.55394 -.123438 -.145881 .360112 33.7158 46.0313 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.7026 45.8701 mo
33.7026 46.0234 34.0034 46.1465 34.3745 46.1465 cv
34.7466 46.1465 35.0469 46.0234 35.0469 45.8701 cv
35.0469 45.7178 34.7466 45.5947 34.3745 45.5947 cv
34.0034 45.5947 33.7026 45.7178 33.7026 45.8701 cv
cp
level3{
gsave
clp
[-.597496 0 0 .321179 34.3755 45.8711 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.597496 0 0 .321179 34.3755 45.8711 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.0708 46.2188 mo
31.0708 46.3379 31.2476 46.4336 31.4663 46.4336 cv
31.6851 46.4336 31.8618 46.3379 31.8618 46.2188 cv
31.8618 46.0996 31.6851 46.0039 31.4663 46.0039 cv
31.2476 46.0039 31.0708 46.0996 31.0708 46.2188 cv
cp
level3{
gsave
clp
[-.351177 0 0 .250498 31.4663 46.2188 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351177 0 0 .250498 31.4663 46.2188 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.0728 46.1602 mo
35.0728 46.2793 35.2495 46.376 35.4683 46.376 cv
35.687 46.376 35.8647 46.2793 35.8647 46.1602 cv
35.8647 46.041 35.687 45.9453 35.4683 45.9453 cv
35.2495 45.9453 35.0728 46.041 35.0728 46.1602 cv
cp
level3{
gsave
clp
[-.351793 0 0 .250938 35.4688 46.1611 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351793 0 0 .250938 35.4688 46.1611 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.5156 46.3555 mo
32.2324 45.6611 31.7671 44.6602 31.085 43.6104 cv
29.8081 41.6465 28.4248 41.1611 28.4248 41.1611 cv
28.4248 41.1611 29.7852 41.2646 31.333 43.582 cv
32.1714 44.835 32.6108 45.7656 32.8384 46.3555 cv
32.5156 46.3555 li
cp
level3{
gsave
clp
[3.35343 6.61342 5.90006 -3.40678 29.1333 40.751 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.35343 6.61342 5.90006 -3.40678 29.1333 40.751 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
33.1577 46.1875 mo
32.8369 45.8057 32.4238 45.3662 31.9126 44.915 cv
30.374 43.5537 28.7314 43.2061 28.7314 43.2061 cv
28.7314 43.2061 30.3403 43.292 32.2075 44.8984 cv
32.7964 45.4053 33.2236 45.8359 33.5322 46.1875 cv
33.1577 46.1875 li
cp
level3{
gsave
clp
[2.83786 5.83278 4.81485 -2.91913 30.0249 42.4229 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.83786 5.83278 4.81485 -2.91913 30.0249 42.4229 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
35.1338 46.0674 mo
35.1147 46.0049 35.0933 45.9404 35.0659 45.875 cv
34.6997 44.9648 33.3755 44.3008 33.3755 44.3008 cv
33.3755 44.3008 34.8896 44.8799 35.3701 45.9707 cv
35.3843 46.0039 35.3989 46.0361 35.4116 46.0674 cv
35.1338 46.0674 li
cp
level3{
gsave
clp
[-.058536 2.15762 3.33426 1.31678 34.4063 44.708 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.058536 2.15762 3.33426 1.31678 34.4063 44.708 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.9883 46.2959 mo
33.0718 45.9199 33.2109 45.4834 33.437 45.0088 cv
34.1929 43.4199 35.8804 42.5293 35.8804 42.5293 cv
35.8804 42.5293 34.0234 43.2158 33.0718 45.1094 cv
32.8384 45.5732 32.6855 45.9668 32.5864 46.2959 cv
32.9883 46.2959 li
cp
level3{
gsave
clp
[-.40828 4.66379 -4.45749 .801998 34.3755 42.7998 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.40828 4.66379 -4.45749 .801998 34.3755 42.7998 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.4658 46.0674 mo
33.4272 45.8652 32.5352 45.8359 32.5352 45.8359 cv
32.5352 45.8359 33.6108 45.8008 34.9175 46.0674 cv
34.4658 46.0674 li
cp
level3{
gsave
clp
[2.52699 2.9597 5.96437 -2.29453 33.3574 45.5195 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.52699 2.9597 5.96437 -2.29453 33.3574 45.5195 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.9106 45.8701 mo
32.021 45.7217 31.3105 45.6992 31.3105 45.6992 cv
31.3105 45.6992 32.2168 45.6689 33.3765 45.8701 cv
32.9106 45.8701 li
cp
level3{
gsave
clp
[2.54442 2.98012 6.00551 -2.31036 32.0332 45.4219 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54442 2.98012 6.00551 -2.31036 32.0332 45.4219 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.3892 45.7305 mo
32.147 45.4287 31.8271 45.0889 31.4072 44.7344 cv
29.9546 43.5059 27.8335 43.0625 27.8335 43.0625 cv
27.8335 43.0625 30.0439 43.2969 31.8271 44.751 cv
32.291 45.1289 32.627 45.4551 32.8721 45.7305 cv
32.3892 45.7305 li
cp
level3{
gsave
clp
[1.70538 4.81555 5.93974 -1.36601 29.7261 42.6279 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.70538 4.81555 5.93974 -1.36601 29.7261 42.6279 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
32.2539 45.4365 mo
30.6675 45.2607 29.2441 45.2754 29.2441 45.2754 cv
29.2441 45.2754 31.0605 45.1748 33.1201 45.4365 cv
32.2539 45.4365 li
cp
level3{
gsave
clp
[3.78833 3.0652 9.95385 -3.2486 30.5557 44.8486 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.78833 3.0652 9.95385 -3.2486 30.5557 44.8486 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.689 46.124 mo
32.4893 46.0557 32.2749 45.9873 32.0464 45.9189 cv
29.561 45.1777 26.4263 45.1455 26.4263 45.1455 cv
26.4263 45.1455 29.6104 45.0029 32.6426 45.8701 cv
32.9492 45.958 33.2261 46.043 33.4746 46.124 cv
32.689 46.124 li
cp
level3{
gsave
clp
[4.18888 4.16097 10.4386 -3.6992 28.6606 44.3535 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.18888 4.16097 10.4386 -3.6992 28.6606 44.3535 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.2236 46.2344 mo
33.4507 46.0049 33.729 45.7646 34.0679 45.5264 cv
35.7212 44.3633 38.2896 44.2813 38.2896 44.2813 cv
38.2896 44.2813 35.5854 44.0947 33.5498 45.458 cv
33.1284 45.7402 32.8032 46 32.5513 46.2344 cv
33.2236 46.2344 li
cp
level3{
gsave
clp
[-2.23068 6.07509 -8.97453 -5.11878 36.2129 43.0977 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.23068 6.07509 -8.97453 -5.11878 36.2129 43.0977 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.1128 46.0518 mo
34.2314 45.9697 34.3662 45.8828 34.5156 45.793 cv
35.3467 45.2949 36.2261 45.0957 36.2261 45.0957 cv
36.2261 45.0957 35.3652 45.2139 34.3594 45.8047 cv
34.2056 45.8945 34.0732 45.9766 33.9575 46.0518 cv
34.1128 46.0518 li
cp
level3{
gsave
clp
[-1.35214 1.8549 -2.25664 -.37119 35.5234 44.9805 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.35214 1.8549 -2.25664 -.37119 35.5234 44.9805 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.7466 45.875 mo
33.5249 45.751 33.2607 45.6191 32.9526 45.4873 cv
31.5557 44.8887 29.876 44.7969 29.876 44.7969 cv
29.876 44.7969 31.5654 44.7607 33.2666 45.4639 cv
33.6313 45.6152 33.9233 45.752 34.1563 45.875 cv
33.7466 45.875 li
cp
level3{
gsave
clp
[2.29792 3.07488 5.13196 -2.13943 31.2007 44.2451 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.29792 3.07488 5.13196 -2.13943 31.2007 44.2451 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.6118 46.209 mo
34.73 46.0029 34.8994 45.7695 35.1431 45.5303 cv
35.9199 44.7695 37.2417 44.5879 37.2417 44.5879 cv
37.2417 44.5879 35.8306 44.6201 34.8721 45.5166 cv
34.583 45.7871 34.3955 46.0176 34.2754 46.209 cv
34.6118 46.209 li
cp
level3{
gsave
clp
[-.622941 4.60582 -3.13172 -2.44769 35.9995 43.6172 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.622941 4.60582 -3.13172 -2.44769 35.9995 43.6172 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
33.1245 46.0674 mo
33.0488 46.0186 32.9692 45.9688 32.8853 45.9199 cv
31.6401 45.1748 30.1167 44.9893 30.1167 44.9893 cv
30.1167 44.9893 31.6548 45.0313 33.1714 45.9092 cv
33.2661 45.9629 33.3545 46.0166 33.4385 46.0674 cv
33.1245 46.0674 li
cp
level3{
gsave
clp
[1.90402 3.48129 4.43001 -1.77417 31.2373 44.54 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.90402 3.48129 4.43001 -1.77417 31.2373 44.54 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.0029 46.0674 mo
34.0293 45.9551 34.0703 45.8369 34.127 45.7148 cv
34.5347 44.8398 35.9878 44.4023 35.9878 44.4023 cv
35.9878 44.4023 34.3276 44.7168 33.7935 45.7568 cv
33.7368 45.8672 33.6914 45.9707 33.6563 46.0674 cv
34.0029 46.0674 li
cp
level3{
gsave
clp
[.0681374 2.79046 -4.50827 .0740499 34.8022 44.4219 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0681374 2.79046 -4.50827 .0740499 34.8022 44.4219 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.6382 46.2197 mo
32.7964 46.0791 32.9756 45.9326 33.1797 45.7852 cv
34.7578 44.6436 37.3628 44.2881 37.3628 44.2881 cv
37.3628 44.2881 34.5967 44.4365 32.6465 45.7861 cv
32.4253 45.9395 32.2334 46.084 32.0654 46.2197 cv
32.6382 46.2197 li
cp
level3{
gsave
clp
[-1.71769 4.71659 -7.98639 -1.8316 35.2427 43.8018 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.71769 4.71659 -7.98639 -1.8316 35.2427 43.8018 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
31.7607 46.1289 mo
31.8188 45.9873 31.9004 45.8359 32.0142 45.6748 cv
32.6094 44.8271 34.0991 44.333 34.0991 44.333 cv
34.0991 44.333 32.4414 44.7207 31.6851 45.7344 cv
31.5776 45.8789 31.4927 46.0098 31.4268 46.1289 cv
31.7607 46.1289 li
cp
level3{
gsave
clp
[-.232816 2.42876 -3.98148 .542404 32.832 44.5059 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.232816 2.42876 -3.98148 .542404 32.832 44.5059 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
33.6558 46.2422 mo
33.9395 45.8936 34.4048 45.3926 35.0864 44.8682 cv
36.3633 43.8848 37.7461 43.6406 37.7461 43.6406 cv
37.7461 43.6406 36.3867 43.6934 34.8379 44.8525 cv
34.0015 45.4805 33.561 45.9463 33.3335 46.2422 cv
33.6558 46.2422 li
cp
level3{
gsave
clp
[-2.23013 4.39813 -3.92372 -2.26562 36.5498 42.9492 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.23013 4.39813 -3.92372 -2.26562 36.5498 42.9492 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.3188 46.3584 mo
33.4482 46.0938 33.6191 45.7949 33.8442 45.4834 cv
34.6196 44.4072 35.7529 44.0186 35.7529 44.0186 cv
35.7529 44.0186 34.5718 44.2227 33.6191 45.499 cv
33.3721 45.8301 33.1919 46.1162 33.061 46.3584 cv
33.3188 46.3584 li
cp
level3{
gsave
clp
[-1.31864 3.72349 -4.59274 -1.05623 34.8911 43.8203 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.31864 3.72349 -4.59274 -1.05623 34.8911 43.8203 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
34.7686 46.1475 mo
34.7104 46.0059 34.6279 45.8535 34.5151 45.6934 cv
33.9194 44.8447 32.4292 44.3516 32.4292 44.3516 cv
32.4292 44.3516 34.0874 44.7393 34.8433 45.752 cv
34.9517 45.8965 35.0356 46.0273 35.1021 46.1475 cv
34.7686 46.1475 li
cp
level3{
gsave
clp
[.232795 2.42854 3.98112 .542355 33.6958 44.5244 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.232795 2.42854 3.98112 .542355 33.6958 44.5244 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.7441 46.376 mo
32.7964 46.1006 32.9053 45.7578 33.1201 45.376 cv
33.6831 44.374 34.938 43.8125 34.938 43.8125 cv
34.938 43.8125 33.5557 44.2461 32.8491 45.4395 cv
32.6191 45.8281 32.4937 46.1357 32.4287 46.376 cv
32.7441 46.376 li
cp
level3{
gsave
clp
[-2.50879 0 0 2.50879 34.9375 45.0938 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.50879 0 0 2.50879 34.9375 45.0938 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
31.8916 46.3154 mo
31.6978 46.2031 31.4771 46.0859 31.2256 45.9668 cv
29.5029 45.1436 26.998 44.8428 26.998 44.8428 cv
26.998 44.8428 29.6074 45.0039 31.7222 45.9785 cv
31.9824 46.0986 32.209 46.2109 32.4067 46.3154 cv
31.8916 46.3154 li
cp
level3{
gsave
clp
[2.03708 3.23037 7.01043 -.886628 29.0723 44.5801 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.03708 3.23037 7.01043 -.886628 29.0723 44.5801 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
31.3345 46.3828 mo
31.2231 45.9395 31.062 45.4053 30.8286 44.8398 cv
30.2075 43.334 29.3081 42.7998 29.3081 42.7998 cv
29.3081 42.7998 30.2446 43.0762 31.0063 44.8584 cv
31.272 45.4795 31.4404 45.9863 31.5474 46.3828 cv
31.3345 46.3828 li
cp
level3{
gsave
clp
[.737344 5.92362 2.5163 -1.7413 30.1328 42.2275 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.737344 5.92362 2.5163 -1.7413 30.1328 42.2275 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.6465 46.9434 mo
34.6465 47.0625 34.8247 47.1582 35.0425 47.1582 cv
35.2617 47.1582 35.439 47.0625 35.439 46.9434 cv
35.439 46.8242 35.2617 46.7275 35.0425 46.7275 cv
34.8247 46.7275 34.6465 46.8242 34.6465 46.9434 cv
cp
level3{
gsave
clp
[-.351934 0 0 .251038 35.043 46.9434 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351934 0 0 .251038 35.043 46.9434 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.9023 47.2891 mo
33.9023 47.4082 34.0801 47.5049 34.2988 47.5049 cv
34.5171 47.5049 34.6953 47.4082 34.6953 47.2891 cv
34.6953 47.1709 34.5171 47.0742 34.2988 47.0742 cv
34.0801 47.0742 33.9023 47.1709 33.9023 47.2891 cv
cp
level3{
gsave
clp
[-.352051 0 0 .251121 34.2988 47.29 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352051 0 0 .251121 34.2988 47.29 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.0674 46.1992 mo
34.0674 46.3184 34.2451 46.415 34.4634 46.415 cv
34.6821 46.415 34.8594 46.3184 34.8594 46.1992 cv
34.8594 46.0801 34.6821 45.9834 34.4634 45.9834 cv
34.2451 45.9834 34.0674 46.0801 34.0674 46.1992 cv
cp
level3{
gsave
clp
[-.352087 0 0 .251147 34.4634 46.1992 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352087 0 0 .251147 34.4634 46.1992 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.7197 46.8125 mo
33.7197 46.9316 33.897 47.0283 34.1157 47.0283 cv
34.3345 47.0283 34.5122 46.9316 34.5122 46.8125 cv
34.5122 46.6943 34.3345 46.5977 34.1157 46.5977 cv
33.897 46.5977 33.7197 46.6943 33.7197 46.8125 cv
cp
level3{
gsave
clp
[-.351922 0 0 .251029 34.1167 46.8135 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351922 0 0 .251029 34.1167 46.8135 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.8301 46.8125 mo
32.8301 46.9316 33.0073 47.0283 33.2261 47.0283 cv
33.4448 47.0283 33.6226 46.9316 33.6226 46.8125 cv
33.6226 46.6943 33.4448 46.5977 33.2261 46.5977 cv
33.0073 46.5977 32.8301 46.6943 32.8301 46.8125 cv
cp
level3{
gsave
clp
[-.351922 0 0 .251029 33.2271 46.8135 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351922 0 0 .251029 33.2271 46.8135 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.4507 47.0547 mo
32.4507 47.1748 32.6274 47.2705 32.8462 47.2705 cv
33.0649 47.2705 33.2427 47.1748 33.2427 47.0547 cv
33.2427 46.9365 33.0649 46.8398 32.8462 46.8398 cv
32.6274 46.8398 32.4507 46.9365 32.4507 47.0547 cv
cp
level3{
gsave
clp
[-.351793 0 0 .250938 32.8467 47.0557 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351793 0 0 .250938 32.8467 47.0557 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.1396 46.4541 mo
32.2173 46.3232 31.9854 46.1211 31.6235 46.001 cv
31.2603 45.8818 30.9019 45.8906 30.8237 46.0215 cv
30.7461 46.1523 30.9766 46.3555 31.3408 46.4746 cv
31.7036 46.5947 32.061 46.585 32.1396 46.4541 cv
cp
level3{
gsave
clp
[.585391 .192065 .165503 -.275839 31.4814 46.2373 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.585391 .192065 .165503 -.275839 31.4814 46.2373 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.377 46.4971 mo
32.377 46.6387 32.644 46.7559 32.9741 46.7559 cv
33.3032 46.7559 33.5708 46.6387 33.5708 46.4971 cv
33.5708 46.3535 33.3032 46.2383 32.9741 46.2383 cv
32.644 46.2383 32.377 46.3535 32.377 46.4971 cv
cp
level3{
gsave
clp
[-.530765 0 0 .301687 32.9736 46.4961 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.530765 0 0 .301687 32.9736 46.4961 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.0986 46.7676 mo
32.1987 46.7432 32.2393 46.5605 32.1895 46.3584 cv
32.1401 46.1553 32.0186 46.0098 31.917 46.0332 cv
31.8164 46.0576 31.7759 46.2412 31.8257 46.4434 cv
31.8765 46.6455 31.9976 46.791 32.0986 46.7676 cv
cp
level3{
gsave
clp
[.079734 .326091 .212624 -.0500893 32.0073 46.4023 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.079734 .326091 .212624 -.0500893 32.0073 46.4023 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.6992 46.7285 mo
30.6523 46.8828 30.8672 47.082 31.1787 47.1748 cv
31.4912 47.2656 31.7832 47.2158 31.8311 47.0605 cv
31.8779 46.9053 31.6631 46.7061 31.3506 46.6143 cv
31.0386 46.5225 30.7466 46.5742 30.6992 46.7285 cv
cp
level3{
gsave
clp
[-.502505 -.148096 -.100092 .326832 31.2651 46.8936 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.502505 -.148096 -.100092 .326832 31.2651 46.8936 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.2983 46.4219 mo
32.3145 46.5205 32.5586 46.5645 32.8438 46.5205 cv
33.1299 46.4766 33.3486 46.3613 33.3325 46.2617 cv
33.3169 46.1641 33.0723 46.1201 32.7871 46.1641 cv
32.501 46.208 32.2817 46.3232 32.2983 46.4219 cv
cp
level3{
gsave
clp
[-.458743 .0703406 .0336411 .207963 32.8159 46.3428 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.458743 .0703406 .0336411 .207963 32.8159 46.3428 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.8354 46.5137 mo
33.8291 46.6563 34.0898 46.7832 34.4199 46.7979 cv
34.749 46.8125 35.021 46.708 35.0273 46.5654 cv
35.0342 46.4229 34.7725 46.2959 34.4434 46.2813 cv
34.1143 46.2676 33.8418 46.3711 33.8354 46.5137 cv
cp
level3{
gsave
clp
[-.529816 -.0224585 -.0142918 .301148 34.4316 46.5391 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.529816 -.0224585 -.0142918 .301148 34.4316 46.5391 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.1465 46.3096 mo
32.1108 46.4199 32.3203 46.5811 32.6138 46.6709 cv
32.9072 46.7607 33.1738 46.7441 33.2085 46.6348 cv
33.2432 46.5254 33.0337 46.3633 32.7412 46.2744 cv
32.4473 46.1846 32.1802 46.2002 32.1465 46.3096 cv
cp
level3{
gsave
clp
[-.47209 -.143768 -.0744332 .231457 32.6787 46.4727 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.47209 -.143768 -.0744332 .231457 32.6787 46.4727 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.0884 46.499 mo
33.083 46.6211 33.3018 46.7314 33.5786 46.7432 cv
33.8545 46.7559 34.0825 46.665 34.0884 46.543 cv
34.0938 46.4199 33.875 46.3105 33.5981 46.2988 cv
33.3218 46.2871 33.0942 46.376 33.0884 46.499 cv
cp
level3{
gsave
clp
[-.444319 -.0193625 -.012229 .258846 33.5884 46.5225 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.444319 -.0193625 -.012229 .258846 33.5884 46.5225 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.4946 46.4746 mo
33.4946 46.5918 33.6812 46.6875 33.9131 46.6875 cv
34.1431 46.6875 34.3306 46.5918 34.3306 46.4746 cv
34.3306 46.3584 34.1431 46.2627 33.9131 46.2627 cv
33.6812 46.2627 33.4946 46.3584 33.4946 46.4746 cv
cp
level3{
gsave
clp
[-.372009 0 0 .247325 33.9126 46.4736 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.372009 0 0 .247325 33.9126 46.4736 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.7964 46.5068 mo
34.7964 46.624 34.9834 46.7188 35.2139 46.7188 cv
35.4448 46.7188 35.6318 46.624 35.6318 46.5068 cv
35.6318 46.3896 35.4448 46.2949 35.2139 46.2949 cv
34.9834 46.2949 34.7964 46.3896 34.7964 46.5068 cv
cp
level3{
gsave
clp
[-.371549 0 0 .247019 35.2144 46.5049 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.371549 0 0 .247019 35.2144 46.5049 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.3843 46.6396 mo
34.4248 46.7314 34.6724 46.7148 34.938 46.6035 cv
35.2036 46.4912 35.3867 46.3262 35.3467 46.2354 cv
35.3062 46.1436 35.0581 46.1602 34.7925 46.2715 cv
34.5273 46.3828 34.3442 46.5479 34.3843 46.6396 cv
cp
level3{
gsave
clp
[-.428292 .179903 .0848407 .193191 34.8633 46.4385 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.428292 .179903 .0848407 .193191 34.8633 46.4385 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.5825 46.2656 mo
34.6226 46.3564 34.8706 46.3408 35.1362 46.2285 cv
35.4019 46.1172 35.585 45.9521 35.5439 45.8604 cv
35.5039 45.7695 35.2563 45.7852 34.9902 45.8965 cv
34.7246 46.0088 34.5415 46.1738 34.5825 46.2656 cv
cp
level3{
gsave
clp
[-.428227 .179876 .0848277 .193162 35.061 46.0645 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.428227 .179876 .0848277 .193162 35.061 46.0645 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.3755 46.6563 mo
31.3696 46.7988 31.6304 46.9258 31.9604 46.9404 cv
32.2896 46.9541 32.5615 46.8506 32.5679 46.708 cv
32.5747 46.5654 32.313 46.4375 31.9829 46.4229 cv
31.6538 46.4102 31.3823 46.5137 31.3755 46.6563 cv
cp
level3{
gsave
clp
[-.53028 -.0224782 -.0143043 .301412 31.9717 46.6807 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.53028 -.0224782 -.0143043 .301412 31.9717 46.6807 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.8965 46.2344 mo
34.8608 46.3428 35.0703 46.5049 35.3638 46.5947 cv
35.6572 46.6846 35.9238 46.668 35.9585 46.5586 cv
35.9932 46.4492 35.7837 46.2871 35.4902 46.1982 cv
35.1973 46.1074 34.9312 46.124 34.8965 46.2344 cv
cp
level3{
gsave
clp
[-.471882 -.143705 -.0744004 .231355 35.4287 46.3965 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.471882 -.143705 -.0744004 .231355 35.4287 46.3965 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.7041 46.8887 mo
34.7422 46.9268 34.8359 46.8984 34.916 46.8252 cv
34.9961 46.752 35.0308 46.6611 34.9941 46.6221 cv
34.957 46.584 34.8623 46.6123 34.7822 46.6855 cv
34.7026 46.7588 34.667 46.8496 34.7041 46.8887 cv
cp
level3{
gsave
clp
[-.128661 .11845 .0786263 .0816897 34.8501 46.7559 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.128661 .11845 .0786263 .0816897 34.8501 46.7559 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.2305 46.5684 mo
33.2246 46.6914 33.4438 46.8008 33.7197 46.8125 cv
33.9961 46.8252 34.2246 46.7354 34.23 46.6123 cv
34.2358 46.4902 34.0156 46.3809 33.7397 46.3691 cv
33.4634 46.3564 33.2358 46.4463 33.2305 46.5684 cv
cp
level3{
gsave
clp
[-.443831 -.0193412 -.0122155 .258562 33.73 46.5918 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.443831 -.0193412 -.0122155 .258562 33.73 46.5918 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.9058 46.4492 mo
32.9058 46.5664 33.0928 46.6611 33.3237 46.6611 cv
33.5537 46.6611 33.7412 46.5664 33.7412 46.4492 cv
33.7412 46.332 33.5537 46.2373 33.3237 46.2373 cv
33.0928 46.2373 32.9058 46.332 32.9058 46.4492 cv
cp
level3{
gsave
clp
[-.371556 0 0 .247023 33.3237 46.4473 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.371556 0 0 .247023 33.3237 46.4473 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.9448 46.8096 mo
34.9604 46.9063 35.2051 46.9512 35.4912 46.9072 cv
35.7769 46.8633 35.9946 46.748 35.9795 46.6494 cv
35.9629 46.5508 35.7192 46.5068 35.4336 46.5508 cv
35.1475 46.5947 34.9287 46.71 34.9448 46.8096 cv
cp
level3{
gsave
clp
[-.45891 .0703662 .0336534 .208039 35.4624 46.7295 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.45891 .0703662 .0336534 .208039 35.4624 46.7295 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.4443 47.5078 mo
31.4443 47.627 31.6216 47.7236 31.8398 47.7236 cv
32.0586 47.7236 32.2363 47.627 32.2363 47.5078 cv
32.2363 47.3896 32.0586 47.293 31.8398 47.293 cv
31.6216 47.293 31.4443 47.3896 31.4443 47.5078 cv
cp
level3{
gsave
clp
[-.351793 0 0 .250938 31.8408 47.5088 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351793 0 0 .250938 31.8408 47.5088 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.4233 46.5439 mo
32.4233 46.6621 32.6001 46.7588 32.8188 46.7588 cv
33.0376 46.7588 33.2144 46.6621 33.2144 46.5439 cv
33.2144 46.4238 33.0376 46.3281 32.8188 46.3281 cv
32.6001 46.3281 32.4233 46.4238 32.4233 46.5439 cv
cp
level3{
gsave
clp
[-.351471 0 0 .250708 32.8188 46.5439 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351471 0 0 .250708 32.8188 46.5439 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.4248 46.1074 mo
39.4248 46.208 39.6118 46.29 39.8418 46.29 cv
40.0718 46.29 40.2588 46.208 40.2588 46.1074 cv
40.2588 46.0059 40.0718 45.9229 39.8418 45.9229 cv
39.6118 45.9229 39.4248 46.0059 39.4248 46.1074 cv
cp
level3{
gsave
clp
[-.370858 0 0 .213989 39.8418 46.1055 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.370858 0 0 .213989 39.8418 46.1055 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.5322 46.0332 mo
38.5791 46.1582 39.0239 46.2051 39.5288 46.1377 cv
40.0332 46.0713 40.4048 45.915 40.3584 45.7891 cv
40.3115 45.6641 39.8662 45.6172 39.3613 45.6846 cv
38.8574 45.752 38.4858 45.9072 38.5322 46.0332 cv
cp
level3{
gsave
clp
[-.812198 .108583 .0984482 .264941 39.4453 45.9102 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.812198 .108583 .0984482 .264941 39.4453 45.9102 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.1792 46.3184 mo
36.2627 46.2061 36.0181 46.0332 35.6372 45.9316 cv
35.2549 45.8291 34.8789 45.8379 34.7964 45.9492 cv
34.7148 46.0605 34.9575 46.2334 35.3398 46.335 cv
35.7217 46.4375 36.0977 46.4297 36.1792 46.3184 cv
cp
level3{
gsave
clp
[.615633 .163686 .173826 -.234665 35.4893 46.1318 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.615633 .163686 .173826 -.234665 35.4893 46.1318 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.6538 45.8838 mo
36.7031 45.7646 36.4126 45.6211 36.0068 45.5605 cv
35.6021 45.5 35.2339 45.5469 35.1846 45.665 cv
35.1362 45.7842 35.4253 45.9287 35.832 45.9893 cv
36.2378 46.0498 36.6055 46.002 36.6538 45.8838 cv
cp
level3{
gsave
clp
[.653322 .0970566 .102851 -.24916 35.9194 45.7744 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.653322 .0970566 .102851 -.24916 35.9194 45.7744 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.1748 45.6807 mo
36.1021 45.8252 36.3369 45.9971 36.6997 46.0625 cv
37.0615 46.1279 37.4141 46.0635 37.4868 45.918 cv
37.5591 45.7715 37.3242 45.6006 36.9614 45.5361 cv
36.6001 45.4707 36.2476 45.5352 36.1748 45.6807 cv
cp
level3{
gsave
clp
[-.58338 -.105674 -.153445 .30689 36.8311 45.7998 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.58338 -.105674 -.153445 .30689 36.8311 45.7998 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.4927 45.9629 mo
36.5259 46.1182 36.9751 46.2109 37.4966 46.1689 cv
38.0176 46.1279 38.4126 45.9697 38.3794 45.8154 cv
38.3452 45.6602 37.895 45.5684 37.3745 45.6094 cv
36.854 45.6504 36.4585 45.8086 36.4927 45.9629 cv
cp
level3{
gsave
clp
[-.837042 .0665007 .0708377 .326721 37.437 45.8896 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.837042 .0665007 .0708377 .326721 37.437 45.8896 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.9258 46.2119 mo
41.0078 46.1006 40.7646 45.9277 40.3828 45.8262 cv
40.0005 45.7246 39.624 45.7324 39.5415 45.8438 cv
39.46 45.9551 39.7026 46.1279 40.0854 46.2295 cv
40.4673 46.332 40.8442 46.3242 40.9258 46.2119 cv
cp
level3{
gsave
clp
[.615815 .163734 .173877 -.234734 40.2344 46.0264 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.615815 .163734 .173877 -.234734 40.2344 46.0264 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.8882 45.8379 mo
37.8159 45.9834 38.0513 46.1543 38.4126 46.2188 cv
38.7749 46.2852 39.127 46.2197 39.2002 46.0742 cv
39.272 45.9297 39.0376 45.7578 38.6753 45.6934 cv
38.3135 45.627 37.9609 45.6924 37.8882 45.8379 cv
cp
level3{
gsave
clp
[-.582926 -.105592 -.153326 .306651 38.5444 45.957 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.582926 -.105592 -.153326 .306651 38.5444 45.957 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.5293 45.8203 mo
38.5293 45.9502 38.8472 46.0557 39.2368 46.0557 cv
39.6274 46.0557 39.9448 45.9502 39.9448 45.8203 cv
39.9448 45.6914 39.6274 45.585 39.2368 45.585 cv
38.8472 45.585 38.5293 45.6914 38.5293 45.8203 cv
cp
level3{
gsave
clp
[-.630165 0 0 .273796 39.2368 45.8213 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.630165 0 0 .273796 39.2368 45.8213 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.7598 46.1172 mo
35.7598 46.2188 35.9463 46.3008 36.1763 46.3008 cv
36.4063 46.3008 36.5923 46.2188 36.5923 46.1172 cv
36.5923 46.0156 36.4063 45.9336 36.1763 45.9336 cv
35.9463 45.9336 35.7598 46.0156 35.7598 46.1172 cv
cp
level3{
gsave
clp
[-.370434 0 0 .213745 36.1758 46.1162 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.370434 0 0 .213745 36.1758 46.1162 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.9712 46.0674 mo
39.9712 46.1689 40.1582 46.251 40.3882 46.251 cv
40.6182 46.251 40.8047 46.1689 40.8047 46.0674 cv
40.8047 45.9658 40.6182 45.8838 40.3882 45.8838 cv
40.1582 45.8838 39.9712 45.9658 39.9712 46.0674 cv
cp
level3{
gsave
clp
[-.370792 0 0 .213951 40.3877 46.0664 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.370792 0 0 .213951 40.3877 46.0664 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.2803 46.2344 mo
36.9819 45.6416 36.4927 44.7881 35.7749 43.8945 cv
34.4316 42.2197 33.5269 40.9561 33.5269 40.9561 cv
33.5269 40.9561 34.4077 41.8945 36.0366 43.8701 cv
36.918 44.9385 37.3809 45.7314 37.6196 46.2344 cv
37.2803 46.2344 li
cp
level3{
gsave
clp
[3.30937 6.52652 5.82253 -3.36202 34.0757 40.6396 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.30937 6.52652 5.82253 -3.36202 34.0757 40.6396 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
37.9565 46.0908 mo
37.6182 45.7646 37.1851 45.3906 36.646 45.0059 cv
35.0264 43.8457 33.2983 43.5498 33.2983 43.5498 cv
33.2983 43.5498 34.9927 43.623 36.9565 44.9912 cv
37.5762 45.4238 38.0254 45.791 38.3506 46.0908 cv
37.9565 46.0908 li
cp
level3{
gsave
clp
[2.69915 5.54769 4.57951 -2.77644 34.772 42.6572 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.69915 5.54769 4.57951 -2.77644 34.772 42.6572 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
40.0361 45.9883 mo
40.0156 45.9355 39.9922 45.8799 39.9644 45.8242 cv
39.5791 45.0488 38.1851 44.4824 38.1851 44.4824 cv
38.1851 44.4824 39.7788 44.9756 40.2842 45.9063 cv
40.2993 45.9336 40.314 45.9609 40.3276 45.9883 cv
40.0361 45.9883 li
cp
level3{
gsave
clp
[-.0428496 1.57942 2.44075 .963908 39.2651 44.8994 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0428496 1.57942 2.44075 .963908 39.2651 44.8994 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.7778 46.1826 mo
37.8667 45.8623 38.0117 45.4902 38.25 45.0859 cv
39.0459 43.7314 40.8213 42.9717 40.8213 42.9717 cv
40.8213 42.9717 38.8667 43.5576 37.8657 45.1719 cv
37.6196 45.5674 37.4595 45.9023 37.355 46.1826 cv
37.7778 46.1826 li
cp
level3{
gsave
clp
[-.334971 3.82638 -3.65712 .657994 39.2031 43.2627 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.334971 3.82638 -3.65712 .657994 39.2031 43.2627 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.3325 45.9883 mo
38.2402 45.8154 37.3013 45.792 37.3013 45.792 cv
37.3013 45.792 38.4331 45.7617 39.8076 45.9883 cv
39.3325 45.9883 li
cp
level3{
gsave
clp
[2.55464 2.99209 6.02963 -2.31963 38.1816 45.4531 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.55464 2.99209 6.02963 -2.31963 38.1816 45.4531 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.6953 45.8203 mo
36.7598 45.6943 36.0122 45.6738 36.0122 45.6738 cv
36.0122 45.6738 36.9663 45.6484 38.1865 45.8203 cv
37.6953 45.8203 li
cp
level3{
gsave
clp
[2.58998 3.03347 6.11303 -2.35172 36.7837 45.377 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.58998 3.03347 6.11303 -2.35172 36.7837 45.377 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.147 45.7012 mo
36.8931 45.4424 36.5552 45.1543 36.1138 44.8516 cv
34.5864 43.8047 32.3535 43.4268 32.3535 43.4268 cv
32.3535 43.4268 34.6802 43.626 36.5562 44.8652 cv
37.0439 45.1885 37.3975 45.4658 37.6563 45.7012 cv
37.147 45.7012 li
cp
level3{
gsave
clp
[1.55706 4.39674 5.42315 -1.24721 34.4331 42.9492 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.55706 4.39674 5.42315 -1.24721 34.4331 42.9492 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
37.0049 45.4512 mo
35.335 45.3008 33.8379 45.3135 33.8379 45.3135 cv
33.8379 45.3135 35.7495 45.2275 37.9165 45.4512 cv
37.0049 45.4512 li
cp
level3{
gsave
clp
[3.90178 3.157 10.2519 -3.34589 35.2319 44.8594 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.90178 3.157 10.2519 -3.34589 35.2319 44.8594 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.4634 46.0361 mo
37.2529 45.9785 37.0273 45.9199 36.7871 45.8613 cv
34.1714 45.2305 30.8726 45.2021 30.8726 45.2021 cv
30.8726 45.2021 34.2236 45.0801 37.4141 45.8203 cv
37.7363 45.8955 38.0278 45.9668 38.29 46.0361 cv
37.4634 46.0361 li
cp
level3{
gsave
clp
[4.17236 4.14456 10.3974 -3.68461 33.2969 44.3428 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.17236 4.14456 10.3974 -3.68461 33.2969 44.3428 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.0254 46.1309 mo
38.2651 45.9346 38.5571 45.7305 38.9136 45.5273 cv
40.6528 44.5361 43.356 44.4658 43.356 44.4658 cv
43.356 44.4658 40.5112 44.3066 38.3687 45.4688 cv
37.9253 45.709 37.5835 45.9307 37.3179 46.1309 cv
38.0254 46.1309 li
cp
level3{
gsave
clp
[-2.18068 5.93894 -8.7734 -5.00406 41.1118 43.1865 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.18068 5.93894 -8.7734 -5.00406 41.1118 43.1865 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.9614 45.9746 mo
39.0859 45.9053 39.2275 45.8311 39.3848 45.7549 cv
40.2593 45.3291 41.1846 45.1602 41.1846 45.1602 cv
41.1846 45.1602 40.2793 45.2607 39.2197 45.7646 cv
39.0586 45.8408 38.9194 45.9111 38.7979 45.9746 cv
38.9614 45.9746 li
cp
level3{
gsave
clp
[-1.22789 1.68445 -2.04927 -.33708 40.3828 45.0283 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.22789 1.68445 -2.04927 -.33708 40.3828 45.0283 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.5762 45.8242 mo
38.3423 45.7178 38.0654 45.6064 37.7407 45.4932 cv
36.2695 44.9834 34.5024 44.9053 34.5024 44.9053 cv
34.5024 44.9053 36.2808 44.874 38.0708 45.4736 cv
38.4551 45.6035 38.7622 45.7197 39.0073 45.8242 cv
38.5762 45.8242 li
cp
level3{
gsave
clp
[2.2453 3.00445 5.01443 -2.09043 35.958 44.2988 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.2453 3.00445 5.01443 -2.09043 35.958 44.2988 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.4863 46.1094 mo
39.6108 45.9326 39.7891 45.7344 40.0454 45.5303 cv
40.8623 44.8818 42.2534 44.7275 42.2534 44.7275 cv
42.2534 44.7275 40.7686 44.7549 39.7603 45.5195 cv
39.4565 45.749 39.2593 45.9463 39.1323 46.1094 cv
39.4863 46.1094 li
cp
level3{
gsave
clp
[-.604242 4.46757 -3.03771 -2.37422 40.9268 43.6904 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.604242 4.46757 -3.03771 -2.37422 40.9268 43.6904 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
37.9219 45.9883 mo
37.8423 45.9463 37.7573 45.9043 37.6699 45.8623 cv
36.3594 45.2275 34.7563 45.0693 34.7563 45.0693 cv
34.7563 45.0693 36.3745 45.1045 37.9707 45.8525 cv
38.0698 45.8994 38.1631 45.9453 38.2515 45.9883 cv
37.9219 45.9883 li
cp
level3{
gsave
clp
[1.83306 3.35155 4.26491 -1.70805 35.9839 44.5771 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.83306 3.35155 4.26491 -1.70805 35.9839 44.5771 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.8452 45.9883 mo
38.8735 45.8926 38.9165 45.792 38.9761 45.6875 cv
39.4053 44.9424 40.9341 44.5693 40.9341 44.5693 cv
40.9341 44.5693 39.1875 44.8369 38.6255 45.7236 cv
38.5654 45.8184 38.5181 45.9063 38.481 45.9883 cv
38.8452 45.9883 li
cp
level3{
gsave
clp
[.0577938 2.36686 -3.82389 .0628088 39.6909 44.5898 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0577938 2.36686 -3.82389 .0628088 39.6909 44.5898 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.4097 46.1182 mo
37.5762 45.998 37.7651 45.874 37.98 45.748 cv
39.6396 44.7744 42.3809 44.4727 42.3809 44.4727 cv
42.3809 44.4727 39.4702 44.5977 37.4185 45.748 cv
37.1855 45.8789 36.9834 46.0029 36.8066 46.1182 cv
37.4097 46.1182 li
cp
level3{
gsave
clp
[-1.59618 4.38292 -7.42141 -1.70203 40.084 43.9463 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.59618 4.38292 -7.42141 -1.70203 40.084 43.9463 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
36.4858 46.04 mo
36.5469 45.9199 36.6333 45.791 36.752 45.6543 cv
37.3794 44.9307 38.9468 44.5098 38.9468 44.5098 cv
38.9468 44.5098 37.2021 44.8408 36.4063 45.7041 cv
36.2935 45.8271 36.2046 45.9395 36.1357 46.04 cv
36.4858 46.04 li
cp
level3{
gsave
clp
[-.188322 1.9646 -3.22057 .438744 37.5967 44.6934 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.188322 1.9646 -3.22057 .438744 37.5967 44.6934 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
38.481 46.1377 mo
38.7783 45.8408 39.2686 45.4131 39.9854 44.9658 cv
41.3291 44.127 42.7847 43.9199 42.7847 43.9199 cv
42.7847 43.9199 41.3535 43.9648 39.7246 44.9531 cv
38.8438 45.4883 38.3804 45.8857 38.1401 46.1377 cv
38.481 46.1377 li
cp
level3{
gsave
clp
[-2.12191 4.18469 -3.7333 -2.15567 41.4233 43.1338 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.12191 4.18469 -3.7333 -2.15567 41.4233 43.1338 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.126 46.2354 mo
38.2622 46.0098 38.4424 45.7568 38.6782 45.4902 cv
39.4946 44.5732 40.6875 44.2412 40.6875 44.2412 cv
40.6875 44.2412 39.4438 44.415 38.4424 45.5029 cv
38.1812 45.7861 37.9922 46.0303 37.8545 46.2354 cv
38.126 46.2354 li
cp
level3{
gsave
clp
[-1.17904 3.32929 -4.10652 -.94441 39.7041 44.0156 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.17904 3.32929 -4.10652 -.94441 39.7041 44.0156 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
39.6514 46.0557 mo
39.5894 45.9365 39.5034 45.8066 39.3843 45.6689 cv
38.7578 44.9453 37.1895 44.5254 37.1895 44.5254 cv
37.1895 44.5254 38.9346 44.8555 39.7305 45.7188 cv
39.8442 45.8428 39.9326 45.9541 40.002 46.0557 cv
39.6514 46.0557 li
cp
level3{
gsave
clp
[.188301 1.96437 3.22021 .438694 38.5396 44.709 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.188301 1.96437 3.22021 .438694 38.5396 44.709 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.521 46.252 mo
37.5762 46.0166 37.6909 45.7246 37.9165 45.3994 cv
38.5088 44.5449 39.8296 44.0664 39.8296 44.0664 cv
39.8296 44.0664 38.3755 44.4355 37.6313 45.4531 cv
37.3901 45.7842 37.2573 46.0469 37.1895 46.252 cv
37.521 46.252 li
cp
level3{
gsave
clp
[-2.64063 0 0 2.64063 39.8301 45.1592 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.64063 0 0 2.64063 39.8301 45.1592 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.6245 46.1992 mo
36.4199 46.1045 36.188 46.0039 35.9238 45.9023 cv
34.1104 45.2012 31.4746 44.9443 31.4746 44.9443 cv
31.4746 44.9443 34.2202 45.082 36.4458 45.9131 cv
36.7197 46.0156 36.958 46.1113 37.166 46.1992 cv
36.6245 46.1992 li
cp
level3{
gsave
clp
[1.86514 2.95771 6.41873 -.811793 33.7432 44.6572 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86514 2.95771 6.41873 -.811793 33.7432 44.6572 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
36.0371 46.2568 mo
35.9209 45.8789 35.7515 45.4238 35.5044 44.9424 cv
34.8525 43.6592 33.9053 43.2031 33.9053 43.2031 cv
33.9053 43.2031 34.8911 43.4385 35.6929 44.958 cv
35.9722 45.4863 36.1489 45.9189 36.2617 46.2568 cv
36.0371 46.2568 li
cp
level3{
gsave
clp
[.672889 5.40581 2.29634 -1.58908 34.814 42.5732 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.672889 5.40581 2.29634 -1.58908 34.814 42.5732 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.5234 46.7354 mo
39.5234 46.8359 39.7095 46.918 39.9399 46.918 cv
40.1699 46.918 40.3569 46.8359 40.3569 46.7354 cv
40.3569 46.6338 40.1699 46.5508 39.9399 46.5508 cv
39.7095 46.5508 39.5234 46.6338 39.5234 46.7354 cv
cp
level3{
gsave
clp
[-.370767 0 0 .213937 39.9399 46.7334 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.370767 0 0 .213937 39.9399 46.7334 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.7402 47.0303 mo
38.7402 47.1318 38.9263 47.2129 39.1563 47.2129 cv
39.3872 47.2129 39.5732 47.1318 39.5732 47.0303 cv
39.5732 46.9287 39.3872 46.8457 39.1563 46.8457 cv
38.9263 46.8457 38.7402 46.9287 38.7402 47.0303 cv
cp
level3{
gsave
clp
[-.370589 0 0 .213834 39.1567 47.0283 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.370589 0 0 .213834 39.1567 47.0283 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.9136 46.1006 mo
38.9136 46.2021 39.1006 46.2852 39.3306 46.2852 cv
39.5605 46.2852 39.7471 46.2021 39.7471 46.1006 cv
39.7471 46 39.5605 45.917 39.3306 45.917 cv
39.1006 45.917 38.9136 46 38.9136 46.1006 cv
cp
level3{
gsave
clp
[-.371107 0 0 .214133 39.3301 46.1006 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.371107 0 0 .214133 39.3301 46.1006 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.5474 46.624 mo
38.5474 46.7256 38.7344 46.8066 38.9644 46.8066 cv
39.1943 46.8066 39.3809 46.7256 39.3809 46.624 cv
39.3809 46.5225 39.1943 46.4395 38.9644 46.4395 cv
38.7344 46.4395 38.5474 46.5225 38.5474 46.624 cv
cp
level3{
gsave
clp
[-.370719 0 0 .213909 38.9639 46.6221 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.370719 0 0 .213909 38.9639 46.6221 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.6113 46.624 mo
37.6113 46.7256 37.7979 46.8066 38.0278 46.8066 cv
38.2583 46.8066 38.4443 46.7256 38.4443 46.624 cv
38.4443 46.5225 38.2583 46.4395 38.0278 46.4395 cv
37.7979 46.4395 37.6113 46.5225 37.6113 46.624 cv
cp
level3{
gsave
clp
[-.370575 0 0 .213826 38.0278 46.6221 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.370575 0 0 .213826 38.0278 46.6221 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.2119 46.8301 mo
37.2119 46.9316 37.3979 47.0137 37.6284 47.0137 cv
37.8584 47.0137 38.0449 46.9316 38.0449 46.8301 cv
38.0449 46.7285 37.8584 46.6465 37.6284 46.6465 cv
37.3979 46.6465 37.2119 46.7285 37.2119 46.8301 cv
cp
level3{
gsave
clp
[-.37062 0 0 .213852 37.6284 46.8291 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.37062 0 0 .213852 37.6284 46.8291 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.8843 46.3184 mo
36.9663 46.2061 36.7227 46.0332 36.3413 45.9316 cv
35.9595 45.8291 35.5825 45.8379 35.501 45.9492 cv
35.4185 46.0605 35.6621 46.2334 36.0449 46.335 cv
36.4263 46.4375 36.8022 46.4297 36.8843 46.3184 cv
cp
level3{
gsave
clp
[.61564 .163688 .173828 -.234667 36.1938 46.1328 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.61564 .163688 .173828 -.234667 36.1938 46.1328 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.1348 46.3535 mo
37.1348 46.4756 37.4155 46.5742 37.7627 46.5742 cv
38.1094 46.5742 38.3906 46.4756 38.3906 46.3535 cv
38.3906 46.2314 38.1094 46.1338 37.7627 46.1338 cv
37.4155 46.1338 37.1348 46.2314 37.1348 46.3535 cv
cp
level3{
gsave
clp
[-.558991 0 0 .256325 37.7612 46.3545 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.558991 0 0 .256325 37.7612 46.3545 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.8413 46.585 mo
36.9468 46.5645 36.9902 46.4082 36.9375 46.2354 cv
36.8853 46.0635 36.7573 45.9395 36.6509 45.96 cv
36.5454 45.9795 36.5024 46.1367 36.5547 46.3086 cv
36.6084 46.4814 36.7354 46.6045 36.8413 46.585 cv
cp
level3{
gsave
clp
[.0840362 .278189 .223131 -.0420181 36.7461 46.2744 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0840362 .278189 .223131 -.0420181 36.7461 46.2744 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.3691 46.5508 mo
35.3198 46.6836 35.5454 46.8535 35.8735 46.9316 cv
36.2026 47.0107 36.5103 46.9668 36.5601 46.835 cv
36.6099 46.7021 36.3838 46.5332 36.0547 46.4541 cv
35.7261 46.376 35.4189 46.4199 35.3691 46.5508 cv
cp
level3{
gsave
clp
[-.529411 -.126188 -.105882 .278485 35.9658 46.6934 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.529411 -.126188 -.105882 .278485 35.9658 46.6934 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.0518 46.29 mo
37.0684 46.374 37.3257 46.4111 37.626 46.374 cv
37.9272 46.3369 38.1572 46.2383 38.1401 46.1543 cv
38.1235 46.0703 37.8667 46.0332 37.5654 46.0703 cv
37.2651 46.1074 37.0342 46.2061 37.0518 46.29 cv
cp
level3{
gsave
clp
[-.484091 .0608737 .0362344 .176824 37.5938 46.2236 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.484091 .0608737 .0362344 .176824 37.5938 46.2236 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.6699 46.3691 mo
38.6626 46.4902 38.938 46.5986 39.2842 46.6113 cv
39.6309 46.623 39.9165 46.5342 39.9233 46.4131 cv
39.9302 46.292 39.6548 46.1836 39.3091 46.1709 cv
38.9629 46.1582 38.6758 46.2471 38.6699 46.3691 cv
cp
level3{
gsave
clp
[-.558983 -.020274 -.0144814 .256321 39.2964 46.3916 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.558983 -.020274 -.0144814 .256321 39.2964 46.3916 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.8921 46.1953 mo
36.854 46.2891 37.0752 46.4258 37.3838 46.502 cv
37.6934 46.5781 37.9731 46.5645 38.0093 46.4717 cv
38.0464 46.3789 37.8257 46.2412 37.5176 46.1641 cv
37.209 46.0879 36.9282 46.1006 36.8921 46.1953 cv
cp
level3{
gsave
clp
[-.497304 -.12288 -.0780652 .196609 37.4492 46.333 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.497304 -.12288 -.0780652 .196609 37.4492 46.333 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.8833 46.3555 mo
37.877 46.4609 38.1079 46.5537 38.3989 46.5645 cv
38.6895 46.5742 38.9292 46.498 38.9355 46.3926 cv
38.9414 46.2891 38.7109 46.1953 38.4204 46.1855 cv
38.1299 46.1748 37.8892 46.252 37.8833 46.3555 cv
cp
level3{
gsave
clp
[-.467804 -.0159314 -.0130348 .221592 38.4077 46.376 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.467804 -.0159314 -.0130348 .221592 38.4077 46.376 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.3105 46.3359 mo
38.3105 46.4355 38.5073 46.5166 38.75 46.5166 cv
38.9922 46.5166 39.1895 46.4355 39.1895 46.3359 cv
39.1895 46.2354 38.9922 46.1553 38.75 46.1553 cv
38.5073 46.1553 38.3105 46.2354 38.3105 46.3359 cv
cp
level3{
gsave
clp
[-.390208 0 0 .211001 38.751 46.335 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.390208 0 0 .211001 38.751 46.335 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.6807 46.3623 mo
39.6807 46.4629 39.8774 46.5439 40.1201 46.5439 cv
40.3628 46.5439 40.5596 46.4629 40.5596 46.3623 cv
40.5596 46.2627 40.3628 46.1816 40.1201 46.1816 cv
39.8774 46.1816 39.6807 46.2627 39.6807 46.3623 cv
cp
level3{
gsave
clp
[-.390604 0 0 .211215 40.1206 46.3623 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.390604 0 0 .211215 40.1206 46.3623 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.2471 46.4766 mo
39.2896 46.5537 39.5498 46.541 39.8296 46.4453 cv
40.1089 46.3496 40.3018 46.209 40.2593 46.1309 cv
40.2173 46.0537 39.9565 46.0674 39.6768 46.1621 cv
39.397 46.2578 39.2046 46.3984 39.2471 46.4766 cv
cp
level3{
gsave
clp
[-.450357 .153498 .0897817 .165083 39.7515 46.3037 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.450357 .153498 .0897817 .165083 39.7515 46.3037 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.4551 46.1572 mo
39.4976 46.2354 39.7588 46.2217 40.0376 46.126 cv
40.3179 46.0303 40.5098 45.8896 40.4673 45.8125 cv
40.4253 45.7344 40.165 45.748 39.8848 45.8428 cv
39.605 45.9385 39.4126 46.0791 39.4551 46.1572 cv
cp
level3{
gsave
clp
[-.450273 .153469 .0897651 .165052 39.9595 45.9844 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.450273 .153469 .0897651 .165052 39.9595 45.9844 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.0811 46.4902 mo
36.0742 46.6113 36.3496 46.7197 36.6963 46.7324 cv
37.0425 46.7441 37.3286 46.6553 37.3354 46.5342 cv
37.3428 46.4131 37.0674 46.3047 36.7202 46.292 cv
36.374 46.2793 36.0879 46.3682 36.0811 46.4902 cv
cp
level3{
gsave
clp
[-.55928 -.0202848 -.0144891 .256457 36.708 46.5127 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.55928 -.0202848 -.0144891 .256457 36.708 46.5127 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.7856 46.1299 mo
39.7485 46.2236 39.9688 46.3613 40.2773 46.4375 cv
40.5869 46.5137 40.8667 46.5 40.9033 46.4063 cv
40.9404 46.3135 40.7192 46.1758 40.4106 46.0996 cv
40.103 46.0234 39.8213 46.0371 39.7856 46.1299 cv
cp
level3{
gsave
clp
[-.497397 -.122903 -.0780798 .196645 40.3428 46.2686 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.497397 -.122903 -.0780798 .196645 40.3428 46.2686 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.584 46.6885 mo
39.623 46.7207 39.7222 46.6973 39.8062 46.6348 cv
39.8911 46.5713 39.9272 46.4941 39.8887 46.4609 cv
39.8491 46.4287 39.7495 46.4531 39.6655 46.5146 cv
39.5825 46.5771 39.5444 46.6543 39.584 46.6885 cv
cp
level3{
gsave
clp
[-.00140833 .00104876 .000853986 .000719146 480.835 307.886 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.00140833 .00104876 .000853986 .000719146 480.835 307.886 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.0327 46.416 mo
38.0259 46.5205 38.2568 46.6133 38.5474 46.624 cv
38.8379 46.6348 39.0791 46.5576 39.0845 46.4531 cv
39.0903 46.3477 38.8589 46.2549 38.5684 46.2451 cv
38.2778 46.2354 38.0381 46.3115 38.0327 46.416 cv
cp
level3{
gsave
clp
[-.467665 -.0159267 -.0130309 .221525 38.5571 46.4355 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.467665 -.0159267 -.0130309 .221525 38.5571 46.4355 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.6909 46.3135 mo
37.6909 46.4131 37.8882 46.4951 38.1304 46.4951 cv
38.3735 46.4951 38.5698 46.4131 38.5698 46.3135 cv
38.5698 46.2139 38.3735 46.1338 38.1304 46.1338 cv
37.8882 46.1338 37.6909 46.2139 37.6909 46.3135 cv
cp
level3{
gsave
clp
[-.390213 0 0 .211004 38.1313 46.3135 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.390213 0 0 .211004 38.1313 46.3135 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.8364 46.6201 mo
39.854 46.7041 40.1104 46.7422 40.4116 46.7041 cv
40.7124 46.667 40.9424 46.5684 40.9258 46.4844 cv
40.9087 46.4004 40.6519 46.3623 40.3511 46.4004 cv
40.0508 46.4375 39.8198 46.5361 39.8364 46.6201 cv
cp
level3{
gsave
clp
[-.484292 .0608991 .0362494 .176897 40.3789 46.5537 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.484292 .0608991 .0362494 .176897 40.3789 46.5537 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.1538 47.2158 mo
36.1538 47.3174 36.3398 47.4004 36.5698 47.4004 cv
36.7998 47.4004 36.9868 47.3174 36.9868 47.2158 cv
36.9868 47.1152 36.7998 47.0322 36.5698 47.0322 cv
36.3398 47.0322 36.1538 47.1152 36.1538 47.2158 cv
cp
level3{
gsave
clp
[-.370979 0 0 .214059 36.5703 47.2158 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.370979 0 0 .214059 36.5703 47.2158 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.1831 46.3936 mo
37.1831 46.4951 37.3696 46.5771 37.5996 46.5771 cv
37.8301 46.5771 38.0161 46.4951 38.0161 46.3936 cv
38.0161 46.292 37.8301 46.2109 37.5996 46.2109 cv
37.3696 46.2109 37.1831 46.292 37.1831 46.3936 cv
cp
level3{
gsave
clp
[-.370232 0 0 .213628 37.5996 46.3936 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.370232 0 0 .213628 37.5996 46.3936 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.9438 46.0811 mo
28.9438 46.2021 29.1421 46.2998 29.3872 46.2998 cv
29.6333 46.2998 29.8315 46.2021 29.8315 46.0811 cv
29.8315 45.96 29.6333 45.8623 29.3872 45.8623 cv
29.1421 45.8623 28.9438 45.96 28.9438 46.0811 cv
cp
level3{
gsave
clp
[-.394787 0 0 .254949 29.3877 46.0801 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394787 0 0 .254949 29.3877 46.0801 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.9922 45.9932 mo
28.042 46.1436 28.5166 46.1992 29.0537 46.1182 cv
29.5913 46.0391 29.9873 45.8525 29.938 45.7031 cv
29.8882 45.5537 29.4131 45.498 28.876 45.5781 cv
28.3389 45.6582 27.9429 45.8438 27.9922 45.9932 cv
cp
level3{
gsave
clp
[-.865741 .128848 .104236 .315604 28.9644 45.8467 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.865741 .128848 .104236 .315604 28.9644 45.8467 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.4858 46.332 mo
25.5742 46.2002 25.314 45.9932 24.9072 45.8721 cv
24.501 45.752 24.1001 45.7607 24.0122 45.8936 cv
23.9243 46.0264 24.1841 46.2314 24.5908 46.3535 cv
24.998 46.4756 25.3989 46.4658 25.4858 46.332 cv
cp
level3{
gsave
clp
[.654997 .195198 .185076 -.280506 24.7495 46.1113 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.654997 .195198 .185076 -.280506 24.7495 46.1113 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.9912 45.8154 mo
26.0435 45.6738 25.7339 45.502 25.3022 45.4307 cv
24.8701 45.3584 24.478 45.415 24.4258 45.5557 cv
24.3745 45.6963 24.6826 45.8691 25.1157 45.9404 cv
25.5479 46.0137 25.939 45.9561 25.9912 45.8154 cv
cp
level3{
gsave
clp
[.694442 .1155 .109725 -.297412 25.21 45.6846 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.694442 .1155 .109725 -.297412 25.21 45.6846 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.4814 45.5732 mo
25.4033 45.7461 25.6538 45.9492 26.0396 46.0273 cv
26.4253 46.1055 26.8008 46.0293 26.8779 45.8555 cv
26.9556 45.6826 26.7056 45.4795 26.3188 45.4014 cv
25.9336 45.3232 25.5586 45.4004 25.4814 45.5732 cv
cp
level3{
gsave
clp
[-.620764 -.125596 -.163131 .36524 26.1777 45.7158 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.620764 -.125596 -.163131 .36524 26.1777 45.7158 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.8193 45.9102 mo
25.855 46.0947 26.334 46.2051 26.8887 46.1553 cv
27.4443 46.1074 27.8643 45.917 27.8296 45.7334 cv
27.7935 45.5498 27.3135 45.4395 26.7593 45.4883 cv
26.2036 45.5371 25.7832 45.7266 25.8193 45.9102 cv
cp
level3{
gsave
clp
[-.892502 .078112 .075219 .389114 26.8247 45.8223 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.892502 .078112 .075219 .389114 26.8247 45.8223 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.5425 46.207 mo
30.6304 46.0742 30.3706 45.8682 29.9639 45.7471 cv
29.5576 45.625 29.1558 45.6348 29.0679 45.7676 cv
28.981 45.9004 29.2397 46.1064 29.6475 46.2275 cv
30.0547 46.3496 30.4556 46.3398 30.5425 46.207 cv
cp
level3{
gsave
clp
[.654977 .195192 .185071 -.280498 29.8057 45.9863 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.654977 .195192 .185071 -.280498 29.8057 45.9863 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.3066 45.7607 mo
27.2295 45.9336 27.4795 46.1377 27.8652 46.2148 cv
28.251 46.293 28.6265 46.2158 28.7041 46.043 cv
28.7808 45.8691 28.5308 45.667 28.145 45.5889 cv
27.7593 45.5098 27.3838 45.5869 27.3066 45.7607 cv
cp
level3{
gsave
clp
[-.621082 -.125661 -.163215 .365427 28.0034 45.9033 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.621082 -.125661 -.163215 .365427 28.0034 45.9033 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.9893 45.7402 mo
27.9893 45.8955 28.3276 46.0205 28.7437 46.0205 cv
29.1602 46.0205 29.4971 45.8955 29.4971 45.7402 cv
29.4971 45.5859 29.1602 45.46 28.7437 45.46 cv
28.3276 45.46 27.9893 45.5859 27.9893 45.7402 cv
cp
level3{
gsave
clp
[-.670046 0 0 .327063 28.7432 45.7412 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.670046 0 0 .327063 28.7432 45.7412 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.0386 46.0938 mo
25.0386 46.2148 25.2368 46.3125 25.4819 46.3125 cv
25.7271 46.3125 25.9263 46.2148 25.9263 46.0938 cv
25.9263 45.9727 25.7271 45.875 25.4819 45.875 cv
25.2368 45.875 25.0386 45.9727 25.0386 46.0938 cv
cp
level3{
gsave
clp
[-.394785 0 0 .254948 25.4824 46.0928 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394785 0 0 .254948 25.4824 46.0928 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.5259 46.0342 mo
29.5259 46.1553 29.7246 46.2529 29.9697 46.2529 cv
30.2148 46.2529 30.4141 46.1553 30.4141 46.0342 cv
30.4141 45.9131 30.2148 45.8154 29.9697 45.8154 cv
29.7246 45.8154 29.5259 45.9131 29.5259 46.0342 cv
cp
level3{
gsave
clp
[-.394941 0 0 .255048 29.9702 46.0332 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394941 0 0 .255048 29.9702 46.0332 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.6592 46.2324 mo
26.3413 45.5264 25.8193 44.5107 25.0547 43.4453 cv
23.6235 41.4502 22.6597 39.9434 22.6597 39.9434 cv
22.6597 39.9434 23.5977 41.0615 25.334 43.415 cv
26.2725 44.6885 26.7651 45.6338 27.021 46.2324 cv
26.6592 46.2324 li
cp
level3{
gsave
clp
[3.81427 7.52225 6.71086 -3.87495 23.1201 39.6768 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.81427 7.52225 6.71086 -3.87495 23.1201 39.6768 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
27.3789 46.0615 mo
27.0186 45.6738 26.5562 45.2275 25.9829 44.7695 cv
24.2573 43.3867 22.416 43.0342 22.416 43.0342 cv
22.416 43.0342 24.2212 43.1211 26.3135 44.752 cv
26.9741 45.2676 27.4526 45.7051 27.7983 46.0615 cv
27.3789 46.0615 li
cp
level3{
gsave
clp
[3.02978 6.22725 5.14047 -3.11654 23.9258 42.1191 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.02978 6.22725 5.14047 -3.11654 23.9258 42.1191 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
29.5947 45.9404 mo
29.5732 45.876 29.5483 45.8115 29.519 45.7441 cv
29.1079 44.8203 27.623 44.1465 27.623 44.1465 cv
27.623 44.1465 29.3208 44.7344 29.8594 45.8418 cv
29.8755 45.875 29.8911 45.9082 29.9058 45.9404 cv
29.5947 45.9404 li
cp
level3{
gsave
clp
[-.0555374 2.04709 3.16346 1.24932 28.7764 44.5996 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0555374 2.04709 3.16346 1.24932 28.7764 44.5996 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.189 46.1719 mo
27.2827 45.7891 27.4385 45.3477 27.6919 44.8652 cv
28.54 43.25 30.4321 42.3467 30.4321 42.3467 cv
30.4321 42.3467 28.3491 43.043 27.2827 44.9668 cv
27.021 45.4395 26.8491 45.8379 26.7388 46.1719 cv
27.189 46.1719 li
cp
level3{
gsave
clp
[-.407758 4.65783 -4.45179 .800973 28.7261 42.6533 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.407758 4.65783 -4.45179 .800973 28.7261 42.6533 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.8457 45.9404 mo
27.6812 45.7344 26.6812 45.7051 26.6812 45.7051 cv
26.6812 45.7051 27.8872 45.6689 29.3511 45.9404 cv
28.8457 45.9404 li
cp
level3{
gsave
clp
[2.77914 3.25503 6.5595 -2.52348 27.6104 45.3477 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.77914 3.25503 6.5595 -2.52348 27.6104 45.3477 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.1011 45.7402 mo
26.104 45.5889 25.3071 45.5664 25.3071 45.5664 cv
25.3071 45.5664 26.3242 45.5352 27.6245 45.7402 cv
27.1011 45.7402 li
cp
level3{
gsave
clp
[2.80702 3.28768 6.62531 -2.5488 26.1235 45.2529 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.80702 3.28768 6.62531 -2.5488 26.1235 45.2529 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.5171 45.5977 mo
26.2456 45.291 25.8867 44.9453 25.4155 44.5859 cv
23.7876 43.3379 21.4097 42.8877 21.4097 42.8877 cv
21.4097 42.8877 23.8882 43.126 25.8877 44.6025 cv
26.4067 44.9863 26.7842 45.3184 27.0586 45.5977 cv
26.5171 45.5977 li
cp
level3{
gsave
clp
[1.78663 5.04496 6.2227 -1.43109 23.5776 42.3896 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.78663 5.04496 6.2227 -1.43109 23.5776 42.3896 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
26.3647 45.2998 mo
24.5864 45.1201 22.9907 45.1357 22.9907 45.1357 cv
22.9907 45.1357 25.0283 45.0332 27.3364 45.2998 cv
26.3647 45.2998 li
cp
level3{
gsave
clp
[4.20337 3.40102 11.0444 -3.60451 24.4678 44.6543 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.20337 3.40102 11.0444 -3.60451 24.4678 44.6543 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.8535 45.9971 mo
26.6289 45.9277 26.3892 45.8584 26.1328 45.7891 cv
23.3462 45.0361 19.8306 45.0029 19.8306 45.0029 cv
19.8306 45.0029 23.4019 44.8584 26.8013 45.7402 cv
27.145 45.8291 27.4551 45.915 27.7344 45.9971 cv
26.8535 45.9971 li
cp
level3{
gsave
clp
[4.57305 4.54258 11.3959 -4.03846 22.375 44.1016 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.57305 4.54258 11.3959 -4.03846 22.375 44.1016 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.4526 46.1094 mo
27.708 45.876 28.0195 45.6328 28.3994 45.3906 cv
30.2529 44.209 33.1323 44.125 33.1323 44.125 cv
33.1323 44.125 30.1006 43.9365 27.8184 45.3213 cv
27.3462 45.6074 26.9814 45.8721 26.6987 46.1094 cv
27.4526 46.1094 li
cp
level3{
gsave
clp
[-2.41329 6.57243 -9.70924 -5.53783 30.7734 42.7803 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.41329 6.57243 -9.70924 -5.53783 30.7734 42.7803 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.4492 45.9238 mo
28.5825 45.8418 28.7339 45.752 28.9019 45.6611 cv
29.833 45.1553 30.8188 44.9521 30.8188 44.9521 cv
30.8188 44.9521 29.854 45.0732 28.7251 45.6729 cv
28.5537 45.7646 28.4053 45.8477 28.2754 45.9238 cv
28.4492 45.9238 li
cp
level3{
gsave
clp
[-1.41409 1.93988 -2.36003 -.388196 29.9985 44.8174 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.41409 1.93988 -2.36003 -.388196 29.9985 44.8174 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.0391 45.7451 mo
27.79 45.6182 27.4951 45.4844 27.1489 45.3506 cv
25.582 44.7432 23.6987 44.6494 23.6987 44.6494 cv
23.6987 44.6494 25.5933 44.6133 27.5015 45.3271 cv
27.9097 45.4805 28.2373 45.6201 28.4985 45.7451 cv
28.0391 45.7451 li
cp
level3{
gsave
clp
[2.4859 3.3264 5.55176 -2.31443 25.2163 44.0166 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.4859 3.3264 5.55176 -2.31443 25.2163 44.0166 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
29.0093 46.084 mo
29.1416 45.874 29.3315 45.6377 29.605 45.3955 cv
30.4751 44.6221 31.958 44.4365 31.958 44.4365 cv
31.958 44.4365 30.3755 44.4707 29.3013 45.3818 cv
28.9771 45.6543 28.7671 45.8896 28.6313 46.084 cv
29.0093 46.084 li
cp
level3{
gsave
clp
[-.671651 4.96596 -3.3766 -2.63908 30.5547 43.3398 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.671651 4.96596 -3.3766 -2.63908 30.5547 43.3398 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
27.3423 45.9404 mo
27.2568 45.8896 27.1675 45.8398 27.0737 45.7891 cv
25.6772 45.0332 23.9692 44.8447 23.9692 44.8447 cv
23.9692 44.8447 25.6934 44.8877 27.3945 45.7793 cv
27.5005 45.835 27.5996 45.8887 27.6934 45.9404 cv
27.3423 45.9404 li
cp
level3{
gsave
clp
[2.0453 3.7396 4.75871 -1.90581 25.251 44.3311 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.0453 3.7396 4.75871 -1.90581 25.251 44.3311 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.3267 45.9404 mo
28.356 45.8252 28.4014 45.7061 28.4658 45.582 cv
28.9229 44.6934 30.5522 44.249 30.5522 44.249 cv
30.5522 44.249 28.6904 44.5684 28.0913 45.624 cv
28.0278 45.7373 27.9771 45.8418 27.938 45.9404 cv
28.3267 45.9404 li
cp
level3{
gsave
clp
[.069073 2.82878 -4.57017 .0750667 29.2251 44.2705 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.069073 2.82878 -4.57017 .0750667 29.2251 44.2705 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.7964 46.0947 mo
26.9731 45.9521 27.1743 45.8037 27.4038 45.6543 cv
29.1724 44.4932 32.0933 44.1328 32.0933 44.1328 cv
32.0933 44.1328 28.9922 44.2842 26.8062 45.6543 cv
26.5581 45.8105 26.3423 45.957 26.1538 46.0947 cv
26.7964 46.0947 li
cp
level3{
gsave
clp
[-1.81461 4.9827 -8.43699 -1.93494 29.6821 43.5801 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.81461 4.9827 -8.43699 -1.93494 29.6821 43.5801 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
25.812 46.002 mo
25.877 45.8594 25.9692 45.7051 26.0962 45.541 cv
26.7637 44.6807 28.4341 44.1777 28.4341 44.1777 cv
28.4341 44.1777 26.5762 44.5723 25.7271 45.6006 cv
25.6069 45.748 25.5122 45.8809 25.438 46.002 cv
25.812 46.002 li
cp
level3{
gsave
clp
[-.231186 2.41176 -3.95361 .538607 27.0044 44.3721 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.231186 2.41176 -3.95361 .538607 27.0044 44.3721 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
27.938 46.1172 mo
28.2549 45.7646 28.7769 45.2549 29.541 44.7217 cv
30.9731 43.7227 32.5239 43.4746 32.5239 43.4746 cv
32.5239 43.4746 30.9985 43.5283 29.2622 44.707 cv
28.3242 45.3438 27.8306 45.8174 27.5752 46.1172 cv
27.938 46.1172 li
cp
level3{
gsave
clp
[-2.38194 4.69751 -4.19081 -2.41983 31.1279 42.6689 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.38194 4.69751 -4.19081 -2.41983 31.1279 42.6689 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.5596 46.2354 mo
27.7046 45.9668 27.897 45.6641 28.1479 45.3477 cv
29.0181 44.2539 30.2891 43.8584 30.2891 43.8584 cv
30.2891 43.8584 28.9634 44.0664 27.896 45.3623 cv
27.6187 45.6992 27.4175 45.9902 27.2705 46.2354 cv
27.5596 46.2354 li
cp
level3{
gsave
clp
[-1.36866 3.86473 -4.76696 -1.0963 29.2822 43.627 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.36866 3.86473 -4.76696 -1.0963 29.2822 43.627 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
29.1846 46.0205 mo
29.1187 45.8779 29.0273 45.7236 28.9009 45.5605 cv
28.2329 44.6982 26.5625 44.1973 26.5625 44.1973 cv
26.5625 44.1973 28.4214 44.5908 29.269 45.6191 cv
29.3901 45.7666 29.4839 45.8994 29.5581 46.0205 cv
29.1846 46.0205 li
cp
level3{
gsave
clp
[.231034 2.41017 3.951 .538251 27.9917 44.3916 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.231034 2.41017 3.951 .538251 27.9917 44.3916 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.915 46.2529 mo
26.9741 45.9736 27.0957 45.627 27.3369 45.2383 cv
27.9683 44.2207 29.375 43.6494 29.375 43.6494 cv
29.375 43.6494 27.8257 44.0898 27.0327 45.3018 cv
26.7749 45.6963 26.6343 46.0098 26.5615 46.2529 cv
26.915 46.2529 li
cp
level3{
gsave
clp
[-2.8125 0 0 2.8125 29.375 44.9512 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.8125 0 0 2.8125 29.375 44.9512 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.9595 46.1914 mo
25.7417 46.0771 25.4941 45.959 25.2129 45.8379 cv
23.2813 45.002 20.4731 44.6963 20.4731 44.6963 cv
20.4731 44.6963 23.3979 44.8604 25.769 45.8496 cv
26.0615 45.9727 26.3149 46.0859 26.5366 46.1914 cv
25.9595 46.1914 li
cp
level3{
gsave
clp
[2.13652 3.38807 7.35267 -.929911 22.8438 44.3965 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.13652 3.38807 7.35267 -.929911 22.8438 44.3965 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
25.3345 46.2598 mo
25.2104 45.8096 25.0298 45.2676 24.7671 44.6934 cv
24.0718 43.1641 23.0625 42.6201 23.0625 42.6201 cv
23.0625 42.6201 24.1128 42.9014 24.9668 44.7119 cv
25.2651 45.3428 25.4531 45.8574 25.5737 46.2598 cv
25.3345 46.2598 li
cp
level3{
gsave
clp
[.772444 6.2056 2.63608 -1.82419 24.0088 41.9639 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.772444 6.2056 2.63608 -1.82419 24.0088 41.9639 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
29.0483 46.8291 mo
29.0483 46.9502 29.2476 47.0479 29.4927 47.0479 cv
29.7378 47.0479 29.9365 46.9502 29.9365 46.8291 cv
29.9365 46.709 29.7378 46.6113 29.4927 46.6113 cv
29.2476 46.6113 29.0483 46.709 29.0483 46.8291 cv
cp
level3{
gsave
clp
[-.394527 0 0 .254781 29.4927 46.8281 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394527 0 0 .254781 29.4927 46.8281 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.2139 47.1816 mo
28.2139 47.3027 28.4131 47.4004 28.6582 47.4004 cv
28.9033 47.4004 29.1021 47.3027 29.1021 47.1816 cv
29.1021 47.0605 28.9033 46.9629 28.6582 46.9629 cv
28.4131 46.9629 28.2139 47.0605 28.2139 47.1816 cv
cp
level3{
gsave
clp
[-.394918 0 0 .255034 28.6582 47.1807 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394918 0 0 .255034 28.6582 47.1807 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.3984 46.0742 mo
28.3984 46.1953 28.5981 46.293 28.8428 46.293 cv
29.0884 46.293 29.2866 46.1953 29.2866 46.0742 cv
29.2866 45.9531 29.0884 45.8555 28.8428 45.8555 cv
28.5981 45.8555 28.3984 45.9531 28.3984 46.0742 cv
cp
level3{
gsave
clp
[-.394915 0 0 .255032 28.8428 46.0732 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394915 0 0 .255032 28.8428 46.0732 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.0088 46.6973 mo
28.0088 46.8184 28.208 46.916 28.4531 46.916 cv
28.6982 46.916 28.897 46.8184 28.897 46.6973 cv
28.897 46.5762 28.6982 46.4775 28.4531 46.4775 cv
28.208 46.4775 28.0088 46.5762 28.0088 46.6973 cv
cp
level3{
gsave
clp
[-.395237 0 0 .255239 28.4531 46.6953 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.395237 0 0 .255239 28.4531 46.6953 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.0117 46.6973 mo
27.0117 46.8184 27.21 46.916 27.4551 46.916 cv
27.7002 46.916 27.8994 46.8184 27.8994 46.6973 cv
27.8994 46.5762 27.7002 46.4775 27.4551 46.4775 cv
27.21 46.4775 27.0117 46.5762 27.0117 46.6973 cv
cp
level3{
gsave
clp
[-.395072 0 0 .255133 27.4556 46.6953 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.395072 0 0 .255133 27.4556 46.6953 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.5859 46.9434 mo
26.5859 47.0645 26.7842 47.1621 27.0293 47.1621 cv
27.2744 47.1621 27.4731 47.0645 27.4731 46.9434 cv
27.4731 46.8223 27.2744 46.7246 27.0293 46.7246 cv
26.7842 46.7246 26.5859 46.8223 26.5859 46.9434 cv
cp
level3{
gsave
clp
[-.394654 0 0 .254863 27.0298 46.9424 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394654 0 0 .254863 27.0298 46.9424 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.2373 46.332 mo
26.3242 46.2002 26.0645 45.9932 25.6582 45.8721 cv
25.2515 45.752 24.8496 45.7607 24.7617 45.8936 cv
24.6748 46.0264 24.9336 46.2314 25.3423 46.3535 cv
25.7485 46.4756 26.1494 46.4658 26.2373 46.332 cv
cp
level3{
gsave
clp
[.655395 .195316 .185189 -.280677 25.5 46.1113 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.655395 .195316 .185189 -.280677 25.5 46.1113 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.5044 46.376 mo
26.5044 46.5205 26.8032 46.6377 27.1729 46.6377 cv
27.542 46.6377 27.8418 46.5205 27.8418 46.376 cv
27.8418 46.2314 27.542 46.1133 27.1729 46.1133 cv
26.8032 46.1133 26.5044 46.2314 26.5044 46.376 cv
cp
level3{
gsave
clp
[-.593941 0 0 .306363 27.1729 46.376 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.593941 0 0 .306363 27.1729 46.376 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.1909 46.6514 mo
26.3027 46.627 26.3496 46.4404 26.2939 46.2354 cv
26.2378 46.0293 26.1011 45.8828 25.9873 45.9063 cv
25.8755 45.9307 25.8291 46.1162 25.8862 46.3223 cv
25.9419 46.5273 26.0781 46.6748 26.1909 46.6514 cv
cp
level3{
gsave
clp
[.0897872 .331633 .237502 -.0506863 26.0884 46.2803 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0897872 .331633 .237502 -.0506863 26.0884 46.2803 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.6226 46.6113 mo
24.5698 46.7686 24.8101 46.9707 25.1597 47.0645 cv
25.5107 47.1582 25.8374 47.1055 25.8911 46.9482 cv
25.9443 46.792 25.7031 46.5889 25.3525 46.4951 cv
25.0034 46.4023 24.6758 46.4541 24.6226 46.6113 cv
cp
level3{
gsave
clp
[-.563698 -.150706 -.11303 .331843 25.2568 46.7803 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.563698 -.150706 -.11303 .331843 25.2568 46.7803 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.415 46.2998 mo
26.4331 46.3994 26.707 46.4443 27.0269 46.3994 cv
27.3472 46.3555 27.5928 46.2383 27.5747 46.1377 cv
27.5571 46.0381 27.2827 45.9932 26.9624 46.0371 cv
26.6426 46.083 26.397 46.2002 26.415 46.2998 cv
cp
level3{
gsave
clp
[-.515408 .0723887 .0376421 .211375 26.9927 46.2197 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.515408 .0723887 .0376421 .211375 26.9927 46.2197 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.1392 46.3926 mo
28.1313 46.5381 28.4243 46.668 28.7939 46.6816 cv
29.1626 46.6963 29.4683 46.5908 29.4751 46.4463 cv
29.4824 46.3018 29.189 46.1719 28.8198 46.1582 cv
28.4517 46.1436 28.146 46.248 28.1392 46.3926 cv
cp
level3{
gsave
clp
[-.593925 -.0231212 -.0158958 .306355 28.8071 46.4199 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.593925 -.0231212 -.0158958 .306355 28.8071 46.4199 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.2446 46.1855 mo
26.2056 46.2979 26.4399 46.4609 26.769 46.5527 cv
27.0986 46.6436 27.397 46.6279 27.4355 46.5166 cv
27.4746 46.4053 27.2402 46.2412 26.9111 46.1504 cv
26.583 46.0586 26.2832 46.0742 26.2446 46.1855 cv
cp
level3{
gsave
clp
[-.530002 -.146257 -.0825412 .234591 26.8384 46.3516 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.530002 -.146257 -.0825412 .234591 26.8384 46.3516 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.3008 46.3789 mo
27.2949 46.5039 27.5405 46.6143 27.8501 46.626 cv
28.1602 46.6387 28.416 46.5479 28.4229 46.4229 cv
28.4282 46.2988 28.1831 46.1875 27.8726 46.1748 cv
27.5635 46.1631 27.3066 46.2539 27.3008 46.3789 cv
cp
level3{
gsave
clp
[-.499302 -.0202615 -.0130253 .2634 27.8618 46.4014 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.499302 -.0202615 -.0130253 .2634 27.8618 46.4014 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.7563 46.3545 mo
27.7563 46.4736 27.9658 46.5693 28.2251 46.5693 cv
28.4834 46.5693 28.6934 46.4736 28.6934 46.3545 cv
28.6934 46.2354 28.4834 46.1387 28.2251 46.1387 cv
27.9658 46.1387 27.7563 46.2354 27.7563 46.3545 cv
cp
level3{
gsave
clp
[-.417007 0 0 .250494 28.2246 46.3525 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.417007 0 0 .250494 28.2246 46.3525 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.2153 46.3867 mo
29.2153 46.5059 29.4258 46.6016 29.6841 46.6016 cv
29.9424 46.6016 30.1523 46.5059 30.1523 46.3867 cv
30.1523 46.2676 29.9424 46.1709 29.6841 46.1709 cv
29.4258 46.1709 29.2153 46.2676 29.2153 46.3867 cv
cp
level3{
gsave
clp
[-.417013 0 0 .250497 29.6836 46.3848 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.417013 0 0 .250497 29.6836 46.3848 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.7539 46.5215 mo
28.7993 46.6143 29.0771 46.5977 29.375 46.4844 cv
29.6724 46.3711 29.8774 46.2031 29.833 46.1113 cv
29.7876 46.0176 29.5098 46.0342 29.2119 46.1475 cv
28.9136 46.2607 28.7095 46.4287 28.7539 46.5215 cv
cp
level3{
gsave
clp
[-.481092 .182583 .0956387 .195625 29.2915 46.3164 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.481092 .182583 .0956387 .195625 29.2915 46.3164 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.9756 46.1406 mo
29.021 46.2344 29.2988 46.2178 29.5967 46.1045 cv
29.895 45.9902 30.0991 45.8232 30.0547 45.7305 cv
30.0093 45.6377 29.7314 45.6543 29.4341 45.7676 cv
29.1362 45.8809 28.9302 46.0479 28.9756 46.1406 cv
cp
level3{
gsave
clp
[-.480995 .182546 .0956195 .195585 29.5137 45.9365 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.480995 .182546 .0956195 .195585 29.5137 45.9365 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.3809 46.5371 mo
25.373 46.6826 25.6665 46.8125 26.0356 46.8262 cv
26.4053 46.8408 26.71 46.7354 26.7168 46.5908 cv
26.7251 46.4463 26.4316 46.3164 26.0615 46.3018 cv
25.6934 46.2871 25.3882 46.3926 25.3809 46.5371 cv
cp
level3{
gsave
clp
[-.594345 -.0231375 -.015907 .306572 26.0488 46.5645 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.594345 -.0231375 -.015907 .306572 26.0488 46.5645 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.3281 46.1084 mo
29.2881 46.2207 29.5234 46.3838 29.8521 46.4756 cv
30.1816 46.5664 30.48 46.5508 30.519 46.4385 cv
30.5586 46.3281 30.3232 46.1641 29.9941 46.0723 cv
29.6655 45.9814 29.3662 45.998 29.3281 46.1084 cv
cp
level3{
gsave
clp
[-.530311 -.146343 -.0825894 .234728 29.9219 46.2734 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.530311 -.146343 -.0825894 .234728 29.9219 46.2734 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.1128 46.7744 mo
29.1543 46.8125 29.2603 46.7842 29.3501 46.71 cv
29.4404 46.6348 29.479 46.543 29.437 46.5039 cv
29.3955 46.4648 29.2896 46.4941 29.1997 46.5674 cv
29.1113 46.6426 29.0713 46.7354 29.1128 46.7744 cv
cp
level3{
gsave
clp
[-.144642 .120053 .0882315 .0824458 29.2715 46.6406 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.144642 .120053 .0882315 .0824458 29.2715 46.6406 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.4604 46.4502 mo
27.4536 46.5742 27.6997 46.6855 28.0088 46.6973 cv
28.3184 46.709 28.5747 46.6182 28.5811 46.4941 cv
28.5874 46.3691 28.3408 46.2588 28.0317 46.2461 cv
27.7222 46.2334 27.4658 46.3252 27.4604 46.4502 cv
cp
level3{
gsave
clp
[-.498892 -.0202449 -.0130146 .263184 28.0205 46.4727 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.498892 -.0202449 -.0130146 .263184 28.0205 46.4727 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.0967 46.3281 mo
27.0967 46.4463 27.3062 46.5439 27.5649 46.5439 cv
27.8228 46.5439 28.0332 46.4463 28.0332 46.3281 cv
28.0332 46.209 27.8228 46.1123 27.5649 46.1123 cv
27.3062 46.1123 27.0967 46.209 27.0967 46.3281 cv
cp
level3{
gsave
clp
[-.417231 0 0 .250628 27.5649 46.3271 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.417231 0 0 .250628 27.5649 46.3271 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.3828 46.6934 mo
29.3999 46.793 29.6738 46.8379 29.9946 46.793 cv
30.3154 46.749 30.5601 46.6309 30.5425 46.5313 cv
30.5244 46.4316 30.2515 46.3867 29.9297 46.4307 cv
29.6099 46.4756 29.3647 46.5928 29.3828 46.6934 cv
cp
level3{
gsave
clp
[-.515444 .0723939 .0376448 .21139 29.96 46.6133 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.515444 .0723939 .0376448 .21139 29.96 46.6133 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.458 47.4033 mo
25.458 47.5244 25.6563 47.6221 25.9019 47.6221 cv
26.147 47.6221 26.3452 47.5244 26.3452 47.4033 cv
26.3452 47.2832 26.147 47.1846 25.9019 47.1846 cv
25.6563 47.1846 25.458 47.2832 25.458 47.4033 cv
cp
level3{
gsave
clp
[-.394596 0 0 .254826 25.9019 47.4023 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394596 0 0 .254826 25.9019 47.4023 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.5557 46.4229 mo
26.5557 46.5439 26.7539 46.6416 26.999 46.6416 cv
27.2441 46.6416 27.4429 46.5439 27.4429 46.4229 cv
27.4429 46.3027 27.2441 46.2051 26.999 46.2051 cv
26.7539 46.2051 26.5557 46.3027 26.5557 46.4229 cv
cp
level3{
gsave
clp
[-.394285 0 0 .254625 26.9995 46.4219 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394285 0 0 .254625 26.9995 46.4219 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.8198 46.3145 mo
34.8198 46.4248 34.9424 46.5146 35.0933 46.5146 cv
35.2441 46.5146 35.3667 46.4248 35.3667 46.3145 cv
35.3667 46.2041 35.2441 46.1143 35.0933 46.1143 cv
34.9424 46.1143 34.8198 46.2041 34.8198 46.3145 cv
cp
level3{
gsave
clp
[-.243371 0 0 .23316 35.0933 46.3135 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243371 0 0 .23316 35.0933 46.3135 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.2339 46.2344 mo
34.2637 46.3711 34.5566 46.4219 34.8882 46.3486 cv
35.2192 46.2754 35.4629 46.1055 35.4326 45.9688 cv
35.4019 45.832 35.1099 45.7813 34.7783 45.8545 cv
34.4468 45.9277 34.2026 46.0977 34.2339 46.2344 cv
cp
level3{
gsave
clp
[-.533493 .118554 .0636143 .28771 34.835 46.1025 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.533493 .118554 .0636143 .28771 34.835 46.1025 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.688 46.5439 mo
32.7427 46.4229 32.582 46.2344 32.3315 46.124 cv
32.0806 46.0127 31.834 46.0215 31.7793 46.1426 cv
31.7256 46.2637 31.8853 46.4521 32.1367 46.5635 cv
32.3877 46.6748 32.6343 46.666 32.688 46.5439 cv
cp
level3{
gsave
clp
[.403748 .179444 .114323 -.256141 32.2329 46.3418 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.403748 .179444 .114323 -.256141 32.2329 46.3418 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.999 46.0713 mo
33.0322 45.9424 32.8418 45.7852 32.5747 45.7197 cv
32.3091 45.6533 32.0669 45.7051 32.0342 45.834 cv
32.0024 45.9629 32.1934 46.1201 32.4595 46.1855 cv
32.7266 46.252 32.9678 46.2002 32.999 46.0713 cv
cp
level3{
gsave
clp
[.429271 .105511 .0679318 -.271727 32.5151 45.9531 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.429271 .105511 .0679318 -.271727 32.5151 45.9531 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.6851 45.8496 mo
32.6372 46.0088 32.7915 46.1953 33.0298 46.2656 cv
33.2676 46.3369 33.499 46.2666 33.5459 46.1084 cv
33.5938 45.9492 33.4399 45.7637 33.2017 45.6924 cv
32.9644 45.6211 32.7329 45.6914 32.6851 45.8496 cv
cp
level3{
gsave
clp
[-.383687 -.114382 -.101351 .334459 33.1157 45.9785 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.383687 -.114382 -.101351 .334459 33.1157 45.9785 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.894 46.1582 mo
32.9155 46.3271 33.2109 46.4268 33.5527 46.3828 cv
33.8955 46.3379 34.1548 46.1641 34.1328 45.9971 cv
34.1104 45.8281 33.8145 45.7275 33.4727 45.7715 cv
33.1304 45.8174 32.8711 45.9902 32.894 46.1582 cv
cp
level3{
gsave
clp
[-.55121 .0723372 .0462958 .355899 33.5132 46.0771 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.55121 .0723372 .0462958 .355899 33.5132 46.0771 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.8057 46.4297 mo
35.8594 46.3086 35.6997 46.1201 35.4487 46.0088 cv
35.1982 45.8975 34.9502 45.9063 34.8965 46.0273 cv
34.8428 46.1494 35.0024 46.3379 35.2534 46.4482 cv
35.5044 46.5596 35.752 46.5508 35.8057 46.4297 cv
cp
level3{
gsave
clp
[.404006 .179558 .114396 -.256305 35.3501 46.2275 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.404006 .179558 .114396 -.256305 35.3501 46.2275 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.8105 46.0215 mo
33.7632 46.1797 33.9175 46.3662 34.1548 46.4365 cv
34.3931 46.5078 34.624 46.4375 34.6724 46.2793 cv
34.7192 46.1211 34.5649 45.9355 34.3276 45.8643 cv
34.0898 45.792 33.8584 45.8623 33.8105 46.0215 cv
cp
level3{
gsave
clp
[-.383702 -.114387 -.101355 .334473 34.2417 46.1504 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.383702 -.114387 -.101355 .334473 34.2417 46.1504 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.2314 46.0029 mo
34.2314 46.1445 34.4395 46.2588 34.6958 46.2588 cv
34.9531 46.2588 35.1611 46.1445 35.1611 46.0029 cv
35.1611 45.8613 34.9531 45.7461 34.6958 45.7461 cv
34.4395 45.7461 34.2314 45.8613 34.2314 46.0029 cv
cp
level3{
gsave
clp
[-.413952 0 0 .298161 34.6963 46.002 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.413952 0 0 .298161 34.6963 46.002 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.4126 46.3262 mo
32.4126 46.4365 32.5347 46.5264 32.6855 46.5264 cv
32.8369 46.5264 32.9595 46.4365 32.9595 46.3262 cv
32.9595 46.2148 32.8369 46.126 32.6855 46.126 cv
32.5347 46.126 32.4126 46.2148 32.4126 46.3262 cv
cp
level3{
gsave
clp
[-.243337 0 0 .233127 32.686 46.3252 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243337 0 0 .233127 32.686 46.3252 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.1787 46.2715 mo
35.1787 46.3828 35.3013 46.4717 35.4526 46.4717 cv
35.603 46.4717 35.7261 46.3828 35.7261 46.2715 cv
35.7261 46.1611 35.603 46.0713 35.4526 46.0713 cv
35.3013 46.0713 35.1787 46.1611 35.1787 46.2715 cv
cp
level3{
gsave
clp
[-.243472 0 0 .233257 35.4521 46.2705 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243472 0 0 .233257 35.4521 46.2705 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.4111 46.4531 mo
33.2153 45.8076 32.894 44.8779 32.4224 43.9033 cv
31.5405 42.0791 30.584 41.6279 30.584 41.6279 cv
30.584 41.6279 31.5244 41.7246 32.5942 43.877 cv
33.1729 45.041 33.4771 45.9053 33.6343 46.4531 cv
33.4111 46.4531 li
cp
level3{
gsave
clp
[2.85223 5.62498 5.01823 -2.8976 30.9194 41.4346 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.85223 5.62498 5.01823 -2.8976 30.9194 41.4346 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
33.8555 46.2959 mo
33.6328 45.9414 33.3486 45.5342 32.9946 45.1143 cv
31.9307 43.8506 30.7959 43.5283 30.7959 43.5283 cv
30.7959 43.5283 31.9082 43.6074 33.1987 45.0996 cv
33.606 45.5703 33.9009 45.9697 34.1143 46.2959 cv
33.8555 46.2959 li
cp
level3{
gsave
clp
[2.30196 4.73132 3.90562 -2.36788 31.5576 43.0674 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.30196 4.73132 3.90562 -2.36788 31.5576 43.0674 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
35.2207 46.1855 mo
35.208 46.1279 35.1929 46.0674 35.1738 46.0059 cv
34.9214 45.1611 34.0059 44.5449 34.0059 44.5449 cv
34.0059 44.5449 35.0522 45.082 35.3843 46.0957 cv
35.394 46.126 35.4033 46.1563 35.4121 46.1855 cv
35.2207 46.1855 li
cp
level3{
gsave
clp
[-.0633784 2.33611 3.61009 1.42571 34.7236 44.8281 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0633784 2.33611 3.61009 1.42571 34.7236 44.8281 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.7383 46.3975 mo
33.7964 46.0479 33.8916 45.6436 34.0483 45.2021 cv
34.5708 43.7266 35.7368 42.8984 35.7368 42.8984 cv
35.7368 42.8984 34.4531 43.5361 33.7954 45.2949 cv
33.6343 45.7275 33.5283 46.0918 33.4604 46.3975 cv
33.7383 46.3975 li
cp
level3{
gsave
clp
[-.394844 4.5103 -4.31079 .775604 34.7368 43.0781 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394844 4.5103 -4.31079 .775604 34.7368 43.0781 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.7593 46.1855 mo
34.0415 45.9971 33.4248 45.9707 33.4248 45.9707 cv
33.4248 45.9707 34.1685 45.9375 35.0713 46.1855 cv
34.7593 46.1855 li
cp
level3{
gsave
clp
[1.86728 2.18702 4.40727 -1.69551 33.9756 45.7588 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86728 2.18702 4.40727 -1.69551 33.9756 45.7588 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.6846 46.0029 mo
33.0693 45.8643 32.5781 45.8428 32.5781 45.8428 cv
32.5781 45.8428 33.2046 45.8154 34.0059 46.0029 cv
33.6846 46.0029 li
cp
level3{
gsave
clp
[1.86919 2.18927 4.41179 -1.69724 33.064 45.6563 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86919 2.18927 4.41179 -1.69724 33.064 45.6563 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.3242 45.8721 mo
33.1563 45.5908 32.9355 45.2764 32.645 44.9463 cv
31.6416 43.8066 30.1758 43.3945 30.1758 43.3945 cv
30.1758 43.3945 31.7031 43.6113 32.9355 44.9619 cv
33.2563 45.3135 33.4883 45.6172 33.6577 45.8721 cv
33.3242 45.8721 li
cp
level3{
gsave
clp
[1.46097 4.1254 5.08847 -1.17024 31.3799 43.1182 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.46097 4.1254 5.08847 -1.17024 31.3799 43.1182 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
33.2305 45.6006 mo
32.1333 45.4355 31.1499 45.4492 31.1499 45.4492 cv
31.1499 45.4492 32.4058 45.3555 33.8291 45.6006 cv
33.2305 45.6006 li
cp
level3{
gsave
clp
[2.72482 2.2047 7.15947 -2.33661 32.0386 45.1602 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.72482 2.2047 7.15947 -2.33661 32.0386 45.1602 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.5317 46.2373 mo
33.3931 46.1748 33.2446 46.1113 33.0869 46.0469 cv
31.3696 45.3594 29.2021 45.3281 29.2021 45.3281 cv
29.2021 45.3281 31.4033 45.1963 33.499 46.0029 cv
33.7109 46.084 33.9023 46.1621 34.0742 46.2373 cv
33.5317 46.2373 li
cp
level3{
gsave
clp
[3.17601 3.15485 7.91453 -2.80474 30.6616 44.8115 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.17601 3.15485 7.91453 -2.80474 30.6616 44.8115 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.9009 46.3398 mo
34.0571 46.127 34.2495 45.9043 34.4839 45.6826 cv
35.6265 44.6035 37.4019 44.5264 37.4019 44.5264 cv
37.4019 44.5264 35.5332 44.3525 34.126 45.6191 cv
33.835 45.8818 33.6104 46.123 33.4355 46.3398 cv
33.9009 46.3398 li
cp
level3{
gsave
clp
[-1.73969 4.73791 -6.99917 -3.99209 36.0371 43.748 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.73969 4.73791 -6.99917 -3.99209 36.0371 43.748 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.5151 46.1709 mo
34.5977 46.0947 34.6899 46.0137 34.7935 45.9307 cv
35.3687 45.4678 35.9761 45.2822 35.9761 45.2822 cv
35.9761 45.2822 35.3804 45.3926 34.6851 45.9414 cv
34.5796 46.0244 34.4878 46.1006 34.4082 46.1709 cv
34.5151 46.1709 li
cp
level3{
gsave
clp
[-1.16636 1.60005 -1.94659 -.32019 35.5645 45.2148 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.16636 1.60005 -1.94659 -.32019 35.5645 45.2148 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.2622 46.0068 mo
34.1089 45.8906 33.9263 45.7686 33.7134 45.6465 cv
32.7476 45.0898 31.5864 45.0049 31.5864 45.0049 cv
31.5864 45.0049 32.7544 44.9717 33.9302 45.625 cv
34.1821 45.7646 34.3843 45.8926 34.5454 46.0068 cv
34.2622 46.0068 li
cp
level3{
gsave
clp
[1.79459 2.40137 4.00787 -1.67081 32.4292 44.6533 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.79459 2.40137 4.00787 -1.67081 32.4292 44.6533 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.8599 46.3164 mo
34.9419 46.125 35.0581 45.9092 35.2275 45.6865 cv
35.7642 44.9795 36.6782 44.8115 36.6782 44.8115 cv
36.6782 44.8115 35.7026 44.8418 35.04 45.6738 cv
34.8403 45.9248 34.7109 46.1387 34.6279 46.3164 cv
34.8599 46.3164 li
cp
level3{
gsave
clp
[-.491369 3.63302 -2.47027 -1.93071 35.8433 44.1592 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.491369 3.63302 -2.47027 -1.93071 35.8433 44.1592 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
33.8325 46.1855 mo
33.7798 46.1396 33.7246 46.0938 33.667 46.0469 cv
32.8062 45.3564 31.7529 45.1836 31.7529 45.1836 cv
31.7529 45.1836 32.8159 45.2227 33.8643 46.0381 cv
33.9302 46.0889 33.9917 46.1377 34.0488 46.1855 cv
33.8325 46.1855 li
cp
level3{
gsave
clp
[1.519 2.77733 3.5342 -1.41541 32.4697 44.8965 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.519 2.77733 3.5342 -1.41541 32.4697 44.8965 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.4395 46.1855 mo
34.4575 46.0801 34.4854 45.9717 34.5259 45.8574 cv
34.8071 45.0449 35.811 44.6396 35.811 44.6396 cv
35.811 44.6396 34.6636 44.9307 34.2939 45.8965 cv
34.2549 46 34.2246 46.0957 34.1997 46.1855 cv
34.4395 46.1855 li
cp
level3{
gsave
clp
[.0635853 2.60404 -4.20708 .0691028 34.9873 44.6533 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0635853 2.60404 -4.20708 .0691028 34.9873 44.6533 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.4961 46.3271 mo
33.605 46.1953 33.73 46.0605 33.8706 45.9238 cv
34.9604 44.8623 36.7612 44.5332 36.7612 44.5332 cv
36.7612 44.5332 34.8496 44.6699 33.502 45.9238 cv
33.3491 46.0674 33.2163 46.2012 33.1001 46.3271 cv
33.4961 46.3271 li
cp
level3{
gsave
clp
[-1.43768 3.94769 -6.68445 -1.53302 35.3726 44.2148 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.43768 3.94769 -6.68445 -1.53302 35.3726 44.2148 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
32.8892 46.2422 mo
32.9292 46.1113 32.9863 45.9697 33.064 45.8213 cv
33.4756 45.0332 34.5059 44.5742 34.5059 44.5742 cv
34.5059 44.5742 33.3599 44.9346 32.8369 45.876 cv
32.7632 46.0098 32.7046 46.1309 32.6592 46.2422 cv
32.8892 46.2422 li
cp
level3{
gsave
clp
[-.228146 2.38004 -3.90161 .531523 33.6509 44.6904 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.228146 2.38004 -3.90161 .531523 33.6509 44.6904 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
34.1997 46.3477 mo
34.3955 46.0244 34.7173 45.5586 35.1885 45.0713 cv
36.0703 44.1572 37.0269 43.9316 37.0269 43.9316 cv
37.0269 43.9316 36.0864 43.9795 35.0161 45.0576 cv
34.438 45.6406 34.1338 46.0732 33.9766 46.3477 cv
34.1997 46.3477 li
cp
level3{
gsave
clp
[-1.8091 3.56779 -3.18295 -1.83788 36.3208 43.5234 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.8091 3.56779 -3.18295 -1.83788 36.3208 43.5234 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.9668 46.4551 mo
34.0557 46.209 34.1748 45.9326 34.3296 45.6436 cv
34.8652 44.6436 35.6489 44.2813 35.6489 44.2813 cv
35.6489 44.2813 34.832 44.4727 34.1748 45.6572 cv
34.0029 45.9648 33.8789 46.2314 33.7881 46.4551 cv
33.9668 46.4551 li
cp
level3{
gsave
clp
[-1.15946 3.27401 -4.03833 -.928728 35.144 44.165 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.15946 3.27401 -4.03833 -.928728 35.144 44.165 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
34.9683 46.2588 mo
34.9282 46.1279 34.8716 45.9863 34.7935 45.8379 cv
34.3818 45.0498 33.3516 44.5908 33.3516 44.5908 cv
33.3516 44.5908 34.4976 44.9512 35.0205 45.8926 cv
35.0952 46.0273 35.1528 46.1484 35.1987 46.2588 cv
34.9683 46.2588 li
cp
level3{
gsave
clp
[.228146 2.38004 3.90161 .531523 34.2061 44.707 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.228146 2.38004 3.90161 .531523 34.2061 44.707 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.5693 46.4717 mo
33.606 46.2158 33.6807 45.8984 33.8296 45.543 cv
34.2183 44.6133 35.0854 44.0908 35.0854 44.0908 cv
35.0854 44.0908 34.1309 44.4932 33.6421 45.6025 cv
33.4829 45.9629 33.396 46.249 33.3516 46.4717 cv
33.5693 46.4717 li
cp
level3{
gsave
clp
[-1.73438 0 0 1.73438 35.0859 45.2813 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.73438 0 0 1.73438 35.0859 45.2813 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.98 46.416 mo
32.8462 46.3115 32.6934 46.2021 32.52 46.0918 cv
31.3291 45.3271 29.5977 45.0479 29.5977 45.0479 cv
29.5977 45.0479 31.4014 45.1973 32.8628 46.1025 cv
33.043 46.2148 33.1997 46.3193 33.3364 46.416 cv
32.98 46.416 li
cp
level3{
gsave
clp
[1.7389 2.75752 5.98427 -.756846 30.9292 44.8789 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.7389 2.75752 5.98427 -.756846 30.9292 44.8789 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
32.5952 46.4775 mo
32.5181 46.0664 32.4067 45.5703 32.2446 45.0449 cv
31.8164 43.6465 31.1938 43.1494 31.1938 43.1494 cv
31.1938 43.1494 31.8413 43.4072 32.3682 45.0625 cv
32.5518 45.6387 32.6685 46.1094 32.7427 46.4775 cv
32.5952 46.4775 li
cp
level3{
gsave
clp
[.632027 5.07753 2.15689 -1.49258 31.7153 42.7881 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.632027 5.07753 2.15689 -1.49258 31.7153 42.7881 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.8843 46.999 mo
34.8843 47.1094 35.0068 47.1992 35.1582 47.1992 cv
35.3096 47.1992 35.4321 47.1094 35.4321 46.999 cv
35.4321 46.8887 35.3096 46.7988 35.1582 46.7988 cv
35.0068 46.7988 34.8843 46.8887 34.8843 46.999 cv
cp
level3{
gsave
clp
[-.243627 0 0 .233405 35.1582 46.998 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243627 0 0 .233405 35.1582 46.998 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.3696 47.3203 mo
34.3696 47.4307 34.4922 47.5205 34.6436 47.5205 cv
34.7949 47.5205 34.9175 47.4307 34.9175 47.3203 cv
34.9175 47.21 34.7949 47.1201 34.6436 47.1201 cv
34.4922 47.1201 34.3696 47.21 34.3696 47.3203 cv
cp
level3{
gsave
clp
[-.243633 0 0 .23341 34.6436 47.3193 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243633 0 0 .23341 34.6436 47.3193 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.4839 46.3086 mo
34.4839 46.4189 34.6064 46.5078 34.7578 46.5078 cv
34.9087 46.5078 35.0308 46.4189 35.0308 46.3086 cv
35.0308 46.1973 34.9087 46.1074 34.7578 46.1074 cv
34.6064 46.1074 34.4839 46.1973 34.4839 46.3086 cv
cp
level3{
gsave
clp
[-.243376 0 0 .233165 34.7573 46.3066 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243376 0 0 .233165 34.7573 46.3066 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.2437 46.8779 mo
34.2437 46.9883 34.3662 47.0781 34.5171 47.0781 cv
34.668 47.0781 34.7905 46.9883 34.7905 46.8779 cv
34.7905 46.7666 34.668 46.6777 34.5171 46.6777 cv
34.3662 46.6777 34.2437 46.7666 34.2437 46.8779 cv
cp
level3{
gsave
clp
[-.243366 0 0 .233155 34.5171 46.877 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243366 0 0 .233155 34.5171 46.877 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.6284 46.8779 mo
33.6284 46.9883 33.751 47.0781 33.9023 47.0781 cv
34.0537 47.0781 34.1763 46.9883 34.1763 46.8779 cv
34.1763 46.7666 34.0537 46.6777 33.9023 46.6777 cv
33.751 46.6777 33.6284 46.7666 33.6284 46.8779 cv
cp
level3{
gsave
clp
[-.243614 0 0 .233392 33.9023 46.877 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243614 0 0 .233392 33.9023 46.877 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.3657 47.1025 mo
33.3657 47.2129 33.4883 47.3027 33.6396 47.3027 cv
33.7905 47.3027 33.9136 47.2129 33.9136 47.1025 cv
33.9136 46.9922 33.7905 46.9033 33.6396 46.9033 cv
33.4883 46.9033 33.3657 46.9922 33.3657 47.1025 cv
cp
level3{
gsave
clp
[-.243403 0 0 .23319 33.6396 47.1016 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243403 0 0 .23319 33.6396 47.1016 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.1509 46.5439 mo
33.2046 46.4229 33.0449 46.2344 32.7949 46.124 cv
32.5435 46.0127 32.2964 46.0215 32.2417 46.1426 cv
32.188 46.2637 32.3477 46.4521 32.5996 46.5635 cv
32.8501 46.6748 33.0967 46.666 33.1509 46.5439 cv
cp
level3{
gsave
clp
[.403904 .179513 .114367 -.25624 32.6953 46.3418 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.403904 .179513 .114367 -.25624 32.6953 46.3418 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.3154 46.584 mo
33.3154 46.7158 33.5 46.8232 33.728 46.8232 cv
33.9561 46.8232 34.1406 46.7158 34.1406 46.584 cv
34.1406 46.4512 33.9561 46.3428 33.728 46.3428 cv
33.5 46.3428 33.3154 46.4512 33.3154 46.584 cv
cp
level3{
gsave
clp
[-.367029 0 0 .279987 33.7285 46.583 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.367029 0 0 .279987 33.7285 46.583 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.123 46.8359 mo
33.1919 46.8125 33.2207 46.6436 33.186 46.4551 cv
33.1519 46.2666 33.0669 46.1318 32.9976 46.1543 cv
32.9277 46.1768 32.8999 46.3467 32.9346 46.5342 cv
32.9692 46.7227 33.0532 46.8574 33.123 46.8359 cv
cp
level3{
gsave
clp
[.0551965 .303581 .146706 -.0464812 33.0581 46.4951 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0551965 .303581 .146706 -.0464812 33.0581 46.4951 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.1563 46.7988 mo
32.1235 46.9424 32.272 47.1279 32.4878 47.2129 cv
32.7041 47.2988 32.9053 47.252 32.9375 47.1084 cv
32.9712 46.9639 32.8218 46.7793 32.6064 46.6934 cv
32.3906 46.6074 32.189 46.6553 32.1563 46.7988 cv
cp
level3{
gsave
clp
[-.34699 -.13735 -.069398 .303616 32.5459 46.9531 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.34699 -.13735 -.069398 .303616 32.5459 46.9531 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.2607 46.5137 mo
33.272 46.6055 33.4409 46.6465 33.6382 46.6055 cv
33.8354 46.5645 33.9868 46.458 33.9756 46.3662 cv
33.9648 46.2754 33.7964 46.2344 33.5991 46.2744 cv
33.4014 46.3154 33.2495 46.4229 33.2607 46.5137 cv
cp
level3{
gsave
clp
[-.318166 .0650794 .0231394 .192346 33.6182 46.4414 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.318166 .0650794 .0231394 .192346 33.6182 46.4414 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.3237 46.5996 mo
34.3193 46.7324 34.5 46.8506 34.7271 46.8633 cv
34.9546 46.877 35.1431 46.7803 35.1475 46.6484 cv
35.1519 46.5156 34.9712 46.3975 34.7437 46.3838 cv
34.5166 46.3711 34.3281 46.4668 34.3237 46.5996 cv
cp
level3{
gsave
clp
[-.365889 -.021693 -.0101234 .279117 34.7358 46.624 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.365889 -.021693 -.0101234 .279117 34.7358 46.624 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.1563 46.4102 mo
33.1313 46.5127 33.2769 46.6621 33.4795 46.7451 cv
33.6821 46.8291 33.8657 46.8135 33.8901 46.7119 cv
33.9146 46.6104 33.769 46.46 33.5669 46.377 cv
33.3643 46.2939 33.1797 46.3086 33.1563 46.4102 cv
cp
level3{
gsave
clp
[-.326802 -.134481 -.050611 .214012 33.5234 46.5615 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.326802 -.134481 -.050611 .214012 33.5234 46.5615 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.8071 46.5869 mo
33.8032 46.7002 33.9551 46.8018 34.146 46.8125 cv
34.3364 46.8242 34.4937 46.7412 34.4985 46.627 cv
34.5024 46.5137 34.3501 46.4111 34.1597 46.3994 cv
33.9688 46.3896 33.8105 46.4727 33.8071 46.5869 cv
cp
level3{
gsave
clp
[-.307439 -.0174022 -.00870111 .240731 34.1528 46.6064 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.307439 -.0174022 -.00870111 .240731 34.1528 46.6064 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.0874 46.5645 mo
34.0874 46.6729 34.2168 46.7607 34.3765 46.7607 cv
34.5356 46.7607 34.6655 46.6729 34.6655 46.5645 cv
34.6655 46.4551 34.5356 46.3672 34.3765 46.3672 cv
34.2168 46.3672 34.0874 46.4551 34.0874 46.5645 cv
cp
level3{
gsave
clp
[-.256558 0 0 .230467 34.3765 46.5654 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.256558 0 0 .230467 34.3765 46.5654 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.9878 46.5938 mo
34.9878 46.7021 35.1172 46.79 35.2759 46.79 cv
35.4355 46.79 35.5649 46.7021 35.5649 46.5938 cv
35.5649 46.4844 35.4355 46.3965 35.2759 46.3965 cv
35.1172 46.3965 34.9878 46.4844 34.9878 46.5938 cv
cp
level3{
gsave
clp
[-.256291 0 0 .230228 35.2764 46.5947 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.256291 0 0 .230228 35.2764 46.5947 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.7036 46.7168 mo
34.7305 46.8018 34.9023 46.7871 35.0854 46.6826 cv
35.2695 46.5791 35.3955 46.4268 35.3677 46.3418 cv
35.3398 46.2559 35.1685 46.2715 34.9849 46.375 cv
34.8013 46.4785 34.6753 46.6318 34.7036 46.7168 cv
cp
level3{
gsave
clp
[-.29478 .16762 .059245 .17918 35.0332 46.5273 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.29478 .16762 .059245 .17918 35.0332 46.5273 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.8394 46.3691 mo
34.8677 46.4541 35.0386 46.4395 35.2222 46.335 cv
35.4063 46.2314 35.5327 46.0781 35.5044 45.9932 cv
35.4766 45.9082 35.3057 45.9238 35.1216 46.0273 cv
34.938 46.1309 34.8115 46.2842 34.8394 46.3691 cv
cp
level3{
gsave
clp
[-.295078 .167789 .0593049 .179361 35.1694 46.1797 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.295078 .167789 .0593049 .179361 35.1694 46.1797 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.6235 46.7324 mo
32.6187 46.8643 32.7993 46.9824 33.0278 46.9961 cv
33.2549 47.0088 33.4429 46.9131 33.4468 46.7803 cv
33.4521 46.6484 33.2715 46.5293 33.043 46.5166 cv
32.8159 46.5029 32.6284 46.5996 32.6235 46.7324 cv
cp
level3{
gsave
clp
[-.36575 -.0216848 -.0101196 .279011 33.0352 46.7568 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.36575 -.0216848 -.0101196 .279011 33.0352 46.7568 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.0566 46.3389 mo
35.0327 46.4414 35.1772 46.5908 35.3799 46.6748 cv
35.5825 46.7588 35.7661 46.7432 35.7905 46.6416 cv
35.8149 46.54 35.6704 46.3896 35.4673 46.3066 cv
35.2646 46.2227 35.0801 46.2383 35.0566 46.3389 cv
cp
level3{
gsave
clp
[-.326793 -.134477 -.0506096 .214006 35.4233 46.4912 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.326793 -.134477 -.0506096 .214006 35.4233 46.4912 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.9243 46.9473 mo
34.9502 46.9834 35.0151 46.957 35.0703 46.8896 cv
35.1255 46.8203 35.1499 46.7363 35.124 46.7002 cv
35.0981 46.665 35.0332 46.6914 34.978 46.7588 cv
34.9229 46.8281 34.8979 46.9121 34.9243 46.9473 cv
cp
level3{
gsave
clp
[-.000780303 .000956501 .000465665 .000654448 590.769 250.462 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.000780303 .000956501 .000465665 .000654448 590.769 250.462 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.9053 46.6514 mo
33.9009 46.7656 34.0527 46.8662 34.2437 46.8779 cv
34.4351 46.8887 34.5923 46.8057 34.5962 46.6914 cv
34.5996 46.5771 34.4487 46.4766 34.2573 46.4648 cv
34.0664 46.4531 33.9092 46.5371 33.9053 46.6514 cv
cp
level3{
gsave
clp
[-.307346 -.0173969 -.00869847 .240658 34.2505 46.6719 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.307346 -.0173969 -.00869847 .240658 34.2505 46.6719 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.6807 46.54 mo
33.6807 46.6484 33.8101 46.7373 33.9697 46.7373 cv
34.1284 46.7373 34.2578 46.6484 34.2578 46.54 cv
34.2578 46.4316 34.1284 46.3428 33.9697 46.3428 cv
33.8101 46.3428 33.6807 46.4316 33.6807 46.54 cv
cp
level3{
gsave
clp
[-.256508 0 0 .230423 33.9692 46.541 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.256508 0 0 .230423 33.9692 46.541 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.0898 46.874 mo
35.1016 46.9648 35.27 47.0059 35.4683 46.9658 cv
35.665 46.9248 35.8164 46.8174 35.8057 46.7256 cv
35.7944 46.6348 35.6255 46.5938 35.4272 46.6348 cv
35.231 46.6748 35.0796 46.7822 35.0898 46.874 cv
cp
level3{
gsave
clp
[-.318585 .0651651 .0231698 .192599 35.4482 46.8018 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.318585 .0651651 .0231698 .192599 35.4482 46.8018 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.6704 47.5234 mo
32.6704 47.6338 32.793 47.7236 32.9443 47.7236 cv
33.0957 47.7236 33.2183 47.6338 33.2183 47.5234 cv
33.2183 47.4131 33.0957 47.3232 32.9443 47.3232 cv
32.793 47.3232 32.6704 47.4131 32.6704 47.5234 cv
cp
level3{
gsave
clp
[-.243615 0 0 .233394 32.9443 47.5225 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243615 0 0 .233394 32.9443 47.5225 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.3472 46.627 mo
33.3472 46.7383 33.4697 46.8271 33.6206 46.8271 cv
33.772 46.8271 33.8945 46.7383 33.8945 46.627 cv
33.8945 46.5176 33.772 46.4268 33.6206 46.4268 cv
33.4697 46.4268 33.3472 46.5176 33.3472 46.627 cv
cp
level3{
gsave
clp
[-.243465 0 0 .23325 33.6206 46.626 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243465 0 0 .23325 33.6206 46.626 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.6733 46.1826 mo
34.6733 46.3037 34.4741 46.4014 34.229 46.4014 cv
33.9839 46.4014 33.7852 46.3037 33.7852 46.1826 cv
33.7852 46.0615 33.9839 45.9639 34.229 45.9639 cv
34.4741 45.9639 34.6733 46.0615 34.6733 46.1826 cv
cp
level3{
gsave
clp
[.394885 0 0 .255012 34.2295 46.1816 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394885 0 0 .255012 34.2295 46.1816 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.625 46.0947 mo
35.5747 46.2451 35.1001 46.3008 34.5625 46.2197 cv
34.0249 46.1406 33.6299 45.9541 33.6792 45.8047 cv
33.728 45.6553 34.2036 45.5996 34.7412 45.6797 cv
35.2778 45.7598 35.6743 45.9453 35.625 46.0947 cv
cp
level3{
gsave
clp
[.864666 .128688 -.104107 .315213 34.6538 45.9482 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.864666 .128688 -.104107 .315213 34.6538 45.9482 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.1313 46.4336 mo
38.043 46.3018 38.3032 46.0947 38.7095 45.9736 cv
39.1162 45.8525 39.5171 45.8623 39.605 45.9951 cv
39.6919 46.1279 39.4331 46.333 39.0254 46.4551 cv
38.6187 46.5771 38.2183 46.5674 38.1313 46.4336 cv
cp
level3{
gsave
clp
[-.654986 .195194 -.185073 -.280502 38.8667 46.2139 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.654986 .195194 -.185073 -.280502 38.8667 46.2139 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.626 45.916 mo
37.5728 45.7754 37.8833 45.6035 38.3149 45.5322 cv
38.7466 45.459 39.1392 45.5156 39.1914 45.6572 cv
39.2427 45.7979 38.9346 45.9697 38.5015 46.042 cv
38.0693 46.1143 37.6772 46.0576 37.626 45.916 cv
cp
level3{
gsave
clp
[-.694342 .115483 -.109709 -.297369 38.4082 45.7861 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.694342 .115483 -.109709 -.297369 38.4082 45.7861 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.1357 45.6748 mo
38.2129 45.8477 37.9634 46.0508 37.5767 46.1289 cv
37.1919 46.207 36.8164 46.1309 36.7393 45.957 cv
36.6611 45.7842 36.9116 45.5801 37.2983 45.5029 cv
37.6836 45.4248 38.0586 45.501 38.1357 45.6748 cv
cp
level3{
gsave
clp
[.620494 -.125542 .16306 .365081 37.438 45.8174 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.620494 -.125542 .16306 .365081 37.438 45.8174 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.7979 46.0117 mo
37.7612 46.1963 37.2832 46.3057 36.7285 46.2568 cv
36.1724 46.208 35.752 46.0186 35.7876 45.835 cv
35.8237 45.6504 36.3027 45.541 36.8579 45.5898 cv
37.4126 45.6387 37.833 45.8281 37.7979 46.0117 cv
cp
level3{
gsave
clp
[.893213 .0781742 -.0752789 .389423 36.7915 45.9229 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.893213 .0781742 -.0752789 .389423 36.7915 45.9229 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.0747 46.3086 mo
32.9868 46.1748 33.2466 45.9697 33.6528 45.8486 cv
34.0596 45.7266 34.4614 45.7363 34.5493 45.8691 cv
34.6362 46.002 34.3774 46.208 33.9697 46.3291 cv
33.5625 46.4502 33.1616 46.4414 33.0747 46.3086 cv
cp
level3{
gsave
clp
[-.655069 .195219 -.185097 -.280537 33.8115 46.0889 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.655069 .195219 -.185097 -.280537 33.8115 46.0889 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.3101 45.8623 mo
36.3877 46.0352 36.1377 46.2383 35.752 46.3164 cv
35.3652 46.3945 34.9902 46.3174 34.9131 46.1445 cv
34.8359 45.9707 35.0854 45.7676 35.4722 45.6904 cv
35.8579 45.6113 36.2329 45.6885 36.3101 45.8623 cv
cp
level3{
gsave
clp
[.620729 -.125589 .163122 .36522 35.6123 46.0049 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.620729 -.125589 .163122 .36522 35.6123 46.0049 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.627 45.8418 mo
35.627 45.9971 35.2896 46.1211 34.8735 46.1211 cv
34.457 46.1211 34.1196 45.9971 34.1196 45.8418 cv
34.1196 45.6865 34.457 45.5615 34.8735 45.5615 cv
35.2896 45.5615 35.627 45.6865 35.627 45.8418 cv
cp
level3{
gsave
clp
[.669452 0 0 .326773 34.8735 45.8428 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.669452 0 0 .326773 34.8735 45.8428 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.5786 46.1953 mo
38.5786 46.3154 38.3794 46.4141 38.1343 46.4141 cv
37.8892 46.4141 37.6909 46.3154 37.6909 46.1953 cv
37.6909 46.0742 37.8892 45.9766 38.1343 45.9766 cv
38.3794 45.9766 38.5786 46.0742 38.5786 46.1953 cv
cp
level3{
gsave
clp
[.39474 0 0 .254919 38.1348 46.1943 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.39474 0 0 .254919 38.1348 46.1943 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.0913 46.1357 mo
34.0913 46.2568 33.8916 46.3545 33.6475 46.3545 cv
33.4023 46.3545 33.2031 46.2568 33.2031 46.1357 cv
33.2031 46.0137 33.4023 45.916 33.6475 45.916 cv
33.8916 45.916 34.0913 46.0137 34.0913 46.1357 cv
cp
level3{
gsave
clp
[.395196 0 0 .255213 33.6475 46.1338 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395196 0 0 .255213 33.6475 46.1338 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.958 46.334 mo
37.2759 45.6279 37.7969 44.6123 38.5615 43.5459 cv
39.9937 41.5518 41.5439 41.0576 41.5439 41.0576 cv
41.5439 41.0576 40.0195 41.1631 38.2832 43.5166 cv
37.3442 44.79 36.8511 45.7344 36.5962 46.334 cv
36.958 46.334 li
cp
level3{
gsave
clp
[-3.52211 6.94608 -6.19684 -3.57815 40.6563 40.5454 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.52211 6.94608 -6.19684 -3.57815 40.6563 40.5454 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
36.2378 46.1631 mo
36.5986 45.7754 37.0601 45.3291 37.6333 44.8711 cv
39.3599 43.4883 41.2012 43.1357 41.2012 43.1357 cv
41.2012 43.1357 39.396 43.2227 37.3037 44.8535 cv
36.6431 45.3691 36.1646 45.8057 35.8179 46.1631 cv
36.2378 46.1631 li
cp
level3{
gsave
clp
[-3.03006 6.22782 -5.14095 -3.11683 39.6899 42.2197 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.03006 6.22782 -5.14095 -3.11683 39.6899 42.2197 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.022 46.041 mo
34.0439 45.9775 34.0688 45.9131 34.0981 45.8457 cv
34.5088 44.9209 35.9941 44.2471 35.9941 44.2471 cv
35.9941 44.2471 34.2964 44.835 33.7578 45.9434 cv
33.7412 45.9766 33.7261 46.0098 33.7114 46.041 cv
34.022 46.041 li
cp
level3{
gsave
clp
[.0555277 2.04674 -3.16291 1.2491 34.8408 44.7002 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0555277 2.04674 -3.16291 1.2491 34.8408 44.7002 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.4277 46.2734 mo
36.334 45.8906 36.1787 45.4482 35.9243 44.9658 cv
35.0771 43.3516 33.1851 43.1025 33.1851 43.1025 cv
33.1851 43.1025 35.2681 43.1445 36.3345 45.0684 cv
36.5962 45.54 36.7681 45.9395 36.8784 46.2734 cv
36.4277 46.2734 li
cp
level3{
gsave
clp
[.328648 3.75415 3.58808 .645573 34.9194 43.3887 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.328648 3.75415 3.58808 .645573 34.9194 43.3887 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.7715 46.041 mo
35.936 45.8359 36.936 45.8066 36.936 45.8066 cv
36.936 45.8066 35.73 45.7705 34.2656 46.041 cv
34.7715 46.041 li
cp
level3{
gsave
clp
[-2.77748 3.25307 -6.55557 -2.52197 36.0049 45.4492 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.77748 3.25307 -6.55557 -2.52197 36.0049 45.4492 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.5151 45.8418 mo
37.5132 45.6904 38.3101 45.668 38.3101 45.668 cv
38.3101 45.668 37.293 45.6367 35.9927 45.8418 cv
36.5151 45.8418 li
cp
level3{
gsave
clp
[-2.80702 3.28768 -6.62531 -2.5488 37.4927 45.3535 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.80702 3.28768 -6.62531 -2.5488 37.4927 45.3535 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.1001 45.6982 mo
37.3716 45.3926 37.7305 45.0469 38.2007 44.6865 cv
39.8291 43.4395 42.2075 42.9893 42.2075 42.9893 cv
42.2075 42.9893 39.729 43.2266 37.7295 44.7041 cv
37.21 45.0879 36.833 45.4189 36.5576 45.6982 cv
37.1001 45.6982 li
cp
level3{
gsave
clp
[-1.78631 5.04405 -6.22159 -1.43083 40.0396 42.4912 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.78631 5.04405 -6.22159 -1.43083 40.0396 42.4912 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
37.2524 45.4014 mo
39.0308 45.2217 40.6265 45.2373 40.6265 45.2373 cv
40.6265 45.2373 38.5889 45.1338 36.2808 45.4014 cv
37.2524 45.4014 li
cp
level3{
gsave
clp
[-4.20342 3.40106 -11.0445 -3.60455 39.1504 44.7559 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.20342 3.40106 -11.0445 -3.60455 39.1504 44.7559 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.7637 46.0986 mo
36.9873 46.0293 37.228 45.96 37.4839 45.8896 cv
40.27 45.1377 43.7856 45.1045 43.7856 45.1045 cv
43.7856 45.1045 40.2148 44.959 36.8159 45.8418 cv
36.4722 45.9297 36.1621 46.0166 35.8823 46.0986 cv
36.7637 46.0986 li
cp
level3{
gsave
clp
[-4.57279 4.54232 -11.3953 -4.03823 41.2407 44.2031 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.57279 4.54232 -11.3953 -4.03823 41.2407 44.2031 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.1646 46.2109 mo
35.9092 45.9775 35.5977 45.7344 35.2178 45.4922 cv
33.3643 44.3105 30.4849 44.2266 30.4849 44.2266 cv
30.4849 44.2266 33.5166 44.0371 35.7988 45.4229 cv
36.271 45.709 36.6357 45.9727 36.9185 46.2109 cv
36.1646 46.2109 li
cp
level3{
gsave
clp
[2.41328 6.57241 9.70921 -5.53782 32.8442 42.8818 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.41328 6.57241 9.70921 -5.53782 32.8442 42.8818 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
35.168 46.0254 mo
35.0342 45.9424 34.8833 45.8535 34.7153 45.7627 cv
33.7842 45.2568 32.7979 45.0537 32.7979 45.0537 cv
32.7979 45.0537 33.7632 45.1738 34.8916 45.7744 cv
35.0635 45.8652 35.2119 45.9492 35.3413 46.0254 cv
35.168 46.0254 li
cp
level3{
gsave
clp
[1.41406 1.93985 2.35998 -.388189 33.6172 44.9189 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.41406 1.93985 2.35998 -.388189 33.6172 44.9189 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
35.5781 45.8457 mo
35.8267 45.7197 36.1221 45.5859 36.4683 45.4521 cv
38.0352 44.8447 39.9185 44.751 39.9185 44.751 cv
39.9185 44.751 38.0229 44.7139 36.1157 45.4287 cv
35.7065 45.582 35.3799 45.7217 35.1182 45.8457 cv
35.5781 45.8457 li
cp
level3{
gsave
clp
[-2.48533 3.32564 -5.55049 -2.3139 38.4004 44.1182 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.48533 3.32564 -5.55049 -2.3139 38.4004 44.1182 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.6074 46.1846 mo
34.4751 45.9756 34.2856 45.7383 34.0122 45.4961 cv
33.1421 44.7236 31.6592 44.5381 31.6592 44.5381 cv
31.6592 44.5381 33.2412 44.5723 34.3159 45.4824 cv
34.6392 45.7559 34.8496 45.9902 34.9849 46.1846 cv
34.6074 46.1846 li
cp
level3{
gsave
clp
[.671379 4.96395 3.37523 -2.63802 33.0635 43.4404 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.671379 4.96395 3.37523 -2.63802 33.0635 43.4404 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
36.2749 46.041 mo
36.3594 45.9912 36.4497 45.9414 36.5435 45.8906 cv
37.9399 45.1348 39.6479 44.9453 39.6479 44.9453 cv
39.6479 44.9453 37.9233 44.9893 36.2217 45.8799 cv
36.1167 45.9365 36.0176 45.9902 35.9238 46.041 cv
36.2749 46.041 li
cp
level3{
gsave
clp
[-2.0453 3.7396 -4.75871 -1.90581 38.3652 44.4316 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.0453 3.7396 -4.75871 -1.90581 38.3652 44.4316 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
35.2905 46.041 mo
35.2612 45.9268 35.2158 45.8076 35.1514 45.6836 cv
34.6943 44.7949 33.0649 44.3506 33.0649 44.3506 cv
33.0649 44.3506 34.9268 44.6699 35.5259 45.7256 cv
35.5894 45.8389 35.6401 45.9434 35.6792 46.041 cv
35.2905 46.041 li
cp
level3{
gsave
clp
[-.069032 2.8271 4.56746 .0750221 34.3911 44.373 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.069032 2.8271 4.56746 .0750221 34.3911 44.373 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.8203 46.1963 mo
36.6431 46.0537 36.4419 45.9053 36.2134 45.7549 cv
34.4448 44.5947 31.5239 44.2344 31.5239 44.2344 cv
31.5239 44.2344 34.6245 44.3848 36.811 45.7559 cv
37.0586 45.9111 37.2749 46.0586 37.4624 46.1963 cv
36.8203 46.1963 li
cp
level3{
gsave
clp
[1.81447 4.98233 8.43636 -1.9348 33.9355 43.6816 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.81447 4.98233 8.43636 -1.9348 33.9355 43.6816 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
37.8042 46.1035 mo
37.7393 45.96 37.647 45.8057 37.521 45.6426 cv
36.8525 44.7813 35.1821 44.2793 35.1821 44.2793 cv
35.1821 44.2793 37.041 44.6738 37.8892 45.7021 cv
38.0103 45.8486 38.105 45.9824 38.1782 46.1035 cv
37.8042 46.1035 li
cp
level3{
gsave
clp
[.231189 2.41179 3.95366 .538614 36.6118 44.4736 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.231189 2.41179 3.95366 .538614 36.6118 44.4736 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
35.6792 46.2188 mo
35.3623 45.8652 34.8403 45.3555 34.0762 44.8232 cv
32.644 43.8232 31.0933 43.5762 31.0933 43.5762 cv
31.0933 43.5762 32.6187 43.6299 34.3545 44.8086 cv
35.293 45.4453 35.7861 45.9189 36.0415 46.2188 cv
35.6792 46.2188 li
cp
level3{
gsave
clp
[2.38183 4.69729 4.19061 -2.41972 32.4888 42.7705 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.38183 4.69729 4.19061 -2.41972 32.4888 42.7705 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.0571 46.3359 mo
35.9116 46.0674 35.7202 45.7646 35.4683 45.4482 cv
34.5991 44.3545 33.3281 43.96 33.3281 43.96 cv
33.3281 43.96 34.6528 44.167 35.7202 45.4629 cv
35.998 45.8008 36.1997 46.0908 36.3457 46.3359 cv
36.0571 46.3359 li
cp
level3{
gsave
clp
[1.36811 3.86318 4.76504 -1.09585 34.3335 43.7285 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.36811 3.86318 4.76504 -1.09585 34.3335 43.7285 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
34.4316 46.1221 mo
34.4985 45.9795 34.5894 45.8252 34.7163 45.6611 cv
35.3833 44.7988 37.0547 44.2979 37.0547 44.2979 cv
37.0547 44.2979 35.1958 44.6924 34.3477 45.7207 cv
34.2271 45.8682 34.1323 46.001 34.0581 46.1221 cv
34.4316 46.1221 li
cp
level3{
gsave
clp
[-.231165 2.41154 -3.95325 .538558 35.6255 44.4922 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.231165 2.41154 -3.95325 .538558 35.6255 44.4922 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.7017 46.3545 mo
36.6431 46.0752 36.5215 45.7285 36.2803 45.3389 cv
35.6489 44.3213 34.2417 43.751 34.2417 43.751 cv
34.2417 43.751 35.7915 44.1904 36.585 45.4033 cv
36.8413 45.7979 36.9829 46.1113 37.0557 46.3545 cv
36.7017 46.3545 li
cp
level3{
gsave
clp
[2.81396 0 0 2.81396 34.2417 45.0527 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.81396 0 0 2.81396 34.2417 45.0527 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.6577 46.293 mo
37.875 46.1787 38.123 46.0605 38.4038 45.9395 cv
40.3359 45.1035 43.144 44.7979 43.144 44.7979 cv
43.144 44.7979 40.2188 44.9619 37.8477 45.9512 cv
37.5557 46.0742 37.3013 46.1875 37.0796 46.293 cv
37.6577 46.293 li
cp
level3{
gsave
clp
[-2.13665 3.38827 -7.3531 -.929966 40.772 44.498 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.13665 3.38827 -7.3531 -.929966 40.772 44.498 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
38.2827 46.3613 mo
38.4067 45.9111 38.5874 45.3691 38.8501 44.7949 cv
39.5454 43.2656 40.5542 42.7217 40.5542 42.7217 cv
40.5542 42.7217 39.5044 43.0029 38.6504 44.8135 cv
38.3521 45.4434 38.1631 45.959 38.0435 46.3613 cv
38.2827 46.3613 li
cp
level3{
gsave
clp
[-.772398 6.20523 -2.63593 -1.82408 39.6064 42.0654 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.772398 6.20523 -2.63593 -1.82408 39.6064 42.0654 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.5688 46.9307 mo
34.5688 47.0518 34.3696 47.1494 34.1245 47.1494 cv
33.8794 47.1494 33.6807 47.0518 33.6807 46.9307 cv
33.6807 46.8096 33.8794 46.7119 34.1245 46.7119 cv
34.3696 46.7119 34.5688 46.8096 34.5688 46.9307 cv
cp
level3{
gsave
clp
[.394869 0 0 .255002 34.125 46.9297 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394869 0 0 .255002 34.125 46.9297 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.4033 47.2832 mo
35.4033 47.4033 35.2041 47.501 34.959 47.501 cv
34.7134 47.501 34.5151 47.4033 34.5151 47.2832 cv
34.5151 47.1621 34.7134 47.0635 34.959 47.0635 cv
35.2041 47.0635 35.4033 47.1621 35.4033 47.2832 cv
cp
level3{
gsave
clp
[.394873 0 0 .255005 34.9595 47.2813 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394873 0 0 .255005 34.9595 47.2813 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.2178 46.1748 mo
35.2178 46.2959 35.019 46.3945 34.7739 46.3945 cv
34.5288 46.3945 34.3296 46.2959 34.3296 46.1748 cv
34.3296 46.0547 34.5288 45.9561 34.7739 45.9561 cv
35.019 45.9561 35.2178 46.0547 35.2178 46.1748 cv
cp
level3{
gsave
clp
[.39521 0 0 .255222 34.7739 46.1738 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.39521 0 0 .255222 34.7739 46.1738 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.6074 46.7988 mo
35.6074 46.9199 35.4092 47.0176 35.1641 47.0176 cv
34.9189 47.0176 34.7202 46.9199 34.7202 46.7988 cv
34.7202 46.6777 34.9189 46.5791 35.1641 46.5791 cv
35.4092 46.5791 35.6074 46.6777 35.6074 46.7988 cv
cp
level3{
gsave
clp
[.394923 0 0 .255037 35.1641 46.7969 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394923 0 0 .255037 35.1641 46.7969 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.6055 46.7988 mo
36.6055 46.9199 36.4072 47.0176 36.1621 47.0176 cv
35.917 47.0176 35.7178 46.9199 35.7178 46.7988 cv
35.7178 46.6777 35.917 46.5791 36.1621 46.5791 cv
36.4072 46.5791 36.6055 46.6777 36.6055 46.7988 cv
cp
level3{
gsave
clp
[.395062 0 0 .255126 36.1616 46.7969 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395062 0 0 .255126 36.1616 46.7969 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.0313 47.0439 mo
37.0313 47.165 36.8325 47.2637 36.5879 47.2637 cv
36.3428 47.2637 36.1431 47.165 36.1431 47.0439 cv
36.1431 46.9238 36.3428 46.8262 36.5879 46.8262 cv
36.8325 46.8262 37.0313 46.9238 37.0313 47.0439 cv
cp
level3{
gsave
clp
[.394869 0 0 .255002 36.5874 47.0439 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394869 0 0 .255002 36.5874 47.0439 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.3799 46.4336 mo
37.2925 46.3018 37.5527 46.0947 37.958 45.9736 cv
38.3657 45.8525 38.7666 45.8623 38.8545 45.9951 cv
38.9414 46.1279 38.6826 46.333 38.2749 46.4551 cv
37.8682 46.5771 37.4678 46.5674 37.3799 46.4336 cv
cp
level3{
gsave
clp
[-.655348 .195302 -.185176 -.280657 38.1162 46.2139 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.655348 .195302 -.185176 -.280657 38.1162 46.2139 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.1128 46.4766 mo
37.1128 46.6221 36.8135 46.7393 36.4443 46.7393 cv
36.0752 46.7393 35.7754 46.6221 35.7754 46.4766 cv
35.7754 46.332 36.0752 46.2148 36.4443 46.2148 cv
36.8135 46.2148 37.1128 46.332 37.1128 46.4766 cv
cp
level3{
gsave
clp
[.593963 0 0 .306375 36.4438 46.4775 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.593963 0 0 .306375 36.4438 46.4775 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.4263 46.752 mo
37.3145 46.7285 37.2671 46.542 37.3232 46.3359 cv
37.3794 46.1309 37.5156 45.9834 37.6289 46.0068 cv
37.7417 46.0313 37.7871 46.2178 37.731 46.4229 cv
37.6743 46.6289 37.5391 46.7764 37.4263 46.752 cv
cp
level3{
gsave
clp
[-.0898642 .331918 -.237705 -.0507298 37.5278 46.3789 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0898642 .331918 -.237705 -.0507298 37.5278 46.3789 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.9946 46.7119 mo
39.0469 46.8691 38.8066 47.0723 38.4565 47.166 cv
38.1064 47.2588 37.7793 47.207 37.7256 47.0498 cv
37.6729 46.8926 37.9141 46.6904 38.2646 46.5967 cv
38.6138 46.5039 38.9409 46.5557 38.9946 46.7119 cv
cp
level3{
gsave
clp
[.563569 -.150671 .113004 .331767 38.3613 46.8799 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.563569 -.150671 .113004 .331767 38.3613 46.8799 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.2017 46.4014 mo
37.1831 46.501 36.9102 46.5459 36.5903 46.501 cv
36.2695 46.457 36.0244 46.3389 36.0415 46.2393 cv
36.0601 46.1396 36.334 46.0938 36.6538 46.1387 cv
36.9746 46.1846 37.2202 46.3018 37.2017 46.4014 cv
cp
level3{
gsave
clp
[.515412 .0723893 -.0376424 .211377 36.624 46.3213 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.515412 .0723893 -.0376424 .211377 36.624 46.3213 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.478 46.4941 mo
35.4858 46.6396 35.1929 46.7686 34.8228 46.7832 cv
34.4536 46.7979 34.1489 46.6914 34.1421 46.5469 cv
34.1343 46.4023 34.4282 46.2734 34.7964 46.2588 cv
35.1655 46.2451 35.4712 46.3496 35.478 46.4941 cv
cp
level3{
gsave
clp
[.593816 -.0231169 .0158929 .306299 34.811 46.5205 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.593816 -.0231169 .0158929 .306299 34.811 46.5205 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.3716 46.2871 mo
37.4116 46.3994 37.1768 46.5625 36.8481 46.6543 cv
36.5186 46.7451 36.2202 46.7285 36.1812 46.6182 cv
36.1416 46.5059 36.377 46.3428 36.7051 46.252 cv
37.0342 46.1602 37.333 46.1758 37.3716 46.2871 cv
cp
level3{
gsave
clp
[.529976 -.14625 .0825373 .23458 36.7764 46.4531 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.529976 -.14625 .0825373 .23458 36.7764 46.4531 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.3164 46.4805 mo
36.3218 46.6045 36.0767 46.7148 35.7661 46.7275 cv
35.457 46.7402 35.2012 46.6484 35.1943 46.5234 cv
35.1885 46.3994 35.4341 46.2891 35.7437 46.2764 cv
36.0537 46.2646 36.3096 46.3555 36.3164 46.4805 cv
cp
level3{
gsave
clp
[.499404 -.0202657 .0130279 .263454 35.7554 46.5039 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.499404 -.0202657 .0130279 .263454 35.7554 46.5039 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.8604 46.4551 mo
35.8604 46.5742 35.6514 46.6709 35.3921 46.6709 cv
35.1338 46.6709 34.9233 46.5742 34.9233 46.4551 cv
34.9233 46.3359 35.1338 46.2402 35.3921 46.2402 cv
35.6514 46.2402 35.8604 46.3359 35.8604 46.4551 cv
cp
level3{
gsave
clp
[.417377 0 0 .250716 35.3931 46.4541 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417377 0 0 .250716 35.3931 46.4541 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.4009 46.4873 mo
34.4009 46.6074 34.1914 46.7031 33.9326 46.7031 cv
33.6738 46.7031 33.4644 46.6074 33.4644 46.4873 cv
33.4644 46.3691 33.6738 46.2715 33.9326 46.2715 cv
34.1914 46.2715 34.4009 46.3691 34.4009 46.4873 cv
cp
level3{
gsave
clp
[.417563 0 0 .250828 33.9341 46.4863 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417563 0 0 .250828 33.9341 46.4863 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.8623 46.6221 mo
34.8179 46.7148 34.5391 46.6992 34.2417 46.585 cv
33.9438 46.4727 33.7388 46.3047 33.7842 46.2119 cv
33.8296 46.1182 34.1064 46.1357 34.4048 46.248 cv
34.7026 46.3623 34.9087 46.5303 34.8623 46.6221 cv
cp
level3{
gsave
clp
[.481343 .182678 -.0956886 .195727 34.3223 46.416 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.481343 .182678 -.0956886 .195727 34.3223 46.416 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.6406 46.2422 mo
34.5962 46.3359 34.3174 46.3193 34.0205 46.2051 cv
33.7222 46.0918 33.5181 45.9238 33.5625 45.8311 cv
33.6074 45.7383 33.8848 45.7549 34.1831 45.8691 cv
34.481 45.9824 34.686 46.1494 34.6406 46.2422 cv
cp
level3{
gsave
clp
[.480951 .18253 -.0956107 .195567 34.1001 46.0361 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.480951 .18253 -.0956107 .195567 34.1001 46.0361 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.2363 46.6387 mo
38.2441 46.7842 37.9507 46.9131 37.5806 46.9277 cv
37.2114 46.9414 36.9063 46.8369 36.8999 46.6914 cv
36.8921 46.5469 37.1855 46.418 37.5547 46.4033 cv
37.9238 46.3887 38.229 46.4941 38.2363 46.6387 cv
cp
level3{
gsave
clp
[.593929 -.0231213 .0158959 .306357 37.5684 46.665 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.593929 -.0231213 .0158959 .306357 37.5684 46.665 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.2891 46.21 mo
34.3281 46.3223 34.0938 46.4854 33.7646 46.5771 cv
33.4355 46.668 33.1372 46.6514 33.0981 46.54 cv
33.0586 46.4287 33.2939 46.2656 33.623 46.1738 cv
33.9517 46.083 34.2505 46.0996 34.2891 46.21 cv
cp
level3{
gsave
clp
[.530262 -.146329 .0825818 .234706 33.6934 46.375 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.530262 -.146329 .0825818 .234706 33.6934 46.375 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.5044 46.875 mo
34.4619 46.9141 34.3569 46.8857 34.2661 46.8115 cv
34.1768 46.7363 34.1382 46.6445 34.1792 46.6045 cv
34.2207 46.5664 34.3276 46.5947 34.4165 46.6689 cv
34.5059 46.7441 34.5459 46.8359 34.5044 46.875 cv
cp
level3{
gsave
clp
[.144796 .120181 -.0883255 .0825337 34.3413 46.7402 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.144796 .120181 -.0883255 .0825337 34.3413 46.7402 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.1567 46.5508 mo
36.1636 46.6758 35.9175 46.7861 35.6074 46.7988 cv
35.2979 46.8105 35.0415 46.7197 35.0356 46.5947 cv
35.0293 46.4697 35.2759 46.3594 35.5854 46.3477 cv
35.895 46.335 36.1509 46.4258 36.1567 46.5508 cv
cp
level3{
gsave
clp
[.499139 -.0202549 .013021 .263314 35.5957 46.5752 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.499139 -.0202549 .013021 .263314 35.5957 46.5752 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.5205 46.4297 mo
36.5205 46.5479 36.311 46.6445 36.0522 46.6445 cv
35.7944 46.6445 35.585 46.5479 35.585 46.4297 cv
35.585 46.3105 35.7944 46.2139 36.0522 46.2139 cv
36.311 46.2139 36.5205 46.3105 36.5205 46.4297 cv
cp
level3{
gsave
clp
[.417031 0 0 .250508 36.0542 46.4277 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417031 0 0 .250508 36.0542 46.4277 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.2344 46.7939 mo
34.2163 46.8945 33.9429 46.9395 33.6226 46.8945 cv
33.3018 46.8496 33.0566 46.7324 33.0747 46.6318 cv
33.0928 46.5332 33.3657 46.4873 33.6865 46.5322 cv
34.0068 46.5771 34.252 46.6943 34.2344 46.7939 cv
cp
level3{
gsave
clp
[.515394 .0723868 -.0376411 .21137 33.6567 46.7148 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.515394 .0723868 -.0376411 .21137 33.6567 46.7148 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.1587 47.5039 mo
38.1587 47.625 37.9604 47.7236 37.7153 47.7236 cv
37.4702 47.7236 37.271 47.625 37.271 47.5039 cv
37.271 47.3838 37.4702 47.2861 37.7153 47.2861 cv
37.9604 47.2861 38.1587 47.3838 38.1587 47.5039 cv
cp
level3{
gsave
clp
[.394725 0 0 .254909 37.7148 47.5039 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394725 0 0 .254909 37.7148 47.5039 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.0615 46.5244 mo
37.0615 46.6445 36.8633 46.7432 36.6182 46.7432 cv
36.373 46.7432 36.1743 46.6445 36.1743 46.5244 cv
36.1743 46.4033 36.373 46.3057 36.6182 46.3057 cv
36.8633 46.3057 37.0615 46.4033 37.0615 46.5244 cv
cp
level3{
gsave
clp
[.394596 0 0 .254826 36.6182 46.5234 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394596 0 0 .254826 36.6182 46.5234 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.8911 46.3662 mo
24.8911 46.4736 24.7446 46.5596 24.563 46.5596 cv
24.3804 46.5596 24.2339 46.4736 24.2339 46.3662 cv
24.2339 46.2607 24.3804 46.1748 24.563 46.1748 cv
24.7446 46.1748 24.8911 46.2607 24.8911 46.3662 cv
cp
level3{
gsave
clp
[.291985 0 0 .224735 24.5625 46.3682 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291985 0 0 .224735 24.5625 46.3682 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.5962 46.2891 mo
25.5591 46.4209 25.2075 46.4697 24.8096 46.3994 cv
24.4116 46.3291 24.1182 46.165 24.1553 46.0332 cv
24.1914 45.9023 24.5439 45.8535 24.9419 45.9238 cv
25.3398 45.9941 25.6328 46.1582 25.5962 46.2891 cv
cp
level3{
gsave
clp
[.640889 .114289 -.0766752 .277767 24.8755 46.1631 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.640889 .114289 -.0766752 .277767 24.8755 46.1631 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.4526 46.5879 mo
27.3877 46.4707 27.5801 46.2891 27.8809 46.1836 cv
28.1831 46.0762 28.4795 46.084 28.5444 46.2012 cv
28.6094 46.3184 28.4175 46.5 28.1157 46.6064 cv
27.8145 46.7139 27.5171 46.7051 27.4526 46.5879 cv
cp
level3{
gsave
clp
[-.485953 .172108 -.137397 -.245869 27.9985 46.3945 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.485953 .172108 -.137397 -.245869 27.9985 46.3945 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.0791 46.1328 mo
27.0396 46.0088 27.269 45.8564 27.5889 45.7939 cv
27.9092 45.7295 28.1997 45.7793 28.2383 45.9043 cv
28.2769 46.0283 28.0483 46.1797 27.7275 46.2432 cv
27.4067 46.3066 27.1167 46.2568 27.0791 46.1328 cv
cp
level3{
gsave
clp
[-.515698 .101401 -.0811211 -.262195 27.6587 46.0176 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.515698 .101401 -.0811211 -.262195 27.6587 46.0176 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.4565 45.9199 mo
27.5132 46.0723 27.3286 46.252 27.043 46.3193 cv
26.7568 46.3887 26.479 46.3203 26.4219 46.168 cv
26.3643 46.0156 26.5493 45.8359 26.8354 45.7686 cv
27.1206 45.6992 27.3989 45.7666 27.4565 45.9199 cv
cp
level3{
gsave
clp
[.460276 -.110003 .121582 .321325 26.9375 46.0449 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.460276 -.110003 .121582 .321325 26.9375 46.0449 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.2061 46.2158 mo
27.1792 46.3789 26.8247 46.4756 26.4141 46.4326 cv
26.0024 46.3896 25.6909 46.2217 25.7173 46.0605 cv
25.7437 45.8984 26.0986 45.8018 26.5103 45.8447 cv
26.9209 45.8887 27.2329 46.0547 27.2061 46.2158 cv
cp
level3{
gsave
clp
[.661393 .069468 -.0564427 .342998 26.4629 46.1377 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.661393 .069468 -.0564427 .342998 26.4629 46.1377 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.707 46.4775 mo
23.6421 46.3604 23.8345 46.1787 24.1353 46.0723 cv
24.4375 45.9658 24.7349 45.9736 24.7998 46.0908 cv
24.8638 46.208 24.6724 46.3887 24.3701 46.4961 cv
24.0688 46.6025 23.7715 46.5947 23.707 46.4775 cv
cp
level3{
gsave
clp
[-.486541 .172317 -.137564 -.246167 24.2534 46.2842 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.486541 .172317 -.137564 -.246167 24.2534 46.2842 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.104 46.084 mo
26.1616 46.2363 25.9761 46.416 25.6899 46.4844 cv
25.4048 46.5537 25.1265 46.4854 25.0688 46.333 cv
25.0122 46.1807 25.1978 46.001 25.4834 45.9326 cv
25.769 45.8643 26.0474 45.9316 26.104 46.084 cv
cp
level3{
gsave
clp
[.460679 -.110099 .121689 .321606 25.585 46.209 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.460679 -.110099 .121689 .321606 25.585 46.209 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.5986 46.0664 mo
25.5986 46.2021 25.3481 46.3135 25.04 46.3135 cv
24.731 46.3135 24.4819 46.2021 24.4819 46.0664 cv
24.4819 45.9297 24.731 45.8193 25.04 45.8193 cv
25.3481 45.8193 25.5986 45.9297 25.5986 46.0664 cv
cp
level3{
gsave
clp
[.496589 0 0 .288109 25.04 46.0654 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.496589 0 0 .288109 25.04 46.0654 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.7842 46.3779 mo
27.7842 46.4844 27.6372 46.5703 27.4561 46.5703 cv
27.2734 46.5703 27.127 46.4844 27.127 46.3779 cv
27.127 46.2715 27.2734 46.1846 27.4561 46.1846 cv
27.6372 46.1846 27.7842 46.2715 27.7842 46.3779 cv
cp
level3{
gsave
clp
[.292238 0 0 .224929 27.4556 46.3789 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292238 0 0 .224929 27.4556 46.3789 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.4609 46.3262 mo
24.4609 46.4316 24.313 46.5176 24.1318 46.5176 cv
23.9502 46.5176 23.8027 46.4316 23.8027 46.3262 cv
23.8027 46.2188 23.9502 46.1328 24.1318 46.1328 cv
24.313 46.1328 24.4609 46.2188 24.4609 46.3262 cv
cp
level3{
gsave
clp
[.29227 0 0 .224954 24.1318 46.3262 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.29227 0 0 .224954 24.1318 46.3262 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.5845 46.5 mo
26.8198 45.8789 27.2056 44.9834 27.772 44.0459 cv
28.8325 42.2891 29.981 41.8545 29.981 41.8545 cv
29.981 41.8545 28.8516 41.9463 27.5654 44.0195 cv
26.8701 45.1406 26.5049 45.9727 26.3159 46.5 cv
26.5845 46.5 li
cp
level3{
gsave
clp
[-2.92837 5.77514 -5.1522 -2.97496 29.4424 41.5439 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.92837 5.77514 -5.1522 -2.97496 29.4424 41.5439 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
26.0503 46.3496 mo
26.3174 46.0078 26.6602 45.6152 27.0845 45.2119 cv
28.3628 43.9941 29.7271 43.6836 29.7271 43.6836 cv
29.7271 43.6836 28.3901 43.7607 26.8394 45.1963 cv
26.3506 45.6504 25.9956 46.0352 25.7393 46.3496 cv
26.0503 46.3496 li
cp
level3{
gsave
clp
[-2.44853 5.03258 -4.15429 -2.51865 28.6865 43.0537 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.44853 5.03258 -4.15429 -2.51865 28.6865 43.0537 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.4092 46.2422 mo
24.4253 46.1865 24.4443 46.1289 24.4663 46.0703 cv
24.77 45.2559 25.8701 44.6631 25.8701 44.6631 cv
25.8701 44.6631 24.6118 45.1807 24.2134 46.1563 cv
24.2012 46.1846 24.1899 46.2139 24.1792 46.2422 cv
24.4092 46.2422 li
cp
level3{
gsave
clp
[.0547118 2.01666 -3.11644 1.23075 25.0127 45.002 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0547118 2.01666 -3.11644 1.23075 25.0127 45.002 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.1919 46.4463 mo
26.1221 46.1104 26.0063 45.7207 25.8188 45.2949 cv
25.1909 43.875 23.7896 43.6553 23.7896 43.6553 cv
23.7896 43.6553 25.3325 43.6924 26.1221 45.3857 cv
26.3159 45.8018 26.4429 46.1523 26.5244 46.4463 cv
26.1919 46.4463 li
cp
level3{
gsave
clp
[.298356 3.40813 3.25737 .586071 25.0552 43.8691 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.298356 3.40813 3.25737 .586071 25.0552 43.8691 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.9644 46.2422 mo
25.8271 46.0605 26.5679 46.0361 26.5679 46.0361 cv
26.5679 46.0361 25.6743 46.0039 24.5903 46.2422 cv
24.9644 46.2422 li
cp
level3{
gsave
clp
[-2.12818 2.4926 -5.02306 -1.9324 25.8887 45.7754 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.12818 2.4926 -5.02306 -1.9324 25.8887 45.7754 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.2559 46.0664 mo
26.9951 45.9326 27.5854 45.9131 27.5854 45.9131 cv
27.5854 45.9131 26.8325 45.8857 25.8696 46.0664 cv
26.2559 46.0664 li
cp
level3{
gsave
clp
[-2.14332 2.51033 -5.05879 -1.94615 26.9878 45.6836 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.14332 2.51033 -5.05879 -1.94615 26.9878 45.6836 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.6895 45.9404 mo
26.8901 45.6709 27.1558 45.3672 27.5049 45.0498 cv
28.7109 43.9521 30.4722 43.5557 30.4722 43.5557 cv
30.4722 43.5557 28.6367 43.7637 27.1558 45.0645 cv
26.7705 45.4023 26.4912 45.6943 26.2876 45.9404 cv
26.6895 45.9404 li
cp
level3{
gsave
clp
[-1.49165 4.21202 -5.19532 -1.19481 28.9292 43.2012 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.49165 4.21202 -5.19532 -1.19481 28.9292 43.2012 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
26.8013 45.6787 mo
28.1191 45.5205 29.3013 45.5342 29.3013 45.5342 cv
29.3013 45.5342 27.792 45.4434 26.082 45.6787 cv
26.8013 45.6787 li
cp
level3{
gsave
clp
[-3.17487 2.56884 -8.34198 -2.72254 28.2178 45.1807 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.17487 2.56884 -8.34198 -2.72254 28.2178 45.1807 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.4399 46.292 mo
26.6064 46.2314 26.7842 46.1709 26.9731 46.1094 cv
29.0376 45.4463 31.6416 45.418 31.6416 45.418 cv
31.6416 45.418 28.9971 45.29 26.479 46.0664 cv
26.2241 46.1445 25.9941 46.2207 25.7871 46.292 cv
26.4399 46.292 li
cp
level3{
gsave
clp
[-3.55319 3.52952 -8.85445 -3.13782 29.8071 44.7686 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.55319 3.52952 -8.85445 -3.13782 29.8071 44.7686 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.9956 46.3916 mo
25.8071 46.1865 25.5767 45.9727 25.2954 45.7578 cv
23.9224 44.7178 21.7896 44.6445 21.7896 44.6445 cv
21.7896 44.6445 24.0347 44.4785 25.7256 45.6973 cv
26.0752 45.9492 26.3452 46.1816 26.5547 46.3916 cv
25.9956 46.3916 li
cp
level3{
gsave
clp
[1.9058 5.19031 7.66748 -4.37328 23.4951 43.6729 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.9058 5.19031 7.66748 -4.37328 23.4951 43.6729 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.2583 46.2285 mo
25.1592 46.1553 25.0479 46.0771 24.9229 45.9971 cv
24.2329 45.5508 23.5029 45.373 23.5029 45.373 cv
23.5029 45.373 24.2173 45.4795 25.0532 46.0068 cv
25.1802 46.0879 25.2905 46.1611 25.3867 46.2285 cv
25.2583 46.2285 li
cp
level3{
gsave
clp
[1.18546 1.62625 1.97847 -.325433 24.0654 45.2803 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.18546 1.62625 1.97847 -.325433 24.0654 45.2803 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.5615 46.0703 mo
25.7461 45.959 25.9648 45.8418 26.2212 45.7236 cv
27.3818 45.1875 28.7759 45.1064 28.7759 45.1064 cv
28.7759 45.1064 27.3735 45.0732 25.9604 45.7031 cv
25.6567 45.8379 25.4146 45.96 25.2212 46.0703 cv
25.5615 46.0703 li
cp
level3{
gsave
clp
[-1.96331 2.62713 -4.38468 -1.8279 27.6953 44.6563 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.96331 2.62713 -4.38468 -1.8279 27.6953 44.6563 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.8428 46.3691 mo
24.7451 46.1846 24.6045 45.9766 24.4019 45.7617 cv
23.7573 45.082 22.6587 44.9189 22.6587 44.9189 cv
22.6587 44.9189 23.8306 44.9492 24.6274 45.75 cv
24.8662 45.9912 25.0229 46.1982 25.1226 46.3691 cv
24.8428 46.3691 li
cp
level3{
gsave
clp
[.533829 3.94695 2.68373 -2.09755 23.6851 44.1152 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.533829 3.94695 2.68373 -2.09755 23.6851 44.1152 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
26.0781 46.2422 mo
26.1411 46.1982 26.2075 46.1543 26.2773 46.1104 cv
27.3115 45.4443 28.5762 45.2783 28.5762 45.2783 cv
28.5762 45.2783 27.2993 45.3154 26.0391 46.1006 cv
25.9609 46.1494 25.8877 46.1973 25.8179 46.2422 cv
26.0781 46.2422 li
cp
level3{
gsave
clp
[-1.63529 2.98994 -3.80476 -1.52376 27.6602 44.9111 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.63529 2.98994 -3.80476 -1.52376 27.6602 44.9111 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.3491 46.2422 mo
25.3262 46.1416 25.293 46.0361 25.2461 45.9268 cv
24.9072 45.1445 23.7007 44.7539 23.7007 44.7539 cv
23.7007 44.7539 25.0786 45.0342 25.5229 45.9648 cv
25.5698 46.0635 25.6079 46.1563 25.6362 46.2422 cv
25.3491 46.2422 li
cp
level3{
gsave
clp
[-.0609901 2.49776 4.03537 .0662824 24.6851 44.7705 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0609901 2.49776 4.03537 .0662824 24.6851 44.7705 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.4824 46.3789 mo
26.3506 46.2529 26.2021 46.1221 26.0322 45.9902 cv
24.7217 44.9688 22.5591 44.6514 22.5591 44.6514 cv
22.5591 44.6514 24.8555 44.7842 26.4756 45.9912 cv
26.6587 46.1279 26.8188 46.2578 26.958 46.3789 cv
26.4824 46.3789 li
cp
level3{
gsave
clp
[1.49379 4.10178 6.94537 -1.59286 24.2993 44.252 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.49379 4.10178 6.94537 -1.59286 24.2993 44.252 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
27.2114 46.2969 mo
27.1631 46.1709 27.0942 46.0352 27.001 45.8916 cv
26.5063 45.1328 25.2686 44.6904 25.2686 44.6904 cv
25.2686 44.6904 26.6455 45.0381 27.2734 45.9443 cv
27.3628 46.0732 27.4341 46.1904 27.4883 46.2969 cv
27.2114 46.2969 li
cp
level3{
gsave
clp
[.211447 2.20584 3.61604 .492619 26.3154 44.833 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.211447 2.20584 3.61604 .492619 26.3154 44.833 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
25.6372 46.3994 mo
25.4019 46.0879 25.0151 45.6387 24.4492 45.1699 cv
23.3887 44.29 22.2402 44.0723 22.2402 44.0723 cv
22.2402 44.0723 23.3696 44.1191 24.6553 45.1563 cv
25.3506 45.7178 25.7158 46.1348 25.9048 46.3994 cv
25.6372 46.3994 li
cp
level3{
gsave
clp
[1.92422 3.79482 3.38549 -1.95483 23.2012 43.5176 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.92422 3.79482 3.38549 -1.95483 23.2012 43.5176 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.9165 46.5029 mo
25.8091 46.2656 25.6665 46 25.4805 45.7207 cv
24.8369 44.7578 23.895 44.4092 23.895 44.4092 cv
23.895 44.4092 24.877 44.5928 25.6675 45.7344 cv
25.8726 46.0303 26.0225 46.2861 26.1313 46.5029 cv
25.9165 46.5029 li
cp
level3{
gsave
clp
[1.16228 3.28197 4.04814 -.930984 24.5854 44.25 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.16228 3.28197 4.04814 -.930984 24.5854 44.25 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
24.7129 46.3135 mo
24.7617 46.1875 24.8291 46.0508 24.9238 45.9072 cv
25.418 45.1494 26.6563 44.707 26.6563 44.707 cv
26.6563 44.707 25.2788 45.0547 24.6509 45.96 cv
24.5605 46.0898 24.4912 46.207 24.436 46.3135 cv
24.7129 46.3135 li
cp
level3{
gsave
clp
[-.211438 2.20574 -3.61588 .492597 25.6099 44.8496 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.211438 2.20574 -3.61588 .492597 25.6099 44.8496 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.3945 46.5186 mo
26.3506 46.2715 26.2607 45.9668 26.082 45.624 cv
25.6143 44.7275 24.5718 44.2266 24.5718 44.2266 cv
24.5718 44.2266 25.7197 44.6133 26.3076 45.6807 cv
26.4976 46.0273 26.6025 46.3037 26.6563 46.5186 cv
26.3945 46.5186 li
cp
level3{
gsave
clp
[2.08447 0 0 2.08447 24.5718 45.373 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.08447 0 0 2.08447 24.5718 45.373 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.1025 46.4639 mo
27.2632 46.3643 27.4468 46.2588 27.6548 46.1523 cv
29.0864 45.416 31.1665 45.1475 31.1665 45.1475 cv
31.1665 45.1475 28.999 45.291 27.2432 46.1631 cv
27.0269 46.2705 26.8384 46.3701 26.6743 46.4639 cv
27.1025 46.4639 li
cp
level3{
gsave
clp
[-1.78002 2.82273 -6.12578 -.774744 29.4702 44.9336 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.78002 2.82273 -6.12578 -.774744 29.4702 44.9336 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
27.5649 46.5234 mo
27.6572 46.1279 27.791 45.6504 27.9854 45.1445 cv
28.5005 43.7979 29.248 43.3203 29.248 43.3203 cv
29.248 43.3203 28.4702 43.5674 27.8374 45.1611 cv
27.6172 45.7168 27.4771 46.1699 27.3877 46.5234 cv
27.5649 46.5234 li
cp
level3{
gsave
clp
[-.645024 5.18195 -2.20124 -1.52328 28.5747 42.8545 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.645024 5.18195 -2.20124 -1.52328 28.5747 42.8545 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.814 47.0254 mo
24.814 47.1318 24.6665 47.2188 24.4849 47.2188 cv
24.3032 47.2188 24.1567 47.1318 24.1567 47.0254 cv
24.1567 46.9199 24.3032 46.833 24.4849 46.833 cv
24.6665 46.833 24.814 46.9199 24.814 47.0254 cv
cp
level3{
gsave
clp
[.292247 0 0 .224936 24.4854 47.0273 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292247 0 0 .224936 24.4854 47.0273 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.4321 47.335 mo
25.4321 47.4414 25.2847 47.5273 25.103 47.5273 cv
24.9214 47.5273 24.7739 47.4414 24.7739 47.335 cv
24.7739 47.2285 24.9214 47.1426 25.103 47.1426 cv
25.2847 47.1426 25.4321 47.2285 25.4321 47.335 cv
cp
level3{
gsave
clp
[.29226 0 0 .224947 25.103 47.3359 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.29226 0 0 .224947 25.103 47.3359 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.2954 46.3604 mo
25.2954 46.4668 25.1479 46.5537 24.9663 46.5537 cv
24.7847 46.5537 24.6377 46.4668 24.6377 46.3604 cv
24.6377 46.2539 24.7847 46.168 24.9663 46.168 cv
25.1479 46.168 25.2954 46.2539 25.2954 46.3604 cv
cp
level3{
gsave
clp
[.292369 0 0 .22503 24.9663 46.3623 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292369 0 0 .22503 24.9663 46.3623 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.5835 46.9102 mo
25.5835 47.0156 25.4365 47.1016 25.2554 47.1016 cv
25.0737 47.1016 24.9263 47.0156 24.9263 46.9102 cv
24.9263 46.8027 25.0737 46.7158 25.2554 46.7158 cv
25.4365 46.7158 25.5835 46.8027 25.5835 46.9102 cv
cp
level3{
gsave
clp
[.292243 0 0 .224933 25.2549 46.9102 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292243 0 0 .224933 25.2549 46.9102 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.3232 46.9102 mo
26.3232 47.0156 26.1758 47.1016 25.9941 47.1016 cv
25.8125 47.1016 25.665 47.0156 25.665 46.9102 cv
25.665 46.8027 25.8125 46.7158 25.9941 46.7158 cv
26.1758 46.7158 26.3232 46.8027 26.3232 46.9102 cv
cp
level3{
gsave
clp
[.292526 0 0 .225152 25.9941 46.9102 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292526 0 0 .225152 25.9941 46.9102 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.6382 47.126 mo
26.6382 47.2324 26.4912 47.3193 26.3096 47.3193 cv
26.1279 47.3193 25.9805 47.2324 25.9805 47.126 cv
25.9805 47.0195 26.1279 46.9336 26.3096 46.9336 cv
26.4912 46.9336 26.6382 47.0195 26.6382 47.126 cv
cp
level3{
gsave
clp
[.292459 0 0 .225099 26.3091 47.1279 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292459 0 0 .225099 26.3091 47.1279 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.897 46.5879 mo
26.8315 46.4707 27.0239 46.2891 27.3252 46.1836 cv
27.627 46.0762 27.9243 46.084 27.9893 46.2012 cv
28.0537 46.3184 27.8623 46.5 27.5596 46.6064 cv
27.2583 46.7139 26.9619 46.7051 26.897 46.5879 cv
cp
level3{
gsave
clp
[-.486007 .172128 -.137413 -.245897 27.4434 46.3945 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.486007 .172128 -.137413 -.245897 27.4434 46.3945 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.6992 46.626 mo
26.6992 46.7539 26.4771 46.8564 26.2036 46.8564 cv
25.9302 46.8564 25.7085 46.7539 25.7085 46.626 cv
25.7085 46.498 25.9302 46.3945 26.2036 46.3945 cv
26.4771 46.3945 26.6992 46.498 26.6992 46.626 cv
cp
level3{
gsave
clp
[.440874 0 0 .269745 26.2026 46.625 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.440874 0 0 .269745 26.2026 46.625 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.9302 46.8691 mo
26.8477 46.8467 26.813 46.6836 26.8545 46.5029 cv
26.896 46.3213 26.9976 46.1914 27.0815 46.2119 cv
27.1646 46.2344 27.1978 46.3975 27.1572 46.5791 cv
27.1147 46.7598 27.0142 46.8896 26.9302 46.8691 cv
cp
level3{
gsave
clp
[-.0665417 .292205 -.17648 -.0448433 27.0068 46.541 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0665417 .292205 -.17648 -.0448433 27.0068 46.541 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.0923 46.833 mo
28.1313 46.9717 27.9536 47.1504 27.6943 47.2324 cv
27.4346 47.3145 27.1919 47.2695 27.1523 47.1309 cv
27.1133 46.9922 27.2925 46.8135 27.5518 46.7314 cv
27.8105 46.6494 28.0527 46.6953 28.0923 46.833 cv
cp
level3{
gsave
clp
[.416978 -.131754 .0839748 .292464 27.6235 46.9814 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.416978 -.131754 .0839748 .292464 27.6235 46.9814 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.7642 46.5596 mo
26.7515 46.6475 26.5488 46.6865 26.311 46.6475 cv
26.0737 46.6074 25.8921 46.5049 25.9058 46.416 cv
25.9185 46.3291 26.1221 46.2891 26.3589 46.3281 cv
26.5962 46.3682 26.7778 46.4707 26.7642 46.5596 cv
cp
level3{
gsave
clp
[.38255 .0637584 -.027532 .185479 26.3354 46.4883 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.38255 .0637584 -.027532 .185479 26.3354 46.4883 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.4873 46.6416 mo
25.4937 46.7686 25.2764 46.8828 25.0024 46.8955 cv
24.7295 46.9082 24.5029 46.8154 24.4985 46.6885 cv
24.4927 46.5605 24.7095 46.4463 24.9829 46.4336 cv
25.2568 46.4209 25.4819 46.5137 25.4873 46.6416 cv
cp
level3{
gsave
clp
[.439869 -.0202571 .0115755 .269131 24.9907 46.6631 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.439869 -.0202571 .0115755 .269131 24.9907 46.6631 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.8906 46.459 mo
26.9204 46.5576 26.7461 46.7021 26.5024 46.7813 cv
26.2583 46.8623 26.0376 46.8477 26.0088 46.749 cv
25.98 46.6514 26.1538 46.5068 26.397 46.4268 cv
26.6401 46.3467 26.8618 46.3613 26.8906 46.459 cv
cp
level3{
gsave
clp
[.392157 -.12879 .0607771 .206932 26.4497 46.6035 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.392157 -.12879 .0607771 .206932 26.4497 46.6035 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.1084 46.6279 mo
26.1128 46.7383 25.9316 46.8359 25.7017 46.8457 cv
25.4722 46.8584 25.2822 46.7773 25.2778 46.668 cv
25.2734 46.5576 25.4556 46.46 25.6851 46.4492 cv
25.9141 46.4385 26.104 46.5186 26.1084 46.6279 cv
cp
level3{
gsave
clp
[.368777 -.0173542 .0101233 .23139 25.6938 46.6465 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.368777 -.0173542 .0101233 .23139 25.6938 46.6465 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.771 46.6074 mo
25.771 46.7119 25.6162 46.7959 25.4238 46.7959 cv
25.2324 46.7959 25.0771 46.7119 25.0771 46.6074 cv
25.0771 46.5029 25.2324 46.418 25.4238 46.418 cv
25.6162 46.418 25.771 46.5029 25.771 46.6074 cv
cp
level3{
gsave
clp
[.307554 0 0 .220919 25.4243 46.6074 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307554 0 0 .220919 25.4243 46.6074 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.6899 46.6348 mo
24.6899 46.7402 24.5347 46.8252 24.3428 46.8252 cv
24.1514 46.8252 23.9961 46.7402 23.9961 46.6348 cv
23.9961 46.5303 24.1514 46.4463 24.3428 46.4463 cv
24.5347 46.4463 24.6899 46.5303 24.6899 46.6348 cv
cp
level3{
gsave
clp
[.307843 0 0 .221127 24.3433 46.6367 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307843 0 0 .221127 24.3433 46.6367 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.0317 46.7539 mo
24.9985 46.8359 24.793 46.8213 24.5718 46.7217 cv
24.3521 46.6211 24.1997 46.4736 24.2329 46.3926 cv
24.2661 46.3105 24.4722 46.3262 24.6929 46.4248 cv
24.9131 46.5244 25.0654 46.6719 25.0317 46.7539 cv
cp
level3{
gsave
clp
[.356034 .160649 -.0709173 .172228 24.6318 46.5752 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.356034 .160649 -.0709173 .172228 24.6318 46.5752 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.8677 46.4199 mo
24.8335 46.501 24.6289 46.4873 24.4077 46.3867 cv
24.187 46.2871 24.0356 46.1396 24.0688 46.0576 cv
24.1021 45.9766 24.3081 45.9902 24.5288 46.0908 cv
24.749 46.1904 24.9009 46.3379 24.8677 46.4199 cv
cp
level3{
gsave
clp
[.355786 .160537 -.0708679 .172108 24.4678 46.2402 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.355786 .160537 -.0708679 .172108 24.4678 46.2402 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.5308 46.7686 mo
27.5361 46.8965 27.3188 47.0107 27.0449 47.0234 cv
26.772 47.0352 26.5459 46.9434 26.541 46.8154 cv
26.5352 46.6885 26.7524 46.5742 27.0264 46.5605 cv
27.2993 46.5479 27.5249 46.6416 27.5308 46.7686 cv
cp
level3{
gsave
clp
[.440431 -.020283 .0115903 .269474 27.0337 46.79 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.440431 -.020283 .0115903 .269474 27.0337 46.79 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.6069 46.3906 mo
24.6362 46.4893 24.4624 46.6338 24.2188 46.7139 cv
23.9751 46.7939 23.7544 46.7793 23.7246 46.6816 cv
23.6958 46.584 23.8701 46.4395 24.1138 46.3594 cv
24.3569 46.2783 24.5781 46.293 24.6069 46.3906 cv
cp
level3{
gsave
clp
[.392283 -.128831 .0607966 .206998 24.166 46.5361 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.392283 -.128831 .0607966 .206998 24.166 46.5361 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.7666 46.9766 mo
24.7354 47.0107 24.6577 46.9863 24.5903 46.9199 cv
24.5234 46.8545 24.4946 46.7725 24.5259 46.7383 cv
24.5566 46.7051 24.6357 46.7295 24.7012 46.7949 cv
24.7681 46.8604 24.7974 46.9424 24.7666 46.9766 cv
cp
level3{
gsave
clp
[.000991861 .000978457 -.000603158 .000670176 848.586 256.604 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.000991861 .000978457 -.000603158 .000670176 848.586 256.604 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.9907 46.6914 mo
25.9956 46.8008 25.8135 46.8984 25.5835 46.9102 cv
25.355 46.9199 25.1646 46.8398 25.1597 46.7295 cv
25.1553 46.6201 25.3384 46.5225 25.5674 46.5117 cv
25.7969 46.501 25.9858 46.5811 25.9907 46.6914 cv
cp
level3{
gsave
clp
[.369543 -.0173903 .0101443 .23187 25.5762 46.71 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.369543 -.0173903 .0101443 .23187 25.5762 46.71 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.2598 46.584 mo
26.2598 46.6885 26.1045 46.7734 25.9131 46.7734 cv
25.7217 46.7734 25.5659 46.6885 25.5659 46.584 cv
25.5659 46.4795 25.7217 46.3945 25.9131 46.3945 cv
26.1045 46.3945 26.2598 46.4795 26.2598 46.584 cv
cp
level3{
gsave
clp
[.307819 0 0 .22111 25.9131 46.585 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307819 0 0 .22111 25.9131 46.585 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.5669 46.9053 mo
24.5532 46.9932 24.3501 47.0332 24.1128 46.9941 cv
23.875 46.9541 23.6943 46.8516 23.707 46.7627 cv
23.7207 46.6748 23.9238 46.6357 24.1611 46.6748 cv
24.3979 46.7148 24.5796 46.8174 24.5669 46.9053 cv
cp
level3{
gsave
clp
[.38294 .0638233 -.02756 .185668 24.1372 46.835 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.38294 .0638233 -.02756 .185668 24.1372 46.835 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.4731 47.5313 mo
27.4731 47.6377 27.3267 47.7236 27.145 47.7236 cv
26.9634 47.7236 26.8164 47.6377 26.8164 47.5313 cv
26.8164 47.4238 26.9634 47.3379 27.145 47.3379 cv
27.3267 47.3379 27.4731 47.4238 27.4731 47.5313 cv
cp
level3{
gsave
clp
[.292141 0 0 .224855 27.1445 47.5322 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292141 0 0 .224855 27.1445 47.5322 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.6606 46.668 mo
26.6606 46.7744 26.5142 46.8604 26.3325 46.8604 cv
26.1509 46.8604 26.0034 46.7744 26.0034 46.668 cv
26.0034 46.5615 26.1509 46.4756 26.3325 46.4756 cv
26.5142 46.4756 26.6606 46.5615 26.6606 46.668 cv
cp
level3{
gsave
clp
[.291988 0 0 .224737 26.332 46.6689 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291988 0 0 .224737 26.332 46.6689 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.1235 46.0986 mo
32.1235 46.2109 31.9624 46.3008 31.7637 46.3008 cv
31.5645 46.3008 31.4033 46.2109 31.4033 46.0986 cv
31.4033 45.9863 31.5645 45.8965 31.7637 45.8965 cv
31.9624 45.8965 32.1235 45.9863 32.1235 46.0986 cv
cp
level3{
gsave
clp
[.319943 0 0 .236176 31.7646 46.0996 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319943 0 0 .236176 31.7646 46.0996 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.896 46.0176 mo
32.855 46.1563 32.4702 46.208 32.0337 46.1338 cv
31.5977 46.0596 31.2769 45.8867 31.3174 45.749 cv
31.3574 45.6104 31.7432 45.5596 32.1787 45.6338 cv
32.6147 45.708 32.9355 45.8789 32.896 46.0176 cv
cp
level3{
gsave
clp
[.702944 .120788 -.0851453 .291078 32.106 45.8848 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.702944 .120788 -.0851453 .291078 32.106 45.8848 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.9297 46.3311 mo
34.8579 46.208 35.0679 46.0176 35.3989 45.9063 cv
35.7285 45.7939 36.0547 45.8027 36.125 45.9248 cv
36.1963 46.0479 35.9858 46.2383 35.6558 46.3506 cv
35.3252 46.4629 35.001 46.4541 34.9297 46.3311 cv
cp
level3{
gsave
clp
[-.531792 .1799 -.150246 -.258977 35.5273 46.1279 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.531792 .1799 -.150246 -.258977 35.5273 46.1279 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.5195 45.8525 mo
34.4771 45.7217 34.7285 45.5625 35.0781 45.4971 cv
35.4292 45.4297 35.7476 45.4824 35.7891 45.6133 cv
35.8315 45.7432 35.5811 45.9023 35.23 45.9688 cv
34.8789 46.0352 34.562 45.9834 34.5195 45.8525 cv
cp
level3{
gsave
clp
[-.565266 .106729 -.0889405 -.274727 35.1538 45.7314 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.565266 .106729 -.0889405 -.274727 35.1538 45.7314 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.9336 45.6289 mo
34.9961 45.7891 34.7935 45.9775 34.4805 46.0498 cv
34.167 46.1211 33.8628 46.0498 33.7993 45.8896 cv
33.7368 45.7295 33.9399 45.541 34.2534 45.4697 cv
34.5659 45.3975 34.8696 45.4688 34.9336 45.6289 cv
cp
level3{
gsave
clp
[.5044 -.116704 .132529 .338244 34.3647 45.7598 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.5044 -.116704 .132529 .338244 34.3647 45.7598 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.6587 45.9404 mo
34.6299 46.1113 34.2412 46.2129 33.791 46.168 cv
33.3403 46.1221 32.999 45.9463 33.0283 45.7764 cv
33.0571 45.6074 33.4463 45.5049 33.896 45.5498 cv
34.3462 45.5967 34.6875 45.7705 34.6587 45.9404 cv
cp
level3{
gsave
clp
[.72544 .073137 -.0612769 .359755 33.8438 45.8574 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.72544 .073137 -.0612769 .359755 33.8438 45.8574 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.8262 46.2148 mo
30.7559 46.0918 30.9663 45.9014 31.2959 45.7891 cv
31.6265 45.6777 31.9521 45.6855 32.0229 45.8086 cv
32.0933 45.9316 31.8838 46.1221 31.5532 46.2344 cv
31.2227 46.3467 30.8975 46.3379 30.8262 46.2148 cv
cp
level3{
gsave
clp
[-.532552 .180157 -.150461 -.259347 31.4243 46.0117 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.532552 .180157 -.150461 -.259347 31.4243 46.0117 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.4521 45.8027 mo
33.5151 45.9619 33.312 46.1504 32.999 46.2217 cv
32.6855 46.2949 32.3818 46.2227 32.3179 46.0635 cv
32.2559 45.9033 32.459 45.7148 32.772 45.6436 cv
33.0845 45.5703 33.3892 45.6416 33.4521 45.8027 cv
cp
level3{
gsave
clp
[.503828 -.116572 .132378 .337861 32.8833 45.9326 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.503828 -.116572 .132378 .337861 32.8833 45.9326 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.8975 45.7832 mo
32.8975 45.9258 32.6235 46.043 32.2861 46.043 cv
31.9482 46.043 31.6753 45.9258 31.6753 45.7832 cv
31.6753 45.6406 31.9482 45.5234 32.2861 45.5234 cv
32.6235 45.5234 32.8975 45.6406 32.8975 45.7832 cv
cp
level3{
gsave
clp
[.543841 0 0 .302573 32.2876 45.7813 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.543841 0 0 .302573 32.2876 45.7813 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.292 46.1104 mo
35.292 46.2217 35.1318 46.3125 34.9321 46.3125 cv
34.7339 46.3125 34.5728 46.2217 34.5728 46.1104 cv
34.5728 45.998 34.7339 45.9072 34.9321 45.9072 cv
35.1318 45.9072 35.292 45.998 35.292 46.1104 cv
cp
level3{
gsave
clp
[.319954 0 0 .236184 34.9336 46.1113 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319954 0 0 .236184 34.9336 46.1113 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.6523 46.0557 mo
31.6523 46.168 31.4902 46.2568 31.2925 46.2568 cv
31.0923 46.2568 30.9312 46.168 30.9312 46.0557 cv
30.9312 45.9434 31.0923 45.8525 31.2925 45.8525 cv
31.4902 45.8525 31.6523 45.9434 31.6523 46.0557 cv
cp
level3{
gsave
clp
[.320216 0 0 .236378 31.293 46.0557 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320216 0 0 .236378 31.293 46.0557 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.978 46.2383 mo
34.2358 45.5859 34.6582 44.6465 35.2793 43.6602 cv
36.4414 41.8154 37.6987 41.3604 37.6987 41.3604 cv
37.6987 41.3604 36.4614 41.4561 35.0527 43.6328 cv
34.291 44.8105 33.8916 45.6846 33.6836 46.2383 cv
33.978 46.2383 li
cp
level3{
gsave
clp
[-3.11677 6.14668 -5.48366 -3.16635 37.0771 41.001 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.11677 6.14668 -5.48366 -3.16635 37.0771 41.001 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
33.3931 46.0801 mo
33.686 45.7217 34.061 45.3096 34.5264 44.8848 cv
35.9268 43.6064 37.4199 43.2803 37.4199 43.2803 cv
37.4199 43.2803 35.9561 43.3613 34.2578 44.8691 cv
33.7222 45.3457 33.3335 45.751 33.0527 46.0801 cv
33.3931 46.0801 li
cp
level3{
gsave
clp
[-2.62371 5.39264 -4.45152 -2.69885 36.2583 42.5771 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.62371 5.39264 -4.45152 -2.69885 36.2583 42.5771 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
31.5947 45.9678 mo
31.6128 45.9092 31.6333 45.8486 31.6567 45.7871 cv
31.9912 44.9326 33.1948 44.3086 33.1948 44.3086 cv
33.1948 44.3086 31.8179 44.8525 31.3809 45.877 cv
31.3677 45.9082 31.355 45.9385 31.3438 45.9678 cv
31.5947 45.9678 li
cp
level3{
gsave
clp
[.0560829 2.0672 -3.19453 1.26159 32.2568 44.6787 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0560829 2.0672 -3.19453 1.26159 32.2568 44.6787 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.5474 46.1826 mo
33.4717 45.8291 33.3452 45.4189 33.1396 44.9736 cv
32.4521 43.4805 30.917 43.25 30.917 43.25 cv
30.917 43.25 32.6064 43.2891 33.4727 45.0684 cv
33.6836 45.5049 33.8237 45.873 33.9136 46.1826 cv
33.5474 46.1826 li
cp
level3{
gsave
clp
[.311326 3.55628 3.39897 .611547 32.3091 43.4844 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.311326 3.55628 3.39897 .611547 32.3091 43.4844 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.2036 45.9678 mo
33.1479 45.7783 33.96 45.752 33.96 45.752 cv
33.96 45.752 32.9814 45.7178 31.793 45.9678 cv
32.2036 45.9678 li
cp
level3{
gsave
clp
[-2.3103 2.7059 -5.45291 -2.09777 33.2124 45.4648 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.3103 2.7059 -5.45291 -2.09777 33.2124 45.4648 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.6187 45.7832 mo
34.4282 45.6436 35.0742 45.6221 35.0742 45.6221 cv
35.0742 45.6221 34.2495 45.5938 33.1943 45.7832 cv
33.6187 45.7832 li
cp
level3{
gsave
clp
[-2.33011 2.7291 -5.49967 -2.11576 34.4175 45.3701 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.33011 2.7291 -5.49967 -2.11576 34.4175 45.3701 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.0928 45.6504 mo
34.313 45.3682 34.6045 45.0488 34.9863 44.7148 cv
36.3071 43.5625 38.2363 43.1465 38.2363 43.1465 cv
38.2363 43.1465 36.2256 43.3652 34.603 44.7305 cv
34.1821 45.0869 33.8765 45.3926 33.6533 45.6504 cv
34.0928 45.6504 li
cp
level3{
gsave
clp
[-1.58556 4.4772 -5.5224 -1.27003 36.5278 42.7539 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.58556 4.4772 -5.5224 -1.27003 36.5278 42.7539 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
34.2163 45.375 mo
35.6597 45.2109 36.9541 45.2246 36.9541 45.2246 cv
36.9541 45.2246 35.3013 45.1289 33.4277 45.375 cv
34.2163 45.375 li
cp
level3{
gsave
clp
[-3.4567 2.79688 -9.08249 -2.96422 35.7637 44.8359 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.4567 2.79688 -9.08249 -2.96422 35.7637 44.8359 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.8198 46.0205 mo
34.0015 45.957 34.1968 45.8926 34.4048 45.8291 cv
36.665 45.1328 39.5171 45.1016 39.5171 45.1016 cv
39.5171 45.1016 36.6206 44.9678 33.8623 45.7832 cv
33.584 45.8652 33.332 45.9453 33.105 46.0205 cv
33.8198 46.0205 li
cp
level3{
gsave
clp
[-3.84547 3.81985 -9.58279 -3.39593 37.4941 44.3848 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.84547 3.81985 -9.58279 -3.39593 37.4941 44.3848 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.3335 46.125 mo
33.1274 45.9092 32.874 45.6846 32.5654 45.459 cv
31.062 44.3682 28.7261 44.29 28.7261 44.29 cv
28.7261 44.29 31.1855 44.1152 33.0376 45.3955 cv
33.4204 45.6611 33.7163 45.9053 33.9463 46.125 cv
33.3335 46.125 li
cp
level3{
gsave
clp
[2.0541 5.5942 8.26414 -4.7136 30.6055 43.2188 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.0541 5.5942 8.26414 -4.7136 30.6055 43.2188 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.5254 45.9531 mo
32.417 45.876 32.2944 45.7939 32.1587 45.71 cv
31.4028 45.2422 30.6021 45.0547 30.6021 45.0547 cv
30.6021 45.0547 31.3853 45.167 32.3008 45.7217 cv
32.4399 45.8057 32.561 45.8828 32.666 45.9531 cv
32.5254 45.9531 li
cp
level3{
gsave
clp
[1.25934 1.7276 2.10177 -.345715 31.231 44.9512 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.25934 1.7276 2.10177 -.345715 31.231 44.9512 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.8584 45.7881 mo
33.0601 45.6709 33.2993 45.5469 33.5801 45.4229 cv
34.8516 44.8613 36.3794 44.7744 36.3794 44.7744 cv
36.3794 44.7744 34.8418 44.7402 33.2939 45.4023 cv
32.9624 45.543 32.6973 45.6719 32.4854 45.7881 cv
32.8584 45.7881 li
cp
level3{
gsave
clp
[-2.11693 2.83269 -4.72775 -1.97092 35.1836 44.2764 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.11693 2.83269 -4.72775 -1.97092 35.1836 44.2764 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.0698 46.1006 mo
31.9634 45.9072 31.8091 45.6885 31.5879 45.4639 cv
30.8813 44.749 29.6787 44.5781 29.6787 44.5781 cv
29.6787 44.5781 30.9624 44.6094 31.8345 45.4512 cv
32.0962 45.7051 32.2676 45.9209 32.377 46.1006 cv
32.0698 46.1006 li
cp
level3{
gsave
clp
[.574222 4.2456 2.88679 -2.25626 30.8071 43.6953 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.574222 4.2456 2.88679 -2.25626 30.8071 43.6953 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
33.4233 45.9678 mo
33.4922 45.9229 33.5649 45.876 33.6411 45.8291 cv
34.7744 45.1309 36.1597 44.9551 36.1597 44.9551 cv
36.1597 44.9551 34.7607 44.9951 33.3804 45.8193 cv
33.2949 45.8701 33.2144 45.9199 33.1382 45.9678 cv
33.4233 45.9678 li
cp
level3{
gsave
clp
[-1.75723 3.2129 -4.08848 -1.63739 35.1465 44.5498 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.75723 3.2129 -4.08848 -1.63739 35.1465 44.5498 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.6255 45.9678 mo
32.6001 45.8623 32.564 45.752 32.5112 45.6367 cv
32.1401 44.8145 30.8188 44.4043 30.8188 44.4043 cv
30.8188 44.4043 32.3296 44.6992 32.8159 45.6768 cv
32.8667 45.7803 32.9072 45.8779 32.9399 45.9678 cv
32.6255 45.9678 li
cp
level3{
gsave
clp
[-.0640208 2.62187 4.23589 .0695761 31.897 44.4219 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0640208 2.62187 4.23589 .0695761 31.897 44.4219 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.8657 46.1113 mo
33.7222 45.9795 33.5586 45.8418 33.3735 45.7041 cv
31.9385 44.6309 29.5679 44.2979 29.5679 44.2979 cv
29.5679 44.2979 32.0845 44.4355 33.8584 45.7041 cv
34.0596 45.8486 34.2354 45.9834 34.3882 46.1113 cv
33.8657 46.1113 li
cp
level3{
gsave
clp
[1.59348 4.3755 7.40885 -1.69915 31.4878 43.8574 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.59348 4.3755 7.40885 -1.69915 31.4878 43.8574 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
34.6641 46.0254 mo
34.6118 45.8926 34.5371 45.751 34.4341 45.5996 cv
33.8926 44.8027 32.5366 44.3389 32.5366 44.3389 cv
32.5366 44.3389 34.0454 44.7031 34.7339 45.6543 cv
34.8306 45.79 34.9087 45.9131 34.9673 46.0254 cv
34.6641 46.0254 li
cp
level3{
gsave
clp
[.220111 2.29622 3.76421 .512804 33.6865 44.4951 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.220111 2.29622 3.76421 .512804 33.6865 44.4951 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
32.9399 46.1318 mo
32.6826 45.8057 32.2593 45.334 31.6396 44.8418 cv
30.4775 43.917 29.2192 43.6895 29.2192 43.6895 cv
29.2192 43.6895 30.4561 43.7373 31.8657 44.8271 cv
32.627 45.417 33.0264 45.8545 33.2344 46.1318 cv
32.9399 46.1318 li
cp
level3{
gsave
clp
[2.06179 4.06613 3.62754 -2.09459 30.293 43.0693 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.06179 4.06613 3.62754 -2.09459 30.293 43.0693 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.2471 46.2412 mo
33.1289 45.9932 32.9731 45.7119 32.769 45.4189 cv
32.064 44.4082 31.0327 44.043 31.0327 44.043 cv
31.0327 44.043 32.1079 44.2354 32.9731 45.4336 cv
33.1987 45.7451 33.3628 46.0137 33.4814 46.2412 cv
33.2471 46.2412 li
cp
level3{
gsave
clp
[1.2306 3.47488 4.2861 -.985708 31.8042 43.8652 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.2306 3.47488 4.2861 -.985708 31.8042 43.8652 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
31.9277 46.043 mo
31.9814 45.9102 32.0557 45.7676 32.1592 45.6162 cv
32.7007 44.8193 34.0566 44.3555 34.0566 44.3555 cv
34.0566 44.3555 32.5474 44.7207 31.8599 45.6709 cv
31.7622 45.8076 31.6855 45.9307 31.625 46.043 cv
31.9277 46.043 li
cp
level3{
gsave
clp
[-.220231 2.29747 -3.76626 .513083 32.9072 44.5117 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.220231 2.29747 -3.76626 .513083 32.9072 44.5117 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
33.77 46.2578 mo
33.7222 45.999 33.623 45.6777 33.4272 45.3184 cv
32.9155 44.3779 31.7739 43.8506 31.7739 43.8506 cv
31.7739 43.8506 33.0317 44.2568 33.6743 45.3789 cv
33.8828 45.7422 33.9976 46.0322 34.0566 46.2578 cv
33.77 46.2578 li
cp
level3{
gsave
clp
[2.28271 0 0 2.28271 31.7739 45.0547 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.28271 0 0 2.28271 31.7739 45.0547 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.5454 46.2012 mo
34.7217 46.0957 34.9229 45.9854 35.1504 45.873 cv
36.7183 45.1006 38.9966 44.8184 38.9966 44.8184 cv
38.9966 44.8184 36.6235 44.9688 34.6997 45.8848 cv
34.4629 45.9971 34.2563 46.1035 34.0762 46.2012 cv
34.5454 46.2012 li
cp
level3{
gsave
clp
[-1.89391 3.00334 -6.51775 -.824316 37.1216 44.5811 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.89391 3.00334 -6.51775 -.824316 37.1216 44.5811 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
35.0522 46.2637 mo
35.1538 45.8477 35.2998 45.3457 35.5122 44.8145 cv
36.0767 43.4014 36.896 42.8975 36.896 42.8975 cv
36.896 42.8975 36.0435 43.1582 35.3501 44.832 cv
35.1089 45.416 34.9556 45.8916 34.8579 46.2637 cv
35.0522 46.2637 li
cp
level3{
gsave
clp
[-.686135 5.51223 -2.34154 -1.62036 36.1504 42.3818 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.686135 5.51223 -2.34154 -1.62036 36.1504 42.3818 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.0391 46.791 mo
32.0391 46.9023 31.8779 46.9932 31.6787 46.9932 cv
31.48 46.9932 31.3188 46.9023 31.3188 46.791 cv
31.3188 46.6787 31.48 46.5889 31.6787 46.5889 cv
31.8779 46.5889 32.0391 46.6787 32.0391 46.791 cv
cp
level3{
gsave
clp
[.319936 0 0 .236171 31.6802 46.792 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319936 0 0 .236171 31.6802 46.792 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.7158 47.1162 mo
32.7158 47.2275 32.5547 47.3184 32.356 47.3184 cv
32.1567 47.3184 31.9951 47.2275 31.9951 47.1162 cv
31.9951 47.0039 32.1567 46.9131 32.356 46.9131 cv
32.5547 46.9131 32.7158 47.0039 32.7158 47.1162 cv
cp
level3{
gsave
clp
[.320402 0 0 .236515 32.3569 47.1172 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320402 0 0 .236515 32.3569 47.1172 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.5664 46.0918 mo
32.5664 46.2041 32.4043 46.2949 32.2056 46.2949 cv
32.0073 46.2949 31.8452 46.2041 31.8452 46.0918 cv
31.8452 45.9805 32.0073 45.8896 32.2056 45.8896 cv
32.4043 45.8896 32.5664 45.9805 32.5664 46.0918 cv
cp
level3{
gsave
clp
[.320515 0 0 .236599 32.207 46.0938 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320515 0 0 .236599 32.207 46.0938 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.8823 46.668 mo
32.8823 46.7803 32.7207 46.8701 32.5225 46.8701 cv
32.3232 46.8701 32.1621 46.7803 32.1621 46.668 cv
32.1621 46.5566 32.3232 46.4658 32.5225 46.4658 cv
32.7207 46.4658 32.8823 46.5566 32.8823 46.668 cv
cp
level3{
gsave
clp
[.319953 0 0 .236183 32.5234 46.6689 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319953 0 0 .236183 32.5234 46.6689 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.6919 46.668 mo
33.6919 46.7803 33.5308 46.8701 33.332 46.8701 cv
33.1328 46.8701 32.9717 46.7803 32.9717 46.668 cv
32.9717 46.5566 33.1328 46.4658 33.332 46.4658 cv
33.5308 46.4658 33.6919 46.5566 33.6919 46.668 cv
cp
level3{
gsave
clp
[.319953 0 0 .236183 33.333 46.6689 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319953 0 0 .236183 33.333 46.6689 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.0371 46.8965 mo
34.0371 47.0078 33.8765 47.0986 33.6777 47.0986 cv
33.4785 47.0986 33.3169 47.0078 33.3169 46.8965 cv
33.3169 46.7852 33.4785 46.6934 33.6777 46.6934 cv
33.8765 46.6934 34.0371 46.7852 34.0371 46.8965 cv
cp
level3{
gsave
clp
[.320226 0 0 .236385 33.6782 46.8975 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320226 0 0 .236385 33.6782 46.8975 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.3198 46.3311 mo
34.2485 46.208 34.46 46.0176 34.7891 45.9063 cv
35.1196 45.7939 35.4448 45.8027 35.5161 45.9248 cv
35.5879 46.0479 35.3774 46.2383 35.0464 46.3506 cv
34.7163 46.4629 34.3911 46.4541 34.3198 46.3311 cv
cp
level3{
gsave
clp
[-.532073 .179995 -.150326 -.259114 34.918 46.1279 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.532073 .179995 -.150326 -.259114 34.918 46.1279 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.1035 46.3711 mo
34.1035 46.5049 33.8608 46.6143 33.561 46.6143 cv
33.2607 46.6143 33.0181 46.5049 33.0181 46.3711 cv
33.0181 46.2363 33.2607 46.1279 33.561 46.1279 cv
33.8608 46.1279 34.1035 46.2363 34.1035 46.3711 cv
cp
level3{
gsave
clp
[.483605 0 0 .283424 33.5605 46.3701 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.483605 0 0 .283424 33.5605 46.3701 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.3569 46.626 mo
34.2661 46.6035 34.2285 46.4307 34.2739 46.2412 cv
34.3193 46.0508 34.4297 45.915 34.5225 45.9365 cv
34.6133 45.96 34.6504 46.1309 34.605 46.3213 cv
34.5596 46.5117 34.4487 46.6484 34.3569 46.626 cv
cp
level3{
gsave
clp
[-.0733104 .307111 -.192192 -.0475527 34.4404 46.2813 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0733104 .307111 -.192192 -.0475527 34.4404 46.2813 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.6304 46.5889 mo
35.6724 46.7344 35.478 46.9219 35.1938 47.0078 cv
34.9087 47.0947 34.6436 47.0459 34.6006 46.9004 cv
34.5576 46.7559 34.7534 46.5674 35.0376 46.4814 cv
35.3218 46.3955 35.5869 46.4434 35.6304 46.5889 cv
cp
level3{
gsave
clp
[.45728 -.13857 .09106 .306833 35.1172 46.7441 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.45728 -.13857 .09106 .306833 35.1172 46.7441 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.1753 46.3008 mo
34.1611 46.3926 33.9385 46.4346 33.6792 46.3926 cv
33.4189 46.3525 33.2197 46.2432 33.2349 46.1514 cv
33.2485 46.0586 33.4717 46.0176 33.7305 46.0576 cv
33.9917 46.0996 34.1904 46.208 34.1753 46.3008 cv
cp
level3{
gsave
clp
[.417888 .0670198 -.0315388 .195146 33.707 46.2266 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417888 .0670198 -.0315388 .195146 33.707 46.2266 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.7764 46.3877 mo
32.7827 46.5215 32.5449 46.6406 32.2456 46.6543 cv
31.9458 46.668 31.6987 46.5703 31.6924 46.4365 cv
31.687 46.3027 31.9248 46.1826 32.2241 46.1689 cv
32.5239 46.1563 32.771 46.2529 32.7764 46.3877 cv
cp
level3{
gsave
clp
[.48236 -.0217457 .0118613 .282695 32.2329 46.4102 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.48236 -.0217457 .0118613 .282695 32.2329 46.4102 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.313 46.1953 mo
34.3457 46.2988 34.1558 46.4502 33.8887 46.5342 cv
33.6206 46.6182 33.3789 46.6035 33.3472 46.5 cv
33.3154 46.3975 33.5063 46.2461 33.7729 46.1621 cv
34.0391 46.0781 34.2822 46.0928 34.313 46.1953 cv
cp
level3{
gsave
clp
[.428785 -.136342 .067183 .217357 33.8301 46.3477 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.428785 -.136342 .067183 .217357 33.8301 46.3477 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.4565 46.374 mo
33.4619 46.4893 33.2632 46.5918 33.0112 46.6025 cv
32.7598 46.6143 32.5527 46.5303 32.5464 46.4141 cv
32.542 46.2988 32.7412 46.1963 32.9927 46.1846 cv
33.2441 46.1738 33.4512 46.2588 33.4565 46.374 cv
cp
level3{
gsave
clp
[.404989 -.01778 .0118533 .242993 33.0029 46.3926 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.404989 -.01778 .0118533 .242993 33.0029 46.3926 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.0869 46.3516 mo
33.0869 46.46 32.9175 46.5498 32.707 46.5498 cv
32.4976 46.5498 32.3271 46.46 32.3271 46.3516 cv
32.3271 46.2412 32.4976 46.1523 32.707 46.1523 cv
32.9175 46.1523 33.0869 46.2412 33.0869 46.3516 cv
cp
level3{
gsave
clp
[.337751 0 0 .231093 32.707 46.3516 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.337751 0 0 .231093 32.707 46.3516 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.9033 46.3799 mo
31.9033 46.4912 31.7324 46.5801 31.5229 46.5801 cv
31.3125 46.5801 31.144 46.4912 31.144 46.3799 cv
31.144 46.2705 31.3125 46.1816 31.5229 46.1816 cv
31.7324 46.1816 31.9033 46.2705 31.9033 46.3799 cv
cp
level3{
gsave
clp
[.337928 0 0 .231214 31.5239 46.3809 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.337928 0 0 .231214 31.5239 46.3809 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.2773 46.5049 mo
32.2407 46.5918 32.0156 46.5762 31.7739 46.4707 cv
31.5327 46.3662 31.3662 46.2119 31.4028 46.126 cv
31.439 46.04 31.6636 46.0557 31.9067 46.1602 cv
32.1479 46.2646 32.3135 46.4199 32.2773 46.5049 cv
cp
level3{
gsave
clp
[.38837 .169542 -.0768854 .181371 31.8379 46.3164 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.38837 .169542 -.0768854 .181371 31.8379 46.3164 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.0972 46.1543 mo
32.061 46.2393 31.8354 46.2246 31.5933 46.1201 cv
31.3525 46.0146 31.1865 45.8594 31.2227 45.7744 cv
31.2588 45.6875 31.4844 45.7041 31.7266 45.8086 cv
31.9678 45.9131 32.1353 46.0674 32.0972 46.1543 cv
cp
level3{
gsave
clp
[.388903 .169775 -.076991 .18162 31.6577 45.9658 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.388903 .169775 -.076991 .18162 31.6577 45.9658 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.0151 46.5205 mo
35.0205 46.6543 34.7827 46.7754 34.4834 46.7881 cv
34.1831 46.8008 33.9365 46.7041 33.9312 46.5703 cv
33.9243 46.4365 34.1626 46.3154 34.4619 46.3027 cv
34.7607 46.2891 35.0083 46.3877 35.0151 46.5205 cv
cp
level3{
gsave
clp
[.481693 -.0217157 .0118449 .282304 34.4727 46.5439 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.481693 -.0217157 .0118449 .282304 34.4727 46.5439 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.812 46.124 mo
31.8438 46.2275 31.6538 46.3789 31.3862 46.4629 cv
31.1196 46.5469 30.8774 46.5322 30.8457 46.4297 cv
30.814 46.3262 31.0049 46.1748 31.272 46.0908 cv
31.5381 46.0068 31.7808 46.0215 31.812 46.124 cv
cp
level3{
gsave
clp
[.428807 -.136349 .0671863 .217368 31.3286 46.2764 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.428807 -.136349 .0671863 .217368 31.3286 46.2764 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.9868 46.7393 mo
31.9526 46.7754 31.8672 46.749 31.7944 46.6797 cv
31.7212 46.6113 31.6899 46.5254 31.7236 46.4893 cv
31.7568 46.4531 31.8428 46.4805 31.9155 46.5488 cv
31.9883 46.6182 32.021 46.7031 31.9868 46.7393 cv
cp
level3{
gsave
clp
[.000844215 .000801289 -.000515114 .00055804 597.928 302.195 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.000844215 .000801289 -.000515114 .00055804 597.928 302.195 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.3281 46.4395 mo
33.3335 46.5547 33.1338 46.6572 32.8823 46.668 cv
32.6313 46.6797 32.4224 46.5947 32.418 46.4805 cv
32.4136 46.3652 32.6133 46.2617 32.8643 46.251 cv
33.1147 46.2393 33.3228 46.3232 33.3281 46.4395 cv
cp
level3{
gsave
clp
[.404635 -.0177645 .011843 .242781 32.8745 46.459 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.404635 -.0177645 .011843 .242781 32.8745 46.459 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.6226 46.3262 mo
33.6226 46.4365 33.4526 46.5264 33.2427 46.5264 cv
33.0337 46.5264 32.8628 46.4365 32.8628 46.3262 cv
32.8628 46.2168 33.0337 46.1279 33.2427 46.1279 cv
33.4526 46.1279 33.6226 46.2168 33.6226 46.3262 cv
cp
level3{
gsave
clp
[.338059 0 0 .231304 33.2427 46.3271 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.338059 0 0 .231304 33.2427 46.3271 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.7681 46.6641 mo
31.7529 46.7568 31.5313 46.7979 31.271 46.7568 cv
31.0107 46.7158 30.8125 46.6074 30.8262 46.5146 cv
30.8413 46.4229 31.063 46.3818 31.3242 46.4219 cv
31.5835 46.4629 31.7827 46.5713 31.7681 46.6641 cv
cp
level3{
gsave
clp
[.41841 .0671035 -.0315781 .195389 31.2988 46.5898 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.41841 .0671035 -.0315781 .195389 31.2988 46.5898 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.9517 47.3213 mo
34.9517 47.4336 34.792 47.5234 34.5913 47.5234 cv
34.3926 47.5234 34.2319 47.4336 34.2319 47.3213 cv
34.2319 47.209 34.3926 47.1191 34.5913 47.1191 cv
34.792 47.1191 34.9517 47.209 34.9517 47.3213 cv
cp
level3{
gsave
clp
[.319809 0 0 .236077 34.5933 47.3223 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319809 0 0 .236077 34.5933 47.3223 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.062 46.415 mo
34.062 46.5264 33.9009 46.6182 33.7026 46.6182 cv
33.5029 46.6182 33.3418 46.5264 33.3418 46.415 cv
33.3418 46.3027 33.5029 46.2129 33.7026 46.2129 cv
33.9009 46.2129 34.062 46.3027 34.062 46.415 cv
cp
level3{
gsave
clp
[.320229 0 0 .236387 33.7031 46.417 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320229 0 0 .236387 33.7031 46.417 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.0195 46.4229 mo
35.0195 46.5449 34.8735 46.6426 34.6929 46.6426 cv
34.5122 46.6426 34.3652 46.5449 34.3652 46.4229 cv
34.3652 46.3027 34.5122 46.2051 34.6929 46.2051 cv
34.8735 46.2051 35.0195 46.3027 35.0195 46.4229 cv
cp
level3{
gsave
clp
[.291294 0 0 .25467 34.6938 46.4229 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291294 0 0 .25467 34.6938 46.4229 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.7212 46.3359 mo
35.6846 46.4854 35.3345 46.541 34.939 46.4609 cv
34.5425 46.3818 34.251 46.1953 34.2876 46.0459 cv
34.3237 45.8965 34.6738 45.8408 35.0703 45.9199 cv
35.4658 46.001 35.7573 46.1865 35.7212 46.3359 cv
cp
level3{
gsave
clp
[.63777 .128711 -.0766481 .31527 35.0015 46.1895 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.63777 .128711 -.0766481 .31527 35.0015 46.1895 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.5684 46.6748 mo
37.5034 46.542 37.6953 46.3359 37.9951 46.2148 cv
38.2944 46.0938 38.5903 46.1035 38.6548 46.2354 cv
38.7192 46.3691 38.5283 46.5742 38.228 46.6953 cv
37.9277 46.8174 37.6328 46.8076 37.5684 46.6748 cv
cp
level3{
gsave
clp
[-.482831 .195156 -.135887 -.280447 38.1118 46.4551 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.482831 .195156 -.135887 -.280447 38.1118 46.4551 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.1963 46.1582 mo
37.1577 46.0166 37.3853 45.8438 37.7036 45.7725 cv
38.0225 45.7002 38.3115 45.7568 38.3491 45.8975 cv
38.3877 46.0391 38.1606 46.2119 37.8413 46.2832 cv
37.5229 46.3555 37.2339 46.2988 37.1963 46.1582 cv
cp
level3{
gsave
clp
[-.512266 .11544 -.0808081 -.297258 37.7725 46.0273 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.512266 .11544 -.0808081 -.297258 37.7725 46.0273 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.5723 45.916 mo
37.6289 46.0889 37.4443 46.292 37.1597 46.3701 cv
36.8755 46.4482 36.5991 46.3711 36.5425 46.1982 cv
36.4849 46.0244 36.6694 45.8213 36.9551 45.7441 cv
37.2388 45.665 37.5156 45.7422 37.5723 45.916 cv
cp
level3{
gsave
clp
[.456876 -.125389 .119624 .364636 37.0581 46.0586 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.456876 -.125389 .119624 .364636 37.0581 46.0586 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.3228 46.2529 mo
37.2959 46.4375 36.9434 46.5469 36.5352 46.498 cv
36.125 46.4492 35.8154 46.2598 35.8413 46.0762 cv
35.8677 45.8916 36.2212 45.7813 36.6304 45.8311 cv
37.0391 45.8799 37.3491 46.0693 37.3228 46.2529 cv
cp
level3{
gsave
clp
[.658431 .0781435 -.0549899 .38927 36.582 46.1641 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.658431 .0781435 -.0549899 .38927 36.582 46.1641 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.8418 46.5498 mo
33.7773 46.416 33.9683 46.2109 34.2676 46.0898 cv
34.5679 45.9678 34.8638 45.9775 34.9282 46.1104 cv
34.9927 46.2432 34.8018 46.4492 34.5015 46.5703 cv
34.2017 46.6914 33.9053 46.6816 33.8418 46.5498 cv
cp
level3{
gsave
clp
[-.482943 .195201 -.135918 -.280512 34.3848 46.3301 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.482943 .195201 -.135918 -.280512 34.3848 46.3301 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.2261 46.1035 mo
36.2837 46.2754 36.0991 46.4795 35.8149 46.5576 cv
35.5303 46.6357 35.2534 46.5576 35.1968 46.3848 cv
35.1401 46.2119 35.3237 46.0088 35.6089 45.9307 cv
35.8926 45.8525 36.1694 45.9297 36.2261 46.1035 cv
cp
level3{
gsave
clp
[.457041 -.125434 .119667 .364768 35.7119 46.2451 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.457041 -.125434 .119667 .364768 35.7119 46.2451 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.7231 46.082 mo
35.7231 46.2373 35.4741 46.3623 35.168 46.3623 cv
34.8599 46.3623 34.6118 46.2373 34.6118 46.082 cv
34.6118 45.9277 34.8599 45.8018 35.168 45.8018 cv
35.4741 45.8018 35.7231 45.9277 35.7231 46.082 cv
cp
level3{
gsave
clp
[.494369 0 0 .326689 35.168 46.083 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.494369 0 0 .326689 35.168 46.083 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.8984 46.4365 mo
37.8984 46.5576 37.7515 46.6543 37.5713 46.6543 cv
37.3901 46.6543 37.2437 46.5576 37.2437 46.4365 cv
37.2437 46.3154 37.3901 46.2178 37.5713 46.2178 cv
37.7515 46.2178 37.8984 46.3154 37.8984 46.4365 cv
cp
level3{
gsave
clp
[.291207 0 0 .254593 37.5723 46.4346 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291207 0 0 .254593 37.5723 46.4346 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.5913 46.376 mo
34.5913 46.4971 34.4438 46.5947 34.2637 46.5947 cv
34.083 46.5947 33.9365 46.4971 33.9365 46.376 cv
33.9365 46.2549 34.083 46.1582 34.2637 46.1582 cv
34.4438 46.1582 34.5913 46.2549 34.5913 46.376 cv
cp
level3{
gsave
clp
[.291205 0 0 .254592 34.2651 46.375 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291205 0 0 .254592 34.2651 46.375 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.7036 46.5752 mo
36.938 45.8691 37.3228 44.8525 37.8862 43.7871 cv
38.9414 41.792 40.084 41.2979 40.084 41.2979 cv
40.084 41.2979 38.9604 41.4033 37.6802 43.7578 cv
36.9888 45.0303 36.626 45.9766 36.4375 46.5752 cv
36.7036 46.5752 li
cp
level3{
gsave
clp
[-3.19716 6.30523 -5.62511 -3.24802 39.6323 41.0381 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.19716 6.30523 -5.62511 -3.24802 39.6323 41.0381 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
36.1733 46.4043 mo
36.439 46.0156 36.7793 45.5703 37.2021 45.1113 cv
38.4741 43.7295 39.8311 43.377 39.8311 43.377 cv
39.8311 43.377 38.5015 43.4629 36.9585 45.0938 cv
36.4722 45.6104 36.1187 46.0469 35.8638 46.4043 cv
36.1733 46.4043 li
cp
level3{
gsave
clp
[-2.61664 5.37809 -4.43951 -2.69157 38.8667 42.792 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.61664 5.37809 -4.43951 -2.69157 38.8667 42.792 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.54 46.2822 mo
34.5562 46.2188 34.5742 46.1543 34.5962 46.0869 cv
34.8994 45.1621 35.9932 44.4893 35.9932 44.4893 cv
35.9932 44.4893 34.7422 45.0762 34.3457 46.1846 cv
34.3335 46.2178 34.3223 46.25 34.3115 46.2822 cv
34.54 46.2822 li
cp
level3{
gsave
clp
[.0665563 2.45325 -3.79111 1.49719 35.1372 44.8271 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0665563 2.45325 -3.79111 1.49719 35.1372 44.8271 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.3135 46.5137 mo
36.2437 46.1318 36.1294 45.6895 35.9429 45.207 cv
35.3179 43.5928 33.9233 43.3438 33.9233 43.3438 cv
33.9233 43.3438 35.4575 43.3857 36.2446 45.3086 cv
36.4375 45.7813 36.564 46.1807 36.6455 46.5137 cv
36.3135 46.5137 li
cp
level3{
gsave
clp
[.345871 3.95089 3.77613 .679406 35.166 43.5566 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.345871 3.95089 3.77613 .679406 35.166 43.5566 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
35.0933 46.2822 mo
35.9502 46.0771 36.688 46.0479 36.688 46.0479 cv
36.688 46.0479 35.7988 46.0117 34.7192 46.2822 cv
35.0933 46.2822 li
cp
level3{
gsave
clp
[-2.18313 2.55696 -5.15276 -1.9823 36.021 45.792 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.18313 2.55696 -5.15276 -1.9823 36.021 45.792 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.3774 46.082 mo
37.1128 45.9316 37.7002 45.9082 37.7002 45.9082 cv
37.7002 45.9082 36.9512 45.8779 35.9927 46.082 cv
36.3774 46.082 li
cp
level3{
gsave
clp
[-2.18882 2.56363 -5.1662 -1.98747 37.1123 45.6826 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.18882 2.56363 -5.1662 -1.98747 37.1123 45.6826 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.8091 45.9395 mo
37.0088 45.6328 37.2734 45.2881 37.6196 44.9277 cv
38.8198 43.6807 40.5728 43.2305 40.5728 43.2305 cv
40.5728 43.2305 38.7456 43.4688 37.2725 44.9443 cv
36.8896 45.3291 36.6123 45.6602 36.4097 45.9395 cv
36.8091 45.9395 li
cp
level3{
gsave
clp
[-1.63392 4.61376 -5.69085 -1.30877 39.0923 42.8896 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.63392 4.61376 -5.69085 -1.30877 39.0923 42.8896 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
36.9209 45.6416 mo
38.231 45.4629 39.4077 45.4785 39.4077 45.4785 cv
39.4077 45.4785 37.9058 45.375 36.2051 45.6416 cv
36.9209 45.6416 li
cp
level3{
gsave
clp
[-3.20968 2.597 -8.43344 -2.75239 38.3384 45.1299 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.20968 2.597 -8.43344 -2.75239 38.3384 45.1299 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.5605 46.3389 mo
36.7256 46.2705 36.9028 46.2012 37.0918 46.1309 cv
39.145 45.3789 41.7363 45.3457 41.7363 45.3457 cv
41.7363 45.3457 39.104 45.2012 36.5991 46.082 cv
36.3457 46.1709 36.1172 46.2568 35.9106 46.3389 cv
36.5605 46.3389 li
cp
level3{
gsave
clp
[-3.68449 3.65994 -9.18164 -3.25377 39.9565 44.7158 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.68449 3.65994 -9.18164 -3.25377 39.9565 44.7158 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.1187 46.4521 mo
35.9312 46.2188 35.7012 45.9756 35.4214 45.7334 cv
34.0557 44.5518 31.9331 44.4678 31.9331 44.4678 cv
31.9331 44.4678 34.167 44.2783 35.8496 45.6631 cv
36.1978 45.9502 36.4663 46.2139 36.6748 46.4521 cv
36.1187 46.4521 li
cp
level3{
gsave
clp
[2.00138 5.45062 8.05203 -4.59261 33.5933 43.5215 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.00138 5.45062 8.05203 -4.59261 33.5933 43.5215 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
35.3843 46.2666 mo
35.2861 46.1836 35.1748 46.0947 35.0513 46.0039 cv
34.3647 45.4971 33.6382 45.2949 33.6382 45.2949 cv
33.6382 45.2949 34.3491 45.416 35.1807 46.0156 cv
35.3071 46.1074 35.417 46.1904 35.5122 46.2666 cv
35.3843 46.2666 li
cp
level3{
gsave
clp
[1.30204 1.78617 2.17303 -.357437 34.1587 45.209 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.30204 1.78617 2.17303 -.357437 34.1587 45.209 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
35.687 46.0869 mo
35.8701 45.96 36.0879 45.8271 36.3428 45.6934 cv
37.4976 45.085 38.8857 44.9922 38.8857 44.9922 cv
38.8857 44.9922 37.4888 44.9551 36.0835 45.6699 cv
35.7817 45.8232 35.541 45.9629 35.3481 46.0869 cv
35.687 46.0869 li
cp
level3{
gsave
clp
[-2.06272 2.76015 -4.60668 -1.92045 37.8491 44.5596 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.06272 2.76015 -4.60668 -1.92045 37.8491 44.5596 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.9712 46.4268 mo
34.8745 46.2168 34.7344 45.9795 34.5327 45.7373 cv
33.8916 44.9639 32.7983 44.7793 32.7983 44.7793 cv
32.7983 44.7793 33.9644 44.8125 34.7573 45.7236 cv
34.9946 45.9971 35.1504 46.2314 35.2495 46.4268 cv
34.9712 46.4268 li
cp
level3{
gsave
clp
[.563453 4.16599 2.83266 -2.21395 33.8071 43.9912 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.563453 4.16599 2.83266 -2.21395 33.8071 43.9912 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
36.2007 46.2822 mo
36.2632 46.2324 36.3291 46.1816 36.3989 46.1318 cv
37.4277 45.376 38.6865 45.1875 38.6865 45.1875 cv
38.6865 45.1875 37.4155 45.2295 36.1611 46.1211 cv
36.084 46.1768 36.0107 46.2305 35.9419 46.2822 cv
36.2007 46.2822 li
cp
level3{
gsave
clp
[-1.73438 3.17112 -4.0353 -1.61609 37.8057 44.835 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.73438 3.17112 -4.0353 -1.61609 37.8057 44.835 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
35.4751 46.2822 mo
35.4531 46.168 35.4199 46.0479 35.3721 45.9238 cv
35.0356 45.0352 33.835 44.5918 33.835 44.5918 cv
33.835 44.5918 35.2065 44.9102 35.6484 45.9668 cv
35.6953 46.0791 35.7324 46.1846 35.7612 46.2822 cv
35.4751 46.2822 li
cp
level3{
gsave
clp
[-.0694316 2.84346 4.5939 .0754564 34.8174 44.6084 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0694316 2.84346 4.5939 .0754564 34.8174 44.6084 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.6025 46.4375 mo
36.4722 46.2939 36.3237 46.1465 36.1553 45.9961 cv
34.8511 44.8359 32.6987 44.4756 32.6987 44.4756 cv
32.6987 44.4756 34.9839 44.626 36.5957 45.9971 cv
36.7778 46.1523 36.9375 46.2988 37.0757 46.4375 cv
36.6025 46.4375 li
cp
level3{
gsave
clp
[1.61899 4.44555 7.52746 -1.72635 34.3892 44.0879 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.61899 4.44555 7.52746 -1.72635 34.3892 44.0879 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
37.3276 46.3447 mo
37.2803 46.2012 37.2119 46.0469 37.1191 45.8838 cv
36.6265 45.0225 35.3955 44.5205 35.3955 44.5205 cv
35.3955 44.5205 36.7651 44.915 37.3901 45.9434 cv
37.479 46.0908 37.5493 46.2236 37.603 46.3447 cv
37.3276 46.3447 li
cp
level3{
gsave
clp
[.246001 2.56631 4.20696 .573121 36.4258 44.6611 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.246001 2.56631 4.20696 .573121 36.4258 44.6611 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
35.7617 46.46 mo
35.5278 46.1064 35.1431 45.5977 34.5801 45.0635 cv
33.5249 44.0645 32.3818 43.8174 32.3818 43.8174 cv
32.3818 43.8174 33.5059 43.8711 34.7852 45.0498 cv
35.4766 45.6865 35.8403 46.1602 36.0288 46.46 cv
35.7617 46.46 li
cp
level3{
gsave
clp
[2.05641 4.05552 3.61807 -2.08913 33.2739 43.3027 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.05641 4.05552 3.61807 -2.08913 33.2739 43.3027 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.04 46.5771 mo
35.9326 46.3086 35.7915 46.0068 35.606 45.6895 cv
34.9653 44.5957 34.0288 44.2002 34.0288 44.2002 cv
34.0288 44.2002 35.0054 44.4082 35.792 45.7051 cv
35.9966 46.041 36.1455 46.332 36.2529 46.5771 cv
36.04 46.5771 li
cp
level3{
gsave
clp
[1.28724 3.63483 4.48338 -1.03108 34.6675 44.0537 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.28724 3.63483 4.48338 -1.03108 34.6675 44.0537 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
34.8418 46.3633 mo
34.8911 46.2197 34.9585 46.0654 35.0522 45.9023 cv
35.5439 45.04 36.7754 44.5391 36.7754 44.5391 cv
36.7754 44.5391 35.4048 44.9326 34.7808 45.9619 cv
34.6914 46.1084 34.6216 46.2422 34.5664 46.3633 cv
34.8418 46.3633 li
cp
level3{
gsave
clp
[-.245968 2.56596 -4.2064 .573044 35.7451 44.6797 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.245968 2.56596 -4.2064 .573044 35.7451 44.6797 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.5151 46.5957 mo
36.4722 46.3154 36.3823 45.9688 36.2046 45.5801 cv
35.7393 44.5625 34.7021 43.9922 34.7021 43.9922 cv
34.7021 43.9922 35.8442 44.4316 36.4282 45.6445 cv
36.6182 46.0391 36.7227 46.3525 36.7754 46.5957 cv
36.5151 46.5957 li
cp
level3{
gsave
clp
[2.07324 0 0 2.07324 34.7021 45.2939 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.07324 0 0 2.07324 34.7021 45.2939 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.2197 46.5342 mo
37.3799 46.4199 37.5625 46.3018 37.7695 46.1807 cv
39.1934 45.3438 41.2632 45.0391 41.2632 45.0391 cv
41.2632 45.0391 39.1074 45.2031 37.3599 46.1924 cv
37.145 46.3145 36.957 46.4277 36.7939 46.5342 cv
37.2197 46.5342 li
cp
level3{
gsave
clp
[-1.94611 3.08611 -6.69736 -.847033 39.6299 44.833 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.94611 3.08611 -6.69736 -.847033 39.6299 44.833 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
37.6797 46.6025 mo
37.772 46.1523 37.9053 45.6104 38.0986 45.0352 cv
38.6108 43.5059 39.3545 42.9629 39.3545 42.9629 cv
39.3545 42.9629 38.5806 43.2441 37.9512 45.0547 cv
37.7319 45.6846 37.5928 46.1992 37.5039 46.6025 cv
37.6797 46.6025 li
cp
level3{
gsave
clp
[-.706782 5.67809 -2.412 -1.66912 38.7109 42.5176 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.706782 5.67809 -2.412 -1.66912 38.7109 42.5176 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
34.9424 47.1719 mo
34.9424 47.293 34.7964 47.3906 34.6157 47.3906 cv
34.4351 47.3906 34.2881 47.293 34.2881 47.1719 cv
34.2881 47.0508 34.4351 46.9531 34.6157 46.9531 cv
34.7964 46.9531 34.9424 47.0508 34.9424 47.1719 cv
cp
level3{
gsave
clp
[.29128 0 0 .254657 34.6167 47.1709 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.29128 0 0 .254657 34.6167 47.1709 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.5576 47.5234 mo
35.5576 47.6445 35.4116 47.7422 35.231 47.7422 cv
35.0493 47.7422 34.9033 47.6445 34.9033 47.5234 cv
34.9033 47.4033 35.0493 47.3047 35.231 47.3047 cv
35.4116 47.3047 35.5576 47.4033 35.5576 47.5234 cv
cp
level3{
gsave
clp
[.291304 0 0 .254678 35.2314 47.5225 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291304 0 0 .254678 35.2314 47.5225 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.4214 46.416 mo
35.4214 46.5371 35.2744 46.6348 35.0947 46.6348 cv
34.9136 46.6348 34.7671 46.5371 34.7671 46.416 cv
34.7671 46.2959 34.9136 46.1982 35.0947 46.1982 cv
35.2744 46.1982 35.4214 46.2959 35.4214 46.416 cv
cp
level3{
gsave
clp
[.291054 0 0 .25446 35.0957 46.415 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291054 0 0 .25446 35.0957 46.415 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.709 47.04 mo
35.709 47.1611 35.562 47.2588 35.3818 47.2588 cv
35.2012 47.2588 35.0547 47.1611 35.0547 47.04 cv
35.0547 46.9189 35.2012 46.8203 35.3818 46.8203 cv
35.562 46.8203 35.709 46.9189 35.709 47.04 cv
cp
level3{
gsave
clp
[.291613 0 0 .254948 35.3823 47.0381 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291613 0 0 .254948 35.3823 47.0381 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.4443 47.04 mo
36.4443 47.1611 36.2983 47.2588 36.1172 47.2588 cv
35.9365 47.2588 35.79 47.1611 35.79 47.04 cv
35.79 46.9189 35.9365 46.8203 36.1172 46.8203 cv
36.2983 46.8203 36.4443 46.9189 36.4443 47.04 cv
cp
level3{
gsave
clp
[.291613 0 0 .254948 36.1187 47.0381 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291613 0 0 .254948 36.1187 47.0381 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.7573 47.2861 mo
36.7573 47.4072 36.6113 47.5039 36.4307 47.5039 cv
36.2505 47.5039 36.104 47.4072 36.104 47.2861 cv
36.104 47.165 36.2505 47.0674 36.4307 47.0674 cv
36.6113 47.0674 36.7573 47.165 36.7573 47.2861 cv
cp
level3{
gsave
clp
[.290789 0 0 .254227 36.4321 47.2842 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.290789 0 0 .254227 36.4321 47.2842 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.0151 46.6748 mo
36.9502 46.542 37.1416 46.3359 37.4414 46.2148 cv
37.7407 46.0938 38.0376 46.1035 38.1016 46.2354 cv
38.166 46.3691 37.9756 46.5742 37.6743 46.6953 cv
37.3745 46.8174 37.0796 46.8076 37.0151 46.6748 cv
cp
level3{
gsave
clp
[-.482868 .195171 -.135897 -.280468 37.5586 46.4551 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.482868 .195171 -.135897 -.280468 37.5586 46.4551 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.8179 46.7188 mo
36.8179 46.8633 36.5977 46.9805 36.3257 46.9805 cv
36.0532 46.9805 35.832 46.8633 35.832 46.7188 cv
35.832 46.5732 36.0532 46.4551 36.3257 46.4551 cv
36.5977 46.4551 36.8179 46.5732 36.8179 46.7188 cv
cp
level3{
gsave
clp
[.438133 0 0 .306549 36.3247 46.7178 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.438133 0 0 .306549 36.3247 46.7178 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.0488 46.9941 mo
36.9663 46.9688 36.9316 46.7832 36.9731 46.5771 cv
37.0137 46.3721 37.1152 46.2246 37.1987 46.248 cv
37.2817 46.2725 37.3149 46.459 37.2734 46.665 cv
37.2324 46.8701 37.1318 47.0176 37.0488 46.9941 cv
cp
level3{
gsave
clp
[-.0666186 .331645 -.175236 -.0506881 37.123 46.6211 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0666186 .331645 -.175236 -.0506881 37.123 46.6211 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.2046 46.9531 mo
38.2441 47.1113 38.0664 47.3135 37.8091 47.4072 cv
37.5503 47.5 37.3091 47.4482 37.2705 47.291 cv
37.231 47.1338 37.4082 46.9307 37.667 46.8379 cv
37.9238 46.7451 38.1655 46.7959 38.2046 46.9531 cv
cp
level3{
gsave
clp
[.415957 -.15073 .0826116 .331896 37.7373 47.1221 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.415957 -.15073 .0826116 .331896 37.7373 47.1221 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.8838 46.6416 mo
36.8701 46.7422 36.6689 46.7871 36.4331 46.7422 cv
36.1968 46.6982 36.0161 46.5811 36.0288 46.4805 cv
36.0415 46.3809 36.2437 46.3359 36.48 46.3799 cv
36.7158 46.4248 36.8975 46.542 36.8838 46.6416 cv
cp
level3{
gsave
clp
[.379988 .0722411 -.0274516 .210944 36.4536 46.5615 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.379988 .0722411 -.0274516 .210944 36.4536 46.5615 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.6128 46.7354 mo
35.6187 46.8809 35.4023 47.0098 35.1309 47.0244 cv
34.8584 47.0391 34.6338 46.9336 34.6284 46.7891 cv
34.623 46.6436 34.8389 46.5146 35.1113 46.5 cv
35.3828 46.4854 35.6074 46.5908 35.6128 46.7354 cv
cp
level3{
gsave
clp
[.43753 -.0231039 .011552 .306127 35.1201 46.7627 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.43753 -.0231039 .011552 .306127 35.1201 46.7627 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.0093 46.5283 mo
37.0381 46.6396 36.8647 46.8037 36.6226 46.8945 cv
36.3799 46.9863 36.1606 46.9697 36.1318 46.8584 cv
36.1021 46.7471 36.2754 46.583 36.5176 46.4922 cv
36.7603 46.4014 36.9805 46.417 37.0093 46.5283 cv
cp
level3{
gsave
clp
[.390657 -.146135 .0607688 .234394 36.5693 46.6924 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.390657 -.146135 .0607688 .234394 36.5693 46.6924 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.231 46.7207 mo
36.2354 46.8457 36.0547 46.957 35.8262 46.9688 cv
35.5977 46.9814 35.4092 46.8896 35.4038 46.7656 cv
35.4004 46.6406 35.5811 46.5303 35.8096 46.5176 cv
36.0371 46.5049 36.2261 46.5967 36.231 46.7207 cv
cp
level3{
gsave
clp
[.367153 -.0202368 .0101184 .263078 35.8149 46.7451 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.367153 -.0202368 .0101184 .263078 35.8149 46.7451 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.895 46.6963 mo
35.895 46.8154 35.7407 46.9121 35.5498 46.9121 cv
35.3594 46.9121 35.2041 46.8154 35.2041 46.6963 cv
35.2041 46.5771 35.3594 46.4814 35.5498 46.4814 cv
35.7407 46.4814 35.895 46.5771 35.895 46.6963 cv
cp
level3{
gsave
clp
[.307623 0 0 .251032 35.5483 46.6953 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307623 0 0 .251032 35.5483 46.6953 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.8193 46.7285 mo
34.8193 46.8477 34.665 46.9434 34.4741 46.9434 cv
34.2837 46.9434 34.1294 46.8477 34.1294 46.7285 cv
34.1294 46.6094 34.2837 46.5137 34.4741 46.5137 cv
34.665 46.5137 34.8193 46.6094 34.8193 46.7285 cv
cp
level3{
gsave
clp
[.30707 0 0 .250581 34.4731 46.7275 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.30707 0 0 .250581 34.4731 46.7275 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.1597 46.8633 mo
35.1265 46.957 34.9219 46.9404 34.7021 46.8262 cv
34.4834 46.7129 34.332 46.5459 34.3652 46.4531 cv
34.3979 46.3594 34.603 46.376 34.8223 46.4902 cv
35.0415 46.6035 35.1929 46.7705 35.1597 46.8633 cv
cp
level3{
gsave
clp
[.353634 .182614 -.0695673 .195658 34.7622 46.6582 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.353634 .182614 -.0695673 .195658 34.7622 46.6582 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.9961 46.4834 mo
34.9629 46.5771 34.7578 46.5596 34.5386 46.4463 cv
34.3193 46.332 34.1685 46.165 34.2012 46.0723 cv
34.2344 45.9795 34.4395 45.9971 34.6587 46.1094 cv
34.8784 46.2227 35.0293 46.3906 34.9961 46.4834 cv
cp
level3{
gsave
clp
[.354093 .182852 -.0696577 .195912 34.5986 46.2783 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.354093 .182852 -.0696577 .195912 34.5986 46.2783 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.6455 46.8799 mo
37.6519 47.0254 37.4351 47.1543 37.1631 47.1689 cv
36.8906 47.1826 36.666 47.0781 36.6606 46.9336 cv
36.6553 46.7881 36.8716 46.6582 37.144 46.6445 cv
37.4155 46.6299 37.6401 46.7354 37.6455 46.8799 cv
cp
level3{
gsave
clp
[.437678 -.0231117 .0115559 .30623 37.1523 46.9072 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.437678 -.0231117 .0115559 .30623 37.1523 46.9072 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.7368 46.4512 mo
34.7661 46.5625 34.5928 46.7266 34.3501 46.8174 cv
34.1079 46.9092 33.8877 46.8926 33.8594 46.7813 cv
33.8306 46.6699 34.0034 46.5059 34.2456 46.415 cv
34.4878 46.3232 34.7085 46.3398 34.7368 46.4512 cv
cp
level3{
gsave
clp
[.390581 -.146106 .060757 .234348 34.2969 46.6152 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.390581 -.146106 .060757 .234348 34.2969 46.6152 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.8955 47.1162 mo
34.8647 47.1553 34.7866 47.127 34.7202 47.0518 cv
34.6543 46.9775 34.6255 46.8848 34.6558 46.8457 cv
34.687 46.8066 34.7646 46.8359 34.8315 46.9102 cv
34.897 46.9844 34.9268 47.0771 34.8955 47.1162 cv
cp
level3{
gsave
clp
[.00106308 .00119238 -.000646469 .00081886 870.664 242.072 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.00106308 .00119238 -.000646469 .00081886 870.664 242.072 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.1138 46.792 mo
36.1182 46.917 35.9375 47.0273 35.709 47.04 cv
35.4805 47.0518 35.292 46.96 35.2876 46.8359 cv
35.2822 46.7109 35.4644 46.6006 35.6924 46.5879 cv
35.9209 46.5762 36.1089 46.667 36.1138 46.792 cv
cp
level3{
gsave
clp
[.367131 -.0202355 .0101178 .263062 35.6982 46.8154 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.367131 -.0202355 .0101178 .263062 35.6982 46.8154 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.3813 46.6699 mo
36.3813 46.7891 36.2271 46.8867 36.0366 46.8867 cv
35.8457 46.8867 35.6914 46.7891 35.6914 46.6699 cv
35.6914 46.5508 35.8457 46.4551 36.0366 46.4551 cv
36.2271 46.4551 36.3813 46.5508 36.3813 46.6699 cv
cp
level3{
gsave
clp
[.307603 0 0 .251016 36.0352 46.6699 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307603 0 0 .251016 36.0352 46.6699 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
34.6968 47.0352 mo
34.6831 47.1348 34.4819 47.1807 34.2451 47.1348 cv
34.0088 47.0918 33.8291 46.9736 33.8418 46.873 cv
33.8555 46.7734 34.0566 46.7285 34.2925 46.7734 cv
34.5288 46.8184 34.7095 46.9355 34.6968 47.0352 cv
cp
level3{
gsave
clp
[.379672 .0721811 -.0274288 .210769 34.2666 46.9551 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.379672 .0721811 -.0274288 .210769 34.2666 46.9551 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.5889 47.7461 mo
37.5889 47.8662 37.4429 47.9648 37.2622 47.9648 cv
37.0811 47.9648 36.9351 47.8662 36.9351 47.7461 cv
36.9351 47.625 37.0811 47.5273 37.2622 47.5273 cv
37.4429 47.5273 37.5889 47.625 37.5889 47.7461 cv
cp
level3{
gsave
clp
[.291154 0 0 .254547 37.2632 47.7451 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291154 0 0 .254547 37.2632 47.7451 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.7803 46.7656 mo
36.7803 46.8867 36.6343 46.9844 36.4531 46.9844 cv
36.2725 46.9844 36.1265 46.8867 36.1265 46.7656 cv
36.1265 46.6445 36.2725 46.5469 36.4531 46.5469 cv
36.6343 46.5469 36.7803 46.6445 36.7803 46.7656 cv
cp
level3{
gsave
clp
[.291165 0 0 .254556 36.4546 46.7646 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291165 0 0 .254556 36.4546 46.7646 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.4307 46.3721 mo
26.4307 46.4609 26.6118 46.5332 26.835 46.5332 cv
27.0581 46.5332 27.2388 46.4609 27.2388 46.3721 cv
27.2388 46.2832 27.0581 46.2119 26.835 46.2119 cv
26.6118 46.2119 26.4307 46.2832 26.4307 46.3721 cv
cp
level3{
gsave
clp
[-.358667 0 0 .187429 26.8345 46.373 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358667 0 0 .187429 26.8345 46.373 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.5654 46.3076 mo
25.6108 46.418 26.0425 46.459 26.5313 46.3994 cv
27.021 46.3408 27.3804 46.2041 27.3354 46.0938 cv
27.29 45.9834 26.8584 45.9434 26.3696 46.002 cv
25.8809 46.0605 25.5205 46.1982 25.5654 46.3076 cv
cp
level3{
gsave
clp
[-.786368 .0950647 .0950647 .231824 26.4502 46.2002 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.786368 .0950647 .0950647 .231824 26.4502 46.2002 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.2852 46.5576 mo
23.3652 46.46 23.1294 46.3076 22.7593 46.2188 cv
22.3887 46.1289 22.0239 46.1357 21.9438 46.2344 cv
21.8643 46.332 22.1006 46.4834 22.4712 46.5723 cv
22.8418 46.6621 23.2056 46.6543 23.2852 46.5576 cv
cp
level3{
gsave
clp
[.596261 .143637 .167855 -.20627 22.6162 46.3955 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.596261 .143637 .167855 -.20627 22.6162 46.3955 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.7441 46.1768 mo
23.792 46.0723 23.5107 45.9453 23.1177 45.8926 cv
22.7251 45.8398 22.3682 45.8809 22.3203 45.9854 cv
22.2734 46.0889 22.5542 46.2158 22.9482 46.2686 cv
23.3413 46.3213 23.6973 46.2803 23.7441 46.1768 cv
cp
level3{
gsave
clp
[.633363 .0852282 .0994329 -.21892 23.0337 46.0811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633363 .0852282 .0994329 -.21892 23.0337 46.0811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.2808 45.998 mo
23.2104 46.125 23.438 46.2754 23.7891 46.333 cv
24.1401 46.3896 24.481 46.333 24.5518 46.2061 cv
24.6221 46.0781 24.394 45.9287 24.043 45.8711 cv
23.6929 45.8135 23.3511 45.8701 23.2808 45.998 cv
cp
level3{
gsave
clp
[-.565908 -.0919496 -.148791 .269161 23.9155 46.1035 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.565908 -.0919496 -.148791 .269161 23.9155 46.1035 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.5884 46.2461 mo
23.6211 46.3828 24.0566 46.4629 24.5615 46.4268 cv
25.0669 46.3906 25.4497 46.252 25.417 46.1162 cv
25.3843 45.9805 24.9478 45.8994 24.4434 45.9355 cv
23.939 45.9717 23.5562 46.1113 23.5884 46.2461 cv
cp
level3{
gsave
clp
[-.81251 .0576189 .0684746 .286424 24.5015 46.1797 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.81251 .0576189 .0684746 .286424 24.5015 46.1797 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.8857 46.4639 mo
27.9648 46.3662 27.73 46.2148 27.3599 46.126 cv
26.9893 46.0371 26.6235 46.0439 26.5444 46.1406 cv
26.4653 46.2383 26.7002 46.3906 27.0708 46.4805 cv
27.4414 46.5693 27.8062 46.5625 27.8857 46.4639 cv
cp
level3{
gsave
clp
[.59644 .14368 .167905 -.206332 27.2158 46.3027 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.59644 .14368 .167905 -.206332 27.2158 46.3027 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.9419 46.1357 mo
24.8716 46.2627 25.0991 46.4131 25.4497 46.4707 cv
25.8013 46.5273 26.1416 46.4707 26.2129 46.3438 cv
26.2832 46.2158 26.0557 46.0674 25.7046 46.0098 cv
25.3535 45.9512 25.0117 46.0088 24.9419 46.1357 cv
cp
level3{
gsave
clp
[-.565584 -.0918969 -.148706 .269007 25.5767 46.2412 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.565584 -.0918969 -.148706 .269007 25.5767 46.2412 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.563 46.1211 mo
25.563 46.2354 25.8701 46.3271 26.2485 46.3271 cv
26.6274 46.3271 26.9346 46.2354 26.9346 46.1211 cv
26.9346 46.0068 26.6274 45.915 26.2485 45.915 cv
25.8701 45.915 25.563 46.0068 25.563 46.1211 cv
cp
level3{
gsave
clp
[-.609356 0 0 .240074 26.2485 46.1211 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.609356 0 0 .240074 26.2485 46.1211 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
22.8779 46.3809 mo
22.8779 46.4697 23.0591 46.542 23.2822 46.542 cv
23.5054 46.542 23.686 46.4697 23.686 46.3809 cv
23.686 46.292 23.5054 46.2207 23.2822 46.2207 cv
23.0591 46.2207 22.8779 46.292 22.8779 46.3809 cv
cp
level3{
gsave
clp
[-.358652 0 0 .187421 23.2817 46.3818 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358652 0 0 .187421 23.2817 46.3818 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.9604 46.3379 mo
26.9604 46.4268 27.1421 46.498 27.3643 46.498 cv
27.5874 46.498 27.7681 46.4268 27.7681 46.3379 cv
27.7681 46.248 27.5874 46.1768 27.3643 46.1768 cv
27.1421 46.1768 26.9604 46.248 26.9604 46.3379 cv
cp
level3{
gsave
clp
[-.358572 0 0 .187379 27.3643 46.3379 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358572 0 0 .187379 27.3643 46.3379 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.3525 46.4834 mo
24.0635 45.9639 23.5894 45.2158 22.8931 44.4307 cv
21.5903 42.9619 20.1802 42.5986 20.1802 42.5986 cv
20.1802 42.5986 21.5669 42.6768 23.1465 44.4092 cv
24.001 45.3467 24.4492 46.042 24.6816 46.4834 cv
24.3525 46.4834 li
cp
level3{
gsave
clp
[2.80784 5.53745 4.94015 -2.85252 21.1597 42.0342 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.80784 5.53745 4.94015 -2.85252 21.1597 42.0342 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
25.0078 46.3574 mo
24.6802 46.0723 24.2593 45.7441 23.7373 45.4063 cv
22.1675 44.3887 20.4922 44.1289 20.4922 44.1289 cv
20.4922 44.1289 22.1338 44.1924 24.0381 45.3936 cv
24.6387 45.7725 25.0752 46.0947 25.3896 46.3574 cv
25.0078 46.3574 li
cp
level3{
gsave
clp
[2.50345 5.14545 4.24747 -2.57514 21.9648 43.2363 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.50345 5.14545 4.24747 -2.57514 21.9648 43.2363 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.0229 46.2686 mo
27.0034 46.2217 26.9814 46.1729 26.9541 46.124 cv
26.5806 45.4434 25.2295 44.9473 25.2295 44.9473 cv
25.2295 44.9473 26.7744 45.3799 27.2637 46.1953 cv
27.2788 46.2207 27.2935 46.2451 27.3062 46.2686 cv
27.0229 46.2686 li
cp
level3{
gsave
clp
[-.0347503 1.28088 1.97941 .781712 26.2749 45.3369 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0347503 1.28088 1.97941 .781712 26.2749 45.3369 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.8345 46.4395 mo
24.9199 46.1582 25.0615 45.832 25.292 45.4766 cv
26.063 44.2881 27.7852 43.623 27.7852 43.623 cv
27.7852 43.623 25.8906 44.1357 24.9199 45.5518 cv
24.6816 45.8994 24.5259 46.1934 24.4243 46.4395 cv
24.8345 46.4395 li
cp
level3{
gsave
clp
[-.287447 3.28351 -3.13827 .564642 26.2036 43.9072 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.287447 3.28351 -3.13827 .564642 26.2036 43.9072 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.3413 46.2686 mo
25.2822 46.1172 24.3721 46.0947 24.3721 46.0947 cv
24.3721 46.0947 25.4692 46.0684 26.8022 46.2686 cv
26.3413 46.2686 li
cp
level3{
gsave
clp
[2.44067 2.85859 5.76061 -2.21614 25.231 45.7646 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.44067 2.85859 5.76061 -2.21614 25.231 45.7646 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.7549 46.1211 mo
23.8472 46.0098 23.1226 45.9932 23.1226 45.9932 cv
23.1226 45.9932 24.0479 45.9697 25.23 46.1211 cv
24.7549 46.1211 li
cp
level3{
gsave
clp
[2.47323 2.89674 5.83748 -2.24571 23.8745 45.7041 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.47323 2.89674 5.83748 -2.24571 23.8745 45.7041 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.2231 46.0156 mo
23.9766 45.79 23.6499 45.5371 23.2217 45.2705 cv
21.7402 44.3525 19.5767 44.0215 19.5767 44.0215 cv
19.5767 44.0215 21.832 44.1963 23.6504 45.2832 cv
24.1226 45.5664 24.4663 45.8105 24.7163 46.0156 cv
24.2231 46.0156 li
cp
level3{
gsave
clp
[1.41543 3.99679 4.92984 -1.13376 21.6265 43.5508 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.41543 3.99679 4.92984 -1.13376 21.6265 43.5508 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
24.085 45.7969 mo
22.4663 45.6641 21.0156 45.6758 21.0156 45.6758 cv
21.0156 45.6758 22.8691 45.6006 24.9683 45.7969 cv
24.085 45.7969 li
cp
level3{
gsave
clp
[3.74844 3.03292 9.84904 -3.21439 22.3716 45.2344 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74844 3.03292 9.84904 -3.21439 22.3716 45.2344 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.5288 46.3096 mo
24.3252 46.2588 24.1069 46.208 23.8735 46.1572 cv
21.3384 45.6035 18.1406 45.5781 18.1406 45.5781 cv
18.1406 45.5781 21.3892 45.4717 24.4819 46.1211 cv
24.7944 46.1865 25.0767 46.249 25.3306 46.3096 cv
24.5288 46.3096 li
cp
level3{
gsave
clp
[3.95164 3.92531 9.84738 -3.48969 20.519 44.7354 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.95164 3.92531 9.84738 -3.48969 20.519 44.7354 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.0752 46.3926 mo
25.3066 46.2217 25.5894 46.042 25.936 45.8633 cv
27.6216 44.9932 30.2412 44.9326 30.2412 44.9326 cv
30.2412 44.9326 27.4839 44.793 25.4072 45.8125 cv
24.9775 46.0234 24.646 46.2178 24.3882 46.3926 cv
25.0752 46.3926 li
cp
level3{
gsave
clp
[-2.04809 5.57783 -8.23995 -4.6998 28.043 43.6787 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.04809 5.57783 -8.23995 -4.6998 28.043 43.6787 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.9814 46.2559 mo
26.1025 46.1953 26.2393 46.1299 26.3921 46.0625 cv
27.2402 45.6904 28.1377 45.541 28.1377 45.541 cv
28.1377 45.541 27.2593 45.6299 26.2324 46.0713 cv
26.0767 46.1387 25.9404 46.2002 25.8232 46.2559 cv
25.9814 46.2559 li
cp
level3{
gsave
clp
[-1.1145 1.5289 -1.86003 -.305952 27.3359 45.4092 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.1145 1.5289 -1.86003 -.305952 27.3359 45.4092 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.6084 46.124 mo
25.3813 46.0313 25.1128 45.9326 24.7983 45.834 cv
23.373 45.3867 21.6592 45.3184 21.6592 45.3184 cv
21.6592 45.3184 23.3828 45.291 25.1182 45.8164 cv
25.4902 45.9297 25.7886 46.0322 26.0259 46.124 cv
25.6084 46.124 li
cp
level3{
gsave
clp
[2.10812 2.82089 4.70806 -1.96271 23.0942 44.7197 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.10812 2.82089 4.70806 -1.96271 23.0942 44.7197 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.4907 46.374 mo
26.6108 46.2197 26.7842 46.0459 27.0327 45.8662 cv
27.8242 45.2979 29.1733 45.1611 29.1733 45.1611 cv
29.1733 45.1611 27.7334 45.1865 26.7559 45.8564 cv
26.4619 46.0576 26.2705 46.2314 26.147 46.374 cv
26.4907 46.374 li
cp
level3{
gsave
clp
[-.565825 4.18353 -2.84458 -2.22327 27.8794 44.1494 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.565825 4.18353 -2.84458 -2.22327 27.8794 44.1494 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
24.9736 46.2686 mo
24.8965 46.2314 24.8149 46.1943 24.73 46.1572 cv
23.459 45.6006 21.9053 45.4619 21.9053 45.4619 cv
21.9053 45.4619 23.4736 45.4932 25.0215 46.1494 cv
25.1182 46.1904 25.208 46.2295 25.2935 46.2686 cv
24.9736 46.2686 li
cp
level3{
gsave
clp
[1.71043 3.12733 3.97958 -1.59378 23.1138 44.9775 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.71043 3.12733 3.97958 -1.59378 23.1138 44.9775 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.8696 46.2686 mo
25.8965 46.1846 25.9385 46.0957 25.9956 46.0039 cv
26.4126 45.3496 27.894 45.0234 27.894 45.0234 cv
27.894 45.0234 26.2007 45.2578 25.6563 46.0361 cv
25.5977 46.1182 25.5518 46.1953 25.5161 46.2686 cv
25.8696 46.2686 li
cp
level3{
gsave
clp
[.0505818 2.0715 -3.34671 .0549709 26.6904 45.043 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0505818 2.0715 -3.34671 .0549709 26.6904 45.043 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.4775 46.3828 mo
24.6387 46.2764 24.8218 46.168 25.0298 46.0566 cv
26.6396 45.2031 29.2964 44.9375 29.2964 44.9375 cv
29.2964 44.9375 26.4756 45.0488 24.4863 46.0576 cv
24.2612 46.1719 24.0645 46.2803 23.8936 46.3828 cv
24.4775 46.3828 li
cp
level3{
gsave
clp
[-1.46542 4.02386 -6.81343 -1.5626 27.0459 44.4219 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.46542 4.02386 -6.81343 -1.5626 27.0459 44.4219 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
23.5825 46.3135 mo
23.6416 46.208 23.7256 46.0947 23.8403 45.9746 cv
24.4478 45.3398 25.9678 44.9707 25.9678 44.9707 cv
25.9678 44.9707 24.2769 45.2617 23.5054 46.0186 cv
23.3955 46.127 23.3091 46.2246 23.2422 46.3135 cv
23.5825 46.3135 li
cp
level3{
gsave
clp
[-.1604 1.67331 -2.74307 .373693 24.6519 45.1504 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.1604 1.67331 -2.74307 .373693 24.6519 45.1504 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
25.5151 46.3984 mo
25.8042 46.1387 26.2793 45.7637 26.9741 45.3711 cv
28.2769 44.6357 29.6875 44.4541 29.6875 44.4541 cv
29.6875 44.4541 28.3003 44.4922 26.7212 45.3604 cv
25.8677 45.8291 25.4185 46.1777 25.186 46.3984 cv
25.5151 46.3984 li
cp
level3{
gsave
clp
[-1.9677 3.88058 -3.462 -1.99901 28.3276 43.6689 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.9677 3.88058 -3.462 -1.99901 28.3276 43.6689 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.1719 46.4854 mo
25.3037 46.2871 25.4785 46.0645 25.7075 45.832 cv
26.499 45.0264 27.6548 44.7354 27.6548 44.7354 cv
27.6548 44.7354 26.4497 44.8887 25.4785 45.8428 cv
25.2256 46.0908 25.042 46.3047 24.9087 46.4854 cv
25.1719 46.4854 li
cp
level3{
gsave
clp
[-1.06131 2.99686 -3.69648 -.850109 26.6714 44.5098 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.06131 2.99686 -3.69648 -.850109 26.6714 44.5098 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
26.6509 46.3281 mo
26.5903 46.2217 26.5073 46.1084 26.3916 45.9883 cv
25.7847 45.3535 24.2642 44.9844 24.2642 44.9844 cv
24.2642 44.9844 25.9556 45.2744 26.7275 46.0322 cv
26.8369 46.1406 26.9224 46.2383 26.9907 46.3281 cv
26.6509 46.3281 li
cp
level3{
gsave
clp
[.160524 1.6746 2.74518 .37398 25.5801 45.1641 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.160524 1.6746 2.74518 .37398 25.5801 45.1641 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.5854 46.499 mo
24.6387 46.293 24.7495 46.0371 24.9692 45.752 cv
25.5435 45.002 26.8232 44.582 26.8232 44.582 cv
26.8232 44.582 25.4141 44.9053 24.6924 45.7988 cv
24.4575 46.0889 24.3301 46.3193 24.2642 46.499 cv
24.5854 46.499 li
cp
level3{
gsave
clp
[-2.55957 0 0 2.55957 26.8242 45.541 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.55957 0 0 2.55957 26.8242 45.541 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
23.7153 46.4531 mo
23.5181 46.3691 23.2925 46.2822 23.0371 46.1924 cv
21.2798 45.5771 18.7241 45.3525 18.7241 45.3525 cv
18.7241 45.3525 21.3853 45.4727 23.543 46.2012 cv
23.8086 46.292 24.04 46.376 24.2412 46.4531 cv
23.7153 46.4531 li
cp
level3{
gsave
clp
[1.6986 2.69362 5.84559 -.739307 20.957 45.0703 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.6986 2.69362 5.84559 -.739307 20.957 45.0703 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
23.1475 46.5039 mo
23.0337 46.1719 22.8696 45.7725 22.6313 45.3496 cv
21.998 44.2236 21.0806 43.8242 21.0806 43.8242 cv
21.0806 43.8242 22.0352 44.0313 22.813 45.3643 cv
23.084 45.8291 23.2554 46.208 23.3647 46.5039 cv
23.1475 46.5039 li
cp
level3{
gsave
clp
[.611979 4.91647 2.08847 -1.44524 21.9775 43.2021 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.611979 4.91647 2.08847 -1.44524 21.9775 43.2021 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.5259 46.9238 mo
26.5259 47.0117 26.707 47.085 26.9302 47.085 cv
27.1533 47.085 27.334 47.0117 27.334 46.9238 cv
27.334 46.834 27.1533 46.7617 26.9302 46.7617 cv
26.707 46.7617 26.5259 46.834 26.5259 46.9238 cv
cp
level3{
gsave
clp
[-.359462 0 0 .187845 26.9297 46.9238 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359462 0 0 .187845 26.9297 46.9238 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.7671 47.1816 mo
25.7671 47.2705 25.9482 47.3428 26.1714 47.3428 cv
26.3945 47.3428 26.5752 47.2705 26.5752 47.1816 cv
26.5752 47.0938 26.3945 47.0205 26.1714 47.0205 cv
25.9482 47.0205 25.7671 47.0938 25.7671 47.1816 cv
cp
level3{
gsave
clp
[-.359049 0 0 .187629 26.1709 47.1816 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359049 0 0 .187629 26.1709 47.1816 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.9351 46.3662 mo
25.9351 46.4561 26.1167 46.5273 26.3394 46.5273 cv
26.5625 46.5273 26.7432 46.4561 26.7432 46.3662 cv
26.7432 46.2783 26.5625 46.2051 26.3394 46.2051 cv
26.1167 46.2051 25.9351 46.2783 25.9351 46.3662 cv
cp
level3{
gsave
clp
[-.359064 0 0 .187637 26.3389 46.3662 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359064 0 0 .187637 26.3389 46.3662 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.5811 46.8262 mo
25.5811 46.9141 25.7612 46.9873 25.9844 46.9873 cv
26.2075 46.9873 26.3882 46.9141 26.3882 46.8262 cv
26.3882 46.7363 26.2075 46.6641 25.9844 46.6641 cv
25.7612 46.6641 25.5811 46.7363 25.5811 46.8262 cv
cp
level3{
gsave
clp
[-.359141 0 0 .187677 25.9844 46.8262 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359141 0 0 .187677 25.9844 46.8262 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.6724 46.8262 mo
24.6724 46.9141 24.854 46.9873 25.0767 46.9873 cv
25.2998 46.9873 25.4805 46.9141 25.4805 46.8262 cv
25.4805 46.7363 25.2998 46.6641 25.0767 46.6641 cv
24.854 46.6641 24.6724 46.7363 24.6724 46.8262 cv
cp
level3{
gsave
clp
[-.359543 0 0 .187887 25.0762 46.8262 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359543 0 0 .187887 25.0762 46.8262 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.2861 47.0068 mo
24.2861 47.0957 24.4668 47.168 24.6895 47.168 cv
24.9126 47.168 25.0933 47.0957 25.0933 47.0068 cv
25.0933 46.918 24.9126 46.8457 24.6895 46.8457 cv
24.4668 46.8457 24.2861 46.918 24.2861 47.0068 cv
cp
level3{
gsave
clp
[-.358808 0 0 .187503 24.6895 47.0068 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358808 0 0 .187503 24.6895 47.0068 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.9683 46.5576 mo
24.0479 46.46 23.8115 46.3076 23.4424 46.2188 cv
23.0718 46.1289 22.7065 46.1357 22.627 46.2344 cv
22.5474 46.332 22.7827 46.4834 23.1543 46.5723 cv
23.5239 46.6621 23.8882 46.6543 23.9683 46.5576 cv
cp
level3{
gsave
clp
[.596261 .143637 .167855 -.20627 23.2993 46.3955 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.596261 .143637 .167855 -.20627 23.2993 46.3955 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.2109 46.5889 mo
24.2109 46.6953 24.4834 46.7822 24.8203 46.7822 cv
25.1558 46.7822 25.4282 46.6953 25.4282 46.5889 cv
25.4282 46.4824 25.1558 46.3955 24.8203 46.3955 cv
24.4834 46.3955 24.2109 46.4824 24.2109 46.5889 cv
cp
level3{
gsave
clp
[-.54116 0 0 .225483 24.8203 46.5879 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.54116 0 0 .225483 24.8203 46.5879 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.9268 46.792 mo
24.0288 46.7734 24.0703 46.6367 24.0195 46.4854 cv
23.9692 46.334 23.8447 46.2246 23.7412 46.2432 cv
23.6401 46.2607 23.5977 46.3975 23.6489 46.5498 cv
23.7007 46.7012 23.8237 46.8096 23.9268 46.792 cv
cp
level3{
gsave
clp
[.0818682 .243934 .216366 -.0375925 23.834 46.5186 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0818682 .243934 .216366 -.0375925 23.834 46.5186 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
22.5 46.7617 mo
22.4517 46.8779 22.6709 47.0273 22.9888 47.0957 cv
23.3076 47.165 23.605 47.126 23.6533 47.0107 cv
23.7021 46.8945 23.4824 46.7451 23.1641 46.6768 cv
22.8462 46.6084 22.5483 46.6465 22.5 46.7617 cv
cp
level3{
gsave
clp
[-.51219 -.110113 -.102605 .244417 23.0781 46.8857 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.51219 -.110113 -.102605 .244417 23.0781 46.8857 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.1304 46.5332 mo
24.147 46.6064 24.3955 46.6396 24.6875 46.6064 cv
24.978 46.5742 25.2017 46.4873 25.1855 46.4141 cv
25.1694 46.3398 24.9199 46.3076 24.6289 46.3398 cv
24.3374 46.373 24.1138 46.46 24.1304 46.5332 cv
cp
level3{
gsave
clp
[-.468784 .0525506 .0341996 .155149 24.6582 46.4736 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.468784 .0525506 .0341996 .155149 24.6582 46.4736 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.6982 46.6016 mo
25.6919 46.709 25.9585 46.8037 26.2944 46.8145 cv
26.6304 46.8252 26.9082 46.7471 26.9141 46.6406 cv
26.9209 46.5342 26.6548 46.4395 26.3188 46.4277 cv
25.9829 46.418 25.7051 46.4951 25.6982 46.6016 cv
cp
level3{
gsave
clp
[-.540644 -.0175209 -.0141836 .225268 26.3052 46.6201 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.540644 -.0175209 -.0141836 .225268 26.3052 46.6201 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.9761 46.4492 mo
23.9395 46.5313 24.1538 46.6514 24.4526 46.7188 cv
24.752 46.7861 25.0234 46.7744 25.0591 46.6924 cv
25.0947 46.6104 24.8813 46.4902 24.582 46.4229 cv
24.2832 46.3555 24.0107 46.3672 23.9761 46.4492 cv
cp
level3{
gsave
clp
[-.481514 -.107652 -.0751061 .172744 24.5176 46.5713 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.481514 -.107652 -.0751061 .172744 24.5176 46.5713 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.9365 46.5908 mo
24.9307 46.6826 25.1543 46.7646 25.4365 46.7734 cv
25.7183 46.7822 25.9502 46.7148 25.957 46.624 cv
25.9619 46.5313 25.7388 46.4502 25.457 46.4414 cv
25.1748 46.4326 24.9419 46.5 24.9365 46.5908 cv
cp
level3{
gsave
clp
[-.453143 -.0141868 -.0125178 .193608 25.4468 46.6084 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.453143 -.0141868 -.0125178 .193608 25.4468 46.6084 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.3511 46.5732 mo
25.3511 46.6611 25.542 46.7314 25.7773 46.7314 cv
26.0122 46.7314 26.2031 46.6611 26.2031 46.5732 cv
26.2031 46.4854 26.0122 46.4141 25.7773 46.4141 cv
25.542 46.4141 25.3511 46.4854 25.3511 46.5732 cv
cp
level3{
gsave
clp
[-.379311 0 0 .184642 25.7759 46.5723 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.379311 0 0 .184642 25.7759 46.5723 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.6787 46.5967 mo
26.6787 46.6846 26.8696 46.7559 27.105 46.7559 cv
27.3403 46.7559 27.5308 46.6846 27.5308 46.5967 cv
27.5308 46.5088 27.3403 46.4385 27.105 46.4385 cv
26.8696 46.4385 26.6787 46.5088 26.6787 46.5967 cv
cp
level3{
gsave
clp
[-.379372 0 0 .184672 27.1035 46.5967 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.379372 0 0 .184672 27.1035 46.5967 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.2583 46.6953 mo
26.2998 46.7646 26.5527 46.752 26.8232 46.668 cv
27.0942 46.585 27.2813 46.4619 27.2402 46.3936 cv
27.1987 46.3252 26.9458 46.3379 26.6753 46.4199 cv
26.4043 46.5039 26.2173 46.6279 26.2583 46.6953 cv
cp
level3{
gsave
clp
[-.436574 .134395 .086814 .144412 26.7471 46.5449 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.436574 .134395 .086814 .144412 26.7471 46.5449 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.4604 46.416 mo
26.502 46.4844 26.7544 46.4727 27.0254 46.3887 cv
27.2964 46.3057 27.4824 46.1816 27.4414 46.1133 cv
27.4009 46.0449 27.1479 46.0566 26.877 46.1406 cv
26.6055 46.2246 26.4194 46.3477 26.4604 46.416 cv
cp
level3{
gsave
clp
[-.436465 .134361 .0867922 .144375 26.9487 46.2656 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.436465 .134361 .0867922 .144375 26.9487 46.2656 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.1899 46.709 mo
23.1831 46.8154 23.4492 46.9102 23.7861 46.9209 cv
24.1216 46.9307 24.3989 46.8535 24.4058 46.7471 cv
24.4126 46.6406 24.1455 46.5449 23.8086 46.5342 cv
23.4736 46.5234 23.1958 46.6016 23.1899 46.709 cv
cp
level3{
gsave
clp
[-.540556 -.017518 -.0141813 .225232 23.7969 46.7266 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.540556 -.017518 -.0141813 .225232 23.7969 46.7266 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.7803 46.3926 mo
26.7446 46.4746 26.958 46.5947 27.2578 46.6621 cv
27.5571 46.7295 27.8286 46.7178 27.8643 46.6348 cv
27.8999 46.5537 27.686 46.4326 27.3872 46.3662 cv
27.0874 46.2988 26.8159 46.3105 26.7803 46.3926 cv
cp
level3{
gsave
clp
[-.48164 -.10768 -.0751259 .17279 27.3218 46.5137 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.48164 -.10768 -.0751259 .17279 27.3218 46.5137 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.585 46.8818 mo
26.623 46.9102 26.7192 46.8896 26.8013 46.835 cv
26.8823 46.7793 26.918 46.7119 26.8804 46.6826 cv
26.8423 46.6543 26.7456 46.6748 26.6636 46.7305 cv
26.5835 46.7852 26.5474 46.8525 26.585 46.8818 cv
cp
level3{
gsave
clp
[-.131369 .088695 .0803275 .0610824 26.7339 46.7832 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.131369 .088695 .0803275 .0610824 26.7339 46.7832 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.0811 46.6436 mo
25.0752 46.7354 25.2988 46.8164 25.5811 46.8262 cv
25.8618 46.834 26.0957 46.7676 26.1011 46.6748 cv
26.1069 46.584 25.8823 46.5029 25.6016 46.4941 cv
25.3193 46.4844 25.0864 46.5508 25.0811 46.6436 cv
cp
level3{
gsave
clp
[-.453041 -.0141836 -.012515 .193565 25.5908 46.6611 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.453041 -.0141836 -.012515 .193565 25.5908 46.6611 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.7505 46.5537 mo
24.7505 46.6416 24.9409 46.7119 25.1763 46.7119 cv
25.4111 46.7119 25.6025 46.6416 25.6025 46.5537 cv
25.6025 46.4668 25.4111 46.3955 25.1763 46.3955 cv
24.9409 46.3955 24.7505 46.4668 24.7505 46.5537 cv
cp
level3{
gsave
clp
[-.37893 0 0 .184457 25.1753 46.5527 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.37893 0 0 .184457 25.1753 46.5527 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.8301 46.8223 mo
26.8467 46.8965 27.0957 46.9297 27.3877 46.8965 cv
27.6792 46.8633 27.9014 46.7773 27.8857 46.7031 cv
27.8691 46.6299 27.6206 46.5967 27.3286 46.6299 cv
27.0376 46.6621 26.8145 46.749 26.8301 46.8223 cv
cp
level3{
gsave
clp
[-.469005 .0525753 .0342157 .155222 27.3579 46.7637 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.469005 .0525753 .0342157 .155222 27.3579 46.7637 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.2593 47.3457 mo
23.2593 47.4346 23.4399 47.5068 23.6636 47.5068 cv
23.8867 47.5068 24.0674 47.4346 24.0674 47.3457 cv
24.0674 47.2559 23.8867 47.1846 23.6636 47.1846 cv
23.4399 47.1846 23.2593 47.2559 23.2593 47.3457 cv
cp
level3{
gsave
clp
[-.359064 0 0 .187637 23.6631 47.3457 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359064 0 0 .187637 23.6631 47.3457 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.2578 46.624 mo
24.2578 46.7119 24.438 46.7852 24.6621 46.7852 cv
24.8853 46.7852 25.0654 46.7119 25.0654 46.624 cv
25.0654 46.5352 24.8853 46.4629 24.6621 46.4629 cv
24.438 46.4629 24.2578 46.5352 24.2578 46.624 cv
cp
level3{
gsave
clp
[-.358904 0 0 .187553 24.6616 46.624 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358904 0 0 .187553 24.6616 46.624 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.7031 46.4531 mo
26.7031 46.5361 26.8281 46.6025 26.9814 46.6025 cv
27.1357 46.6025 27.2612 46.5361 27.2612 46.4531 cv
27.2612 46.3701 27.1357 46.3027 26.9814 46.3027 cv
26.8281 46.3027 26.7031 46.3701 26.7031 46.4531 cv
cp
level3{
gsave
clp
[-.24845 0 0 .174473 26.9814 46.4512 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.24845 0 0 .174473 26.9814 46.4512 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.1045 46.3926 mo
26.1357 46.4951 26.4336 46.5332 26.7729 46.4785 cv
27.1104 46.4238 27.3589 46.2959 27.3281 46.1943 cv
27.2964 46.0918 26.998 46.0537 26.6602 46.1084 cv
26.3218 46.1641 26.0737 46.291 26.1045 46.3926 cv
cp
level3{
gsave
clp
[-.544514 .0887794 .0651049 .215438 26.7183 46.2949 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.544514 .0887794 .0651049 .215438 26.7183 46.2949 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.5283 46.625 mo
24.584 46.5342 24.4204 46.3926 24.1641 46.3105 cv
23.9087 46.2275 23.6567 46.2334 23.6016 46.3242 cv
23.5469 46.415 23.7095 46.5557 23.9658 46.6387 cv
24.2217 46.7217 24.4736 46.7158 24.5283 46.625 cv
cp
level3{
gsave
clp
[.411805 .133718 .115968 -.191702 24.0625 46.4736 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.411805 .133718 .115968 -.191702 24.0625 46.4736 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.8457 46.2715 mo
24.8789 46.1748 24.6846 46.0566 24.4131 46.0078 cv
24.1416 45.958 23.894 45.9971 23.8618 46.0938 cv
23.8296 46.1895 24.0234 46.3076 24.2959 46.3564 cv
24.5674 46.4063 24.8135 46.3672 24.8457 46.2715 cv
cp
level3{
gsave
clp
[.437664 .0792526 .0686068 -.203455 24.3535 46.1826 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.437664 .0792526 .0686068 -.203455 24.3535 46.1826 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.5249 46.1055 mo
24.4766 46.2246 24.6338 46.3633 24.877 46.416 cv
25.1191 46.4697 25.355 46.417 25.4033 46.2988 cv
25.4526 46.1807 25.2954 46.041 25.0522 45.9873 cv
24.8101 45.9346 24.5742 45.9863 24.5249 46.1055 cv
cp
level3{
gsave
clp
[-.391369 -.0853895 -.103179 .250239 24.9629 46.2012 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.391369 -.0853895 -.103179 .250239 24.9629 46.2012 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.7378 46.3359 mo
24.7612 46.4629 25.0615 46.5371 25.4102 46.5039 cv
25.7598 46.4697 26.0239 46.3408 26.002 46.2148 cv
25.979 46.0889 25.6782 46.0137 25.3286 46.0469 cv
24.98 46.0811 24.7148 46.21 24.7378 46.3359 cv
cp
level3{
gsave
clp
[-.562307 .0532711 .0473521 .266356 25.3696 46.2754 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.562307 .0532711 .0473521 .266356 25.3696 46.2754 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.708 46.5391 mo
27.7632 46.4482 27.6006 46.3066 27.3447 46.2246 cv
27.0889 46.1406 26.8364 46.1475 26.7803 46.2383 cv
26.7256 46.3291 26.8892 46.4697 27.145 46.5527 cv
27.4009 46.6357 27.6533 46.6299 27.708 46.5391 cv
cp
level3{
gsave
clp
[.412269 .133869 .116099 -.191918 27.2417 46.3877 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.412269 .133869 .116099 -.191918 27.2417 46.3877 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.6733 46.2334 mo
25.6245 46.3516 25.7817 46.4912 26.0244 46.5439 cv
26.2676 46.5977 26.5034 46.5449 26.5518 46.4268 cv
26.6001 46.3086 26.4429 46.1689 26.2007 46.1162 cv
25.958 46.0625 25.7217 46.1152 25.6733 46.2334 cv
cp
level3{
gsave
clp
[-.391208 -.0853546 -.103137 .250136 26.1118 46.3301 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.391208 -.0853546 -.103137 .250136 26.1118 46.3301 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.1025 46.2197 mo
26.1025 46.3262 26.3149 46.4111 26.5767 46.4111 cv
26.8394 46.4111 27.0513 46.3262 27.0513 46.2197 cv
27.0513 46.1143 26.8394 46.0273 26.5767 46.0273 cv
26.3149 46.0273 26.1025 46.1143 26.1025 46.2197 cv
cp
level3{
gsave
clp
[-.42169 0 0 .223875 26.5767 46.2188 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.42169 0 0 .223875 26.5767 46.2188 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.2476 46.4609 mo
24.2476 46.5439 24.3721 46.6113 24.5259 46.6113 cv
24.6802 46.6113 24.8052 46.5439 24.8052 46.4609 cv
24.8052 46.3789 24.6802 46.3115 24.5259 46.3115 cv
24.3721 46.3115 24.2476 46.3789 24.2476 46.4609 cv
cp
level3{
gsave
clp
[-.248298 0 0 .174366 24.5259 46.46 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248298 0 0 .174366 24.5259 46.46 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.0684 46.4199 mo
27.0684 46.5039 27.1943 46.5703 27.3477 46.5703 cv
27.502 46.5703 27.6274 46.5039 27.6274 46.4199 cv
27.6274 46.3379 27.502 46.2715 27.3477 46.2715 cv
27.1943 46.2715 27.0684 46.3379 27.0684 46.4199 cv
cp
level3{
gsave
clp
[-.248402 0 0 .17444 27.3472 46.4199 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248402 0 0 .17444 27.3472 46.4199 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.2656 46.5566 mo
25.0659 46.0742 24.7383 45.3789 24.2573 44.6504 cv
23.3569 43.2861 22.3823 42.9482 22.3823 42.9482 cv
22.3823 42.9482 23.3413 43.0205 24.4326 44.6299 cv
25.0229 45.5 25.333 46.1465 25.4941 46.5566 cv
25.2656 46.5566 li
cp
level3{
gsave
clp
[2.34088 4.61653 4.11856 -2.37812 22.8911 42.6553 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.34088 4.61653 4.11856 -2.37812 22.8911 42.6553 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
25.7188 46.4395 mo
25.4917 46.1748 25.2017 45.8691 24.8413 45.5557 cv
23.7559 44.6104 22.5981 44.3691 22.5981 44.3691 cv
22.5981 44.3691 23.7329 44.4287 25.0483 45.5439 cv
25.4639 45.8965 25.7651 46.1953 25.9829 46.4395 cv
25.7188 46.4395 li
cp
level3{
gsave
clp
[1.98554 4.08096 3.36876 -2.04239 23.5161 43.8125 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.98554 4.08096 3.36876 -2.04239 23.5161 43.8125 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.1123 46.3564 mo
27.0986 46.3125 27.083 46.2686 27.064 46.2217 cv
26.8062 45.5908 25.8726 45.1299 25.8726 45.1299 cv
25.8726 45.1299 26.9399 45.5313 27.2788 46.2891 cv
27.2886 46.3125 27.2979 46.334 27.3076 46.3564 cv
27.1123 46.3564 li
cp
level3{
gsave
clp
[-.0402389 1.48319 2.29204 .90518 26.5991 45.417 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0402389 1.48319 2.29204 .90518 26.5991 45.417 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.5991 46.5146 mo
25.6582 46.2539 25.7559 45.9512 25.9155 45.6211 cv
26.4487 44.5176 27.6382 43.8984 27.6382 43.8984 cv
27.6382 43.8984 26.3286 44.375 25.6577 45.6914 cv
25.4941 46.0137 25.3853 46.2861 25.3164 46.5146 cv
25.5991 46.5146 li
cp
level3{
gsave
clp
[-.282905 3.23162 -3.08868 .555719 26.5757 44.0898 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.282905 3.23162 -3.08868 .555719 26.5757 44.0898 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.6411 46.3564 mo
25.9087 46.2158 25.2803 46.1953 25.2803 46.1953 cv
25.2803 46.1953 26.0381 46.1709 26.959 46.3564 cv
26.6411 46.3564 li
cp
level3{
gsave
clp
[1.77634 2.08052 4.19264 -1.61293 25.8604 45.9727 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.77634 2.08052 4.19264 -1.61293 25.8604 45.9727 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.5439 46.2197 mo
24.917 46.1162 24.416 46.1006 24.416 46.1006 cv
24.416 46.1006 25.0552 46.0791 25.8726 46.2197 cv
25.5439 46.2197 li
cp
level3{
gsave
clp
[1.79036 2.09693 4.22571 -1.62566 24.9258 45.9043 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.79036 2.09693 4.22571 -1.62566 24.9258 45.9043 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.1763 46.1221 mo
25.0063 45.9121 24.7808 45.6768 24.4844 45.4297 cv
23.4604 44.5771 21.9648 44.2695 21.9648 44.2695 cv
21.9648 44.2695 23.5234 44.4316 24.7808 45.4414 cv
25.1074 45.7051 25.3442 45.9307 25.5176 46.1221 cv
25.1763 46.1221 li
cp
level3{
gsave
clp
[1.1897 3.3594 4.14365 -.95295 23.3042 43.9619 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1897 3.3594 4.14365 -.95295 23.3042 43.9619 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
25.0811 45.9189 mo
23.9629 45.7959 22.959 45.8057 22.959 45.8057 cv
22.959 45.8057 24.2407 45.7354 25.6919 45.9189 cv
25.0811 45.9189 li
cp
level3{
gsave
clp
[2.67025 2.16054 7.01608 -2.28981 23.8843 45.5049 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.67025 2.16054 7.01608 -2.28981 23.8843 45.5049 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.3882 46.3955 mo
25.2476 46.3486 25.0962 46.3008 24.9351 46.2529 cv
23.1836 45.7383 20.9731 45.7158 20.9731 45.7158 cv
20.9731 45.7158 23.2178 45.6172 25.356 46.2197 cv
25.5713 46.2803 25.7666 46.3389 25.9419 46.3955 cv
25.3882 46.3955 li
cp
level3{
gsave
clp
[2.94078 2.92118 7.32833 -2.597 22.5532 45.1563 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.94078 2.92118 7.32833 -2.597 22.5532 45.1563 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.7651 46.4727 mo
25.9253 46.3125 26.1216 46.1465 26.3604 45.9805 cv
27.5254 45.1729 29.3364 45.1152 29.3364 45.1152 cv
29.3364 45.1152 27.4302 44.9863 25.9951 45.9326 cv
25.6982 46.1289 25.4692 46.3096 25.2905 46.4727 cv
25.7651 46.4727 li
cp
level3{
gsave
clp
[-1.56439 4.26052 -6.29393 -3.58985 27.8691 44.2793 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.56439 4.26052 -6.29393 -3.58985 27.8691 44.2793 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.3916 46.3457 mo
26.4761 46.2891 26.5698 46.2285 26.6758 46.166 cv
27.2622 45.8193 27.8818 45.6807 27.8818 45.6807 cv
27.8818 45.6807 27.2749 45.7627 26.5654 46.1738 cv
26.457 46.2363 26.3643 46.293 26.2827 46.3457 cv
26.3916 46.3457 li
cp
level3{
gsave
clp
[-.944144 1.2952 -1.57572 -.259187 27.3833 45.5986 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.944144 1.2952 -1.57572 -.259187 27.3833 45.5986 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.1343 46.2227 mo
25.9775 46.1357 25.7915 46.0449 25.5742 45.9531 cv
24.5884 45.5371 23.4048 45.4736 23.4048 45.4736 cv
23.4048 45.4736 24.5962 45.4482 25.7954 45.9375 cv
26.0522 46.042 26.2583 46.1377 26.4233 46.2227 cv
26.1343 46.2227 li
cp
level3{
gsave
clp
[1.61148 2.15634 3.59893 -1.50033 24.3423 45.083 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.61148 2.15634 3.59893 -1.50033 24.3423 45.083 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.7441 46.4551 mo
26.8271 46.3115 26.9468 46.1494 27.1187 45.9834 cv
27.6655 45.4551 28.5977 45.3281 28.5977 45.3281 cv
28.5977 45.3281 27.6035 45.3516 26.9272 45.9736 cv
26.7236 46.1611 26.5913 46.3213 26.5063 46.4551 cv
26.7441 46.4551 li
cp
level3{
gsave
clp
[-.436669 3.22859 -2.19527 -1.71578 27.7212 44.6426 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.436669 3.22859 -2.19527 -1.71578 27.7212 44.6426 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
25.6953 46.3564 mo
25.6416 46.3223 25.5859 46.2881 25.5269 46.2529 cv
24.6489 45.7363 23.5742 45.6074 23.5742 45.6074 cv
23.5742 45.6074 24.6592 45.6367 25.7285 46.2461 cv
25.7954 46.2842 25.8574 46.3213 25.9165 46.3564 cv
25.6953 46.3564 li
cp
level3{
gsave
clp
[1.33373 2.43858 3.10314 -1.24277 24.3667 45.29 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.33373 2.43858 3.10314 -1.24277 24.3667 45.29 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.3145 46.3564 mo
26.333 46.2783 26.3618 46.1963 26.4019 46.1113 cv
26.6895 45.5029 27.7139 45.2002 27.7139 45.2002 cv
27.7139 45.2002 26.5435 45.418 26.1665 46.1406 cv
26.1265 46.2178 26.0947 46.2891 26.0698 46.3564 cv
26.3145 46.3564 li
cp
level3{
gsave
clp
[.0473019 1.93718 -3.1297 .0514064 26.8784 45.2139 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0473019 1.93718 -3.1297 .0514064 26.8784 45.2139 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.3525 46.4629 mo
25.4639 46.3643 25.5903 46.2627 25.7339 46.1611 cv
26.8467 45.3672 28.6836 45.1201 28.6836 45.1201 cv
28.6836 45.1201 26.7334 45.2236 25.3589 46.1611 cv
25.2031 46.2676 25.0669 46.3682 24.9487 46.4629 cv
25.3525 46.4629 li
cp
level3{
gsave
clp
[-1.20062 3.29676 -5.58225 -1.28024 27.1855 44.7764 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.20062 3.29676 -5.58225 -1.28024 27.1855 44.7764 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
24.7329 46.3984 mo
24.7749 46.3008 24.832 46.1953 24.9116 46.084 cv
25.3325 45.4941 26.3823 45.1514 26.3823 45.1514 cv
26.3823 45.1514 25.2134 45.4209 24.6802 46.124 cv
24.6045 46.2246 24.5449 46.3154 24.4985 46.3984 cv
24.7329 46.3984 li
cp
level3{
gsave
clp
[-.161114 1.68075 -2.75527 .375355 25.4883 45.2734 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.161114 1.68075 -2.75527 .375355 25.4883 45.2734 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
26.0698 46.4775 mo
26.2695 46.2354 26.5981 45.8877 27.0786 45.5234 cv
27.9785 44.8389 28.9536 44.6709 28.9536 44.6709 cv
28.9536 44.6709 27.9946 44.707 26.9028 45.5127 cv
26.313 45.9492 26.0024 46.2725 25.8423 46.4775 cv
26.0698 46.4775 li
cp
level3{
gsave
clp
[-1.56045 3.07742 -2.74547 -1.58528 28.1045 44.1807 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.56045 3.07742 -2.74547 -1.58528 28.1045 44.1807 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.8325 46.5576 mo
25.9238 46.374 26.0444 46.168 26.2021 45.9512 cv
26.7495 45.2031 27.5488 44.9326 27.5488 44.9326 cv
27.5488 44.9326 26.7153 45.0742 26.0444 45.9609 cv
25.8696 46.1914 25.7432 46.3906 25.6509 46.5576 cv
25.8325 46.5576 li
cp
level3{
gsave
clp
[-.918685 2.59412 -3.19972 -.735866 26.937 44.792 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.918685 2.59412 -3.19972 -.735866 26.937 44.792 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
26.8545 46.4111 mo
26.813 46.3135 26.7554 46.208 26.6758 46.0967 cv
26.2559 45.5068 25.2051 45.1641 25.2051 45.1641 cv
25.2051 45.1641 26.374 45.4336 26.9072 46.1367 cv
26.9839 46.2383 27.043 46.3291 27.0898 46.4111 cv
26.8545 46.4111 li
cp
level3{
gsave
clp
[.161116 1.68078 2.75532 .375361 26.0991 45.2861 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.161116 1.68078 2.75532 .375361 26.0991 45.2861 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.4268 46.5703 mo
25.4639 46.3789 25.541 46.1416 25.6924 45.876 cv
26.0889 45.1807 26.9741 44.79 26.9741 44.79 cv
26.9741 44.79 25.9995 45.0908 25.501 45.9199 cv
25.3389 46.1895 25.2505 46.4043 25.2051 46.5703 cv
25.4268 46.5703 li
cp
level3{
gsave
clp
[-1.76953 0 0 1.76953 26.9746 45.6797 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.76953 0 0 1.76953 26.9746 45.6797 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.8262 46.5283 mo
24.6895 46.4502 24.5332 46.3691 24.3564 46.2861 cv
23.1421 45.7148 21.3765 45.5059 21.3765 45.5059 cv
21.3765 45.5059 23.2153 45.6172 24.7065 46.2949 cv
24.8906 46.3779 25.0503 46.4561 25.1895 46.5283 cv
24.8262 46.5283 li
cp
level3{
gsave
clp
[1.42125 2.2538 4.89111 -.618591 22.8433 45.3203 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.42125 2.2538 4.89111 -.618591 22.8433 45.3203 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
24.4336 46.5752 mo
24.355 46.2676 24.2412 45.8965 24.0767 45.5029 cv
23.6392 44.458 23.0044 44.0859 23.0044 44.0859 cv
23.0044 44.0859 23.665 44.2783 24.2021 45.5166 cv
24.3887 45.9473 24.5078 46.2998 24.5835 46.5752 cv
24.4336 46.5752 li
cp
level3{
gsave
clp
[.514538 4.13366 1.75594 -1.21512 23.5879 43.6816 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.514538 4.13366 1.75594 -1.21512 23.5879 43.6816 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.7681 46.9648 mo
26.7681 47.0479 26.8936 47.1143 27.0474 47.1143 cv
27.2017 47.1143 27.3267 47.0479 27.3267 46.9648 cv
27.3267 46.8818 27.2017 46.8154 27.0474 46.8154 cv
26.8936 46.8154 26.7681 46.8818 26.7681 46.9648 cv
cp
level3{
gsave
clp
[-.248294 0 0 .174364 27.0474 46.9639 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248294 0 0 .174364 27.0474 46.9639 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.2437 47.2051 mo
26.2437 47.2881 26.3687 47.3545 26.5229 47.3545 cv
26.6772 47.3545 26.8022 47.2881 26.8022 47.2051 cv
26.8022 47.1221 26.6772 47.0547 26.5229 47.0547 cv
26.3687 47.0547 26.2437 47.1221 26.2437 47.2051 cv
cp
level3{
gsave
clp
[-.248551 0 0 .174544 26.522 47.2031 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248551 0 0 .174544 26.522 47.2031 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.3604 46.4482 mo
26.3604 46.5303 26.4854 46.5977 26.6396 46.5977 cv
26.7939 46.5977 26.9189 46.5303 26.9189 46.4482 cv
26.9189 46.3652 26.7939 46.2988 26.6396 46.2988 cv
26.4854 46.2988 26.3604 46.3652 26.3604 46.4482 cv
cp
level3{
gsave
clp
[-.248297 0 0 .174366 26.6396 46.4473 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248297 0 0 .174366 26.6396 46.4473 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.1147 46.874 mo
26.1147 46.957 26.2393 47.0244 26.3945 47.0244 cv
26.5479 47.0244 26.6729 46.957 26.6729 46.874 cv
26.6729 46.792 26.5479 46.7246 26.3945 46.7246 cv
26.2393 46.7246 26.1147 46.792 26.1147 46.874 cv
cp
level3{
gsave
clp
[-.248468 0 0 .174486 26.3931 46.873 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248468 0 0 .174486 26.3931 46.873 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.4873 46.874 mo
25.4873 46.957 25.6123 47.0244 25.7666 47.0244 cv
25.9209 47.0244 26.0459 46.957 26.0459 46.874 cv
26.0459 46.792 25.9209 46.7246 25.7666 46.7246 cv
25.6123 46.7246 25.4873 46.792 25.4873 46.874 cv
cp
level3{
gsave
clp
[-.248539 0 0 .174536 25.7656 46.873 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248539 0 0 .174536 25.7656 46.873 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.2197 47.042 mo
25.2197 47.125 25.3452 47.1924 25.4985 47.1924 cv
25.6528 47.1924 25.7778 47.125 25.7778 47.042 cv
25.7778 46.96 25.6528 46.8936 25.4985 46.8936 cv
25.3452 46.8936 25.2197 46.96 25.2197 47.042 cv
cp
level3{
gsave
clp
[-.248082 0 0 .174215 25.4985 47.042 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248082 0 0 .174215 25.4985 47.042 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.001 46.625 mo
25.0552 46.5342 24.8921 46.3926 24.6372 46.3105 cv
24.3813 46.2275 24.1284 46.2334 24.0732 46.3242 cv
24.019 46.415 24.1816 46.5557 24.4375 46.6387 cv
24.6938 46.7217 24.9448 46.7158 25.001 46.625 cv
cp
level3{
gsave
clp
[.412209 .133849 .116082 -.19189 24.5347 46.4736 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.412209 .133849 .116082 -.19189 24.5347 46.4736 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.1689 46.6543 mo
25.1689 46.7529 25.3564 46.833 25.5889 46.833 cv
25.8208 46.833 26.0103 46.7529 26.0103 46.6543 cv
26.0103 46.5547 25.8208 46.4746 25.5889 46.4746 cv
25.3564 46.4746 25.1689 46.5547 25.1689 46.6543 cv
cp
level3{
gsave
clp
[-.373708 0 0 .209324 25.5889 46.6543 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.373708 0 0 .209324 25.5889 46.6543 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.9722 46.8428 mo
25.042 46.8262 25.0723 46.6982 25.0366 46.5576 cv
25.0015 46.417 24.9155 46.3164 24.8438 46.333 cv
24.7729 46.3496 24.7446 46.4766 24.7798 46.6182 cv
24.8154 46.7588 24.9009 46.8594 24.9722 46.8428 cv
cp
level3{
gsave
clp
[.0570823 .22714 .149841 -.0344872 24.9063 46.5889 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0570823 .22714 .149841 -.0344872 24.9063 46.5889 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.9858 46.8154 mo
23.9521 46.9229 24.1035 47.0615 24.3237 47.125 cv
24.5439 47.1885 24.7495 47.1533 24.7832 47.0459 cv
24.8164 46.9385 24.665 46.7998 24.4448 46.7354 cv
24.2246 46.6719 24.019 46.708 23.9858 46.8154 cv
cp
level3{
gsave
clp
[-.354038 -.103015 -.0710445 .227342 24.3848 46.9307 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.354038 -.103015 -.0710445 .227342 24.3848 46.9307 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.1128 46.6025 mo
25.1235 46.6709 25.2959 46.7012 25.4971 46.6709 cv
25.6982 46.6406 25.853 46.5605 25.8413 46.4912 cv
25.8311 46.4229 25.6582 46.3926 25.457 46.4229 cv
25.2559 46.4531 25.1006 46.5342 25.1128 46.6025 cv
cp
level3{
gsave
clp
[-.32412 .0484997 .0236584 .144316 25.4771 46.5479 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.32412 .0484997 .0236584 .144316 25.4771 46.5479 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.1963 46.666 mo
26.1919 46.7656 26.3765 46.8535 26.6084 46.8633 cv
26.8408 46.873 27.0327 46.8008 27.0366 46.7021 cv
27.0415 46.6035 26.8574 46.5146 26.625 46.5049 cv
26.3931 46.4951 26.2007 46.5674 26.1963 46.666 cv
cp
level3{
gsave
clp
[-.372996 -.0153448 -.00944294 .208925 26.6177 46.6836 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.372996 -.0153448 -.00944294 .208925 26.6177 46.6836 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.0054 46.5244 mo
24.9805 46.6016 25.1279 46.7119 25.3354 46.7754 cv
25.5425 46.8369 25.73 46.8262 25.7544 46.75 cv
25.7788 46.6738 25.6313 46.5615 25.4248 46.5 cv
25.2183 46.4375 25.0298 46.4482 25.0054 46.5244 cv
cp
level3{
gsave
clp
[-.332445 -.100562 -.0520555 .160899 25.3794 46.6377 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.332445 -.100562 -.0520555 .160899 25.3794 46.6377 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.6699 46.6563 mo
25.666 46.7412 25.8203 46.8174 26.0156 46.8262 cv
26.21 46.834 26.3701 46.7725 26.375 46.6855 cv
26.3784 46.6016 26.2236 46.5254 26.0298 46.5176 cv
25.8345 46.5088 25.6733 46.5703 25.6699 46.6563 cv
cp
level3{
gsave
clp
[-.313589 -.0130169 -.00828347 .17987 26.0225 46.6719 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.313589 -.0130169 -.00828347 .17987 26.0225 46.6719 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.9565 46.6396 mo
25.9565 46.7207 26.0874 46.7861 26.2505 46.7861 cv
26.4126 46.7861 26.5459 46.7207 26.5459 46.6396 cv
26.5459 46.5576 26.4126 46.4922 26.2505 46.4922 cv
26.0874 46.4922 25.9565 46.5576 25.9565 46.6396 cv
cp
level3{
gsave
clp
[-.261865 0 0 .171812 26.2524 46.6406 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.261865 0 0 .171812 26.2524 46.6406 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.874 46.6611 mo
26.874 46.7422 27.0059 46.8086 27.1685 46.8086 cv
27.3311 46.8086 27.4629 46.7422 27.4629 46.6611 cv
27.4629 46.5801 27.3311 46.5137 27.1685 46.5137 cv
27.0059 46.5137 26.874 46.5801 26.874 46.6611 cv
cp
level3{
gsave
clp
[-.261982 0 0 .171888 27.1685 46.6621 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.261982 0 0 .171888 27.1685 46.6621 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.5835 46.7539 mo
26.6118 46.8174 26.7861 46.8057 26.9741 46.7285 cv
27.1616 46.6514 27.29 46.5361 27.2612 46.4736 cv
27.2334 46.4102 27.0586 46.4199 26.8711 46.498 cv
26.6841 46.5752 26.5547 46.6904 26.5835 46.7539 cv
cp
level3{
gsave
clp
[-.301687 .125407 .0603374 .133689 26.9199 46.6123 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.301687 .125407 .0603374 .133689 26.9199 46.6123 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.7227 46.4941 mo
26.7515 46.5576 26.9253 46.5459 27.1133 46.4678 cv
27.3008 46.3906 27.4292 46.2764 27.4014 46.2129 cv
27.3726 46.1484 27.1987 46.1611 27.0112 46.2383 cv
26.8232 46.3154 26.6948 46.4297 26.7227 46.4941 cv
cp
level3{
gsave
clp
[-.301465 .125315 .060293 .13359 27.0596 46.3516 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.301465 .125315 .060293 .13359 27.0596 46.3516 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.4624 46.7656 mo
24.4575 46.8643 24.6421 46.9521 24.8745 46.9629 cv
25.1069 46.9717 25.2983 46.9004 25.3027 46.8008 cv
25.3071 46.7021 25.1226 46.6143 24.8906 46.6035 cv
24.6582 46.5938 24.4668 46.666 24.4624 46.7656 cv
cp
level3{
gsave
clp
[-.37339 -.015361 -.00945291 .209146 24.8838 46.7832 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.37339 -.015361 -.00945291 .209146 24.8838 46.7832 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.9443 46.4717 mo
26.9194 46.5479 27.0669 46.6602 27.2744 46.7217 cv
27.481 46.7852 27.6685 46.7734 27.6934 46.6973 cv
27.7183 46.6211 27.5703 46.5088 27.3638 46.4463 cv
27.1572 46.3848 26.9688 46.3965 26.9443 46.4717 cv
cp
level3{
gsave
clp
[-.332387 -.100544 -.0520464 .160871 27.3188 46.585 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.332387 -.100544 -.0520464 .160871 27.3188 46.585 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.8091 46.9268 mo
26.8354 46.9531 26.9019 46.9336 26.958 46.8828 cv
27.0146 46.832 27.0391 46.7686 27.0132 46.7422 cv
26.9868 46.7148 26.9204 46.7354 26.8643 46.7861 cv
26.8076 46.8369 26.7827 46.9004 26.8091 46.9268 cv
cp
level3{
gsave
clp
[-.000837158 .000750181 .000510993 .000521865 774.725 269.666 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.000837158 .000750181 .000510993 .000521865 774.725 269.666 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.7695 46.7051 mo
25.7656 46.7891 25.9199 46.8662 26.1147 46.874 cv
26.3096 46.8828 26.4707 46.8193 26.4746 46.7354 cv
26.4785 46.6494 26.3242 46.5742 26.1289 46.5654 cv
25.9346 46.5576 25.7734 46.6191 25.7695 46.7051 cv
cp
level3{
gsave
clp
[-.313589 -.0130169 -.00828347 .17987 26.1221 46.7197 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.313589 -.0130169 -.00828347 .17987 26.1221 46.7197 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.541 46.6211 mo
25.541 46.7021 25.6729 46.7686 25.8354 46.7686 cv
25.998 46.7686 26.1299 46.7021 26.1299 46.6211 cv
26.1299 46.54 25.998 46.4736 25.8354 46.4736 cv
25.6729 46.4736 25.541 46.54 25.541 46.6211 cv
cp
level3{
gsave
clp
[-.262027 0 0 .171918 25.8364 46.6221 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.262027 0 0 .171918 25.8364 46.6221 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.9785 46.8711 mo
26.9897 46.9404 27.1621 46.9707 27.3638 46.9404 cv
27.5654 46.9092 27.7192 46.8291 27.708 46.7607 cv
27.6963 46.6924 27.5249 46.6611 27.3228 46.6914 cv
27.1216 46.7217 26.9673 46.8027 26.9785 46.8711 cv
cp
level3{
gsave
clp
[-.324797 .048601 .0237078 .144618 27.3433 46.8174 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.324797 .048601 .0237078 .144618 27.3433 46.8174 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.5107 47.3564 mo
24.5107 47.4395 24.6357 47.5068 24.79 47.5068 cv
24.9443 47.5068 25.0688 47.4395 25.0688 47.3564 cv
25.0688 47.2744 24.9443 47.207 24.79 47.207 cv
24.6357 47.207 24.5107 47.2744 24.5107 47.3564 cv
cp
level3{
gsave
clp
[-.248367 0 0 .174415 24.7896 47.3555 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248367 0 0 .174415 24.7896 47.3555 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.2007 46.6865 mo
25.2007 46.7695 25.3257 46.8359 25.48 46.8359 cv
25.6343 46.8359 25.7588 46.7695 25.7588 46.6865 cv
25.7588 46.6045 25.6343 46.5371 25.48 46.5371 cv
25.3257 46.5371 25.2007 46.6045 25.2007 46.6865 cv
cp
level3{
gsave
clp
[-.248136 0 0 .174253 25.479 46.6855 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248136 0 0 .174253 25.479 46.6855 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.5532 46.3545 mo
26.5532 46.4453 26.3506 46.5176 26.1001 46.5176 cv
25.8506 46.5176 25.647 46.4453 25.647 46.3545 cv
25.647 46.2637 25.8506 46.1914 26.1001 46.1914 cv
26.3506 46.1914 26.5532 46.2637 26.5532 46.3545 cv
cp
level3{
gsave
clp
[.402232 0 0 .190677 26.1001 46.3535 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402232 0 0 .190677 26.1001 46.3535 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.5239 46.2891 mo
27.4731 46.4004 26.9893 46.4424 26.4404 46.3828 cv
25.8921 46.3223 25.4888 46.1836 25.5386 46.0713 cv
25.5894 45.96 26.0742 45.918 26.6221 45.9775 cv
27.1699 46.0381 27.5737 46.1768 27.5239 46.2891 cv
cp
level3{
gsave
clp
[.883664 .0971319 -.106608 .235723 26.5317 46.1797 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.883664 .0971319 -.106608 .235723 26.5317 46.1797 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.0801 46.542 mo
29.9902 46.4434 30.2559 46.2891 30.6704 46.1982 cv
31.085 46.1074 31.4941 46.1143 31.5835 46.2139 cv
31.6729 46.3125 31.4087 46.4668 30.9927 46.5576 cv
30.5771 46.6484 30.1694 46.6416 30.0801 46.542 cv
cp
level3{
gsave
clp
[-.66871 .145578 -.188186 -.20949 30.8315 46.3779 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.66871 .145578 -.188186 -.20949 30.8315 46.3779 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.5649 46.1553 mo
29.5112 46.0498 29.8276 45.9209 30.2681 45.8672 cv
30.708 45.8135 31.1084 45.8555 31.1611 45.9609 cv
31.2144 46.0674 30.8994 46.1953 30.458 46.249 cv
30.0176 46.3027 29.6182 46.2607 29.5649 46.1553 cv
cp
level3{
gsave
clp
[-.709268 .0862943 -.111119 -.222237 30.3628 46.0576 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.709268 .0862943 -.111119 -.222237 30.3628 46.0576 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.085 45.9746 mo
30.1641 46.1045 29.9087 46.2559 29.5151 46.3145 cv
29.1216 46.373 28.7397 46.3154 28.6602 46.1855 cv
28.5811 46.0557 28.8364 45.9033 29.2305 45.8457 cv
29.6235 45.7871 30.0063 45.8447 30.085 45.9746 cv
cp
level3{
gsave
clp
[.633756 -.0934081 .166716 .27313 29.373 46.0811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633756 -.0934081 .166716 .27313 29.373 46.0811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.7397 46.2266 mo
29.7036 46.3643 29.2153 46.4463 28.6499 46.4102 cv
28.0825 46.373 27.6543 46.2314 27.6895 46.0938 cv
27.7266 45.9561 28.2153 45.874 28.7813 45.9111 cv
29.3481 45.9473 29.7769 46.0889 29.7397 46.2266 cv
cp
level3{
gsave
clp
[.911254 .0591723 -.076924 .291128 28.7129 46.1611 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.911254 .0591723 -.076924 .291128 28.7129 46.1611 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.9224 46.4482 mo
24.833 46.3486 25.0977 46.1953 25.5122 46.1045 cv
25.9277 46.0137 26.3369 46.0205 26.4263 46.1201 cv
26.5156 46.2188 26.2505 46.373 25.8354 46.4629 cv
25.4199 46.5547 25.0117 46.5469 24.9224 46.4482 cv
cp
level3{
gsave
clp
[-.668408 .145512 -.188101 -.209395 25.6738 46.2832 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.668408 .145512 -.188101 -.209395 25.6738 46.2832 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.2231 46.1143 mo
28.3018 46.2441 28.0469 46.3965 27.6533 46.4541 cv
27.2598 46.5127 26.877 46.4551 26.7979 46.3262 cv
26.7192 46.1953 26.9741 46.0439 27.3672 45.9863 cv
27.7617 45.9268 28.1445 45.9854 28.2231 46.1143 cv
cp
level3{
gsave
clp
[.633679 -.0933968 .166695 .273097 27.5112 46.2207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633679 -.0933968 .166695 .273097 27.5112 46.2207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.5264 46.0986 mo
27.5264 46.2148 27.1821 46.3086 26.7578 46.3086 cv
26.3325 46.3086 25.9888 46.2148 25.9888 46.0986 cv
25.9888 45.9834 26.3325 45.8896 26.7578 45.8896 cv
27.1821 45.8896 27.5264 45.9834 27.5264 46.0986 cv
cp
level3{
gsave
clp
[.684188 0 0 .243845 26.7573 46.0996 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.684188 0 0 .243845 26.7573 46.0996 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.5366 46.3633 mo
30.5366 46.4541 30.3345 46.5273 30.084 46.5273 cv
29.8335 46.5273 29.6318 46.4541 29.6318 46.3633 cv
29.6318 46.2725 29.8335 46.2002 30.084 46.2002 cv
30.3345 46.2002 30.5366 46.2725 30.5366 46.3633 cv
cp
level3{
gsave
clp
[.402261 0 0 .190691 30.084 46.3633 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402261 0 0 .190691 30.084 46.3633 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.9595 46.3193 mo
25.9595 46.4102 25.7568 46.4824 25.5068 46.4824 cv
25.2568 46.4824 25.0537 46.4102 25.0537 46.3193 cv
25.0537 46.2285 25.2568 46.1553 25.5068 46.1553 cv
25.7568 46.1553 25.9595 46.2285 25.9595 46.3193 cv
cp
level3{
gsave
clp
[.40255 0 0 .190828 25.5063 46.3184 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40255 0 0 .190828 25.5063 46.3184 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.8843 46.4678 mo
29.208 45.9395 29.7397 45.1797 30.52 44.3818 cv
31.9805 42.8906 33.561 42.5225 33.561 42.5225 cv
33.561 42.5225 32.0063 42.6006 30.2354 44.3613 cv
29.2778 45.3125 28.7754 46.0195 28.5142 46.4678 cv
28.8843 46.4678 li
cp
level3{
gsave
clp
[-2.97088 5.85897 -5.22699 -3.01814 32.3828 41.8413 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.97088 5.85897 -5.22699 -3.01814 32.3828 41.8413 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
28.1494 46.3389 mo
28.5166 46.0498 28.9878 45.7158 29.5732 45.373 cv
31.334 44.3389 33.2124 44.0762 33.2124 44.0762 cv
33.2124 44.0762 31.3711 44.1396 29.2358 45.3604 cv
28.5625 45.7451 28.0737 46.0732 27.7207 46.3389 cv
28.1494 46.3389 li
cp
level3{
gsave
clp
[-2.69343 5.53593 -4.5698 -2.77056 31.5156 43.0479 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.69343 5.53593 -4.5698 -2.77056 31.5156 43.0479 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.8892 46.248 mo
25.9111 46.2012 25.937 46.1523 25.9668 46.1016 cv
26.3853 45.4111 27.9009 44.9072 27.9009 44.9072 cv
27.9009 44.9072 26.1689 45.3467 25.6196 46.1748 cv
25.603 46.2002 25.5874 46.2246 25.5723 46.248 cv
25.8892 46.248 li
cp
level3{
gsave
clp
[.0324653 1.19666 -1.84925 .730311 26.73 45.3213 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0324653 1.19666 -1.84925 .730311 26.73 45.3213 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.3433 46.4229 mo
28.2471 46.1357 28.0884 45.8057 27.8296 45.4443 cv
26.9658 44.2373 25.0356 44.0508 25.0356 44.0508 cv
25.0356 44.0508 27.1602 44.083 28.248 45.5205 cv
28.5142 45.874 28.6899 46.1719 28.8022 46.4229 cv
28.3433 46.4229 li
cp
level3{
gsave
clp
[.229211 2.61828 2.50247 .450247 26.8408 44.3301 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.229211 2.61828 2.50247 .450247 26.8408 44.3301 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.6538 46.248 mo
27.8408 46.0947 28.8613 46.0732 28.8613 46.0732 cv
28.8613 46.0732 27.6313 46.0459 26.1372 46.248 cv
26.6538 46.248 li
cp
level3{
gsave
clp
[-2.69164 3.15255 -6.35298 -2.44403 27.8911 45.7002 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.69164 3.15255 -6.35298 -2.44403 27.8911 45.7002 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.4326 46.0986 mo
29.4502 45.9863 30.2617 45.9688 30.2617 45.9688 cv
30.2617 45.9688 29.2256 45.9463 27.8994 46.0986 cv
28.4326 46.0986 li
cp
level3{
gsave
clp
[-2.73668 3.20529 -6.45928 -2.48492 29.4131 45.6426 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.73668 3.20529 -6.45928 -2.48492 29.4131 45.6426 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
29.0288 45.9922 mo
29.3057 45.7627 29.6719 45.5049 30.1523 45.2354 cv
31.812 44.3027 34.2383 43.9658 34.2383 43.9658 cv
34.2383 43.9658 31.71 44.1436 29.6709 45.248 cv
29.1406 45.5361 28.7563 45.7832 28.4756 45.9922 cv
29.0288 45.9922 li
cp
level3{
gsave
clp
[-1.49365 4.21768 -5.2023 -1.19641 31.9063 43.4297 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.49365 4.21768 -5.2023 -1.19641 31.9063 43.4297 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
29.1836 45.7695 mo
30.998 45.6357 32.6255 45.6475 32.6255 45.6475 cv
32.6255 45.6475 30.5469 45.5703 28.1934 45.7695 cv
29.1836 45.7695 li
cp
level3{
gsave
clp
[-4.16667 3.37132 -10.9479 -3.57304 31.0996 45.1494 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.16667 3.37132 -10.9479 -3.57304 31.0996 45.1494 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.6851 46.292 mo
28.9136 46.2393 29.1587 46.1885 29.4204 46.1357 cv
32.2627 45.5732 35.8486 45.5479 35.8486 45.5479 cv
35.8486 45.5479 32.2061 45.4395 28.7388 46.0986 cv
28.3877 46.165 28.0718 46.2295 27.7866 46.292 cv
28.6851 46.292 li
cp
level3{
gsave
clp
[-4.33934 4.31042 -10.8135 -3.83207 33.1528 44.5928 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.33934 4.31042 -10.8135 -3.83207 33.1528 44.5928 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.0737 46.376 mo
27.8145 46.2012 27.4961 46.0195 27.1084 45.8379 cv
25.2188 44.9541 22.2813 44.8916 22.2813 44.8916 cv
22.2813 44.8916 25.373 44.75 27.7017 45.7852 cv
28.1831 46 28.5552 46.1973 28.8433 46.376 cv
28.0737 46.376 li
cp
level3{
gsave
clp
[2.23113 6.07632 8.97636 -5.11982 24.7695 43.4736 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.23113 6.07632 8.97636 -5.11982 24.7695 43.4736 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.0571 46.2363 mo
26.9209 46.1748 26.7681 46.1084 26.5962 46.04 cv
25.646 45.6611 24.6406 45.5098 24.6406 45.5098 cv
24.6406 45.5098 25.6245 45.6006 26.7759 46.0488 cv
26.9512 46.1172 27.1025 46.1797 27.2344 46.2363 cv
27.0571 46.2363 li
cp
level3{
gsave
clp
[1.1731 1.60929 1.95784 -.32204 25.562 45.3584 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1731 1.60929 1.95784 -.32204 25.562 45.3584 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.4756 46.1025 mo
27.73 46.0078 28.0308 45.9082 28.3843 45.8086 cv
29.9819 45.3535 31.9028 45.2832 31.9028 45.2832 cv
31.9028 45.2832 29.9707 45.2559 28.0249 45.79 cv
27.6069 45.9053 27.2744 46.0098 27.0073 46.1025 cv
27.4756 46.1025 li
cp
level3{
gsave
clp
[-2.29606 3.07238 -5.12779 -2.13769 30.27 44.6025 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.29606 3.07238 -5.12779 -2.13769 30.27 44.6025 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.4858 46.3555 mo
26.3511 46.1992 26.1577 46.0225 25.8784 45.8408 cv
24.9912 45.2627 23.479 45.124 23.479 45.124 cv
23.479 45.124 25.0923 45.1504 26.1885 45.8311 cv
26.5186 46.0352 26.7334 46.2109 26.8711 46.3555 cv
26.4858 46.3555 li
cp
level3{
gsave
clp
[.613957 4.53939 3.08655 -2.41239 24.939 43.9824 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.613957 4.53939 3.08655 -2.41239 24.939 43.9824 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
28.1865 46.248 mo
28.2739 46.2119 28.3652 46.1738 28.4614 46.1357 cv
29.8853 45.5703 31.6274 45.4297 31.6274 45.4297 cv
31.6274 45.4297 29.8687 45.4609 28.1328 46.1279 cv
28.0254 46.1699 27.9243 46.21 27.8286 46.248 cv
28.1865 46.248 li
cp
level3{
gsave
clp
[-1.84967 3.38192 -4.30356 -1.72353 30.252 44.8789 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.84967 3.38192 -4.30356 -1.72353 30.252 44.8789 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.1826 46.248 mo
27.1523 46.1631 27.1055 46.0732 27.0405 45.9805 cv
26.5747 45.3154 24.9126 44.9834 24.9126 44.9834 cv
24.9126 44.9834 26.8115 45.2227 27.4224 46.0127 cv
27.4878 46.0967 27.5391 46.1748 27.5791 46.248 cv
27.1826 46.248 li
cp
level3{
gsave
clp
[-.0512307 2.09808 3.38965 .0556762 26.2598 45.0059 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0512307 2.09808 3.38965 .0556762 26.2598 45.0059 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.7437 46.3643 mo
28.5625 46.2578 28.3579 46.1475 28.124 46.0342 cv
26.3193 45.167 23.3403 44.8975 23.3403 44.8975 cv
23.3403 44.8975 26.5034 45.0098 28.7339 46.0352 cv
28.9863 46.1514 29.207 46.2617 29.3984 46.3643 cv
28.7437 46.3643 li
cp
level3{
gsave
clp
[1.55916 4.28127 7.24929 -1.66256 25.8901 44.3125 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.55916 4.28127 7.24929 -1.66256 25.8901 44.3125 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
29.7476 46.2959 mo
29.6807 46.1885 29.5869 46.0723 29.4575 45.9502 cv
28.7759 45.3057 27.0723 44.9307 27.0723 44.9307 cv
27.0723 44.9307 28.9683 45.2256 29.8335 45.9951 cv
29.957 46.1045 30.0537 46.2051 30.1289 46.2959 cv
29.7476 46.2959 li
cp
level3{
gsave
clp
[.157713 1.64528 2.69712 .367433 28.5547 45.1328 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.157713 1.64528 2.69712 .367433 28.5547 45.1328 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
27.5801 46.3818 mo
27.2563 46.1172 26.7236 45.7363 25.9434 45.3379 cv
24.4834 44.5898 22.9014 44.4053 22.9014 44.4053 cv
22.9014 44.4053 24.4575 44.4453 26.228 45.3262 cv
27.1851 45.8027 27.688 46.1572 27.9492 46.3818 cv
27.5801 46.3818 li
cp
level3{
gsave
clp
[2.11828 4.17754 3.72693 -2.15198 24.4663 43.502 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.11828 4.17754 3.72693 -2.15198 24.4663 43.502 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
27.9648 46.4697 mo
27.8169 46.2686 27.6206 46.042 27.3643 45.8057 cv
26.4775 44.9873 25.1812 44.6914 25.1812 44.6914 cv
25.1812 44.6914 26.5322 44.8477 27.6216 45.8164 cv
27.9043 46.0684 28.1104 46.2852 28.2593 46.4697 cv
27.9648 46.4697 li
cp
level3{
gsave
clp
[1.10798 3.12863 3.85901 -.887488 26.3125 44.4316 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.10798 3.12863 3.85901 -.887488 26.3125 44.4316 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
26.3066 46.3086 mo
26.375 46.2012 26.4678 46.0869 26.5972 45.9639 cv
27.2778 45.3193 28.9824 44.9453 28.9824 44.9453 cv
28.9824 44.9453 27.0859 45.2393 26.2212 46.0088 cv
26.0981 46.1191 26.002 46.2188 25.9263 46.3086 cv
26.3066 46.3086 li
cp
level3{
gsave
clp
[-.157395 1.64197 -2.69168 .366692 27.5005 45.1475 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.157395 1.64197 -2.69168 .366692 27.5005 45.1475 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
28.6226 46.4834 mo
28.5625 46.2734 28.438 46.0137 28.1919 45.7236 cv
27.5488 44.9629 26.1128 44.5361 26.1128 44.5361 cv
26.1128 44.5361 27.6934 44.8652 28.5029 45.7715 cv
28.7656 46.0664 28.9092 46.3008 28.9834 46.4834 cv
28.6226 46.4834 li
cp
level3{
gsave
clp
[2.87061 0 0 2.87061 26.1128 45.5098 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.87061 0 0 2.87061 26.1128 45.5098 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
29.5967 46.4365 mo
29.8193 46.3516 30.0718 46.2627 30.3589 46.1719 cv
32.3286 45.5469 35.1938 45.3184 35.1938 45.3184 cv
35.1938 45.3184 32.21 45.4414 29.7915 46.1816 cv
29.4932 46.2725 29.2344 46.3574 29.0083 46.4365 cv
29.5967 46.4365 li
cp
level3{
gsave
clp
[-1.79508 2.84662 -6.17764 -.781302 32.6558 44.998 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.79508 2.84662 -6.17764 -.781302 32.6558 44.998 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
30.2349 46.4873 mo
30.3618 46.1514 30.5464 45.7451 30.8135 45.3154 cv
31.5229 44.1729 32.5527 43.7666 32.5527 43.7666 cv
32.5527 43.7666 31.4805 43.9766 30.6099 45.3301 cv
30.3057 45.8018 30.1138 46.1865 29.9912 46.4873 cv
30.2349 46.4873 li
cp
level3{
gsave
clp
[-.64544 5.18529 -2.20266 -1.52426 31.5293 43.0586 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.64544 5.18529 -2.20266 -1.52426 31.5293 43.0586 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
26.4468 46.9141 mo
26.4468 47.0039 26.2437 47.0781 25.9937 47.0781 cv
25.7432 47.0781 25.541 47.0039 25.541 46.9141 cv
25.541 46.8232 25.7432 46.75 25.9937 46.75 cv
26.2437 46.75 26.4468 46.8232 26.4468 46.9141 cv
cp
level3{
gsave
clp
[.402949 0 0 .191017 25.9937 46.9131 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402949 0 0 .191017 25.9937 46.9131 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.2979 47.1768 mo
27.2979 47.2666 27.0952 47.3398 26.8452 47.3398 cv
26.5942 47.3398 26.3916 47.2666 26.3916 47.1768 cv
26.3916 47.0869 26.5942 47.0137 26.8452 47.0137 cv
27.0952 47.0137 27.2979 47.0869 27.2979 47.1768 cv
cp
level3{
gsave
clp
[.402221 0 0 .190672 26.8447 47.1758 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402221 0 0 .190672 26.8447 47.1758 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.1084 46.3486 mo
27.1084 46.4395 26.9058 46.5127 26.6563 46.5127 cv
26.4058 46.5127 26.2031 46.4395 26.2031 46.3486 cv
26.2031 46.2588 26.4058 46.1846 26.6563 46.1846 cv
26.9058 46.1846 27.1084 46.2588 27.1084 46.3486 cv
cp
level3{
gsave
clp
[.402835 0 0 .190963 26.6558 46.3477 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402835 0 0 .190963 26.6558 46.3477 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.5063 46.8154 mo
27.5063 46.9053 27.3037 46.9785 27.0542 46.9785 cv
26.8037 46.9785 26.6011 46.9053 26.6011 46.8154 cv
26.6011 46.7246 26.8037 46.6514 27.0542 46.6514 cv
27.3037 46.6514 27.5063 46.7246 27.5063 46.8154 cv
cp
level3{
gsave
clp
[.40238 0 0 .190748 27.0537 46.8145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40238 0 0 .190748 27.0537 46.8145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.5239 46.8154 mo
28.5239 46.9053 28.3223 46.9785 28.0718 46.9785 cv
27.8213 46.9785 27.6187 46.9053 27.6187 46.8154 cv
27.6187 46.7246 27.8213 46.6514 28.0718 46.6514 cv
28.3223 46.6514 28.5239 46.7246 28.5239 46.8154 cv
cp
level3{
gsave
clp
[.40238 0 0 .190748 28.0713 46.8145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40238 0 0 .190748 28.0713 46.8145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.9585 46.999 mo
28.9585 47.0889 28.7554 47.1621 28.5059 47.1621 cv
28.2554 47.1621 28.0527 47.0889 28.0527 46.999 cv
28.0527 46.9092 28.2554 46.835 28.5059 46.835 cv
28.7554 46.835 28.9585 46.9092 28.9585 46.999 cv
cp
level3{
gsave
clp
[.402506 0 0 .190807 28.5054 46.998 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402506 0 0 .190807 28.5054 46.998 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.3145 46.542 mo
29.2246 46.4434 29.4902 46.2891 29.9038 46.1982 cv
30.3193 46.1074 30.7285 46.1143 30.8188 46.2139 cv
30.9072 46.3125 30.6431 46.4668 30.2271 46.5576 cv
29.8125 46.6484 29.4038 46.6416 29.3145 46.542 cv
cp
level3{
gsave
clp
[-.6691 .145662 -.188295 -.209612 30.0664 46.3779 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.6691 .145662 -.188295 -.209612 30.0664 46.3779 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.0425 46.5742 mo
29.0425 46.6826 28.7368 46.7705 28.3599 46.7705 cv
27.9829 46.7705 27.6777 46.6826 27.6777 46.5742 cv
27.6777 46.4668 27.9829 46.3779 28.3599 46.3779 cv
28.7368 46.3779 29.0425 46.4668 29.0425 46.5742 cv
cp
level3{
gsave
clp
[.60697 0 0 .228799 28.3594 46.5742 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.60697 0 0 .228799 28.3594 46.5742 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.3608 46.7803 mo
29.2466 46.7617 29.1997 46.623 29.2563 46.4697 cv
29.313 46.3154 29.4531 46.2051 29.5688 46.2227 cv
29.6831 46.2412 29.73 46.3799 29.6724 46.5342 cv
29.6143 46.6885 29.4766 46.7988 29.3608 46.7803 cv
cp
level3{
gsave
clp
[-.0913783 .248027 -.24328 -.0379754 29.4653 46.502 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0913783 .248027 -.24328 -.0379754 29.4653 46.502 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.9609 46.751 mo
31.0146 46.8682 30.7695 47.0195 30.4126 47.0898 cv
30.0547 47.1592 29.7217 47.1211 29.667 47.0029 cv
29.6128 46.8857 29.8584 46.7334 30.2163 46.6641 cv
30.5728 46.5947 30.9063 46.6328 30.9609 46.751 cv
cp
level3{
gsave
clp
[.574586 -.112316 .114681 .248278 30.3164 46.877 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.574586 -.112316 .114681 .248278 30.3164 46.877 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.1323 46.5176 mo
29.1133 46.5918 28.835 46.626 28.5083 46.5918 cv
28.1812 46.5596 27.9316 46.4717 27.9492 46.3965 cv
27.9673 46.3223 28.2471 46.2891 28.5732 46.3213 cv
28.8999 46.3555 29.1514 46.4434 29.1323 46.5176 cv
cp
level3{
gsave
clp
[.526234 .0533345 -.039112 .157633 28.5415 46.457 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.526234 .0533345 -.039112 .157633 28.5415 46.457 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.374 46.5879 mo
27.3818 46.6963 27.083 46.793 26.7061 46.8027 cv
26.3296 46.8145 26.0186 46.7354 26.0117 46.627 cv
26.0039 46.5186 26.3027 46.4229 26.6787 46.4111 cv
27.0557 46.4004 27.3672 46.4795 27.374 46.5879 cv
cp
level3{
gsave
clp
[.606021 -.0177545 .0153872 .228441 26.6943 46.6064 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606021 -.0177545 .0153872 .228441 26.6943 46.6064 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.3062 46.4326 mo
29.3462 46.5166 29.1074 46.6387 28.7715 46.7061 cv
28.4351 46.7754 28.1309 46.7617 28.0913 46.6797 cv
28.0513 46.5957 28.291 46.4736 28.6265 46.4063 cv
28.9614 46.3379 29.2661 46.3496 29.3062 46.4326 cv
cp
level3{
gsave
clp
[.539381 -.110005 .0851655 .175062 28.6997 46.5566 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.539381 -.110005 .0851655 .175062 28.6997 46.5566 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.229 46.5762 mo
28.2349 46.6699 27.9849 46.752 27.6685 46.7617 cv
27.353 46.7715 27.0918 46.7031 27.0845 46.6094 cv
27.0786 46.5166 27.3296 46.4336 27.646 46.4238 cv
27.9614 46.415 28.2222 46.4834 28.229 46.5762 cv
cp
level3{
gsave
clp
[.51007 -.0142345 .0142345 .196911 27.6567 46.5938 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.51007 -.0142345 .0142345 .196911 27.6567 46.5938 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
27.7646 46.5576 mo
27.7646 46.6475 27.5503 46.7188 27.2866 46.7188 cv
27.0229 46.7188 26.8081 46.6475 26.8081 46.5576 cv
26.8081 46.4697 27.0229 46.3975 27.2866 46.3975 cv
27.5503 46.3975 27.7646 46.4697 27.7646 46.5576 cv
cp
level3{
gsave
clp
[.424683 0 0 .188091 27.2861 46.5566 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424683 0 0 .188091 27.2861 46.5566 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.2759 46.582 mo
26.2759 46.6719 26.0615 46.7432 25.7974 46.7432 cv
25.5342 46.7432 25.3203 46.6719 25.3203 46.582 cv
25.3203 46.4941 25.5342 46.4209 25.7974 46.4209 cv
26.0615 46.4209 26.2759 46.4941 26.2759 46.582 cv
cp
level3{
gsave
clp
[.424875 0 0 .188176 25.7979 46.5811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424875 0 0 .188176 25.7979 46.5811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.7461 46.6836 mo
26.7002 46.752 26.417 46.7402 26.1128 46.6553 cv
25.8096 46.5703 25.6011 46.4453 25.646 46.376 cv
25.6924 46.3066 25.9751 46.3193 26.2793 46.4033 cv
26.5835 46.4883 26.793 46.6143 26.7461 46.6836 cv
cp
level3{
gsave
clp
[.48976 .13756 -.0972405 .147047 26.1978 46.5293 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.48976 .13756 -.0972405 .147047 26.1978 46.5293 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.52 46.3984 mo
26.4746 46.4688 26.1909 46.4561 25.8867 46.3711 cv
25.5835 46.2861 25.3745 46.1611 25.4199 46.0908 cv
25.4663 46.0225 25.749 46.0342 26.0532 46.1191 cv
26.3574 46.2041 26.5669 46.3291 26.52 46.3984 cv
cp
level3{
gsave
clp
[.489714 .137547 -.0972313 .147033 25.9712 46.2451 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.489714 .137547 -.0972313 .147033 25.9712 46.2451 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.1875 46.6953 mo
30.1953 46.8037 29.8955 46.9004 29.519 46.9111 cv
29.1421 46.9219 28.8311 46.8428 28.8242 46.7354 cv
28.8169 46.627 29.1157 46.5303 29.4932 46.5195 cv
29.8691 46.5078 30.1802 46.5879 30.1875 46.6953 cv
cp
level3{
gsave
clp
[.606282 -.0177622 .0153939 .22854 29.5073 46.7148 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606282 -.0177622 .0153939 .22854 29.5073 46.7148 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.1616 46.375 mo
26.2017 46.458 25.9619 46.5811 25.6265 46.6484 cv
25.2905 46.7168 24.9863 46.7051 24.9463 46.6211 cv
24.9063 46.5381 25.146 46.416 25.4819 46.3477 cv
25.8164 46.2793 26.1221 46.292 26.1616 46.375 cv
cp
level3{
gsave
clp
[.539915 -.110114 .0852498 .175236 25.5542 46.498 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.539915 -.110114 .0852498 .175236 25.5542 46.498 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.3809 46.873 mo
26.3379 46.9014 26.2305 46.8799 26.1382 46.8242 cv
26.0464 46.7686 26.0073 46.6992 26.0493 46.6699 cv
26.0918 46.6416 26.2002 46.6621 26.2915 46.7188 cv
26.3823 46.7734 26.4233 46.8428 26.3809 46.873 cv
cp
level3{
gsave
clp
[.146952 .0900673 -.0900673 .061625 26.2134 46.7705 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.146952 .0900673 -.0900673 .061625 26.2134 46.7705 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.0664 46.6299 mo
28.0737 46.7227 27.8228 46.8057 27.5063 46.8154 cv
27.1909 46.8242 26.9292 46.7559 26.9224 46.6621 cv
26.9165 46.5693 27.1675 46.4863 27.4839 46.4766 cv
27.7993 46.4678 28.0605 46.5361 28.0664 46.6299 cv
cp
level3{
gsave
clp
[.510435 -.0142447 .0142447 .197052 27.4941 46.6475 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.510435 -.0142447 .0142447 .197052 27.4941 46.6475 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.438 46.5381 mo
28.438 46.6279 28.2236 46.7002 27.9595 46.7002 cv
27.6963 46.7002 27.4824 46.6279 27.4824 46.5381 cv
27.4824 46.4502 27.6963 46.3779 27.9595 46.3779 cv
28.2236 46.3779 28.438 46.4502 28.438 46.5381 cv
cp
level3{
gsave
clp
[.42489 0 0 .188182 27.96 46.5381 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.42489 0 0 .188182 27.96 46.5381 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.1055 46.8115 mo
26.0874 46.8867 25.8091 46.9199 25.4805 46.8867 cv
25.1538 46.8535 24.9043 46.7656 24.9224 46.6904 cv
24.9404 46.6162 25.2197 46.582 25.5474 46.6162 cv
25.874 46.6494 26.1235 46.7373 26.1055 46.8115 cv
cp
level3{
gsave
clp
[.526265 .0533377 -.0391143 .157643 25.5146 46.7529 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.526265 .0533377 -.0391143 .157643 25.5146 46.7529 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.1089 47.3428 mo
30.1089 47.4336 29.9063 47.5068 29.6558 47.5068 cv
29.4063 47.5068 29.2036 47.4336 29.2036 47.3428 cv
29.2036 47.252 29.4063 47.1787 29.6558 47.1787 cv
29.9063 47.1787 30.1089 47.252 30.1089 47.3428 cv
cp
level3{
gsave
clp
[.402821 0 0 .190957 29.6563 47.3418 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402821 0 0 .190957 29.6563 47.3418 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
28.9893 46.6104 mo
28.9893 46.7002 28.7876 46.7734 28.5371 46.7734 cv
28.2866 46.7734 28.0845 46.7002 28.0845 46.6104 cv
28.0845 46.5195 28.2866 46.4463 28.5371 46.4463 cv
28.7876 46.4463 28.9893 46.5195 28.9893 46.6104 cv
cp
level3{
gsave
clp
[.40223 0 0 .190677 28.5366 46.6094 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40223 0 0 .190677 28.5366 46.6094 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
22.0283 46.3545 mo
22.0283 46.4453 21.8257 46.5176 21.5752 46.5176 cv
21.3257 46.5176 21.123 46.4453 21.123 46.3545 cv
21.123 46.2637 21.3257 46.1914 21.5752 46.1914 cv
21.8257 46.1914 22.0283 46.2637 22.0283 46.3545 cv
cp
level3{
gsave
clp
[.401951 0 0 .190544 21.5757 46.3535 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.401951 0 0 .190544 21.5757 46.3535 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
22.999 46.2891 mo
22.9482 46.4004 22.4644 46.4424 21.916 46.3828 cv
21.3682 46.3223 20.9639 46.1836 21.0146 46.0713 cv
21.0654 45.96 21.5498 45.918 22.0981 45.9775 cv
22.646 46.0381 23.0498 46.1768 22.999 46.2891 cv
cp
level3{
gsave
clp
[.883437 .0971071 -.106581 .235662 22.0073 46.1797 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.883437 .0971071 -.106581 .235662 22.0073 46.1797 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.5562 46.542 mo
25.4653 46.4434 25.731 46.2891 26.1465 46.1982 cv
26.561 46.1074 26.9692 46.1143 27.0596 46.2139 cv
27.1479 46.3125 26.8838 46.4668 26.4688 46.5576 cv
26.0532 46.6484 25.6445 46.6416 25.5562 46.542 cv
cp
level3{
gsave
clp
[-.66871 .145578 -.188186 -.20949 26.3076 46.3779 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.66871 .145578 -.188186 -.20949 26.3076 46.3779 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.041 46.1553 mo
24.9873 46.0498 25.3027 45.9209 25.7432 45.8672 cv
26.1836 45.8135 26.5835 45.8555 26.6372 45.9609 cv
26.6895 46.0674 26.3755 46.1953 25.9336 46.249 cv
25.4927 46.3027 25.0933 46.2607 25.041 46.1553 cv
cp
level3{
gsave
clp
[-.709202 .0862862 -.111108 -.222217 25.8389 46.0576 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.709202 .0862862 -.111108 -.222217 25.8389 46.0576 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.5605 45.9746 mo
25.6396 46.1045 25.3843 46.2559 24.9912 46.3145 cv
24.5972 46.373 24.2148 46.3154 24.1362 46.1855 cv
24.0566 46.0557 24.3115 45.9033 24.7061 45.8457 cv
25.0991 45.7871 25.4819 45.8447 25.5605 45.9746 cv
cp
level3{
gsave
clp
[.633651 -.0933926 .166688 .273085 24.8491 46.0811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633651 -.0933926 .166688 .273085 24.8491 46.0811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.2158 46.2266 mo
25.1787 46.3643 24.6909 46.4463 24.125 46.4102 cv
23.5581 46.373 23.1294 46.2314 23.1655 46.0938 cv
23.2017 45.9561 23.6914 45.874 24.2573 45.9111 cv
24.8232 45.9473 25.2529 46.0889 25.2158 46.2266 cv
cp
level3{
gsave
clp
[.911286 .0591744 -.0769267 .291138 24.189 46.1611 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.911286 .0591744 -.0769267 .291138 24.189 46.1611 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
20.3979 46.4482 mo
20.3091 46.3486 20.5728 46.1953 20.9873 46.1045 cv
21.4028 46.0137 21.813 46.0205 21.9023 46.1201 cv
21.9907 46.2188 21.7266 46.373 21.3115 46.4629 cv
20.896 46.5547 20.4868 46.5469 20.3979 46.4482 cv
cp
level3{
gsave
clp
[-.668627 .14556 -.188162 -.209464 21.1494 46.2832 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.668627 .14556 -.188162 -.209464 21.1494 46.2832 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.6982 46.1143 mo
23.7778 46.2441 23.5225 46.3965 23.1294 46.4541 cv
22.7349 46.5127 22.3521 46.4551 22.2729 46.3262 cv
22.1948 46.1953 22.4497 46.0439 22.8433 45.9863 cv
23.2368 45.9268 23.6196 45.9854 23.6982 46.1143 cv
cp
level3{
gsave
clp
[.633678 -.0933965 .166695 .273096 22.9863 46.2207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633678 -.0933965 .166695 .273096 22.9863 46.2207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.002 46.0986 mo
23.002 46.2148 22.6572 46.3086 22.2334 46.3086 cv
21.8081 46.3086 21.4644 46.2148 21.4644 46.0986 cv
21.4644 45.9834 21.8081 45.8896 22.2334 45.8896 cv
22.6572 45.8896 23.002 45.9834 23.002 46.0986 cv
cp
level3{
gsave
clp
[.684197 0 0 .243849 22.2329 46.0996 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.684197 0 0 .243849 22.2329 46.0996 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.0122 46.3633 mo
26.0122 46.4541 25.8096 46.5273 25.5591 46.5273 cv
25.3096 46.5273 25.1069 46.4541 25.1069 46.3633 cv
25.1069 46.2725 25.3096 46.2002 25.5591 46.2002 cv
25.8096 46.2002 26.0122 46.2725 26.0122 46.3633 cv
cp
level3{
gsave
clp
[.402391 0 0 .190753 25.5596 46.3633 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402391 0 0 .190753 25.5596 46.3633 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
21.4355 46.3193 mo
21.4355 46.4102 21.2319 46.4824 20.9824 46.4824 cv
20.7324 46.4824 20.5293 46.4102 20.5293 46.3193 cv
20.5293 46.2285 20.7324 46.1553 20.9824 46.1553 cv
21.2319 46.1553 21.4355 46.2285 21.4355 46.3193 cv
cp
level3{
gsave
clp
[.40268 0 0 .19089 20.9824 46.3184 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40268 0 0 .19089 20.9824 46.3184 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.3594 46.4678 mo
24.6831 45.9395 25.2148 45.1797 25.9956 44.3818 cv
27.4561 42.8906 29.0371 42.5225 29.0371 42.5225 cv
29.0371 42.5225 27.4824 42.6006 25.7114 44.3613 cv
24.7534 45.3125 24.2505 46.0195 23.9902 46.4678 cv
24.3594 46.4678 li
cp
level3{
gsave
clp
[-2.97088 5.85897 -5.22699 -3.01814 27.8589 41.8418 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.97088 5.85897 -5.22699 -3.01814 27.8589 41.8418 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
23.625 46.3389 mo
23.9927 46.0498 24.4639 45.7158 25.0483 45.373 cv
26.8091 44.3389 28.6875 44.0762 28.6875 44.0762 cv
28.6875 44.0762 26.8467 44.1396 24.7119 45.3604 cv
24.0386 45.7451 23.5498 46.0732 23.1968 46.3389 cv
23.625 46.3389 li
cp
level3{
gsave
clp
[-2.69308 5.53521 -4.56921 -2.7702 26.9912 43.0479 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.69308 5.53521 -4.56921 -2.7702 26.9912 43.0479 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
21.3652 46.248 mo
21.3862 46.2012 21.4121 46.1523 21.4424 46.1016 cv
21.8613 45.4111 23.376 44.9072 23.376 44.9072 cv
23.376 44.9072 21.644 45.3467 21.0947 46.1748 cv
21.0781 46.2002 21.0625 46.2246 21.0479 46.248 cv
21.3652 46.248 li
cp
level3{
gsave
clp
[.0324868 1.19745 -1.85048 .730795 22.2051 45.3213 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0324868 1.19745 -1.85048 .730795 22.2051 45.3213 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
23.8184 46.4229 mo
23.7231 46.1357 23.5645 45.8057 23.3057 45.4443 cv
22.4409 44.2373 20.5107 44.0508 20.5107 44.0508 cv
20.5107 44.0508 22.6353 44.083 23.7241 45.5205 cv
23.9902 45.874 24.165 46.1719 24.2778 46.4229 cv
23.8184 46.4229 li
cp
level3{
gsave
clp
[.229211 2.61828 2.50247 .450247 22.3164 44.3301 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.229211 2.61828 2.50247 .450247 22.3164 44.3301 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
22.1289 46.248 mo
23.3169 46.0947 24.3369 46.0732 24.3369 46.0732 cv
24.3369 46.0732 23.1064 46.0459 21.6133 46.248 cv
22.1289 46.248 li
cp
level3{
gsave
clp
[-2.69131 3.15215 -6.35219 -2.44373 23.3667 45.7002 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.69131 3.15215 -6.35219 -2.44373 23.3667 45.7002 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
23.9087 46.0986 mo
24.9253 45.9863 25.7378 45.9688 25.7378 45.9688 cv
25.7378 45.9688 24.7012 45.9463 23.3745 46.0986 cv
23.9087 46.0986 li
cp
level3{
gsave
clp
[-2.73787 3.20669 -6.46209 -2.48601 24.8887 45.6426 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.73787 3.20669 -6.46209 -2.48601 24.8887 45.6426 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.5044 45.9922 mo
24.7808 45.7627 25.147 45.5049 25.6274 45.2354 cv
27.2881 44.3027 29.7144 43.9658 29.7144 43.9658 cv
29.7144 43.9658 27.186 44.1436 25.146 45.248 cv
24.6167 45.5361 24.2324 45.7832 23.9517 45.9922 cv
24.5044 45.9922 li
cp
level3{
gsave
clp
[-1.49365 4.21768 -5.2023 -1.19641 27.3823 43.4297 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.49365 4.21768 -5.2023 -1.19641 27.3823 43.4297 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
24.6592 45.7695 mo
26.4731 45.6357 28.1011 45.6475 28.1011 45.6475 cv
28.1011 45.6475 26.0229 45.5703 23.6685 45.7695 cv
24.6592 45.7695 li
cp
level3{
gsave
clp
[-4.16718 3.37174 -10.9493 -3.57347 26.5752 45.1494 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.16718 3.37174 -10.9493 -3.57347 26.5752 45.1494 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.1611 46.292 mo
24.3896 46.2393 24.6348 46.1885 24.896 46.1357 cv
27.7383 45.5732 31.3242 45.5479 31.3242 45.5479 cv
31.3242 45.5479 27.6821 45.4395 24.2144 46.0986 cv
23.8638 46.165 23.5479 46.2295 23.2622 46.292 cv
24.1611 46.292 li
cp
level3{
gsave
clp
[-4.33933 4.31042 -10.8135 -3.83206 28.6284 44.5928 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.33933 4.31042 -10.8135 -3.83206 28.6284 44.5928 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
23.5498 46.376 mo
23.2896 46.2012 22.9717 46.0195 22.5845 45.8379 cv
20.6938 44.9541 17.7563 44.8916 17.7563 44.8916 cv
17.7563 44.8916 20.8491 44.75 23.1768 45.7852 cv
23.6582 46 24.0303 46.1973 24.3184 46.376 cv
23.5498 46.376 li
cp
level3{
gsave
clp
[2.23112 6.0763 8.97633 -5.1198 20.2446 43.4736 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.23112 6.0763 8.97633 -5.1198 20.2446 43.4736 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
22.5332 46.2363 mo
22.397 46.1748 22.2432 46.1084 22.0718 46.04 cv
21.1216 45.6611 20.1167 45.5098 20.1167 45.5098 cv
20.1167 45.5098 21.1001 45.6006 22.2515 46.0488 cv
22.4263 46.1172 22.5786 46.1797 22.71 46.2363 cv
22.5332 46.2363 li
cp
level3{
gsave
clp
[1.17304 1.60921 1.95774 -.322024 21.0381 45.3584 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.17304 1.60921 1.95774 -.322024 21.0381 45.3584 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
22.9517 46.1025 mo
23.2056 46.0078 23.5068 45.9082 23.8594 45.8086 cv
25.458 45.3535 27.3789 45.2832 27.3789 45.2832 cv
27.3789 45.2832 25.4458 45.2559 23.5 45.79 cv
23.083 45.9053 22.7495 46.0098 22.4824 46.1025 cv
22.9517 46.1025 li
cp
level3{
gsave
clp
[-2.29639 3.07282 -5.12853 -2.138 25.7456 44.6025 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.29639 3.07282 -5.12853 -2.138 25.7456 44.6025 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
21.9619 46.3555 mo
21.8267 46.1992 21.6338 46.0225 21.3545 45.8408 cv
20.4663 45.2627 18.9546 45.124 18.9546 45.124 cv
18.9546 45.124 20.5684 45.1504 21.6646 45.8311 cv
21.9946 46.0352 22.2095 46.2109 22.3472 46.3555 cv
21.9619 46.3555 li
cp
level3{
gsave
clp
[.614016 4.53983 3.08685 -2.41262 20.4146 43.9824 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.614016 4.53983 3.08685 -2.41262 20.4146 43.9824 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
23.6626 46.248 mo
23.7495 46.2119 23.8403 46.1738 23.9365 46.1357 cv
25.3608 45.5703 27.1025 45.4297 27.1025 45.4297 cv
27.1025 45.4297 25.3442 45.4609 23.6089 46.1279 cv
23.5005 46.1699 23.3999 46.21 23.3042 46.248 cv
23.6626 46.248 li
cp
level3{
gsave
clp
[-1.84953 3.38166 -4.30322 -1.72339 25.7275 44.8789 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.84953 3.38166 -4.30322 -1.72339 25.7275 44.8789 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
22.6587 46.248 mo
22.6274 46.1631 22.5815 46.0732 22.5166 45.9805 cv
22.0498 45.3154 20.3882 44.9834 20.3882 44.9834 cv
20.3882 44.9834 22.2866 45.2227 22.8984 46.0127 cv
22.9629 46.0967 23.0142 46.1748 23.0552 46.248 cv
22.6587 46.248 li
cp
level3{
gsave
clp
[-.0512289 2.098 3.38953 .0556742 21.7354 45.0059 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0512289 2.098 3.38953 .0556742 21.7354 45.0059 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.2188 46.3643 mo
24.0386 46.2578 23.8335 46.1475 23.5996 46.0342 cv
21.7954 45.167 18.8164 44.8975 18.8164 44.8975 cv
18.8164 44.8975 21.9795 45.0098 24.2095 46.0352 cv
24.4624 46.1514 24.6826 46.2617 24.8745 46.3643 cv
24.2188 46.3643 li
cp
level3{
gsave
clp
[1.55916 4.28127 7.24929 -1.66256 21.3657 44.3125 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.55916 4.28127 7.24929 -1.66256 21.3657 44.3125 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
25.2231 46.2959 mo
25.1567 46.1885 25.063 46.0723 24.9336 45.9502 cv
24.252 45.3057 22.5483 44.9307 22.5483 44.9307 cv
22.5483 44.9307 24.4443 45.2256 25.3096 45.9951 cv
25.4321 46.1045 25.5288 46.2051 25.604 46.2959 cv
25.2231 46.2959 li
cp
level3{
gsave
clp
[.157725 1.6454 2.69732 .36746 24.0303 45.1328 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.157725 1.6454 2.69732 .36746 24.0303 45.1328 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
23.0552 46.3818 mo
22.7314 46.1172 22.1997 45.7363 21.4194 45.3379 cv
19.9595 44.5898 18.3774 44.4053 18.3774 44.4053 cv
18.3774 44.4053 19.9331 44.4453 21.7041 45.3262 cv
22.6611 45.8027 23.1641 46.1572 23.4243 46.3818 cv
23.0552 46.3818 li
cp
level3{
gsave
clp
[2.11806 4.17711 3.72654 -2.15176 19.9419 43.502 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.11806 4.17711 3.72654 -2.15176 19.9419 43.502 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
23.4409 46.4697 mo
23.2925 46.2686 23.0967 46.042 22.8403 45.8057 cv
21.9526 44.9873 20.6567 44.6914 20.6567 44.6914 cv
20.6567 44.6914 22.0083 44.8477 23.0977 45.8164 cv
23.3799 46.0684 23.5864 46.2852 23.7354 46.4697 cv
23.4409 46.4697 li
cp
level3{
gsave
clp
[1.10802 3.12875 3.85915 -.887521 21.7881 44.4316 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.10802 3.12875 3.85915 -.887521 21.7881 44.4316 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
21.7827 46.3086 mo
21.8501 46.2012 21.9429 46.0869 22.0732 45.9639 cv
22.7534 45.3193 24.4575 44.9453 24.4575 44.9453 cv
24.4575 44.9453 22.562 45.2393 21.6973 46.0088 cv
21.5732 46.1191 21.4771 46.2188 21.4014 46.3086 cv
21.7827 46.3086 li
cp
level3{
gsave
clp
[-.157414 1.64215 -2.69199 .366734 22.9756 45.1475 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.157414 1.64215 -2.69199 .366734 22.9756 45.1475 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
24.0977 46.4834 mo
24.0386 46.2734 23.9136 46.0137 23.668 45.7236 cv
23.0239 44.9629 21.5889 44.5361 21.5889 44.5361 cv
21.5889 44.5361 23.1694 44.8652 23.978 45.7715 cv
24.2407 46.0664 24.3843 46.3008 24.4585 46.4834 cv
24.0977 46.4834 li
cp
level3{
gsave
clp
[2.86963 0 0 2.86963 21.5889 45.5098 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.86963 0 0 2.86963 21.5889 45.5098 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
25.0728 46.4365 mo
25.2944 46.3516 25.5474 46.2627 25.834 46.1719 cv
27.8047 45.5469 30.6694 45.3184 30.6694 45.3184 cv
30.6694 45.3184 27.6851 45.4414 25.2671 46.1816 cv
24.9692 46.2725 24.7095 46.3574 24.4834 46.4365 cv
25.0728 46.4365 li
cp
level3{
gsave
clp
[-1.79512 2.84668 -6.17777 -.781319 28.1309 44.998 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.79512 2.84668 -6.17777 -.781319 28.1309 44.998 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
25.7104 46.4873 mo
25.8369 46.1514 26.0215 45.7451 26.2896 45.3154 cv
26.998 44.1729 28.0278 43.7666 28.0278 43.7666 cv
28.0278 43.7666 26.9565 43.9766 26.085 45.3301 cv
25.7817 45.8018 25.5889 46.1865 25.4668 46.4873 cv
25.7104 46.4873 li
cp
level3{
gsave
clp
[-.645394 5.18492 -2.20251 -1.52415 27.0044 43.0586 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.645394 5.18492 -2.20251 -1.52415 27.0044 43.0586 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
21.9219 46.9141 mo
21.9219 47.0039 21.7192 47.0781 21.4692 47.0781 cv
21.2192 47.0781 21.0161 47.0039 21.0161 46.9141 cv
21.0161 46.8232 21.2192 46.75 21.4692 46.75 cv
21.7192 46.75 21.9219 46.8232 21.9219 46.9141 cv
cp
level3{
gsave
clp
[.402956 0 0 .191021 21.4688 46.9131 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402956 0 0 .191021 21.4688 46.9131 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
22.7739 47.1768 mo
22.7739 47.2666 22.5703 47.3398 22.3203 47.3398 cv
22.0693 47.3398 21.8672 47.2666 21.8672 47.1768 cv
21.8672 47.0869 22.0693 47.0137 22.3203 47.0137 cv
22.5703 47.0137 22.7739 47.0869 22.7739 47.1768 cv
cp
level3{
gsave
clp
[.402351 0 0 .190734 22.3203 47.1758 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402351 0 0 .190734 22.3203 47.1758 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
22.5845 46.3486 mo
22.5845 46.4395 22.3818 46.5127 22.1323 46.5127 cv
21.8818 46.5127 21.6792 46.4395 21.6792 46.3486 cv
21.6792 46.2588 21.8818 46.1846 22.1323 46.1846 cv
22.3818 46.1846 22.5845 46.2588 22.5845 46.3486 cv
cp
level3{
gsave
clp
[.402838 0 0 .190965 22.1318 46.3477 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402838 0 0 .190965 22.1318 46.3477 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
22.9819 46.8154 mo
22.9819 46.9053 22.7798 46.9785 22.5293 46.9785 cv
22.2798 46.9785 22.0762 46.9053 22.0762 46.8154 cv
22.0762 46.7246 22.2798 46.6514 22.5293 46.6514 cv
22.7798 46.6514 22.9819 46.7246 22.9819 46.8154 cv
cp
level3{
gsave
clp
[.402513 0 0 .190811 22.5288 46.8145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402513 0 0 .190811 22.5288 46.8145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24 46.8154 mo
24 46.9053 23.7974 46.9785 23.5469 46.9785 cv
23.2974 46.9785 23.0942 46.9053 23.0942 46.8154 cv
23.0942 46.7246 23.2974 46.6514 23.5469 46.6514 cv
23.7974 46.6514 24 46.7246 24 46.8154 cv
cp
level3{
gsave
clp
[.402513 0 0 .190811 23.5469 46.8145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402513 0 0 .190811 23.5469 46.8145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.4336 46.999 mo
24.4336 47.0889 24.2314 47.1621 23.981 47.1621 cv
23.7314 47.1621 23.5288 47.0889 23.5288 46.999 cv
23.5288 46.9092 23.7314 46.835 23.981 46.835 cv
24.2314 46.835 24.4336 46.9092 24.4336 46.999 cv
cp
level3{
gsave
clp
[.402256 0 0 .190689 23.981 46.998 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402256 0 0 .190689 23.981 46.998 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.79 46.542 mo
24.7007 46.4434 24.9663 46.2891 25.3799 46.1982 cv
25.7954 46.1074 26.2046 46.1143 26.2944 46.2139 cv
26.3833 46.3125 26.1191 46.4668 25.7031 46.5576 cv
25.2876 46.6484 24.8789 46.6416 24.79 46.542 cv
cp
level3{
gsave
clp
[-.669053 .145652 -.188282 -.209597 25.542 46.3779 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.669053 .145652 -.188282 -.209597 25.542 46.3779 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.5176 46.5742 mo
24.5176 46.6826 24.2119 46.7705 23.835 46.7705 cv
23.4585 46.7705 23.1528 46.6826 23.1528 46.5742 cv
23.1528 46.4668 23.4585 46.3779 23.835 46.3779 cv
24.2119 46.3779 24.5176 46.4668 24.5176 46.5742 cv
cp
level3{
gsave
clp
[.60697 0 0 .228799 23.834 46.5742 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.60697 0 0 .228799 23.834 46.5742 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.8369 46.7803 mo
24.7227 46.7617 24.6748 46.623 24.7324 46.4697 cv
24.7891 46.3154 24.9282 46.2051 25.0439 46.2227 cv
25.1582 46.2412 25.2051 46.3799 25.1479 46.5342 cv
25.0903 46.6885 24.9517 46.7988 24.8369 46.7803 cv
cp
level3{
gsave
clp
[-.0913377 .247917 -.243172 -.0379585 24.9419 46.502 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0913377 .247917 -.243172 -.0379585 24.9419 46.502 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
26.436 46.751 mo
26.4907 46.8682 26.2446 47.0195 25.8882 47.0898 cv
25.5303 47.1592 25.1968 47.1211 25.1431 47.0029 cv
25.0889 46.8857 25.3345 46.7334 25.6919 46.6641 cv
26.0488 46.5947 26.3823 46.6328 26.436 46.751 cv
cp
level3{
gsave
clp
[.575065 -.11241 .114776 .248485 25.7905 46.877 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.575065 -.11241 .114776 .248485 25.7905 46.877 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.6074 46.5176 mo
24.5894 46.5918 24.3101 46.626 23.9839 46.5918 cv
23.6572 46.5596 23.4067 46.4717 23.4253 46.3965 cv
23.4434 46.3223 23.7231 46.2891 24.0493 46.3213 cv
24.376 46.3555 24.6265 46.4434 24.6074 46.5176 cv
cp
level3{
gsave
clp
[.525921 .0533028 -.0390888 .15754 24.0171 46.458 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.525921 .0533028 -.0390888 .15754 24.0171 46.458 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
22.8501 46.5879 mo
22.8579 46.6963 22.5591 46.793 22.1821 46.8027 cv
21.8052 46.8145 21.4937 46.7354 21.4868 46.627 cv
21.4795 46.5186 21.7783 46.4229 22.1548 46.4111 cv
22.5317 46.4004 22.8423 46.4795 22.8501 46.5879 cv
cp
level3{
gsave
clp
[.606249 -.0177612 .015393 .228527 22.1699 46.6064 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606249 -.0177612 .015393 .228527 22.1699 46.6064 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.7817 46.4326 mo
24.8223 46.5166 24.5825 46.6387 24.2476 46.7061 cv
23.9106 46.7754 23.6064 46.7617 23.5664 46.6797 cv
23.5273 46.5957 23.7671 46.4736 24.1021 46.4063 cv
24.4375 46.3379 24.7422 46.3496 24.7817 46.4326 cv
cp
level3{
gsave
clp
[.539583 -.110047 .0851973 .175128 24.1748 46.5566 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.539583 -.110047 .0851973 .175128 24.1748 46.5566 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.7041 46.5762 mo
23.7104 46.6699 23.46 46.752 23.1445 46.7617 cv
22.8281 46.7715 22.5679 46.7031 22.5605 46.6094 cv
22.5542 46.5166 22.8047 46.4336 23.1211 46.4238 cv
23.4365 46.415 23.6982 46.4834 23.7041 46.5762 cv
cp
level3{
gsave
clp
[.509778 -.0142264 .0142264 .196798 23.1323 46.5938 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.509778 -.0142264 .0142264 .196798 23.1323 46.5938 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.2397 46.5576 mo
23.2397 46.6475 23.0264 46.7188 22.7617 46.7188 cv
22.4985 46.7188 22.2842 46.6475 22.2842 46.5576 cv
22.2842 46.4697 22.4985 46.3975 22.7617 46.3975 cv
23.0264 46.3975 23.2397 46.4697 23.2397 46.5576 cv
cp
level3{
gsave
clp
[.424382 0 0 .187957 22.7617 46.5566 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424382 0 0 .187957 22.7617 46.5566 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
21.751 46.582 mo
21.751 46.6719 21.5366 46.7432 21.2734 46.7432 cv
21.0093 46.7432 20.7959 46.6719 20.7959 46.582 cv
20.7959 46.4941 21.0093 46.4209 21.2734 46.4209 cv
21.5366 46.4209 21.751 46.4941 21.751 46.582 cv
cp
level3{
gsave
clp
[.424686 0 0 .188092 21.2734 46.5811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424686 0 0 .188092 21.2734 46.5811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
22.2222 46.6836 mo
22.1763 46.752 21.8921 46.7402 21.5889 46.6553 cv
21.2856 46.5703 21.0762 46.4453 21.1221 46.376 cv
21.1685 46.3066 21.4512 46.3193 21.7554 46.4033 cv
22.0586 46.4883 22.2686 46.6143 22.2222 46.6836 cv
cp
level3{
gsave
clp
[.489788 .137568 -.097246 .147055 21.6738 46.5293 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.489788 .137568 -.097246 .147055 21.6738 46.5293 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
21.9961 46.3984 mo
21.9497 46.4688 21.666 46.4561 21.3628 46.3711 cv
21.0586 46.2861 20.8496 46.1611 20.896 46.0908 cv
20.9419 46.0225 21.2251 46.0342 21.5283 46.1191 cv
21.8325 46.2041 22.042 46.3291 21.9961 46.3984 cv
cp
level3{
gsave
clp
[.489582 .13751 -.0972051 .146993 21.4473 46.2451 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.489582 .13751 -.0972051 .146993 21.4473 46.2451 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.6631 46.6953 mo
25.6704 46.8037 25.3716 46.9004 24.9946 46.9111 cv
24.6182 46.9219 24.3071 46.8428 24.3003 46.7354 cv
24.292 46.627 24.5908 46.5303 24.9683 46.5195 cv
25.3442 46.5078 25.6553 46.5879 25.6631 46.6953 cv
cp
level3{
gsave
clp
[.606121 -.0177575 .0153898 .228479 24.9834 46.7148 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606121 -.0177575 .0153898 .228479 24.9834 46.7148 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
21.6367 46.375 mo
21.6772 46.458 21.4375 46.5811 21.1025 46.6484 cv
20.7661 46.7168 20.4619 46.7051 20.4224 46.6211 cv
20.3823 46.5381 20.6221 46.416 20.9575 46.3477 cv
21.2925 46.2793 21.5972 46.292 21.6367 46.375 cv
cp
level3{
gsave
clp
[.539703 -.110071 .0852163 .175167 21.0298 46.498 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.539703 -.110071 .0852163 .175167 21.0298 46.498 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
21.8569 46.873 mo
21.8135 46.9014 21.7061 46.8799 21.6138 46.8242 cv
21.5225 46.7686 21.4829 46.6992 21.5254 46.6699 cv
21.5679 46.6416 21.6753 46.6621 21.7676 46.7188 cv
21.8584 46.7734 21.8989 46.8428 21.8569 46.873 cv
cp
level3{
gsave
clp
[.146985 .0900875 -.0900875 .0616388 21.6899 46.7715 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.146985 .0900875 -.0900875 .0616388 21.6899 46.7715 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.5425 46.6299 mo
23.5493 46.7227 23.2979 46.8057 22.9819 46.8154 cv
22.6665 46.8242 22.4043 46.7559 22.3984 46.6621 cv
22.3926 46.5693 22.6436 46.4863 22.959 46.4766 cv
23.2754 46.4678 23.5361 46.5361 23.5425 46.6299 cv
cp
level3{
gsave
clp
[.510436 -.0142447 .0142447 .197052 22.9702 46.6475 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.510436 -.0142447 .0142447 .197052 22.9702 46.6475 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
23.9131 46.5381 mo
23.9131 46.6279 23.6987 46.7002 23.4355 46.7002 cv
23.1724 46.7002 22.9585 46.6279 22.9585 46.5381 cv
22.9585 46.4502 23.1724 46.3779 23.4355 46.3779 cv
23.6987 46.3779 23.9131 46.4502 23.9131 46.5381 cv
cp
level3{
gsave
clp
[.424586 0 0 .188048 23.4355 46.5381 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424586 0 0 .188048 23.4355 46.5381 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
21.5815 46.8115 mo
21.563 46.8867 21.2832 46.9199 20.9565 46.8867 cv
20.6299 46.8535 20.3799 46.7656 20.3979 46.6904 cv
20.4165 46.6162 20.6953 46.582 21.0225 46.6162 cv
21.3491 46.6494 21.5996 46.7373 21.5815 46.8115 cv
cp
level3{
gsave
clp
[.52638 .0533494 -.0391229 .157677 20.9902 46.7529 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.52638 .0533494 -.0391229 .157677 20.9902 46.7529 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
25.584 47.3428 mo
25.584 47.4336 25.3823 47.5068 25.1318 47.5068 cv
24.8813 47.5068 24.6787 47.4336 24.6787 47.3428 cv
24.6787 47.252 24.8813 47.1787 25.1318 47.1787 cv
25.3823 47.1787 25.584 47.252 25.584 47.3428 cv
cp
level3{
gsave
clp
[.402829 0 0 .19096 25.1313 47.3418 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402829 0 0 .19096 25.1313 47.3418 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
24.4653 46.6104 mo
24.4653 46.7002 24.2627 46.7734 24.0122 46.7734 cv
23.7627 46.7734 23.5596 46.7002 23.5596 46.6104 cv
23.5596 46.5195 23.7627 46.4463 24.0122 46.4463 cv
24.2627 46.4463 24.4653 46.5195 24.4653 46.6104 cv
cp
level3{
gsave
clp
[.402517 0 0 .190813 24.0122 46.6094 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402517 0 0 .190813 24.0122 46.6094 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.4644 46.3545 mo
30.4644 46.4453 30.3154 46.5176 30.1309 46.5176 cv
29.9473 46.5176 29.7974 46.4453 29.7974 46.3545 cv
29.7974 46.2637 29.9473 46.1914 30.1309 46.1914 cv
30.3154 46.1914 30.4644 46.2637 30.4644 46.3545 cv
cp
level3{
gsave
clp
[.296315 0 0 .190587 30.1309 46.3535 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296315 0 0 .190587 30.1309 46.3535 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.1802 46.2891 mo
31.1426 46.4004 30.7861 46.4424 30.3813 46.3828 cv
29.9775 46.3223 29.6802 46.1836 29.7173 46.0713 cv
29.7549 45.96 30.1113 45.918 30.5161 45.9775 cv
30.9194 46.0381 31.2168 46.1768 31.1802 46.2891 cv
cp
level3{
gsave
clp
[.651384 .0971154 -.078166 .235682 30.4468 46.1797 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.651384 .0971154 -.078166 .235682 30.4468 46.1797 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.064 46.542 mo
32.998 46.4434 33.1934 46.2891 33.499 46.1982 cv
33.8052 46.1074 34.1064 46.1143 34.1724 46.2139 cv
34.2383 46.3125 34.043 46.4668 33.7368 46.5576 cv
33.4312 46.6484 33.1299 46.6416 33.064 46.542 cv
cp
level3{
gsave
clp
[-.49283 .145716 -.138608 -.20969 33.6182 46.3789 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.49283 .145716 -.138608 -.20969 33.6182 46.3789 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.6841 46.1553 mo
32.645 46.0498 32.8779 45.9209 33.2026 45.8672 cv
33.5269 45.8135 33.8223 45.8555 33.8608 45.9609 cv
33.8999 46.0674 33.6685 46.1953 33.3423 46.249 cv
33.0171 46.3027 32.7236 46.2607 32.6841 46.1553 cv
cp
level3{
gsave
clp
[-.522578 .086308 -.0827611 -.222273 33.271 46.0576 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.522578 .086308 -.0827611 -.222273 33.271 46.0576 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.0679 45.9746 mo
33.126 46.1045 32.9375 46.2559 32.6479 46.3145 cv
32.3574 46.373 32.0762 46.3154 32.0176 46.1855 cv
31.9595 46.0557 32.147 45.9033 32.4375 45.8457 cv
32.7275 45.7871 33.0098 45.8447 33.0679 45.9746 cv
cp
level3{
gsave
clp
[.466465 -.093293 .122816 .272794 32.5435 46.0811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.466465 -.093293 .122816 .272794 32.5435 46.0811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.8135 46.2266 mo
32.7866 46.3643 32.4263 46.4463 32.0093 46.4102 cv
31.5918 46.373 31.2754 46.2314 31.3027 46.0938 cv
31.3301 45.9561 31.6899 45.874 32.1069 45.9111 cv
32.5239 45.9473 32.8403 46.0889 32.8135 46.2266 cv
cp
level3{
gsave
clp
[.671304 .0591979 -.05683 .291254 32.0566 46.1611 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.671304 .0591979 -.05683 .291254 32.0566 46.1611 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
29.2632 46.4482 mo
29.1973 46.3486 29.3916 46.1953 29.6973 46.1045 cv
30.0029 46.0137 30.3057 46.0205 30.3716 46.1201 cv
30.4365 46.2188 30.2422 46.373 29.936 46.4629 cv
29.6304 46.5547 29.3281 46.5469 29.2632 46.4482 cv
cp
level3{
gsave
clp
[-.492471 .14561 -.138507 -.209537 29.8169 46.2842 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.492471 .14561 -.138507 -.209537 29.8169 46.2842 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.6953 46.1143 mo
31.7539 46.2441 31.5654 46.3965 31.2754 46.4541 cv
30.9849 46.5127 30.7031 46.4551 30.6445 46.3262 cv
30.5874 46.1953 30.7749 46.0439 31.0654 45.9863 cv
31.355 45.9268 31.6372 45.9854 31.6953 46.1143 cv
cp
level3{
gsave
clp
[.466353 -.0932706 .122787 .272728 31.1704 46.2217 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.466353 -.0932706 .122787 .272728 31.1704 46.2217 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.1816 46.0986 mo
31.1816 46.2148 30.9277 46.3086 30.6152 46.3086 cv
30.3018 46.3086 30.0483 46.2148 30.0483 46.0986 cv
30.0483 45.9834 30.3018 45.8896 30.6152 45.8896 cv
30.9277 45.8896 31.1816 45.9834 31.1816 46.0986 cv
cp
level3{
gsave
clp
[.504401 0 0 .243912 30.6147 46.0996 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.504401 0 0 .243912 30.6147 46.0996 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.3999 46.3633 mo
33.3999 46.4541 33.2515 46.5273 33.0669 46.5273 cv
32.8823 46.5273 32.7334 46.4541 32.7334 46.3633 cv
32.7334 46.2725 32.8823 46.2002 33.0669 46.2002 cv
33.2515 46.2002 33.3999 46.2725 33.3999 46.3633 cv
cp
level3{
gsave
clp
[.296482 0 0 .190695 33.0664 46.3633 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296482 0 0 .190695 33.0664 46.3633 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.0273 46.3193 mo
30.0273 46.4102 29.8774 46.4824 29.6938 46.4824 cv
29.5093 46.4824 29.3594 46.4102 29.3594 46.3193 cv
29.3594 46.2285 29.5093 46.1553 29.6938 46.1553 cv
29.8774 46.1553 30.0273 46.2285 30.0273 46.3193 cv
cp
level3{
gsave
clp
[.2969 0 0 .190964 29.6934 46.3184 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.2969 0 0 .190964 29.6934 46.3184 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.1826 46.4678 mo
32.4219 45.9395 32.813 45.1797 33.3887 44.3818 cv
34.4644 42.8906 35.6304 42.5225 35.6304 42.5225 cv
35.6304 42.5225 34.4839 42.6006 33.1792 44.3613 cv
32.4722 45.3125 32.1025 46.0195 31.9102 46.4678 cv
32.1826 46.4678 li
cp
level3{
gsave
clp
[-2.63913 5.20472 -4.64331 -2.68112 34.9595 42.1348 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.63913 5.20472 -4.64331 -2.68112 34.9595 42.1348 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
31.6411 46.3389 mo
31.9116 46.0498 32.2593 45.7158 32.6904 45.373 cv
33.9878 44.3389 35.3721 44.0762 35.3721 44.0762 cv
35.3721 44.0762 34.0156 44.1396 32.4424 45.3604 cv
31.9458 45.7451 31.5859 46.0732 31.3257 46.3389 cv
31.6411 46.3389 li
cp
level3{
gsave
clp
[-2.27136 4.66843 -3.85369 -2.3364 34.2334 43.3867 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.27136 4.66843 -3.85369 -2.3364 34.2334 43.3867 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
29.9751 46.248 mo
29.9912 46.2012 30.0098 46.1523 30.0327 46.1016 cv
30.3413 45.4111 31.458 44.9072 31.458 44.9072 cv
31.458 44.9072 30.1807 45.3467 29.7764 46.1748 cv
29.7642 46.2002 29.7524 46.2246 29.7412 46.248 cv
29.9751 46.248 li
cp
level3{
gsave
clp
[.0413235 1.52317 -2.35382 .929577 30.5908 45.248 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0413235 1.52317 -2.35382 .929577 30.5908 45.248 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
31.7842 46.4229 mo
31.7129 46.1357 31.5962 45.8057 31.4058 45.4443 cv
30.7681 44.2373 29.3462 44.0508 29.3462 44.0508 cv
29.3462 44.0508 30.9116 44.083 31.7134 45.5205 cv
31.9102 45.874 32.0391 46.1719 32.123 46.4229 cv
31.7842 46.4229 li
cp
level3{
gsave
clp
[.245598 2.80547 2.68137 .482436 30.6514 44.2656 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.245598 2.80547 2.68137 .482436 30.6514 44.2656 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
30.5386 46.248 mo
31.4141 46.0947 32.1655 46.0732 32.1655 46.0732 cv
32.1655 46.0732 31.2598 46.0459 30.1582 46.248 cv
30.5386 46.248 li
cp
level3{
gsave
clp
[-2.08468 2.44165 -4.9204 -1.89291 31.4648 45.8037 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.08468 2.44165 -4.9204 -1.89291 31.4648 45.8037 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
31.8496 46.0986 mo
32.5996 45.9863 33.1987 45.9688 33.1987 45.9688 cv
33.1987 45.9688 32.4341 45.9463 31.457 46.0986 cv
31.8496 46.0986 li
cp
level3{
gsave
clp
[-2.10755 2.46844 -4.97437 -1.91367 32.5835 45.7324 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.10755 2.46844 -4.97437 -1.91367 32.5835 45.7324 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.2896 45.9922 mo
32.4937 45.7627 32.7632 45.5049 33.1172 45.2354 cv
34.3413 44.3027 36.1289 43.9658 36.1289 43.9658 cv
36.1289 43.9658 34.2656 44.1436 32.7622 45.248 cv
32.3716 45.5361 32.0889 45.7832 31.8813 45.9922 cv
32.2896 45.9922 li
cp
level3{
gsave
clp
[-1.33837 3.77919 -4.66144 -1.07203 34.498 43.5908 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.33837 3.77919 -4.66144 -1.07203 34.498 43.5908 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
32.4038 45.7695 mo
33.7402 45.6357 34.9404 45.6475 34.9404 45.6475 cv
34.9404 45.6475 33.4092 45.5703 31.6733 45.7695 cv
32.4038 45.7695 li
cp
level3{
gsave
clp
[-3.1567 2.55414 -8.29425 -2.70696 33.8301 45.2852 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.1567 2.55414 -8.29425 -2.70696 33.8301 45.2852 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.0361 46.292 mo
32.2046 46.2393 32.3853 46.1885 32.5776 46.1357 cv
34.6724 45.5732 37.3159 45.5479 37.3159 45.5479 cv
37.3159 45.5479 34.6309 45.4395 32.0762 46.0986 cv
31.8174 46.165 31.5845 46.2295 31.374 46.292 cv
32.0361 46.292 li
cp
level3{
gsave
clp
[-3.43402 3.41115 -8.55749 -3.03259 35.4014 44.8701 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.43402 3.41115 -8.55749 -3.03259 35.4014 44.8701 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
31.5859 46.376 mo
31.3945 46.2012 31.1597 46.0195 30.8745 45.8379 cv
29.481 44.9541 27.3159 44.8916 27.3159 44.8916 cv
27.3159 44.8916 29.5947 44.75 31.3105 45.7852 cv
31.666 46 31.9399 46.1973 32.1523 46.376 cv
31.5859 46.376 li
cp
level3{
gsave
clp
[1.81103 4.93221 7.2862 -4.15581 29.0903 43.8799 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.81103 4.93221 7.2862 -4.15581 29.0903 43.8799 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
30.8369 46.2363 mo
30.7363 46.1748 30.6226 46.1084 30.4966 46.04 cv
29.7959 45.6611 29.0552 45.5098 29.0552 45.5098 cv
29.0552 45.5098 29.7808 45.6006 30.6289 46.0488 cv
30.7583 46.1172 30.8701 46.1797 30.9668 46.2363 cv
30.8369 46.2363 li
cp
level3{
gsave
clp
[1.05899 1.45275 1.76739 -.290714 29.6724 45.4082 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.05899 1.45275 1.76739 -.290714 29.6724 45.4082 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
31.1445 46.1025 mo
31.3325 46.0078 31.5542 45.9082 31.8135 45.8086 cv
32.9922 45.3535 34.4077 45.2832 34.4077 45.2832 cv
34.4077 45.2832 32.9829 45.2559 31.5493 45.79 cv
31.2417 45.9053 30.9956 46.0098 30.7998 46.1025 cv
31.1445 46.1025 li
cp
level3{
gsave
clp
[-1.86517 2.4958 -4.16549 -1.73652 33.2656 44.8066 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.86517 2.4958 -4.16549 -1.73652 33.2656 44.8066 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
30.4155 46.3555 mo
30.3164 46.1992 30.1733 46.0225 29.9678 45.8408 cv
29.313 45.2627 28.1987 45.124 28.1987 45.124 cv
28.1987 45.124 29.3882 45.1504 30.1968 45.8311 cv
30.4395 46.0352 30.5977 46.2109 30.6992 46.3555 cv
30.4155 46.3555 li
cp
level3{
gsave
clp
[.503764 3.72466 2.53258 -1.97942 29.2549 44.2979 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.503764 3.72466 2.53258 -1.97942 29.2549 44.2979 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
31.6685 46.248 mo
31.7324 46.2119 31.7998 46.1738 31.8701 46.1357 cv
32.9204 45.5703 34.2041 45.4297 34.2041 45.4297 cv
34.2041 45.4297 32.9082 45.4609 31.6294 46.1279 cv
31.5493 46.1699 31.4751 46.21 31.4048 46.248 cv
31.6685 46.248 li
cp
level3{
gsave
clp
[-1.5332 2.80329 -3.56724 -1.42864 33.2388 45.043 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.5332 2.80329 -3.56724 -1.42864 33.2388 45.043 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
30.9292 46.248 mo
30.9063 46.1631 30.8726 46.0732 30.8237 45.9805 cv
30.4805 45.3154 29.2559 44.9834 29.2559 44.9834 cv
29.2559 44.9834 30.6553 45.2227 31.1055 46.0127 cv
31.1528 46.0967 31.1914 46.1748 31.2212 46.248 cv
30.9292 46.248 li
cp
level3{
gsave
clp
[-.0516387 2.11478 3.41664 .0561196 30.2524 45 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0516387 2.11478 3.41664 .0561196 30.2524 45 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.0791 46.3643 mo
31.9458 46.2578 31.7944 46.1475 31.6221 46.0342 cv
30.293 45.167 28.0967 44.8975 28.0967 44.8975 cv
28.0967 44.8975 30.4282 45.0098 32.0723 46.0352 cv
32.2583 46.1514 32.4204 46.2617 32.5615 46.3643 cv
32.0791 46.3643 li
cp
level3{
gsave
clp
[1.35973 3.73365 6.32202 -1.4499 29.9111 44.4814 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.35973 3.73365 6.32202 -1.4499 29.9111 44.4814 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
32.8188 46.2959 mo
32.7695 46.1885 32.7007 46.0723 32.6055 45.9502 cv
32.103 45.3057 30.8472 44.9307 30.8472 44.9307 cv
30.8472 44.9307 32.2446 45.2256 32.8823 45.9951 cv
32.9731 46.1045 33.0444 46.2051 33.0996 46.2959 cv
32.8188 46.2959 li
cp
level3{
gsave
clp
[.172818 1.80286 2.95544 .402624 31.9224 45.0771 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.172818 1.80286 2.95544 .402624 31.9224 45.0771 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
31.2212 46.3818 mo
30.9829 46.1172 30.5903 45.7363 30.0161 45.3379 cv
28.9395 44.5898 27.7734 44.4053 27.7734 44.4053 cv
27.7734 44.4053 28.9199 44.4453 30.2246 45.3262 cv
30.9297 45.8027 31.3013 46.1572 31.4937 46.3818 cv
31.2212 46.3818 li
cp
level3{
gsave
clp
[1.78629 3.5228 3.14281 -1.8147 28.8247 43.7988 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.78629 3.5228 3.14281 -1.8147 28.8247 43.7988 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
31.5054 46.4697 mo
31.396 46.2686 31.2515 46.042 31.063 45.8057 cv
30.4092 44.9873 29.4536 44.6914 29.4536 44.6914 cv
29.4536 44.6914 30.4497 44.8477 31.252 45.8164 cv
31.46 46.0684 31.6123 46.2852 31.7227 46.4697 cv
31.5054 46.4697 li
cp
level3{
gsave
clp
[1.02506 2.89449 3.57021 -.821071 30.2109 44.5176 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.02506 2.89449 3.57021 -.821071 30.2109 44.5176 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
30.2832 46.3086 mo
30.333 46.2012 30.4019 46.0869 30.4971 45.9639 cv
30.9985 45.3193 32.2554 44.9453 32.2554 44.9453 cv
32.2554 44.9453 30.8579 45.2393 30.2202 46.0088 cv
30.1294 46.1191 30.0581 46.2188 30.0024 46.3086 cv
30.2832 46.3086 li
cp
level3{
gsave
clp
[-.172498 1.79951 -2.94995 .401877 31.1807 45.0918 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.172498 1.79951 -2.94995 .401877 31.1807 45.0918 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
31.9897 46.4834 mo
31.9458 46.2734 31.8545 46.0137 31.6729 45.7236 cv
31.1982 44.9629 30.1406 44.5361 30.1406 44.5361 cv
30.1406 44.5361 31.3052 44.8652 31.9014 45.7715 cv
32.0947 46.0664 32.2007 46.3008 32.2554 46.4834 cv
31.9897 46.4834 li
cp
level3{
gsave
clp
[2.11475 0 0 2.11475 30.1406 45.5098 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.11475 0 0 2.11475 30.1406 45.5098 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
32.7085 46.4365 mo
32.8721 46.3516 33.0581 46.2627 33.269 46.1719 cv
34.7217 45.5469 36.833 45.3184 36.833 45.3184 cv
36.833 45.3184 34.6338 45.4414 32.8516 46.1816 cv
32.6318 46.2725 32.4404 46.3574 32.2744 46.4365 cv
32.7085 46.4365 li
cp
level3{
gsave
clp
[-1.60072 2.53839 -5.50874 -.696704 35.0483 45.0928 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.60072 2.53839 -5.50874 -.696704 35.0483 45.0928 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
33.1777 46.4873 mo
33.2715 46.1514 33.4077 45.7451 33.605 45.3154 cv
34.1279 44.1729 34.8857 43.7666 34.8857 43.7666 cv
34.8857 43.7666 34.0967 43.9766 33.4546 45.3301 cv
33.2305 45.8018 33.0889 46.1865 32.998 46.4873 cv
33.1777 46.4873 li
cp
level3{
gsave
clp
[-.578462 4.6472 -1.97409 -1.36608 34.1724 43.2734 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.578462 4.6472 -1.97409 -1.36608 34.1724 43.2734 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
30.3857 46.9141 mo
30.3857 47.0039 30.2363 47.0781 30.0522 47.0781 cv
29.8677 47.0781 29.7188 47.0039 29.7188 46.9141 cv
29.7188 46.8232 29.8677 46.75 30.0522 46.75 cv
30.2363 46.75 30.3857 46.8232 30.3857 46.9141 cv
cp
level3{
gsave
clp
[.296958 0 0 .191001 30.0522 46.9131 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296958 0 0 .191001 30.0522 46.9131 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.0132 47.1768 mo
31.0132 47.2666 30.8643 47.3398 30.6792 47.3398 cv
30.4946 47.3398 30.3457 47.2666 30.3457 47.1768 cv
30.3457 47.0869 30.4946 47.0137 30.6792 47.0137 cv
30.8643 47.0137 31.0132 47.0869 31.0132 47.1768 cv
cp
level3{
gsave
clp
[.296424 0 0 .190657 30.6792 47.1758 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296424 0 0 .190657 30.6792 47.1758 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.8745 46.3486 mo
30.8745 46.4395 30.7251 46.5127 30.54 46.5127 cv
30.3555 46.5127 30.2065 46.4395 30.2065 46.3486 cv
30.2065 46.2588 30.3555 46.1846 30.54 46.1846 cv
30.7251 46.1846 30.8745 46.2588 30.8745 46.3486 cv
cp
level3{
gsave
clp
[.297226 0 0 .191174 30.5405 46.3477 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.297226 0 0 .191174 30.5405 46.3477 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.1675 46.8154 mo
31.1675 46.9053 31.0186 46.9785 30.834 46.9785 cv
30.6489 46.9785 30.4995 46.9053 30.4995 46.8154 cv
30.4995 46.7246 30.6489 46.6514 30.834 46.6514 cv
31.0186 46.6514 31.1675 46.7246 31.1675 46.8154 cv
cp
level3{
gsave
clp
[.296893 0 0 .190959 30.8335 46.8145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296893 0 0 .190959 30.8335 46.8145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.917 46.8154 mo
31.917 46.9053 31.7681 46.9785 31.5835 46.9785 cv
31.3999 46.9785 31.25 46.9053 31.25 46.8154 cv
31.25 46.7246 31.3999 46.6514 31.5835 46.6514 cv
31.7681 46.6514 31.917 46.7246 31.917 46.8154 cv
cp
level3{
gsave
clp
[.296636 0 0 .190794 31.5835 46.8145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296636 0 0 .190794 31.5835 46.8145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.2373 46.999 mo
32.2373 47.0889 32.0879 47.1621 31.9033 47.1621 cv
31.7197 47.1621 31.5698 47.0889 31.5698 46.999 cv
31.5698 46.9092 31.7197 46.835 31.9033 46.835 cv
32.0879 46.835 32.2373 46.9092 32.2373 46.999 cv
cp
level3{
gsave
clp
[.296753 0 0 .190869 31.9033 46.998 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296753 0 0 .190869 31.9033 46.998 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.4995 46.542 mo
32.4341 46.4434 32.6289 46.2891 32.9346 46.1982 cv
33.2402 46.1074 33.542 46.1143 33.6079 46.2139 cv
33.6738 46.3125 33.4795 46.4668 33.1729 46.5576 cv
32.8667 46.6484 32.5654 46.6416 32.4995 46.542 cv
cp
level3{
gsave
clp
[-.492819 .145713 -.138605 -.209685 33.0537 46.3779 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.492819 .145713 -.138605 -.209685 33.0537 46.3779 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.2993 46.5742 mo
32.2993 46.6826 32.0737 46.7705 31.7959 46.7705 cv
31.5186 46.7705 31.293 46.6826 31.293 46.5742 cv
31.293 46.4668 31.5186 46.3779 31.7959 46.3779 cv
32.0737 46.3779 32.2993 46.4668 32.2993 46.5742 cv
cp
level3{
gsave
clp
[.447741 0 0 .228608 31.7964 46.5742 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.447741 0 0 .228608 31.7964 46.5742 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.5337 46.7803 mo
32.4497 46.7617 32.415 46.623 32.4575 46.4697 cv
32.499 46.3154 32.6021 46.2051 32.6875 46.2227 cv
32.771 46.2412 32.8052 46.3799 32.7637 46.5342 cv
32.7212 46.6885 32.6191 46.7988 32.5337 46.7803 cv
cp
level3{
gsave
clp
[-.0675468 .247672 -.17894 -.037921 32.6108 46.501 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0675468 .247672 -.17894 -.037921 32.6108 46.501 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.7134 46.751 mo
33.7534 46.8682 33.5718 47.0195 33.3091 47.0898 cv
33.0459 47.1592 32.7998 47.1211 32.7598 47.0029 cv
32.7197 46.8857 32.9009 46.7334 33.1646 46.6641 cv
33.4272 46.5947 33.6729 46.6328 33.7134 46.751 cv
cp
level3{
gsave
clp
[.423847 -.112473 .085243 .248626 33.2363 46.876 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.423847 -.112473 .085243 .248626 33.2363 46.876 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.3657 46.5176 mo
32.3521 46.5918 32.1465 46.626 31.9058 46.5918 cv
31.665 46.5596 31.4805 46.4717 31.4941 46.3965 cv
31.5073 46.3223 31.7129 46.2891 31.9541 46.3213 cv
32.1948 46.3555 32.3794 46.4434 32.3657 46.5176 cv
cp
level3{
gsave
clp
[.387399 .0533118 -.028433 .157566 31.9297 46.457 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.387399 .0533118 -.028433 .157566 31.9297 46.457 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.0698 46.5879 mo
31.0752 46.6963 30.855 46.793 30.5771 46.8027 cv
30.2998 46.8145 30.0703 46.7354 30.0649 46.627 cv
30.0601 46.5186 30.2798 46.4229 30.5576 46.4111 cv
30.8354 46.4004 31.0645 46.4795 31.0698 46.5879 cv
cp
level3{
gsave
clp
[.447047 -.01774 .0118266 .228254 30.5654 46.6074 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.447047 -.01774 .0118266 .228254 30.5654 46.6074 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.4937 46.4326 mo
32.5229 46.5166 32.3467 46.6387 32.0996 46.7061 cv
31.8521 46.7754 31.6279 46.7617 31.5986 46.6797 cv
31.5693 46.5957 31.7456 46.4736 31.9927 46.4063 cv
32.2393 46.3379 32.4648 46.3496 32.4937 46.4326 cv
cp
level3{
gsave
clp
[.397466 -.110013 .0626956 .175074 32.0449 46.5557 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.397466 -.110013 .0626956 .175074 32.0449 46.5557 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.7002 46.5762 mo
31.7046 46.6699 31.52 46.752 31.2871 46.7617 cv
31.0537 46.7715 30.8618 46.7031 30.8564 46.6094 cv
30.8521 46.5166 31.0366 46.4336 31.2695 46.4238 cv
31.5024 46.415 31.6953 46.4834 31.7002 46.5762 cv
cp
level3{
gsave
clp
[.375197 -.0142031 .0106523 .196476 31.2764 46.5938 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.375197 -.0142031 .0106523 .196476 31.2764 46.5938 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.3574 46.5576 mo
31.3574 46.6475 31.1997 46.7188 31.0049 46.7188 cv
30.811 46.7188 30.6528 46.6475 30.6528 46.5576 cv
30.6528 46.4697 30.811 46.3975 31.0049 46.3975 cv
31.1997 46.3975 31.3574 46.4697 31.3574 46.5576 cv
cp
level3{
gsave
clp
[.312709 0 0 .188336 31.0054 46.5566 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.312709 0 0 .188336 31.0054 46.5566 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.2603 46.582 mo
30.2603 46.6719 30.1021 46.7432 29.9087 46.7432 cv
29.7134 46.7432 29.5562 46.6719 29.5562 46.582 cv
29.5562 46.4941 29.7134 46.4209 29.9087 46.4209 cv
30.1021 46.4209 30.2603 46.4941 30.2603 46.582 cv
cp
level3{
gsave
clp
[.312905 0 0 .188454 29.9082 46.5811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.312905 0 0 .188454 29.9082 46.5811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.6069 46.6836 mo
30.5737 46.752 30.3638 46.7402 30.1406 46.6553 cv
29.917 46.5703 29.7627 46.4453 29.7964 46.376 cv
29.8306 46.3066 30.0386 46.3193 30.2632 46.4033 cv
30.4873 46.4883 30.6411 46.6143 30.6069 46.6836 cv
cp
level3{
gsave
clp
[.360728 .137195 -.0709629 .146657 30.2046 46.5293 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.360728 .137195 -.0709629 .146657 30.2046 46.5293 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.4404 46.3984 mo
30.4063 46.4688 30.1978 46.4561 29.9736 46.3711 cv
29.7495 46.2861 29.5962 46.1611 29.6294 46.0908 cv
29.6636 46.0225 29.8721 46.0342 30.0962 46.1191 cv
30.3203 46.2041 30.4746 46.3291 30.4404 46.3984 cv
cp
level3{
gsave
clp
[.360792 .137219 -.0709755 .146683 30.0376 46.2451 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.360792 .137219 -.0709755 .146683 30.0376 46.2451 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.1436 46.6953 mo
33.1489 46.8037 32.9277 46.9004 32.6504 46.9111 cv
32.3726 46.9219 32.144 46.8428 32.1387 46.7354 cv
32.1328 46.627 32.353 46.5303 32.6313 46.5195 cv
32.9087 46.5078 33.1372 46.5879 33.1436 46.6953 cv
cp
level3{
gsave
clp
[.447032 -.0177394 .0118262 .228246 32.6392 46.7158 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.447032 -.0177394 .0118262 .228246 32.6392 46.7158 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.1758 46.375 mo
30.2061 46.458 30.0288 46.5811 29.7813 46.6484 cv
29.5342 46.7168 29.3101 46.7051 29.2808 46.6211 cv
29.251 46.5381 29.4272 46.416 29.6748 46.3477 cv
29.9224 46.2793 30.147 46.292 30.1758 46.375 cv
cp
level3{
gsave
clp
[.397691 -.110075 .062731 .175173 29.7271 46.498 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.397691 -.110075 .062731 .175173 29.7271 46.498 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.3374 46.873 mo
30.3066 46.9014 30.2261 46.8799 30.1592 46.8242 cv
30.0918 46.7686 30.062 46.6992 30.0933 46.6699 cv
30.125 46.6416 30.2046 46.6621 30.2725 46.7188 cv
30.3389 46.7734 30.3691 46.8428 30.3374 46.873 cv
cp
level3{
gsave
clp
[.00114939 .000949492 -.000699626 .000649653 1126.15 262.73 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.00114939 .000949492 -.000699626 .000649653 1126.15 262.73 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.5796 46.6299 mo
31.585 46.7227 31.4004 46.8057 31.1675 46.8154 cv
30.9346 46.8242 30.7422 46.7559 30.7378 46.6621 cv
30.7324 46.5693 30.918 46.4863 31.1509 46.4766 cv
31.3828 46.4678 31.5757 46.5361 31.5796 46.6299 cv
cp
level3{
gsave
clp
[.374984 -.014195 .0106462 .196364 31.1563 46.6475 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.374984 -.014195 .0106462 .196364 31.1563 46.6475 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
31.8535 46.5381 mo
31.8535 46.6279 31.6953 46.7002 31.502 46.7002 cv
31.3071 46.7002 31.1499 46.6279 31.1499 46.5381 cv
31.1499 46.4502 31.3071 46.3779 31.502 46.3779 cv
31.6953 46.3779 31.8535 46.4502 31.8535 46.5381 cv
cp
level3{
gsave
clp
[.31277 0 0 .188373 31.502 46.5381 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.31277 0 0 .188373 31.502 46.5381 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
30.1348 46.8115 mo
30.1211 46.8867 29.9155 46.9199 29.6748 46.8867 cv
29.4336 46.8535 29.2495 46.7656 29.2632 46.6904 cv
29.2769 46.6162 29.4819 46.582 29.7231 46.6162 cv
29.9639 46.6494 30.1484 46.7373 30.1348 46.8115 cv
cp
level3{
gsave
clp
[.387388 .0533102 -.0284321 .157561 29.6987 46.752 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.387388 .0533102 -.0284321 .157561 29.6987 46.752 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
33.0854 47.3428 mo
33.0854 47.4336 32.936 47.5068 32.7515 47.5068 cv
32.5669 47.5068 32.418 47.4336 32.418 47.3428 cv
32.418 47.252 32.5669 47.1787 32.7515 47.1787 cv
32.936 47.1787 33.0854 47.252 33.0854 47.3428 cv
cp
level3{
gsave
clp
[.297082 0 0 .191081 32.7515 47.3418 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.297082 0 0 .191081 32.7515 47.3418 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
32.2607 46.6104 mo
32.2607 46.7002 32.1108 46.7734 31.9268 46.7734 cv
31.7422 46.7734 31.5933 46.7002 31.5933 46.6104 cv
31.5933 46.5195 31.7422 46.4463 31.9268 46.4463 cv
32.1108 46.4463 32.2607 46.5195 32.2607 46.6104 cv
cp
level3{
gsave
clp
[.29676 0 0 .190874 31.9268 46.6094 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.29676 0 0 .190874 31.9268 46.6094 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.0503 46.6348 mo
50.0503 46.7471 49.9243 46.8379 49.7695 46.8379 cv
49.6143 46.8379 49.4888 46.7471 49.4888 46.6348 cv
49.4888 46.5234 49.6143 46.4326 49.7695 46.4326 cv
49.9243 46.4326 50.0503 46.5234 50.0503 46.6348 cv
cp
level3{
gsave
clp
[.249264 0 0 .236651 49.7681 46.6357 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249264 0 0 .236651 49.7681 46.6357 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.6509 46.5537 mo
50.6196 46.6924 50.3193 46.7441 49.9805 46.6699 cv
49.6406 46.5957 49.3901 46.4229 49.4224 46.2852 cv
49.4531 46.1465 49.7529 46.0938 50.0923 46.168 cv
50.4321 46.2432 50.6826 46.415 50.6509 46.5537 cv
cp
level3{
gsave
clp
[.545998 .120201 -.0662124 .291335 50.0361 46.4199 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.545998 .120201 -.0662124 .291335 50.0361 46.4199 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
52.2344 46.8682 mo
52.1787 46.7451 52.3433 46.5537 52.5996 46.4424 cv
52.8569 46.3291 53.1104 46.3379 53.1655 46.4609 cv
53.2207 46.584 53.0571 46.7754 52.7993 46.8877 cv
52.542 47.001 52.2896 46.9912 52.2344 46.8682 cv
cp
level3{
gsave
clp
[-.414239 .181612 -.116313 -.259155 52.7002 46.665 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.414239 .181612 -.116313 -.259155 52.7002 46.665 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.9155 46.3887 mo
51.8823 46.2578 52.0776 46.0977 52.3506 46.0313 cv
52.623 45.9639 52.8711 46.0166 52.9043 46.1475 cv
52.936 46.2783 52.7417 46.4385 52.4688 46.5049 cv
52.1958 46.5713 51.9482 46.5195 51.9155 46.3887 cv
cp
level3{
gsave
clp
[-.439818 .107148 -.0693913 -.275524 52.4102 46.2686 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.439818 .107148 -.0693913 -.275524 52.4102 46.2686 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
52.2373 46.1641 mo
52.2861 46.3242 52.1284 46.5137 51.8848 46.5859 cv
51.6411 46.6582 51.4043 46.5869 51.355 46.4268 cv
51.3057 46.2656 51.4639 46.0771 51.7085 46.0039 cv
51.9512 45.9326 52.189 46.0039 52.2373 46.1641 cv
cp
level3{
gsave
clp
[.392764 -.116299 .103037 .338695 51.7949 46.2949 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.392764 -.116299 .103037 .338695 51.7949 46.2949 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
52.0239 46.4766 mo
52.001 46.6484 51.6987 46.749 51.3481 46.7041 cv
50.9971 46.6582 50.7319 46.4834 50.7534 46.3125 cv
50.7764 46.1416 51.0791 46.04 51.4302 46.085 cv
51.7808 46.1309 52.0464 46.3057 52.0239 46.4766 cv
cp
level3{
gsave
clp
[.564568 .0724852 -.0479832 .361405 51.3887 46.3945 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.564568 .0724852 -.0479832 .361405 51.3887 46.3945 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.0396 46.752 mo
48.9839 46.6279 49.1484 46.4365 49.4048 46.3262 cv
49.6621 46.2119 49.916 46.2217 49.9712 46.3447 cv
50.0259 46.4678 49.8623 46.6582 49.605 46.7705 cv
49.3481 46.8838 49.0947 46.875 49.0396 46.752 cv
cp
level3{
gsave
clp
[-.414124 .181562 -.116281 -.259083 49.5059 46.5488 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.414124 .181562 -.116281 -.259083 49.5059 46.5488 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.0845 46.3379 mo
51.1328 46.498 50.9746 46.6875 50.731 46.7588 cv
50.4873 46.832 50.2505 46.7598 50.2012 46.5996 cv
50.1528 46.4395 50.3101 46.25 50.5547 46.1777 cv
50.7974 46.1055 51.0356 46.1777 51.0845 46.3379 cv
cp
level3{
gsave
clp
[.392766 -.116299 .103037 .338697 50.6416 46.4678 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.392766 -.116299 .103037 .338697 50.6416 46.4678 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.6528 46.3193 mo
50.6528 46.4629 50.439 46.5791 50.1763 46.5791 cv
49.9131 46.5791 49.7007 46.4629 49.7007 46.3193 cv
49.7007 46.1748 49.9131 46.0596 50.1763 46.0596 cv
50.439 46.0596 50.6528 46.1748 50.6528 46.3193 cv
cp
level3{
gsave
clp
[.423223 0 0 .302885 50.1753 46.3203 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.423223 0 0 .302885 50.1753 46.3203 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
52.5171 46.6465 mo
52.5171 46.7588 52.3916 46.8496 52.2363 46.8496 cv
52.0815 46.8496 51.9565 46.7588 51.9565 46.6465 cv
51.9565 46.5342 52.0815 46.4434 52.2363 46.4434 cv
52.3916 46.4434 52.5171 46.5342 52.5171 46.6465 cv
cp
level3{
gsave
clp
[.249209 0 0 .236598 52.2354 46.6475 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249209 0 0 .236598 52.2354 46.6475 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.6821 46.5918 mo
49.6821 46.7041 49.5566 46.7939 49.4019 46.7939 cv
49.2466 46.7939 49.1211 46.7041 49.1211 46.5918 cv
49.1211 46.4795 49.2466 46.3887 49.4019 46.3887 cv
49.5566 46.3887 49.6821 46.4795 49.6821 46.5918 cv
cp
level3{
gsave
clp
[.249127 0 0 .23652 49.4004 46.5918 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249127 0 0 .23652 49.4004 46.5918 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.4937 46.7754 mo
51.6938 46.1211 52.0229 45.1787 52.5063 44.1904 cv
53.4111 42.3408 54.894 42.3799 54.894 42.3799 cv
54.894 42.3799 53.4272 41.9814 52.3301 44.1631 cv
51.7378 45.3438 51.4263 46.2197 51.2642 46.7754 cv
51.4937 46.7754 li
cp
level3{
gsave
clp
[-2.81107 5.54381 -4.94582 -2.85579 54.252 42.0098 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.81107 5.54381 -4.94582 -2.85579 54.252 42.0098 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
51.0381 46.6172 mo
51.2656 46.2568 51.5576 45.8447 51.9204 45.4189 cv
53.0103 44.1367 54.1738 43.8105 54.1738 43.8105 cv
54.1738 43.8105 53.0337 43.8906 51.7114 45.4023 cv
51.2944 45.8809 50.9917 46.2861 50.7734 46.6172 cv
51.0381 46.6172 li
cp
level3{
gsave
clp
[-2.34474 4.81925 -3.9782 -2.41188 53.3872 43.334 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.34474 4.81925 -3.9782 -2.41188 53.3872 43.334 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
49.6387 46.5039 mo
49.6519 46.4453 49.668 46.3848 49.687 46.3223 cv
49.9463 45.4658 50.8843 44.8418 50.8843 44.8418 cv
50.8843 44.8418 49.8115 45.3857 49.4712 46.4131 cv
49.4614 46.4443 49.4517 46.4746 49.4424 46.5039 cv
49.6387 46.5039 li
cp
level3{
gsave
clp
[.0638868 2.35485 -3.63905 1.43714 50.1484 45.1318 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0638868 2.35485 -3.63905 1.43714 50.1484 45.1318 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
51.1582 46.7188 mo
51.0991 46.3643 51.001 45.9541 50.8408 45.5068 cv
50.3052 44.0107 49.1099 43.1719 49.1099 43.1719 cv
49.1099 43.1719 50.4253 43.8184 51.0991 45.6016 cv
51.2642 46.04 51.373 46.4102 51.4429 46.7188 cv
51.1582 46.7188 li
cp
level3{
gsave
clp
[.399736 4.56619 4.36421 .785215 50.1382 43.3564 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.399736 4.56619 4.36421 .785215 50.1382 43.3564 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
50.1123 46.5039 mo
50.8477 46.3135 51.479 46.2871 51.479 46.2871 cv
51.479 46.2871 50.7173 46.2529 49.792 46.5039 cv
50.1123 46.5039 li
cp
level3{
gsave
clp
[-1.90605 2.23243 -4.49877 -1.73071 50.9136 46.0693 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.90605 2.23243 -4.49877 -1.73071 50.9136 46.0693 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
51.2134 46.3193 mo
51.8447 46.1787 52.3467 46.1572 52.3467 46.1572 cv
52.3467 46.1572 51.7046 46.1279 50.8838 46.3193 cv
51.2134 46.3193 li
cp
level3{
gsave
clp
[-1.91003 2.23709 -4.50817 -1.73432 51.8481 45.9658 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.91003 2.23709 -4.50817 -1.73432 51.8481 45.9658 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
51.583 46.1865 mo
51.7544 45.9023 51.9814 45.583 52.2788 45.248 cv
53.3071 44.0918 54.8096 43.6738 54.8096 43.6738 cv
54.8096 43.6738 53.2441 43.8945 51.981 45.2646 cv
51.6523 45.6211 51.4141 45.9268 51.2407 46.1865 cv
51.583 46.1865 li
cp
level3{
gsave
clp
[-1.48555 4.19479 -5.17407 -1.18992 53.5698 43.3887 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.48555 4.19479 -5.17407 -1.18992 53.5698 43.3887 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
51.6787 45.9102 mo
52.8022 45.7451 53.8105 45.7578 53.8105 45.7578 cv
53.8105 45.7578 52.5239 45.6631 51.0654 45.9102 cv
51.6787 45.9102 li
cp
level3{
gsave
clp
[-2.78452 2.253 -7.31634 -2.3878 52.8999 45.4609 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.78452 2.253 -7.31634 -2.3878 52.8999 45.4609 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
51.3701 46.5576 mo
51.5117 46.4932 51.6636 46.4287 51.8257 46.3643 cv
53.5859 45.667 55.8071 45.6357 55.8071 45.6357 cv
55.8071 45.6357 53.5513 45.501 51.4033 46.3193 cv
51.1865 46.4014 50.9902 46.4805 50.8135 46.5576 cv
51.3701 46.5576 li
cp
level3{
gsave
clp
[-3.24324 3.22164 -8.08207 -2.86411 54.3101 45.1045 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.24324 3.22164 -8.08207 -2.86411 54.3101 45.1045 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
50.9917 46.6611 mo
50.8306 46.4453 50.6343 46.2197 50.3936 45.9951 cv
49.2231 44.8984 47.4038 44.8213 47.4038 44.8213 cv
47.4038 44.8213 49.3184 44.6465 50.7612 45.9297 cv
51.0591 46.1963 51.2891 46.4404 51.4688 46.6611 cv
50.9917 46.6611 li
cp
level3{
gsave
clp
[1.77494 4.83393 7.14101 -4.073 48.8047 44.0215 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.77494 4.83393 7.14101 -4.073 48.8047 44.0215 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
50.3623 46.4893 mo
50.2778 46.4131 50.1826 46.3301 50.0767 46.2451 cv
49.4878 45.7764 48.8652 45.5889 48.8652 45.5889 cv
48.8652 45.5889 49.4741 45.7002 50.188 46.2559 cv
50.2959 46.3418 50.3906 46.4189 50.4712 46.4893 cv
50.3623 46.4893 li
cp
level3{
gsave
clp
[1.18468 1.62517 1.97715 -.325217 49.2891 45.5186 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.18468 1.62517 1.97715 -.325217 49.2891 45.5186 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
50.6211 46.3223 mo
50.7788 46.2061 50.9653 46.082 51.1841 45.958 cv
52.1738 45.3945 53.3628 45.3076 53.3628 45.3076 cv
53.3628 45.3076 52.166 45.2734 50.9609 45.9365 cv
50.7031 46.0781 50.4966 46.207 50.3315 46.3223 cv
50.6211 46.3223 li
cp
level3{
gsave
clp
[-1.82899 2.44739 -4.08468 -1.70283 52.4951 44.9463 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.82899 2.44739 -4.08468 -1.70283 52.4951 44.9463 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
50.0083 46.6377 mo
49.9243 46.4434 49.8052 46.2236 49.6323 45.999 cv
49.0825 45.2822 48.146 45.1104 48.146 45.1104 cv
48.146 45.1104 49.145 45.1416 49.8247 45.9863 cv
50.0283 46.2393 50.1611 46.457 50.2466 46.6377 cv
50.0083 46.6377 li
cp
level3{
gsave
clp
[.501128 3.70518 2.51933 -1.96906 49.0024 44.4404 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.501128 3.70518 2.51933 -1.96906 49.0024 44.4404 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
51.0615 46.5039 mo
51.1152 46.458 51.1719 46.4111 51.2319 46.3643 cv
52.1138 45.6641 53.1929 45.4893 53.1929 45.4893 cv
53.1929 45.4893 52.103 45.5283 51.0283 46.3555 cv
50.9614 46.4063 50.8989 46.4561 50.8398 46.5039 cv
51.0615 46.5039 li
cp
level3{
gsave
clp
[-1.54715 2.8288 -3.5997 -1.44164 52.4556 45.1943 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.54715 2.8288 -3.5997 -1.44164 52.4556 45.1943 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
50.4395 46.5039 mo
50.4209 46.3984 50.3921 46.2871 50.3521 46.1719 cv
50.063 45.3486 49.0332 44.9355 49.0332 44.9355 cv
49.0332 44.9355 50.2095 45.2314 50.5879 46.2119 cv
50.6279 46.3154 50.6606 46.4131 50.6855 46.5039 cv
50.4395 46.5039 li
cp
level3{
gsave
clp
[-.0644988 2.64145 4.26752 .0700956 49.8784 44.9492 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0644988 2.64145 4.26752 .0700956 49.8784 44.9492 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
51.4067 46.6484 mo
51.2944 46.5146 51.1675 46.3779 51.0229 46.2383 cv
49.9048 45.1641 48.0596 44.8281 48.0596 44.8281 cv
48.0596 44.8281 50.019 44.9688 51.4004 46.2393 cv
51.5571 46.3838 51.6934 46.5205 51.812 46.6484 cv
51.4067 46.6484 li
cp
level3{
gsave
clp
[1.46349 4.01857 6.80447 -1.56054 49.4858 44.501 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.46349 4.01857 6.80447 -1.56054 49.4858 44.501 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
52.0283 46.5615 mo
51.9868 46.4297 51.9287 46.2852 51.8491 46.1348 cv
51.4268 45.335 50.3716 44.8711 50.3716 44.8711 cv
50.3716 44.8711 51.5459 45.2363 52.0815 46.1904 cv
52.1577 46.3262 52.2173 46.4502 52.2642 46.5615 cv
52.0283 46.5615 li
cp
level3{
gsave
clp
[.23083 2.40804 3.94751 .537776 51.249 44.9902 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.23083 2.40804 3.94751 .537776 51.249 44.9902 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
50.6855 46.668 mo
50.4849 46.3408 50.1553 45.8691 49.6724 45.374 cv
48.7676 44.4482 47.7881 44.2188 47.7881 44.2188 cv
47.7881 44.2188 48.752 44.2676 49.8481 45.3604 cv
50.4409 45.9512 50.7529 46.3906 50.9141 46.668 cv
50.6855 46.668 li
cp
level3{
gsave
clp
[1.8424 3.63346 3.24154 -1.87171 48.5166 43.7979 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.8424 3.63346 3.24154 -1.87171 48.5166 43.7979 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
50.9238 46.7783 mo
50.8325 46.5283 50.7114 46.248 50.5522 45.9541 cv
50.0029 44.9404 49.1997 44.5742 49.1997 44.5742 cv
49.1997 44.5742 50.0371 44.7676 50.7114 45.9688 cv
50.8867 46.2813 51.0137 46.5508 51.1069 46.7783 cv
50.9238 46.7783 li
cp
level3{
gsave
clp
[1.17772 3.32556 4.10192 -.943352 49.7197 44.4541 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.17772 3.32556 4.10192 -.943352 49.7197 44.4541 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
49.897 46.5791 mo
49.9395 46.4463 49.9971 46.3027 50.0771 46.1514 cv
50.4985 45.3525 51.5547 44.8877 51.5547 44.8877 cv
51.5547 44.8877 50.3799 45.2529 49.8442 46.207 cv
49.7681 46.3428 49.708 46.4668 49.6611 46.5791 cv
49.897 46.5791 li
cp
level3{
gsave
clp
[-.230962 2.40942 -3.94977 .538084 50.6777 45.0078 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.230962 2.40942 -3.94977 .538084 50.6777 45.0078 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
51.3315 46.7949 mo
51.2944 46.5352 51.2173 46.2139 51.0654 45.8535 cv
50.6665 44.9092 49.7778 44.3809 49.7778 44.3809 cv
49.7778 44.3809 50.7568 44.7881 51.2573 45.9131 cv
51.4194 46.2783 51.5088 46.5684 51.5547 46.7949 cv
51.3315 46.7949 li
cp
level3{
gsave
clp
[1.77686 0 0 1.77686 49.7778 45.5879 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.77686 0 0 1.77686 49.7778 45.5879 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
51.9355 46.7383 mo
52.0723 46.6318 52.229 46.5215 52.4067 46.4092 cv
53.627 45.6338 55.4019 45.3516 55.4019 45.3516 cv
55.4019 45.3516 53.5537 45.5029 52.0557 46.4199 cv
51.8701 46.5342 51.71 46.6396 51.5708 46.7383 cv
51.9355 46.7383 li
cp
level3{
gsave
clp
[-1.76746 2.80282 -6.08258 -.76928 54.0327 45.1787 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.76746 2.80282 -6.08258 -.76928 54.0327 45.1787 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
52.3301 46.8008 mo
52.4082 46.3828 52.5225 45.8809 52.689 45.3477 cv
53.1274 43.9307 53.7651 43.4268 53.7651 43.4268 cv
53.7651 43.4268 53.1021 43.6865 52.5615 45.3652 cv
52.374 45.9502 52.2544 46.4277 52.1787 46.8008 cv
52.3301 46.8008 li
cp
level3{
gsave
clp
[-.642369 5.16062 -2.19218 -1.51701 53.229 43.0547 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.642369 5.16062 -2.19218 -1.51701 53.229 43.0547 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
49.9834 47.3291 mo
49.9834 47.4404 49.8579 47.5313 49.7036 47.5313 cv
49.5479 47.5313 49.4224 47.4404 49.4224 47.3291 cv
49.4224 47.2168 49.5479 47.126 49.7036 47.126 cv
49.8579 47.126 49.9834 47.2168 49.9834 47.3291 cv
cp
level3{
gsave
clp
[.249146 0 0 .236538 49.7017 47.3291 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249146 0 0 .236538 49.7017 47.3291 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.5107 47.6553 mo
50.5107 47.7666 50.3853 47.8574 50.23 47.8574 cv
50.0757 47.8574 49.9502 47.7666 49.9502 47.6553 cv
49.9502 47.543 50.0757 47.4521 50.23 47.4521 cv
50.3853 47.4521 50.5107 47.543 50.5107 47.6553 cv
cp
level3{
gsave
clp
[.249065 0 0 .236462 50.229 47.6553 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249065 0 0 .236462 50.229 47.6553 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.394 46.6279 mo
50.394 46.7402 50.2681 46.832 50.1138 46.832 cv
49.9585 46.832 49.833 46.7402 49.833 46.6279 cv
49.833 46.5166 49.9585 46.4258 50.1138 46.4258 cv
50.2681 46.4258 50.394 46.5166 50.394 46.6279 cv
cp
level3{
gsave
clp
[.249349 0 0 .236731 50.1123 46.6299 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249349 0 0 .236731 50.1123 46.6299 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.6401 47.2061 mo
50.6401 47.3184 50.5146 47.4092 50.3604 47.4092 cv
50.2051 47.4092 50.0796 47.3184 50.0796 47.2061 cv
50.0796 47.0947 50.2051 47.0029 50.3604 47.0029 cv
50.5146 47.0029 50.6401 47.0947 50.6401 47.2061 cv
cp
level3{
gsave
clp
[.249223 0 0 .236611 50.3584 47.207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249223 0 0 .236611 50.3584 47.207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.2705 47.2061 mo
51.2705 47.3184 51.1445 47.4092 50.9902 47.4092 cv
50.8354 47.4092 50.71 47.3184 50.71 47.2061 cv
50.71 47.0947 50.8354 47.0029 50.9902 47.0029 cv
51.1445 47.0029 51.2705 47.0947 51.2705 47.2061 cv
cp
level3{
gsave
clp
[.249211 0 0 .236601 50.9888 47.207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249211 0 0 .236601 50.9888 47.207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.5396 47.4346 mo
51.5396 47.5469 51.4141 47.6377 51.2588 47.6377 cv
51.104 47.6377 50.9785 47.5469 50.9785 47.4346 cv
50.9785 47.3232 51.104 47.2324 51.2588 47.2324 cv
51.4141 47.2324 51.5396 47.3232 51.5396 47.4346 cv
cp
level3{
gsave
clp
[.249132 0 0 .236525 51.2578 47.4355 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249132 0 0 .236525 51.2578 47.4355 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.7598 46.8682 mo
51.7046 46.7451 51.8687 46.5537 52.125 46.4424 cv
52.3823 46.3291 52.6357 46.3379 52.6919 46.4609 cv
52.7466 46.584 52.583 46.7754 52.3257 46.8877 cv
52.0684 47.001 51.8149 46.9912 51.7598 46.8682 cv
cp
level3{
gsave
clp
[-.414632 .181785 -.116424 -.2594 52.2266 46.665 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.414632 .181785 -.116424 -.2594 52.2266 46.665 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.5918 46.9082 mo
51.5918 47.043 51.4019 47.1514 51.1685 47.1514 cv
50.9351 47.1514 50.7461 47.043 50.7461 46.9082 cv
50.7461 46.7734 50.9351 46.665 51.1685 46.665 cv
51.4019 46.665 51.5918 46.7734 51.5918 46.9082 cv
cp
level3{
gsave
clp
[.375857 0 0 .283936 51.1689 46.9092 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.375857 0 0 .283936 51.1689 46.9092 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.7886 47.1641 mo
51.7183 47.1416 51.6885 46.9688 51.7241 46.7783 cv
51.7593 46.5869 51.8462 46.4502 51.917 46.4727 cv
51.9883 46.4951 52.0171 46.668 51.9814 46.8584 cv
51.9458 47.0488 51.8604 47.1855 51.7886 47.1641 cv
cp
level3{
gsave
clp
[-.0571455 .307157 -.150007 -.0469409 51.854 46.8184 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0571455 .307157 -.150007 -.0469409 51.854 46.8184 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
52.7798 47.126 mo
52.813 47.2725 52.6606 47.4609 52.4399 47.5469 cv
52.2192 47.6328 52.0117 47.585 51.9785 47.4395 cv
51.9453 47.2939 52.0972 47.1055 52.3179 47.0195 cv
52.5396 46.9326 52.7466 46.9805 52.7798 47.126 cv
cp
level3{
gsave
clp
[.356139 -.138782 .0714319 .307157 52.3789 47.2822 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.356139 -.138782 .0714319 .307157 52.3789 47.2822 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.647 46.8379 mo
51.6357 46.9297 51.4634 46.9717 51.2603 46.9297 cv
51.0586 46.8896 50.9033 46.7803 50.9146 46.6875 cv
50.9263 46.5947 51.0991 46.5537 51.3013 46.5947 cv
51.5039 46.6367 51.6587 46.7451 51.647 46.8379 cv
cp
level3{
gsave
clp
[.32533 .0662898 -.0234564 .19581 51.2822 46.7627 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.32533 .0662898 -.0234564 .19581 51.2822 46.7627 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.5586 46.9248 mo
50.563 47.0596 50.3774 47.1787 50.1445 47.1924 cv
49.9116 47.2051 49.7188 47.1074 49.7144 46.9736 cv
49.7095 46.8398 49.895 46.7188 50.1279 46.7051 cv
50.3608 46.6924 50.5537 46.79 50.5586 46.9248 cv
cp
level3{
gsave
clp
[.375567 -.0214318 .0102056 .283716 50.1392 46.9492 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.375567 -.0214318 .0102056 .283716 50.1392 46.9492 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.7554 46.7324 mo
51.7793 46.8359 51.6313 46.9873 51.4238 47.0713 cv
51.2158 47.1572 51.0273 47.1416 51.0024 47.0381 cv
50.9775 46.9355 51.1265 46.7832 51.334 46.6992 cv
51.541 46.6143 51.7305 46.6289 51.7554 46.7324 cv
cp
level3{
gsave
clp
[.334709 -.13572 .0520432 .217357 51.3799 46.8848 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.334709 -.13572 .0520432 .217357 51.3799 46.8848 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.0879 46.9102 mo
51.0918 47.0264 50.9365 47.1289 50.7407 47.1406 cv
50.5449 47.1514 50.3828 47.0674 50.3794 46.9521 cv
50.3755 46.8359 50.5303 46.7334 50.7266 46.7217 cv
50.9214 46.7109 51.0835 46.7959 51.0879 46.9102 cv
cp
level3{
gsave
clp
[.315266 -.018365 .00816222 .243846 50.7334 46.9307 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.315266 -.018365 .00816222 .243846 50.7334 46.9307 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.7998 46.8887 mo
50.7998 46.998 50.6675 47.0879 50.5039 47.0879 cv
50.3403 47.0879 50.208 46.998 50.208 46.8887 cv
50.208 46.7783 50.3403 46.6885 50.5039 46.6885 cv
50.6675 46.6885 50.7998 46.7783 50.7998 46.8887 cv
cp
level3{
gsave
clp
[.263118 0 0 .232523 50.5049 46.8887 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.263118 0 0 .232523 50.5049 46.8887 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.8774 46.918 mo
49.8774 47.0283 49.7451 47.1182 49.5815 47.1182 cv
49.4185 47.1182 49.2861 47.0283 49.2861 46.918 cv
49.2861 46.8076 49.4185 46.7188 49.5815 46.7188 cv
49.7451 46.7188 49.8774 46.8076 49.8774 46.918 cv
cp
level3{
gsave
clp
[.262996 0 0 .232415 49.5825 46.9189 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.262996 0 0 .232415 49.5825 46.9189 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.1694 47.043 mo
50.1406 47.1289 49.9653 47.1143 49.7769 47.0088 cv
49.5894 46.9033 49.46 46.748 49.4878 46.6621 cv
49.5166 46.5762 49.6924 46.5918 49.8804 46.6963 cv
50.0684 46.8018 50.1982 46.957 50.1694 47.043 cv
cp
level3{
gsave
clp
[.303179 .169454 -.0602276 .181704 49.8267 46.8535 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.303179 .169454 -.0602276 .181704 49.8267 46.8535 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.0298 46.6904 mo
50.001 46.7764 49.8252 46.7617 49.6372 46.6563 cv
49.4492 46.5508 49.3198 46.3955 49.3481 46.3096 cv
49.377 46.2236 49.5522 46.2383 49.7407 46.3438 cv
49.9282 46.4492 50.0586 46.6045 50.0298 46.6904 cv
cp
level3{
gsave
clp
[.303237 .169486 -.060239 .181738 49.687 46.501 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.303237 .169486 -.060239 .181738 49.687 46.501 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
52.3008 47.0586 mo
52.3052 47.1924 52.1201 47.3125 51.8867 47.3262 cv
51.6533 47.3398 51.4609 47.2422 51.4565 47.1074 cv
51.4517 46.9736 51.6372 46.8525 51.8701 46.8398 cv
52.103 46.8262 52.2964 46.9238 52.3008 47.0586 cv
cp
level3{
gsave
clp
[.375351 -.0214195 .0101998 .283553 51.8813 47.084 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.375351 -.0214195 .0101998 .283553 51.8813 47.084 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.8071 46.6611 mo
49.832 46.7637 49.6841 46.916 49.4761 47.001 cv
49.2676 47.085 49.0796 47.0703 49.0542 46.9668 cv
49.0303 46.8633 49.1787 46.7119 49.3857 46.627 cv
49.5938 46.542 49.7822 46.5576 49.8071 46.6611 cv
cp
level3{
gsave
clp
[.335397 -.135999 .0521502 .217804 49.4316 46.8135 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.335397 -.135999 .0521502 .217804 49.4316 46.8135 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.9429 47.2773 mo
49.917 47.3135 49.8496 47.2871 49.793 47.2178 cv
49.7358 47.1484 49.7119 47.0625 49.7378 47.0264 cv
49.7642 46.9902 49.8315 47.0176 49.8882 47.0869 cv
49.9443 47.1553 49.9692 47.2412 49.9429 47.2773 cv
cp
level3{
gsave
clp
[.0910774 .111544 -.0552605 .0767507 49.8398 47.1514 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0910774 .111544 -.0552605 .0767507 49.8398 47.1514 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.9868 46.9766 mo
50.9912 47.0918 50.8359 47.1953 50.6401 47.2061 cv
50.4448 47.2178 50.2832 47.1328 50.2793 47.0176 cv
50.2749 46.9014 50.4307 46.7988 50.626 46.7881 cv
50.8218 46.7764 50.9834 46.8604 50.9868 46.9766 cv
cp
level3{
gsave
clp
[.314703 -.0183322 .00814766 .243411 50.6328 46.9961 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.314703 -.0183322 .00814766 .243411 50.6328 46.9961 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.2168 46.8633 mo
51.2168 46.9736 51.0845 47.0645 50.9209 47.0645 cv
50.7583 47.0645 50.625 46.9736 50.625 46.8633 cv
50.625 46.7539 50.7583 46.665 50.9209 46.665 cv
51.0845 46.665 51.2168 46.7539 51.2168 46.8633 cv
cp
level3{
gsave
clp
[.26306 0 0 .232471 50.9219 46.8652 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.26306 0 0 .232471 50.9219 46.8652 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.7729 47.2021 mo
49.7612 47.2949 49.5884 47.3359 49.3857 47.2959 cv
49.1831 47.2539 49.0288 47.1445 49.0396 47.0518 cv
49.0513 46.96 49.2241 46.918 49.4268 46.96 cv
49.6284 47.001 49.7837 47.1094 49.7729 47.2021 cv
cp
level3{
gsave
clp
[.325926 .0664113 -.0234994 .196169 49.4077 47.1279 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.325926 .0664113 -.0234994 .196169 49.4077 47.1279 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
52.2524 47.8613 mo
52.2524 47.9736 52.127 48.0645 51.9717 48.0645 cv
51.8164 48.0645 51.6919 47.9736 51.6919 47.8613 cv
51.6919 47.749 51.8164 47.6582 51.9717 47.6582 cv
52.127 47.6582 52.2524 47.749 52.2524 47.8613 cv
cp
level3{
gsave
clp
[.249229 0 0 .236617 51.9707 47.8623 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249229 0 0 .236617 51.9707 47.8623 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.5586 46.9521 mo
51.5586 47.0645 51.4336 47.1553 51.2788 47.1553 cv
51.1235 47.1553 50.998 47.0645 50.998 46.9521 cv
50.998 46.8398 51.1235 46.749 51.2788 46.749 cv
51.4336 46.749 51.5586 46.8398 51.5586 46.9521 cv
cp
level3{
gsave
clp
[.249204 0 0 .236594 51.2769 46.9531 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249204 0 0 .236594 51.2769 46.9531 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.5859 46.5469 mo
57.5859 46.666 57.7627 46.7617 57.9814 46.7617 cv
58.2002 46.7617 58.3779 46.666 58.3779 46.5469 cv
58.3779 46.4277 58.2002 46.332 57.9814 46.332 cv
57.7627 46.332 57.5859 46.4277 57.5859 46.5469 cv
cp
level3{
gsave
clp
[-.351511 0 0 .250737 57.9819 46.5469 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351511 0 0 .250737 57.9819 46.5469 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.7368 46.4609 mo
56.7817 46.6074 57.2056 46.6631 57.6841 46.584 cv
58.1641 46.5049 58.5166 46.3223 58.4727 46.1748 cv
58.4277 46.0273 58.0044 45.9727 57.5254 46.0518 cv
57.0464 46.1309 56.6934 46.3135 56.7368 46.4609 cv
cp
level3{
gsave
clp
[-.771275 .127526 .0928386 .310142 57.6045 46.3164 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.771275 .127526 .0928386 .310142 57.6045 46.3164 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.5015 46.7949 mo
54.5801 46.6641 54.3486 46.4609 53.9854 46.3418 cv
53.623 46.2217 53.2651 46.2314 53.1865 46.3623 cv
53.1094 46.4932 53.3394 46.6953 53.7031 46.8154 cv
54.0664 46.9346 54.4233 46.9258 54.5015 46.7949 cv
cp
level3{
gsave
clp
[.585099 .19197 .165421 -.275701 53.8438 46.5781 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.585099 .19197 .165421 -.275701 53.8438 46.5781 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.9521 46.2852 mo
54.9995 46.1465 54.7231 45.9766 54.3374 45.9063 cv
53.9521 45.835 53.6025 45.8906 53.5557 46.0293 cv
53.5103 46.168 53.7852 46.3379 54.1714 46.4082 cv
54.5566 46.4795 54.9063 46.4238 54.9521 46.2852 cv
cp
level3{
gsave
clp
[.620307 .114267 .0979432 -.292809 54.2554 46.1572 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.620307 .114267 .0979432 -.292809 54.2554 46.1572 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.4971 46.0469 mo
54.4287 46.2168 54.6514 46.417 54.9956 46.4941 cv
55.3398 46.5703 55.6743 46.4951 55.7437 46.3252 cv
55.8125 46.1543 55.5894 45.9531 55.2446 45.877 cv
54.9009 45.8008 54.5664 45.876 54.4971 46.0469 cv
cp
level3{
gsave
clp
[-.55424 -.123505 -.14596 .360307 55.1201 46.1865 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.55424 -.123505 -.14596 .360307 55.1201 46.1865 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.7988 46.3789 mo
54.8315 46.5605 55.2578 46.668 55.7529 46.6201 cv
56.2485 46.5723 56.6235 46.3857 56.5918 46.2051 cv
56.5591 46.0234 56.1318 45.915 55.6372 45.9629 cv
55.1421 46.0117 54.7671 46.1982 54.7988 46.3789 cv
cp
level3{
gsave
clp
[-.796679 .0776251 .0674113 .383018 55.6953 46.29 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.796679 .0776251 .0674113 .383018 55.6953 46.29 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
59.0117 46.6709 mo
59.0898 46.54 58.8584 46.3369 58.4961 46.2178 cv
58.1328 46.0977 57.7744 46.1074 57.6963 46.2383 cv
57.6191 46.3691 57.8501 46.5713 58.2129 46.6914 cv
58.5762 46.8105 58.9341 46.8018 59.0117 46.6709 cv
cp
level3{
gsave
clp
[.584889 .191901 .165361 -.275602 58.354 46.4541 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.584889 .191901 .165361 -.275602 58.354 46.4541 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.126 46.2314 mo
56.0571 46.4014 56.2803 46.6016 56.6235 46.6787 cv
56.9678 46.7559 57.3022 46.6787 57.3716 46.5088 cv
57.4404 46.3389 57.2173 46.1377 56.873 46.0615 cv
56.5298 45.9844 56.1948 46.0605 56.126 46.2314 cv
cp
level3{
gsave
clp
[-.55394 -.123438 -.145881 .360112 56.748 46.3711 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.55394 -.123438 -.145881 .360112 56.748 46.3711 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.7349 46.2109 mo
56.7349 46.3633 57.0356 46.4873 57.4067 46.4873 cv
57.7788 46.4873 58.0791 46.3633 58.0791 46.2109 cv
58.0791 46.0586 57.7788 45.9355 57.4067 45.9355 cv
57.0356 45.9355 56.7349 46.0586 56.7349 46.2109 cv
cp
level3{
gsave
clp
[-.597548 0 0 .321207 57.4072 46.2119 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.597548 0 0 .321207 57.4072 46.2119 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.103 46.5586 mo
54.103 46.6787 54.2798 46.7744 54.4985 46.7744 cv
54.7173 46.7744 54.894 46.6787 54.894 46.5586 cv
54.894 46.4395 54.7173 46.3438 54.4985 46.3438 cv
54.2798 46.3438 54.103 46.4395 54.103 46.5586 cv
cp
level3{
gsave
clp
[-.351547 0 0 .250763 54.4985 46.5596 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351547 0 0 .250763 54.4985 46.5596 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.105 46.5 mo
58.105 46.6201 58.2817 46.7158 58.5005 46.7158 cv
58.7192 46.7158 58.897 46.6201 58.897 46.5 cv
58.897 46.3818 58.7192 46.2852 58.5005 46.2852 cv
58.2817 46.2852 58.105 46.3818 58.105 46.5 cv
cp
level3{
gsave
clp
[-.351793 0 0 .250938 58.501 46.501 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351793 0 0 .250938 58.501 46.501 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.5479 46.6963 mo
55.2646 46.001 54.7993 45 54.1172 43.9512 cv
52.8403 41.9873 51.457 41.501 51.457 41.501 cv
51.457 41.501 52.8174 41.6045 54.3652 43.9219 cv
55.2036 45.1758 55.6431 46.1064 55.8706 46.6963 cv
55.5479 46.6963 li
cp
level3{
gsave
clp
[3.35343 6.61342 5.90006 -3.40678 52.1655 41.0928 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.35343 6.61342 5.90006 -3.40678 52.1655 41.0928 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
56.1899 46.5273 mo
55.8691 46.1455 55.4561 45.707 54.9448 45.2549 cv
53.4058 43.8945 51.7637 43.5469 51.7637 43.5469 cv
51.7637 43.5469 53.3726 43.6328 55.2397 45.2383 cv
55.8286 45.7451 56.2559 46.1758 56.5645 46.5273 cv
56.1899 46.5273 li
cp
level3{
gsave
clp
[2.83739 5.83181 4.81404 -2.91864 53.0576 42.7627 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.83739 5.83181 4.81404 -2.91864 53.0576 42.7627 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
58.166 46.4082 mo
58.147 46.3457 58.1255 46.2813 58.0981 46.2148 cv
57.7319 45.3047 56.4077 44.6416 56.4077 44.6416 cv
56.4077 44.6416 57.9219 45.2207 58.4023 46.3115 cv
58.4165 46.3438 58.4312 46.376 58.4438 46.4082 cv
58.166 46.4082 li
cp
level3{
gsave
clp
[-.0585403 2.15778 3.33451 1.31687 57.4385 45.0488 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0585403 2.15778 3.33451 1.31687 57.4385 45.0488 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.0205 46.6367 mo
56.104 46.2598 56.2432 45.8242 56.4692 45.3486 cv
57.2251 43.7607 58.9126 42.8701 58.9126 42.8701 cv
58.9126 42.8701 57.0557 43.5557 56.104 45.4492 cv
55.8706 45.9141 55.7178 46.3076 55.6187 46.6367 cv
56.0205 46.6367 li
cp
level3{
gsave
clp
[-.40828 4.66379 -4.45749 .801998 57.4072 43.1406 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.40828 4.66379 -4.45749 .801998 57.4072 43.1406 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.498 46.4082 mo
56.4595 46.2051 55.5674 46.1768 55.5674 46.1768 cv
55.5674 46.1768 56.6431 46.1406 57.9497 46.4082 cv
57.498 46.4082 li
cp
level3{
gsave
clp
[2.52699 2.9597 5.96437 -2.29453 56.3896 45.8604 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.52699 2.9597 5.96437 -2.29453 56.3896 45.8604 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.9429 46.2109 mo
55.0532 46.0625 54.3428 46.04 54.3428 46.04 cv
54.3428 46.04 55.249 46.0098 56.4087 46.2109 cv
55.9429 46.2109 li
cp
level3{
gsave
clp
[2.54437 2.98006 6.00539 -2.31031 55.0654 45.7627 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54437 2.98006 6.00539 -2.31031 55.0654 45.7627 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.4214 46.0703 mo
55.1792 45.7686 54.8594 45.4297 54.4395 45.0742 cv
52.9868 43.8467 50.8657 43.4033 50.8657 43.4033 cv
50.8657 43.4033 53.0762 43.6367 54.8594 45.0908 cv
55.3232 45.4697 55.6592 45.7949 55.9043 46.0703 cv
55.4214 46.0703 li
cp
level3{
gsave
clp
[1.70495 4.81432 5.93822 -1.36566 52.7588 42.9688 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.70495 4.81432 5.93822 -1.36566 52.7588 42.9688 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
55.2861 45.7773 mo
53.6997 45.6006 52.2764 45.6162 52.2764 45.6162 cv
52.2764 45.6162 54.0928 45.5156 56.1523 45.7773 cv
55.2861 45.7773 li
cp
level3{
gsave
clp
[3.78838 3.06524 9.95398 -3.24864 53.5874 45.1895 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.78838 3.06524 9.95398 -3.24864 53.5874 45.1895 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.7212 46.4639 mo
55.5215 46.3965 55.3071 46.3281 55.0786 46.2588 cv
52.5933 45.5186 49.4585 45.4863 49.4585 45.4863 cv
49.4585 45.4863 52.6426 45.3428 55.6748 46.2109 cv
55.9814 46.2988 56.2583 46.3828 56.5068 46.4639 cv
55.7212 46.4639 li
cp
level3{
gsave
clp
[4.18772 4.15982 10.4357 -3.69818 51.6934 44.6943 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.18772 4.15982 10.4357 -3.69818 51.6934 44.6943 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.2559 46.5742 mo
56.4829 46.3457 56.7612 46.1055 57.1001 45.8672 cv
58.7534 44.7041 61.3218 44.6211 61.3218 44.6211 cv
61.3218 44.6211 58.6177 44.4355 56.582 45.7988 cv
56.1606 46.0801 55.8354 46.3408 55.5835 46.5742 cv
56.2559 46.5742 li
cp
level3{
gsave
clp
[-2.23064 6.075 -8.9744 -5.11871 59.2451 43.4375 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.23064 6.075 -8.9744 -5.11871 59.2451 43.4375 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.145 46.3926 mo
57.2637 46.3105 57.3984 46.2236 57.5479 46.1338 cv
58.3789 45.6348 59.2583 45.4355 59.2583 45.4355 cv
59.2583 45.4355 58.3975 45.5537 57.3916 46.1445 cv
57.2378 46.2354 57.1055 46.3174 56.9897 46.3926 cv
57.145 46.3926 li
cp
level3{
gsave
clp
[-1.35317 1.85632 -2.25837 -.371474 58.5562 45.3203 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.35317 1.85632 -2.25837 -.371474 58.5562 45.3203 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.7788 46.2148 mo
56.5571 46.0908 56.293 45.96 55.9849 45.8281 cv
54.5879 45.2295 52.9082 45.1367 52.9082 45.1367 cv
52.9082 45.1367 54.5977 45.1006 56.2988 45.8047 cv
56.6636 45.9561 56.9556 46.0928 57.1885 46.2148 cv
56.7788 46.2148 li
cp
level3{
gsave
clp
[2.29792 3.07487 5.13194 -2.13942 54.2329 44.585 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.29792 3.07487 5.13194 -2.13942 54.2329 44.585 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.644 46.5498 mo
57.7622 46.3428 57.9316 46.1104 58.1753 45.8711 cv
58.9521 45.1104 60.2739 44.9287 60.2739 44.9287 cv
60.2739 44.9287 58.8628 44.9609 57.9043 45.8574 cv
57.6152 46.1279 57.4277 46.3584 57.3076 46.5498 cv
57.644 46.5498 li
cp
level3{
gsave
clp
[-.62295 4.60589 -3.13177 -2.44773 59.0317 43.958 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.62295 4.60589 -3.13177 -2.44773 59.0317 43.958 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
56.1567 46.4082 mo
56.0811 46.3594 56.0015 46.3086 55.9175 46.2598 cv
54.6724 45.5156 53.1489 45.3291 53.1489 45.3291 cv
53.1489 45.3291 54.687 45.3721 56.2036 46.249 cv
56.2983 46.3037 56.3867 46.3564 56.4707 46.4082 cv
56.1567 46.4082 li
cp
level3{
gsave
clp
[1.90479 3.48269 4.43179 -1.77488 54.269 44.8799 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.90479 3.48269 4.43179 -1.77488 54.269 44.8799 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.0352 46.4082 mo
57.0615 46.2959 57.1025 46.1777 57.1592 46.0557 cv
57.5669 45.1807 59.02 44.7432 59.02 44.7432 cv
59.02 44.7432 57.3599 45.0566 56.8257 46.0977 cv
56.769 46.208 56.7236 46.3115 56.6885 46.4082 cv
57.0352 46.4082 li
cp
level3{
gsave
clp
[.0681374 2.79046 -4.50827 .0740499 57.8345 44.7627 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0681374 2.79046 -4.50827 .0740499 57.8345 44.7627 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.6704 46.5605 mo
55.8286 46.4199 56.0078 46.2734 56.2119 46.126 cv
57.79 44.9844 60.395 44.6289 60.395 44.6289 cv
60.395 44.6289 57.6289 44.7773 55.6787 46.127 cv
55.4575 46.2803 55.2656 46.4248 55.0977 46.5605 cv
55.6704 46.5605 li
cp
level3{
gsave
clp
[-1.71769 4.71659 -7.98639 -1.8316 58.2749 44.1426 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.71769 4.71659 -7.98639 -1.8316 58.2749 44.1426 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
54.793 46.4697 mo
54.8511 46.3281 54.9326 46.1758 55.0464 46.0156 cv
55.6416 45.167 57.1313 44.6738 57.1313 44.6738 cv
57.1313 44.6738 55.4736 45.0615 54.7173 46.0742 cv
54.6099 46.2188 54.5249 46.3496 54.459 46.4697 cv
54.793 46.4697 li
cp
level3{
gsave
clp
[-.232813 2.42873 -3.98143 .542397 55.8643 44.8467 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.232813 2.42873 -3.98143 .542397 55.8643 44.8467 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
56.688 46.583 mo
56.9717 46.2344 57.437 45.7334 58.1187 45.208 cv
59.3955 44.2246 60.7783 43.9814 60.7783 43.9814 cv
60.7783 43.9814 59.4189 44.0332 57.8701 45.1934 cv
57.0337 45.8213 56.5933 46.2871 56.3657 46.583 cv
56.688 46.583 li
cp
level3{
gsave
clp
[-2.23009 4.39804 -3.92364 -2.26557 59.582 43.29 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.23009 4.39804 -3.92364 -2.26557 59.582 43.29 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.3511 46.6982 mo
56.4805 46.4336 56.6514 46.1357 56.8765 45.8242 cv
57.6519 44.748 58.7852 44.3584 58.7852 44.3584 cv
58.7852 44.3584 57.604 44.5625 56.6514 45.8389 cv
56.4043 46.1709 56.2241 46.457 56.0933 46.6982 cv
56.3511 46.6982 li
cp
level3{
gsave
clp
[-1.31864 3.72349 -4.59274 -1.05623 57.9233 44.1602 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.31864 3.72349 -4.59274 -1.05623 57.9233 44.1602 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
57.8008 46.4873 mo
57.7427 46.3457 57.6602 46.1943 57.5474 46.0332 cv
56.9517 45.1846 55.4614 44.6914 55.4614 44.6914 cv
55.4614 44.6914 57.1196 45.0801 57.8755 46.0928 cv
57.9839 46.2373 58.0679 46.3682 58.1343 46.4873 cv
57.8008 46.4873 li
cp
level3{
gsave
clp
[.232795 2.42854 3.98112 .542355 56.728 44.8643 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.232795 2.42854 3.98112 .542355 56.728 44.8643 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.7764 46.7158 mo
55.8286 46.4414 55.9375 46.0986 56.1523 45.7168 cv
56.7153 44.7139 57.9702 44.1533 57.9702 44.1533 cv
57.9702 44.1533 56.5879 44.5859 55.8813 45.7803 cv
55.6514 46.168 55.5259 46.4766 55.4609 46.7158 cv
55.7764 46.7158 li
cp
level3{
gsave
clp
[-2.50977 0 0 2.50977 57.9707 45.4346 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.50977 0 0 2.50977 57.9707 45.4346 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
54.9238 46.6553 mo
54.73 46.5439 54.5093 46.4268 54.2578 46.3066 cv
52.5352 45.4844 50.0303 45.1836 50.0303 45.1836 cv
50.0303 45.1836 52.6396 45.3447 54.7544 46.3193 cv
55.0142 46.4395 55.2412 46.5508 55.439 46.6553 cv
54.9238 46.6553 li
cp
level3{
gsave
clp
[2.03617 3.22893 7.00732 -.886234 52.1045 44.9209 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.03617 3.22893 7.00732 -.886234 52.1045 44.9209 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
54.3667 46.7227 mo
54.2554 46.2793 54.0942 45.7451 53.8608 45.1807 cv
53.2397 43.6748 52.3398 43.1396 52.3398 43.1396 cv
52.3398 43.1396 53.2769 43.417 54.0386 45.1982 cv
54.3042 45.8193 54.4727 46.3262 54.5796 46.7227 cv
54.3667 46.7227 li
cp
level3{
gsave
clp
[.737321 5.92344 2.51622 -1.74124 53.1646 42.5674 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.737321 5.92344 2.51622 -1.74124 53.1646 42.5674 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.6787 47.2832 mo
57.6787 47.4033 57.8569 47.499 58.0747 47.499 cv
58.2939 47.499 58.4712 47.4033 58.4712 47.2832 cv
58.4712 47.165 58.2939 47.0674 58.0747 47.0674 cv
57.8569 47.0674 57.6787 47.165 57.6787 47.2832 cv
cp
level3{
gsave
clp
[-.352216 0 0 .251239 58.0752 47.2832 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352216 0 0 .251239 58.0752 47.2832 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.9346 47.6299 mo
56.9346 47.749 57.1123 47.8457 57.3311 47.8457 cv
57.5493 47.8457 57.7275 47.749 57.7275 47.6299 cv
57.7275 47.5107 57.5493 47.4141 57.3311 47.4141 cv
57.1123 47.4141 56.9346 47.5107 56.9346 47.6299 cv
cp
level3{
gsave
clp
[-.352344 0 0 .251331 57.3311 47.6299 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352344 0 0 .251331 57.3311 47.6299 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.0996 46.54 mo
57.0996 46.6582 57.2773 46.7559 57.4956 46.7559 cv
57.7144 46.7559 57.8916 46.6582 57.8916 46.54 cv
57.8916 46.4209 57.7144 46.3242 57.4956 46.3242 cv
57.2773 46.3242 57.0996 46.4209 57.0996 46.54 cv
cp
level3{
gsave
clp
[-.352087 0 0 .251147 57.4956 46.54 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352087 0 0 .251147 57.4956 46.54 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.752 47.1533 mo
56.752 47.2725 56.9292 47.3691 57.1479 47.3691 cv
57.3667 47.3691 57.5444 47.2725 57.5444 47.1533 cv
57.5444 47.0342 57.3667 46.9375 57.1479 46.9375 cv
56.9292 46.9375 56.752 47.0342 56.752 47.1533 cv
cp
level3{
gsave
clp
[-.352216 0 0 .251239 57.1484 47.1533 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352216 0 0 .251239 57.1484 47.1533 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.8623 47.1533 mo
55.8623 47.2725 56.0396 47.3691 56.2583 47.3691 cv
56.4766 47.3691 56.6548 47.2725 56.6548 47.1533 cv
56.6548 47.0342 56.4766 46.9375 56.2583 46.9375 cv
56.0396 46.9375 55.8623 47.0342 55.8623 47.1533 cv
cp
level3{
gsave
clp
[-.352216 0 0 .251239 56.2593 47.1533 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352216 0 0 .251239 56.2593 47.1533 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.4829 47.3955 mo
55.4829 47.5146 55.6597 47.6113 55.8784 47.6113 cv
56.0972 47.6113 56.2749 47.5146 56.2749 47.3955 cv
56.2749 47.2764 56.0972 47.1807 55.8784 47.1807 cv
55.6597 47.1807 55.4829 47.2764 55.4829 47.3955 cv
cp
level3{
gsave
clp
[-.351728 0 0 .250892 55.8794 47.3965 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351728 0 0 .250892 55.8794 47.3965 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.1719 46.7949 mo
55.2495 46.6641 55.0176 46.4609 54.6558 46.3418 cv
54.2925 46.2217 53.9341 46.2314 53.856 46.3623 cv
53.7783 46.4932 54.0088 46.6953 54.373 46.8154 cv
54.7358 46.9346 55.0933 46.9258 55.1719 46.7949 cv
cp
level3{
gsave
clp
[.585387 .192064 .165502 -.275837 54.5137 46.5781 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.585387 .192064 .165502 -.275837 54.5137 46.5781 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.4092 46.8369 mo
55.4092 46.9795 55.6763 47.0957 56.0063 47.0957 cv
56.3354 47.0957 56.603 46.9795 56.603 46.8369 cv
56.603 46.6943 56.3354 46.5781 56.0063 46.5781 cv
55.6763 46.5781 55.4092 46.6943 55.4092 46.8369 cv
cp
level3{
gsave
clp
[-.530827 0 0 .301723 56.0059 46.8359 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.530827 0 0 .301723 56.0059 46.8359 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.1309 47.1084 mo
55.231 47.084 55.2715 46.9004 55.2217 46.6982 cv
55.1724 46.4961 55.0508 46.3506 54.9492 46.374 cv
54.8486 46.3984 54.8081 46.5811 54.8579 46.7842 cv
54.9087 46.9863 55.0298 47.1318 55.1309 47.1084 cv
cp
level3{
gsave
clp
[.0797536 .326172 .212676 -.0501016 55.0396 46.7432 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0797536 .326172 .212676 -.0501016 55.0396 46.7432 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
53.7314 47.0684 mo
53.6846 47.2227 53.8994 47.4229 54.2109 47.5146 cv
54.5234 47.6064 54.8154 47.5557 54.8633 47.4004 cv
54.9102 47.2461 54.6953 47.0469 54.3828 46.9541 cv
54.0708 46.8633 53.7788 46.9141 53.7314 47.0684 cv
cp
level3{
gsave
clp
[-.502515 -.148099 -.100094 .326839 54.2974 47.2334 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.502515 -.148099 -.100094 .326839 54.2974 47.2334 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.3306 46.7617 mo
55.3467 46.8604 55.5908 46.9043 55.876 46.8604 cv
56.1621 46.8164 56.3809 46.7021 56.3647 46.6025 cv
56.3491 46.5039 56.1045 46.46 55.8193 46.5039 cv
55.5332 46.5479 55.314 46.6641 55.3306 46.7617 cv
cp
level3{
gsave
clp
[-.458693 .070333 .0336375 .207941 55.8477 46.6826 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.458693 .070333 .0336375 .207941 55.8477 46.6826 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.8677 46.8545 mo
56.8608 46.9971 57.1221 47.124 57.4521 47.1387 cv
57.7813 47.1523 58.0532 47.0479 58.0596 46.9063 cv
58.0664 46.7637 57.8047 46.6367 57.4756 46.6211 cv
57.1465 46.6074 56.874 46.7119 56.8677 46.8545 cv
cp
level3{
gsave
clp
[-.530123 -.0224715 -.0143001 .301323 57.4639 46.8789 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.530123 -.0224715 -.0143001 .301323 57.4639 46.8789 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.1787 46.6504 mo
55.1431 46.7598 55.3525 46.9209 55.646 47.0107 cv
55.9395 47.1016 56.2061 47.085 56.2407 46.9746 cv
56.2754 46.8662 56.0659 46.7041 55.7729 46.6143 cv
55.4795 46.5244 55.2124 46.541 55.1787 46.6504 cv
cp
level3{
gsave
clp
[-.47193 -.14372 -.074408 .231378 55.7109 46.8125 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.47193 -.14372 -.074408 .231378 55.7109 46.8125 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.1206 46.8398 mo
56.1152 46.9619 56.334 47.0713 56.6108 47.084 cv
56.8867 47.0957 57.1147 47.0059 57.1206 46.8828 cv
57.126 46.7607 56.9072 46.6514 56.6304 46.6387 cv
56.354 46.6279 56.1265 46.7168 56.1206 46.8398 cv
cp
level3{
gsave
clp
[-.444624 -.0193758 -.0122374 .259024 56.6206 46.8623 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.444624 -.0193758 -.0122374 .259024 56.6206 46.8623 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.5269 46.8154 mo
56.5269 46.9326 56.7134 47.0273 56.9448 47.0273 cv
57.1753 47.0273 57.3628 46.9326 57.3628 46.8154 cv
57.3628 46.6982 57.1753 46.6035 56.9448 46.6035 cv
56.7134 46.6035 56.5269 46.6982 56.5269 46.8154 cv
cp
level3{
gsave
clp
[-.371691 0 0 .247113 56.9448 46.8135 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.371691 0 0 .247113 56.9448 46.8135 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.8286 46.8467 mo
57.8286 46.9639 58.0156 47.0596 58.2461 47.0596 cv
58.4771 47.0596 58.6641 46.9639 58.6641 46.8467 cv
58.6641 46.7305 58.4771 46.6348 58.2461 46.6348 cv
58.0156 46.6348 57.8286 46.7305 57.8286 46.8467 cv
cp
level3{
gsave
clp
[-.371827 0 0 .247204 58.2466 46.8457 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.371827 0 0 .247204 58.2466 46.8457 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.4165 46.9805 mo
57.457 47.0713 57.7046 47.0557 57.9702 46.9434 cv
58.2358 46.832 58.4189 46.667 58.3789 46.5752 cv
58.3384 46.4834 58.0903 46.5 57.8247 46.6113 cv
57.5596 46.7236 57.3765 46.8887 57.4165 46.9805 cv
cp
level3{
gsave
clp
[-.428431 .179961 .0848681 .193254 57.8955 46.7783 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.428431 .179961 .0848681 .193254 57.8955 46.7783 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.6147 46.6055 mo
57.6548 46.6973 57.9028 46.6816 58.1685 46.5693 cv
58.4341 46.457 58.6172 46.292 58.5762 46.2012 cv
58.5361 46.1104 58.2886 46.126 58.0225 46.2373 cv
57.7568 46.3496 57.5737 46.5137 57.6147 46.6055 cv
cp
level3{
gsave
clp
[-.428143 .179841 .0848112 .193124 58.0933 46.4043 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.428143 .179841 .0848112 .193124 58.0933 46.4043 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.4077 46.9971 mo
54.4019 47.1387 54.6626 47.2656 54.9927 47.2803 cv
55.3218 47.2949 55.5938 47.1914 55.6001 47.0479 cv
55.6069 46.9063 55.3452 46.7783 55.0151 46.7637 cv
54.686 46.75 54.4146 46.8535 54.4077 46.9971 cv
cp
level3{
gsave
clp
[-.529911 -.0224625 -.0142943 .301202 55.0039 47.0215 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.529911 -.0224625 -.0142943 .301202 55.0039 47.0215 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.9287 46.5742 mo
57.8931 46.6836 58.1025 46.8457 58.396 46.9346 cv
58.6895 47.0244 58.9561 47.0088 58.9907 46.8994 cv
59.0254 46.7891 58.8159 46.6279 58.5225 46.5381 cv
58.2295 46.4482 57.9634 46.4648 57.9287 46.5742 cv
cp
level3{
gsave
clp
[-.471964 -.14373 -.0744134 .231395 58.4614 46.7363 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.471964 -.14373 -.0744134 .231395 58.4614 46.7363 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.7363 47.2285 mo
57.7744 47.2676 57.8682 47.2393 57.9482 47.165 cv
58.0283 47.0918 58.063 47.001 58.0264 46.9629 cv
57.9893 46.9248 57.8945 46.9531 57.8145 47.0264 cv
57.7349 47.0996 57.6992 47.1904 57.7363 47.2285 cv
cp
level3{
gsave
clp
[-.128357 .11817 .0784404 .0814965 57.8823 47.0967 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.128357 .11817 .0784404 .0814965 57.8823 47.0967 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.2627 46.9092 mo
56.2568 47.0322 56.4761 47.1416 56.752 47.1533 cv
57.0283 47.165 57.2568 47.0752 57.2622 46.9531 cv
57.2681 46.8301 57.0479 46.7217 56.772 46.709 cv
56.4956 46.6973 56.2681 46.7861 56.2627 46.9092 cv
cp
level3{
gsave
clp
[-.444183 -.0193566 -.0122252 .258767 56.7622 46.9326 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.444183 -.0193566 -.0122252 .258767 56.7622 46.9326 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.938 46.7891 mo
55.938 46.9063 56.125 47.002 56.356 47.002 cv
56.5859 47.002 56.7734 46.9063 56.7734 46.7891 cv
56.7734 46.6729 56.5859 46.5771 56.356 46.5771 cv
56.125 46.5771 55.938 46.6729 55.938 46.7891 cv
cp
level3{
gsave
clp
[-.371872 0 0 .247233 56.356 46.7881 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.371872 0 0 .247233 56.356 46.7881 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.9771 47.1494 mo
57.9927 47.2471 58.2373 47.292 58.5229 47.248 cv
58.8091 47.2041 59.0269 47.0879 59.0117 46.9902 cv
58.9951 46.8916 58.7515 46.8477 58.4658 46.8916 cv
58.1797 46.9355 57.9609 47.0508 57.9771 47.1494 cv
cp
level3{
gsave
clp
[-.458826 .0703534 .0336473 .208001 58.4946 47.0703 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.458826 .0703534 .0336473 .208001 58.4946 47.0703 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.4766 47.8486 mo
54.4766 47.9678 54.6533 48.0645 54.8721 48.0645 cv
55.0908 48.0645 55.2686 47.9678 55.2686 47.8486 cv
55.2686 47.7295 55.0908 47.6328 54.8721 47.6328 cv
54.6533 47.6328 54.4766 47.7295 54.4766 47.8486 cv
cp
level3{
gsave
clp
[-.352099 0 0 .251156 54.8726 47.8486 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352099 0 0 .251156 54.8726 47.8486 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.4556 46.8838 mo
55.4556 47.0029 55.6323 47.0986 55.8511 47.0986 cv
56.0698 47.0986 56.2466 47.0029 56.2466 46.8838 cv
56.2466 46.7646 56.0698 46.668 55.8511 46.668 cv
55.6323 46.668 55.4556 46.7646 55.4556 46.8838 cv
cp
level3{
gsave
clp
[-.351535 0 0 .250754 55.8521 46.8838 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351535 0 0 .250754 55.8521 46.8838 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.8521 46.6543 mo
57.8521 46.7656 57.9746 46.8555 58.1255 46.8555 cv
58.2764 46.8555 58.3989 46.7656 58.3989 46.6543 cv
58.3989 46.5439 58.2764 46.4551 58.1255 46.4551 cv
57.9746 46.4551 57.8521 46.5439 57.8521 46.6543 cv
cp
level3{
gsave
clp
[-.24334 0 0 .23313 58.1255 46.6543 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.24334 0 0 .23313 58.1255 46.6543 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.2656 46.5742 mo
57.2959 46.7119 57.5889 46.7617 57.9204 46.6885 cv
58.2515 46.6162 58.4951 46.4463 58.4648 46.3086 cv
58.4341 46.1729 58.1421 46.1211 57.8105 46.1953 cv
57.479 46.2686 57.2349 46.4385 57.2656 46.5742 cv
cp
level3{
gsave
clp
[-.533253 .118501 .0635858 .287581 57.8667 46.4434 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.533253 .118501 .0635858 .287581 57.8667 46.4434 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.7202 46.8848 mo
55.7749 46.7637 55.6143 46.5742 55.3638 46.4639 cv
55.1128 46.3525 54.8662 46.3623 54.8115 46.4834 cv
54.7578 46.6045 54.9175 46.793 55.1689 46.9033 cv
55.4199 47.0146 55.6665 47.0068 55.7202 46.8848 cv
cp
level3{
gsave
clp
[.403754 .179446 .114325 -.256145 55.2651 46.6816 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.403754 .179446 .114325 -.256145 55.2651 46.6816 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.0313 46.4121 mo
56.0645 46.2822 55.874 46.125 55.6069 46.0605 cv
55.3413 45.9932 55.0991 46.0449 55.0664 46.1748 cv
55.0347 46.3027 55.2256 46.46 55.4917 46.5264 cv
55.7588 46.5918 56 46.541 56.0313 46.4121 cv
cp
level3{
gsave
clp
[.429271 .105511 .0679318 -.271727 55.5474 46.2939 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.429271 .105511 .0679318 -.271727 55.5474 46.2939 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.7173 46.1904 mo
55.6694 46.3496 55.8237 46.5352 56.062 46.6064 cv
56.2998 46.6777 56.5313 46.6074 56.5781 46.4492 cv
56.626 46.29 56.4722 46.1045 56.2339 46.0332 cv
55.9966 45.9619 55.7651 46.0322 55.7173 46.1904 cv
cp
level3{
gsave
clp
[-.383687 -.114382 -.101351 .334459 56.1479 46.3193 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.383687 -.114382 -.101351 .334459 56.1479 46.3193 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.9263 46.499 mo
55.9478 46.668 56.2432 46.7676 56.585 46.7227 cv
56.9277 46.6787 57.187 46.5049 57.165 46.3369 cv
57.1426 46.168 56.8467 46.0674 56.5049 46.1123 cv
56.1626 46.1582 55.9033 46.3301 55.9263 46.499 cv
cp
level3{
gsave
clp
[-.550936 .0723013 .0462728 .355722 56.5454 46.417 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.550936 .0723013 .0462728 .355722 56.5454 46.417 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.8379 46.7695 mo
58.8916 46.6484 58.7319 46.46 58.481 46.3496 cv
58.2305 46.2383 57.9824 46.2471 57.9287 46.3682 cv
57.875 46.4902 58.0347 46.6787 58.2856 46.7891 cv
58.5366 46.9004 58.7842 46.8916 58.8379 46.7695 cv
cp
level3{
gsave
clp
[.403919 .17952 .114371 -.25625 58.3823 46.5674 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.403919 .17952 .114371 -.25625 58.3823 46.5674 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.8428 46.3623 mo
56.7954 46.5205 56.9497 46.7061 57.187 46.7773 cv
57.4253 46.8486 57.6563 46.7783 57.7046 46.6201 cv
57.7515 46.4619 57.5972 46.2754 57.3599 46.2051 cv
57.1221 46.1328 56.8906 46.2031 56.8428 46.3623 cv
cp
level3{
gsave
clp
[-.383691 -.114383 -.101352 .334463 57.2739 46.4912 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.383691 -.114383 -.101352 .334463 57.2739 46.4912 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.2637 46.3428 mo
57.2637 46.4844 57.4717 46.5986 57.728 46.5986 cv
57.9854 46.5986 58.1934 46.4844 58.1934 46.3428 cv
58.1934 46.2012 57.9854 46.0869 57.728 46.0869 cv
57.4717 46.0869 57.2637 46.2012 57.2637 46.3428 cv
cp
level3{
gsave
clp
[-.413691 0 0 .297973 57.7285 46.3418 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.413691 0 0 .297973 57.7285 46.3418 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.4448 46.666 mo
55.4448 46.7764 55.5669 46.8662 55.7178 46.8662 cv
55.8691 46.8662 55.9917 46.7764 55.9917 46.666 cv
55.9917 46.5557 55.8691 46.4668 55.7178 46.4668 cv
55.5669 46.4668 55.4448 46.5557 55.4448 46.666 cv
cp
level3{
gsave
clp
[-.243115 0 0 .232915 55.7183 46.665 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243115 0 0 .232915 55.7183 46.665 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.2109 46.6113 mo
58.2109 46.7227 58.3335 46.8125 58.4849 46.8125 cv
58.6353 46.8125 58.7583 46.7227 58.7583 46.6113 cv
58.7583 46.501 58.6353 46.4121 58.4849 46.4121 cv
58.3335 46.4121 58.2109 46.501 58.2109 46.6113 cv
cp
level3{
gsave
clp
[-.243503 0 0 .233287 58.4849 46.6113 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243503 0 0 .233287 58.4849 46.6113 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.4434 46.793 mo
56.2476 46.1475 55.9263 45.2178 55.4546 44.2441 cv
54.5728 42.4199 53.6162 41.9688 53.6162 41.9688 cv
53.6162 41.9688 54.5566 42.0654 55.6265 44.2168 cv
56.2051 45.3818 56.5093 46.2451 56.6665 46.793 cv
56.4434 46.793 li
cp
level3{
gsave
clp
[2.85203 5.62458 5.01788 -2.8974 53.9526 41.7744 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.85203 5.62458 5.01788 -2.8974 53.9526 41.7744 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
56.8877 46.6367 mo
56.665 46.2822 56.3809 45.875 56.0269 45.4551 cv
54.9629 44.1904 53.8281 43.8682 53.8281 43.8682 cv
53.8281 43.8682 54.9404 43.9482 56.231 45.4395 cv
56.6377 45.9102 56.9331 46.3105 57.1465 46.6367 cv
56.8877 46.6367 li
cp
level3{
gsave
clp
[2.30244 4.7323 3.90642 -2.36837 54.5894 43.4072 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.30244 4.7323 3.90642 -2.36837 54.5894 43.4072 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
58.2529 46.5264 mo
58.2402 46.4678 58.2251 46.4082 58.2061 46.3457 cv
57.9536 45.502 57.0381 44.8848 57.0381 44.8848 cv
57.0381 44.8848 58.0845 45.4229 58.4165 46.4365 cv
58.4263 46.4668 58.4355 46.4971 58.4443 46.5264 cv
58.2529 46.5264 li
cp
level3{
gsave
clp
[-.0634302 2.33802 3.61304 1.42687 57.7554 45.168 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0634302 2.33802 3.61304 1.42687 57.7554 45.168 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.7705 46.7383 mo
56.8286 46.3887 56.9238 45.9834 57.0806 45.543 cv
57.603 44.0664 58.769 43.2393 58.769 43.2393 cv
58.769 43.2393 57.4854 43.877 56.8276 45.6357 cv
56.6665 46.0674 56.5605 46.4326 56.4927 46.7383 cv
56.7705 46.7383 li
cp
level3{
gsave
clp
[-.394853 4.51041 -4.31089 .775622 57.7681 43.4189 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394853 4.51041 -4.31089 .775622 57.7681 43.4189 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.7915 46.5264 mo
57.0737 46.3379 56.457 46.3115 56.457 46.3115 cv
56.457 46.3115 57.2007 46.2783 58.1035 46.5264 cv
57.7915 46.5264 li
cp
level3{
gsave
clp
[1.86728 2.18702 4.40727 -1.69551 57.0078 46.0996 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86728 2.18702 4.40727 -1.69551 57.0078 46.0996 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.7168 46.3428 mo
56.1016 46.2051 55.6104 46.1836 55.6104 46.1836 cv
55.6104 46.1836 56.2368 46.1553 57.0381 46.3428 cv
56.7168 46.3428 li
cp
level3{
gsave
clp
[1.86661 2.18624 4.40569 -1.6949 56.0967 45.9971 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86661 2.18624 4.40569 -1.6949 56.0967 45.9971 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.3564 46.2119 mo
56.1885 45.9316 55.9678 45.6172 55.6772 45.2871 cv
54.6738 44.1465 53.208 43.7344 53.208 43.7344 cv
53.208 43.7344 54.7354 43.9521 55.9678 45.3018 cv
56.2886 45.6543 56.5205 45.957 56.6899 46.2119 cv
56.3564 46.2119 li
cp
level3{
gsave
clp
[1.46094 4.12532 5.08837 -1.17022 54.4121 43.458 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.46094 4.12532 5.08837 -1.17022 54.4121 43.458 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
56.2627 45.9404 mo
55.1655 45.7764 54.1821 45.79 54.1821 45.79 cv
54.1821 45.79 55.438 45.6963 56.8608 45.9404 cv
56.2627 45.9404 li
cp
level3{
gsave
clp
[2.72184 2.20229 7.15165 -2.33405 55.0708 45.501 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.72184 2.20229 7.15165 -2.33405 55.0708 45.501 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.564 46.5771 mo
56.4253 46.5146 56.2769 46.4512 56.1191 46.3877 cv
54.4019 45.7002 52.2344 45.6689 52.2344 45.6689 cv
52.2344 45.6689 54.4355 45.5371 56.5313 46.3428 cv
56.7432 46.4238 56.9346 46.5029 57.106 46.5771 cv
56.564 46.5771 li
cp
level3{
gsave
clp
[3.17463 3.15348 7.91108 -2.80351 53.6934 45.1523 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.17463 3.15348 7.91108 -2.80351 53.6934 45.1523 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.9331 46.6807 mo
57.0894 46.4668 57.2817 46.2451 57.5161 46.0234 cv
58.6587 44.9434 60.4341 44.8662 60.4341 44.8662 cv
60.4341 44.8662 58.5654 44.6934 57.1582 45.96 cv
56.8672 46.2217 56.6426 46.4629 56.4678 46.6807 cv
56.9331 46.6807 li
cp
level3{
gsave
clp
[-1.74007 4.73897 -7.00073 -3.99299 59.0693 44.0879 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.74007 4.73897 -7.00073 -3.99299 59.0693 44.0879 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.5474 46.5107 mo
57.6299 46.4355 57.7222 46.3545 57.8257 46.2715 cv
58.4009 45.8086 59.0083 45.623 59.0083 45.623 cv
59.0083 45.623 58.4126 45.7324 57.7173 46.2822 cv
57.6118 46.3652 57.52 46.4414 57.4404 46.5107 cv
57.5474 46.5107 li
cp
level3{
gsave
clp
[-1.16539 1.59871 -1.94497 -.319923 58.5962 45.5557 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.16539 1.59871 -1.94497 -.319923 58.5962 45.5557 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.2944 46.3467 mo
57.1411 46.2314 56.9585 46.1094 56.7456 45.9863 cv
55.7798 45.4307 54.6187 45.3457 54.6187 45.3457 cv
54.6187 45.3457 55.7866 45.3115 56.9624 45.9658 cv
57.2144 46.1055 57.4165 46.2334 57.5776 46.3467 cv
57.2944 46.3467 li
cp
level3{
gsave
clp
[1.7938 2.4003 4.0061 -1.67007 55.4614 44.9941 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.7938 2.4003 4.0061 -1.67007 55.4614 44.9941 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.8921 46.6572 mo
57.9741 46.4658 58.0903 46.249 58.2598 46.0273 cv
58.7964 45.3203 59.7104 45.1514 59.7104 45.1514 cv
59.7104 45.1514 58.7349 45.1816 58.0723 46.0146 cv
57.8726 46.2656 57.7432 46.4795 57.6602 46.6572 cv
57.8921 46.6572 li
cp
level3{
gsave
clp
[-.491511 3.63407 -2.47098 -1.93127 58.8755 44.499 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.491511 3.63407 -2.47098 -1.93127 58.8755 44.499 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
56.8647 46.5264 mo
56.812 46.4805 56.7568 46.4336 56.6992 46.3877 cv
55.8384 45.6973 54.7852 45.5234 54.7852 45.5234 cv
54.7852 45.5234 55.8481 45.5635 56.8965 46.3789 cv
56.9624 46.4297 57.0239 46.4785 57.0811 46.5264 cv
56.8647 46.5264 li
cp
level3{
gsave
clp
[1.51977 2.77873 3.53599 -1.41612 55.502 45.2363 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.51977 2.77873 3.53599 -1.41612 55.502 45.2363 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.4717 46.5264 mo
57.4897 46.4209 57.5176 46.3125 57.5581 46.1982 cv
57.8394 45.3857 58.8433 44.9795 58.8433 44.9795 cv
58.8433 44.9795 57.6958 45.2715 57.3262 46.2373 cv
57.2871 46.3398 57.2568 46.4365 57.2319 46.5264 cv
57.4717 46.5264 li
cp
level3{
gsave
clp
[.0636263 2.60572 -4.20979 .0691474 58.0195 44.9932 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0636263 2.60572 -4.20979 .0691474 58.0195 44.9932 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.5283 46.668 mo
56.6372 46.5361 56.7622 46.4014 56.9028 46.2646 cv
57.9927 45.2031 59.7935 44.874 59.7935 44.874 cv
59.7935 44.874 57.8818 45.0107 56.5342 46.2646 cv
56.3813 46.4072 56.2485 46.541 56.1323 46.668 cv
56.5283 46.668 li
cp
level3{
gsave
clp
[-1.43768 3.94769 -6.68445 -1.53302 58.4053 44.5557 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.43768 3.94769 -6.68445 -1.53302 58.4053 44.5557 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
55.9214 46.583 mo
55.9614 46.4521 56.0181 46.3105 56.0962 46.1611 cv
56.5078 45.373 57.5381 44.915 57.5381 44.915 cv
57.5381 44.915 56.3921 45.2744 55.8691 46.2158 cv
55.7949 46.3496 55.7368 46.4717 55.6914 46.583 cv
55.9214 46.583 li
cp
level3{
gsave
clp
[-.228152 2.3801 -3.90172 .531537 56.6831 45.0313 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.228152 2.3801 -3.90172 .531537 56.6831 45.0313 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
57.2319 46.6885 mo
57.4277 46.3652 57.7495 45.8994 58.2207 45.4121 cv
59.1025 44.498 60.0591 44.2725 60.0591 44.2725 cv
60.0591 44.2725 59.1187 44.3203 58.0483 45.3984 cv
57.4702 45.9805 57.166 46.4131 57.0088 46.6885 cv
57.2319 46.6885 li
cp
level3{
gsave
clp
[-1.8091 3.56779 -3.18295 -1.83788 59.353 43.8643 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.8091 3.56779 -3.18295 -1.83788 59.353 43.8643 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.9985 46.7959 mo
57.0879 46.5498 57.207 46.2734 57.3618 45.9834 cv
57.8975 44.9834 58.6812 44.6221 58.6812 44.6221 cv
58.6812 44.6221 57.8643 44.8125 57.207 45.9971 cv
57.0352 46.3057 56.9111 46.5713 56.8203 46.7959 cv
56.9985 46.7959 li
cp
level3{
gsave
clp
[-1.15946 3.27401 -4.03833 -.928728 58.1763 44.5059 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.15946 3.27401 -4.03833 -.928728 58.1763 44.5059 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
58.0005 46.5996 mo
57.9604 46.4688 57.9038 46.3271 57.8257 46.1777 cv
57.4141 45.3896 56.3838 44.9316 56.3838 44.9316 cv
56.3838 44.9316 57.5298 45.291 58.0527 46.2324 cv
58.1274 46.3672 58.1851 46.4893 58.231 46.5996 cv
58.0005 46.5996 li
cp
level3{
gsave
clp
[.228146 2.38004 3.90161 .531523 57.2383 45.0479 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.228146 2.38004 3.90161 .531523 57.2383 45.0479 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.6016 46.8125 mo
56.6377 46.5566 56.7129 46.2383 56.8618 45.8838 cv
57.2505 44.9531 58.1177 44.4316 58.1177 44.4316 cv
58.1177 44.4316 57.1631 44.834 56.6743 45.9434 cv
56.5151 46.3027 56.4282 46.5898 56.3838 46.8125 cv
56.6016 46.8125 li
cp
level3{
gsave
clp
[-1.7334 0 0 1.7334 58.1172 45.6221 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.7334 0 0 1.7334 58.1172 45.6221 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.0122 46.7559 mo
55.8784 46.6514 55.7256 46.543 55.5522 46.4326 cv
54.3613 45.668 52.6299 45.3887 52.6299 45.3887 cv
52.6299 45.3887 54.4336 45.5381 55.895 46.4434 cv
56.0752 46.5547 56.2314 46.6592 56.3687 46.7559 cv
56.0122 46.7559 li
cp
level3{
gsave
clp
[1.73799 2.75608 5.98115 -.756452 53.9614 45.2197 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.73799 2.75608 5.98115 -.756452 53.9614 45.2197 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
55.6274 46.8184 mo
55.5498 46.4063 55.439 45.9102 55.2769 45.3857 cv
54.8486 43.9873 54.2261 43.4902 54.2261 43.4902 cv
54.2261 43.4902 54.8735 43.7471 55.4004 45.4023 cv
55.584 45.9795 55.7007 46.4502 55.7749 46.8184 cv
55.6274 46.8184 li
cp
level3{
gsave
clp
[.632027 5.07753 2.15689 -1.49258 54.7471 43.1289 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.632027 5.07753 2.15689 -1.49258 54.7471 43.1289 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.9165 47.3398 mo
57.9165 47.4502 58.0391 47.5391 58.1904 47.5391 cv
58.3418 47.5391 58.4644 47.4502 58.4644 47.3398 cv
58.4644 47.2285 58.3418 47.1387 58.1904 47.1387 cv
58.0391 47.1387 57.9165 47.2285 57.9165 47.3398 cv
cp
level3{
gsave
clp
[-.243627 0 0 .233405 58.1904 47.3379 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243627 0 0 .233405 58.1904 47.3379 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.4019 47.6611 mo
57.4019 47.7715 57.5244 47.8604 57.6758 47.8604 cv
57.8271 47.8604 57.9497 47.7715 57.9497 47.6611 cv
57.9497 47.5508 57.8271 47.4609 57.6758 47.4609 cv
57.5244 47.4609 57.4019 47.5508 57.4019 47.6611 cv
cp
level3{
gsave
clp
[-.243411 0 0 .233198 57.6758 47.6592 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243411 0 0 .233198 57.6758 47.6592 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.5161 46.6484 mo
57.5161 46.7588 57.6387 46.8486 57.79 46.8486 cv
57.9409 46.8486 58.063 46.7588 58.063 46.6484 cv
58.063 46.5371 57.9409 46.4482 57.79 46.4482 cv
57.6387 46.4482 57.5161 46.5371 57.5161 46.6484 cv
cp
level3{
gsave
clp
[-.243345 0 0 .233135 57.7896 46.6475 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243345 0 0 .233135 57.7896 46.6475 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.2759 47.2188 mo
57.2759 47.3291 57.3984 47.418 57.5493 47.418 cv
57.7002 47.418 57.8228 47.3291 57.8228 47.2188 cv
57.8228 47.1074 57.7002 47.0176 57.5493 47.0176 cv
57.3984 47.0176 57.2759 47.1074 57.2759 47.2188 cv
cp
level3{
gsave
clp
[-.243366 0 0 .233155 57.5493 47.2168 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243366 0 0 .233155 57.5493 47.2168 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.6606 47.2188 mo
56.6606 47.3291 56.7832 47.418 56.9346 47.418 cv
57.0859 47.418 57.2085 47.3291 57.2085 47.2188 cv
57.2085 47.1074 57.0859 47.0176 56.9346 47.0176 cv
56.7832 47.0176 56.6606 47.1074 56.6606 47.2188 cv
cp
level3{
gsave
clp
[-.243583 0 0 .233362 56.9346 47.2168 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243583 0 0 .233362 56.9346 47.2168 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.3979 47.4434 mo
56.3979 47.5537 56.5205 47.6436 56.6719 47.6436 cv
56.8228 47.6436 56.9458 47.5537 56.9458 47.4434 cv
56.9458 47.333 56.8228 47.2432 56.6719 47.2432 cv
56.5205 47.2432 56.3979 47.333 56.3979 47.4434 cv
cp
level3{
gsave
clp
[-.243624 0 0 .233402 56.6719 47.4424 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243624 0 0 .233402 56.6719 47.4424 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.1831 46.8848 mo
56.2368 46.7637 56.0771 46.5742 55.8271 46.4639 cv
55.5757 46.3525 55.3286 46.3623 55.2739 46.4834 cv
55.2202 46.6045 55.3799 46.793 55.6318 46.9033 cv
55.8823 47.0146 56.1289 47.0068 56.1831 46.8848 cv
cp
level3{
gsave
clp
[.40391 .179516 .114369 -.256244 55.728 46.6816 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40391 .179516 .114369 -.256244 55.728 46.6816 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.3472 46.9238 mo
56.3472 47.0566 56.5322 47.1641 56.7603 47.1641 cv
56.9883 47.1641 57.1729 47.0566 57.1729 46.9238 cv
57.1729 46.792 56.9883 46.6836 56.7603 46.6836 cv
56.5322 46.6836 56.3472 46.792 56.3472 46.9238 cv
cp
level3{
gsave
clp
[-.367168 0 0 .280093 56.7603 46.9238 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.367168 0 0 .280093 56.7603 46.9238 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.1553 47.1758 mo
56.2241 47.1533 56.2529 46.9844 56.2183 46.7959 cv
56.1841 46.6074 56.0991 46.4727 56.0298 46.4941 cv
55.96 46.5176 55.9321 46.6875 55.9668 46.875 cv
56.0015 47.0635 56.0854 47.1982 56.1553 47.1758 cv
cp
level3{
gsave
clp
[.0552029 .303616 .146723 -.0464866 56.0903 46.835 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0552029 .303616 .146723 -.0464866 56.0903 46.835 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.1885 47.1396 mo
55.1558 47.2832 55.3042 47.4688 55.52 47.5537 cv
55.7363 47.6387 55.9375 47.5918 55.9697 47.4482 cv
56.0034 47.3037 55.854 47.1191 55.6387 47.0342 cv
55.4229 46.9482 55.2212 46.9961 55.1885 47.1396 cv
cp
level3{
gsave
clp
[-.346889 -.13731 -.0693779 .303528 55.5776 47.2939 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.346889 -.13731 -.0693779 .303528 55.5776 47.2939 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.293 46.8545 mo
56.3042 46.9463 56.4731 46.9873 56.6704 46.9463 cv
56.8677 46.9053 57.019 46.7988 57.0078 46.707 cv
56.9971 46.6152 56.8286 46.5742 56.6313 46.6143 cv
56.4336 46.6563 56.2817 46.7637 56.293 46.8545 cv
cp
level3{
gsave
clp
[-.318498 .0651473 .0231635 .192546 56.6504 46.7813 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.318498 .0651473 .0231635 .192546 56.6504 46.7813 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.356 46.9404 mo
57.3511 47.0732 57.5322 47.1914 57.7593 47.2041 cv
57.9868 47.2178 58.1753 47.1211 58.1797 46.9883 cv
58.1841 46.8564 58.0034 46.7383 57.7759 46.7246 cv
57.5488 46.7119 57.3604 46.8076 57.356 46.9404 cv
cp
level3{
gsave
clp
[-.365861 -.0216914 -.0101226 .279096 57.7681 46.9648 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.365861 -.0216914 -.0101226 .279096 57.7681 46.9648 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.1885 46.751 mo
56.1636 46.8525 56.3091 47.0029 56.5117 47.0859 cv
56.7144 47.1689 56.8979 47.1543 56.9224 47.0527 cv
56.9468 46.9502 56.8013 46.8008 56.5991 46.7178 cv
56.3965 46.6348 56.2119 46.6494 56.1885 46.751 cv
cp
level3{
gsave
clp
[-.326753 -.13446 -.0506033 .21398 56.5552 46.9023 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.326753 -.13446 -.0506033 .21398 56.5552 46.9023 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.8394 46.9268 mo
56.8354 47.041 56.9873 47.1416 57.1782 47.1533 cv
57.3687 47.165 57.5259 47.0811 57.5308 46.9668 cv
57.5347 46.8535 57.3823 46.752 57.1919 46.7402 cv
57.001 46.7295 56.8428 46.8125 56.8394 46.9268 cv
cp
level3{
gsave
clp
[-.307486 -.0174049 -.00870243 .240767 57.1851 46.9473 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.307486 -.0174049 -.00870243 .240767 57.1851 46.9473 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.1196 46.9043 mo
57.1196 47.0137 57.249 47.1016 57.4087 47.1016 cv
57.5679 47.1016 57.6978 47.0137 57.6978 46.9043 cv
57.6978 46.7959 57.5679 46.708 57.4087 46.708 cv
57.249 46.708 57.1196 46.7959 57.1196 46.9043 cv
cp
level3{
gsave
clp
[-.256558 0 0 .230467 57.4087 46.9063 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.256558 0 0 .230467 57.4087 46.9063 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.02 46.9336 mo
58.02 47.043 58.1494 47.1309 58.3081 47.1309 cv
58.4678 47.1309 58.5972 47.043 58.5972 46.9336 cv
58.5972 46.8252 58.4678 46.7373 58.3081 46.7373 cv
58.1494 46.7373 58.02 46.8252 58.02 46.9336 cv
cp
level3{
gsave
clp
[-.256291 0 0 .230228 58.3086 46.9355 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.256291 0 0 .230228 58.3086 46.9355 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.7358 47.0576 mo
57.7627 47.1416 57.9346 47.1279 58.1177 47.0234 cv
58.3018 46.9199 58.4277 46.7666 58.3999 46.6816 cv
58.3721 46.5967 58.2007 46.6113 58.0171 46.7148 cv
57.8335 46.8193 57.7075 46.9727 57.7358 47.0576 cv
cp
level3{
gsave
clp
[-.295122 .167815 .0593138 .179388 58.0654 46.8672 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.295122 .167815 .0593138 .179388 58.0654 46.8672 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.8716 46.709 mo
57.8999 46.7949 58.0708 46.7793 58.2544 46.6748 cv
58.4385 46.5713 58.5649 46.4189 58.5366 46.334 cv
58.5088 46.248 58.3379 46.2646 58.1538 46.3672 cv
57.9702 46.4717 57.8438 46.625 57.8716 46.709 cv
cp
level3{
gsave
clp
[-.294994 .167742 .0592881 .17931 58.2017 46.5195 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.294994 .167742 .0592881 .17931 58.2017 46.5195 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.6558 47.0723 mo
55.6509 47.2051 55.8315 47.3232 56.0601 47.3359 cv
56.2871 47.3496 56.4751 47.2529 56.479 47.1211 cv
56.4844 46.9883 56.3037 46.8691 56.0752 46.8564 cv
55.8481 46.8428 55.6606 46.9404 55.6558 47.0723 cv
cp
level3{
gsave
clp
[-.365751 -.0216848 -.0101196 .279012 56.0674 47.0967 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.365751 -.0216848 -.0101196 .279012 56.0674 47.0967 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.0889 46.6797 mo
58.0649 46.7822 58.2095 46.9316 58.4121 47.0146 cv
58.6147 47.0986 58.7983 47.084 58.8228 46.9814 cv
58.8472 46.8799 58.7026 46.7295 58.4995 46.6475 cv
58.2969 46.5635 58.1123 46.5781 58.0889 46.6797 cv
cp
level3{
gsave
clp
[-.326519 -.134364 -.050567 .213826 58.4556 46.832 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.326519 -.134364 -.050567 .213826 58.4556 46.832 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.9565 47.2881 mo
57.9824 47.3232 58.0474 47.2979 58.1025 47.2295 cv
58.1577 47.1611 58.1821 47.0771 58.1563 47.041 cv
58.1304 47.0059 58.0654 47.0322 58.0103 47.0996 cv
57.9551 47.168 57.9302 47.252 57.9565 47.2881 cv
cp
level3{
gsave
clp
[-.000780303 .000956501 .000465665 .000654448 590.769 250.462 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.000780303 .000956501 .000465665 .000654448 590.769 250.462 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.9375 46.9912 mo
56.9331 47.1055 57.085 47.207 57.2759 47.2188 cv
57.4673 47.2285 57.6245 47.1455 57.6284 47.0322 cv
57.6318 46.917 57.4805 46.8164 57.2896 46.8057 cv
57.0986 46.7939 56.9414 46.877 56.9375 46.9912 cv
cp
level3{
gsave
clp
[-.307346 -.0173969 -.00869847 .240658 57.2827 47.0127 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.307346 -.0173969 -.00869847 .240658 57.2827 47.0127 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.7129 46.8799 mo
56.7129 46.9893 56.8423 47.0781 57.002 47.0781 cv
57.1606 47.0781 57.29 46.9893 57.29 46.8799 cv
57.29 46.7725 57.1606 46.6836 57.002 46.6836 cv
56.8423 46.6836 56.7129 46.7725 56.7129 46.8799 cv
cp
level3{
gsave
clp
[-.256508 0 0 .230423 57.0015 46.8818 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.256508 0 0 .230423 57.0015 46.8818 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.1221 47.2148 mo
58.1338 47.3057 58.3022 47.3467 58.5005 47.3066 cv
58.6973 47.2656 58.8486 47.1582 58.8379 47.0664 cv
58.8267 46.9746 58.6577 46.9336 58.4595 46.9746 cv
58.2632 47.0156 58.1118 47.123 58.1221 47.2148 cv
cp
level3{
gsave
clp
[-.318916 .0652329 .0231939 .192799 58.48 47.1416 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.318916 .0652329 .0231939 .192799 58.48 47.1416 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.7026 47.8633 mo
55.7026 47.9746 55.8252 48.0645 55.9766 48.0645 cv
56.1279 48.0645 56.2505 47.9746 56.2505 47.8633 cv
56.2505 47.7529 56.1279 47.6641 55.9766 47.6641 cv
55.8252 47.6641 55.7026 47.7529 55.7026 47.8633 cv
cp
level3{
gsave
clp
[-.243615 0 0 .233394 55.9766 47.8633 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243615 0 0 .233394 55.9766 47.8633 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.3794 46.9668 mo
56.3794 47.0781 56.502 47.168 56.6528 47.168 cv
56.8042 47.168 56.9268 47.0781 56.9268 46.9668 cv
56.9268 46.8574 56.8042 46.7676 56.6528 46.7676 cv
56.502 46.7676 56.3794 46.8574 56.3794 46.9668 cv
cp
level3{
gsave
clp
[-.243496 0 0 .23328 56.6533 46.9668 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243496 0 0 .23328 56.6533 46.9668 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.7056 46.5234 mo
57.7056 46.6445 57.5063 46.7422 57.2612 46.7422 cv
57.0161 46.7422 56.8174 46.6445 56.8174 46.5234 cv
56.8174 46.4023 57.0161 46.3047 57.2612 46.3047 cv
57.5063 46.3047 57.7056 46.4023 57.7056 46.5234 cv
cp
level3{
gsave
clp
[.394867 0 0 .255001 57.2617 46.5225 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394867 0 0 .255001 57.2617 46.5225 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.6572 46.4355 mo
58.6069 46.585 58.1323 46.6416 57.5947 46.5605 cv
57.0571 46.4805 56.6621 46.2949 56.7114 46.1445 cv
56.7603 45.9961 57.2358 45.9395 57.7734 46.0205 cv
58.3101 46.1006 58.7061 46.2852 58.6572 46.4355 cv
cp
level3{
gsave
clp
[.864756 .128701 -.104118 .315245 57.686 46.2891 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.864756 .128701 -.104118 .315245 57.686 46.2891 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
61.1636 46.7744 mo
61.0752 46.6416 61.3354 46.4355 61.7417 46.3145 cv
62.1484 46.1924 62.5493 46.2021 62.6372 46.3359 cv
62.7241 46.4678 62.4653 46.6738 62.0576 46.7959 cv
61.6509 46.917 61.2505 46.9072 61.1636 46.7744 cv
cp
level3{
gsave
clp
[-.655024 .195206 -.185084 -.280518 61.8994 46.5547 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.655024 .195206 -.185084 -.280518 61.8994 46.5547 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
60.6582 46.2568 mo
60.605 46.1162 60.9155 45.9434 61.3472 45.8721 cv
61.7788 45.7998 62.1714 45.8555 62.2231 45.9971 cv
62.2749 46.1377 61.9668 46.3105 61.5337 46.3828 cv
61.1016 46.4541 60.7095 46.3984 60.6582 46.2568 cv
cp
level3{
gsave
clp
[-.694731 .115548 -.10977 -.297536 61.4404 46.127 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.694731 .115548 -.10977 -.297536 61.4404 46.127 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
61.168 46.0156 mo
61.2451 46.1885 60.9956 46.3916 60.6089 46.4697 cv
60.2241 46.5469 59.8486 46.4707 59.7715 46.2979 cv
59.6934 46.124 59.9438 45.9209 60.3306 45.8428 cv
60.7158 45.7646 61.0908 45.8418 61.168 46.0156 cv
cp
level3{
gsave
clp
[.620813 -.125606 .163144 .365269 60.4702 46.1572 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.620813 -.125606 .163144 .365269 60.4702 46.1572 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
60.8301 46.3525 mo
60.7935 46.5371 60.3154 46.6465 59.7607 46.5977 cv
59.2046 46.5479 58.7842 46.3594 58.8198 46.1748 cv
58.856 45.9912 59.335 45.8818 59.8901 45.9297 cv
60.4448 45.9795 60.8652 46.168 60.8301 46.3525 cv
cp
level3{
gsave
clp
[.893728 .0782193 -.0753223 .389648 59.8237 46.2637 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.893728 .0782193 -.0753223 .389648 59.8237 46.2637 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.1069 46.6484 mo
56.019 46.5156 56.2788 46.3096 56.6851 46.1885 cv
57.0918 46.0674 57.4937 46.0771 57.5815 46.209 cv
57.6685 46.3428 57.4097 46.5479 57.002 46.6689 cv
56.5947 46.791 56.1938 46.7822 56.1069 46.6484 cv
cp
level3{
gsave
clp
[-.655118 .195234 -.185111 -.280558 56.8433 46.4287 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.655118 .195234 -.185111 -.280558 56.8433 46.4287 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
59.3423 46.2021 mo
59.4194 46.376 59.1699 46.5791 58.7842 46.6572 cv
58.3975 46.7354 58.0225 46.6582 57.9453 46.4844 cv
57.8682 46.3115 58.1177 46.1074 58.5044 46.0303 cv
58.8901 45.9521 59.2651 46.0293 59.3423 46.2021 cv
cp
level3{
gsave
clp
[.621053 -.125655 .163207 .36541 58.6445 46.3447 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.621053 -.125655 .163207 .36541 58.6445 46.3447 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.6592 46.1816 mo
58.6592 46.3369 58.3218 46.4619 57.9058 46.4619 cv
57.4888 46.4619 57.1519 46.3369 57.1519 46.1816 cv
57.1519 46.0273 57.4888 45.9023 57.9058 45.9023 cv
58.3218 45.9023 58.6592 46.0273 58.6592 46.1816 cv
cp
level3{
gsave
clp
[.669452 0 0 .326773 57.9058 46.1836 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.669452 0 0 .326773 57.9058 46.1836 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
61.6108 46.5352 mo
61.6108 46.6563 61.4116 46.7549 61.1665 46.7549 cv
60.9214 46.7549 60.7231 46.6563 60.7231 46.5352 cv
60.7231 46.4141 60.9214 46.3164 61.1665 46.3164 cv
61.4116 46.3164 61.6108 46.4141 61.6108 46.5352 cv
cp
level3{
gsave
clp
[.395066 0 0 .255129 61.167 46.5342 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395066 0 0 .255129 61.167 46.5342 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.1235 46.4766 mo
57.1235 46.5977 56.9238 46.6953 56.6797 46.6953 cv
56.4346 46.6953 56.2354 46.5977 56.2354 46.4766 cv
56.2354 46.3545 56.4346 46.2568 56.6797 46.2568 cv
56.9238 46.2568 57.1235 46.3545 57.1235 46.4766 cv
cp
level3{
gsave
clp
[.395203 0 0 .255218 56.6797 46.4746 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395203 0 0 .255218 56.6797 46.4746 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
59.9902 46.6748 mo
60.3081 45.9688 60.8291 44.9521 61.5938 43.8867 cv
63.0259 41.8916 64.5762 41.3984 64.5762 41.3984 cv
64.5762 41.3984 63.0518 41.5029 61.3154 43.8574 cv
60.3765 45.1309 59.8833 46.0752 59.6284 46.6748 cv
59.9902 46.6748 li
cp
level3{
gsave
clp
[-3.52233 6.94652 -6.19723 -3.57837 63.689 40.8857 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.52233 6.94652 -6.19723 -3.57837 63.689 40.8857 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
59.27 46.5039 mo
59.6309 46.1152 60.0923 45.6699 60.6655 45.2109 cv
62.3921 43.8281 64.2334 43.4756 64.2334 43.4756 cv
64.2334 43.4756 62.4282 43.5625 60.3359 45.1943 cv
59.6753 45.709 59.1963 46.1465 58.8501 46.5039 cv
59.27 46.5039 li
cp
level3{
gsave
clp
[-3.03058 6.22889 -5.14183 -3.11736 62.7222 42.5596 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.03058 6.22889 -5.14183 -3.11736 62.7222 42.5596 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.0542 46.3818 mo
57.0762 46.3184 57.1011 46.2529 57.1304 46.1855 cv
57.541 45.2617 59.0264 44.5879 59.0264 44.5879 cv
59.0264 44.5879 57.3286 45.1758 56.79 46.2832 cv
56.7734 46.3164 56.7583 46.3496 56.7437 46.3818 cv
57.0542 46.3818 li
cp
level3{
gsave
clp
[.0555277 2.04674 -3.16291 1.2491 57.873 45.041 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0555277 2.04674 -3.16291 1.2491 57.873 45.041 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
59.46 46.6143 mo
59.3657 46.2314 59.2109 45.7881 58.9565 45.3066 cv
58.1094 43.6924 56.2173 43.4434 56.2173 43.4434 cv
56.2173 43.4434 58.2998 43.4854 59.3667 45.4092 cv
59.6284 45.8809 59.8003 46.2793 59.9106 46.6143 cv
59.46 46.6143 li
cp
level3{
gsave
clp
[.328657 3.75425 3.58818 .645591 57.9517 43.7295 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.328657 3.75425 3.58818 .645591 57.9517 43.7295 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.8037 46.3818 mo
58.9683 46.1758 59.9683 46.1475 59.9683 46.1475 cv
59.9683 46.1475 58.7622 46.1113 57.2974 46.3818 cv
57.8037 46.3818 li
cp
level3{
gsave
clp
[-2.77797 3.25366 -6.55674 -2.52242 59.0371 45.7891 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.77797 3.25366 -6.55674 -2.52242 59.0371 45.7891 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
59.5474 46.1816 mo
60.5454 46.0303 61.3423 46.0078 61.3423 46.0078 cv
61.3423 46.0078 60.3252 45.9766 59.0249 46.1816 cv
59.5474 46.1816 li
cp
level3{
gsave
clp
[-2.80702 3.28768 -6.62531 -2.5488 60.5249 45.6934 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.80702 3.28768 -6.62531 -2.5488 60.5249 45.6934 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
60.1323 46.0391 mo
60.4038 45.7324 60.7627 45.3877 61.2329 45.0264 cv
62.8613 43.7803 65.2397 43.3301 65.2397 43.3301 cv
65.2397 43.3301 62.7612 43.5674 60.7617 45.0439 cv
60.2422 45.4287 59.8652 45.7598 59.5898 46.0391 cv
60.1323 46.0391 li
cp
level3{
gsave
clp
[-1.78631 5.04405 -6.22159 -1.43083 63.0713 42.8311 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.78631 5.04405 -6.22159 -1.43083 63.0713 42.8311 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
60.2842 45.7412 mo
62.063 45.5625 63.6587 45.5771 63.6587 45.5771 cv
63.6587 45.5771 61.6211 45.4746 59.313 45.7412 cv
60.2842 45.7412 li
cp
level3{
gsave
clp
[-4.20342 3.40106 -11.0445 -3.60455 62.1826 45.0957 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.20342 3.40106 -11.0445 -3.60455 62.1826 45.0957 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
59.7959 46.4395 mo
60.0195 46.3691 60.2603 46.2998 60.5161 46.2305 cv
63.3022 45.4785 66.8179 45.4453 66.8179 45.4453 cv
66.8179 45.4453 63.2471 45.2998 59.8477 46.1816 cv
59.5044 46.2705 59.1943 46.3564 58.9146 46.4395 cv
59.7959 46.4395 li
cp
level3{
gsave
clp
[-4.57285 4.54239 -11.3954 -4.03829 64.2729 44.5439 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.57285 4.54239 -11.3954 -4.03829 64.2729 44.5439 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
59.1963 46.5508 mo
58.9414 46.3184 58.6299 46.0742 58.25 45.832 cv
56.3965 44.6504 53.5171 44.5664 53.5171 44.5664 cv
53.5171 44.5664 56.5488 44.3779 58.8311 45.7627 cv
59.3032 46.0498 59.668 46.3135 59.9507 46.5508 cv
59.1963 46.5508 li
cp
level3{
gsave
clp
[2.41328 6.57239 9.70918 -5.5378 55.8765 43.2217 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.41328 6.57239 9.70918 -5.5378 55.8765 43.2217 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
58.2002 46.3662 mo
58.0664 46.2822 57.9155 46.1943 57.7476 46.1035 cv
56.8164 45.5977 55.8301 45.3945 55.8301 45.3945 cv
55.8301 45.3945 56.7954 45.5146 57.9238 46.1143 cv
58.0957 46.2061 58.2441 46.2891 58.3735 46.3662 cv
58.2002 46.3662 li
cp
level3{
gsave
clp
[1.41406 1.93985 2.35998 -.388189 56.6494 45.2598 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.41406 1.93985 2.35998 -.388189 56.6494 45.2598 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
58.6104 46.1865 mo
58.8589 46.0605 59.1543 45.9258 59.5005 45.792 cv
61.0674 45.1846 62.9502 45.0908 62.9502 45.0908 cv
62.9502 45.0908 61.0552 45.0537 59.1479 45.7686 cv
58.7388 45.9229 58.4121 46.0615 58.1504 46.1865 cv
58.6104 46.1865 li
cp
level3{
gsave
clp
[-2.48592 3.32644 -5.55182 -2.31446 61.4326 44.458 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.48592 3.32644 -5.55182 -2.31446 61.4326 44.458 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.6396 46.5254 mo
57.5073 46.3154 57.3179 46.0791 57.0444 45.8359 cv
56.1743 45.0635 54.6914 44.8789 54.6914 44.8789 cv
54.6914 44.8789 56.2734 44.9121 57.3481 45.8223 cv
57.6714 46.0967 57.8818 46.3311 58.0171 46.5254 cv
57.6396 46.5254 li
cp
level3{
gsave
clp
[.671377 4.96394 3.37522 -2.63801 56.0957 43.7813 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.671377 4.96394 3.37522 -2.63801 56.0957 43.7813 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
59.3071 46.3818 mo
59.3916 46.332 59.4819 46.2822 59.5757 46.2314 cv
60.9722 45.4756 62.6802 45.2861 62.6802 45.2861 cv
62.6802 45.2861 60.9556 45.3291 59.2539 46.2207 cv
59.1489 46.2764 59.0498 46.3301 58.9561 46.3818 cv
59.3071 46.3818 li
cp
level3{
gsave
clp
[-2.0453 3.7396 -4.75871 -1.90581 61.3975 44.7725 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.0453 3.7396 -4.75871 -1.90581 61.3975 44.7725 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
58.3228 46.3818 mo
58.2935 46.2676 58.248 46.1475 58.1836 46.0234 cv
57.7266 45.1348 56.0972 44.6904 56.0972 44.6904 cv
56.0972 44.6904 57.959 45.0098 58.5581 46.0664 cv
58.6216 46.1787 58.6724 46.2842 58.7114 46.3818 cv
58.3228 46.3818 li
cp
level3{
gsave
clp
[-.0690712 2.82871 4.57005 .0750648 57.4233 44.7129 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0690712 2.82871 4.57005 .0750648 57.4233 44.7129 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
59.8525 46.5371 mo
59.6753 46.3936 59.4741 46.2451 59.2456 46.0957 cv
57.4771 44.9355 54.5562 44.5752 54.5562 44.5752 cv
54.5562 44.5752 57.6567 44.7246 59.8433 46.0967 cv
60.0908 46.252 60.3071 46.3994 60.4946 46.5371 cv
59.8525 46.5371 li
cp
level3{
gsave
clp
[1.81451 4.98242 8.43652 -1.93484 56.9673 44.0225 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.81451 4.98242 8.43652 -1.93484 56.9673 44.0225 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
60.8364 46.4434 mo
60.7715 46.3008 60.6792 46.1465 60.5532 45.9834 cv
59.8848 45.1211 58.2144 44.6201 58.2144 44.6201 cv
58.2144 44.6201 60.0732 45.0137 60.9214 46.043 cv
61.0425 46.1895 61.1372 46.3223 61.2104 46.4434 cv
60.8364 46.4434 li
cp
level3{
gsave
clp
[.231033 2.41017 3.951 .538251 59.644 44.8154 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.231033 2.41017 3.951 .538251 59.644 44.8154 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
58.7114 46.5596 mo
58.3945 46.2061 57.8726 45.6963 57.1084 45.1641 cv
55.6763 44.1631 54.1255 43.917 54.1255 43.917 cv
54.1255 43.917 55.6509 43.9697 57.3867 45.1484 cv
58.3252 45.7852 58.8184 46.2588 59.0737 46.5596 cv
58.7114 46.5596 li
cp
level3{
gsave
clp
[2.38181 4.69724 4.19057 -2.4197 55.521 43.1113 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.38181 4.69724 4.19057 -2.4197 55.521 43.1113 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
59.0889 46.6768 mo
58.9438 46.4082 58.7524 46.1055 58.5005 45.7881 cv
57.6313 44.6953 56.3604 44.3008 56.3604 44.3008 cv
56.3604 44.3008 57.6851 44.5078 58.7524 45.8037 cv
59.0303 46.1406 59.2319 46.4316 59.3779 46.6768 cv
59.0889 46.6768 li
cp
level3{
gsave
clp
[1.36811 3.86318 4.76504 -1.09585 57.3657 44.0693 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.36811 3.86318 4.76504 -1.09585 57.3657 44.0693 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
57.4639 46.4629 mo
57.5308 46.3193 57.6216 46.165 57.7485 46.002 cv
58.4155 45.1396 60.0869 44.6387 60.0869 44.6387 cv
60.0869 44.6387 58.228 45.0332 57.3799 46.0605 cv
57.2593 46.208 57.1646 46.3418 57.0903 46.4629 cv
57.4639 46.4629 li
cp
level3{
gsave
clp
[-.231165 2.41154 -3.95325 .538558 58.6577 44.833 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.231165 2.41154 -3.95325 .538558 58.6577 44.833 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
59.7339 46.6953 mo
59.6753 46.416 59.5537 46.0684 59.312 45.6797 cv
58.6812 44.6621 57.2739 44.0918 57.2739 44.0918 cv
57.2739 44.0918 58.8237 44.5313 59.6172 45.7441 cv
59.8735 46.1377 60.0151 46.4521 60.0879 46.6953 cv
59.7339 46.6953 li
cp
level3{
gsave
clp
[2.81396 0 0 2.81396 57.2739 45.3936 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.81396 0 0 2.81396 57.2739 45.3936 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
60.6899 46.6338 mo
60.9072 46.5195 61.1553 46.4004 61.436 46.2793 cv
63.3682 45.4434 66.1763 45.1377 66.1763 45.1377 cv
66.1763 45.1377 63.251 45.3018 60.8799 46.292 cv
60.5879 46.4141 60.3335 46.5273 60.1118 46.6338 cv
60.6899 46.6338 li
cp
level3{
gsave
clp
[-2.13755 3.3897 -7.35622 -.93036 63.8047 44.8379 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.13755 3.3897 -7.35622 -.93036 63.8047 44.8379 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
61.3149 46.7021 mo
61.439 46.252 61.6196 45.709 61.8823 45.1348 cv
62.5776 43.6055 63.5864 43.0625 63.5864 43.0625 cv
63.5864 43.0625 62.5366 43.3438 61.6826 45.1543 cv
61.3843 45.7842 61.1953 46.2988 61.0757 46.7021 cv
61.3149 46.7021 li
cp
level3{
gsave
clp
[-.772398 6.20523 -2.63593 -1.82408 62.6387 42.4072 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.772398 6.20523 -2.63593 -1.82408 62.6387 42.4072 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.6011 47.2715 mo
57.6011 47.3926 57.4019 47.4902 57.1567 47.4902 cv
56.9116 47.4902 56.7129 47.3926 56.7129 47.2715 cv
56.7129 47.1504 56.9116 47.0527 57.1567 47.0527 cv
57.4019 47.0527 57.6011 47.1504 57.6011 47.2715 cv
cp
level3{
gsave
clp
[.394861 0 0 .254997 57.1572 47.2705 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394861 0 0 .254997 57.1572 47.2705 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.4355 47.623 mo
58.4355 47.7441 58.2363 47.8418 57.9912 47.8418 cv
57.7456 47.8418 57.5474 47.7441 57.5474 47.623 cv
57.5474 47.502 57.7456 47.4033 57.9912 47.4033 cv
58.2363 47.4033 58.4355 47.502 58.4355 47.623 cv
cp
level3{
gsave
clp
[.395204 0 0 .255218 57.9917 47.6211 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395204 0 0 .255218 57.9917 47.6211 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.25 46.5156 mo
58.25 46.6367 58.0513 46.7354 57.8062 46.7354 cv
57.561 46.7354 57.3618 46.6367 57.3618 46.5156 cv
57.3618 46.3955 57.561 46.2969 57.8062 46.2969 cv
58.0513 46.2969 58.25 46.3955 58.25 46.5156 cv
cp
level3{
gsave
clp
[.395202 0 0 .255217 57.8062 46.5146 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395202 0 0 .255217 57.8062 46.5146 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.6396 47.1387 mo
58.6396 47.2598 58.4414 47.3574 58.1963 47.3574 cv
57.9512 47.3574 57.7524 47.2598 57.7524 47.1387 cv
57.7524 47.0176 57.9512 46.9199 58.1963 46.9199 cv
58.4414 46.9199 58.6396 47.0176 58.6396 47.1387 cv
cp
level3{
gsave
clp
[.394597 0 0 .254826 58.1963 47.1377 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394597 0 0 .254826 58.1963 47.1377 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
59.6377 47.1387 mo
59.6377 47.2598 59.4395 47.3574 59.1943 47.3574 cv
58.9492 47.3574 58.75 47.2598 58.75 47.1387 cv
58.75 47.0176 58.9492 46.9199 59.1943 46.9199 cv
59.4395 46.9199 59.6377 47.0176 59.6377 47.1387 cv
cp
level3{
gsave
clp
[.394737 0 0 .254916 59.1938 47.1377 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394737 0 0 .254916 59.1938 47.1377 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
60.0635 47.3848 mo
60.0635 47.5059 59.8647 47.6045 59.6201 47.6045 cv
59.375 47.6045 59.1753 47.5059 59.1753 47.3848 cv
59.1753 47.2646 59.375 47.166 59.6201 47.166 cv
59.8647 47.166 60.0635 47.2646 60.0635 47.3848 cv
cp
level3{
gsave
clp
[.395186 0 0 .255207 59.6196 47.3838 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395186 0 0 .255207 59.6196 47.3838 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
60.4121 46.7744 mo
60.3247 46.6416 60.585 46.4355 60.9902 46.3145 cv
61.3979 46.1924 61.7988 46.2021 61.8867 46.3359 cv
61.9736 46.4678 61.7148 46.6738 61.3071 46.7959 cv
60.9004 46.917 60.5 46.9072 60.4121 46.7744 cv
cp
level3{
gsave
clp
[-.655336 .195299 -.185172 -.280652 61.1489 46.5547 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.655336 .195299 -.185172 -.280652 61.1489 46.5547 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
60.145 46.8174 mo
60.145 46.9629 59.8457 47.0801 59.4766 47.0801 cv
59.1074 47.0801 58.8076 46.9629 58.8076 46.8174 cv
58.8076 46.6729 59.1074 46.5547 59.4766 46.5547 cv
59.8457 46.5547 60.145 46.6729 60.145 46.8174 cv
cp
level3{
gsave
clp
[.594371 0 0 .306586 59.4761 46.8174 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.594371 0 0 .306586 59.4761 46.8174 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
60.4585 47.0928 mo
60.3462 47.0684 60.2993 46.8828 60.3555 46.6768 cv
60.4116 46.4707 60.5479 46.3232 60.6611 46.3477 cv
60.7739 46.3721 60.8193 46.5576 60.7632 46.7637 cv
60.7065 46.9697 60.5713 47.1172 60.4585 47.0928 cv
cp
level3{
gsave
clp
[-.0898659 .331924 -.23771 -.0507308 60.5601 46.7197 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0898659 .331924 -.23771 -.0507308 60.5601 46.7197 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
62.0269 47.0527 mo
62.0791 47.21 61.8389 47.4131 61.4888 47.5068 cv
61.1387 47.5996 60.8115 47.5479 60.7578 47.3906 cv
60.7051 47.2324 60.9463 47.0313 61.2964 46.9365 cv
61.646 46.8438 61.9731 46.8965 62.0269 47.0527 cv
cp
level3{
gsave
clp
[.563945 -.150772 .113079 .331988 61.3936 47.2207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.563945 -.150772 .113079 .331988 61.3936 47.2207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
60.2339 46.7422 mo
60.2153 46.8418 59.9424 46.8867 59.6226 46.8418 cv
59.3018 46.7969 59.0566 46.6797 59.0737 46.5801 cv
59.0923 46.4805 59.3657 46.4346 59.686 46.4795 cv
60.0068 46.5244 60.2524 46.6416 60.2339 46.7422 cv
cp
level3{
gsave
clp
[.515404 .0723883 -.0376419 .211374 59.6563 46.6621 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.515404 .0723883 -.0376419 .211374 59.6563 46.6621 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.5103 46.835 mo
58.5181 46.9805 58.2251 47.1094 57.855 47.124 cv
57.4858 47.1387 57.1812 47.0322 57.1743 46.8877 cv
57.1665 46.7422 57.4604 46.6143 57.8286 46.5996 cv
58.1978 46.585 58.5034 46.6904 58.5103 46.835 cv
cp
level3{
gsave
clp
[.593812 -.0231168 .0158928 .306297 57.8433 46.8613 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.593812 -.0231168 .0158928 .306297 57.8433 46.8613 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
60.4038 46.6279 mo
60.4438 46.7393 60.2085 46.9033 59.8804 46.9941 cv
59.5508 47.085 59.2524 47.0693 59.2134 46.958 cv
59.1738 46.8457 59.4092 46.6826 59.7373 46.5918 cv
60.0664 46.5 60.3652 46.5166 60.4038 46.6279 cv
cp
level3{
gsave
clp
[.529876 -.146223 .0825216 .234535 59.8086 46.793 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.529876 -.146223 .0825216 .234535 59.8086 46.793 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
59.3486 46.8203 mo
59.354 46.9443 59.1089 47.0557 58.7983 47.0674 cv
58.4893 47.0811 58.2334 46.9893 58.2266 46.8643 cv
58.2207 46.7402 58.4663 46.6289 58.7759 46.6172 cv
59.0859 46.6045 59.3418 46.6953 59.3486 46.8203 cv
cp
level3{
gsave
clp
[.499034 -.0202506 .0130183 .263258 58.7876 46.8438 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.499034 -.0202506 .0130183 .263258 58.7876 46.8438 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.8926 46.7959 mo
58.8926 46.915 58.6836 47.0107 58.4243 47.0107 cv
58.166 47.0107 57.9556 46.915 57.9556 46.7959 cv
57.9556 46.6768 58.166 46.5811 58.4243 46.5811 cv
58.6836 46.5811 58.8926 46.6768 58.8926 46.7959 cv
cp
level3{
gsave
clp
[.417026 0 0 .250505 58.4253 46.7949 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417026 0 0 .250505 58.4253 46.7949 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.4331 46.8281 mo
57.4331 46.9473 57.2236 47.0439 56.9648 47.0439 cv
56.7061 47.0439 56.4966 46.9473 56.4966 46.8281 cv
56.4966 46.709 56.7061 46.6123 56.9648 46.6123 cv
57.2236 46.6123 57.4331 46.709 57.4331 46.8281 cv
cp
level3{
gsave
clp
[.417594 0 0 .250846 56.9663 46.8271 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417594 0 0 .250846 56.9663 46.8271 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.8945 46.9629 mo
57.8501 47.0557 57.5713 47.04 57.2739 46.9258 cv
56.9761 46.8125 56.771 46.6445 56.8164 46.5527 cv
56.8618 46.459 57.1387 46.4766 57.437 46.5889 cv
57.7349 46.7021 57.9409 46.8701 57.8945 46.9629 cv
cp
level3{
gsave
clp
[.481352 .182682 -.0956905 .195731 57.3545 46.7568 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.481352 .182682 -.0956905 .195731 57.3545 46.7568 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.6729 46.583 mo
57.6284 46.6758 57.3496 46.6592 57.0522 46.5459 cv
56.7544 46.4326 56.5503 46.2646 56.5947 46.1709 cv
56.6396 46.0791 56.917 46.0957 57.2153 46.209 cv
57.5132 46.3223 57.7183 46.4902 57.6729 46.583 cv
cp
level3{
gsave
clp
[.481563 .182762 -.0957324 .195816 57.1323 46.377 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.481563 .182762 -.0957324 .195816 57.1323 46.377 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
61.2686 46.9795 mo
61.2764 47.125 60.9829 47.2539 60.6128 47.2686 cv
60.2437 47.2822 59.9385 47.1777 59.9316 47.0322 cv
59.9243 46.8877 60.2178 46.7588 60.5869 46.7432 cv
60.9561 46.7285 61.2612 46.835 61.2686 46.9795 cv
cp
level3{
gsave
clp
[.594474 -.0231425 .0159105 .306639 60.6011 47.0059 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.594474 -.0231425 .0159105 .306639 60.6011 47.0059 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.3213 46.5508 mo
57.3604 46.6621 57.126 46.8262 56.7969 46.917 cv
56.4678 47.0078 56.1694 46.9922 56.1304 46.8799 cv
56.0908 46.7686 56.3262 46.6055 56.6553 46.5137 cv
56.9839 46.4229 57.2827 46.4395 57.3213 46.5508 cv
cp
level3{
gsave
clp
[.530161 -.146301 .0825661 .234662 56.7256 46.7148 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.530161 -.146301 .0825661 .234662 56.7256 46.7148 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.5366 47.2158 mo
57.4941 47.2549 57.3892 47.2256 57.2983 47.1514 cv
57.209 47.0771 57.1704 46.9844 57.2114 46.9453 cv
57.2529 46.9063 57.3599 46.9355 57.4487 47.0098 cv
57.5381 47.085 57.5781 47.1768 57.5366 47.2158 cv
cp
level3{
gsave
clp
[.144612 .120028 -.0882134 .0824289 57.374 47.0801 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.144612 .120028 -.0882134 .0824289 57.374 47.0801 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
59.189 46.8906 mo
59.1958 47.0166 58.9497 47.127 58.6396 47.1387 cv
58.3301 47.1514 58.0737 47.0605 58.0679 46.9355 cv
58.0615 46.8105 58.3081 46.7002 58.6177 46.6885 cv
58.9272 46.6748 59.1831 46.7656 59.189 46.8906 cv
cp
level3{
gsave
clp
[.498781 -.0202404 .0130117 .263125 58.6284 46.915 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.498781 -.0202404 .0130117 .263125 58.6284 46.915 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
59.5527 46.7695 mo
59.5527 46.8887 59.3433 46.9854 59.0845 46.9854 cv
58.8267 46.9854 58.6172 46.8887 58.6172 46.7695 cv
58.6172 46.6514 58.8267 46.5537 59.0845 46.5537 cv
59.3433 46.5537 59.5527 46.6514 59.5527 46.7695 cv
cp
level3{
gsave
clp
[.417376 0 0 .250716 59.0864 46.7686 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417376 0 0 .250716 59.0864 46.7686 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.2666 47.1348 mo
57.2485 47.2354 56.9751 47.2793 56.6548 47.2354 cv
56.334 47.1904 56.0889 47.0732 56.1069 46.9727 cv
56.125 46.873 56.3979 46.8281 56.7188 46.873 cv
57.0391 46.917 57.2842 47.0342 57.2666 47.1348 cv
cp
level3{
gsave
clp
[.515378 .0723846 -.03764 .211363 56.689 47.0557 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.515378 .0723846 -.03764 .211363 56.689 47.0557 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
61.1909 47.8447 mo
61.1909 47.9658 60.9927 48.0645 60.7476 48.0645 cv
60.5024 48.0645 60.3032 47.9658 60.3032 47.8447 cv
60.3032 47.7246 60.5024 47.626 60.7476 47.626 cv
60.9927 47.626 61.1909 47.7246 61.1909 47.8447 cv
cp
level3{
gsave
clp
[.395055 0 0 .255122 60.7471 47.8438 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395055 0 0 .255122 60.7471 47.8438 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
60.0938 46.8652 mo
60.0938 46.9854 59.8955 47.084 59.6504 47.084 cv
59.4053 47.084 59.2065 46.9854 59.2065 46.8652 cv
59.2065 46.7441 59.4053 46.6465 59.6504 46.6465 cv
59.8955 46.6465 60.0938 46.7441 60.0938 46.8652 cv
cp
level3{
gsave
clp
[.394601 0 0 .254829 59.6504 46.8643 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394601 0 0 .254829 59.6504 46.8643 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.9233 46.707 mo
47.9233 46.8135 47.7769 46.9004 47.5952 46.9004 cv
47.4126 46.9004 47.2661 46.8135 47.2661 46.707 cv
47.2661 46.6016 47.4126 46.5146 47.5952 46.5146 cv
47.7769 46.5146 47.9233 46.6016 47.9233 46.707 cv
cp
level3{
gsave
clp
[.292254 0 0 .224942 47.5947 46.709 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292254 0 0 .224942 47.5947 46.709 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.6284 46.6299 mo
48.5913 46.7617 48.2397 46.8105 47.8418 46.7402 cv
47.4438 46.6699 47.1504 46.5059 47.1875 46.374 cv
47.2236 46.2432 47.5762 46.1943 47.9741 46.2646 cv
48.3721 46.335 48.665 46.498 48.6284 46.6299 cv
cp
level3{
gsave
clp
[.640889 .114289 -.0766752 .277767 47.9077 46.5039 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.640889 .114289 -.0766752 .277767 47.9077 46.5039 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.4849 46.9287 mo
50.4199 46.8115 50.6123 46.6299 50.9131 46.5234 cv
51.2153 46.416 51.5117 46.4248 51.5767 46.542 cv
51.6416 46.6582 51.4497 46.8398 51.1479 46.9473 cv
50.8467 47.0547 50.5493 47.0459 50.4849 46.9287 cv
cp
level3{
gsave
clp
[-.48632 .172238 -.137501 -.246055 51.0308 46.7354 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.48632 .172238 -.137501 -.246055 51.0308 46.7354 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.1113 46.4736 mo
50.0718 46.3496 50.3013 46.1973 50.6211 46.1348 cv
50.9414 46.0703 51.2319 46.1201 51.2705 46.2451 cv
51.3091 46.3691 51.0806 46.5205 50.7598 46.584 cv
50.439 46.6475 50.1489 46.5977 50.1113 46.4736 cv
cp
level3{
gsave
clp
[-.515728 .101407 -.0811258 -.26221 50.6909 46.3584 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.515728 .101407 -.0811258 -.26221 50.6909 46.3584 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.4888 46.2598 mo
50.5454 46.4131 50.3608 46.5918 50.0752 46.6602 cv
49.7891 46.7285 49.5112 46.6611 49.4541 46.5088 cv
49.3965 46.3555 49.5815 46.1768 49.8677 46.1084 cv
50.1528 46.04 50.4312 46.1074 50.4888 46.2598 cv
cp
level3{
gsave
clp
[.460646 -.110091 .12168 .321583 49.9697 46.3848 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.460646 -.110091 .12168 .321583 49.9697 46.3848 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.2383 46.5566 mo
50.2114 46.7188 49.8569 46.8164 49.4463 46.7725 cv
49.0347 46.7295 48.7231 46.5625 48.7495 46.4004 cv
48.7759 46.2383 49.1309 46.1416 49.5425 46.1846 cv
49.9531 46.2285 50.2651 46.3955 50.2383 46.5566 cv
cp
level3{
gsave
clp
[.66143 .0694719 -.0564459 .343018 49.4951 46.4775 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.66143 .0694719 -.0564459 .343018 49.4951 46.4775 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.7393 46.8184 mo
46.6743 46.7012 46.8667 46.5195 47.1675 46.4131 cv
47.4697 46.3057 47.7671 46.3145 47.832 46.4307 cv
47.896 46.5479 47.7046 46.7285 47.4023 46.8359 cv
47.1011 46.9434 46.8037 46.9346 46.7393 46.8184 cv
cp
level3{
gsave
clp
[-.486322 .172239 -.137502 -.246056 47.2856 46.624 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.486322 .172239 -.137502 -.246056 47.2856 46.624 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.1362 46.4248 mo
49.1938 46.5771 49.0083 46.7559 48.7222 46.8252 cv
48.437 46.8936 48.1587 46.8262 48.1011 46.6738 cv
48.0444 46.5205 48.23 46.3418 48.5156 46.2734 cv
48.8013 46.2051 49.0796 46.2715 49.1362 46.4248 cv
cp
level3{
gsave
clp
[.460679 -.110099 .121689 .321606 48.6172 46.5498 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.460679 -.110099 .121689 .321606 48.6172 46.5498 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.6309 46.4063 mo
48.6309 46.543 48.3804 46.6543 48.0723 46.6543 cv
47.7632 46.6543 47.5142 46.543 47.5142 46.4063 cv
47.5142 46.2705 47.7632 46.1602 48.0723 46.1602 cv
48.3804 46.1602 48.6309 46.2705 48.6309 46.4063 cv
cp
level3{
gsave
clp
[.49657 0 0 .288098 48.0723 46.4063 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.49657 0 0 .288098 48.0723 46.4063 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.8164 46.7188 mo
50.8164 46.8252 50.6694 46.9111 50.4883 46.9111 cv
50.3057 46.9111 50.1592 46.8252 50.1592 46.7188 cv
50.1592 46.6113 50.3057 46.5254 50.4883 46.5254 cv
50.6694 46.5254 50.8164 46.6113 50.8164 46.7188 cv
cp
level3{
gsave
clp
[.292255 0 0 .224943 50.4878 46.7197 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292255 0 0 .224943 50.4878 46.7197 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.4932 46.666 mo
47.4932 46.7725 47.3452 46.8584 47.1641 46.8584 cv
46.9824 46.8584 46.835 46.7725 46.835 46.666 cv
46.835 46.5586 46.9824 46.4736 47.1641 46.4736 cv
47.3452 46.4736 47.4932 46.5586 47.4932 46.666 cv
cp
level3{
gsave
clp
[.29227 0 0 .224954 47.1641 46.667 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.29227 0 0 .224954 47.1641 46.667 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.6167 46.8408 mo
49.8521 46.2188 50.2378 45.3242 50.8042 44.3857 cv
51.8647 42.6299 53.0132 42.1943 53.0132 42.1943 cv
53.0132 42.1943 51.8838 42.2871 50.5977 44.3604 cv
49.9023 45.4805 49.5371 46.3125 49.3481 46.8408 cv
49.6167 46.8408 li
cp
level3{
gsave
clp
[-2.92855 5.7755 -5.15252 -2.97514 52.4746 41.8838 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.92855 5.7755 -5.15252 -2.97514 52.4746 41.8838 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
49.0825 46.6895 mo
49.3496 46.3486 49.6924 45.9561 50.1167 45.5527 cv
51.395 44.335 52.7593 44.0244 52.7593 44.0244 cv
52.7593 44.0244 51.4224 44.1006 49.8716 45.5371 cv
49.3828 45.9902 49.0278 46.376 48.7715 46.6895 cv
49.0825 46.6895 li
cp
level3{
gsave
clp
[-2.4481 5.03169 -4.15356 -2.5182 51.7188 43.3945 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.4481 5.03169 -4.15356 -2.5182 51.7188 43.3945 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
47.4414 46.583 mo
47.4575 46.5273 47.4761 46.4697 47.498 46.4102 cv
47.8022 45.5967 48.9023 45.0029 48.9023 45.0029 cv
48.9023 45.0029 47.644 45.5205 47.2456 46.4971 cv
47.2334 46.5254 47.2222 46.5537 47.2114 46.583 cv
47.4414 46.583 li
cp
level3{
gsave
clp
[.0547652 2.01863 -3.11947 1.23195 48.0449 45.3418 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0547652 2.01863 -3.11947 1.23195 48.0449 45.3418 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
49.2241 46.7871 mo
49.1543 46.4502 49.0386 46.0605 48.8511 45.6357 cv
48.2231 44.2148 46.8218 43.9951 46.8218 43.9951 cv
46.8218 43.9951 48.3647 44.0322 49.1543 45.7256 cv
49.3481 46.1416 49.4751 46.4932 49.5566 46.7871 cv
49.2241 46.7871 li
cp
level3{
gsave
clp
[.298482 3.40957 3.25875 .586318 48.0874 44.209 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.298482 3.40957 3.25875 .586318 48.0874 44.209 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
47.9966 46.583 mo
48.8594 46.4014 49.6001 46.376 49.6001 46.376 cv
49.6001 46.376 48.7065 46.3447 47.6226 46.583 cv
47.9966 46.583 li
cp
level3{
gsave
clp
[-2.13051 2.49532 -5.02855 -1.93451 48.9209 46.1152 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.13051 2.49532 -5.02855 -1.93451 48.9209 46.1152 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
49.2881 46.4063 mo
50.0273 46.2734 50.6177 46.2539 50.6177 46.2539 cv
50.6177 46.2539 49.8647 46.2256 48.9019 46.4063 cv
49.2881 46.4063 li
cp
level3{
gsave
clp
[-2.14054 2.50707 -5.05223 -1.94362 50.0195 46.0244 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.14054 2.50707 -5.05223 -1.94362 50.0195 46.0244 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
49.7217 46.2813 mo
49.9224 46.0107 50.188 45.708 50.5371 45.3896 cv
51.7432 44.292 53.5044 43.8955 53.5044 43.8955 cv
53.5044 43.8955 51.6689 44.1045 50.188 45.4053 cv
49.8027 45.7432 49.5234 46.0352 49.3198 46.2813 cv
49.7217 46.2813 li
cp
level3{
gsave
clp
[-1.49209 4.21325 -5.19684 -1.19516 51.9614 43.541 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.49209 4.21325 -5.19684 -1.19516 51.9614 43.541 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
49.8335 46.0195 mo
51.1514 45.8613 52.3335 45.875 52.3335 45.875 cv
52.3335 45.875 50.8237 45.7842 49.1143 46.0195 cv
49.8335 46.0195 li
cp
level3{
gsave
clp
[-3.17487 2.56884 -8.34198 -2.72254 51.25 45.5215 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.17487 2.56884 -8.34198 -2.72254 51.25 45.5215 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
49.4722 46.6328 mo
49.6387 46.5723 49.8164 46.5107 50.0054 46.4502 cv
52.0698 45.7871 54.6738 45.7578 54.6738 45.7578 cv
54.6738 45.7578 52.0293 45.6309 49.5112 46.4063 cv
49.2563 46.4844 49.0264 46.5605 48.8193 46.6328 cv
49.4722 46.6328 li
cp
level3{
gsave
clp
[-3.55431 3.53063 -8.85725 -3.13881 52.8398 45.1084 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.55431 3.53063 -8.85725 -3.13881 52.8398 45.1084 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
49.0278 46.7324 mo
48.8394 46.5273 48.6089 46.3125 48.3276 46.0986 cv
46.9541 45.0586 44.8218 44.9854 44.8218 44.9854 cv
44.8218 44.9854 47.0669 44.8184 48.7578 46.0371 cv
49.1074 46.29 49.3774 46.5225 49.5869 46.7324 cv
49.0278 46.7324 li
cp
level3{
gsave
clp
[1.90581 5.19033 7.66752 -4.3733 46.5269 44.0137 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.90581 5.19033 7.66752 -4.3733 46.5269 44.0137 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
48.2905 46.5693 mo
48.1914 46.4961 48.0801 46.417 47.9551 46.3369 cv
47.2651 45.8916 46.5352 45.7139 46.5352 45.7139 cv
46.5352 45.7139 47.2495 45.8193 48.0854 46.3477 cv
48.2124 46.4277 48.3228 46.502 48.4189 46.5693 cv
48.2905 46.5693 li
cp
level3{
gsave
clp
[1.18546 1.62625 1.97847 -.325433 47.0977 45.6211 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.18546 1.62625 1.97847 -.325433 47.0977 45.6211 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
48.5938 46.4102 mo
48.7783 46.2988 48.9971 46.1816 49.2534 46.0635 cv
50.4141 45.5283 51.8081 45.4463 51.8081 45.4463 cv
51.8081 45.4463 50.4058 45.4141 48.9927 46.0439 cv
48.689 46.1777 48.4468 46.3008 48.2534 46.4102 cv
48.5938 46.4102 li
cp
level3{
gsave
clp
[-1.96338 2.62722 -4.38483 -1.82796 50.7275 44.9961 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.96338 2.62722 -4.38483 -1.82796 50.7275 44.9961 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
47.875 46.709 mo
47.7773 46.5244 47.6367 46.3164 47.4341 46.1025 cv
46.7896 45.4229 45.6909 45.2598 45.6909 45.2598 cv
45.6909 45.2598 46.8628 45.2891 47.6597 46.0908 cv
47.8984 46.332 48.0552 46.5381 48.1548 46.709 cv
47.875 46.709 li
cp
level3{
gsave
clp
[.533671 3.94579 2.68293 -2.09693 46.7173 44.4561 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.533671 3.94579 2.68293 -2.09693 46.7173 44.4561 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
49.1104 46.583 mo
49.1733 46.5391 49.2397 46.4941 49.3096 46.4502 cv
50.3438 45.7852 51.6084 45.6182 51.6084 45.6182 cv
51.6084 45.6182 50.3315 45.6563 49.0713 46.4414 cv
48.9932 46.4902 48.9199 46.5371 48.8501 46.583 cv
49.1104 46.583 li
cp
level3{
gsave
clp
[-1.63609 2.99141 -3.80663 -1.52451 50.6929 45.252 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.63609 2.99141 -3.80663 -1.52451 50.6929 45.252 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
48.3813 46.583 mo
48.3584 46.4824 48.3252 46.376 48.2783 46.2676 cv
47.9395 45.4854 46.7329 45.0938 46.7329 45.0938 cv
46.7329 45.0938 48.1108 45.375 48.5552 46.3057 cv
48.6021 46.4043 48.6396 46.4971 48.6685 46.583 cv
48.3813 46.583 li
cp
level3{
gsave
clp
[-.0610311 2.49943 4.03808 .0663269 47.7173 45.1104 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0610311 2.49943 4.03808 .0663269 47.7173 45.1104 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
49.5146 46.7188 mo
49.3828 46.5938 49.2344 46.4629 49.0645 46.3311 cv
47.7539 45.3096 45.5913 44.9922 45.5913 44.9922 cv
45.5913 44.9922 47.8877 45.124 49.5078 46.332 cv
49.6909 46.4688 49.8511 46.5977 49.9902 46.7188 cv
49.5146 46.7188 li
cp
level3{
gsave
clp
[1.49325 4.1003 6.94286 -1.59228 47.3315 44.5938 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.49325 4.1003 6.94286 -1.59228 47.3315 44.5938 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
50.2437 46.6377 mo
50.1953 46.5117 50.1265 46.376 50.0332 46.2314 cv
49.5386 45.4727 48.3008 45.0313 48.3008 45.0313 cv
48.3008 45.0313 49.6777 45.3789 50.3057 46.2852 cv
50.395 46.4131 50.4663 46.5303 50.5205 46.6377 cv
50.2437 46.6377 li
cp
level3{
gsave
clp
[.211447 2.20584 3.61604 .492619 49.3481 45.1738 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.211447 2.20584 3.61604 .492619 49.3481 45.1738 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
48.6694 46.7393 mo
48.4341 46.4277 48.0474 45.9795 47.4814 45.5098 cv
46.4209 44.6299 45.2725 44.4121 45.2725 44.4121 cv
45.2725 44.4121 46.4019 44.459 47.6875 45.4961 cv
48.3828 46.0576 48.748 46.4746 48.937 46.7393 cv
48.6694 46.7393 li
cp
level3{
gsave
clp
[1.9242 3.79477 3.38545 -1.95481 46.2334 43.8574 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.9242 3.79477 3.38545 -1.95481 46.2334 43.8574 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
48.9487 46.8428 mo
48.8413 46.6055 48.6987 46.3398 48.5127 46.0605 cv
47.8691 45.0977 46.9272 44.75 46.9272 44.75 cv
46.9272 44.75 47.9092 44.9326 48.6997 46.0742 cv
48.9048 46.3711 49.0542 46.627 49.1636 46.8428 cv
48.9487 46.8428 li
cp
level3{
gsave
clp
[1.16183 3.2807 4.04657 -.930624 47.6177 44.5908 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.16183 3.2807 4.04657 -.930624 47.6177 44.5908 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
47.7451 46.6543 mo
47.7939 46.5273 47.8613 46.3916 47.9561 46.248 cv
48.4502 45.4893 49.6885 45.0479 49.6885 45.0479 cv
49.6885 45.0479 48.311 45.3955 47.6831 46.3008 cv
47.5928 46.4297 47.5234 46.5469 47.4683 46.6543 cv
47.7451 46.6543 li
cp
level3{
gsave
clp
[-.211441 2.20577 -3.61593 .492604 48.6421 45.1904 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.211441 2.20577 -3.61593 .492604 48.6421 45.1904 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
49.4268 46.8594 mo
49.3828 46.6123 49.293 46.3066 49.1143 45.9648 cv
48.6465 45.0684 47.604 44.5664 47.604 44.5664 cv
47.604 44.5664 48.752 44.9531 49.3398 46.0215 cv
49.5298 46.3682 49.6348 46.6445 49.6885 46.8594 cv
49.4268 46.8594 li
cp
level3{
gsave
clp
[2.08447 0 0 2.08447 47.604 45.7129 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.08447 0 0 2.08447 47.604 45.7129 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
50.1348 46.8047 mo
50.2954 46.7051 50.479 46.5996 50.687 46.4932 cv
52.1187 45.7568 54.1987 45.4883 54.1987 45.4883 cv
54.1987 45.4883 52.0313 45.6318 50.2754 46.5039 cv
50.0591 46.6113 49.8706 46.7109 49.7065 46.8047 cv
50.1348 46.8047 li
cp
level3{
gsave
clp
[-1.78002 2.82273 -6.12578 -.774744 52.5024 45.2744 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.78002 2.82273 -6.12578 -.774744 52.5024 45.2744 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
50.5972 46.8643 mo
50.6895 46.4678 50.8232 45.9902 51.0176 45.4854 cv
51.5327 44.1387 52.2803 43.6602 52.2803 43.6602 cv
52.2803 43.6602 51.5024 43.9082 50.8696 45.502 cv
50.6494 46.0566 50.5093 46.5107 50.4199 46.8643 cv
50.5972 46.8643 li
cp
level3{
gsave
clp
[-.645186 5.18325 -2.2018 -1.52366 51.6069 43.1943 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.645186 5.18325 -2.2018 -1.52366 51.6069 43.1943 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
47.8462 47.3662 mo
47.8462 47.4727 47.6987 47.5586 47.5171 47.5586 cv
47.3354 47.5586 47.189 47.4727 47.189 47.3662 cv
47.189 47.2598 47.3354 47.1729 47.5171 47.1729 cv
47.6987 47.1729 47.8462 47.2598 47.8462 47.3662 cv
cp
level3{
gsave
clp
[.292266 0 0 .224951 47.5176 47.3672 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292266 0 0 .224951 47.5176 47.3672 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.4644 47.6758 mo
48.4644 47.7822 48.3169 47.8682 48.1353 47.8682 cv
47.9536 47.8682 47.8062 47.7822 47.8062 47.6758 cv
47.8062 47.5693 47.9536 47.4834 48.1353 47.4834 cv
48.3169 47.4834 48.4644 47.5693 48.4644 47.6758 cv
cp
level3{
gsave
clp
[.29226 0 0 .224947 48.1353 47.6768 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.29226 0 0 .224947 48.1353 47.6768 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.3276 46.7012 mo
48.3276 46.8076 48.1797 46.8936 47.9985 46.8936 cv
47.8169 46.8936 47.6699 46.8076 47.6699 46.7012 cv
47.6699 46.5947 47.8169 46.5078 47.9985 46.5078 cv
48.1797 46.5078 48.3276 46.5947 48.3276 46.7012 cv
cp
level3{
gsave
clp
[.292386 0 0 .225043 47.9985 46.7021 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292386 0 0 .225043 47.9985 46.7021 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.6157 47.25 mo
48.6157 47.3564 48.4688 47.4424 48.2871 47.4424 cv
48.106 47.4424 47.9585 47.3564 47.9585 47.25 cv
47.9585 47.1426 48.106 47.0566 48.2871 47.0566 cv
48.4688 47.0566 48.6157 47.1426 48.6157 47.25 cv
cp
level3{
gsave
clp
[.292262 0 0 .224948 48.2871 47.251 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292262 0 0 .224948 48.2871 47.251 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.3555 47.25 mo
49.3555 47.3564 49.208 47.4424 49.0264 47.4424 cv
48.8447 47.4424 48.6973 47.3564 48.6973 47.25 cv
48.6973 47.1426 48.8447 47.0566 49.0264 47.0566 cv
49.208 47.0566 49.3555 47.1426 49.3555 47.25 cv
cp
level3{
gsave
clp
[.292526 0 0 .225152 49.0264 47.251 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292526 0 0 .225152 49.0264 47.251 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.6704 47.4668 mo
49.6704 47.5723 49.5234 47.6592 49.3418 47.6592 cv
49.1602 47.6592 49.0127 47.5723 49.0127 47.4668 cv
49.0127 47.3594 49.1602 47.2734 49.3418 47.2734 cv
49.5234 47.2734 49.6704 47.3594 49.6704 47.4668 cv
cp
level3{
gsave
clp
[.292459 0 0 .225099 49.3413 47.4678 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292459 0 0 .225099 49.3413 47.4678 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.9292 46.9287 mo
49.8638 46.8115 50.0562 46.6299 50.3574 46.5234 cv
50.6592 46.416 50.9565 46.4248 51.0215 46.542 cv
51.0859 46.6582 50.8945 46.8398 50.5918 46.9473 cv
50.2905 47.0547 49.9941 47.0459 49.9292 46.9287 cv
cp
level3{
gsave
clp
[-.486337 .172244 -.137506 -.246063 50.4751 46.7354 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.486337 .172244 -.137506 -.246063 50.4751 46.7354 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.7314 46.9668 mo
49.7314 47.0947 49.5093 47.1973 49.2358 47.1973 cv
48.9624 47.1973 48.7407 47.0947 48.7407 46.9668 cv
48.7407 46.8389 48.9624 46.7354 49.2358 46.7354 cv
49.5093 46.7354 49.7314 46.8389 49.7314 46.9668 cv
cp
level3{
gsave
clp
[.440874 0 0 .269745 49.2349 46.9658 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.440874 0 0 .269745 49.2349 46.9658 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.9624 47.209 mo
49.8799 47.1875 49.8452 47.0244 49.8867 46.8428 cv
49.9282 46.6611 50.0298 46.5313 50.1138 46.5527 cv
50.1968 46.5742 50.23 46.7383 50.1895 46.9199 cv
50.147 47.1006 50.0464 47.2305 49.9624 47.209 cv
cp
level3{
gsave
clp
[-.066516 .292092 -.176412 -.044826 50.0391 46.8809 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.066516 .292092 -.176412 -.044826 50.0391 46.8809 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.1245 47.1738 mo
51.1636 47.3125 50.9858 47.4912 50.7266 47.5732 cv
50.4668 47.6553 50.2241 47.6094 50.1846 47.4707 cv
50.1455 47.333 50.3247 47.1543 50.584 47.0713 cv
50.8428 46.9902 51.085 47.0352 51.1245 47.1738 cv
cp
level3{
gsave
clp
[.417177 -.131816 .0840148 .292603 50.6558 47.3213 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417177 -.131816 .0840148 .292603 50.6558 47.3213 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.7964 46.9004 mo
49.7837 46.9873 49.5811 47.0273 49.3433 46.9873 cv
49.106 46.9482 48.9243 46.8457 48.938 46.7568 cv
48.9507 46.6689 49.1543 46.6299 49.3911 46.668 cv
49.6284 46.709 49.8101 46.8115 49.7964 46.9004 cv
cp
level3{
gsave
clp
[.382582 .0637637 -.0275343 .185494 49.3677 46.8281 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.382582 .0637637 -.0275343 .185494 49.3677 46.8281 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.5195 46.9814 mo
48.5259 47.1094 48.3086 47.2236 48.0347 47.2354 cv
47.7617 47.249 47.5352 47.1553 47.5308 47.0283 cv
47.5249 46.9004 47.7417 46.7871 48.0151 46.7744 cv
48.2891 46.7617 48.5142 46.8545 48.5195 46.9814 cv
cp
level3{
gsave
clp
[.439532 -.0202416 .0115666 .268924 48.0229 47.0029 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.439532 -.0202416 .0115666 .268924 48.0229 47.0029 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.9229 46.7988 mo
49.9526 46.8975 49.7783 47.042 49.5347 47.1211 cv
49.2905 47.2021 49.0698 47.1885 49.041 47.0898 cv
49.0122 46.9922 49.186 46.8477 49.4287 46.7676 cv
49.6724 46.6875 49.894 46.7021 49.9229 46.7988 cv
cp
level3{
gsave
clp
[.391914 -.12871 .0607395 .206803 49.4819 46.9443 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.391914 -.12871 .0607395 .206803 49.4819 46.9443 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.1406 46.9688 mo
49.145 47.0781 48.9639 47.1768 48.7339 47.1865 cv
48.5044 47.1992 48.3145 47.1182 48.3101 47.0078 cv
48.3057 46.8984 48.4878 46.8008 48.7173 46.7891 cv
48.9463 46.7793 49.1362 46.8594 49.1406 46.9688 cv
cp
level3{
gsave
clp
[.369082 -.0173685 .0101317 .231581 48.7261 46.9863 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.369082 -.0173685 .0101317 .231581 48.7261 46.9863 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.8032 46.9473 mo
48.8032 47.0518 48.6479 47.1367 48.4561 47.1367 cv
48.2646 47.1367 48.1094 47.0518 48.1094 46.9473 cv
48.1094 46.8428 48.2646 46.7588 48.4561 46.7588 cv
48.6479 46.7588 48.8032 46.8428 48.8032 46.9473 cv
cp
level3{
gsave
clp
[.307531 0 0 .220902 48.4565 46.9482 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307531 0 0 .220902 48.4565 46.9482 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.7222 46.9756 mo
47.7222 47.0811 47.5669 47.165 47.375 47.165 cv
47.1836 47.165 47.0283 47.0811 47.0283 46.9756 cv
47.0283 46.8711 47.1836 46.7861 47.375 46.7861 cv
47.5669 46.7861 47.7222 46.8711 47.7222 46.9756 cv
cp
level3{
gsave
clp
[.307819 0 0 .22111 47.3755 46.9766 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307819 0 0 .22111 47.3755 46.9766 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.064 47.0947 mo
48.0308 47.1768 47.8252 47.1621 47.604 47.0615 cv
47.3843 46.9619 47.2319 46.8145 47.2651 46.7324 cv
47.2983 46.6514 47.5044 46.666 47.7251 46.7656 cv
47.9453 46.8652 48.0977 47.0127 48.064 47.0947 cv
cp
level3{
gsave
clp
[.355774 .160532 -.0708655 .172102 47.6641 46.915 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.355774 .160532 -.0708655 .172102 47.6641 46.915 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.8999 46.7598 mo
47.8657 46.8418 47.6611 46.8271 47.4399 46.7266 cv
47.2192 46.6279 47.0679 46.4805 47.1011 46.3984 cv
47.1343 46.3164 47.3403 46.3311 47.561 46.4307 cv
47.7813 46.5303 47.9331 46.6787 47.8999 46.7598 cv
cp
level3{
gsave
clp
[.355677 .160488 -.0708462 .172055 47.5 46.5801 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.355677 .160488 -.0708462 .172055 47.5 46.5801 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.563 47.1094 mo
50.5684 47.2363 50.3511 47.3506 50.0771 47.3633 cv
49.8042 47.376 49.5781 47.2832 49.5732 47.1553 cv
49.5674 47.0283 49.7847 46.9141 50.0586 46.9014 cv
50.3315 46.8887 50.5571 46.9814 50.563 47.1094 cv
cp
level3{
gsave
clp
[.440094 -.0202675 .0115814 .269268 50.0669 47.1309 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.440094 -.0202675 .0115814 .269268 50.0669 47.1309 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.6392 46.7314 mo
47.6685 46.8291 47.4946 46.9736 47.251 47.0547 cv
47.0073 47.1348 46.7866 47.1201 46.7568 47.0215 cv
46.728 46.9238 46.9023 46.7793 47.1455 46.6992 cv
47.3892 46.6191 47.6104 46.6338 47.6392 46.7314 cv
cp
level3{
gsave
clp
[.392617 -.128941 .0608484 .207174 47.1982 46.877 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.392617 -.128941 .0608484 .207174 47.1982 46.877 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.7988 47.3164 mo
47.7676 47.3516 47.6895 47.3262 47.6226 47.2607 cv
47.5557 47.1953 47.5269 47.1133 47.5581 47.0781 cv
47.5889 47.0449 47.6675 47.0703 47.7334 47.1348 cv
47.8003 47.2012 47.8296 47.2832 47.7988 47.3164 cv
cp
level3{
gsave
clp
[.000991861 .000978457 -.000603158 .000670176 848.586 256.604 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.000991861 .000978457 -.000603158 .000670176 848.586 256.604 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.0225 47.0313 mo
49.0278 47.1416 48.8457 47.2393 48.6157 47.25 cv
48.3872 47.2598 48.1968 47.1797 48.1919 47.0703 cv
48.1875 46.96 48.3706 46.8633 48.5996 46.8525 cv
48.8291 46.8418 49.0181 46.9209 49.0225 47.0313 cv
cp
level3{
gsave
clp
[.369099 -.0173694 .0101321 .231591 48.6079 47.0498 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.369099 -.0173694 .0101321 .231591 48.6079 47.0498 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.292 46.9238 mo
49.292 47.0293 49.1367 47.1143 48.9453 47.1143 cv
48.7539 47.1143 48.5981 47.0293 48.5981 46.9238 cv
48.5981 46.8193 48.7539 46.7354 48.9453 46.7354 cv
49.1367 46.7354 49.292 46.8193 49.292 46.9238 cv
cp
level3{
gsave
clp
[.307824 0 0 .221113 48.9453 46.9258 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307824 0 0 .221113 48.9453 46.9258 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.5991 47.2461 mo
47.5854 47.333 47.3823 47.373 47.145 47.334 cv
46.9072 47.2949 46.7266 47.1924 46.7393 47.1035 cv
46.7529 47.0156 46.9561 46.9766 47.1934 47.0146 cv
47.4302 47.0547 47.6118 47.1582 47.5991 47.2461 cv
cp
level3{
gsave
clp
[.382942 .0638237 -.0275602 .185669 47.1694 47.1748 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.382942 .0638237 -.0275602 .185669 47.1694 47.1748 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
50.5054 47.8711 mo
50.5054 47.9775 50.3589 48.0645 50.1772 48.0645 cv
49.9956 48.0645 49.8486 47.9775 49.8486 47.8711 cv
49.8486 47.7646 49.9956 47.6787 50.1772 47.6787 cv
50.3589 47.6787 50.5054 47.7646 50.5054 47.8711 cv
cp
level3{
gsave
clp
[.292122 0 0 .22484 50.1768 47.873 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292122 0 0 .22484 50.1768 47.873 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.6929 47.0078 mo
49.6929 47.1152 49.5464 47.2012 49.3647 47.2012 cv
49.1831 47.2012 49.0356 47.1152 49.0356 47.0078 cv
49.0356 46.9023 49.1831 46.8164 49.3647 46.8164 cv
49.5464 46.8164 49.6929 46.9023 49.6929 47.0078 cv
cp
level3{
gsave
clp
[.291988 0 0 .224737 49.3643 47.0098 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291988 0 0 .224737 49.3643 47.0098 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
53.27 46.5234 mo
53.27 46.6445 53.0708 46.7422 52.8257 46.7422 cv
52.5806 46.7422 52.3818 46.6445 52.3818 46.5234 cv
52.3818 46.4023 52.5806 46.3047 52.8257 46.3047 cv
53.0708 46.3047 53.27 46.4023 53.27 46.5234 cv
cp
level3{
gsave
clp
[.394883 0 0 .255011 52.8262 46.5225 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394883 0 0 .255011 52.8262 46.5225 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.2217 46.4355 mo
54.1714 46.585 53.6968 46.6416 53.1592 46.5605 cv
52.6221 46.4805 52.2261 46.2949 52.2759 46.1445 cv
52.3257 45.9961 52.8003 45.9395 53.3379 46.0205 cv
53.875 46.1006 54.2705 46.2852 54.2217 46.4355 cv
cp
level3{
gsave
clp
[.864783 .128705 -.104121 .315256 53.2505 46.2891 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.864783 .128705 -.104121 .315256 53.2505 46.2891 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.728 46.7744 mo
56.6396 46.6416 56.8999 46.4355 57.3062 46.3145 cv
57.7129 46.1924 58.1138 46.2021 58.2017 46.3359 cv
58.2886 46.4678 58.0298 46.6738 57.6221 46.7959 cv
57.2153 46.917 56.8149 46.9072 56.728 46.7744 cv
cp
level3{
gsave
clp
[-.655024 .195206 -.185084 -.280518 57.4639 46.5547 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.655024 .195206 -.185084 -.280518 57.4639 46.5547 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.2227 46.2568 mo
56.1704 46.1162 56.479 45.9434 56.9111 45.8721 cv
57.3433 45.7998 57.7358 45.8555 57.7876 45.9971 cv
57.8394 46.1377 57.5313 46.3105 57.0981 46.3828 cv
56.666 46.4541 56.2749 46.3984 56.2227 46.2568 cv
cp
level3{
gsave
clp
[-.694771 .115555 -.109777 -.297553 57.0049 46.127 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.694771 .115555 -.109777 -.297553 57.0049 46.127 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.7324 46.0156 mo
56.8096 46.1885 56.5601 46.3916 56.1733 46.4697 cv
55.7876 46.5469 55.4131 46.4707 55.335 46.2979 cv
55.2578 46.124 55.5083 45.9209 55.895 45.8428 cv
56.2793 45.7646 56.6553 45.8418 56.7324 46.0156 cv
cp
level3{
gsave
clp
[.621099 -.125664 .163219 .365438 56.0342 46.1572 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.621099 -.125664 .163219 .365438 56.0342 46.1572 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.3945 46.3525 mo
56.3579 46.5371 55.8799 46.6465 55.3252 46.5977 cv
54.769 46.5479 54.3496 46.3594 54.3843 46.1748 cv
54.4204 45.9912 54.9004 45.8818 55.4546 45.9297 cv
56.0093 45.9795 56.4307 46.168 56.3945 46.3525 cv
cp
level3{
gsave
clp
[.893741 .0782205 -.0753234 .389654 55.3882 46.2637 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.893741 .0782205 -.0753234 .389654 55.3882 46.2637 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
51.6714 46.6484 mo
51.5835 46.5156 51.8433 46.3096 52.2495 46.1885 cv
52.6563 46.0674 53.0581 46.0771 53.146 46.209 cv
53.2329 46.3428 52.9741 46.5479 52.5664 46.6689 cv
52.1592 46.791 51.7583 46.7822 51.6714 46.6484 cv
cp
level3{
gsave
clp
[-.655069 .195219 -.185097 -.280537 52.4077 46.4287 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.655069 .195219 -.185097 -.280537 52.4077 46.4287 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.9067 46.2021 mo
54.9839 46.376 54.7344 46.5791 54.3486 46.6572 cv
53.9629 46.7354 53.5874 46.6582 53.5088 46.4844 cv
53.4326 46.3115 53.6831 46.1074 54.0688 46.0303 cv
54.4536 45.9521 54.8296 46.0293 54.9067 46.2021 cv
cp
level3{
gsave
clp
[.621314 -.125708 .163275 .365564 54.2085 46.3447 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.621314 -.125708 .163275 .365564 54.2085 46.3447 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.2236 46.1816 mo
54.2236 46.3369 53.8862 46.4619 53.4702 46.4619 cv
53.0532 46.4619 52.7163 46.3369 52.7163 46.1816 cv
52.7163 46.0273 53.0532 45.9023 53.4702 45.9023 cv
53.8862 45.9023 54.2236 46.0273 54.2236 46.1816 cv
cp
level3{
gsave
clp
[.669459 0 0 .326777 53.4702 46.1836 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.669459 0 0 .326777 53.4702 46.1836 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.1753 46.5352 mo
57.1753 46.6563 56.9761 46.7549 56.731 46.7549 cv
56.4858 46.7549 56.2876 46.6563 56.2876 46.5352 cv
56.2876 46.4141 56.4858 46.3164 56.731 46.3164 cv
56.9761 46.3164 57.1753 46.4141 57.1753 46.5352 cv
cp
level3{
gsave
clp
[.395069 0 0 .255131 56.7314 46.5342 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395069 0 0 .255131 56.7314 46.5342 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
52.688 46.4766 mo
52.688 46.5977 52.4893 46.6953 52.2441 46.6953 cv
51.999 46.6953 51.7998 46.5977 51.7998 46.4766 cv
51.7998 46.3545 51.999 46.2568 52.2441 46.2568 cv
52.4893 46.2568 52.688 46.3545 52.688 46.4766 cv
cp
level3{
gsave
clp
[.395194 0 0 .255212 52.2441 46.4746 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395194 0 0 .255212 52.2441 46.4746 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.5547 46.6748 mo
55.8726 45.9688 56.3936 44.9521 57.1592 43.8867 cv
58.5898 41.8916 60.1406 41.3984 60.1406 41.3984 cv
60.1406 41.3984 58.6162 41.5029 56.8799 43.8574 cv
55.9409 45.1309 55.4478 46.0752 55.1929 46.6748 cv
55.5547 46.6748 li
cp
level3{
gsave
clp
[-3.52233 6.94652 -6.19723 -3.57837 59.2534 40.8857 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.52233 6.94652 -6.19723 -3.57837 59.2534 40.8857 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
54.8345 46.5039 mo
55.1943 46.1152 55.6567 45.6699 56.231 45.2109 cv
57.9565 43.8281 59.7979 43.4756 59.7979 43.4756 cv
59.7979 43.4756 57.9927 43.5625 55.9004 45.1943 cv
55.2397 45.709 54.7607 46.1465 54.4146 46.5039 cv
54.8345 46.5039 li
cp
level3{
gsave
clp
[-3.0305 6.22871 -5.14168 -3.11728 58.2866 42.5596 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.0305 6.22871 -5.14168 -3.11728 58.2866 42.5596 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
52.6191 46.3818 mo
52.6406 46.3184 52.6655 46.2529 52.6948 46.1855 cv
53.1055 45.2617 54.5908 44.5879 54.5908 44.5879 cv
54.5908 44.5879 52.8931 45.1758 52.3545 46.2832 cv
52.3379 46.3164 52.3228 46.3496 52.3081 46.3818 cv
52.6191 46.3818 li
cp
level3{
gsave
clp
[.0555386 2.04714 -3.16353 1.24935 53.4375 45.041 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0555386 2.04714 -3.16353 1.24935 53.4375 45.041 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.0249 46.6143 mo
54.9302 46.2314 54.7754 45.7881 54.522 45.3066 cv
53.6738 43.6924 51.7817 43.4434 51.7817 43.4434 cv
51.7817 43.4434 53.8643 43.4854 54.9312 45.4092 cv
55.1929 45.8809 55.3638 46.2793 55.4751 46.6143 cv
55.0249 46.6143 li
cp
level3{
gsave
clp
[.328638 3.75404 3.58798 .645555 53.5161 43.7295 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.328638 3.75404 3.58798 .645555 53.5161 43.7295 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
53.3682 46.3818 mo
54.5327 46.1758 55.5327 46.1475 55.5327 46.1475 cv
55.5327 46.1475 54.3267 46.1113 52.8628 46.3818 cv
53.3682 46.3818 li
cp
level3{
gsave
clp
[-2.77714 3.25269 -6.55478 -2.52167 54.6021 45.79 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.77714 3.25269 -6.55478 -2.52167 54.6021 45.79 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.1118 46.1816 mo
56.1099 46.0303 56.9058 46.0078 56.9058 46.0078 cv
56.9058 46.0078 55.8896 45.9766 54.5894 46.1816 cv
55.1118 46.1816 li
cp
level3{
gsave
clp
[-2.80603 3.28652 -6.62296 -2.54789 56.0884 45.6934 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.80603 3.28652 -6.62296 -2.54789 56.0884 45.6934 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.6968 46.0391 mo
55.9678 45.7324 56.3271 45.3877 56.7974 45.0264 cv
58.4258 43.7803 60.8042 43.3301 60.8042 43.3301 cv
60.8042 43.3301 58.3257 43.5674 56.3262 45.0439 cv
55.8071 45.4287 55.4297 45.7598 55.1553 46.0391 cv
55.6968 46.0391 li
cp
level3{
gsave
clp
[-1.78622 5.04381 -6.22129 -1.43076 58.6372 42.8311 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.78622 5.04381 -6.22129 -1.43076 58.6372 42.8311 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
55.8486 45.7412 mo
57.6274 45.5625 59.2231 45.5771 59.2231 45.5771 cv
59.2231 45.5771 57.1855 45.4746 54.8774 45.7412 cv
55.8486 45.7412 li
cp
level3{
gsave
clp
[-4.20332 3.40098 -11.0442 -3.60446 57.7471 45.0957 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.20332 3.40098 -11.0442 -3.60446 57.7471 45.0957 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.3604 46.4395 mo
55.584 46.3691 55.8247 46.2998 56.0806 46.2305 cv
58.8667 45.4785 62.3823 45.4453 62.3823 45.4453 cv
62.3823 45.4453 58.8115 45.2998 55.4126 46.1816 cv
55.0688 46.2705 54.7588 46.3564 54.479 46.4395 cv
55.3604 46.4395 li
cp
level3{
gsave
clp
[-4.57279 4.54232 -11.3953 -4.03823 59.8374 44.5439 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.57279 4.54232 -11.3953 -4.03823 59.8374 44.5439 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
54.7607 46.5508 mo
54.5059 46.3184 54.1943 46.0742 53.8145 45.832 cv
51.9609 44.6504 49.0815 44.5664 49.0815 44.5664 cv
49.0815 44.5664 52.1133 44.3779 54.3955 45.7627 cv
54.8677 46.0498 55.2324 46.3135 55.5151 46.5508 cv
54.7607 46.5508 li
cp
level3{
gsave
clp
[2.41328 6.57241 9.70921 -5.53781 51.4409 43.2217 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.41328 6.57241 9.70921 -5.53781 51.4409 43.2217 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
53.7646 46.3662 mo
53.6309 46.2822 53.48 46.1943 53.312 46.1035 cv
52.3804 45.5977 51.395 45.3945 51.395 45.3945 cv
51.395 45.3945 52.3599 45.5146 53.4883 46.1143 cv
53.6602 46.2061 53.8086 46.2891 53.938 46.3662 cv
53.7646 46.3662 li
cp
level3{
gsave
clp
[1.41397 1.93973 2.35984 -.388164 52.2139 45.2598 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.41397 1.93973 2.35984 -.388164 52.2139 45.2598 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
54.1748 46.1865 mo
54.4233 46.0605 54.7188 45.9258 55.0645 45.792 cv
56.6318 45.1846 58.5146 45.0908 58.5146 45.0908 cv
58.5146 45.0908 56.6196 45.0537 54.7124 45.7686 cv
54.3032 45.9229 53.9766 46.0615 53.7148 46.1865 cv
54.1748 46.1865 li
cp
level3{
gsave
clp
[-2.48592 3.32644 -5.55182 -2.31446 56.9971 44.458 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.48592 3.32644 -5.55182 -2.31446 56.9971 44.458 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
53.2041 46.5254 mo
53.0718 46.3154 52.8823 46.0791 52.6089 45.8359 cv
51.7388 45.0635 50.2559 44.8789 50.2559 44.8789 cv
50.2559 44.8789 51.8379 44.9121 52.9126 45.8223 cv
53.2358 46.0967 53.4468 46.3311 53.5815 46.5254 cv
53.2041 46.5254 li
cp
level3{
gsave
clp
[.671377 4.96394 3.37522 -2.63801 51.6602 43.7803 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.671377 4.96394 3.37522 -2.63801 51.6602 43.7803 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
54.8716 46.3818 mo
54.957 46.332 55.0464 46.2822 55.1401 46.2314 cv
56.5366 45.4756 58.2441 45.2861 58.2441 45.2861 cv
58.2441 45.2861 56.52 45.3291 54.8193 46.2207 cv
54.7134 46.2764 54.6143 46.3301 54.5205 46.3818 cv
54.8716 46.3818 li
cp
level3{
gsave
clp
[-2.04508 3.7392 -4.7582 -1.9056 56.9619 44.7725 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.04508 3.7392 -4.7582 -1.9056 56.9619 44.7725 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
53.8872 46.3818 mo
53.8569 46.2676 53.8125 46.1475 53.748 46.0234 cv
53.291 45.1348 51.6616 44.6904 51.6616 44.6904 cv
51.6616 44.6904 53.5234 45.0098 54.1226 46.0664 cv
54.1851 46.1787 54.2358 46.2842 54.2759 46.3818 cv
53.8872 46.3818 li
cp
level3{
gsave
clp
[-.0690713 2.82871 4.57006 .0750649 52.9883 44.7129 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0690713 2.82871 4.57006 .0750649 52.9883 44.7129 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.417 46.5371 mo
55.2397 46.3936 55.0386 46.2451 54.8101 46.0957 cv
53.0415 44.9355 50.1206 44.5752 50.1206 44.5752 cv
50.1206 44.5752 53.2212 44.7246 55.4077 46.0967 cv
55.6553 46.252 55.8716 46.3994 56.0601 46.5371 cv
55.417 46.5371 li
cp
level3{
gsave
clp
[1.81461 4.9827 8.437 -1.93494 52.5317 44.0225 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.81461 4.9827 8.437 -1.93494 52.5317 44.0225 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
56.4009 46.4434 mo
56.3359 46.3008 56.2437 46.1465 56.1177 45.9834 cv
55.4492 45.1211 53.7788 44.6201 53.7788 44.6201 cv
53.7788 44.6201 55.6377 45.0137 56.4858 46.043 cv
56.606 46.1895 56.7017 46.3223 56.7749 46.4434 cv
56.4009 46.4434 li
cp
level3{
gsave
clp
[.231034 2.41017 3.951 .538251 55.2085 44.8154 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.231034 2.41017 3.951 .538251 55.2085 44.8154 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
54.2759 46.5596 mo
53.959 46.2061 53.437 45.6963 52.6729 45.1641 cv
51.2407 44.1631 49.6899 43.917 49.6899 43.917 cv
49.6899 43.917 51.2153 43.9697 52.9512 45.1484 cv
53.8896 45.7852 54.3828 46.2588 54.6382 46.5596 cv
54.2759 46.5596 li
cp
level3{
gsave
clp
[2.38181 4.69724 4.19057 -2.4197 51.0854 43.1113 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.38181 4.69724 4.19057 -2.4197 51.0854 43.1113 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
54.6543 46.6768 mo
54.5083 46.4082 54.3169 46.1055 54.0649 45.7881 cv
53.1958 44.6953 51.9248 44.3008 51.9248 44.3008 cv
51.9248 44.3008 53.25 44.5078 54.3169 45.8037 cv
54.5947 46.1406 54.7964 46.4316 54.9434 46.6768 cv
54.6543 46.6768 li
cp
level3{
gsave
clp
[1.36821 3.86346 4.76539 -1.09594 52.9302 44.0693 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.36821 3.86346 4.76539 -1.09594 52.9302 44.0693 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
53.0283 46.4629 mo
53.0942 46.3193 53.1865 46.165 53.313 46.002 cv
53.98 45.1396 55.6514 44.6387 55.6514 44.6387 cv
55.6514 44.6387 53.7925 45.0332 52.9443 46.0605 cv
52.8237 46.208 52.729 46.3418 52.6548 46.4629 cv
53.0283 46.4629 li
cp
level3{
gsave
clp
[-.231165 2.41154 -3.95325 .538558 54.2222 44.833 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.231165 2.41154 -3.95325 .538558 54.2222 44.833 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.2988 46.6953 mo
55.2397 46.416 55.1172 46.0684 54.8765 45.6797 cv
54.2456 44.6621 52.8384 44.0918 52.8384 44.0918 cv
52.8384 44.0918 54.3882 44.5313 55.1807 45.7441 cv
55.438 46.1377 55.5796 46.4521 55.6523 46.6953 cv
55.2988 46.6953 li
cp
level3{
gsave
clp
[2.81396 0 0 2.81396 52.8384 45.3936 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.81396 0 0 2.81396 52.8384 45.3936 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.2544 46.6338 mo
56.4717 46.5195 56.7197 46.4004 57.0005 46.2793 cv
58.9326 45.4434 61.7407 45.1377 61.7407 45.1377 cv
61.7407 45.1377 58.8154 45.3018 56.4443 46.292 cv
56.1523 46.4141 55.8979 46.5273 55.6763 46.6338 cv
56.2544 46.6338 li
cp
level3{
gsave
clp
[-2.13755 3.3897 -7.35622 -.93036 59.3691 44.8379 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.13755 3.3897 -7.35622 -.93036 59.3691 44.8379 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
56.8794 46.7021 mo
57.0034 46.252 57.1841 45.709 57.4468 45.1348 cv
58.1421 43.6055 59.1509 43.0625 59.1509 43.0625 cv
59.1509 43.0625 58.1011 43.3438 57.2471 45.1543 cv
56.9487 45.7842 56.7598 46.2988 56.6401 46.7021 cv
56.8794 46.7021 li
cp
level3{
gsave
clp
[-.772398 6.20523 -2.63593 -1.82408 58.2031 42.4072 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.772398 6.20523 -2.63593 -1.82408 58.2031 42.4072 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
53.1655 47.2715 mo
53.1655 47.3926 52.9663 47.4902 52.7212 47.4902 cv
52.4761 47.4902 52.2773 47.3926 52.2773 47.2715 cv
52.2773 47.1504 52.4761 47.0527 52.7212 47.0527 cv
52.9663 47.0527 53.1655 47.1504 53.1655 47.2715 cv
cp
level3{
gsave
clp
[.394881 0 0 .25501 52.7217 47.2705 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394881 0 0 .25501 52.7217 47.2705 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54 47.623 mo
54 47.7441 53.8008 47.8418 53.5557 47.8418 cv
53.3101 47.8418 53.1118 47.7441 53.1118 47.623 cv
53.1118 47.502 53.3101 47.4033 53.5557 47.4033 cv
53.8008 47.4033 54 47.502 54 47.623 cv
cp
level3{
gsave
clp
[.395207 0 0 .25522 53.5562 47.6211 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395207 0 0 .25522 53.5562 47.6211 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
53.8145 46.5156 mo
53.8145 46.6367 53.6157 46.7354 53.3711 46.7354 cv
53.1255 46.7354 52.9263 46.6367 52.9263 46.5156 cv
52.9263 46.3955 53.1255 46.2969 53.3711 46.2969 cv
53.6157 46.2969 53.8145 46.3955 53.8145 46.5156 cv
cp
level3{
gsave
clp
[.395218 0 0 .255227 53.3706 46.5146 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395218 0 0 .255227 53.3706 46.5146 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.2051 47.1387 mo
54.2051 47.2598 54.0059 47.3574 53.7607 47.3574 cv
53.5156 47.3574 53.3169 47.2598 53.3169 47.1387 cv
53.3169 47.0176 53.5156 46.9199 53.7607 46.9199 cv
54.0059 46.9199 54.2051 47.0176 54.2051 47.1387 cv
cp
level3{
gsave
clp
[.394868 0 0 .255001 53.7612 47.1377 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394868 0 0 .255001 53.7612 47.1377 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.2021 47.1387 mo
55.2021 47.2598 55.0039 47.3574 54.7588 47.3574 cv
54.5137 47.3574 54.3145 47.2598 54.3145 47.1387 cv
54.3145 47.0176 54.5137 46.9199 54.7588 46.9199 cv
55.0039 46.9199 55.2021 47.0176 55.2021 47.1387 cv
cp
level3{
gsave
clp
[.394731 0 0 .254913 54.7583 47.1377 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394731 0 0 .254913 54.7583 47.1377 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.6279 47.3848 mo
55.6279 47.5059 55.4292 47.6045 55.1846 47.6045 cv
54.939 47.6045 54.7397 47.5059 54.7397 47.3848 cv
54.7397 47.2646 54.939 47.166 55.1846 47.166 cv
55.4292 47.166 55.6279 47.2646 55.6279 47.3848 cv
cp
level3{
gsave
clp
[.395202 0 0 .255217 55.1841 47.3838 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395202 0 0 .255217 55.1841 47.3838 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.9766 46.7744 mo
55.8892 46.6416 56.1494 46.4355 56.5547 46.3145 cv
56.9624 46.1924 57.3643 46.2021 57.4512 46.3359 cv
57.5381 46.4678 57.2793 46.6738 56.8716 46.7959 cv
56.4653 46.917 56.0645 46.9072 55.9766 46.7744 cv
cp
level3{
gsave
clp
[-.655336 .195299 -.185172 -.280652 56.7129 46.5547 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.655336 .195299 -.185172 -.280652 56.7129 46.5547 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.7095 46.8174 mo
55.7095 46.9629 55.4106 47.0801 55.041 47.0801 cv
54.6719 47.0801 54.3721 46.9629 54.3721 46.8174 cv
54.3721 46.6729 54.6719 46.5547 55.041 46.5547 cv
55.4106 46.5547 55.7095 46.6729 55.7095 46.8174 cv
cp
level3{
gsave
clp
[.594349 0 0 .306574 55.0405 46.8174 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.594349 0 0 .306574 55.0405 46.8174 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.0229 47.0928 mo
55.9102 47.0684 55.8638 46.8828 55.9199 46.6768 cv
55.9761 46.4707 56.1128 46.3232 56.2256 46.3477 cv
56.3384 46.3721 56.3838 46.5576 56.3276 46.7637 cv
56.271 46.9697 56.1357 47.1172 56.0229 47.0928 cv
cp
level3{
gsave
clp
[-.0898659 .331924 -.23771 -.0507308 56.1245 46.7197 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0898659 .331924 -.23771 -.0507308 56.1245 46.7197 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.5913 47.0527 mo
57.644 47.21 57.4033 47.4131 57.0532 47.5068 cv
56.7031 47.5996 56.376 47.5479 56.3223 47.3906 cv
56.2695 47.2324 56.5107 47.0313 56.8604 46.9365 cv
57.2104 46.8438 57.5376 46.8965 57.5913 47.0527 cv
cp
level3{
gsave
clp
[.564698 -.150973 .11323 .332431 56.9565 47.2207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.564698 -.150973 .11323 .332431 56.9565 47.2207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.7983 46.7422 mo
55.7798 46.8418 55.5068 46.8867 55.187 46.8418 cv
54.8662 46.7969 54.6211 46.6797 54.6392 46.5801 cv
54.6567 46.4805 54.9302 46.4346 55.2505 46.4795 cv
55.5713 46.5244 55.8164 46.6416 55.7983 46.7422 cv
cp
level3{
gsave
clp
[.515176 .0723562 -.0376252 .21128 55.2212 46.6621 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.515176 .0723562 -.0376252 .21128 55.2212 46.6621 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.0747 46.835 mo
54.0825 46.9805 53.7886 47.1094 53.4194 47.124 cv
53.0503 47.1387 52.7456 47.0322 52.7388 46.8877 cv
52.731 46.7422 53.0249 46.6143 53.3931 46.5996 cv
53.7622 46.585 54.0674 46.6904 54.0747 46.835 cv
cp
level3{
gsave
clp
[.593787 -.0231158 .0158921 .306284 53.4077 46.8613 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.593787 -.0231158 .0158921 .306284 53.4077 46.8613 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.9692 46.6279 mo
56.0083 46.7393 55.7729 46.9033 55.4448 46.9941 cv
55.1152 47.085 54.8169 47.0693 54.7778 46.958 cv
54.7388 46.8457 54.9736 46.6826 55.3018 46.5918 cv
55.6309 46.5 55.9297 46.5166 55.9692 46.6279 cv
cp
level3{
gsave
clp
[.530117 -.146289 .0825592 .234642 55.3735 46.793 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.530117 -.146289 .0825592 .234642 55.3735 46.793 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.9121 46.8203 mo
54.9189 46.9443 54.6733 47.0557 54.3628 47.0674 cv
54.0537 47.0811 53.7979 46.9893 53.791 46.8643 cv
53.7852 46.7402 54.0308 46.6289 54.3413 46.6172 cv
54.6504 46.6045 54.9063 46.6953 54.9121 46.8203 cv
cp
level3{
gsave
clp
[.498736 -.0202386 .0130105 .263101 54.3516 46.8438 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.498736 -.0202386 .0130105 .263101 54.3516 46.8438 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.4575 46.7959 mo
54.4575 46.915 54.2471 47.0107 53.9888 47.0107 cv
53.7305 47.0107 53.52 46.915 53.52 46.7959 cv
53.52 46.6768 53.7305 46.5811 53.9888 46.5811 cv
54.2471 46.5811 54.4575 46.6768 54.4575 46.7959 cv
cp
level3{
gsave
clp
[.417124 0 0 .250564 53.9902 46.7949 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417124 0 0 .250564 53.9902 46.7949 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
52.9976 46.8281 mo
52.9976 46.9473 52.7881 47.0439 52.5293 47.0439 cv
52.2705 47.0439 52.061 46.9473 52.061 46.8281 cv
52.061 46.709 52.2705 46.6123 52.5293 46.6123 cv
52.7881 46.6123 52.9976 46.709 52.9976 46.8281 cv
cp
level3{
gsave
clp
[.417565 0 0 .250829 52.5308 46.8271 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417565 0 0 .250829 52.5308 46.8271 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
53.46 46.9629 mo
53.4146 47.0557 53.1367 47.04 52.8384 46.9258 cv
52.5415 46.8125 52.3364 46.6445 52.3809 46.5527 cv
52.4263 46.459 52.7041 46.4766 53.002 46.5889 cv
53.2993 46.7021 53.5044 46.8701 53.46 46.9629 cv
cp
level3{
gsave
clp
[.481675 .182804 -.0957547 .195862 52.9194 46.7568 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.481675 .182804 -.0957547 .195862 52.9194 46.7568 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
53.2373 46.583 mo
53.1919 46.6758 52.9141 46.6592 52.6167 46.5459 cv
52.3188 46.4326 52.1138 46.2646 52.1592 46.1709 cv
52.2046 46.0791 52.4814 46.0957 52.7798 46.209 cv
53.0776 46.3223 53.2827 46.4902 53.2373 46.583 cv
cp
level3{
gsave
clp
[.481586 .182771 -.095737 .195826 52.6968 46.377 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.481586 .182771 -.095737 .195826 52.6968 46.377 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.833 46.9795 mo
56.8398 47.125 56.5474 47.2539 56.1777 47.2686 cv
55.8081 47.2822 55.5029 47.1777 55.4961 47.0322 cv
55.4888 46.8877 55.7822 46.7588 56.1523 46.7432 cv
56.5205 46.7285 56.8257 46.835 56.833 46.9795 cv
cp
level3{
gsave
clp
[.594466 -.0231422 .0159103 .306635 56.1655 47.0059 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.594466 -.0231422 .0159103 .306635 56.1655 47.0059 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
52.8857 46.5508 mo
52.9248 46.6621 52.6904 46.8262 52.3613 46.917 cv
52.0322 47.0078 51.7339 46.9922 51.6948 46.8799 cv
51.6553 46.7686 51.8901 46.6055 52.2197 46.5137 cv
52.5483 46.4229 52.8472 46.4395 52.8857 46.5508 cv
cp
level3{
gsave
clp
[.530192 -.14631 .0825709 .234675 52.29 46.7148 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.530192 -.14631 .0825709 .234675 52.29 46.7148 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
53.1011 47.2158 mo
53.0596 47.2549 52.9536 47.2256 52.8638 47.1514 cv
52.7734 47.0771 52.7349 46.9844 52.7759 46.9453 cv
52.8174 46.9063 52.9233 46.9355 53.0132 47.0098 cv
53.1025 47.085 53.1426 47.1768 53.1011 47.2158 cv
cp
level3{
gsave
clp
[.144341 .119803 -.0880479 .0822742 52.939 47.0801 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.144341 .119803 -.0880479 .0822742 52.939 47.0801 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.7534 46.8906 mo
54.7603 47.0166 54.5142 47.127 54.2051 47.1387 cv
53.8945 47.1514 53.6382 47.0605 53.6323 46.9355 cv
53.626 46.8105 53.8726 46.7002 54.1821 46.6885 cv
54.4917 46.6748 54.7476 46.7656 54.7534 46.8906 cv
cp
level3{
gsave
clp
[.498762 -.0202396 .0130112 .263115 54.1929 46.915 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.498762 -.0202396 .0130112 .263115 54.1929 46.915 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.1172 46.7695 mo
55.1172 46.8887 54.9067 46.9854 54.6489 46.9854 cv
54.3911 46.9854 54.1807 46.8887 54.1807 46.7695 cv
54.1807 46.6514 54.3911 46.5537 54.6489 46.5537 cv
54.9067 46.5537 55.1172 46.6514 55.1172 46.7695 cv
cp
level3{
gsave
clp
[.417551 0 0 .250821 54.6504 46.7686 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417551 0 0 .250821 54.6504 46.7686 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
52.8311 47.1348 mo
52.813 47.2354 52.5396 47.2793 52.2183 47.2354 cv
51.8984 47.1904 51.6533 47.0732 51.6714 46.9727 cv
51.6895 46.873 51.9624 46.8281 52.2832 46.873 cv
52.6035 46.917 52.8491 47.0342 52.8311 47.1348 cv
cp
level3{
gsave
clp
[.515471 .0723976 -.0376468 .211401 52.2534 47.0557 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.515471 .0723976 -.0376468 .211401 52.2534 47.0557 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.7554 47.8447 mo
56.7554 47.9658 56.5571 48.0645 56.312 48.0645 cv
56.0669 48.0645 55.8677 47.9658 55.8677 47.8447 cv
55.8677 47.7246 56.0669 47.626 56.312 47.626 cv
56.5571 47.626 56.7554 47.7246 56.7554 47.8447 cv
cp
level3{
gsave
clp
[.395062 0 0 .255126 56.3115 47.8438 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395062 0 0 .255126 56.3115 47.8438 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.6582 46.8652 mo
55.6582 46.9854 55.46 47.084 55.2148 47.084 cv
54.9692 47.084 54.771 46.9854 54.771 46.8652 cv
54.771 46.7441 54.9692 46.6465 55.2148 46.6465 cv
55.46 46.6465 55.6582 46.7441 55.6582 46.8652 cv
cp
level3{
gsave
clp
[.394605 0 0 .254831 55.2148 46.8643 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394605 0 0 .254831 55.2148 46.8643 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.1558 46.4395 mo
55.1558 46.5508 54.9946 46.6416 54.7959 46.6416 cv
54.5967 46.6416 54.4355 46.5508 54.4355 46.4395 cv
54.4355 46.3271 54.5967 46.2373 54.7959 46.2373 cv
54.9946 46.2373 55.1558 46.3271 55.1558 46.4395 cv
cp
level3{
gsave
clp
[.319953 0 0 .236184 54.7969 46.4404 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319953 0 0 .236184 54.7969 46.4404 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.9282 46.3584 mo
55.8872 46.4971 55.5024 46.5479 55.0659 46.4736 cv
54.6299 46.3994 54.3091 46.2275 54.3496 46.0898 cv
54.3896 45.9512 54.7754 45.8994 55.2109 45.9736 cv
55.647 46.0479 55.9678 46.2197 55.9282 46.3584 cv
cp
level3{
gsave
clp
[.702944 .120788 -.0851454 .291078 55.1387 46.2246 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.702944 .120788 -.0851454 .291078 55.1387 46.2246 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.9619 46.6719 mo
57.8901 46.5488 58.1001 46.3584 58.4312 46.2461 cv
58.7607 46.1348 59.0869 46.1436 59.1572 46.2656 cv
59.228 46.3887 59.0181 46.5791 58.688 46.6914 cv
58.3574 46.8037 58.0327 46.7949 57.9619 46.6719 cv
cp
level3{
gsave
clp
[-.532152 .180022 -.150348 -.259152 58.5596 46.4688 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.532152 .180022 -.150348 -.259152 58.5596 46.4688 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.5518 46.1934 mo
57.5093 46.0625 57.7607 45.9023 58.1104 45.8379 cv
58.4609 45.7695 58.7798 45.8223 58.8213 45.9531 cv
58.8638 46.084 58.6133 46.2422 58.2622 46.3086 cv
57.9111 46.376 57.5942 46.3232 57.5518 46.1934 cv
cp
level3{
gsave
clp
[-.564953 .106669 -.0888912 -.274575 58.186 46.0723 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.564953 .106669 -.0888912 -.274575 58.186 46.0723 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.9658 45.9697 mo
58.0283 46.1299 57.8257 46.3184 57.5127 46.3896 cv
57.1992 46.4619 56.895 46.3896 56.8315 46.2305 cv
56.769 46.0703 56.9722 45.8818 57.2856 45.8096 cv
57.5981 45.7383 57.9019 45.8086 57.9658 45.9697 cv
cp
level3{
gsave
clp
[.5044 -.116704 .132529 .338244 57.397 46.0996 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.5044 -.116704 .132529 .338244 57.397 46.0996 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.6909 46.2813 mo
57.6621 46.4512 57.2734 46.5537 56.8232 46.5078 cv
56.3726 46.4629 56.0313 46.2871 56.0605 46.1172 cv
56.0894 45.9473 56.4785 45.8457 56.9282 45.8906 cv
57.3784 45.9365 57.7197 46.1113 57.6909 46.2813 cv
cp
level3{
gsave
clp
[.725022 .0730949 -.0612417 .359548 56.876 46.1982 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.725022 .0730949 -.0612417 .359548 56.876 46.1982 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
53.8584 46.5557 mo
53.7881 46.4326 53.9985 46.2422 54.3281 46.1299 cv
54.6587 46.0176 54.9839 46.0264 55.0552 46.1484 cv
55.1255 46.2715 54.916 46.4629 54.5854 46.5742 cv
54.2549 46.6875 53.9297 46.6787 53.8584 46.5557 cv
cp
level3{
gsave
clp
[-.53231 .180075 -.150392 -.259229 54.4565 46.3516 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.53231 .180075 -.150392 -.259229 54.4565 46.3516 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.4844 46.1436 mo
56.5474 46.3027 56.3442 46.4902 56.0313 46.5625 cv
55.7178 46.6348 55.4141 46.5635 55.3501 46.4033 cv
55.2881 46.2441 55.4912 46.0557 55.8042 45.9834 cv
56.1167 45.9111 56.4214 45.9824 56.4844 46.1436 cv
cp
level3{
gsave
clp
[.504017 -.116616 .132428 .337988 55.9155 46.2734 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.504017 -.116616 .132428 .337988 55.9155 46.2734 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.9297 46.124 mo
55.9297 46.2666 55.6558 46.3828 55.3184 46.3828 cv
54.9805 46.3828 54.707 46.2666 54.707 46.124 cv
54.707 45.9805 54.9805 45.8643 55.3184 45.8643 cv
55.6558 45.8643 55.9297 45.9805 55.9297 46.124 cv
cp
level3{
gsave
clp
[.543594 0 0 .302436 55.3198 46.1221 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.543594 0 0 .302436 55.3198 46.1221 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.3242 46.4502 mo
58.3242 46.5625 58.1641 46.6533 57.9644 46.6533 cv
57.7661 46.6533 57.605 46.5625 57.605 46.4502 cv
57.605 46.3389 57.7661 46.248 57.9644 46.248 cv
58.1641 46.248 58.3242 46.3389 58.3242 46.4502 cv
cp
level3{
gsave
clp
[.319957 0 0 .236186 57.9658 46.4521 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319957 0 0 .236186 57.9658 46.4521 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.6846 46.3965 mo
54.6846 46.5078 54.5225 46.5977 54.3247 46.5977 cv
54.1245 46.5977 53.9634 46.5078 53.9634 46.3965 cv
53.9634 46.2832 54.1245 46.1934 54.3247 46.1934 cv
54.5225 46.1934 54.6846 46.2832 54.6846 46.3965 cv
cp
level3{
gsave
clp
[.320216 0 0 .236378 54.3252 46.3965 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320216 0 0 .236378 54.3252 46.3965 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.0103 46.5791 mo
57.2681 45.9258 57.6904 44.9863 58.3115 44.001 cv
59.4731 42.1553 60.731 41.7002 60.731 41.7002 cv
60.731 41.7002 59.4937 41.7969 58.085 43.9736 cv
57.3232 45.1504 56.9238 46.0254 56.7158 46.5791 cv
57.0103 46.5791 li
cp
level3{
gsave
clp
[-3.11699 6.14712 -5.48406 -3.16658 60.1094 41.3408 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.11699 6.14712 -5.48406 -3.16658 60.1094 41.3408 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
56.4253 46.4209 mo
56.7183 46.0615 57.0933 45.6504 57.5586 45.2256 cv
58.959 43.9473 60.4521 43.6211 60.4521 43.6211 cv
60.4521 43.6211 58.9883 43.7012 57.29 45.21 cv
56.7544 45.6865 56.3657 46.0908 56.085 46.4209 cv
56.4253 46.4209 li
cp
level3{
gsave
clp
[-2.62371 5.39264 -4.45152 -2.69885 59.2905 42.917 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.62371 5.39264 -4.45152 -2.69885 59.2905 42.917 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
54.627 46.3086 mo
54.645 46.25 54.6655 46.1885 54.689 46.1279 cv
55.0234 45.2725 56.2271 44.6494 56.2271 44.6494 cv
56.2271 44.6494 54.8501 45.1934 54.4131 46.2178 cv
54.3999 46.248 54.3872 46.2783 54.376 46.3086 cv
54.627 46.3086 li
cp
level3{
gsave
clp
[.0560835 2.06722 -3.19457 1.26161 55.2891 45.0195 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0560835 2.06722 -3.19457 1.26161 55.2891 45.0195 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.5796 46.5234 mo
56.5039 46.1699 56.3774 45.7598 56.1719 45.3145 cv
55.4844 43.8213 53.9492 43.5908 53.9492 43.5908 cv
53.9492 43.5908 55.6387 43.6299 56.5049 45.4092 cv
56.7158 45.8457 56.856 46.2139 56.9458 46.5234 cv
56.5796 46.5234 li
cp
level3{
gsave
clp
[.311326 3.55628 3.39897 .611547 55.3413 43.8252 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.311326 3.55628 3.39897 .611547 55.3413 43.8252 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.2358 46.3086 mo
56.1802 46.1182 56.9922 46.0918 56.9922 46.0918 cv
56.9922 46.0918 56.0137 46.0576 54.8252 46.3086 cv
55.2358 46.3086 li
cp
level3{
gsave
clp
[-2.31246 2.70843 -5.45801 -2.09973 56.2451 45.8047 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.31246 2.70843 -5.45801 -2.09973 56.2451 45.8047 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.6509 46.124 mo
57.4604 45.9834 58.1064 45.9629 58.1064 45.9629 cv
58.1064 45.9629 57.2817 45.9336 56.2266 46.124 cv
56.6509 46.124 li
cp
level3{
gsave
clp
[-2.33011 2.7291 -5.49967 -2.11576 57.4497 45.71 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.33011 2.7291 -5.49967 -2.11576 57.4497 45.71 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.125 45.9912 mo
57.3452 45.708 57.6367 45.3887 58.0186 45.0557 cv
59.3394 43.9023 61.2686 43.4863 61.2686 43.4863 cv
61.2686 43.4863 59.2578 43.7061 57.6353 45.0713 cv
57.2144 45.4268 56.9087 45.7334 56.6855 45.9912 cv
57.125 45.9912 li
cp
level3{
gsave
clp
[-1.58599 4.47843 -5.52392 -1.27038 59.561 43.0938 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.58599 4.47843 -5.52392 -1.27038 59.561 43.0938 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
57.2485 45.7158 mo
58.6919 45.5508 59.9863 45.5645 59.9863 45.5645 cv
59.9863 45.5645 58.3335 45.4697 56.46 45.7158 cv
57.2485 45.7158 li
cp
level3{
gsave
clp
[-3.45927 2.79895 -9.08924 -2.96642 58.7964 45.1758 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.45927 2.79895 -9.08924 -2.96642 58.7964 45.1758 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.8521 46.3613 mo
57.0337 46.2979 57.229 46.2324 57.437 46.1689 cv
59.6973 45.4727 62.5493 45.4424 62.5493 45.4424 cv
62.5493 45.4424 59.6528 45.3086 56.8945 46.124 cv
56.6157 46.2051 56.3643 46.2852 56.1372 46.3613 cv
56.8521 46.3613 li
cp
level3{
gsave
clp
[-3.8454 3.81978 -9.58263 -3.39587 60.5259 44.7256 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.8454 3.81978 -9.58263 -3.39587 60.5259 44.7256 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.3657 46.4658 mo
56.1597 46.25 55.9063 46.0244 55.5977 45.7998 cv
54.0942 44.708 51.7583 44.6299 51.7583 44.6299 cv
51.7583 44.6299 54.2178 44.4551 56.0698 45.7354 cv
56.4526 46.001 56.7485 46.2451 56.9785 46.4658 cv
56.3657 46.4658 li
cp
level3{
gsave
clp
[2.05452 5.59535 8.26584 -4.71456 53.6387 43.5586 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.05452 5.59535 8.26584 -4.71456 53.6387 43.5586 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.5576 46.2939 mo
55.4492 46.2168 55.3267 46.1348 55.1909 46.0508 cv
54.4351 45.583 53.6343 45.3955 53.6343 45.3955 cv
53.6343 45.3955 54.4175 45.5068 55.333 46.0615 cv
55.4722 46.1455 55.5933 46.2236 55.6982 46.2939 cv
55.5576 46.2939 li
cp
level3{
gsave
clp
[1.25931 1.72756 2.10172 -.345707 54.2632 45.292 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.25931 1.72756 2.10172 -.345707 54.2632 45.292 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.8906 46.1279 mo
56.0923 46.0107 56.3315 45.8867 56.6123 45.7637 cv
57.8838 45.2012 59.4116 45.1143 59.4116 45.1143 cv
59.4116 45.1143 57.874 45.0801 56.3262 45.7422 cv
55.9946 45.8838 55.7295 46.0127 55.5176 46.1279 cv
55.8906 46.1279 li
cp
level3{
gsave
clp
[-2.11693 2.83269 -4.72775 -1.97092 58.2158 44.6162 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.11693 2.83269 -4.72775 -1.97092 58.2158 44.6162 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.1021 46.4414 mo
54.9956 46.248 54.8413 46.0293 54.6201 45.8047 cv
53.9136 45.0898 52.7109 44.9189 52.7109 44.9189 cv
52.7109 44.9189 53.9946 44.9492 54.8667 45.792 cv
55.1284 46.0449 55.2998 46.2617 55.4092 46.4414 cv
55.1021 46.4414 li
cp
level3{
gsave
clp
[.574222 4.2456 2.88679 -2.25626 53.8394 44.0371 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.574222 4.2456 2.88679 -2.25626 53.8394 44.0371 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
56.4556 46.3086 mo
56.5244 46.2627 56.5972 46.2158 56.6733 46.1699 cv
57.8066 45.4707 59.1919 45.2949 59.1919 45.2949 cv
59.1919 45.2949 57.793 45.335 56.4126 46.1602 cv
56.3271 46.2109 56.2466 46.2607 56.1704 46.3086 cv
56.4556 46.3086 li
cp
level3{
gsave
clp
[-1.75803 3.21437 -4.09035 -1.63814 58.1792 44.8896 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.75803 3.21437 -4.09035 -1.63814 58.1792 44.8896 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.6577 46.3086 mo
55.6323 46.2031 55.5962 46.0918 55.5435 45.9766 cv
55.1724 45.1553 53.8511 44.7441 53.8511 44.7441 cv
53.8511 44.7441 55.3618 45.04 55.8481 46.0166 cv
55.8989 46.1211 55.9395 46.2188 55.9722 46.3086 cv
55.6577 46.3086 li
cp
level3{
gsave
clp
[-.06406 2.62348 4.23849 .0696187 54.9292 44.7617 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.06406 2.62348 4.23849 .0696187 54.9292 44.7617 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.8979 46.4512 mo
56.7544 46.3193 56.5908 46.1826 56.4058 46.0439 cv
54.9707 44.9717 52.6001 44.6377 52.6001 44.6377 cv
52.6001 44.6377 55.1167 44.7764 56.8906 46.0439 cv
57.0918 46.1885 57.2676 46.3242 57.4204 46.4512 cv
56.8979 46.4512 li
cp
level3{
gsave
clp
[1.59348 4.3755 7.40885 -1.69915 54.52 44.1973 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.59348 4.3755 7.40885 -1.69915 54.52 44.1973 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
57.6963 46.3662 mo
57.644 46.2334 57.5693 46.0908 57.4663 45.9395 cv
56.9248 45.1436 55.5688 44.6797 55.5688 44.6797 cv
55.5688 44.6797 57.0776 45.043 57.7661 45.9951 cv
57.8628 46.1309 57.9409 46.2539 57.9995 46.3662 cv
57.6963 46.3662 li
cp
level3{
gsave
clp
[.220105 2.29616 3.7641 .51279 56.7188 44.8359 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.220105 2.29616 3.7641 .51279 56.7188 44.8359 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
55.9722 46.4727 mo
55.7148 46.1455 55.2915 45.6738 54.6719 45.1816 cv
53.5098 44.2578 52.2515 44.0293 52.2515 44.0293 cv
52.2515 44.0293 53.4883 44.0781 54.8979 45.167 cv
55.6592 45.7578 56.0586 46.1953 56.2666 46.4727 cv
55.9722 46.4727 li
cp
level3{
gsave
clp
[2.06219 4.06692 3.62824 -2.095 53.3252 43.4092 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.06219 4.06692 3.62824 -2.095 53.3252 43.4092 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.2793 46.5811 mo
56.1611 46.333 56.0054 46.0527 55.8013 45.7598 cv
55.0962 44.748 54.0649 44.3828 54.0649 44.3828 cv
54.0649 44.3828 55.1401 44.5762 56.0054 45.7744 cv
56.231 46.0859 56.395 46.3545 56.5137 46.5811 cv
56.2793 46.5811 li
cp
level3{
gsave
clp
[1.23061 3.47492 4.28615 -.98572 54.8364 44.2051 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.23061 3.47492 4.28615 -.98572 54.8364 44.2051 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
54.96 46.3828 mo
55.0137 46.251 55.0879 46.1074 55.1914 45.9561 cv
55.7329 45.1602 57.0889 44.6963 57.0889 44.6963 cv
57.0889 44.6963 55.5796 45.0605 54.8921 46.0117 cv
54.7944 46.1475 54.7178 46.2715 54.6572 46.3828 cv
54.96 46.3828 li
cp
level3{
gsave
clp
[-.220075 2.29585 -3.76359 .51272 55.9395 44.8525 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.220075 2.29585 -3.76359 .51272 55.9395 44.8525 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
56.8022 46.5977 mo
56.7544 46.3389 56.6553 46.0186 56.4595 45.6592 cv
55.9478 44.7178 54.8062 44.1904 54.8062 44.1904 cv
54.8062 44.1904 56.064 44.5967 56.7065 45.7188 cv
56.915 46.083 57.0298 46.373 57.0889 46.5977 cv
56.8022 46.5977 li
cp
level3{
gsave
clp
[2.28271 0 0 2.28271 54.8062 45.3945 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.28271 0 0 2.28271 54.8062 45.3945 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
57.5776 46.542 mo
57.7539 46.4365 57.9551 46.3262 58.1826 46.2139 cv
59.7505 45.4404 62.0288 45.1582 62.0288 45.1582 cv
62.0288 45.1582 59.6558 45.3096 57.7319 46.2246 cv
57.4951 46.3379 57.2886 46.4434 57.1084 46.542 cv
57.5776 46.542 li
cp
level3{
gsave
clp
[-1.89482 3.00478 -6.52086 -.82471 60.1538 44.9209 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.89482 3.00478 -6.52086 -.82471 60.1538 44.9209 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
58.0845 46.6045 mo
58.186 46.1885 58.3315 45.6865 58.5444 45.1553 cv
59.1089 43.7412 59.9282 43.2383 59.9282 43.2383 cv
59.9282 43.2383 59.0757 43.498 58.3823 45.1729 cv
58.1411 45.7559 57.9878 46.2314 57.8901 46.6045 cv
58.0845 46.6045 li
cp
level3{
gsave
clp
[-.686135 5.51223 -2.34154 -1.62036 59.1826 42.7217 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.686135 5.51223 -2.34154 -1.62036 59.1826 42.7217 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
55.0713 47.1318 mo
55.0713 47.2422 54.9102 47.333 54.7109 47.333 cv
54.5122 47.333 54.3511 47.2422 54.3511 47.1318 cv
54.3511 47.0195 54.5122 46.9297 54.7109 46.9297 cv
54.9102 46.9297 55.0713 47.0195 55.0713 47.1318 cv
cp
level3{
gsave
clp
[.319655 0 0 .235963 54.7124 47.1328 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319655 0 0 .235963 54.7124 47.1328 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.748 47.457 mo
55.748 47.5684 55.5869 47.6582 55.3882 47.6582 cv
55.189 47.6582 55.0273 47.5684 55.0273 47.457 cv
55.0273 47.3447 55.189 47.2539 55.3882 47.2539 cv
55.5869 47.2539 55.748 47.3447 55.748 47.457 cv
cp
level3{
gsave
clp
[.32012 0 0 .236307 55.3892 47.457 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.32012 0 0 .236307 55.3892 47.457 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.5986 46.4326 mo
55.5986 46.5439 55.4365 46.6348 55.2378 46.6348 cv
55.0396 46.6348 54.8774 46.5439 54.8774 46.4326 cv
54.8774 46.3213 55.0396 46.2305 55.2378 46.2305 cv
55.4365 46.2305 55.5986 46.3213 55.5986 46.4326 cv
cp
level3{
gsave
clp
[.320222 0 0 .236382 55.2393 46.4336 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320222 0 0 .236382 55.2393 46.4336 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.9146 47.0088 mo
55.9146 47.1211 55.7529 47.2109 55.5547 47.2109 cv
55.3555 47.2109 55.1943 47.1211 55.1943 47.0088 cv
55.1943 46.8965 55.3555 46.8057 55.5547 46.8057 cv
55.7529 46.8057 55.9146 46.8965 55.9146 47.0088 cv
cp
level3{
gsave
clp
[.320234 0 0 .236391 55.5557 47.0098 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320234 0 0 .236391 55.5557 47.0098 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.7241 47.0088 mo
56.7241 47.1211 56.563 47.2109 56.3643 47.2109 cv
56.165 47.2109 56.0039 47.1211 56.0039 47.0088 cv
56.0039 46.8965 56.165 46.8057 56.3643 46.8057 cv
56.563 46.8057 56.7241 46.8965 56.7241 47.0088 cv
cp
level3{
gsave
clp
[.320242 0 0 .236397 56.3652 47.0098 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320242 0 0 .236397 56.3652 47.0098 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.0693 47.2363 mo
57.0693 47.3486 56.9087 47.4395 56.71 47.4395 cv
56.5107 47.4395 56.3491 47.3486 56.3491 47.2363 cv
56.3491 47.125 56.5107 47.0342 56.71 47.0342 cv
56.9087 47.0342 57.0693 47.125 57.0693 47.2363 cv
cp
level3{
gsave
clp
[.320226 0 0 .236385 56.7104 47.2383 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320226 0 0 .236385 56.7104 47.2383 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.3521 46.6719 mo
57.2808 46.5488 57.4922 46.3584 57.8213 46.2461 cv
58.1519 46.1348 58.4771 46.1436 58.5483 46.2656 cv
58.6201 46.3887 58.4097 46.5791 58.0786 46.6914 cv
57.7485 46.8037 57.4233 46.7949 57.3521 46.6719 cv
cp
level3{
gsave
clp
[-.532434 .180117 -.150427 -.259289 57.9502 46.4688 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.532434 .180117 -.150427 -.259289 57.9502 46.4688 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.1357 46.7119 mo
57.1357 46.8457 56.8931 46.9541 56.5933 46.9541 cv
56.293 46.9541 56.0503 46.8457 56.0503 46.7119 cv
56.0503 46.5771 56.293 46.4678 56.5933 46.4678 cv
56.8931 46.4678 57.1357 46.5771 57.1357 46.7119 cv
cp
level3{
gsave
clp
[.483605 0 0 .283424 56.5928 46.71 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.483605 0 0 .283424 56.5928 46.71 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.3892 46.9668 mo
57.2983 46.9434 57.2607 46.7715 57.3062 46.5811 cv
57.3511 46.3906 57.4619 46.2549 57.5547 46.2764 cv
57.6455 46.2998 57.6826 46.4717 57.6372 46.6611 cv
57.5918 46.8525 57.4805 46.9883 57.3892 46.9668 cv
cp
level3{
gsave
clp
[-.0733595 .307317 -.192321 -.0475845 57.4727 46.6211 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0733595 .307317 -.192321 -.0475845 57.4727 46.6211 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.6626 46.9297 mo
58.7046 47.0742 58.5103 47.2627 58.2261 47.3486 cv
57.9409 47.4346 57.6758 47.3867 57.6328 47.2412 cv
57.5898 47.0957 57.7856 46.9082 58.0698 46.8223 cv
58.3535 46.7354 58.6191 46.7832 58.6626 46.9297 cv
cp
level3{
gsave
clp
[.45728 -.13857 .09106 .306833 58.1494 47.085 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.45728 -.13857 .09106 .306833 58.1494 47.085 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.2075 46.6416 mo
57.1934 46.7334 56.9707 46.7754 56.7114 46.7334 cv
56.4512 46.6924 56.252 46.584 56.2671 46.4912 cv
56.2808 46.3994 56.5039 46.3584 56.7627 46.3984 cv
57.0239 46.4395 57.2227 46.5488 57.2075 46.6416 cv
cp
level3{
gsave
clp
[.417942 .0670285 -.0315428 .195171 56.7393 46.5674 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417942 .0670285 -.0315428 .195171 56.7393 46.5674 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.8086 46.7285 mo
55.8149 46.8623 55.5771 46.9805 55.2778 46.9941 cv
54.978 47.0078 54.731 46.9102 54.7246 46.7764 cv
54.7192 46.6426 54.957 46.5234 55.2563 46.5098 cv
55.5562 46.4971 55.8032 46.5938 55.8086 46.7285 cv
cp
level3{
gsave
clp
[.481989 -.021729 .0118522 .282477 55.2651 46.751 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.481989 -.021729 .0118522 .282477 55.2651 46.751 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.3452 46.5352 mo
57.3779 46.6387 57.188 46.791 56.9209 46.875 cv
56.6528 46.959 56.4111 46.9434 56.3794 46.8408 cv
56.3472 46.7383 56.5386 46.5869 56.8052 46.5029 cv
57.0713 46.4189 57.3145 46.4336 57.3452 46.5352 cv
cp
level3{
gsave
clp
[.428857 -.136365 .0671942 .217393 56.8628 46.6885 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.428857 -.136365 .0671942 .217393 56.8628 46.6885 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.4888 46.7148 mo
56.4941 46.8291 56.2954 46.9326 56.0435 46.9434 cv
55.792 46.9551 55.585 46.8701 55.5786 46.7549 cv
55.5742 46.6396 55.7729 46.5371 56.0249 46.5254 cv
56.2764 46.5137 56.4834 46.5986 56.4888 46.7148 cv
cp
level3{
gsave
clp
[.404989 -.01778 .0118533 .242993 56.0352 46.7334 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.404989 -.01778 .0118533 .242993 56.0352 46.7334 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.1191 46.6914 mo
56.1191 46.8008 55.9497 46.8896 55.7393 46.8896 cv
55.5298 46.8896 55.3594 46.8008 55.3594 46.6914 cv
55.3594 46.5811 55.5298 46.4932 55.7393 46.4932 cv
55.9497 46.4932 56.1191 46.5811 56.1191 46.6914 cv
cp
level3{
gsave
clp
[.337451 0 0 .230887 55.7393 46.6914 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.337451 0 0 .230887 55.7393 46.6914 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.9355 46.7207 mo
54.9355 46.832 54.7646 46.9199 54.5552 46.9199 cv
54.3447 46.9199 54.1763 46.832 54.1763 46.7207 cv
54.1763 46.6113 54.3447 46.5215 54.5552 46.5215 cv
54.7646 46.5215 54.9355 46.6113 54.9355 46.7207 cv
cp
level3{
gsave
clp
[.337928 0 0 .231214 54.5562 46.7207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.337928 0 0 .231214 54.5562 46.7207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.3096 46.8457 mo
55.2729 46.9326 55.0479 46.917 54.8062 46.8115 cv
54.5649 46.707 54.3984 46.5518 54.4351 46.4668 cv
54.4712 46.3799 54.6958 46.3965 54.939 46.5 cv
55.1802 46.6045 55.3457 46.7598 55.3096 46.8457 cv
cp
level3{
gsave
clp
[.388739 .169703 -.0769584 .181543 54.8701 46.6572 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.388739 .169703 -.0769584 .181543 54.8701 46.6572 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.1294 46.4941 mo
55.0933 46.5801 54.8677 46.5645 54.6255 46.46 cv
54.3848 46.3555 54.2188 46.2002 54.2549 46.1143 cv
54.291 46.0283 54.5166 46.0439 54.7588 46.1484 cv
55 46.2539 55.1675 46.4082 55.1294 46.4941 cv
cp
level3{
gsave
clp
[.388899 .169773 -.0769901 .181618 54.6899 46.3057 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.388899 .169773 -.0769901 .181618 54.6899 46.3057 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
58.0474 46.8613 mo
58.0527 46.9951 57.8149 47.1152 57.5156 47.1279 cv
57.2153 47.1416 56.9688 47.0439 56.9634 46.9102 cv
56.9565 46.7764 57.1948 46.6563 57.4941 46.6426 cv
57.793 46.6299 58.0405 46.7285 58.0474 46.8613 cv
cp
level3{
gsave
clp
[.48169 -.0217155 .0118448 .282302 57.5049 46.8838 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.48169 -.0217155 .0118448 .282302 57.5049 46.8838 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.8442 46.4648 mo
54.876 46.5674 54.686 46.7188 54.4185 46.8037 cv
54.1519 46.8877 53.9097 46.873 53.8779 46.7695 cv
53.8462 46.667 54.0371 46.5156 54.3042 46.4307 cv
54.5703 46.3467 54.813 46.3623 54.8442 46.4648 cv
cp
level3{
gsave
clp
[.429116 -.136447 .0672348 .217524 54.3608 46.6172 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.429116 -.136447 .0672348 .217524 54.3608 46.6172 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
55.019 47.0801 mo
54.9849 47.1152 54.8994 47.0889 54.8267 47.0205 cv
54.7534 46.9512 54.7222 46.8662 54.7559 46.8291 cv
54.7891 46.7939 54.875 46.8203 54.9478 46.8896 cv
55.0205 46.958 55.0532 47.0439 55.019 47.0801 cv
cp
level3{
gsave
clp
[.000844215 .000801289 -.000515114 .00055804 597.928 302.195 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.000844215 .000801289 -.000515114 .00055804 597.928 302.195 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.3604 46.7793 mo
56.3657 46.8955 56.166 46.9971 55.9146 47.0088 cv
55.6636 47.0205 55.4546 46.9355 55.4502 46.8203 cv
55.4458 46.7051 55.6455 46.6025 55.8965 46.5908 cv
56.147 46.5801 56.355 46.6641 56.3604 46.7793 cv
cp
level3{
gsave
clp
[.40498 -.0177796 .0118531 .242988 55.9067 46.7988 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40498 -.0177796 .0118531 .242988 55.9067 46.7988 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
56.6548 46.667 mo
56.6548 46.7773 56.4849 46.8662 56.2749 46.8662 cv
56.0659 46.8662 55.895 46.7773 55.895 46.667 cv
55.895 46.5576 56.0659 46.4678 56.2749 46.4678 cv
56.4849 46.4678 56.6548 46.5576 56.6548 46.667 cv
cp
level3{
gsave
clp
[.338052 0 0 .231299 56.2749 46.667 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.338052 0 0 .231299 56.2749 46.667 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
54.8003 47.0039 mo
54.7852 47.0977 54.5635 47.1387 54.3032 47.0977 cv
54.043 47.0566 53.8447 46.9482 53.8584 46.8555 cv
53.8735 46.7627 54.0952 46.7217 54.3564 46.7617 cv
54.6157 46.8037 54.8145 46.9121 54.8003 47.0039 cv
cp
level3{
gsave
clp
[.418795 .0671653 -.0316072 .19557 54.3311 46.9307 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.418795 .0671653 -.0316072 .19557 54.3311 46.9307 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.9839 47.6621 mo
57.9839 47.7734 57.8242 47.8633 57.6235 47.8633 cv
57.4248 47.8633 57.2642 47.7734 57.2642 47.6621 cv
57.2642 47.5498 57.4248 47.46 57.6235 47.46 cv
57.8242 47.46 57.9839 47.5498 57.9839 47.6621 cv
cp
level3{
gsave
clp
[.319531 0 0 .235872 57.6255 47.6631 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319531 0 0 .235872 57.6255 47.6631 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
57.0942 46.7559 mo
57.0942 46.8662 56.9331 46.958 56.7349 46.958 cv
56.5352 46.958 56.374 46.8662 56.374 46.7559 cv
56.374 46.6436 56.5352 46.5537 56.7349 46.5537 cv
56.9331 46.5537 57.0942 46.6436 57.0942 46.7559 cv
cp
level3{
gsave
clp
[.319948 0 0 .23618 56.7354 46.7568 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319948 0 0 .23618 56.7354 46.7568 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
61.4077 46.4395 mo
61.4077 46.5508 61.2466 46.6416 61.0479 46.6416 cv
60.8486 46.6416 60.6875 46.5508 60.6875 46.4395 cv
60.6875 46.3271 60.8486 46.2373 61.0479 46.2373 cv
61.2466 46.2373 61.4077 46.3271 61.4077 46.4395 cv
cp
level3{
gsave
clp
[.319953 0 0 .236184 61.0488 46.4404 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319953 0 0 .236184 61.0488 46.4404 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
62.1802 46.3584 mo
62.1392 46.4971 61.7544 46.5479 61.3179 46.4736 cv
60.8818 46.3994 60.561 46.2275 60.6016 46.0898 cv
60.6416 45.9512 61.0273 45.8994 61.4629 45.9736 cv
61.8989 46.0479 62.2197 46.2197 62.1802 46.3584 cv
cp
level3{
gsave
clp
[.702954 .120789 -.0851465 .291082 61.3906 46.2246 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.702954 .120789 -.0851465 .291082 61.3906 46.2246 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.2139 46.6719 mo
64.1421 46.5488 64.3521 46.3584 64.6831 46.2461 cv
65.0127 46.1348 65.3389 46.1436 65.4092 46.2656 cv
65.4805 46.3887 65.27 46.5791 64.9399 46.6914 cv
64.6094 46.8037 64.2852 46.7949 64.2139 46.6719 cv
cp
level3{
gsave
clp
[-.532152 .180022 -.150348 -.259152 64.8115 46.4688 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.532152 .180022 -.150348 -.259152 64.8115 46.4688 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
63.8037 46.1934 mo
63.7612 46.0625 64.0127 45.9023 64.3623 45.8379 cv
64.7134 45.7695 65.0317 45.8223 65.0732 45.9531 cv
65.1157 46.084 64.8652 46.2422 64.5142 46.3086 cv
64.1631 46.376 63.8462 46.3232 63.8037 46.1934 cv
cp
level3{
gsave
clp
[-.564977 .106674 -.088895 -.274587 64.438 46.0723 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.564977 .106674 -.088895 -.274587 64.438 46.0723 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.2178 45.9697 mo
64.2803 46.1299 64.0776 46.3184 63.7646 46.3896 cv
63.4512 46.4619 63.147 46.3896 63.0835 46.2305 cv
63.021 46.0703 63.2241 45.8818 63.5376 45.8096 cv
63.8501 45.7383 64.1538 45.8086 64.2178 45.9697 cv
cp
level3{
gsave
clp
[.5044 -.116704 .132529 .338244 63.6489 46.0996 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.5044 -.116704 .132529 .338244 63.6489 46.0996 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
63.9429 46.2813 mo
63.9141 46.4512 63.5254 46.5537 63.0752 46.5078 cv
62.6245 46.4629 62.2832 46.2871 62.3125 46.1172 cv
62.3413 45.9473 62.7305 45.8457 63.1802 45.8906 cv
63.6304 45.9365 63.9717 46.1113 63.9429 46.2813 cv
cp
level3{
gsave
clp
[.725024 .0730951 -.0612418 .359549 63.1279 46.1982 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.725024 .0730951 -.0612418 .359549 63.1279 46.1982 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
60.1104 46.5557 mo
60.04 46.4326 60.2505 46.2422 60.5801 46.1299 cv
60.9106 46.0176 61.2363 46.0264 61.3071 46.1484 cv
61.3774 46.2715 61.168 46.4629 60.8374 46.5742 cv
60.5068 46.6875 60.1816 46.6787 60.1104 46.5557 cv
cp
level3{
gsave
clp
[-.532355 .18009 -.150405 -.259251 60.7085 46.3516 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.532355 .18009 -.150405 -.259251 60.7085 46.3516 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
62.7363 46.1436 mo
62.7993 46.3027 62.5962 46.4902 62.2832 46.5625 cv
61.9697 46.6348 61.666 46.5635 61.6021 46.4033 cv
61.54 46.2441 61.7432 46.0557 62.0562 45.9834 cv
62.3687 45.9111 62.6733 45.9824 62.7363 46.1436 cv
cp
level3{
gsave
clp
[.504017 -.116616 .132428 .337988 62.1675 46.2734 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.504017 -.116616 .132428 .337988 62.1675 46.2734 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
62.1816 46.124 mo
62.1816 46.2666 61.9077 46.3828 61.5703 46.3828 cv
61.2324 46.3828 60.9595 46.2666 60.9595 46.124 cv
60.9595 45.9805 61.2324 45.8643 61.5703 45.8643 cv
61.9077 45.8643 62.1816 45.9805 62.1816 46.124 cv
cp
level3{
gsave
clp
[.543458 0 0 .30236 61.5718 46.1221 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.543458 0 0 .30236 61.5718 46.1221 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.5762 46.4502 mo
64.5762 46.5625 64.416 46.6533 64.2163 46.6533 cv
64.0181 46.6533 63.8569 46.5625 63.8569 46.4502 cv
63.8569 46.3389 64.0181 46.248 64.2163 46.248 cv
64.416 46.248 64.5762 46.3389 64.5762 46.4502 cv
cp
level3{
gsave
clp
[.319957 0 0 .236186 64.2178 46.4521 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319957 0 0 .236186 64.2178 46.4521 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
60.9365 46.3965 mo
60.9365 46.5078 60.7744 46.5977 60.5767 46.5977 cv
60.3765 46.5977 60.2153 46.5078 60.2153 46.3965 cv
60.2153 46.2832 60.3765 46.1934 60.5767 46.1934 cv
60.7744 46.1934 60.9365 46.2832 60.9365 46.3965 cv
cp
level3{
gsave
clp
[.320216 0 0 .236378 60.5771 46.3965 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320216 0 0 .236378 60.5771 46.3965 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
63.2622 46.5791 mo
63.52 45.9258 63.9424 44.9863 64.5635 44.001 cv
65.7256 42.1553 66.9829 41.7002 66.9829 41.7002 cv
66.9829 41.7002 65.7456 41.7969 64.3369 43.9736 cv
63.5752 45.1504 63.1758 46.0254 62.9678 46.5791 cv
63.2622 46.5791 li
cp
level3{
gsave
clp
[-3.11699 6.14712 -5.48406 -3.16658 66.3613 41.3403 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.11699 6.14712 -5.48406 -3.16658 66.3613 41.3403 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
62.6772 46.4209 mo
62.9702 46.0615 63.3452 45.6504 63.8105 45.2256 cv
65.2109 43.9473 66.7041 43.6211 66.7041 43.6211 cv
66.7041 43.6211 65.2402 43.7012 63.542 45.21 cv
63.0063 45.6865 62.6177 46.0908 62.3369 46.4209 cv
62.6772 46.4209 li
cp
level3{
gsave
clp
[-2.62376 5.39273 -4.45159 -2.69889 65.5425 42.917 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.62376 5.39273 -4.45159 -2.69889 65.5425 42.917 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
60.8789 46.3086 mo
60.897 46.25 60.9175 46.1885 60.9409 46.1279 cv
61.2754 45.2725 62.479 44.6494 62.479 44.6494 cv
62.479 44.6494 61.1021 45.1934 60.665 46.2178 cv
60.6519 46.248 60.6392 46.2783 60.6279 46.3086 cv
60.8789 46.3086 li
cp
level3{
gsave
clp
[.0560829 2.0672 -3.19453 1.26159 61.541 45.0195 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0560829 2.0672 -3.19453 1.26159 61.541 45.0195 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
62.8315 46.5234 mo
62.7559 46.1699 62.6294 45.7598 62.4238 45.3145 cv
61.7363 43.8213 60.2012 43.5908 60.2012 43.5908 cv
60.2012 43.5908 61.8906 43.6299 62.7568 45.4092 cv
62.9678 45.8457 63.1079 46.2139 63.1978 46.5234 cv
62.8315 46.5234 li
cp
level3{
gsave
clp
[.311335 3.55638 3.39907 .611565 61.5933 43.8252 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.311335 3.55638 3.39907 .611565 61.5933 43.8252 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
61.4878 46.3086 mo
62.4321 46.1182 63.2441 46.0918 63.2441 46.0918 cv
63.2441 46.0918 62.2656 46.0576 61.0771 46.3086 cv
61.4878 46.3086 li
cp
level3{
gsave
clp
[-2.31229 2.70824 -5.45762 -2.09958 62.4971 45.8047 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.31229 2.70824 -5.45762 -2.09958 62.4971 45.8047 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
62.9028 46.124 mo
63.7124 45.9834 64.3584 45.9629 64.3584 45.9629 cv
64.3584 45.9629 63.5337 45.9336 62.4785 46.124 cv
62.9028 46.124 li
cp
level3{
gsave
clp
[-2.33011 2.7291 -5.49967 -2.11576 63.7012 45.71 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.33011 2.7291 -5.49967 -2.11576 63.7012 45.71 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
63.377 45.9912 mo
63.5972 45.708 63.8887 45.3887 64.2705 45.0557 cv
65.5913 43.9023 67.5205 43.4863 67.5205 43.4863 cv
67.5205 43.4863 65.5098 43.7061 63.8872 45.0713 cv
63.4663 45.4268 63.1606 45.7334 62.9375 45.9912 cv
63.377 45.9912 li
cp
level3{
gsave
clp
[-1.58599 4.47843 -5.52392 -1.27038 65.812 43.0938 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.58599 4.47843 -5.52392 -1.27038 65.812 43.0938 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
63.5005 45.7158 mo
64.9438 45.5508 66.2383 45.5645 66.2383 45.5645 cv
66.2383 45.5645 64.5854 45.4697 62.7119 45.7158 cv
63.5005 45.7158 li
cp
level3{
gsave
clp
[-3.45927 2.79895 -9.08924 -2.96642 65.0483 45.1758 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.45927 2.79895 -9.08924 -2.96642 65.0483 45.1758 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
63.104 46.3613 mo
63.2856 46.2979 63.481 46.2324 63.689 46.1689 cv
65.9492 45.4727 68.8013 45.4424 68.8013 45.4424 cv
68.8013 45.4424 65.9048 45.3086 63.1465 46.124 cv
62.8682 46.2051 62.6162 46.2852 62.3892 46.3613 cv
63.104 46.3613 li
cp
level3{
gsave
clp
[-3.8454 3.81978 -9.58263 -3.39587 66.7783 44.7256 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.8454 3.81978 -9.58263 -3.39587 66.7783 44.7256 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
62.6177 46.4658 mo
62.4116 46.25 62.1582 46.0244 61.8496 45.7998 cv
60.3462 44.708 58.0103 44.6299 58.0103 44.6299 cv
58.0103 44.6299 60.4697 44.4551 62.3218 45.7354 cv
62.7046 46.001 63.0005 46.2451 63.2305 46.4658 cv
62.6177 46.4658 li
cp
level3{
gsave
clp
[2.05452 5.59535 8.26584 -4.71456 59.8906 43.5586 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.05452 5.59535 8.26584 -4.71456 59.8906 43.5586 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
61.8096 46.2939 mo
61.7012 46.2168 61.5786 46.1348 61.4429 46.0508 cv
60.687 45.583 59.8862 45.3955 59.8862 45.3955 cv
59.8862 45.3955 60.6694 45.5068 61.585 46.0615 cv
61.7241 46.1455 61.8452 46.2236 61.9502 46.2939 cv
61.8096 46.2939 li
cp
level3{
gsave
clp
[1.25931 1.72756 2.10172 -.345707 60.5151 45.292 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.25931 1.72756 2.10172 -.345707 60.5151 45.292 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
62.1426 46.1279 mo
62.3442 46.0107 62.5835 45.8867 62.8643 45.7637 cv
64.1357 45.2012 65.6636 45.1143 65.6636 45.1143 cv
65.6636 45.1143 64.126 45.0801 62.5781 45.7422 cv
62.2471 45.8838 61.9814 46.0127 61.7695 46.1279 cv
62.1426 46.1279 li
cp
level3{
gsave
clp
[-2.11693 2.83269 -4.72775 -1.97092 64.4678 44.6162 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.11693 2.83269 -4.72775 -1.97092 64.4678 44.6162 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
61.354 46.4414 mo
61.2476 46.248 61.0933 46.0293 60.8721 45.8047 cv
60.1655 45.0898 58.9629 44.9189 58.9629 44.9189 cv
58.9629 44.9189 60.2466 44.9492 61.1187 45.792 cv
61.3804 46.0449 61.5518 46.2617 61.6611 46.4414 cv
61.354 46.4414 li
cp
level3{
gsave
clp
[.574219 4.24559 2.88678 -2.25625 60.0908 44.0361 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.574219 4.24559 2.88678 -2.25625 60.0908 44.0361 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
62.7075 46.3086 mo
62.7764 46.2627 62.8491 46.2158 62.9253 46.1699 cv
64.0586 45.4707 65.4438 45.2949 65.4438 45.2949 cv
65.4438 45.2949 64.0449 45.335 62.6646 46.1602 cv
62.5791 46.2109 62.4985 46.2607 62.4224 46.3086 cv
62.7075 46.3086 li
cp
level3{
gsave
clp
[-1.75796 3.21424 -4.09018 -1.63807 64.4312 44.8896 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.75796 3.21424 -4.09018 -1.63807 64.4312 44.8896 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
61.9097 46.3086 mo
61.8843 46.2031 61.8481 46.0918 61.7954 45.9766 cv
61.4243 45.1553 60.103 44.7441 60.103 44.7441 cv
60.103 44.7441 61.6138 45.04 62.1001 46.0166 cv
62.1509 46.1211 62.1914 46.2188 62.2241 46.3086 cv
61.9097 46.3086 li
cp
level3{
gsave
clp
[-.0640618 2.62355 4.23861 .0696206 61.1812 44.7617 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0640618 2.62355 4.23861 .0696206 61.1812 44.7617 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
63.1499 46.4512 mo
63.0063 46.3193 62.8428 46.1826 62.6577 46.0439 cv
61.2227 44.9717 58.8521 44.6377 58.8521 44.6377 cv
58.8521 44.6377 61.3687 44.7764 63.1426 46.0439 cv
63.3438 46.1885 63.5195 46.3242 63.6724 46.4512 cv
63.1499 46.4512 li
cp
level3{
gsave
clp
[1.59348 4.3755 7.40885 -1.69915 60.772 44.1973 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.59348 4.3755 7.40885 -1.69915 60.772 44.1973 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
63.9482 46.3662 mo
63.896 46.2334 63.8213 46.0908 63.7183 45.9395 cv
63.1768 45.1436 61.8208 44.6797 61.8208 44.6797 cv
61.8208 44.6797 63.3296 45.043 64.0181 45.9951 cv
64.1147 46.1309 64.1929 46.2539 64.2515 46.3662 cv
63.9482 46.3662 li
cp
level3{
gsave
clp
[.220111 2.29622 3.76421 .512804 62.9707 44.8359 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.220111 2.29622 3.76421 .512804 62.9707 44.8359 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
62.2241 46.4727 mo
61.9668 46.1455 61.5435 45.6738 60.9238 45.1816 cv
59.7617 44.2578 58.5034 44.0293 58.5034 44.0293 cv
58.5034 44.0293 59.7402 44.0781 61.1499 45.167 cv
61.9111 45.7578 62.3105 46.1953 62.5186 46.4727 cv
62.2241 46.4727 li
cp
level3{
gsave
clp
[2.06221 4.06697 3.62828 -2.09502 59.5771 43.4092 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.06221 4.06697 3.62828 -2.09502 59.5771 43.4092 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
62.5313 46.5811 mo
62.4131 46.333 62.2573 46.0527 62.0532 45.7598 cv
61.3481 44.748 60.3169 44.3828 60.3169 44.3828 cv
60.3169 44.3828 61.3921 44.5762 62.2573 45.7744 cv
62.4829 46.0859 62.647 46.3545 62.7656 46.5811 cv
62.5313 46.5811 li
cp
level3{
gsave
clp
[1.23061 3.47492 4.28615 -.98572 61.0884 44.2051 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.23061 3.47492 4.28615 -.98572 61.0884 44.2051 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
61.2119 46.3828 mo
61.2656 46.251 61.3398 46.1074 61.4434 45.9561 cv
61.9849 45.1602 63.3408 44.6963 63.3408 44.6963 cv
63.3408 44.6963 61.8315 45.0605 61.144 46.0117 cv
61.0464 46.1475 60.9697 46.2715 60.9092 46.3828 cv
61.2119 46.3828 li
cp
level3{
gsave
clp
[-.220075 2.29585 -3.76359 .51272 62.1914 44.8525 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.220075 2.29585 -3.76359 .51272 62.1914 44.8525 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
63.0542 46.5977 mo
63.0063 46.3389 62.9072 46.0186 62.7114 45.6592 cv
62.1997 44.7178 61.0581 44.1904 61.0581 44.1904 cv
61.0581 44.1904 62.3159 44.5967 62.9585 45.7188 cv
63.167 46.083 63.2817 46.373 63.3408 46.5977 cv
63.0542 46.5977 li
cp
level3{
gsave
clp
[2.28271 0 0 2.28271 61.0581 45.3945 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.28271 0 0 2.28271 61.0581 45.3945 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
63.8296 46.542 mo
64.0059 46.4365 64.207 46.3262 64.4346 46.2139 cv
66.0024 45.4404 68.2808 45.1582 68.2808 45.1582 cv
68.2808 45.1582 65.9077 45.3096 63.9839 46.2246 cv
63.7471 46.3379 63.5405 46.4434 63.3604 46.542 cv
63.8296 46.542 li
cp
level3{
gsave
clp
[-1.89482 3.00478 -6.52086 -.82471 66.4058 44.9209 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.89482 3.00478 -6.52086 -.82471 66.4058 44.9209 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
64.3364 46.6045 mo
64.438 46.1885 64.584 45.6865 64.7964 45.1553 cv
65.3608 43.7412 66.1802 43.2383 66.1802 43.2383 cv
66.1802 43.2383 65.3276 43.498 64.6343 45.1729 cv
64.3931 45.7559 64.2397 46.2314 64.1421 46.6045 cv
64.3364 46.6045 li
cp
level3{
gsave
clp
[-.686135 5.51223 -2.34154 -1.62036 65.4346 42.7217 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.686135 5.51223 -2.34154 -1.62036 65.4346 42.7217 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
61.3232 47.1318 mo
61.3232 47.2422 61.1621 47.333 60.9629 47.333 cv
60.7642 47.333 60.603 47.2422 60.603 47.1318 cv
60.603 47.0195 60.7642 46.9297 60.9629 46.9297 cv
61.1621 46.9297 61.3232 47.0195 61.3232 47.1318 cv
cp
level3{
gsave
clp
[.319655 0 0 .235963 60.9644 47.1328 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319655 0 0 .235963 60.9644 47.1328 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
62 47.457 mo
62 47.5684 61.8389 47.6582 61.6401 47.6582 cv
61.4409 47.6582 61.2793 47.5684 61.2793 47.457 cv
61.2793 47.3447 61.4409 47.2539 61.6401 47.2539 cv
61.8389 47.2539 62 47.3447 62 47.457 cv
cp
level3{
gsave
clp
[.32012 0 0 .236307 61.6411 47.457 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.32012 0 0 .236307 61.6411 47.457 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
61.8506 46.4326 mo
61.8506 46.5439 61.6885 46.6348 61.4897 46.6348 cv
61.2915 46.6348 61.1294 46.5439 61.1294 46.4326 cv
61.1294 46.3213 61.2915 46.2305 61.4897 46.2305 cv
61.6885 46.2305 61.8506 46.3213 61.8506 46.4326 cv
cp
level3{
gsave
clp
[.320222 0 0 .236382 61.4912 46.4336 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320222 0 0 .236382 61.4912 46.4336 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
62.1665 47.0088 mo
62.1665 47.1211 62.0049 47.2109 61.8066 47.2109 cv
61.6074 47.2109 61.4463 47.1211 61.4463 47.0088 cv
61.4463 46.8965 61.6074 46.8057 61.8066 46.8057 cv
62.0049 46.8057 62.1665 46.8965 62.1665 47.0088 cv
cp
level3{
gsave
clp
[.320234 0 0 .236391 61.8076 47.0098 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320234 0 0 .236391 61.8076 47.0098 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
62.9761 47.0088 mo
62.9761 47.1211 62.8149 47.2109 62.6162 47.2109 cv
62.417 47.2109 62.2559 47.1211 62.2559 47.0088 cv
62.2559 46.8965 62.417 46.8057 62.6162 46.8057 cv
62.8149 46.8057 62.9761 46.8965 62.9761 47.0088 cv
cp
level3{
gsave
clp
[.320242 0 0 .236397 62.6172 47.0098 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320242 0 0 .236397 62.6172 47.0098 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
63.3213 47.2363 mo
63.3213 47.3486 63.1606 47.4395 62.9619 47.4395 cv
62.7627 47.4395 62.6011 47.3486 62.6011 47.2363 cv
62.6011 47.125 62.7627 47.0342 62.9619 47.0342 cv
63.1606 47.0342 63.3213 47.125 63.3213 47.2363 cv
cp
level3{
gsave
clp
[.320226 0 0 .236385 62.9624 47.2383 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320226 0 0 .236385 62.9624 47.2383 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
63.604 46.6719 mo
63.5327 46.5488 63.7441 46.3584 64.0732 46.2461 cv
64.4038 46.1348 64.729 46.1436 64.8003 46.2656 cv
64.8721 46.3887 64.6616 46.5791 64.3306 46.6914 cv
64.0005 46.8037 63.6753 46.7949 63.604 46.6719 cv
cp
level3{
gsave
clp
[-.532434 .180117 -.150427 -.259289 64.2021 46.4688 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.532434 .180117 -.150427 -.259289 64.2021 46.4688 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
63.3877 46.7119 mo
63.3877 46.8457 63.145 46.9541 62.8452 46.9541 cv
62.5449 46.9541 62.3022 46.8457 62.3022 46.7119 cv
62.3022 46.5771 62.5449 46.4678 62.8452 46.4678 cv
63.145 46.4678 63.3877 46.5771 63.3877 46.7119 cv
cp
level3{
gsave
clp
[.483591 0 0 .283416 62.8447 46.71 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.483591 0 0 .283416 62.8447 46.71 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
63.6411 46.9668 mo
63.5503 46.9434 63.5127 46.7715 63.5581 46.5811 cv
63.6035 46.3906 63.7139 46.2549 63.8066 46.2764 cv
63.8975 46.2998 63.9346 46.4717 63.8892 46.6611 cv
63.8438 46.8525 63.7329 46.9883 63.6411 46.9668 cv
cp
level3{
gsave
clp
[-.073372 .307369 -.192354 -.0475927 63.7246 46.6211 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.073372 .307369 -.192354 -.0475927 63.7246 46.6211 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.9146 46.9297 mo
64.9565 47.0742 64.7622 47.2627 64.478 47.3486 cv
64.1929 47.4346 63.9277 47.3867 63.8848 47.2412 cv
63.8418 47.0957 64.0376 46.9082 64.3218 46.8223 cv
64.606 46.7354 64.8711 46.7832 64.9146 46.9297 cv
cp
level3{
gsave
clp
[.45728 -.13857 .09106 .306833 64.4014 47.085 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.45728 -.13857 .09106 .306833 64.4014 47.085 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
63.4595 46.6416 mo
63.4453 46.7334 63.2227 46.7754 62.9634 46.7334 cv
62.7031 46.6924 62.5039 46.584 62.519 46.4912 cv
62.5327 46.3994 62.7559 46.3584 63.0146 46.3984 cv
63.2759 46.4395 63.4746 46.5488 63.4595 46.6416 cv
cp
level3{
gsave
clp
[.417938 .0670278 -.0315425 .195169 62.9912 46.5674 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417938 .0670278 -.0315425 .195169 62.9912 46.5674 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
62.0605 46.7285 mo
62.0669 46.8623 61.8291 46.9805 61.5298 46.9941 cv
61.23 47.0078 60.9829 46.9102 60.9766 46.7764 cv
60.9712 46.6426 61.209 46.5234 61.5083 46.5098 cv
61.8081 46.4971 62.0557 46.5938 62.0605 46.7285 cv
cp
level3{
gsave
clp
[.481989 -.021729 .0118522 .282477 61.5171 46.751 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.481989 -.021729 .0118522 .282477 61.5171 46.751 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
63.5972 46.5352 mo
63.6299 46.6387 63.4399 46.791 63.1729 46.875 cv
62.9048 46.959 62.6631 46.9434 62.6313 46.8408 cv
62.5996 46.7383 62.791 46.5869 63.0571 46.5029 cv
63.3232 46.4189 63.5664 46.4336 63.5972 46.5352 cv
cp
level3{
gsave
clp
[.428863 -.136367 .0671951 .217396 63.1147 46.6885 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.428863 -.136367 .0671951 .217396 63.1147 46.6885 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
62.7407 46.7148 mo
62.7461 46.8291 62.5474 46.9326 62.2954 46.9434 cv
62.0439 46.9551 61.8369 46.8701 61.8306 46.7549 cv
61.8262 46.6396 62.0254 46.5371 62.2769 46.5254 cv
62.5283 46.5137 62.7354 46.5986 62.7407 46.7148 cv
cp
level3{
gsave
clp
[.404989 -.01778 .0118533 .242993 62.2871 46.7334 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.404989 -.01778 .0118533 .242993 62.2871 46.7334 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
62.3711 46.6914 mo
62.3711 46.8008 62.2017 46.8896 61.9912 46.8896 cv
61.7817 46.8896 61.6113 46.8008 61.6113 46.6914 cv
61.6113 46.5811 61.7817 46.4932 61.9912 46.4932 cv
62.2017 46.4932 62.3711 46.5811 62.3711 46.6914 cv
cp
level3{
gsave
clp
[.337451 0 0 .230887 61.9912 46.6914 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.337451 0 0 .230887 61.9912 46.6914 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
61.1875 46.7207 mo
61.1875 46.832 61.0166 46.9199 60.8071 46.9199 cv
60.5967 46.9199 60.4282 46.832 60.4282 46.7207 cv
60.4282 46.6113 60.5967 46.5215 60.8071 46.5215 cv
61.0166 46.5215 61.1875 46.6113 61.1875 46.7207 cv
cp
level3{
gsave
clp
[.337928 0 0 .231214 60.8081 46.7207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.337928 0 0 .231214 60.8081 46.7207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
61.5615 46.8457 mo
61.5249 46.9326 61.2998 46.917 61.0581 46.8115 cv
60.8169 46.707 60.6504 46.5518 60.687 46.4668 cv
60.7231 46.3799 60.9478 46.3965 61.1909 46.5 cv
61.4321 46.6045 61.5977 46.7598 61.5615 46.8457 cv
cp
level3{
gsave
clp
[.388739 .169703 -.0769584 .181543 61.1221 46.6572 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.388739 .169703 -.0769584 .181543 61.1221 46.6572 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
61.3813 46.4941 mo
61.3452 46.5801 61.1196 46.5645 60.8774 46.46 cv
60.6367 46.3555 60.4707 46.2002 60.5068 46.1143 cv
60.543 46.0283 60.7686 46.0439 61.0107 46.1484 cv
61.252 46.2539 61.4194 46.4082 61.3813 46.4941 cv
cp
level3{
gsave
clp
[.388881 .169765 -.0769866 .181609 60.9419 46.3057 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.388881 .169765 -.0769866 .181609 60.9419 46.3057 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.2993 46.8613 mo
64.3047 46.9951 64.0669 47.1152 63.7676 47.1279 cv
63.4673 47.1416 63.2207 47.0439 63.2153 46.9102 cv
63.2085 46.7764 63.4468 46.6563 63.7461 46.6426 cv
64.0449 46.6299 64.2925 46.7285 64.2993 46.8613 cv
cp
level3{
gsave
clp
[.48169 -.0217155 .0118448 .282302 63.7568 46.8838 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.48169 -.0217155 .0118448 .282302 63.7568 46.8838 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
61.0962 46.4648 mo
61.1279 46.5674 60.938 46.7188 60.6704 46.8037 cv
60.4038 46.8877 60.1616 46.873 60.1299 46.7695 cv
60.0981 46.667 60.2891 46.5156 60.5562 46.4307 cv
60.8223 46.3467 61.0649 46.3623 61.0962 46.4648 cv
cp
level3{
gsave
clp
[.42911 -.136445 .0672339 .217521 60.6128 46.6172 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.42911 -.136445 .0672339 .217521 60.6128 46.6172 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
61.271 47.0801 mo
61.2368 47.1152 61.1514 47.0889 61.0786 47.0205 cv
61.0054 46.9512 60.9741 46.8662 61.0078 46.8291 cv
61.041 46.7939 61.127 46.8203 61.1997 46.8896 cv
61.2725 46.958 61.3052 47.0439 61.271 47.0801 cv
cp
level3{
gsave
clp
[.000844215 .000801289 -.000515114 .00055804 597.928 302.195 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.000844215 .000801289 -.000515114 .00055804 597.928 302.195 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
62.6123 46.7793 mo
62.6177 46.8955 62.418 46.9971 62.1665 47.0088 cv
61.9155 47.0205 61.7065 46.9355 61.7021 46.8203 cv
61.6978 46.7051 61.8975 46.6025 62.1484 46.5908 cv
62.3989 46.5801 62.6069 46.6641 62.6123 46.7793 cv
cp
level3{
gsave
clp
[.40498 -.0177796 .0118531 .242988 62.1587 46.7988 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40498 -.0177796 .0118531 .242988 62.1587 46.7988 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
62.9067 46.667 mo
62.9067 46.7773 62.7368 46.8662 62.5269 46.8662 cv
62.3179 46.8662 62.147 46.7773 62.147 46.667 cv
62.147 46.5576 62.3179 46.4678 62.5269 46.4678 cv
62.7368 46.4678 62.9067 46.5576 62.9067 46.667 cv
cp
level3{
gsave
clp
[.338052 0 0 .231299 62.5269 46.667 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.338052 0 0 .231299 62.5269 46.667 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
61.0522 47.0039 mo
61.0371 47.0977 60.8154 47.1387 60.5552 47.0977 cv
60.2949 47.0566 60.0967 46.9482 60.1104 46.8555 cv
60.1255 46.7627 60.3472 46.7217 60.6084 46.7617 cv
60.8677 46.8037 61.0669 46.9121 61.0522 47.0039 cv
cp
level3{
gsave
clp
[.418788 .0671641 -.0316066 .195566 60.583 46.9307 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.418788 .0671641 -.0316066 .195566 60.583 46.9307 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.2358 47.6621 mo
64.2358 47.7734 64.0762 47.8633 63.8755 47.8633 cv
63.6768 47.8633 63.5161 47.7734 63.5161 47.6621 cv
63.5161 47.5498 63.6768 47.46 63.8755 47.46 cv
64.0762 47.46 64.2358 47.5498 64.2358 47.6621 cv
cp
level3{
gsave
clp
[.319531 0 0 .235872 63.8774 47.6631 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319531 0 0 .235872 63.8774 47.6631 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
63.3462 46.7559 mo
63.3462 46.8662 63.1851 46.958 62.9868 46.958 cv
62.7871 46.958 62.626 46.8662 62.626 46.7559 cv
62.626 46.6436 62.7871 46.5537 62.9868 46.5537 cv
63.1851 46.5537 63.3462 46.6436 63.3462 46.7559 cv
cp
level3{
gsave
clp
[.319948 0 0 .23618 62.9873 46.7568 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319948 0 0 .23618 62.9873 46.7568 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.9155 46.6348 mo
37.9155 46.7471 37.79 46.8379 37.6348 46.8379 cv
37.48 46.8379 37.3545 46.7471 37.3545 46.6348 cv
37.3545 46.5234 37.48 46.4326 37.6348 46.4326 cv
37.79 46.4326 37.9155 46.5234 37.9155 46.6348 cv
cp
level3{
gsave
clp
[.249138 0 0 .236531 37.6338 46.6357 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249138 0 0 .236531 37.6338 46.6357 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.5161 46.5537 mo
38.4854 46.6924 38.1851 46.7441 37.8462 46.6699 cv
37.5063 46.5957 37.2559 46.4229 37.2876 46.2852 cv
37.3188 46.1465 37.6182 46.0938 37.958 46.168 cv
38.2979 46.2432 38.5483 46.415 38.5161 46.5537 cv
cp
level3{
gsave
clp
[.546005 .120203 -.0662133 .291338 37.9014 46.4199 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.546005 .120203 -.0662133 .291338 37.9014 46.4199 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.0996 46.8682 mo
40.0444 46.7451 40.2085 46.5537 40.4653 46.4424 cv
40.7222 46.3291 40.9761 46.3379 41.0313 46.4609 cv
41.0864 46.584 40.9229 46.7754 40.665 46.8877 cv
40.4077 47.001 40.1548 46.9912 40.0996 46.8682 cv
cp
level3{
gsave
clp
[-.414407 .181686 -.116361 -.259259 40.5664 46.665 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.414407 .181686 -.116361 -.259259 40.5664 46.665 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.7813 46.3887 mo
39.748 46.2578 39.9434 46.0977 40.2163 46.0313 cv
40.4888 45.9639 40.7368 46.0166 40.77 46.1475 cv
40.8018 46.2783 40.6074 46.4385 40.3345 46.5049 cv
40.061 46.5713 39.814 46.5195 39.7813 46.3887 cv
cp
level3{
gsave
clp
[-.439855 .107157 -.069397 -.275547 40.2754 46.2686 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.439855 .107157 -.069397 -.275547 40.2754 46.2686 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.103 46.1641 mo
40.1519 46.3242 39.9937 46.5137 39.7505 46.5859 cv
39.5068 46.6582 39.27 46.5869 39.2207 46.4268 cv
39.1714 46.2656 39.3296 46.0771 39.5737 46.0039 cv
39.8169 45.9326 40.0542 46.0039 40.103 46.1641 cv
cp
level3{
gsave
clp
[.392808 -.116312 .103048 .338733 39.6606 46.2949 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.392808 -.116312 .103048 .338733 39.6606 46.2949 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.8896 46.4766 mo
39.8667 46.6484 39.564 46.749 39.2139 46.7041 cv
38.8628 46.6582 38.5972 46.4834 38.6191 46.3125 cv
38.6421 46.1416 38.9443 46.04 39.2954 46.085 cv
39.6465 46.1309 39.9121 46.3057 39.8896 46.4766 cv
cp
level3{
gsave
clp
[.564544 .0724822 -.0479812 .36139 39.2544 46.3945 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.564544 .0724822 -.0479812 .36139 39.2544 46.3945 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.9048 46.752 mo
36.8496 46.6279 37.0137 46.4365 37.2705 46.3262 cv
37.5273 46.2119 37.7817 46.2217 37.8369 46.3447 cv
37.8916 46.4678 37.728 46.6582 37.4707 46.7705 cv
37.2134 46.8838 36.96 46.875 36.9048 46.752 cv
cp
level3{
gsave
clp
[-.414292 .181635 -.116328 -.259187 37.3711 46.5488 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.414292 .181635 -.116328 -.259187 37.3711 46.5488 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.9497 46.3379 mo
38.998 46.498 38.8403 46.6875 38.5967 46.7588 cv
38.353 46.832 38.1162 46.7598 38.0669 46.5996 cv
38.0186 46.4395 38.1758 46.25 38.4204 46.1777 cv
38.6631 46.1055 38.9014 46.1777 38.9497 46.3379 cv
cp
level3{
gsave
clp
[.392639 -.116262 .103004 .338588 38.5073 46.4678 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.392639 -.116262 .103004 .338588 38.5073 46.4678 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.5186 46.3193 mo
38.5186 46.4629 38.3047 46.5791 38.042 46.5791 cv
37.7788 46.5791 37.5659 46.4629 37.5659 46.3193 cv
37.5659 46.1748 37.7788 46.0596 38.042 46.0596 cv
38.3047 46.0596 38.5186 46.1748 38.5186 46.3193 cv
cp
level3{
gsave
clp
[.42336 0 0 .302983 38.041 46.3203 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.42336 0 0 .302983 38.041 46.3203 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.3828 46.6465 mo
40.3828 46.7588 40.2573 46.8496 40.1021 46.8496 cv
39.9468 46.8496 39.8223 46.7588 39.8223 46.6465 cv
39.8223 46.5342 39.9468 46.4434 40.1021 46.4434 cv
40.2573 46.4434 40.3828 46.5342 40.3828 46.6465 cv
cp
level3{
gsave
clp
[.249209 0 0 .236598 40.1011 46.6475 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249209 0 0 .236598 40.1011 46.6475 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.5479 46.5918 mo
37.5479 46.7041 37.4224 46.7939 37.2671 46.7939 cv
37.1123 46.7939 36.9868 46.7041 36.9868 46.5918 cv
36.9868 46.4795 37.1123 46.3887 37.2671 46.3887 cv
37.4224 46.3887 37.5479 46.4795 37.5479 46.5918 cv
cp
level3{
gsave
clp
[.249127 0 0 .23652 37.2661 46.5918 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249127 0 0 .23652 37.2661 46.5918 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.3589 46.7754 mo
39.5596 46.1211 39.8887 45.1787 40.3721 44.1904 cv
41.2769 42.3408 42.7598 42.3799 42.7598 42.3799 cv
42.7598 42.3799 41.293 41.9814 40.1958 44.1631 cv
39.6035 45.3438 39.292 46.2197 39.1299 46.7754 cv
39.3589 46.7754 li
cp
level3{
gsave
clp
[-2.81107 5.54381 -4.94582 -2.85579 42.1177 42.0098 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.81107 5.54381 -4.94582 -2.85579 42.1177 42.0098 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
38.9038 46.6172 mo
39.1313 46.2568 39.4233 45.8447 39.7856 45.4189 cv
40.876 44.1367 42.0396 43.8105 42.0396 43.8105 cv
42.0396 43.8105 40.8994 43.8906 39.5771 45.4023 cv
39.1602 45.8809 38.8574 46.2861 38.6392 46.6172 cv
38.9038 46.6172 li
cp
level3{
gsave
clp
[-2.34474 4.81925 -3.9782 -2.41188 41.2529 43.334 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.34474 4.81925 -3.9782 -2.41188 41.2529 43.334 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.5039 46.5039 mo
37.5176 46.4453 37.5337 46.3848 37.5527 46.3223 cv
37.812 45.4658 38.75 44.8418 38.75 44.8418 cv
38.75 44.8418 37.6772 45.3857 37.3369 46.4131 cv
37.3271 46.4443 37.3174 46.4746 37.3081 46.5039 cv
37.5039 46.5039 li
cp
level3{
gsave
clp
[.0638761 2.35445 -3.63844 1.4369 38.0142 45.1318 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0638761 2.35445 -3.63844 1.4369 38.0142 45.1318 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.0239 46.7188 mo
38.9648 46.3643 38.8667 45.9541 38.7061 45.5068 cv
38.1704 44.0107 36.9751 43.1719 36.9751 43.1719 cv
36.9751 43.1719 38.291 43.8184 38.9648 45.6016 cv
39.1299 46.04 39.2388 46.4102 39.3086 46.7188 cv
39.0239 46.7188 li
cp
level3{
gsave
clp
[.399727 4.56609 4.36411 .785198 38.0039 43.3564 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.399727 4.56609 4.36411 .785198 38.0039 43.3564 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.9775 46.5039 mo
38.7129 46.3135 39.3447 46.2871 39.3447 46.2871 cv
39.3447 46.2871 38.583 46.2529 37.6577 46.5039 cv
37.9775 46.5039 li
cp
level3{
gsave
clp
[-1.90588 2.23223 -4.49838 -1.73055 38.7793 46.0693 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.90588 2.23223 -4.49838 -1.73055 38.7793 46.0693 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.0791 46.3193 mo
39.71 46.1787 40.2124 46.1572 40.2124 46.1572 cv
40.2124 46.1572 39.5703 46.1279 38.7495 46.3193 cv
39.0791 46.3193 li
cp
level3{
gsave
clp
[-1.91003 2.23709 -4.50817 -1.73432 39.7139 45.9658 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.91003 2.23709 -4.50817 -1.73432 39.7139 45.9658 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.4482 46.1865 mo
39.6201 45.9023 39.8472 45.583 40.1445 45.248 cv
41.1724 44.0918 42.6748 43.6738 42.6748 43.6738 cv
42.6748 43.6738 41.1099 43.8945 39.8462 45.2646 cv
39.5181 45.6211 39.2798 45.9268 39.1064 46.1865 cv
39.4482 46.1865 li
cp
level3{
gsave
clp
[-1.48549 4.19463 -5.17386 -1.18988 41.4351 43.3887 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.48549 4.19463 -5.17386 -1.18988 41.4351 43.3887 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
39.5444 45.9102 mo
40.668 45.7451 41.6763 45.7578 41.6763 45.7578 cv
41.6763 45.7578 40.3896 45.6631 38.9312 45.9102 cv
39.5444 45.9102 li
cp
level3{
gsave
clp
[-2.78462 2.25309 -7.31661 -2.38789 40.7656 45.4609 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.78462 2.25309 -7.31661 -2.38789 40.7656 45.4609 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.2358 46.5576 mo
39.3774 46.4932 39.5293 46.4287 39.6914 46.3643 cv
41.4517 45.667 43.6729 45.6357 43.6729 45.6357 cv
43.6729 45.6357 41.417 45.501 39.269 46.3193 cv
39.0518 46.4014 38.856 46.4805 38.6792 46.5576 cv
39.2358 46.5576 li
cp
level3{
gsave
clp
[-3.24324 3.22164 -8.08207 -2.86411 42.1758 45.1045 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.24324 3.22164 -8.08207 -2.86411 42.1758 45.1045 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.8574 46.6611 mo
38.6963 46.4453 38.4995 46.2197 38.2593 45.9951 cv
37.0889 44.8984 35.2695 44.8213 35.2695 44.8213 cv
35.2695 44.8213 37.1841 44.6465 38.627 45.9297 cv
38.9248 46.1963 39.1548 46.4404 39.334 46.6611 cv
38.8574 46.6611 li
cp
level3{
gsave
clp
[1.77481 4.83358 7.14049 -4.0727 36.6709 44.0215 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.77481 4.83358 7.14049 -4.0727 36.6709 44.0215 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.228 46.4893 mo
38.1436 46.4131 38.0479 46.3301 37.9419 46.2451 cv
37.3535 45.7764 36.731 45.5889 36.731 45.5889 cv
36.731 45.5889 37.3398 45.7002 38.0532 46.2559 cv
38.1616 46.3418 38.2563 46.4189 38.3369 46.4893 cv
38.228 46.4893 li
cp
level3{
gsave
clp
[1.18468 1.62517 1.97715 -.325217 37.1548 45.5186 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.18468 1.62517 1.97715 -.325217 37.1548 45.5186 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.4868 46.3223 mo
38.644 46.2061 38.8311 46.082 39.0498 45.958 cv
40.0391 45.3945 41.2285 45.3076 41.2285 45.3076 cv
41.2285 45.3076 40.0317 45.2734 38.8267 45.9365 cv
38.5684 46.0781 38.3618 46.207 38.1973 46.3223 cv
38.4868 46.3223 li
cp
level3{
gsave
clp
[-1.82895 2.44734 -4.08461 -1.7028 40.3608 44.9463 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.82895 2.44734 -4.08461 -1.7028 40.3608 44.9463 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.874 46.6377 mo
37.79 46.4434 37.6704 46.2236 37.498 45.999 cv
36.9482 45.2822 36.0112 45.1104 36.0112 45.1104 cv
36.0112 45.1104 37.0107 45.1416 37.6904 45.9863 cv
37.8936 46.2393 38.0269 46.457 38.1123 46.6377 cv
37.874 46.6377 li
cp
level3{
gsave
clp
[.501189 3.70562 2.51963 -1.9693 36.8677 44.4404 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.501189 3.70562 2.51963 -1.9693 36.8677 44.4404 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
38.9272 46.5039 mo
38.981 46.458 39.0376 46.4111 39.0972 46.3643 cv
39.9795 45.6641 41.0581 45.4893 41.0581 45.4893 cv
41.0581 45.4893 39.9688 45.5283 38.894 46.3555 cv
38.8271 46.4063 38.7646 46.4561 38.7056 46.5039 cv
38.9272 46.5039 li
cp
level3{
gsave
clp
[-1.54693 2.8284 -3.59919 -1.44143 40.3213 45.1943 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.54693 2.8284 -3.59919 -1.44143 40.3213 45.1943 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.3052 46.5039 mo
38.2866 46.3984 38.2578 46.2871 38.2173 46.1719 cv
37.9287 45.3486 36.8989 44.9355 36.8989 44.9355 cv
36.8989 44.9355 38.0752 45.2314 38.4536 46.2119 cv
38.4937 46.3154 38.5264 46.4131 38.5513 46.5039 cv
38.3052 46.5039 li
cp
level3{
gsave
clp
[-.0644971 2.64138 4.26741 .0700937 37.7441 44.9492 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0644971 2.64138 4.26741 .0700937 37.7441 44.9492 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.272 46.6484 mo
39.1602 46.5146 39.0332 46.3779 38.8887 46.2383 cv
37.7705 45.1641 35.9253 44.8281 35.9253 44.8281 cv
35.9253 44.8281 37.8848 44.9688 39.2661 46.2393 cv
39.4229 46.3838 39.5591 46.5205 39.6777 46.6484 cv
39.272 46.6484 li
cp
level3{
gsave
clp
[1.46349 4.01857 6.80447 -1.56054 37.3511 44.501 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.46349 4.01857 6.80447 -1.56054 37.3511 44.501 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
39.894 46.5615 mo
39.8525 46.4297 39.7939 46.2852 39.7148 46.1348 cv
39.2925 45.335 38.2373 44.8711 38.2373 44.8711 cv
38.2373 44.8711 39.4111 45.2363 39.9468 46.1904 cv
40.0234 46.3262 40.083 46.4502 40.1299 46.5615 cv
39.894 46.5615 li
cp
level3{
gsave
clp
[.230824 2.40798 3.94741 .537762 39.1147 44.9902 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.230824 2.40798 3.94741 .537762 39.1147 44.9902 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
38.5513 46.668 mo
38.3506 46.3408 38.021 45.8691 37.5381 45.374 cv
36.6333 44.4482 35.6538 44.2188 35.6538 44.2188 cv
35.6538 44.2188 36.6177 44.2676 37.7139 45.3604 cv
38.3066 45.9512 38.6187 46.3906 38.7798 46.668 cv
38.5513 46.668 li
cp
level3{
gsave
clp
[1.8424 3.63346 3.24154 -1.87171 36.3823 43.7979 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.8424 3.63346 3.24154 -1.87171 36.3823 43.7979 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.7896 46.7783 mo
38.6978 46.5283 38.5767 46.248 38.418 45.9541 cv
37.8687 44.9404 37.0654 44.5742 37.0654 44.5742 cv
37.0654 44.5742 37.9028 44.7676 38.5767 45.9688 cv
38.7524 46.2813 38.8794 46.5508 38.9727 46.7783 cv
38.7896 46.7783 li
cp
level3{
gsave
clp
[1.17773 3.32561 4.10197 -.943363 37.5864 44.4541 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.17773 3.32561 4.10197 -.943363 37.5864 44.4541 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
37.7627 46.5791 mo
37.8052 46.4463 37.8628 46.3027 37.9429 46.1514 cv
38.3643 45.3525 39.4204 44.8877 39.4204 44.8877 cv
39.4204 44.8877 38.2456 45.2529 37.71 46.207 cv
37.6333 46.3428 37.5737 46.4668 37.5269 46.5791 cv
37.7627 46.5791 li
cp
level3{
gsave
clp
[-.230959 2.40939 -3.94972 .538077 38.5435 45.0078 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.230959 2.40939 -3.94972 .538077 38.5435 45.0078 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.1973 46.7949 mo
39.1602 46.5352 39.083 46.2139 38.9312 45.8535 cv
38.5322 44.9092 37.6431 44.3809 37.6431 44.3809 cv
37.6431 44.3809 38.6221 44.7881 39.123 45.9131 cv
39.2852 46.2783 39.3745 46.5684 39.4204 46.7949 cv
39.1973 46.7949 li
cp
level3{
gsave
clp
[1.77734 0 0 1.77734 37.6431 45.5879 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.77734 0 0 1.77734 37.6431 45.5879 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.8008 46.7383 mo
39.938 46.6318 40.0942 46.5215 40.2725 46.4092 cv
41.4927 45.6338 43.2676 45.3516 43.2676 45.3516 cv
43.2676 45.3516 41.4189 45.5029 39.9214 46.4199 cv
39.7358 46.5342 39.5757 46.6396 39.436 46.7383 cv
39.8008 46.7383 li
cp
level3{
gsave
clp
[-1.76751 2.80289 -6.08273 -.769298 41.8979 45.1787 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.76751 2.80289 -6.08273 -.769298 41.8979 45.1787 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
40.1958 46.8008 mo
40.2739 46.3828 40.3882 45.8809 40.5542 45.3477 cv
40.9932 43.9307 41.6309 43.4268 41.6309 43.4268 cv
41.6309 43.4268 40.9673 43.6865 40.4272 45.3652 cv
40.2397 45.9502 40.1201 46.4277 40.0444 46.8008 cv
40.1958 46.8008 li
cp
level3{
gsave
clp
[-.642369 5.16062 -2.19218 -1.51701 41.0947 43.0547 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.642369 5.16062 -2.19218 -1.51701 41.0947 43.0547 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.8491 47.3291 mo
37.8491 47.4404 37.7236 47.5313 37.5693 47.5313 cv
37.4136 47.5313 37.2876 47.4404 37.2876 47.3291 cv
37.2876 47.2168 37.4136 47.126 37.5693 47.126 cv
37.7236 47.126 37.8491 47.2168 37.8491 47.3291 cv
cp
level3{
gsave
clp
[.249272 0 0 .236658 37.5669 47.3291 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249272 0 0 .236658 37.5669 47.3291 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.3765 47.6553 mo
38.3765 47.7666 38.251 47.8574 38.0957 47.8574 cv
37.9414 47.8574 37.8159 47.7666 37.8159 47.6553 cv
37.8159 47.543 37.9414 47.4521 38.0957 47.4521 cv
38.251 47.4521 38.3765 47.543 38.3765 47.6553 cv
cp
level3{
gsave
clp
[.249065 0 0 .236462 38.0947 47.6553 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249065 0 0 .236462 38.0947 47.6553 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.2598 46.6279 mo
38.2598 46.7402 38.1333 46.832 37.979 46.832 cv
37.8242 46.832 37.6987 46.7402 37.6987 46.6279 cv
37.6987 46.5166 37.8242 46.4258 37.979 46.4258 cv
38.1333 46.4258 38.2598 46.5166 38.2598 46.6279 cv
cp
level3{
gsave
clp
[.24936 0 0 .236742 37.978 46.6299 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.24936 0 0 .236742 37.978 46.6299 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.5059 47.2061 mo
38.5059 47.3184 38.3804 47.4092 38.2261 47.4092 cv
38.0708 47.4092 37.9453 47.3184 37.9453 47.2061 cv
37.9453 47.0947 38.0708 47.0029 38.2261 47.0029 cv
38.3804 47.0029 38.5059 47.0947 38.5059 47.2061 cv
cp
level3{
gsave
clp
[.249211 0 0 .236601 38.2241 47.207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249211 0 0 .236601 38.2241 47.207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.1357 47.2061 mo
39.1357 47.3184 39.0103 47.4092 38.856 47.4092 cv
38.7012 47.4092 38.5752 47.3184 38.5752 47.2061 cv
38.5752 47.0947 38.7012 47.0029 38.856 47.0029 cv
39.0103 47.0029 39.1357 47.0947 39.1357 47.2061 cv
cp
level3{
gsave
clp
[.249211 0 0 .236601 38.854 47.207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249211 0 0 .236601 38.854 47.207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.4053 47.4346 mo
39.4053 47.5469 39.2798 47.6377 39.1245 47.6377 cv
38.9697 47.6377 38.8438 47.5469 38.8438 47.4346 cv
38.8438 47.3232 38.9697 47.2324 39.1245 47.2324 cv
39.2798 47.2324 39.4053 47.3232 39.4053 47.4346 cv
cp
level3{
gsave
clp
[.24928 0 0 .236666 39.123 47.4355 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.24928 0 0 .236666 39.123 47.4355 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.6255 46.8682 mo
39.5703 46.7451 39.7344 46.5537 39.9907 46.4424 cv
40.248 46.3291 40.5015 46.3379 40.5576 46.4609 cv
40.6118 46.584 40.4487 46.7754 40.1914 46.8877 cv
39.9341 47.001 39.6807 46.9912 39.6255 46.8682 cv
cp
level3{
gsave
clp
[-.414598 .18177 -.116414 -.259379 40.0923 46.665 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.414598 .18177 -.116414 -.259379 40.0923 46.665 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.4575 46.9082 mo
39.4575 47.043 39.2676 47.1514 39.0337 47.1514 cv
38.8008 47.1514 38.6118 47.043 38.6118 46.9082 cv
38.6118 46.7734 38.8008 46.665 39.0337 46.665 cv
39.2676 46.665 39.4575 46.7734 39.4575 46.9082 cv
cp
level3{
gsave
clp
[.375877 0 0 .283951 39.0347 46.9092 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.375877 0 0 .283951 39.0347 46.9092 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.6543 47.1641 mo
39.584 47.1416 39.5542 46.9688 39.5898 46.7783 cv
39.6245 46.5869 39.7114 46.4502 39.7827 46.4727 cv
39.854 46.4951 39.8828 46.668 39.8472 46.8584 cv
39.8115 47.0488 39.7261 47.1855 39.6543 47.1641 cv
cp
level3{
gsave
clp
[-.0571455 .307157 -.150007 -.0469409 39.7197 46.8184 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0571455 .307157 -.150007 -.0469409 39.7197 46.8184 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.645 47.126 mo
40.6787 47.2725 40.5264 47.4609 40.3057 47.5469 cv
40.0845 47.6328 39.8774 47.585 39.8442 47.4395 cv
39.811 47.2939 39.9629 47.1055 40.1836 47.0195 cv
40.4053 46.9326 40.6118 46.9805 40.645 47.126 cv
cp
level3{
gsave
clp
[.356017 -.138735 .0714075 .307052 40.2446 47.2822 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.356017 -.138735 .0714075 .307052 40.2446 47.2822 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.5127 46.8379 mo
39.5015 46.9297 39.3286 46.9717 39.126 46.9297 cv
38.9243 46.8896 38.769 46.7803 38.7803 46.6875 cv
38.7915 46.5947 38.9648 46.5537 39.167 46.5947 cv
39.3696 46.6367 39.5239 46.7451 39.5127 46.8379 cv
cp
level3{
gsave
clp
[.325326 .0662889 -.0234561 .195807 39.1479 46.7627 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.325326 .0662889 -.0234561 .195807 39.1479 46.7627 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.4238 46.9248 mo
38.4287 47.0596 38.2432 47.1787 38.0103 47.1924 cv
37.7773 47.2051 37.5845 47.1074 37.5796 46.9736 cv
37.5752 46.8398 37.7607 46.7188 37.9937 46.7051 cv
38.2266 46.6924 38.4194 46.79 38.4238 46.9248 cv
cp
level3{
gsave
clp
[.375587 -.0214329 .0102062 .283731 38.0044 46.9492 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.375587 -.0214329 .0102062 .283731 38.0044 46.9492 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.6211 46.7324 mo
39.645 46.8359 39.4966 46.9873 39.2896 47.0713 cv
39.0815 47.1572 38.8931 47.1416 38.8682 47.0381 cv
38.8433 46.9355 38.9922 46.7832 39.1997 46.6992 cv
39.4067 46.6143 39.5957 46.6289 39.6211 46.7324 cv
cp
level3{
gsave
clp
[.334741 -.135733 .0520481 .217377 39.2456 46.8848 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.334741 -.135733 .0520481 .217377 39.2456 46.8848 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.9536 46.9102 mo
38.9575 47.0264 38.8022 47.1289 38.6064 47.1406 cv
38.4106 47.1514 38.2485 47.0674 38.2446 46.9521 cv
38.2407 46.8359 38.396 46.7334 38.5918 46.7217 cv
38.7871 46.7109 38.9492 46.7959 38.9536 46.9102 cv
cp
level3{
gsave
clp
[.315408 -.0183733 .0081659 .243956 38.5991 46.9307 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.315408 -.0183733 .0081659 .243956 38.5991 46.9307 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.6655 46.8887 mo
38.6655 46.998 38.5332 47.0879 38.3696 47.0879 cv
38.2061 47.0879 38.0737 46.998 38.0737 46.8887 cv
38.0737 46.7783 38.2061 46.6885 38.3696 46.6885 cv
38.5332 46.6885 38.6655 46.7783 38.6655 46.8887 cv
cp
level3{
gsave
clp
[.263147 0 0 .232548 38.3706 46.8887 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.263147 0 0 .232548 38.3706 46.8887 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.7432 46.918 mo
37.7432 47.0283 37.6108 47.1182 37.4473 47.1182 cv
37.2842 47.1182 37.1514 47.0283 37.1514 46.918 cv
37.1514 46.8076 37.2842 46.7188 37.4473 46.7188 cv
37.6108 46.7188 37.7432 46.8076 37.7432 46.918 cv
cp
level3{
gsave
clp
[.263138 0 0 .23254 37.4482 46.9189 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.263138 0 0 .23254 37.4482 46.9189 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.0352 47.043 mo
38.0063 47.1289 37.8311 47.1143 37.6426 47.0088 cv
37.4551 46.9033 37.3257 46.748 37.3535 46.6621 cv
37.3823 46.5762 37.5576 46.5918 37.7461 46.6963 cv
37.9341 46.8018 38.064 46.957 38.0352 47.043 cv
cp
level3{
gsave
clp
[.303196 .169463 -.0602308 .181713 37.6924 46.8535 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.303196 .169463 -.0602308 .181713 37.6924 46.8535 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.895 46.6904 mo
37.8667 46.7764 37.6909 46.7617 37.5024 46.6563 cv
37.3149 46.5508 37.1855 46.3955 37.2134 46.3096 cv
37.2422 46.2236 37.418 46.2383 37.6064 46.3438 cv
37.7939 46.4492 37.9238 46.6045 37.895 46.6904 cv
cp
level3{
gsave
clp
[.303311 .169527 -.0602537 .181782 37.5522 46.5 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.303311 .169527 -.0602537 .181782 37.5522 46.5 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.1665 47.0586 mo
40.1709 47.1924 39.9854 47.3125 39.7524 47.3262 cv
39.5186 47.3398 39.3267 47.2422 39.3223 47.1074 cv
39.3174 46.9736 39.5029 46.8525 39.7358 46.8398 cv
39.9688 46.8262 40.1616 46.9238 40.1665 47.0586 cv
cp
level3{
gsave
clp
[.375351 -.0214195 .0101998 .283553 39.7471 47.084 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.375351 -.0214195 .0101998 .283553 39.7471 47.084 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.6729 46.6611 mo
37.6978 46.7637 37.5493 46.916 37.3413 47.001 cv
37.1333 47.085 36.9448 47.0703 36.9199 46.9668 cv
36.896 46.8633 37.0439 46.7119 37.2515 46.627 cv
37.4595 46.542 37.6479 46.5576 37.6729 46.6611 cv
cp
level3{
gsave
clp
[.335356 -.135983 .0521437 .217777 37.2974 46.8135 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.335356 -.135983 .0521437 .217777 37.2974 46.8135 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.8081 47.2773 mo
37.7827 47.3135 37.7153 47.2871 37.6587 47.2178 cv
37.6016 47.1484 37.5776 47.0625 37.603 47.0264 cv
37.6299 46.9902 37.6968 47.0176 37.7539 47.0869 cv
37.8096 47.1553 37.8345 47.2412 37.8081 47.2773 cv
cp
level3{
gsave
clp
[.0910923 .111563 -.0552695 .0767632 37.7051 47.1514 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0910923 .111563 -.0552695 .0767632 37.7051 47.1514 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.8521 46.9766 mo
38.8569 47.0918 38.7017 47.1953 38.5059 47.2061 cv
38.3105 47.2178 38.1489 47.1328 38.145 47.0176 cv
38.1401 46.9014 38.2964 46.7988 38.4912 46.7881 cv
38.6875 46.7764 38.8491 46.8604 38.8521 46.9766 cv
cp
level3{
gsave
clp
[.314576 -.0183248 .00814437 .243313 38.4985 46.9961 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.314576 -.0183248 .00814437 .243313 38.4985 46.9961 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.082 46.8633 mo
39.082 46.9736 38.9497 47.0645 38.7866 47.0645 cv
38.6235 47.0645 38.4907 46.9736 38.4907 46.8633 cv
38.4907 46.7539 38.6235 46.665 38.7866 46.665 cv
38.9497 46.665 39.082 46.7539 39.082 46.8633 cv
cp
level3{
gsave
clp
[.262918 0 0 .232346 38.7876 46.8652 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.262918 0 0 .232346 38.7876 46.8652 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.6387 47.2021 mo
37.6265 47.2949 37.4541 47.3359 37.2515 47.2959 cv
37.0488 47.2539 36.8945 47.1445 36.9048 47.0518 cv
36.917 46.96 37.0894 46.918 37.2925 46.96 cv
37.4941 47.001 37.6494 47.1094 37.6387 47.2021 cv
cp
level3{
gsave
clp
[.32608 .0664426 -.0235105 .196261 37.2729 47.1279 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.32608 .0664426 -.0235105 .196261 37.2729 47.1279 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.1177 47.8613 mo
40.1177 47.9736 39.9922 48.0645 39.8374 48.0645 cv
39.6821 48.0645 39.5571 47.9736 39.5571 47.8613 cv
39.5571 47.749 39.6821 47.6582 39.8374 47.6582 cv
39.9922 47.6582 40.1177 47.749 40.1177 47.8613 cv
cp
level3{
gsave
clp
[.249218 0 0 .236607 39.8359 47.8623 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249218 0 0 .236607 39.8359 47.8623 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.4243 46.9521 mo
39.4243 47.0645 39.2993 47.1553 39.144 47.1553 cv
38.9893 47.1553 38.8638 47.0645 38.8638 46.9521 cv
38.8638 46.8398 38.9893 46.749 39.144 46.749 cv
39.2993 46.749 39.4243 46.8398 39.4243 46.9521 cv
cp
level3{
gsave
clp
[.249215 0 0 .236604 39.1426 46.9531 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.249215 0 0 .236604 39.1426 46.9531 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.4517 46.5469 mo
45.4517 46.666 45.6284 46.7617 45.8472 46.7617 cv
46.0659 46.7617 46.2437 46.666 46.2437 46.5469 cv
46.2437 46.4277 46.0659 46.332 45.8472 46.332 cv
45.6284 46.332 45.4517 46.4277 45.4517 46.5469 cv
cp
level3{
gsave
clp
[-.351511 0 0 .250737 45.8481 46.5469 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351511 0 0 .250737 45.8481 46.5469 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.6025 46.4609 mo
44.6475 46.6074 45.0708 46.6631 45.5498 46.584 cv
46.0293 46.5049 46.3818 46.3223 46.3384 46.1748 cv
46.2935 46.0273 45.8696 45.9727 45.3911 46.0518 cv
44.9121 46.1309 44.5586 46.3135 44.6025 46.4609 cv
cp
level3{
gsave
clp
[-.771267 .127524 .0928377 .310139 45.4697 46.3164 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.771267 .127524 .0928377 .310139 45.4697 46.3164 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.3672 46.7949 mo
42.4458 46.6641 42.2144 46.4609 41.8511 46.3418 cv
41.4888 46.2217 41.1309 46.2314 41.0522 46.3623 cv
40.9751 46.4932 41.2051 46.6953 41.5688 46.8154 cv
41.9321 46.9346 42.2891 46.9258 42.3672 46.7949 cv
cp
level3{
gsave
clp
[.585099 .19197 .165421 -.275701 41.7095 46.5781 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.585099 .19197 .165421 -.275701 41.7095 46.5781 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.8179 46.2852 mo
42.8647 46.1465 42.5889 45.9766 42.2031 45.9063 cv
41.8179 45.835 41.4683 45.8906 41.4214 46.0293 cv
41.376 46.168 41.6509 46.3379 42.0371 46.4082 cv
42.4224 46.4795 42.772 46.4238 42.8179 46.2852 cv
cp
level3{
gsave
clp
[.620311 .114268 .0979438 -.292811 42.1211 46.1572 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.620311 .114268 .0979438 -.292811 42.1211 46.1572 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.3628 46.0469 mo
42.2944 46.2168 42.5171 46.417 42.8613 46.4941 cv
43.2056 46.5703 43.5396 46.4951 43.6094 46.3252 cv
43.6782 46.1543 43.4551 45.9531 43.1099 45.877 cv
42.7666 45.8008 42.4321 45.876 42.3628 46.0469 cv
cp
level3{
gsave
clp
[-.554194 -.123494 -.145948 .360277 42.9858 46.1865 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.554194 -.123494 -.145948 .360277 42.9858 46.1865 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.6646 46.3789 mo
42.6968 46.5605 43.1235 46.668 43.6187 46.6201 cv
44.1138 46.5723 44.4893 46.3857 44.4575 46.2051 cv
44.4248 46.0234 43.9976 45.915 43.5024 45.9629 cv
43.0078 46.0117 42.6328 46.1982 42.6646 46.3789 cv
cp
level3{
gsave
clp
[-.796695 .0776267 .0674126 .383026 43.5615 46.29 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.796695 .0776267 .0674126 .383026 43.5615 46.29 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.8774 46.6709 mo
46.9556 46.54 46.7241 46.3369 46.3618 46.2178 cv
45.9985 46.0977 45.6396 46.1074 45.562 46.2383 cv
45.4849 46.3691 45.7153 46.5713 46.0786 46.6914 cv
46.4419 46.8105 46.7998 46.8018 46.8774 46.6709 cv
cp
level3{
gsave
clp
[.584877 .191897 .165358 -.275596 46.2197 46.4541 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.584877 .191897 .165358 -.275596 46.2197 46.4541 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.9912 46.2314 mo
43.9224 46.4014 44.1455 46.6016 44.4893 46.6787 cv
44.8335 46.7559 45.168 46.6787 45.2373 46.5088 cv
45.3062 46.3389 45.083 46.1377 44.7388 46.0615 cv
44.3955 45.9844 44.0601 46.0605 43.9912 46.2314 cv
cp
level3{
gsave
clp
[-.554036 -.123459 -.145906 .360175 44.6138 46.3711 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.554036 -.123459 -.145906 .360175 44.6138 46.3711 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.6006 46.2109 mo
44.6006 46.3633 44.9014 46.4873 45.272 46.4873 cv
45.6445 46.4873 45.9448 46.3633 45.9448 46.2109 cv
45.9448 46.0586 45.6445 45.9355 45.272 45.9355 cv
44.9014 45.9355 44.6006 46.0586 44.6006 46.2109 cv
cp
level3{
gsave
clp
[-.597484 0 0 .321173 45.2729 46.2119 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.597484 0 0 .321173 45.2729 46.2119 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
41.9683 46.5586 mo
41.9683 46.6787 42.1455 46.7744 42.3643 46.7744 cv
42.5825 46.7744 42.7598 46.6787 42.7598 46.5586 cv
42.7598 46.4395 42.5825 46.3438 42.3643 46.3438 cv
42.1455 46.3438 41.9683 46.4395 41.9683 46.5586 cv
cp
level3{
gsave
clp
[-.351676 0 0 .250854 42.3643 46.5596 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351676 0 0 .250854 42.3643 46.5596 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.9702 46.5 mo
45.9702 46.6201 46.1475 46.7158 46.3662 46.7158 cv
46.585 46.7158 46.7627 46.6201 46.7627 46.5 cv
46.7627 46.3818 46.585 46.2852 46.3662 46.2852 cv
46.1475 46.2852 45.9702 46.3818 45.9702 46.5 cv
cp
level3{
gsave
clp
[-.351922 0 0 .251029 46.3672 46.501 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351922 0 0 .251029 46.3672 46.501 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.4136 46.6963 mo
43.1304 46.001 42.665 45 41.9829 43.9512 cv
40.7056 41.9873 39.3228 41.501 39.3228 41.501 cv
39.3228 41.501 40.6831 41.6045 42.231 43.9219 cv
43.0693 45.1758 43.5088 46.1064 43.7363 46.6963 cv
43.4136 46.6963 li
cp
level3{
gsave
clp
[3.35343 6.61342 5.90006 -3.40678 40.0322 41.0918 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.35343 6.61342 5.90006 -3.40678 40.0322 41.0918 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
44.0557 46.5273 mo
43.7349 46.1455 43.3218 45.707 42.8105 45.2549 cv
41.2715 43.8945 39.6294 43.5469 39.6294 43.5469 cv
39.6294 43.5469 41.2383 43.6328 43.1055 45.2383 cv
43.6938 45.7451 44.1216 46.1758 44.4302 46.5273 cv
44.0557 46.5273 li
cp
level3{
gsave
clp
[2.83739 5.83181 4.81404 -2.91864 40.9233 42.7627 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.83739 5.83181 4.81404 -2.91864 40.9233 42.7627 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
46.0317 46.4082 mo
46.0127 46.3457 45.9907 46.2813 45.9639 46.2148 cv
45.5977 45.3047 44.2734 44.6416 44.2734 44.6416 cv
44.2734 44.6416 45.7876 45.2207 46.2676 46.3115 cv
46.2822 46.3438 46.2964 46.376 46.3096 46.4082 cv
46.0317 46.4082 li
cp
level3{
gsave
clp
[-.058536 2.15762 3.33426 1.31678 45.3042 45.0488 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.058536 2.15762 3.33426 1.31678 45.3042 45.0488 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.8862 46.6367 mo
43.9692 46.2598 44.1089 45.8242 44.335 45.3486 cv
45.0908 43.7607 46.7783 42.8701 46.7783 42.8701 cv
46.7783 42.8701 44.9214 43.5557 43.9692 45.4492 cv
43.7363 45.9141 43.5835 46.3076 43.4844 46.6367 cv
43.8862 46.6367 li
cp
level3{
gsave
clp
[-.40828 4.66379 -4.45749 .801998 45.2734 43.1406 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.40828 4.66379 -4.45749 .801998 45.2734 43.1406 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
45.3638 46.4082 mo
44.3252 46.2051 43.4331 46.1768 43.4331 46.1768 cv
43.4331 46.1768 44.5088 46.1406 45.8154 46.4082 cv
45.3638 46.4082 li
cp
level3{
gsave
clp
[2.52699 2.9597 5.96437 -2.29453 44.2554 45.8604 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.52699 2.9597 5.96437 -2.29453 44.2554 45.8604 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.8081 46.2109 mo
42.9185 46.0625 42.208 46.04 42.208 46.04 cv
42.208 46.04 43.1147 46.0098 44.2744 46.2109 cv
43.8081 46.2109 li
cp
level3{
gsave
clp
[2.54492 2.9807 6.00668 -2.31081 42.9312 45.7617 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54492 2.9807 6.00668 -2.31081 42.9312 45.7617 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.2871 46.0703 mo
43.0449 45.7686 42.7251 45.4297 42.3052 45.0742 cv
40.8525 43.8467 38.731 43.4033 38.731 43.4033 cv
38.731 43.4033 40.9419 43.6367 42.7251 45.0908 cv
43.1885 45.4697 43.5244 45.7949 43.7695 46.0703 cv
43.2871 46.0703 li
cp
level3{
gsave
clp
[1.70495 4.81432 5.93822 -1.36566 40.624 42.9688 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.70495 4.81432 5.93822 -1.36566 40.624 42.9688 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
43.1519 45.7773 mo
41.5649 45.6006 40.1421 45.6162 40.1421 45.6162 cv
40.1421 45.6162 41.9585 45.5156 44.0181 45.7773 cv
43.1519 45.7773 li
cp
level3{
gsave
clp
[3.78833 3.0652 9.95385 -3.2486 41.4526 45.1895 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.78833 3.0652 9.95385 -3.2486 41.4526 45.1895 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.5864 46.4639 mo
43.3867 46.3965 43.1729 46.3281 42.9443 46.2588 cv
40.459 45.5186 37.3242 45.4863 37.3242 45.4863 cv
37.3242 45.4863 40.5083 45.3428 43.5405 46.2109 cv
43.8467 46.2988 44.1235 46.3828 44.3726 46.4639 cv
43.5864 46.4639 li
cp
level3{
gsave
clp
[4.18769 4.15979 10.4356 -3.69815 39.5596 44.6943 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.18769 4.15979 10.4356 -3.69815 39.5596 44.6943 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.1216 46.5742 mo
44.3486 46.3457 44.627 46.1055 44.9658 45.8672 cv
46.6187 44.7041 49.187 44.6211 49.187 44.6211 cv
49.187 44.6211 46.4834 44.4355 44.4478 45.7988 cv
44.0264 46.0801 43.7007 46.3408 43.4487 46.5742 cv
44.1216 46.5742 li
cp
level3{
gsave
clp
[-2.23068 6.07509 -8.97453 -5.11878 47.1104 43.4375 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.23068 6.07509 -8.97453 -5.11878 47.1104 43.4375 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
45.0103 46.3926 mo
45.1294 46.3105 45.2637 46.2236 45.4136 46.1338 cv
46.2441 45.6348 47.124 45.4355 47.124 45.4355 cv
47.124 45.4355 46.2632 45.5537 45.2568 46.1445 cv
45.1035 46.2354 44.9712 46.3174 44.8555 46.3926 cv
45.0103 46.3926 li
cp
level3{
gsave
clp
[-1.35317 1.85632 -2.25837 -.371474 46.4219 45.3203 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.35317 1.85632 -2.25837 -.371474 46.4219 45.3203 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.644 46.2148 mo
44.4224 46.0908 44.1587 45.96 43.8506 45.8281 cv
42.4531 45.2295 40.7739 45.1367 40.7739 45.1367 cv
40.7739 45.1367 42.4634 45.1006 44.1646 45.8047 cv
44.5293 45.9561 44.8213 46.0928 45.0542 46.2148 cv
44.644 46.2148 li
cp
level3{
gsave
clp
[2.29792 3.07487 5.13194 -2.13942 42.0986 44.585 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.29792 3.07487 5.13194 -2.13942 42.0986 44.585 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
45.5098 46.5498 mo
45.6279 46.3428 45.7974 46.1104 46.041 45.8711 cv
46.8179 45.1104 48.1396 44.9287 48.1396 44.9287 cv
48.1396 44.9287 46.7285 44.9609 45.77 45.8574 cv
45.481 46.1279 45.2935 46.3584 45.1729 46.5498 cv
45.5098 46.5498 li
cp
level3{
gsave
clp
[-.623007 4.60631 -3.13205 -2.44795 46.8975 43.958 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.623007 4.60631 -3.13205 -2.44795 46.8975 43.958 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
44.0225 46.4082 mo
43.9468 46.3594 43.8672 46.3086 43.7832 46.2598 cv
42.5381 45.5156 41.0142 45.3291 41.0142 45.3291 cv
41.0142 45.3291 42.5522 45.3721 44.0693 46.249 cv
44.1641 46.3037 44.2524 46.3564 44.3364 46.4082 cv
44.0225 46.4082 li
cp
level3{
gsave
clp
[1.90495 3.48299 4.43217 -1.77503 42.1348 44.8799 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.90495 3.48299 4.43217 -1.77503 42.1348 44.8799 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.9009 46.4082 mo
44.9272 46.2959 44.9683 46.1777 45.0249 46.0557 cv
45.4326 45.1807 46.8857 44.7432 46.8857 44.7432 cv
46.8857 44.7432 45.2251 45.0566 44.6909 46.0977 cv
44.6343 46.208 44.5889 46.3115 44.5542 46.4082 cv
44.9009 46.4082 li
cp
level3{
gsave
clp
[.0681374 2.79046 -4.50827 .0740499 45.7002 44.7627 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0681374 2.79046 -4.50827 .0740499 45.7002 44.7627 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.5361 46.5605 mo
43.6938 46.4199 43.8735 46.2734 44.0776 46.126 cv
45.6558 44.9844 48.2603 44.6289 48.2603 44.6289 cv
48.2603 44.6289 45.4946 44.7773 43.5444 46.127 cv
43.3232 46.2803 43.1313 46.4248 42.9634 46.5605 cv
43.5361 46.5605 li
cp
level3{
gsave
clp
[-1.71763 4.7164 -7.98608 -1.83153 46.1406 44.1426 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.71763 4.7164 -7.98608 -1.83153 46.1406 44.1426 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
42.6582 46.4697 mo
42.7168 46.3281 42.7983 46.1758 42.9116 46.0156 cv
43.5073 45.167 44.9966 44.6738 44.9966 44.6738 cv
44.9966 44.6738 43.3394 45.0615 42.5825 46.0742 cv
42.4751 46.2188 42.3906 46.3496 42.3247 46.4697 cv
42.6582 46.4697 li
cp
level3{
gsave
clp
[-.232813 2.42873 -3.98143 .542397 43.73 44.8467 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.232813 2.42873 -3.98143 .542397 43.73 44.8467 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
44.5532 46.583 mo
44.8374 46.2344 45.3022 45.7334 45.9839 45.208 cv
47.2612 44.2246 48.644 43.9814 48.644 43.9814 cv
48.644 43.9814 47.2847 44.0332 45.7358 45.1934 cv
44.8994 45.8213 44.459 46.2871 44.231 46.583 cv
44.5532 46.583 li
cp
level3{
gsave
clp
[-2.23022 4.3983 -3.92388 -2.26571 47.4473 43.29 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.23022 4.3983 -3.92388 -2.26571 47.4473 43.29 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.2168 46.6982 mo
44.3462 46.4336 44.5171 46.1357 44.7417 45.8242 cv
45.5171 44.748 46.6504 44.3584 46.6504 44.3584 cv
46.6504 44.3584 45.4697 44.5625 44.5171 45.8389 cv
44.27 46.1709 44.0898 46.457 43.959 46.6982 cv
44.2168 46.6982 li
cp
level3{
gsave
clp
[-1.31858 3.72333 -4.59254 -1.05618 45.7886 44.1602 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.31858 3.72333 -4.59254 -1.05618 45.7886 44.1602 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
45.6665 46.4873 mo
45.6079 46.3457 45.5254 46.1943 45.4131 46.0332 cv
44.8174 45.1846 43.3271 44.6914 43.3271 44.6914 cv
43.3271 44.6914 44.9854 45.0801 45.7412 46.0928 cv
45.8496 46.2373 45.9336 46.3682 46 46.4873 cv
45.6665 46.4873 li
cp
level3{
gsave
clp
[.232795 2.42854 3.98112 .542355 44.5938 44.8643 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.232795 2.42854 3.98112 .542355 44.5938 44.8643 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.6421 46.7158 mo
43.6938 46.4414 43.8032 46.0986 44.0181 45.7168 cv
44.5806 44.7139 45.8359 44.1533 45.8359 44.1533 cv
45.8359 44.1533 44.4536 44.5859 43.7471 45.7803 cv
43.5171 46.168 43.3916 46.4766 43.3262 46.7158 cv
43.6421 46.7158 li
cp
level3{
gsave
clp
[-2.50977 0 0 2.50977 45.8359 45.4346 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.50977 0 0 2.50977 45.8359 45.4346 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
42.7891 46.6553 mo
42.5957 46.5439 42.3745 46.4268 42.1235 46.3066 cv
40.4009 45.4844 37.896 45.1836 37.896 45.1836 cv
37.896 45.1836 40.5054 45.3447 42.6196 46.3193 cv
42.8799 46.4395 43.1069 46.5508 43.3042 46.6553 cv
42.7891 46.6553 li
cp
level3{
gsave
clp
[2.03609 3.2288 7.00703 -.886198 39.9702 44.9209 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.03609 3.2288 7.00703 -.886198 39.9702 44.9209 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
42.2324 46.7227 mo
42.1211 46.2793 41.96 45.7451 41.7261 45.1807 cv
41.105 43.6748 40.2056 43.1396 40.2056 43.1396 cv
40.2056 43.1396 41.1421 43.417 41.9043 45.1982 cv
42.1694 45.8193 42.3384 46.3262 42.4448 46.7227 cv
42.2324 46.7227 li
cp
level3{
gsave
clp
[.737269 5.92302 2.51604 -1.74112 41.0303 42.5674 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.737269 5.92302 2.51604 -1.74112 41.0303 42.5674 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
45.5444 47.2832 mo
45.5444 47.4033 45.7222 47.499 45.9399 47.499 cv
46.1597 47.499 46.3364 47.4033 46.3364 47.2832 cv
46.3364 47.165 46.1597 47.0674 45.9399 47.0674 cv
45.7222 47.0674 45.5444 47.165 45.5444 47.2832 cv
cp
level3{
gsave
clp
[-.352087 0 0 .251147 45.9404 47.2832 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352087 0 0 .251147 45.9404 47.2832 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.8003 47.6299 mo
44.8003 47.749 44.978 47.8457 45.1968 47.8457 cv
45.415 47.8457 45.5928 47.749 45.5928 47.6299 cv
45.5928 47.5107 45.415 47.4141 45.1968 47.4141 cv
44.978 47.4141 44.8003 47.5107 44.8003 47.6299 cv
cp
level3{
gsave
clp
[-.352216 0 0 .251239 45.1973 47.6299 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352216 0 0 .251239 45.1973 47.6299 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.9648 46.54 mo
44.9648 46.6582 45.1431 46.7559 45.3613 46.7559 cv
45.5801 46.7559 45.7573 46.6582 45.7573 46.54 cv
45.7573 46.4209 45.5801 46.3242 45.3613 46.3242 cv
45.1431 46.3242 44.9648 46.4209 44.9648 46.54 cv
cp
level3{
gsave
clp
[-.352216 0 0 .251239 45.3613 46.54 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352216 0 0 .251239 45.3613 46.54 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.6177 47.1533 mo
44.6177 47.2725 44.7949 47.3691 45.0132 47.3691 cv
45.2319 47.3691 45.4097 47.2725 45.4097 47.1533 cv
45.4097 47.0342 45.2319 46.9375 45.0132 46.9375 cv
44.7949 46.9375 44.6177 47.0342 44.6177 47.1533 cv
cp
level3{
gsave
clp
[-.352087 0 0 .251147 45.0137 47.1533 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352087 0 0 .251147 45.0137 47.1533 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.728 47.1533 mo
43.728 47.2725 43.9053 47.3691 44.1235 47.3691 cv
44.3423 47.3691 44.52 47.2725 44.52 47.1533 cv
44.52 47.0342 44.3423 46.9375 44.1235 46.9375 cv
43.9053 46.9375 43.728 47.0342 43.728 47.1533 cv
cp
level3{
gsave
clp
[-.352087 0 0 .251147 44.124 47.1533 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352087 0 0 .251147 44.124 47.1533 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.3481 47.3955 mo
43.3481 47.5146 43.5254 47.6113 43.7441 47.6113 cv
43.9624 47.6113 44.1406 47.5146 44.1406 47.3955 cv
44.1406 47.2764 43.9624 47.1807 43.7441 47.1807 cv
43.5254 47.1807 43.3481 47.2764 43.3481 47.3955 cv
cp
level3{
gsave
clp
[-.351922 0 0 .251029 43.7446 47.3965 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351922 0 0 .251029 43.7446 47.3965 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.0376 46.7949 mo
43.1152 46.6641 42.8833 46.4609 42.5215 46.3418 cv
42.1582 46.2217 41.7998 46.2314 41.7217 46.3623 cv
41.644 46.4932 41.8745 46.6953 42.2383 46.8154 cv
42.6016 46.9346 42.9585 46.9258 43.0376 46.7949 cv
cp
level3{
gsave
clp
[.585439 .192081 .165517 -.275861 42.3794 46.5781 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.585439 .192081 .165517 -.275861 42.3794 46.5781 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.2749 46.8369 mo
43.2749 46.9795 43.542 47.0957 43.8716 47.0957 cv
44.2007 47.0957 44.4688 46.9795 44.4688 46.8369 cv
44.4688 46.6943 44.2007 46.5781 43.8716 46.5781 cv
43.542 46.5781 43.2749 46.6943 43.2749 46.8369 cv
cp
level3{
gsave
clp
[-.530827 0 0 .301723 43.8716 46.8359 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.530827 0 0 .301723 43.8716 46.8359 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.9966 47.1084 mo
43.0962 47.084 43.1372 46.9004 43.0874 46.6982 cv
43.0381 46.4961 42.9165 46.3506 42.8149 46.374 cv
42.7144 46.3984 42.6733 46.5811 42.7236 46.7842 cv
42.7739 46.9863 42.895 47.1318 42.9966 47.1084 cv
cp
level3{
gsave
clp
[.0797536 .326172 .212676 -.0501016 42.9053 46.7432 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0797536 .326172 .212676 -.0501016 42.9053 46.7432 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
41.5972 47.0684 mo
41.5503 47.2227 41.7651 47.4229 42.0767 47.5146 cv
42.3892 47.6064 42.6812 47.5557 42.7285 47.4004 cv
42.7759 47.2461 42.5605 47.0469 42.2485 46.9541 cv
41.9365 46.8633 41.6445 46.9141 41.5972 47.0684 cv
cp
level3{
gsave
clp
[-.502397 -.148064 -.100071 .326762 42.1631 47.2334 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.502397 -.148064 -.100071 .326762 42.1631 47.2334 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.1963 46.7617 mo
43.2119 46.8604 43.4565 46.9043 43.7417 46.8604 cv
44.0278 46.8164 44.2461 46.7021 44.2305 46.6025 cv
44.2144 46.5039 43.9702 46.46 43.6851 46.5039 cv
43.3989 46.5479 43.1797 46.6641 43.1963 46.7617 cv
cp
level3{
gsave
clp
[-.458693 .070333 .0336375 .207941 43.7134 46.6826 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.458693 .070333 .0336375 .207941 43.7134 46.6826 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.7334 46.8545 mo
44.7266 46.9971 44.9878 47.124 45.3174 47.1387 cv
45.6465 47.1523 45.9189 47.0479 45.9253 46.9063 cv
45.9321 46.7637 45.6699 46.6367 45.3408 46.6211 cv
45.0117 46.6074 44.7397 46.7119 44.7334 46.8545 cv
cp
level3{
gsave
clp
[-.530129 -.0224717 -.0143002 .301326 45.3296 46.8789 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.530129 -.0224717 -.0143002 .301326 45.3296 46.8789 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.0444 46.6504 mo
43.0088 46.7598 43.2183 46.9209 43.5117 47.0107 cv
43.8052 47.1016 44.0718 47.085 44.1064 46.9746 cv
44.1411 46.8662 43.9316 46.7041 43.6387 46.6143 cv
43.3452 46.5244 43.0781 46.541 43.0444 46.6504 cv
cp
level3{
gsave
clp
[-.471981 -.143735 -.074416 .231403 43.5767 46.8125 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.471981 -.143735 -.074416 .231403 43.5767 46.8125 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.9858 46.8398 mo
43.981 46.9619 44.1992 47.0713 44.4761 47.084 cv
44.7524 47.0957 44.98 47.0059 44.9863 46.8828 cv
44.9917 46.7607 44.7729 46.6514 44.4961 46.6387 cv
44.2197 46.6279 43.9922 46.7168 43.9858 46.8398 cv
cp
level3{
gsave
clp
[-.444777 -.0193825 -.0122416 .259113 44.4858 46.8623 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.444777 -.0193825 -.0122416 .259113 44.4858 46.8623 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.3921 46.8154 mo
44.3921 46.9326 44.5791 47.0273 44.8105 47.0273 cv
45.0405 47.0273 45.2285 46.9326 45.2285 46.8154 cv
45.2285 46.6982 45.0405 46.6035 44.8105 46.6035 cv
44.5791 46.6035 44.3921 46.6982 44.3921 46.8154 cv
cp
level3{
gsave
clp
[-.37181 0 0 .247193 44.8105 46.8135 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.37181 0 0 .247193 44.8105 46.8135 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.6943 46.8467 mo
45.6943 46.9639 45.8813 47.0596 46.1118 47.0596 cv
46.3428 47.0596 46.5298 46.9639 46.5298 46.8467 cv
46.5298 46.7305 46.3428 46.6348 46.1118 46.6348 cv
45.8813 46.6348 45.6943 46.7305 45.6943 46.8467 cv
cp
level3{
gsave
clp
[-.371827 0 0 .247204 46.1123 46.8457 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.371827 0 0 .247204 46.1123 46.8457 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.2822 46.9805 mo
45.3228 47.0713 45.5703 47.0557 45.8359 46.9434 cv
46.1016 46.832 46.2847 46.667 46.2441 46.5752 cv
46.2041 46.4834 45.9561 46.5 45.6904 46.6113 cv
45.4248 46.7236 45.2417 46.8887 45.2822 46.9805 cv
cp
level3{
gsave
clp
[-.428301 .179907 .0848424 .193195 45.7607 46.7793 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.428301 .179907 .0848424 .193195 45.7607 46.7793 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.48 46.6055 mo
45.5205 46.6973 45.7686 46.6816 46.0342 46.5693 cv
46.2993 46.457 46.4824 46.292 46.4419 46.2012 cv
46.4019 46.1104 46.1543 46.126 45.8882 46.2373 cv
45.6226 46.3496 45.4395 46.5137 45.48 46.6055 cv
cp
level3{
gsave
clp
[-.428235 .179879 .0848295 .193166 45.959 46.4053 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.428235 .179879 .0848295 .193166 45.959 46.4053 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.2734 46.9971 mo
42.2671 47.1387 42.5283 47.2656 42.8579 47.2803 cv
43.187 47.2949 43.4595 47.1914 43.4653 47.0479 cv
43.4722 46.9063 43.2104 46.7783 42.8809 46.7637 cv
42.5518 46.75 42.2803 46.8535 42.2734 46.9971 cv
cp
level3{
gsave
clp
[-.529808 -.0224581 -.0142915 .301143 42.8696 47.0215 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.529808 -.0224581 -.0142915 .301143 42.8696 47.0215 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.7944 46.5742 mo
45.7588 46.6836 45.9683 46.8457 46.2617 46.9346 cv
46.5552 47.0244 46.8218 47.0088 46.8564 46.8994 cv
46.8911 46.7891 46.6816 46.6279 46.3882 46.5381 cv
46.0952 46.4482 45.8291 46.4648 45.7944 46.5742 cv
cp
level3{
gsave
clp
[-.471964 -.14373 -.0744134 .231395 46.3267 46.7363 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.471964 -.14373 -.0744134 .231395 46.3267 46.7363 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.6021 47.2285 mo
45.6396 47.2676 45.7339 47.2393 45.814 47.165 cv
45.894 47.0918 45.9287 47.001 45.8916 46.9629 cv
45.8545 46.9248 45.7603 46.9531 45.6802 47.0264 cv
45.6006 47.0996 45.5649 47.1904 45.6021 47.2285 cv
cp
level3{
gsave
clp
[-.128283 .118102 .0783954 .0814497 45.7476 47.0967 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.128283 .118102 .0783954 .0814497 45.7476 47.0967 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.1284 46.9092 mo
44.1221 47.0322 44.3418 47.1416 44.6177 47.1533 cv
44.894 47.165 45.1226 47.0752 45.1274 46.9531 cv
45.1338 46.8301 44.9136 46.7217 44.6372 46.709 cv
44.3613 46.6973 44.1338 46.7861 44.1284 46.9092 cv
cp
level3{
gsave
clp
[-.44403 -.0193499 -.012221 .258678 44.6279 46.9326 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.44403 -.0193499 -.012221 .258678 44.6279 46.9326 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.8037 46.7891 mo
43.8037 46.9063 43.9907 47.002 44.2212 47.002 cv
44.4512 47.002 44.6392 46.9063 44.6392 46.7891 cv
44.6392 46.6729 44.4512 46.5771 44.2212 46.5771 cv
43.9907 46.5771 43.8037 46.6729 43.8037 46.7891 cv
cp
level3{
gsave
clp
[-.371872 0 0 .247233 44.2217 46.7881 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.371872 0 0 .247233 44.2217 46.7881 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.8428 47.1494 mo
45.8584 47.2471 46.103 47.292 46.3887 47.248 cv
46.6748 47.2041 46.8926 47.0879 46.8774 46.9902 cv
46.8608 46.8916 46.6172 46.8477 46.3315 46.8916 cv
46.0454 46.9355 45.8267 47.0508 45.8428 47.1494 cv
cp
level3{
gsave
clp
[-.458828 .0703536 .0336474 .208002 46.3604 47.0703 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.458828 .0703536 .0336474 .208002 46.3604 47.0703 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.3423 47.8486 mo
42.3423 47.9678 42.519 48.0645 42.7378 48.0645 cv
42.9565 48.0645 43.1343 47.9678 43.1343 47.8486 cv
43.1343 47.7295 42.9565 47.6328 42.7378 47.6328 cv
42.519 47.6328 42.3423 47.7295 42.3423 47.8486 cv
cp
level3{
gsave
clp
[-.352099 0 0 .251156 42.7383 47.8486 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.352099 0 0 .251156 42.7383 47.8486 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.3213 46.8838 mo
43.3213 47.0029 43.498 47.0986 43.7168 47.0986 cv
43.9355 47.0986 44.1123 47.0029 44.1123 46.8838 cv
44.1123 46.7646 43.9355 46.668 43.7168 46.668 cv
43.498 46.668 43.3213 46.7646 43.3213 46.8838 cv
cp
level3{
gsave
clp
[-.351535 0 0 .250754 43.7168 46.8838 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.351535 0 0 .250754 43.7168 46.8838 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.8418 46.4219 mo
39.8418 46.543 40.04 46.6406 40.2852 46.6406 cv
40.5308 46.6406 40.729 46.543 40.729 46.4219 cv
40.729 46.3008 40.5308 46.2031 40.2852 46.2031 cv
40.04 46.2031 39.8418 46.3008 39.8418 46.4219 cv
cp
level3{
gsave
clp
[-.39464 0 0 .254854 40.2856 46.4209 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.39464 0 0 .254854 40.2856 46.4209 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.8901 46.334 mo
38.9399 46.4834 39.4146 46.54 39.9517 46.459 cv
40.4893 46.3789 40.8853 46.1934 40.8359 46.0439 cv
40.7861 45.8945 40.311 45.8389 39.7739 45.9189 cv
39.2368 45.999 38.8408 46.1846 38.8901 46.334 cv
cp
level3{
gsave
clp
[-.865676 .128838 .104229 .315581 39.8613 46.1875 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.865676 .128838 .104229 .315581 39.8613 46.1875 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.3838 46.6729 mo
36.4722 46.541 36.2119 46.334 35.8052 46.2129 cv
35.3989 46.0918 34.9976 46.1006 34.9102 46.2344 cv
34.8223 46.3662 35.0815 46.5723 35.4888 46.6943 cv
35.8955 46.8164 36.2969 46.8057 36.3838 46.6729 cv
cp
level3{
gsave
clp
[.654997 .195198 .185076 -.280506 35.6475 46.4521 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.654997 .195198 .185076 -.280506 35.6475 46.4521 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.8892 46.1563 mo
36.9414 46.0146 36.6318 45.8418 36.1997 45.7715 cv
35.7681 45.6982 35.376 45.7549 35.3237 45.8965 cv
35.2725 46.0371 35.5801 46.209 36.0137 46.2813 cv
36.4458 46.3535 36.8369 46.2969 36.8892 46.1563 cv
cp
level3{
gsave
clp
[.694402 .115493 .109718 -.297395 36.1079 46.0254 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.694402 .115493 .109718 -.297395 36.1079 46.0254 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.3794 45.9141 mo
36.3013 46.0869 36.5518 46.29 36.9375 46.3682 cv
37.3232 46.4463 37.6987 46.3691 37.7759 46.1963 cv
37.8535 46.0234 37.603 45.8193 37.2168 45.7412 cv
36.8315 45.6641 36.4565 45.7412 36.3794 45.9141 cv
cp
level3{
gsave
clp
[-.621097 -.125664 -.163218 .365436 37.0762 46.0557 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.621097 -.125664 -.163218 .365436 37.0762 46.0557 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.7173 46.251 mo
36.7529 46.4355 37.2319 46.5449 37.7861 46.4961 cv
38.3423 46.4473 38.7622 46.2578 38.7275 46.0742 cv
38.6909 45.8896 38.2114 45.7803 37.6567 45.8291 cv
37.1016 45.8779 36.6812 46.0674 36.7173 46.251 cv
cp
level3{
gsave
clp
[-.892567 .0781177 .0752244 .389142 37.7227 46.1631 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.892567 .0781177 .0752244 .389142 37.7227 46.1631 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
41.4404 46.5469 mo
41.5283 46.4141 41.2686 46.208 40.8618 46.0879 cv
40.4556 45.9658 40.0537 45.9756 39.9658 46.1074 cv
39.8789 46.2412 40.1377 46.4463 40.5454 46.5674 cv
40.9526 46.6895 41.3535 46.6807 41.4404 46.5469 cv
cp
level3{
gsave
clp
[.654573 .195072 .184957 -.280325 40.7036 46.3262 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.654573 .195072 .184957 -.280325 40.7036 46.3262 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.2046 46.1006 mo
38.1274 46.2744 38.377 46.4775 38.7632 46.5557 cv
39.1489 46.6338 39.5239 46.5566 39.6021 46.3828 cv
39.6782 46.21 39.4287 46.0068 39.043 45.9297 cv
38.6572 45.8506 38.2817 45.9277 38.2046 46.1006 cv
cp
level3{
gsave
clp
[-.621026 -.125649 -.1632 .365394 38.9009 46.2432 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.621026 -.125649 -.1632 .365394 38.9009 46.2432 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.8872 46.0801 mo
38.8872 46.2354 39.2251 46.3604 39.6411 46.3604 cv
40.0581 46.3604 40.395 46.2354 40.395 46.0801 cv
40.395 45.9258 40.0581 45.8008 39.6411 45.8008 cv
39.2251 45.8008 38.8872 45.9258 38.8872 46.0801 cv
cp
level3{
gsave
clp
[-.66962 0 0 .326856 39.6411 46.082 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.66962 0 0 .326856 39.6411 46.082 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.9365 46.4336 mo
35.9365 46.5547 36.1348 46.6533 36.3799 46.6533 cv
36.625 46.6533 36.8242 46.5547 36.8242 46.4336 cv
36.8242 46.3135 36.625 46.2148 36.3799 46.2148 cv
36.1348 46.2148 35.9365 46.3135 35.9365 46.4336 cv
cp
level3{
gsave
clp
[-.395162 0 0 .255191 36.3804 46.4326 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.395162 0 0 .255191 36.3804 46.4326 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.4233 46.375 mo
40.4233 46.4961 40.6226 46.5938 40.8677 46.5938 cv
41.1128 46.5938 41.3115 46.4961 41.3115 46.375 cv
41.3115 46.2539 41.1128 46.1563 40.8677 46.1563 cv
40.6226 46.1563 40.4233 46.2539 40.4233 46.375 cv
cp
level3{
gsave
clp
[-.394936 0 0 .255045 40.8677 46.374 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394936 0 0 .255045 40.8677 46.374 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.5571 46.5732 mo
37.2393 45.8672 36.7173 44.8516 35.9526 43.7852 cv
34.521 41.79 33.5571 40.2842 33.5571 40.2842 cv
33.5571 40.2842 34.4956 41.4023 36.2314 43.7559 cv
37.1704 45.0293 37.6631 45.9736 37.9185 46.5732 cv
37.5571 46.5732 li
cp
level3{
gsave
clp
[3.81424 7.52221 6.71082 -3.87493 34.0181 40.0186 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.81424 7.52221 6.71082 -3.87493 34.0181 40.0186 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
38.2764 46.4023 mo
37.9165 46.0137 37.4541 45.5684 36.8809 45.1104 cv
35.1553 43.7266 33.3135 43.374 33.3135 43.374 cv
33.3135 43.374 35.1187 43.4619 37.2114 45.0928 cv
37.8716 45.6074 38.3506 46.0449 38.6963 46.4023 cv
38.2764 46.4023 li
cp
level3{
gsave
clp
[3.03039 6.22849 5.1415 -3.11716 34.8232 42.46 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.03039 6.22849 5.1415 -3.11716 34.8232 42.46 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
40.4922 46.2813 mo
40.4712 46.2168 40.4463 46.1514 40.4165 46.084 cv
40.0059 45.1602 38.521 44.4863 38.521 44.4863 cv
38.521 44.4863 40.2188 45.0742 40.7573 46.1816 cv
40.7729 46.2148 40.7891 46.248 40.8032 46.2813 cv
40.4922 46.2813 li
cp
level3{
gsave
clp
[-.0555978 2.04932 3.1669 1.25068 39.6738 44.9395 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0555978 2.04932 3.1669 1.25068 39.6738 44.9395 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.0864 46.5127 mo
38.1807 46.1299 38.3364 45.6875 38.5898 45.2051 cv
39.438 43.5908 41.3301 42.6865 41.3301 42.6865 cv
41.3301 42.6865 39.2471 43.3838 38.1807 45.3076 cv
37.9185 45.7793 37.7471 46.1777 37.6367 46.5127 cv
38.0864 46.5127 li
cp
level3{
gsave
clp
[-.407812 4.65844 -4.45238 .801079 39.6245 42.9932 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.407812 4.65844 -4.45238 .801079 39.6245 42.9932 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.7437 46.2813 mo
38.5791 46.0742 37.5791 46.0459 37.5791 46.0459 cv
37.5791 46.0459 38.7847 46.0098 40.249 46.2813 cv
39.7437 46.2813 li
cp
level3{
gsave
clp
[2.77914 3.25503 6.5595 -2.52348 38.5088 45.6885 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.77914 3.25503 6.5595 -2.52348 38.5088 45.6885 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.999 46.0801 mo
37.002 45.9297 36.2051 45.9063 36.2051 45.9063 cv
36.2051 45.9063 37.2222 45.876 38.5225 46.0801 cv
37.999 46.0801 li
cp
level3{
gsave
clp
[2.80702 3.28768 6.62531 -2.5488 37.0215 45.5928 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.80702 3.28768 6.62531 -2.5488 37.0215 45.5928 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.415 45.9385 mo
37.1431 45.6309 36.7847 45.2861 36.3135 44.9258 cv
34.6851 43.6787 32.3076 43.2285 32.3076 43.2285 cv
32.3076 43.2285 34.7856 43.4658 36.7856 44.9424 cv
37.3042 45.3271 37.6821 45.6582 37.9565 45.9385 cv
37.415 45.9385 li
cp
level3{
gsave
clp
[1.78665 5.04504 6.2228 -1.43111 34.4756 42.7305 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.78665 5.04504 6.2228 -1.43111 34.4756 42.7305 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
37.2627 45.6406 mo
35.4844 45.4609 33.8887 45.4766 33.8887 45.4766 cv
33.8887 45.4766 35.9258 45.373 38.2344 45.6406 cv
37.2627 45.6406 li
cp
level3{
gsave
clp
[4.20337 3.40102 11.0444 -3.60451 35.3657 44.9951 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.20337 3.40102 11.0444 -3.60451 35.3657 44.9951 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.7515 46.3379 mo
37.5269 46.2686 37.2871 46.1982 37.0308 46.1299 cv
34.2441 45.377 30.7285 45.3438 30.7285 45.3438 cv
30.7285 45.3438 34.2993 45.1982 37.6992 46.0801 cv
38.043 46.1689 38.353 46.2549 38.6323 46.3379 cv
37.7515 46.3379 li
cp
level3{
gsave
clp
[4.57302 4.54255 11.3958 -4.03843 33.2734 44.4424 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.57302 4.54255 11.3958 -4.03843 33.2734 44.4424 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.3506 46.4502 mo
38.6055 46.2168 38.9175 45.9727 39.2969 45.7314 cv
41.1504 44.5498 44.0298 44.4658 44.0298 44.4658 cv
44.0298 44.4658 40.9985 44.2773 38.7163 45.6611 cv
38.2441 45.9482 37.8794 46.2119 37.5962 46.4502 cv
38.3506 46.4502 li
cp
level3{
gsave
clp
[-2.41326 6.57234 -9.70911 -5.53776 41.6709 43.1211 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.41326 6.57234 -9.70911 -5.53776 41.6709 43.1211 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.3472 46.2646 mo
39.48 46.1816 39.6313 46.0928 39.7993 46.002 cv
40.731 45.4961 41.7163 45.293 41.7163 45.293 cv
41.7163 45.293 40.752 45.4131 39.623 46.0137 cv
39.4517 46.1045 39.3032 46.1885 39.1729 46.2646 cv
39.3472 46.2646 li
cp
level3{
gsave
clp
[-1.41403 1.9398 -2.35993 -.388179 40.896 45.1582 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.41403 1.9398 -2.35993 -.388179 40.896 45.1582 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.937 46.085 mo
38.688 45.959 38.3931 45.8252 38.0464 45.6914 cv
36.48 45.083 34.5967 44.9893 34.5967 44.9893 cv
34.5967 44.9893 36.4912 44.9531 38.3989 45.668 cv
38.8076 45.8213 39.1353 45.96 39.396 46.085 cv
38.937 46.085 li
cp
level3{
gsave
clp
[2.48573 3.32618 5.55139 -2.31428 36.1143 44.3564 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.48573 3.32618 5.55139 -2.31428 36.1143 44.3564 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.9067 46.4248 mo
40.0391 46.2148 40.229 45.9775 40.5029 45.7354 cv
41.373 44.9629 42.856 44.7773 42.856 44.7773 cv
42.856 44.7773 41.2729 44.8115 40.1987 45.7217 cv
39.875 45.9951 39.6646 46.2295 39.5293 46.4248 cv
39.9067 46.4248 li
cp
level3{
gsave
clp
[-.671651 4.96596 -3.3766 -2.63908 41.4526 43.6807 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.671651 4.96596 -3.3766 -2.63908 41.4526 43.6807 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
38.2402 46.2813 mo
38.1548 46.2305 38.0654 46.1807 37.9717 46.1299 cv
36.5752 45.374 34.8667 45.1846 34.8667 45.1846 cv
34.8667 45.1846 36.5908 45.2275 38.2925 46.1201 cv
38.3984 46.1748 38.4976 46.2285 38.5913 46.2813 cv
38.2402 46.2813 li
cp
level3{
gsave
clp
[2.04623 3.7413 4.76088 -1.90668 36.1484 44.6709 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.04623 3.7413 4.76088 -1.90668 36.1484 44.6709 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.2246 46.2813 mo
39.2539 46.166 39.2993 46.0469 39.3638 45.9229 cv
39.8208 45.0332 41.4502 44.5898 41.4502 44.5898 cv
41.4502 44.5898 39.5884 44.9092 38.9893 45.9648 cv
38.9258 46.0771 38.875 46.1826 38.8354 46.2813 cv
39.2246 46.2813 li
cp
level3{
gsave
clp
[.069073 2.82878 -4.57017 .0750667 40.123 44.6123 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.069073 2.82878 -4.57017 .0750667 40.123 44.6123 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.6938 46.4355 mo
37.8711 46.292 38.0723 46.1445 38.3013 45.9941 cv
40.0703 44.834 42.9912 44.4736 42.9912 44.4736 cv
42.9912 44.4736 39.8901 44.624 37.7036 45.9951 cv
37.4556 46.1514 37.2402 46.2979 37.0518 46.4355 cv
37.6938 46.4355 li
cp
level3{
gsave
clp
[-1.81461 4.9827 -8.43699 -1.93494 40.5801 43.9209 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.81461 4.9827 -8.43699 -1.93494 40.5801 43.9209 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
36.71 46.3428 mo
36.7749 46.1992 36.8672 46.0449 36.9941 45.8818 cv
37.6616 45.0205 39.332 44.5186 39.332 44.5186 cv
39.332 44.5186 37.4736 44.9121 36.625 45.9414 cv
36.5049 46.0879 36.4102 46.2217 36.3359 46.3428 cv
36.71 46.3428 li
cp
level3{
gsave
clp
[-.231186 2.41176 -3.95361 .538607 37.9023 44.7129 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.231186 2.41176 -3.95361 .538607 37.9023 44.7129 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
38.8354 46.458 mo
39.1528 46.1045 39.6748 45.5947 40.4385 45.0625 cv
41.8706 44.0625 43.4219 43.8154 43.4219 43.8154 cv
43.4219 43.8154 41.8965 43.8682 40.1602 45.0469 cv
39.2222 45.6846 38.728 46.1582 38.4731 46.458 cv
38.8354 46.458 li
cp
level3{
gsave
clp
[-2.38194 4.69751 -4.19081 -2.41983 42.0259 43.0098 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.38194 4.69751 -4.19081 -2.41983 42.0259 43.0098 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
38.4575 46.5752 mo
38.6025 46.3066 38.7949 46.0039 39.0459 45.6875 cv
39.916 44.5938 41.187 44.1992 41.187 44.1992 cv
41.187 44.1992 39.8613 44.4072 38.7939 45.7021 cv
38.5161 46.04 38.3149 46.3301 38.1685 46.5752 cv
38.4575 46.5752 li
cp
level3{
gsave
clp
[-1.36822 3.8635 -4.76544 -1.09595 40.1802 43.9678 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.36822 3.8635 -4.76544 -1.09595 40.1802 43.9678 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
40.0825 46.3613 mo
40.0166 46.2188 39.9248 46.0635 39.7988 45.9004 cv
39.1309 45.0391 37.4604 44.5371 37.4604 44.5371 cv
37.4604 44.5371 39.3188 44.9316 40.167 45.96 cv
40.2881 46.1074 40.3818 46.2402 40.4561 46.3613 cv
40.0825 46.3613 li
cp
level3{
gsave
clp
[.231183 2.41173 3.95356 .5386 38.8892 44.7314 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.231183 2.41173 3.95356 .5386 38.8892 44.7314 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
37.813 46.5938 mo
37.8716 46.3145 37.9937 45.9668 38.2349 45.5781 cv
38.8657 44.5605 40.2729 43.9902 40.2729 43.9902 cv
40.2729 43.9902 38.7236 44.4297 37.9307 45.6426 cv
37.6729 46.0371 37.5322 46.3506 37.4595 46.5938 cv
37.813 46.5938 li
cp
level3{
gsave
clp
[-2.81348 0 0 2.81348 40.2734 45.292 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.81348 0 0 2.81348 40.2734 45.292 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
36.8574 46.5322 mo
36.6392 46.418 36.3921 46.2988 36.1108 46.1777 cv
34.1792 45.3418 31.3711 45.0361 31.3711 45.0361 cv
31.3711 45.0361 34.2954 45.2012 36.6665 46.1904 cv
36.9595 46.3125 37.2129 46.4268 37.4346 46.5322 cv
36.8574 46.5322 li
cp
level3{
gsave
clp
[2.13743 3.38951 7.35579 -.930306 33.7417 44.7363 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.13743 3.38951 7.35579 -.930306 33.7417 44.7363 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
36.2324 46.6006 mo
36.1084 46.1504 35.9272 45.6074 35.665 45.0332 cv
34.9697 43.5049 33.9604 42.9609 33.9604 42.9609 cv
33.9604 42.9609 35.0107 43.2422 35.8647 45.0527 cv
36.1626 45.6836 36.3511 46.1982 36.4712 46.6006 cv
36.2324 46.6006 li
cp
level3{
gsave
clp
[.772398 6.20523 2.63593 -1.82408 34.9067 42.3057 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.772398 6.20523 2.63593 -1.82408 34.9067 42.3057 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
39.9463 47.1699 mo
39.9463 47.291 40.145 47.3887 40.3901 47.3887 cv
40.6353 47.3887 40.8345 47.291 40.8345 47.1699 cv
40.8345 47.0488 40.6353 46.9512 40.3901 46.9512 cv
40.145 46.9512 39.9463 47.0488 39.9463 47.1699 cv
cp
level3{
gsave
clp
[-.394903 0 0 .255024 40.3906 47.1689 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394903 0 0 .255024 40.3906 47.1689 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.1118 47.5215 mo
39.1118 47.6426 39.3105 47.7402 39.5557 47.7402 cv
39.8008 47.7402 40 47.6426 40 47.5215 cv
40 47.4014 39.8008 47.3027 39.5557 47.3027 cv
39.3105 47.3027 39.1118 47.4014 39.1118 47.5215 cv
cp
level3{
gsave
clp
[-.394918 0 0 .255034 39.5562 47.5205 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394918 0 0 .255034 39.5562 47.5205 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.2964 46.4141 mo
39.2964 46.5352 39.4961 46.6338 39.7402 46.6338 cv
39.9863 46.6338 40.1846 46.5352 40.1846 46.4141 cv
40.1846 46.2939 39.9863 46.1953 39.7402 46.1953 cv
39.4961 46.1953 39.2964 46.2939 39.2964 46.4141 cv
cp
level3{
gsave
clp
[-.395246 0 0 .255245 39.7407 46.4131 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.395246 0 0 .255245 39.7407 46.4131 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.9067 47.0371 mo
38.9067 47.1582 39.1055 47.2559 39.3506 47.2559 cv
39.5957 47.2559 39.7949 47.1582 39.7949 47.0371 cv
39.7949 46.917 39.5957 46.8184 39.3506 46.8184 cv
39.1055 46.8184 38.9067 46.917 38.9067 47.0371 cv
cp
level3{
gsave
clp
[-.394911 0 0 .255029 39.3511 47.0361 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394911 0 0 .255029 39.3511 47.0361 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.9097 47.0371 mo
37.9097 47.1582 38.1079 47.2559 38.353 47.2559 cv
38.5981 47.2559 38.7969 47.1582 38.7969 47.0371 cv
38.7969 46.917 38.5981 46.8184 38.353 46.8184 cv
38.1079 46.8184 37.9097 46.917 37.9097 47.0371 cv
cp
level3{
gsave
clp
[-.394595 0 0 .254825 38.3535 47.0361 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394595 0 0 .254825 38.3535 47.0361 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.4839 47.2832 mo
37.4839 47.4043 37.6821 47.5029 37.9272 47.5029 cv
38.1724 47.5029 38.3711 47.4043 38.3711 47.2832 cv
38.3711 47.1631 38.1724 47.0645 37.9272 47.0645 cv
37.6821 47.0645 37.4839 47.1631 37.4839 47.2832 cv
cp
level3{
gsave
clp
[-.394984 0 0 .255076 37.9277 47.2822 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394984 0 0 .255076 37.9277 47.2822 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.1348 46.6729 mo
37.2222 46.541 36.9624 46.334 36.5562 46.2129 cv
36.1489 46.0918 35.7476 46.1006 35.6597 46.2344 cv
35.5728 46.3662 35.8315 46.5723 36.2397 46.6943 cv
36.646 46.8164 37.0474 46.8057 37.1348 46.6729 cv
cp
level3{
gsave
clp
[.655339 .1953 .185173 -.280653 36.3979 46.4521 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.655339 .1953 .185173 -.280653 36.3979 46.4521 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.4019 46.7158 mo
37.4019 46.8613 37.7007 46.9785 38.0708 46.9785 cv
38.4399 46.9785 38.7397 46.8613 38.7397 46.7158 cv
38.7397 46.5713 38.4399 46.4531 38.0708 46.4531 cv
37.7007 46.4531 37.4019 46.5713 37.4019 46.7158 cv
cp
level3{
gsave
clp
[-.594529 0 0 .306667 38.0708 46.7158 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.594529 0 0 .306667 38.0708 46.7158 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.0889 46.9912 mo
37.2007 46.9668 37.2476 46.7813 37.1919 46.5752 cv
37.1357 46.3691 36.9985 46.2227 36.8853 46.2461 cv
36.7734 46.2715 36.7271 46.457 36.7837 46.6631 cv
36.8398 46.8682 36.9761 47.0156 37.0889 46.9912 cv
cp
level3{
gsave
clp
[.0898448 .331846 .237654 -.0507188 36.9863 46.6201 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0898448 .331846 .237654 -.0507188 36.9863 46.6201 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
35.5205 46.9512 mo
35.4673 47.1084 35.708 47.3115 36.0576 47.4053 cv
36.4087 47.498 36.7354 47.4463 36.7891 47.2891 cv
36.8423 47.1318 36.6011 46.9297 36.2505 46.8359 cv
35.9009 46.7422 35.5732 46.7949 35.5205 46.9512 cv
cp
level3{
gsave
clp
[-.563741 -.150717 -.113038 .331868 36.1548 47.1211 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.563741 -.150717 -.113038 .331868 36.1548 47.1211 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.3125 46.6406 mo
37.3311 46.7402 37.605 46.7852 37.9248 46.7402 cv
38.2446 46.6953 38.4907 46.5781 38.4727 46.4785 cv
38.4551 46.3789 38.1807 46.333 37.8604 46.3779 cv
37.5405 46.4229 37.2944 46.541 37.3125 46.6406 cv
cp
level3{
gsave
clp
[-.515565 .0724109 .0376537 .21144 37.8901 46.5605 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.515565 .0724109 .0376537 .21144 37.8901 46.5605 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.0366 46.7334 mo
39.0293 46.8789 39.3223 47.0078 39.6919 47.0225 cv
40.0605 47.0371 40.3662 46.9307 40.373 46.7861 cv
40.3804 46.6416 40.0869 46.5127 39.7178 46.498 cv
39.3491 46.4834 39.0435 46.5889 39.0366 46.7334 cv
cp
level3{
gsave
clp
[-.594417 -.0231403 -.015909 .306609 39.7046 46.7607 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.594417 -.0231403 -.015909 .306609 39.7046 46.7607 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.1426 46.5264 mo
37.103 46.6377 37.3379 46.8018 37.667 46.8936 cv
37.9966 46.9844 38.2944 46.9678 38.3335 46.8564 cv
38.3726 46.7451 38.1382 46.5811 37.8091 46.4902 cv
37.4805 46.3994 37.1812 46.415 37.1426 46.5264 cv
cp
level3{
gsave
clp
[-.530311 -.146343 -.0825894 .234728 37.7363 46.6914 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.530311 -.146343 -.0825894 .234728 37.7363 46.6914 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.1987 46.7188 mo
38.1924 46.8438 38.4385 46.9541 38.748 46.9668 cv
39.0581 46.9795 39.314 46.8887 39.3208 46.7627 cv
39.3257 46.6387 39.0806 46.5273 38.7705 46.5156 cv
38.4609 46.5039 38.2046 46.5947 38.1987 46.7188 cv
cp
level3{
gsave
clp
[-.49934 -.0202631 -.0130263 .26342 38.7598 46.7422 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.49934 -.0202631 -.0130263 .26342 38.7598 46.7422 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.6538 46.6953 mo
38.6538 46.8135 38.8638 46.9102 39.123 46.9102 cv
39.3809 46.9102 39.5913 46.8135 39.5913 46.6953 cv
39.5913 46.5752 39.3809 46.4795 39.123 46.4795 cv
38.8638 46.4795 38.6538 46.5752 38.6538 46.6953 cv
cp
level3{
gsave
clp
[-.417127 0 0 .250566 39.1226 46.6934 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.417127 0 0 .250566 39.1226 46.6934 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.1133 46.7266 mo
40.1133 46.8457 40.3237 46.9424 40.5815 46.9424 cv
40.8403 46.9424 41.0498 46.8457 41.0498 46.7266 cv
41.0498 46.6074 40.8403 46.5117 40.5815 46.5117 cv
40.3237 46.5117 40.1133 46.6074 40.1133 46.7266 cv
cp
level3{
gsave
clp
[-.416862 0 0 .250407 40.5815 46.7256 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.416862 0 0 .250407 40.5815 46.7256 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.6519 46.8623 mo
39.6973 46.9541 39.9751 46.9385 40.2729 46.8252 cv
40.5703 46.7119 40.7754 46.5439 40.731 46.4512 cv
40.6855 46.3584 40.4077 46.375 40.1099 46.4873 cv
39.8115 46.6016 39.6074 46.7686 39.6519 46.8623 cv
cp
level3{
gsave
clp
[-.481686 .182809 .0957569 .195866 40.1895 46.6572 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.481686 .182809 .0957569 .195866 40.1895 46.6572 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.8735 46.4814 mo
39.9189 46.5742 40.1968 46.5576 40.4946 46.4443 cv
40.793 46.3311 40.9971 46.1641 40.9526 46.0703 cv
40.9067 45.9775 40.6294 45.9941 40.332 46.1074 cv
40.0342 46.2217 39.8281 46.3887 39.8735 46.4814 cv
cp
level3{
gsave
clp
[-.481141 .182602 .0956485 .195645 40.4116 46.2764 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.481141 .182602 .0956485 .195645 40.4116 46.2764 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.2783 46.8779 mo
36.271 47.0234 36.5645 47.1523 36.9336 47.167 cv
37.3027 47.1816 37.6079 47.0762 37.6147 46.9307 cv
37.623 46.7861 37.3296 46.6572 36.9595 46.6416 cv
36.5908 46.6279 36.2861 46.7334 36.2783 46.8779 cv
cp
level3{
gsave
clp
[-.594837 -.0231567 -.0159202 .306826 36.9468 46.9043 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.594837 -.0231567 -.0159202 .306826 36.9468 46.9043 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.2261 46.4492 mo
40.186 46.5605 40.4214 46.7246 40.7495 46.8164 cv
41.0796 46.9063 41.3774 46.8906 41.417 46.7793 cv
41.4561 46.668 41.2212 46.5039 40.8921 46.4131 cv
40.5635 46.3223 40.2642 46.3389 40.2261 46.4492 cv
cp
level3{
gsave
clp
[-.530409 -.14637 -.0826046 .234771 40.8198 46.6143 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.530409 -.14637 -.0826046 .234771 40.8198 46.6143 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.0103 47.1152 mo
40.0522 47.1533 40.1582 47.125 40.248 47.0508 cv
40.3379 46.9756 40.3765 46.8828 40.335 46.8438 cv
40.2935 46.8057 40.1875 46.834 40.0977 46.9082 cv
40.0088 46.9834 39.9688 47.0752 40.0103 47.1152 cv
cp
level3{
gsave
clp
[-.144889 .120258 .0883823 .0825867 40.1694 46.9814 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.144889 .120258 .0883823 .0825867 40.1694 46.9814 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
38.3584 46.79 mo
38.3516 46.915 38.5972 47.0254 38.9067 47.0371 cv
39.2163 47.0498 39.4727 46.959 39.4785 46.834 cv
39.4854 46.709 39.2388 46.5986 38.9292 46.5869 cv
38.6201 46.5742 38.3638 46.665 38.3584 46.79 cv
cp
level3{
gsave
clp
[-.49838 -.0202241 -.0130012 .262914 38.9185 46.8135 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.49838 -.0202241 -.0130012 .262914 38.9185 46.8135 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.9941 46.668 mo
37.9941 46.7871 38.2041 46.8838 38.4624 46.8838 cv
38.7207 46.8838 38.9312 46.7871 38.9312 46.668 cv
38.9312 46.5498 38.7207 46.4531 38.4624 46.4531 cv
38.2041 46.4531 37.9941 46.5498 37.9941 46.668 cv
cp
level3{
gsave
clp
[-.417006 0 0 .250493 38.4624 46.667 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.417006 0 0 .250493 38.4624 46.667 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.2808 47.0342 mo
40.2979 47.1338 40.5718 47.1787 40.8926 47.1338 cv
41.2134 47.0889 41.4575 46.9717 41.4404 46.8721 cv
41.4224 46.7725 41.1489 46.7275 40.8276 46.7715 cv
40.5073 46.8164 40.2622 46.9336 40.2808 47.0342 cv
cp
level3{
gsave
clp
[-.515429 .0723918 .0376437 .211384 40.8579 46.9541 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.515429 .0723918 .0376437 .211384 40.8579 46.9541 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
36.356 47.7441 mo
36.356 47.8643 36.5537 47.9629 36.7998 47.9629 cv
37.0449 47.9629 37.2432 47.8643 37.2432 47.7441 cv
37.2432 47.623 37.0449 47.5244 36.7998 47.5244 cv
36.5537 47.5244 36.356 47.623 36.356 47.7441 cv
cp
level3{
gsave
clp
[-.394972 0 0 .255069 36.7998 47.7422 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394972 0 0 .255069 36.7998 47.7422 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
37.4536 46.7637 mo
37.4536 46.8848 37.6519 46.9824 37.897 46.9824 cv
38.1421 46.9824 38.3408 46.8848 38.3408 46.7637 cv
38.3408 46.6426 38.1421 46.5449 37.897 46.5449 cv
37.6519 46.5449 37.4536 46.6426 37.4536 46.7637 cv
cp
level3{
gsave
clp
[-.394661 0 0 .254867 37.8975 46.7627 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394661 0 0 .254867 37.8975 46.7627 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.7178 46.6543 mo
45.7178 46.7656 45.8403 46.8555 45.9907 46.8555 cv
46.1421 46.8555 46.2646 46.7656 46.2646 46.6543 cv
46.2646 46.5439 46.1421 46.4551 45.9907 46.4551 cv
45.8403 46.4551 45.7178 46.5439 45.7178 46.6543 cv
cp
level3{
gsave
clp
[-.243371 0 0 .23316 45.9912 46.6543 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243371 0 0 .23316 45.9912 46.6543 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.1313 46.5742 mo
45.1616 46.7119 45.4546 46.7617 45.7856 46.6885 cv
46.1172 46.6162 46.3608 46.4463 46.3306 46.3086 cv
46.2993 46.1729 46.0073 46.1211 45.6763 46.1953 cv
45.3447 46.2686 45.1006 46.4385 45.1313 46.5742 cv
cp
level3{
gsave
clp
[-.533215 .118492 .0635812 .28756 45.7324 46.4434 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.533215 .118492 .0635812 .28756 45.7324 46.4434 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.5859 46.8848 mo
43.6401 46.7637 43.48 46.5742 43.2295 46.4639 cv
42.9785 46.3525 42.7319 46.3623 42.6772 46.4834 cv
42.6235 46.6045 42.7832 46.793 43.0342 46.9033 cv
43.2856 47.0146 43.5322 47.0068 43.5859 46.8848 cv
cp
level3{
gsave
clp
[.403797 .179465 .114337 -.256172 43.1309 46.6826 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.403797 .179465 .114337 -.256172 43.1309 46.6826 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.897 46.4121 mo
43.9302 46.2822 43.7393 46.125 43.4722 46.0605 cv
43.207 45.9932 42.9648 46.0449 42.9321 46.1748 cv
42.9004 46.3027 43.0913 46.46 43.3574 46.5264 cv
43.6245 46.5918 43.8657 46.541 43.897 46.4121 cv
cp
level3{
gsave
clp
[.429246 .105505 .0679278 -.271711 43.4131 46.2939 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.429246 .105505 .0679278 -.271711 43.4131 46.2939 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.583 46.1904 mo
43.5352 46.3496 43.6895 46.5352 43.9277 46.6064 cv
44.1655 46.6777 44.397 46.6074 44.4438 46.4492 cv
44.4912 46.29 44.3379 46.1045 44.0996 46.0332 cv
43.8618 45.9619 43.6304 46.0322 43.583 46.1904 cv
cp
level3{
gsave
clp
[-.383676 -.114379 -.101348 .334449 44.0137 46.3193 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.383676 -.114379 -.101348 .334449 44.0137 46.3193 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.7915 46.499 mo
43.8135 46.668 44.1089 46.7676 44.4507 46.7227 cv
44.7935 46.6787 45.0527 46.5049 45.0308 46.3369 cv
45.0083 46.168 44.7124 46.0674 44.3706 46.1123 cv
44.0283 46.1582 43.769 46.3301 43.7915 46.499 cv
cp
level3{
gsave
clp
[-.551061 .0723178 .0462834 .355803 44.4111 46.417 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.551061 .0723178 .0462834 .355803 44.4111 46.417 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.7036 46.7695 mo
46.7573 46.6484 46.5977 46.46 46.3462 46.3496 cv
46.0962 46.2383 45.8481 46.2471 45.7944 46.3682 cv
45.7407 46.4902 45.8999 46.6787 46.1514 46.7891 cv
46.4023 46.9004 46.6499 46.8916 46.7036 46.7695 cv
cp
level3{
gsave
clp
[.403856 .179491 .114353 -.256209 46.248 46.5684 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.403856 .179491 .114353 -.256209 46.248 46.5684 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.7085 46.3623 mo
44.6606 46.5205 44.8154 46.7061 45.0527 46.7773 cv
45.291 46.8486 45.522 46.7783 45.5703 46.6201 cv
45.6172 46.4619 45.4629 46.2754 45.2251 46.2051 cv
44.9878 46.1328 44.7563 46.2031 44.7085 46.3623 cv
cp
level3{
gsave
clp
[-.383669 -.114377 -.101347 .334444 45.1396 46.4912 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.383669 -.114377 -.101347 .334444 45.1396 46.4912 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.1294 46.3428 mo
45.1294 46.4844 45.3374 46.5986 45.5938 46.5986 cv
45.8511 46.5986 46.0591 46.4844 46.0591 46.3428 cv
46.0591 46.2012 45.8511 46.0869 45.5938 46.0869 cv
45.3374 46.0869 45.1294 46.2012 45.1294 46.3428 cv
cp
level3{
gsave
clp
[-.413691 0 0 .297973 45.5942 46.3418 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.413691 0 0 .297973 45.5942 46.3418 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.3105 46.666 mo
43.3105 46.7764 43.4321 46.8662 43.5835 46.8662 cv
43.7349 46.8662 43.8574 46.7764 43.8574 46.666 cv
43.8574 46.5557 43.7349 46.4668 43.5835 46.4668 cv
43.4321 46.4668 43.3105 46.5557 43.3105 46.666 cv
cp
level3{
gsave
clp
[-.243115 0 0 .232915 43.584 46.665 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243115 0 0 .232915 43.584 46.665 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.0762 46.6113 mo
46.0762 46.7227 46.1987 46.8125 46.3501 46.8125 cv
46.501 46.8125 46.624 46.7227 46.624 46.6113 cv
46.624 46.501 46.501 46.4121 46.3501 46.4121 cv
46.1987 46.4121 46.0762 46.501 46.0762 46.6113 cv
cp
level3{
gsave
clp
[-.243597 0 0 .233376 46.3501 46.6113 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243597 0 0 .233376 46.3501 46.6113 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.3091 46.793 mo
44.1133 46.1475 43.7915 45.2178 43.3203 44.2441 cv
42.438 42.4199 41.4819 41.9688 41.4819 41.9688 cv
41.4819 41.9688 42.4224 42.0654 43.4922 44.2168 cv
44.0708 45.3818 44.375 46.2451 44.5322 46.793 cv
44.3091 46.793 li
cp
level3{
gsave
clp
[2.85203 5.62458 5.01788 -2.8974 41.8188 41.7744 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.85203 5.62458 5.01788 -2.8974 41.8188 41.7744 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
44.7534 46.6367 mo
44.5308 46.2822 44.2461 45.875 43.8921 45.4551 cv
42.8286 44.1904 41.6938 43.8682 41.6938 43.8682 cv
41.6938 43.8682 42.8057 43.9482 44.0967 45.4395 cv
44.5034 45.9102 44.7983 46.3105 45.0117 46.6367 cv
44.7534 46.6367 li
cp
level3{
gsave
clp
[2.30231 4.73203 3.9062 -2.36823 42.4551 43.4072 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.30231 4.73203 3.9062 -2.36823 42.4551 43.4072 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
46.1187 46.5264 mo
46.106 46.4678 46.0908 46.4082 46.0718 46.3457 cv
45.8193 45.502 44.9038 44.8848 44.9038 44.8848 cv
44.9038 44.8848 45.9502 45.4229 46.2822 46.4365 cv
46.292 46.4668 46.3013 46.4971 46.3101 46.5264 cv
46.1187 46.5264 li
cp
level3{
gsave
clp
[-.0634302 2.33802 3.61304 1.42687 45.6216 45.168 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0634302 2.33802 3.61304 1.42687 45.6216 45.168 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.6357 46.7383 mo
44.6943 46.3887 44.7896 45.9834 44.9463 45.543 cv
45.4688 44.0664 46.6348 43.2393 46.6348 43.2393 cv
46.6348 43.2393 45.3511 43.877 44.6934 45.6357 cv
44.5322 46.0674 44.4263 46.4326 44.3584 46.7383 cv
44.6357 46.7383 li
cp
level3{
gsave
clp
[-.394835 4.5102 -4.3107 .775587 45.6343 43.4189 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.394835 4.5102 -4.3107 .775587 45.6343 43.4189 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
45.6572 46.5264 mo
44.9395 46.3379 44.3228 46.3115 44.3228 46.3115 cv
44.3228 46.3115 45.0664 46.2783 45.9688 46.5264 cv
45.6572 46.5264 li
cp
level3{
gsave
clp
[1.86687 2.18654 4.40629 -1.69513 44.873 46.0996 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86687 2.18654 4.40629 -1.69513 44.873 46.0996 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.582 46.3428 mo
43.9673 46.2051 43.4761 46.1836 43.4761 46.1836 cv
43.4761 46.1836 44.1025 46.1553 44.9038 46.3428 cv
44.582 46.3428 li
cp
level3{
gsave
clp
[1.86661 2.18624 4.40569 -1.6949 43.9624 45.9971 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86661 2.18624 4.40569 -1.6949 43.9624 45.9971 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.2222 46.2119 mo
44.0542 45.9316 43.8335 45.6172 43.543 45.2871 cv
42.5396 44.1465 41.0732 43.7344 41.0732 43.7344 cv
41.0732 43.7344 42.6011 43.9521 43.8335 45.3018 cv
44.1538 45.6543 44.3862 45.957 44.5557 46.2119 cv
44.2222 46.2119 li
cp
level3{
gsave
clp
[1.46103 4.12556 5.08868 -1.17028 42.2778 43.458 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.46103 4.12556 5.08868 -1.17028 42.2778 43.458 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
44.1284 45.9404 mo
43.0313 45.7764 42.0479 45.79 42.0479 45.79 cv
42.0479 45.79 43.3037 45.6963 44.7266 45.9404 cv
44.1284 45.9404 li
cp
level3{
gsave
clp
[2.72184 2.20229 7.15165 -2.33405 42.9375 45.501 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.72184 2.20229 7.15165 -2.33405 42.9375 45.501 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.4292 46.5771 mo
44.291 46.5146 44.1426 46.4512 43.9844 46.3877 cv
42.2671 45.7002 40.0996 45.6689 40.0996 45.6689 cv
40.0996 45.6689 42.3013 45.5371 44.397 46.3428 cv
44.6089 46.4238 44.8003 46.5029 44.9717 46.5771 cv
44.4292 46.5771 li
cp
level3{
gsave
clp
[3.17486 3.1537 7.91165 -2.80372 41.5581 45.1523 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.17486 3.1537 7.91165 -2.80372 41.5581 45.1523 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.7983 46.6807 mo
44.9551 46.4668 45.1475 46.2451 45.3818 46.0234 cv
46.5244 44.9434 48.2998 44.8662 48.2998 44.8662 cv
48.2998 44.8662 46.4312 44.6934 45.0239 45.96 cv
44.7329 46.2217 44.5083 46.4629 44.3335 46.6807 cv
44.7983 46.6807 li
cp
level3{
gsave
clp
[-1.74007 4.73897 -7.00073 -3.99299 46.9346 44.0879 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.74007 4.73897 -7.00073 -3.99299 46.9346 44.0879 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
45.4131 46.5107 mo
45.4956 46.4355 45.5874 46.3545 45.6914 46.2715 cv
46.2661 45.8086 46.8735 45.623 46.8735 45.623 cv
46.8735 45.623 46.2783 45.7324 45.583 46.2822 cv
45.4771 46.3652 45.3857 46.4414 45.3062 46.5107 cv
45.4131 46.5107 li
cp
level3{
gsave
clp
[-1.16533 1.59863 -1.94487 -.319907 46.4614 45.5557 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.16533 1.59863 -1.94487 -.319907 46.4614 45.5557 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
45.1602 46.3467 mo
45.0068 46.2314 44.8242 46.1094 44.6108 45.9863 cv
43.6455 45.4307 42.4844 45.3457 42.4844 45.3457 cv
42.4844 45.3457 43.6523 45.3115 44.8281 45.9658 cv
45.0801 46.1055 45.2822 46.2334 45.4434 46.3467 cv
45.1602 46.3467 li
cp
level3{
gsave
clp
[1.79381 2.40031 4.00612 -1.67008 43.3271 44.9941 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.79381 2.40031 4.00612 -1.67008 43.3271 44.9941 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
45.7578 46.6572 mo
45.8394 46.4658 45.9561 46.249 46.1255 46.0273 cv
46.6621 45.3203 47.5757 45.1514 47.5757 45.1514 cv
47.5757 45.1514 46.6006 45.1816 45.938 46.0146 cv
45.7383 46.2656 45.6089 46.4795 45.5254 46.6572 cv
45.7578 46.6572 li
cp
level3{
gsave
clp
[-.491511 3.63407 -2.47098 -1.93127 46.7407 44.499 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.491511 3.63407 -2.47098 -1.93127 46.7407 44.499 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
44.7305 46.5264 mo
44.6777 46.4805 44.6226 46.4336 44.5649 46.3877 cv
43.7041 45.6973 42.6509 45.5234 42.6509 45.5234 cv
42.6509 45.5234 43.7139 45.5635 44.7622 46.3789 cv
44.8281 46.4297 44.8892 46.4785 44.9468 46.5264 cv
44.7305 46.5264 li
cp
level3{
gsave
clp
[1.51977 2.77873 3.53599 -1.41612 43.3677 45.2363 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.51977 2.77873 3.53599 -1.41612 43.3677 45.2363 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
45.3374 46.5264 mo
45.3555 46.4209 45.3833 46.3125 45.4233 46.1982 cv
45.7051 45.3857 46.709 44.9795 46.709 44.9795 cv
46.709 44.9795 45.561 45.2715 45.1919 46.2373 cv
45.1528 46.3398 45.1226 46.4365 45.0972 46.5264 cv
45.3374 46.5264 li
cp
level3{
gsave
clp
[.0636246 2.60565 -4.20968 .0691455 45.8848 44.9932 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0636246 2.60565 -4.20968 .0691455 45.8848 44.9932 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.394 46.668 mo
44.5029 46.5361 44.6274 46.4014 44.7686 46.2646 cv
45.8584 45.2031 47.6592 44.874 47.6592 44.874 cv
47.6592 44.874 45.7471 45.0107 44.3999 46.2646 cv
44.2471 46.4072 44.1138 46.541 43.998 46.668 cv
44.394 46.668 li
cp
level3{
gsave
clp
[-1.43768 3.94769 -6.68445 -1.53302 46.2705 44.5557 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.43768 3.94769 -6.68445 -1.53302 46.2705 44.5557 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
43.7871 46.583 mo
43.8271 46.4521 43.8838 46.3105 43.9619 46.1611 cv
44.3735 45.373 45.4038 44.915 45.4038 44.915 cv
45.4038 44.915 44.2578 45.2744 43.7349 46.2158 cv
43.6606 46.3496 43.6025 46.4717 43.5571 46.583 cv
43.7871 46.583 li
cp
level3{
gsave
clp
[-.228146 2.38004 -3.90161 .531523 44.5488 45.0313 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.228146 2.38004 -3.90161 .531523 44.5488 45.0313 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
45.0972 46.6885 mo
45.2935 46.3652 45.6147 45.8994 46.0864 45.4121 cv
46.9683 44.498 47.9243 44.2725 47.9243 44.2725 cv
47.9243 44.2725 46.9844 44.3203 45.9136 45.3984 cv
45.3359 45.9805 45.0317 46.4131 44.874 46.6885 cv
45.0972 46.6885 li
cp
level3{
gsave
clp
[-1.8091 3.56779 -3.18295 -1.83788 47.2183 43.8643 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.8091 3.56779 -3.18295 -1.83788 47.2183 43.8643 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.8643 46.7959 mo
44.9536 46.5498 45.0723 46.2734 45.2275 45.9834 cv
45.7632 44.9834 46.5469 44.6221 46.5469 44.6221 cv
46.5469 44.6221 45.73 44.8125 45.0723 45.9971 cv
44.9009 46.3057 44.7769 46.5713 44.686 46.7959 cv
44.8643 46.7959 li
cp
level3{
gsave
clp
[-1.15949 3.27409 -4.03843 -.928751 46.0425 44.5059 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.15949 3.27409 -4.03843 -.928751 46.0425 44.5059 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
45.8662 46.5996 mo
45.8262 46.4688 45.769 46.3271 45.6914 46.1777 cv
45.2798 45.3896 44.2495 44.9316 44.2495 44.9316 cv
44.2495 44.9316 45.3955 45.291 45.9185 46.2324 cv
45.9932 46.3672 46.0508 46.4893 46.0967 46.5996 cv
45.8662 46.5996 li
cp
level3{
gsave
clp
[.228146 2.38004 3.90161 .531523 45.104 45.0479 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.228146 2.38004 3.90161 .531523 45.104 45.0479 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.4673 46.8125 mo
44.5034 46.5566 44.5786 46.2383 44.7275 45.8838 cv
45.1162 44.9531 45.9834 44.4316 45.9834 44.4316 cv
45.9834 44.4316 45.0288 44.834 44.54 45.9434 cv
44.3809 46.3027 44.2939 46.5898 44.2495 46.8125 cv
44.4673 46.8125 li
cp
level3{
gsave
clp
[-1.73438 0 0 1.73438 45.9844 45.6221 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.73438 0 0 1.73438 45.9844 45.6221 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.8779 46.7559 mo
43.7441 46.6514 43.5913 46.543 43.418 46.4326 cv
42.2271 45.668 40.4956 45.3887 40.4956 45.3887 cv
40.4956 45.3887 42.2988 45.5381 43.7607 46.4434 cv
43.9409 46.5547 44.0972 46.6592 44.2344 46.7559 cv
43.8779 46.7559 li
cp
level3{
gsave
clp
[1.73799 2.75608 5.98115 -.756452 41.8271 45.2197 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.73799 2.75608 5.98115 -.756452 41.8271 45.2197 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
43.4927 46.8184 mo
43.4155 46.4063 43.3042 45.9102 43.1426 45.3857 cv
42.7144 43.9873 42.0918 43.4902 42.0918 43.4902 cv
42.0918 43.4902 42.7393 43.7471 43.2661 45.4023 cv
43.4497 45.9795 43.5664 46.4502 43.6401 46.8184 cv
43.4927 46.8184 li
cp
level3{
gsave
clp
[.63198 5.07716 2.15673 -1.49247 42.6128 43.1289 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.63198 5.07716 2.15673 -1.49247 42.6128 43.1289 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
45.7822 47.3398 mo
45.7822 47.4502 45.9048 47.5391 46.0562 47.5391 cv
46.207 47.5391 46.3296 47.4502 46.3296 47.3398 cv
46.3296 47.2285 46.207 47.1387 46.0562 47.1387 cv
45.9048 47.1387 45.7822 47.2285 45.7822 47.3398 cv
cp
level3{
gsave
clp
[-.243502 0 0 .233285 46.0562 47.3379 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243502 0 0 .233285 46.0562 47.3379 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.2676 47.6611 mo
45.2676 47.7715 45.3901 47.8604 45.5415 47.8604 cv
45.6929 47.8604 45.8154 47.7715 45.8154 47.6611 cv
45.8154 47.5508 45.6929 47.4609 45.5415 47.4609 cv
45.3901 47.4609 45.2676 47.5508 45.2676 47.6611 cv
cp
level3{
gsave
clp
[-.243411 0 0 .233198 45.5415 47.6592 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243411 0 0 .233198 45.5415 47.6592 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.3818 46.6484 mo
45.3818 46.7588 45.5044 46.8486 45.6558 46.8486 cv
45.8062 46.8486 45.9287 46.7588 45.9287 46.6484 cv
45.9287 46.5371 45.8062 46.4482 45.6558 46.4482 cv
45.5044 46.4482 45.3818 46.5371 45.3818 46.6484 cv
cp
level3{
gsave
clp
[-.243376 0 0 .233165 45.6553 46.6475 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243376 0 0 .233165 45.6553 46.6475 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.1411 47.2188 mo
45.1411 47.3291 45.2637 47.418 45.415 47.418 cv
45.5659 47.418 45.6885 47.3291 45.6885 47.2188 cv
45.6885 47.1074 45.5659 47.0176 45.415 47.0176 cv
45.2637 47.0176 45.1411 47.1074 45.1411 47.2188 cv
cp
level3{
gsave
clp
[-.243491 0 0 .233275 45.4146 47.2168 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243491 0 0 .233275 45.4146 47.2168 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.5264 47.2188 mo
44.5264 47.3291 44.6489 47.418 44.8003 47.418 cv
44.9517 47.418 45.0737 47.3291 45.0737 47.2188 cv
45.0737 47.1074 44.9517 47.0176 44.8003 47.0176 cv
44.6489 47.0176 44.5264 47.1074 44.5264 47.2188 cv
cp
level3{
gsave
clp
[-.243489 0 0 .233272 44.8003 47.2168 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243489 0 0 .233272 44.8003 47.2168 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.2637 47.4434 mo
44.2637 47.5537 44.3862 47.6436 44.5376 47.6436 cv
44.688 47.6436 44.8115 47.5537 44.8115 47.4434 cv
44.8115 47.333 44.688 47.2432 44.5376 47.2432 cv
44.3862 47.2432 44.2637 47.333 44.2637 47.4434 cv
cp
level3{
gsave
clp
[-.243624 0 0 .233402 44.5376 47.4424 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243624 0 0 .233402 44.5376 47.4424 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.0488 46.8848 mo
44.1025 46.7637 43.9429 46.5742 43.6924 46.4639 cv
43.4414 46.3525 43.1938 46.3623 43.1396 46.4834 cv
43.0859 46.6045 43.2456 46.793 43.4976 46.9033 cv
43.7476 47.0146 43.9946 47.0068 44.0488 46.8848 cv
cp
level3{
gsave
clp
[.403852 .17949 .114352 -.256207 43.5938 46.6816 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.403852 .17949 .114352 -.256207 43.5938 46.6816 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.2129 46.9238 mo
44.2129 47.0566 44.3975 47.1641 44.626 47.1641 cv
44.854 47.1641 45.0386 47.0566 45.0386 46.9238 cv
45.0386 46.792 44.854 46.6836 44.626 46.6836 cv
44.3975 46.6836 44.2129 46.792 44.2129 46.9238 cv
cp
level3{
gsave
clp
[-.367168 0 0 .280093 44.626 46.9238 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.367168 0 0 .280093 44.626 46.9238 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.021 47.1758 mo
44.0898 47.1533 44.1187 46.9844 44.0835 46.7959 cv
44.0498 46.6074 43.9648 46.4727 43.8955 46.4941 cv
43.8257 46.5176 43.7979 46.6875 43.8325 46.875 cv
43.8672 47.0635 43.9512 47.1982 44.021 47.1758 cv
cp
level3{
gsave
clp
[.0551645 .303405 .146621 -.0464543 43.9556 46.8359 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0551645 .303405 .146621 -.0464543 43.9556 46.8359 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.0542 47.1396 mo
43.0215 47.2832 43.1699 47.4688 43.3853 47.5537 cv
43.6016 47.6387 43.8032 47.5918 43.8354 47.4482 cv
43.8687 47.3037 43.7197 47.1191 43.5044 47.0342 cv
43.2886 46.9482 43.0864 46.9961 43.0542 47.1396 cv
cp
level3{
gsave
clp
[-.34693 -.137326 -.0693859 .303563 43.4434 47.2939 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.34693 -.137326 -.0693859 .303563 43.4434 47.2939 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.1587 46.8545 mo
44.1699 46.9463 44.3384 46.9873 44.5361 46.9463 cv
44.7334 46.9053 44.8848 46.7988 44.8735 46.707 cv
44.8628 46.6152 44.6943 46.5742 44.4966 46.6143 cv
44.2993 46.6563 44.147 46.7637 44.1587 46.8545 cv
cp
level3{
gsave
clp
[-.318535 .0651548 .0231662 .192569 44.5161 46.7813 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.318535 .0651548 .0231662 .192569 44.5161 46.7813 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.2217 46.9404 mo
45.2168 47.0732 45.3979 47.1914 45.6245 47.2041 cv
45.8525 47.2178 46.041 47.1211 46.0454 46.9883 cv
46.0498 46.8564 45.8691 46.7383 45.6411 46.7246 cv
45.4146 46.7119 45.2261 46.8076 45.2217 46.9404 cv
cp
level3{
gsave
clp
[-.36589 -.0216931 -.0101234 .279118 45.6338 46.9648 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.36589 -.0216931 -.0101234 .279118 45.6338 46.9648 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.0542 46.751 mo
44.0293 46.8525 44.1743 47.0029 44.3774 47.0859 cv
44.5801 47.1689 44.7637 47.1543 44.7881 47.0527 cv
44.812 46.9502 44.667 46.8008 44.4648 46.7178 cv
44.2622 46.6348 44.0776 46.6494 44.0542 46.751 cv
cp
level3{
gsave
clp
[-.326802 -.134481 -.050611 .214012 44.4214 46.9023 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.326802 -.134481 -.050611 .214012 44.4214 46.9023 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.7046 46.9268 mo
44.7012 47.041 44.853 47.1416 45.0435 47.1533 cv
45.2344 47.165 45.3916 47.0811 45.396 46.9668 cv
45.3999 46.8535 45.248 46.752 45.0571 46.7402 cv
44.8667 46.7295 44.7085 46.8125 44.7046 46.9268 cv
cp
level3{
gsave
clp
[-.307486 -.0174049 -.00870243 .240767 45.0503 46.9473 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.307486 -.0174049 -.00870243 .240767 45.0503 46.9473 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.9854 46.9043 mo
44.9854 47.0137 45.1147 47.1016 45.2744 47.1016 cv
45.4331 47.1016 45.5635 47.0137 45.5635 46.9043 cv
45.5635 46.7959 45.4331 46.708 45.2744 46.708 cv
45.1147 46.708 44.9854 46.7959 44.9854 46.9043 cv
cp
level3{
gsave
clp
[-.256558 0 0 .230467 45.2744 46.9063 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.256558 0 0 .230467 45.2744 46.9063 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.8857 46.9336 mo
45.8857 47.043 46.0151 47.1309 46.1738 47.1309 cv
46.3335 47.1309 46.4629 47.043 46.4629 46.9336 cv
46.4629 46.8252 46.3335 46.7373 46.1738 46.7373 cv
46.0151 46.7373 45.8857 46.8252 45.8857 46.9336 cv
cp
level3{
gsave
clp
[-.256291 0 0 .230228 46.1743 46.9355 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.256291 0 0 .230228 46.1743 46.9355 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.6011 47.0576 mo
45.6284 47.1416 45.8003 47.1279 45.9834 47.0234 cv
46.167 46.9199 46.2935 46.7666 46.2656 46.6816 cv
46.2373 46.5967 46.0664 46.6113 45.8828 46.7148 cv
45.6987 46.8193 45.5732 46.9727 45.6011 47.0576 cv
cp
level3{
gsave
clp
[-.29525 .167887 .0593395 .179466 45.9307 46.8672 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.29525 .167887 .0593395 .179466 45.9307 46.8672 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.7373 46.709 mo
45.7656 46.7949 45.9365 46.7793 46.1201 46.6748 cv
46.3042 46.5713 46.4302 46.4189 46.4023 46.334 cv
46.3745 46.248 46.2036 46.2646 46.0195 46.3672 cv
45.8359 46.4717 45.7095 46.625 45.7373 46.709 cv
cp
level3{
gsave
clp
[-.294989 .167739 .0592871 .179307 46.0674 46.5195 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.294989 .167739 .0592871 .179307 46.0674 46.5195 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.5215 47.0723 mo
43.5161 47.2051 43.6973 47.3232 43.9253 47.3359 cv
44.1523 47.3496 44.3408 47.2529 44.3447 47.1211 cv
44.3501 46.9883 44.1689 46.8691 43.9409 46.8564 cv
43.7139 46.8428 43.5259 46.9404 43.5215 47.0723 cv
cp
level3{
gsave
clp
[-.365759 -.0216853 -.0101198 .279018 43.9331 47.0967 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.365759 -.0216853 -.0101198 .279018 43.9331 47.0967 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.9546 46.6797 mo
45.9302 46.7822 46.0747 46.9316 46.2778 47.0146 cv
46.4805 47.0986 46.6641 47.084 46.6885 46.9814 cv
46.7124 46.8799 46.5679 46.7295 46.3652 46.6475 cv
46.1626 46.5635 45.978 46.5781 45.9546 46.6797 cv
cp
level3{
gsave
clp
[-.326469 -.134343 -.0505593 .213794 46.3213 46.832 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.326469 -.134343 -.0505593 .213794 46.3213 46.832 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.8223 47.2881 mo
45.8481 47.3232 45.9131 47.2979 45.9683 47.2295 cv
46.0234 47.1611 46.0474 47.0771 46.022 47.041 cv
45.9961 47.0059 45.9312 47.0322 45.876 47.0996 cv
45.8208 47.168 45.7959 47.252 45.8223 47.2881 cv
cp
level3{
gsave
clp
[-.000780303 .000956501 .000465665 .000654448 590.769 250.462 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.000780303 .000956501 .000465665 .000654448 590.769 250.462 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.8032 46.9912 mo
44.7983 47.1055 44.9507 47.207 45.1411 47.2188 cv
45.3325 47.2285 45.4902 47.1455 45.4937 47.0322 cv
45.4976 46.917 45.3462 46.8164 45.1548 46.8057 cv
44.9644 46.7939 44.8071 46.877 44.8032 46.9912 cv
cp
level3{
gsave
clp
[-.307206 -.017389 -.00869452 .240548 45.1484 47.0127 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.307206 -.017389 -.00869452 .240548 45.1484 47.0127 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.5786 46.8799 mo
44.5786 46.9893 44.708 47.0781 44.8677 47.0781 cv
45.0264 47.0781 45.1558 46.9893 45.1558 46.8799 cv
45.1558 46.7725 45.0264 46.6836 44.8677 46.6836 cv
44.708 46.6836 44.5786 46.7725 44.5786 46.8799 cv
cp
level3{
gsave
clp
[-.256469 0 0 .230387 44.8672 46.8818 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.256469 0 0 .230387 44.8672 46.8818 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.9878 47.2148 mo
45.999 47.3057 46.168 47.3467 46.3662 47.3066 cv
46.563 47.2656 46.7144 47.1582 46.7036 47.0664 cv
46.6924 46.9746 46.5234 46.9336 46.3252 46.9746 cv
46.1284 47.0156 45.9771 47.123 45.9878 47.2148 cv
cp
level3{
gsave
clp
[-.318916 .0652329 .0231939 .192799 46.3457 47.1416 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.318916 .0652329 .0231939 .192799 46.3457 47.1416 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.5684 47.8633 mo
43.5684 47.9746 43.6909 48.0645 43.8423 48.0645 cv
43.9937 48.0645 44.1162 47.9746 44.1162 47.8633 cv
44.1162 47.7529 43.9937 47.6641 43.8423 47.6641 cv
43.6909 47.6641 43.5684 47.7529 43.5684 47.8633 cv
cp
level3{
gsave
clp
[-.243615 0 0 .233394 43.8423 47.8633 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243615 0 0 .233394 43.8423 47.8633 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.2446 46.9668 mo
44.2446 47.0781 44.3672 47.168 44.5186 47.168 cv
44.6699 47.168 44.7925 47.0781 44.7925 46.9668 cv
44.7925 46.8574 44.6699 46.7676 44.5186 46.7676 cv
44.3672 46.7676 44.2446 46.8574 44.2446 46.9668 cv
cp
level3{
gsave
clp
[-.243621 0 0 .233399 44.5186 46.9668 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.243621 0 0 .233399 44.5186 46.9668 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.7314 46.6367 mo
46.7314 46.7432 46.5845 46.8301 46.4033 46.8301 cv
46.2207 46.8301 46.0742 46.7432 46.0742 46.6367 cv
46.0742 46.5313 46.2207 46.4443 46.4033 46.4443 cv
46.5845 46.4443 46.7314 46.5313 46.7314 46.6367 cv
cp
level3{
gsave
clp
[.292254 0 0 .224942 46.4028 46.6387 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292254 0 0 .224942 46.4028 46.6387 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.4365 46.5596 mo
47.3994 46.6914 47.0479 46.7402 46.6499 46.6699 cv
46.252 46.5996 45.9585 46.4355 45.9951 46.3037 cv
46.0317 46.1729 46.3843 46.124 46.7822 46.1943 cv
47.1802 46.2646 47.4727 46.4277 47.4365 46.5596 cv
cp
level3{
gsave
clp
[.641023 .114313 -.0766913 .277825 46.7153 46.4336 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.641023 .114313 -.0766913 .277825 46.7153 46.4336 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.293 46.8584 mo
49.228 46.7412 49.4204 46.5596 49.7212 46.4531 cv
50.0229 46.3457 50.3198 46.3545 50.3848 46.4717 cv
50.4497 46.5879 50.2578 46.7695 49.9556 46.877 cv
49.6548 46.9844 49.3574 46.9756 49.293 46.8584 cv
cp
level3{
gsave
clp
[-.486263 .172218 -.137485 -.246026 49.8389 46.665 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.486263 .172218 -.137485 -.246026 49.8389 46.665 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.9194 46.4033 mo
48.8799 46.2793 49.1094 46.127 49.4292 46.0645 cv
49.749 46 50.0396 46.0498 50.0781 46.1748 cv
50.1167 46.2988 49.8887 46.4502 49.5679 46.5137 cv
49.2471 46.5771 48.957 46.5273 48.9194 46.4033 cv
cp
level3{
gsave
clp
[-.515571 .101376 -.0811011 -.26213 49.4985 46.2891 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.515571 .101376 -.0811011 -.26213 49.4985 46.2891 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.2969 46.1895 mo
49.3535 46.3428 49.1689 46.5215 48.8828 46.5898 cv
48.5972 46.6582 48.3193 46.5908 48.2617 46.4385 cv
48.2046 46.2852 48.3896 46.1064 48.6758 46.0381 cv
48.9609 45.9697 49.2393 46.0371 49.2969 46.1895 cv
cp
level3{
gsave
clp
[.460741 -.110114 .121705 .32165 48.7773 46.3145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.460741 -.110114 .121705 .32165 48.7773 46.3145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.0464 46.4863 mo
49.019 46.6484 48.665 46.7461 48.2544 46.7021 cv
47.8428 46.6592 47.5313 46.4922 47.5576 46.3301 cv
47.584 46.168 47.939 46.0713 48.3506 46.1143 cv
48.7612 46.1582 49.0728 46.3252 49.0464 46.4863 cv
cp
level3{
gsave
clp
[.661443 .0694732 -.056447 .343024 48.3037 46.4072 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.661443 .0694732 -.056447 .343024 48.3037 46.4072 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.5474 46.748 mo
45.4824 46.6309 45.6743 46.4492 45.9756 46.3428 cv
46.2773 46.2354 46.5747 46.2441 46.6401 46.3604 cv
46.7041 46.4775 46.5127 46.6582 46.2104 46.7656 cv
45.9092 46.873 45.6118 46.8643 45.5474 46.748 cv
cp
level3{
gsave
clp
[-.486322 .172239 -.137502 -.246056 46.0938 46.5537 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.486322 .172239 -.137502 -.246056 46.0938 46.5537 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.9443 46.3545 mo
48.0015 46.5068 47.8164 46.6855 47.5303 46.7549 cv
47.2451 46.8232 46.9668 46.7559 46.9092 46.6035 cv
46.8525 46.4502 47.0376 46.2715 47.3237 46.2031 cv
47.6089 46.1348 47.8872 46.2012 47.9443 46.3545 cv
cp
level3{
gsave
clp
[.460662 -.110095 .121684 .321594 47.4253 46.4795 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.460662 -.110095 .121684 .321594 47.4253 46.4795 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.439 46.3359 mo
47.439 46.4727 47.1885 46.584 46.8804 46.584 cv
46.5708 46.584 46.3223 46.4727 46.3223 46.3359 cv
46.3223 46.2002 46.5708 46.0898 46.8804 46.0898 cv
47.1885 46.0898 47.439 46.2002 47.439 46.3359 cv
cp
level3{
gsave
clp
[.496589 0 0 .288109 46.8804 46.3359 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.496589 0 0 .288109 46.8804 46.3359 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.6245 46.6484 mo
49.6245 46.7549 49.4775 46.8408 49.2959 46.8408 cv
49.1138 46.8408 48.9668 46.7549 48.9668 46.6484 cv
48.9668 46.541 49.1138 46.4551 49.2959 46.4551 cv
49.4775 46.4551 49.6245 46.541 49.6245 46.6484 cv
cp
level3{
gsave
clp
[.292369 0 0 .22503 49.2954 46.6494 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292369 0 0 .22503 49.2954 46.6494 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.3008 46.5957 mo
46.3008 46.7021 46.1533 46.7881 45.9717 46.7881 cv
45.7905 46.7881 45.6426 46.7021 45.6426 46.5957 cv
45.6426 46.4883 45.7905 46.4033 45.9717 46.4033 cv
46.1533 46.4033 46.3008 46.4883 46.3008 46.5957 cv
cp
level3{
gsave
clp
[.29227 0 0 .224954 45.9717 46.5967 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.29227 0 0 .224954 45.9717 46.5967 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.4243 46.7705 mo
48.6597 46.1484 49.0454 45.2539 49.6123 44.3154 cv
50.6729 42.5596 51.8213 42.124 51.8213 42.124 cv
51.8213 42.124 50.6919 42.2168 49.4058 44.29 cv
48.7104 45.4102 48.3452 46.2422 48.1558 46.7705 cv
48.4243 46.7705 li
cp
level3{
gsave
clp
[-2.92868 5.77576 -5.15275 -2.97528 51.2827 41.8135 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.92868 5.77576 -5.15275 -2.97528 51.2827 41.8135 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
47.8906 46.6191 mo
48.1577 46.2783 48.5 45.8857 48.9248 45.4824 cv
50.2031 44.2646 51.5674 43.9541 51.5674 43.9541 cv
51.5674 43.9541 50.2305 44.0303 48.6797 45.4668 cv
48.1909 45.9199 47.8359 46.3057 47.5796 46.6191 cv
47.8906 46.6191 li
cp
level3{
gsave
clp
[-2.44801 5.03151 -4.15341 -2.51811 50.5264 43.3242 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.44801 5.03151 -4.15341 -2.51811 50.5264 43.3242 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
46.2495 46.5127 mo
46.2656 46.457 46.2842 46.3994 46.3062 46.3398 cv
46.6104 45.5264 47.7104 44.9326 47.7104 44.9326 cv
47.7104 44.9326 46.4521 45.4502 46.0537 46.4268 cv
46.0415 46.4551 46.0303 46.4834 46.0195 46.5127 cv
46.2495 46.5127 li
cp
level3{
gsave
clp
[.0547652 2.01863 -3.11947 1.23195 46.853 45.2715 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0547652 2.01863 -3.11947 1.23195 46.853 45.2715 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
48.0317 46.7168 mo
47.9624 46.3799 47.8467 45.9902 47.6587 45.5654 cv
47.0313 44.1445 45.6299 43.9248 45.6299 43.9248 cv
45.6299 43.9248 47.1724 43.9619 47.9624 45.6553 cv
48.1558 46.0713 48.2832 46.4229 48.3647 46.7168 cv
48.0317 46.7168 li
cp
level3{
gsave
clp
[.298491 3.40967 3.25885 .586336 46.896 44.1387 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.298491 3.40967 3.25885 .586336 46.896 44.1387 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
46.8047 46.5127 mo
47.6675 46.3311 48.4077 46.3057 48.4077 46.3057 cv
48.4077 46.3057 47.5146 46.2744 46.4302 46.5127 cv
46.8047 46.5127 li
cp
level3{
gsave
clp
[-2.13051 2.49532 -5.02855 -1.93451 47.728 46.0449 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.13051 2.49532 -5.02855 -1.93451 47.728 46.0449 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
48.0962 46.3359 mo
48.8354 46.2031 49.4253 46.1836 49.4253 46.1836 cv
49.4253 46.1836 48.6729 46.1553 47.7095 46.3359 cv
48.0962 46.3359 li
cp
level3{
gsave
clp
[-2.14054 2.50707 -5.05223 -1.94362 48.8267 45.9541 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.14054 2.50707 -5.05223 -1.94362 48.8267 45.9541 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
48.5298 46.2109 mo
48.73 45.9404 48.9956 45.6377 49.3452 45.3193 cv
50.5513 44.2217 52.3125 43.8252 52.3125 43.8252 cv
52.3125 43.8252 50.4771 44.0342 48.9956 45.335 cv
48.6108 45.6729 48.3315 45.9648 48.1279 46.2109 cv
48.5298 46.2109 li
cp
level3{
gsave
clp
[-1.49206 4.21317 -5.19674 -1.19514 50.7686 43.4707 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.49206 4.21317 -5.19674 -1.19514 50.7686 43.4707 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
48.6416 45.9492 mo
49.9595 45.791 51.1411 45.8047 51.1411 45.8047 cv
51.1411 45.8047 49.6318 45.7139 47.9224 45.9492 cv
48.6416 45.9492 li
cp
level3{
gsave
clp
[-3.17446 2.56851 -8.34091 -2.72219 50.0576 45.4512 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.17446 2.56851 -8.34091 -2.72219 50.0576 45.4512 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
48.2803 46.5625 mo
48.4463 46.502 48.6245 46.4404 48.8135 46.3799 cv
50.8779 45.7168 53.4819 45.6875 53.4819 45.6875 cv
53.4819 45.6875 50.8369 45.5605 48.3193 46.3359 cv
48.0645 46.4141 47.8345 46.4902 47.627 46.5625 cv
48.2803 46.5625 li
cp
level3{
gsave
clp
[-3.55458 3.53089 -8.8579 -3.13905 51.6475 45.0381 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.55458 3.53089 -8.8579 -3.13905 51.6475 45.0381 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
47.8359 46.6621 mo
47.6475 46.457 47.417 46.2422 47.1353 46.0283 cv
45.7622 44.9883 43.6299 44.915 43.6299 44.915 cv
43.6299 44.915 45.875 44.748 47.5659 45.9668 cv
47.9155 46.2197 48.1855 46.4521 48.395 46.6621 cv
47.8359 46.6621 li
cp
level3{
gsave
clp
[1.9058 5.19031 7.66748 -4.37328 45.3359 43.9434 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.9058 5.19031 7.66748 -4.37328 45.3359 43.9434 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
47.0981 46.499 mo
46.9995 46.4258 46.8882 46.3467 46.7632 46.2666 cv
46.0732 45.8213 45.3433 45.6436 45.3433 45.6436 cv
45.3433 45.6436 46.0571 45.749 46.8936 46.2773 cv
47.0205 46.3574 47.1309 46.4316 47.2271 46.499 cv
47.0981 46.499 li
cp
level3{
gsave
clp
[1.18546 1.62625 1.97847 -.325433 45.9058 45.5508 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.18546 1.62625 1.97847 -.325433 45.9058 45.5508 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
47.4019 46.3398 mo
47.5864 46.2285 47.8052 46.1113 48.0615 45.9932 cv
49.2222 45.458 50.6162 45.376 50.6162 45.376 cv
50.6162 45.376 49.2134 45.3438 47.8003 45.9736 cv
47.4971 46.1074 47.2549 46.2305 47.061 46.3398 cv
47.4019 46.3398 li
cp
level3{
gsave
clp
[-1.96358 2.62749 -4.38527 -1.82814 49.5352 44.9258 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.96358 2.62749 -4.38527 -1.82814 49.5352 44.9258 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
46.6831 46.6387 mo
46.5854 46.4541 46.4448 46.2461 46.2422 46.0322 cv
45.5972 45.3525 44.499 45.1895 44.499 45.1895 cv
44.499 45.1895 45.6709 45.2188 46.4673 46.0205 cv
46.7065 46.2617 46.8633 46.4678 46.9629 46.6387 cv
46.6831 46.6387 li
cp
level3{
gsave
clp
[.533671 3.94579 2.68293 -2.09693 45.5259 44.3857 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.533671 3.94579 2.68293 -2.09693 45.5259 44.3857 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
47.9185 46.5127 mo
47.9814 46.4688 48.0479 46.4238 48.1172 46.3799 cv
49.1514 45.7148 50.4165 45.5479 50.4165 45.5479 cv
50.4165 45.5479 49.1396 45.5859 47.8789 46.3711 cv
47.8013 46.4199 47.728 46.4668 47.6582 46.5127 cv
47.9185 46.5127 li
cp
level3{
gsave
clp
[-1.63609 2.99141 -3.80663 -1.52451 49.5005 45.1816 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.63609 2.99141 -3.80663 -1.52451 49.5005 45.1816 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
47.189 46.5127 mo
47.1665 46.4121 47.1333 46.3057 47.0864 46.1973 cv
46.7476 45.415 45.5405 45.0234 45.5405 45.0234 cv
45.5405 45.0234 46.9189 45.3047 47.3633 46.2354 cv
47.4102 46.334 47.4478 46.4268 47.4766 46.5127 cv
47.189 46.5127 li
cp
level3{
gsave
clp
[-.0610311 2.49943 4.03808 .0663269 46.5249 45.04 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0610311 2.49943 4.03808 .0663269 46.5249 45.04 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
48.3223 46.6484 mo
48.1909 46.5234 48.0425 46.3926 47.8721 46.2607 cv
46.562 45.2393 44.3989 44.9219 44.3989 44.9219 cv
44.3989 44.9219 46.6958 45.0537 48.3154 46.2617 cv
48.4985 46.3984 48.6592 46.5273 48.7983 46.6484 cv
48.3223 46.6484 li
cp
level3{
gsave
clp
[1.49332 4.10049 6.94318 -1.59235 46.1392 44.5225 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.49332 4.10049 6.94318 -1.59235 46.1392 44.5225 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
49.0518 46.5674 mo
49.0034 46.4414 48.9346 46.3057 48.8413 46.1611 cv
48.3467 45.4023 47.1089 44.9609 47.1089 44.9609 cv
47.1089 44.9609 48.4858 45.3086 49.1138 46.2148 cv
49.2031 46.3428 49.2739 46.46 49.3286 46.5674 cv
49.0518 46.5674 li
cp
level3{
gsave
clp
[.211447 2.20584 3.61604 .492619 48.1558 45.1035 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.211447 2.20584 3.61604 .492619 48.1558 45.1035 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
47.4775 46.6689 mo
47.2422 46.3574 46.8555 45.9092 46.2896 45.4395 cv
45.229 44.5596 44.0806 44.3418 44.0806 44.3418 cv
44.0806 44.3418 45.21 44.3887 46.4956 45.4258 cv
47.1904 45.9873 47.5562 46.4043 47.7451 46.6689 cv
47.4775 46.6689 li
cp
level3{
gsave
clp
[1.92422 3.79482 3.38549 -1.95483 45.0415 43.7871 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.92422 3.79482 3.38549 -1.95483 45.0415 43.7871 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
47.7563 46.7725 mo
47.6489 46.5352 47.5068 46.2695 47.3208 45.9902 cv
46.6768 45.0273 45.7349 44.6797 45.7349 44.6797 cv
45.7349 44.6797 46.7173 44.8623 47.5078 46.0039 cv
47.7124 46.3008 47.8623 46.5566 47.9712 46.7725 cv
47.7563 46.7725 li
cp
level3{
gsave
clp
[1.16183 3.2807 4.04657 -.930624 46.4253 44.5205 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.16183 3.2807 4.04657 -.930624 46.4253 44.5205 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
46.5527 46.584 mo
46.6021 46.457 46.6694 46.3213 46.7642 46.1777 cv
47.2578 45.4189 48.4966 44.9775 48.4966 44.9775 cv
48.4966 44.9775 47.1187 45.3252 46.4907 46.2305 cv
46.4009 46.3594 46.3311 46.4766 46.2759 46.584 cv
46.5527 46.584 li
cp
level3{
gsave
clp
[-.211429 2.20565 -3.61573 .492576 47.4497 45.1201 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.211429 2.20565 -3.61573 .492576 47.4497 45.1201 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
48.2349 46.7891 mo
48.1909 46.542 48.1006 46.2363 47.9224 45.8945 cv
47.4546 44.998 46.4121 44.4961 46.4121 44.4961 cv
46.4121 44.4961 47.5601 44.8828 48.1475 45.9512 cv
48.3374 46.2979 48.4429 46.5742 48.4966 46.7891 cv
48.2349 46.7891 li
cp
level3{
gsave
clp
[2.08447 0 0 2.08447 46.4121 45.6426 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.08447 0 0 2.08447 46.4121 45.6426 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
48.9429 46.7344 mo
49.103 46.6348 49.2871 46.5293 49.4951 46.4229 cv
50.9263 45.6865 53.0068 45.418 53.0068 45.418 cv
53.0068 45.418 50.8394 45.5615 49.0835 46.4336 cv
48.8672 46.541 48.6787 46.6406 48.5146 46.7344 cv
48.9429 46.7344 li
cp
level3{
gsave
clp
[-1.78002 2.82273 -6.12578 -.774744 51.3105 45.2041 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.78002 2.82273 -6.12578 -.774744 51.3105 45.2041 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
49.4048 46.7939 mo
49.4976 46.3975 49.6313 45.9199 49.8257 45.415 cv
50.3408 44.0684 51.0884 43.5898 51.0884 43.5898 cv
51.0884 43.5898 50.3105 43.8379 49.6772 45.4316 cv
49.457 45.9863 49.3174 46.4404 49.228 46.7939 cv
49.4048 46.7939 li
cp
level3{
gsave
clp
[-.645186 5.18325 -2.2018 -1.52366 50.4155 43.124 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.645186 5.18325 -2.2018 -1.52366 50.4155 43.124 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
46.6543 47.2959 mo
46.6543 47.4023 46.5068 47.4883 46.3252 47.4883 cv
46.1436 47.4883 45.9971 47.4023 45.9971 47.2959 cv
45.9971 47.1895 46.1436 47.1025 46.3252 47.1025 cv
46.5068 47.1025 46.6543 47.1895 46.6543 47.2959 cv
cp
level3{
gsave
clp
[.292247 0 0 .224936 46.3257 47.2969 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292247 0 0 .224936 46.3257 47.2969 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.2725 47.6055 mo
47.2725 47.7119 47.125 47.7979 46.9434 47.7979 cv
46.7617 47.7979 46.6143 47.7119 46.6143 47.6055 cv
46.6143 47.499 46.7617 47.4131 46.9434 47.4131 cv
47.125 47.4131 47.2725 47.499 47.2725 47.6055 cv
cp
level3{
gsave
clp
[.29226 0 0 .224947 46.9434 47.6064 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.29226 0 0 .224947 46.9434 47.6064 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.1353 46.6309 mo
47.1353 46.7373 46.9878 46.8232 46.8062 46.8232 cv
46.6245 46.8232 46.478 46.7373 46.478 46.6309 cv
46.478 46.5244 46.6245 46.4375 46.8062 46.4375 cv
46.9878 46.4375 47.1353 46.5244 47.1353 46.6309 cv
cp
level3{
gsave
clp
[.292253 0 0 .224941 46.8066 46.6318 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292253 0 0 .224941 46.8066 46.6318 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.4238 47.1797 mo
47.4238 47.2861 47.2769 47.3721 47.0952 47.3721 cv
46.9136 47.3721 46.7661 47.2861 46.7661 47.1797 cv
46.7661 47.0723 46.9136 46.9863 47.0952 46.9863 cv
47.2769 46.9863 47.4238 47.0723 47.4238 47.1797 cv
cp
level3{
gsave
clp
[.292395 0 0 .22505 47.0947 47.1807 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292395 0 0 .22505 47.0947 47.1807 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.1636 47.1797 mo
48.1636 47.2861 48.0161 47.3721 47.8345 47.3721 cv
47.6528 47.3721 47.5054 47.2861 47.5054 47.1797 cv
47.5054 47.0723 47.6528 46.9863 47.8345 46.9863 cv
48.0161 46.9863 48.1636 47.0723 48.1636 47.1797 cv
cp
level3{
gsave
clp
[.292526 0 0 .225152 47.8345 47.1807 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292526 0 0 .225152 47.8345 47.1807 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.478 47.3965 mo
48.478 47.502 48.3315 47.5889 48.1499 47.5889 cv
47.9683 47.5889 47.8208 47.502 47.8208 47.3965 cv
47.8208 47.2891 47.9683 47.2031 48.1499 47.2031 cv
48.3315 47.2031 48.478 47.2891 48.478 47.3965 cv
cp
level3{
gsave
clp
[.292307 0 0 .224983 48.1494 47.3975 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292307 0 0 .224983 48.1494 47.3975 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.7368 46.8584 mo
48.6719 46.7412 48.8643 46.5596 49.165 46.4531 cv
49.4673 46.3457 49.7642 46.3545 49.8296 46.4717 cv
49.8936 46.5879 49.7021 46.7695 49.3999 46.877 cv
49.0986 46.9844 48.8022 46.9756 48.7368 46.8584 cv
cp
level3{
gsave
clp
[-.486541 .172317 -.137564 -.246167 49.2832 46.665 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.486541 .172317 -.137564 -.246167 49.2832 46.665 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.5396 46.8965 mo
48.5396 47.0244 48.3169 47.127 48.0439 47.127 cv
47.77 47.127 47.5483 47.0244 47.5483 46.8965 cv
47.5483 46.7686 47.77 46.665 48.0439 46.665 cv
48.3169 46.665 48.5396 46.7686 48.5396 46.8965 cv
cp
level3{
gsave
clp
[.441007 0 0 .269827 48.042 46.8955 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.441007 0 0 .269827 48.042 46.8955 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.7705 47.1387 mo
48.688 47.1172 48.6528 46.9541 48.6948 46.7725 cv
48.7363 46.5908 48.8374 46.4609 48.9214 46.4824 cv
49.0049 46.5039 49.0381 46.668 48.9971 46.8496 cv
48.9551 47.0303 48.8545 47.1602 48.7705 47.1387 cv
cp
level3{
gsave
clp
[-.0664634 .291861 -.176273 -.0447906 48.8472 46.8105 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0664634 .291861 -.176273 -.0447906 48.8472 46.8105 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.9321 47.1035 mo
49.9717 47.2422 49.7939 47.4209 49.5342 47.5029 cv
49.2749 47.585 49.0322 47.5391 48.9927 47.4004 cv
48.9536 47.2627 49.1328 47.084 49.3921 47.001 cv
49.6509 46.9199 49.8931 46.9648 49.9321 47.1035 cv
cp
level3{
gsave
clp
[.41703 -.13177 .0839853 .2925 49.4639 47.251 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.41703 -.13177 .0839853 .2925 49.4639 47.251 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.6045 46.8301 mo
48.5918 46.917 48.3892 46.957 48.1514 46.917 cv
47.9141 46.8779 47.7324 46.7754 47.7461 46.6865 cv
47.7588 46.5986 47.9624 46.5596 48.1992 46.5977 cv
48.4365 46.6387 48.6182 46.7412 48.6045 46.8301 cv
cp
level3{
gsave
clp
[.382582 .0637637 -.0275343 .185494 48.1753 46.7578 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.382582 .0637637 -.0275343 .185494 48.1753 46.7578 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.3276 46.9111 mo
47.3335 47.0391 47.1167 47.1533 46.8428 47.165 cv
46.5693 47.1787 46.3433 47.085 46.3389 46.958 cv
46.3325 46.8301 46.5498 46.7168 46.8228 46.7041 cv
47.0967 46.6914 47.3223 46.7842 47.3276 46.9111 cv
cp
level3{
gsave
clp
[.439539 -.0202419 .0115668 .268928 46.8311 46.9326 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.439539 -.0202419 .0115668 .268928 46.8311 46.9326 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.731 46.7285 mo
48.7603 46.8271 48.5864 46.9717 48.3428 47.0508 cv
48.0986 47.1318 47.8774 47.1182 47.8486 47.0195 cv
47.8203 46.9219 47.9941 46.7773 48.2368 46.6973 cv
48.4805 46.6172 48.7021 46.6318 48.731 46.7285 cv
cp
level3{
gsave
clp
[.392033 -.128749 .0607579 .206866 48.29 46.874 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.392033 -.128749 .0607579 .206866 48.29 46.874 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.9487 46.8984 mo
47.9531 47.0078 47.7715 47.1064 47.5415 47.1162 cv
47.3125 47.1289 47.1226 47.0479 47.1182 46.9375 cv
47.1133 46.8281 47.2959 46.7305 47.5249 46.7188 cv
47.7544 46.709 47.9443 46.7891 47.9487 46.8984 cv
cp
level3{
gsave
clp
[.36911 -.0173699 .0101324 .231598 47.5342 46.916 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.36911 -.0173699 .0101324 .231598 47.5342 46.916 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.6113 46.877 mo
47.6113 46.9814 47.4561 47.0664 47.2642 47.0664 cv
47.0728 47.0664 46.9175 46.9814 46.9175 46.877 cv
46.9175 46.7725 47.0728 46.6885 47.2642 46.6885 cv
47.4561 46.6885 47.6113 46.7725 47.6113 46.877 cv
cp
level3{
gsave
clp
[.307554 0 0 .220919 47.2646 46.8779 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307554 0 0 .220919 47.2646 46.8779 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.5303 46.9053 mo
46.5303 47.0107 46.375 47.0947 46.1831 47.0947 cv
45.9917 47.0947 45.8364 47.0107 45.8364 46.9053 cv
45.8364 46.8008 45.9917 46.7158 46.1831 46.7158 cv
46.375 46.7158 46.5303 46.8008 46.5303 46.9053 cv
cp
level3{
gsave
clp
[.307843 0 0 .221127 46.1836 46.9063 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307843 0 0 .221127 46.1836 46.9063 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.8721 47.0244 mo
46.8389 47.1064 46.6333 47.0918 46.4121 46.9912 cv
46.1919 46.8916 46.04 46.7441 46.0732 46.6621 cv
46.1064 46.5811 46.3125 46.5957 46.5332 46.6953 cv
46.7534 46.7949 46.9053 46.9424 46.8721 47.0244 cv
cp
level3{
gsave
clp
[.355774 .160532 -.0708655 .172102 46.4722 46.8447 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.355774 .160532 -.0708655 .172102 46.4722 46.8447 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.708 46.6895 mo
46.6738 46.7715 46.4688 46.7568 46.248 46.6563 cv
46.0269 46.5576 45.876 46.4102 45.9092 46.3281 cv
45.9424 46.2461 46.1479 46.2607 46.3691 46.3604 cv
46.5894 46.46 46.7412 46.6084 46.708 46.6895 cv
cp
level3{
gsave
clp
[.355677 .160488 -.0708462 .172055 46.3086 46.5098 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.355677 .160488 -.0708462 .172055 46.3086 46.5098 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.3711 47.0391 mo
49.3765 47.166 49.1592 47.2803 48.8853 47.293 cv
48.6123 47.3057 48.3862 47.2129 48.3813 47.085 cv
48.3755 46.958 48.5923 46.8438 48.8662 46.8311 cv
49.1396 46.8184 49.3647 46.9111 49.3711 47.0391 cv
cp
level3{
gsave
clp
[.4401 -.0202678 .0115816 .269272 48.874 47.0605 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.4401 -.0202678 .0115816 .269272 48.874 47.0605 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.4468 46.6611 mo
46.4766 46.7588 46.3022 46.9033 46.0591 46.9844 cv
45.8154 47.0645 45.5942 47.0498 45.5649 46.9512 cv
45.5361 46.8535 45.71 46.709 45.9536 46.6289 cv
46.1973 46.5488 46.4185 46.5635 46.4468 46.6611 cv
cp
level3{
gsave
clp
[.392483 -.128897 .0608276 .207104 46.0063 46.8066 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.392483 -.128897 .0608276 .207104 46.0063 46.8066 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.6064 47.2461 mo
46.5757 47.2813 46.4976 47.2559 46.4302 47.1904 cv
46.3638 47.125 46.335 47.043 46.3662 47.0078 cv
46.397 46.9746 46.4756 47 46.5415 47.0645 cv
46.6079 47.1309 46.6377 47.2129 46.6064 47.2461 cv
cp
level3{
gsave
clp
[.000991861 .000978457 -.000603158 .000670176 848.552 256.722 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.000991861 .000978457 -.000603158 .000670176 848.552 256.722 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
47.8306 46.9609 mo
47.8359 47.0713 47.6538 47.1689 47.4238 47.1797 cv
47.1953 47.1895 47.0044 47.1094 47 47 cv
46.9956 46.8896 47.1787 46.793 47.4077 46.7822 cv
47.6372 46.7715 47.8262 46.8506 47.8306 46.9609 cv
cp
level3{
gsave
clp
[.369071 -.017368 .0101314 .231574 47.4165 46.9795 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.369071 -.017368 .0101314 .231574 47.4165 46.9795 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.1001 46.8535 mo
48.1001 46.959 47.9448 47.0439 47.7534 47.0439 cv
47.562 47.0439 47.4063 46.959 47.4063 46.8535 cv
47.4063 46.749 47.562 46.665 47.7534 46.665 cv
47.9448 46.665 48.1001 46.749 48.1001 46.8535 cv
cp
level3{
gsave
clp
[.307824 0 0 .221113 47.7534 46.8555 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307824 0 0 .221113 47.7534 46.8555 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.4067 47.1758 mo
46.3931 47.2627 46.1904 47.3027 45.9531 47.2637 cv
45.7153 47.2246 45.5347 47.1221 45.5474 47.0332 cv
45.561 46.9453 45.7637 46.9063 46.0015 46.9443 cv
46.2383 46.9844 46.4199 47.0879 46.4067 47.1758 cv
cp
level3{
gsave
clp
[.382797 .0637995 -.0275498 .185599 45.9771 47.1045 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.382797 .0637995 -.0275498 .185599 45.9771 47.1045 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
49.3135 47.8008 mo
49.3135 47.9072 49.1665 47.9941 48.9854 47.9941 cv
48.8037 47.9941 48.6567 47.9072 48.6567 47.8008 cv
48.6567 47.6943 48.8037 47.6084 48.9854 47.6084 cv
49.1665 47.6084 49.3135 47.6943 49.3135 47.8008 cv
cp
level3{
gsave
clp
[.292141 0 0 .224855 48.9849 47.8027 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292141 0 0 .224855 48.9849 47.8027 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
48.501 46.9375 mo
48.501 47.0449 48.354 47.1309 48.1729 47.1309 cv
47.9912 47.1309 47.8438 47.0449 47.8438 46.9375 cv
47.8438 46.832 47.9912 46.7461 48.1729 46.7461 cv
48.354 46.7461 48.501 46.832 48.501 46.9375 cv
cp
level3{
gsave
clp
[.291988 0 0 .224737 48.1724 46.9395 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291988 0 0 .224737 48.1724 46.9395 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.4668 46.3721 mo
76.4668 46.4609 76.6479 46.5332 76.8711 46.5332 cv
77.0942 46.5332 77.2749 46.4609 77.2749 46.3721 cv
77.2749 46.2832 77.0942 46.2119 76.8711 46.2119 cv
76.6479 46.2119 76.4668 46.2832 76.4668 46.3721 cv
cp
level3{
gsave
clp
[-.358667 0 0 .187429 76.8706 46.373 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358667 0 0 .187429 76.8706 46.373 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.6016 46.3076 mo
75.647 46.418 76.0786 46.459 76.5674 46.3994 cv
77.0571 46.3408 77.4165 46.2041 77.3716 46.0938 cv
77.3262 45.9834 76.8945 45.9434 76.4058 46.002 cv
75.917 46.0605 75.5566 46.1982 75.6016 46.3076 cv
cp
level3{
gsave
clp
[-.786368 .0950647 .0950647 .231824 76.4863 46.2002 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.786368 .0950647 .0950647 .231824 76.4863 46.2002 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.3213 46.5576 mo
73.4014 46.46 73.1655 46.3076 72.7954 46.2188 cv
72.4248 46.1289 72.0601 46.1357 71.98 46.2344 cv
71.9004 46.332 72.1367 46.4834 72.5073 46.5723 cv
72.8779 46.6621 73.2417 46.6543 73.3213 46.5576 cv
cp
level3{
gsave
clp
[.596261 .143637 .167855 -.20627 72.6528 46.3955 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.596261 .143637 .167855 -.20627 72.6528 46.3955 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.7803 46.1768 mo
73.8281 46.0723 73.5469 45.9453 73.1538 45.8926 cv
72.7612 45.8398 72.4043 45.8809 72.3564 45.9854 cv
72.3096 46.0889 72.5903 46.2158 72.9844 46.2686 cv
73.3774 46.3213 73.7334 46.2803 73.7803 46.1768 cv
cp
level3{
gsave
clp
[.633363 .0852282 .0994329 -.21892 73.0703 46.0811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633363 .0852282 .0994329 -.21892 73.0703 46.0811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.3169 45.998 mo
73.2466 46.125 73.4741 46.2754 73.8252 46.333 cv
74.1763 46.3896 74.5171 46.333 74.5879 46.2061 cv
74.6582 46.0781 74.4302 45.9287 74.0791 45.8711 cv
73.729 45.8135 73.3872 45.8701 73.3169 45.998 cv
cp
level3{
gsave
clp
[-.565908 -.0919496 -.148791 .269161 73.9517 46.1035 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.565908 -.0919496 -.148791 .269161 73.9517 46.1035 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.6245 46.2461 mo
73.6572 46.3828 74.0928 46.4629 74.5977 46.4268 cv
75.103 46.3906 75.4858 46.252 75.4531 46.1162 cv
75.4204 45.9805 74.9839 45.8994 74.4795 45.9355 cv
73.9751 45.9717 73.5923 46.1113 73.6245 46.2461 cv
cp
level3{
gsave
clp
[-.81251 .0576189 .0684746 .286424 74.5371 46.1797 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.81251 .0576189 .0684746 .286424 74.5371 46.1797 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.9219 46.4639 mo
78.001 46.3662 77.7661 46.2148 77.396 46.126 cv
77.0254 46.0371 76.6597 46.0439 76.5806 46.1406 cv
76.5015 46.2383 76.7363 46.3906 77.1069 46.4805 cv
77.4775 46.5693 77.8423 46.5625 77.9219 46.4639 cv
cp
level3{
gsave
clp
[.59644 .14368 .167905 -.206332 77.2524 46.3027 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.59644 .14368 .167905 -.206332 77.2524 46.3027 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.978 46.1357 mo
74.9077 46.2627 75.1353 46.4131 75.4858 46.4707 cv
75.8374 46.5273 76.1777 46.4707 76.249 46.3438 cv
76.3193 46.2158 76.0918 46.0674 75.7407 46.0098 cv
75.3896 45.9512 75.0479 46.0088 74.978 46.1357 cv
cp
level3{
gsave
clp
[-.565584 -.0918969 -.148706 .269007 75.6128 46.2412 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.565584 -.0918969 -.148706 .269007 75.6128 46.2412 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.5991 46.1211 mo
75.5991 46.2354 75.9063 46.3271 76.2847 46.3271 cv
76.6636 46.3271 76.9707 46.2354 76.9707 46.1211 cv
76.9707 46.0068 76.6636 45.915 76.2847 45.915 cv
75.9063 45.915 75.5991 46.0068 75.5991 46.1211 cv
cp
level3{
gsave
clp
[-.609356 0 0 .240074 76.2847 46.1211 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.609356 0 0 .240074 76.2847 46.1211 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.9141 46.3809 mo
72.9141 46.4697 73.0952 46.542 73.3184 46.542 cv
73.5415 46.542 73.7222 46.4697 73.7222 46.3809 cv
73.7222 46.292 73.5415 46.2207 73.3184 46.2207 cv
73.0952 46.2207 72.9141 46.292 72.9141 46.3809 cv
cp
level3{
gsave
clp
[-.358652 0 0 .187421 73.3179 46.3818 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358652 0 0 .187421 73.3179 46.3818 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.9966 46.3379 mo
76.9966 46.4268 77.1782 46.498 77.4004 46.498 cv
77.6235 46.498 77.8042 46.4268 77.8042 46.3379 cv
77.8042 46.248 77.6235 46.1768 77.4004 46.1768 cv
77.1782 46.1768 76.9966 46.248 76.9966 46.3379 cv
cp
level3{
gsave
clp
[-.358572 0 0 .187379 77.4004 46.3379 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358572 0 0 .187379 77.4004 46.3379 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.3887 46.4834 mo
74.0996 45.9639 73.6255 45.2158 72.9292 44.4307 cv
71.6265 42.9619 70.2163 42.5986 70.2163 42.5986 cv
70.2163 42.5986 71.603 42.6768 73.1826 44.4092 cv
74.0371 45.3467 74.4854 46.042 74.7178 46.4834 cv
74.3887 46.4834 li
cp
level3{
gsave
clp
[2.80784 5.53745 4.94015 -2.85252 71.1958 42.0342 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.80784 5.53745 4.94015 -2.85252 71.1958 42.0342 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
75.0439 46.3574 mo
74.7163 46.0723 74.2954 45.7441 73.7734 45.4063 cv
72.2036 44.3887 70.5283 44.1289 70.5283 44.1289 cv
70.5283 44.1289 72.1699 44.1924 74.0742 45.3936 cv
74.6748 45.7725 75.1113 46.0947 75.4258 46.3574 cv
75.0439 46.3574 li
cp
level3{
gsave
clp
[2.50345 5.14545 4.24747 -2.57514 72.001 43.2363 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.50345 5.14545 4.24747 -2.57514 72.001 43.2363 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
77.0591 46.2686 mo
77.0396 46.2217 77.0176 46.1729 76.9902 46.124 cv
76.6167 45.4434 75.2656 44.9473 75.2656 44.9473 cv
75.2656 44.9473 76.8105 45.3799 77.2998 46.1953 cv
77.3149 46.2207 77.3296 46.2451 77.3423 46.2686 cv
77.0591 46.2686 li
cp
level3{
gsave
clp
[-.0347503 1.28088 1.97941 .781712 76.311 45.3369 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0347503 1.28088 1.97941 .781712 76.311 45.3369 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.8706 46.4395 mo
74.9561 46.1582 75.0977 45.832 75.3281 45.4766 cv
76.0991 44.2881 77.8213 43.623 77.8213 43.623 cv
77.8213 43.623 75.9268 44.1357 74.9561 45.5518 cv
74.7178 45.8994 74.562 46.1934 74.4604 46.4395 cv
74.8706 46.4395 li
cp
level3{
gsave
clp
[-.287447 3.28351 -3.13827 .564642 76.2402 43.9072 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.287447 3.28351 -3.13827 .564642 76.2402 43.9072 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
76.3774 46.2686 mo
75.3184 46.1172 74.4082 46.0947 74.4082 46.0947 cv
74.4082 46.0947 75.5054 46.0684 76.8384 46.2686 cv
76.3774 46.2686 li
cp
level3{
gsave
clp
[2.44067 2.85859 5.76061 -2.21614 75.2671 45.7646 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.44067 2.85859 5.76061 -2.21614 75.2671 45.7646 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.791 46.1211 mo
73.8833 46.0098 73.1587 45.9932 73.1587 45.9932 cv
73.1587 45.9932 74.084 45.9697 75.2661 46.1211 cv
74.791 46.1211 li
cp
level3{
gsave
clp
[2.47323 2.89674 5.83748 -2.24571 73.9106 45.7041 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.47323 2.89674 5.83748 -2.24571 73.9106 45.7041 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.2593 46.0156 mo
74.0127 45.79 73.686 45.5371 73.2578 45.2705 cv
71.7764 44.3525 69.6128 44.0215 69.6128 44.0215 cv
69.6128 44.0215 71.8682 44.1963 73.6865 45.2832 cv
74.1587 45.5664 74.5024 45.8105 74.7524 46.0156 cv
74.2593 46.0156 li
cp
level3{
gsave
clp
[1.41543 3.99679 4.92984 -1.13376 71.6626 43.5508 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.41543 3.99679 4.92984 -1.13376 71.6626 43.5508 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
74.1211 45.7969 mo
72.5024 45.6641 71.0518 45.6758 71.0518 45.6758 cv
71.0518 45.6758 72.9053 45.6006 75.0044 45.7969 cv
74.1211 45.7969 li
cp
level3{
gsave
clp
[3.74844 3.03292 9.84904 -3.21439 72.4082 45.2344 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74844 3.03292 9.84904 -3.21439 72.4082 45.2344 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.5649 46.3096 mo
74.3613 46.2588 74.1431 46.208 73.9097 46.1572 cv
71.3745 45.6035 68.1768 45.5781 68.1768 45.5781 cv
68.1768 45.5781 71.4253 45.4717 74.5181 46.1211 cv
74.8306 46.1865 75.1128 46.249 75.3667 46.3096 cv
74.5649 46.3096 li
cp
level3{
gsave
clp
[3.95164 3.92531 9.84738 -3.48969 70.5552 44.7354 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.95164 3.92531 9.84738 -3.48969 70.5552 44.7354 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.1113 46.3926 mo
75.3428 46.2217 75.6255 46.042 75.9722 45.8633 cv
77.6577 44.9932 80.2773 44.9326 80.2773 44.9326 cv
80.2773 44.9326 77.52 44.793 75.4434 45.8125 cv
75.0137 46.0234 74.6821 46.2178 74.4243 46.3926 cv
75.1113 46.3926 li
cp
level3{
gsave
clp
[-2.04809 5.57783 -8.23995 -4.6998 78.0786 43.6787 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.04809 5.57783 -8.23995 -4.6998 78.0786 43.6787 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
76.0176 46.2559 mo
76.1387 46.1953 76.2754 46.1299 76.4282 46.0625 cv
77.2764 45.6904 78.1738 45.541 78.1738 45.541 cv
78.1738 45.541 77.2954 45.6299 76.2686 46.0713 cv
76.1128 46.1387 75.9766 46.2002 75.8594 46.2559 cv
76.0176 46.2559 li
cp
level3{
gsave
clp
[-1.1145 1.5289 -1.86003 -.305952 77.3716 45.4092 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.1145 1.5289 -1.86003 -.305952 77.3716 45.4092 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.6445 46.124 mo
75.4175 46.0313 75.1489 45.9326 74.8345 45.834 cv
73.4092 45.3867 71.6953 45.3184 71.6953 45.3184 cv
71.6953 45.3184 73.4189 45.291 75.1543 45.8164 cv
75.5264 45.9297 75.8247 46.0322 76.062 46.124 cv
75.6445 46.124 li
cp
level3{
gsave
clp
[2.10812 2.82089 4.70806 -1.96271 73.1304 44.7197 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.10812 2.82089 4.70806 -1.96271 73.1304 44.7197 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
76.5269 46.374 mo
76.647 46.2197 76.8203 46.0459 77.0688 45.8662 cv
77.8604 45.2979 79.2095 45.1611 79.2095 45.1611 cv
79.2095 45.1611 77.7695 45.1865 76.792 45.8564 cv
76.498 46.0576 76.3066 46.2314 76.1831 46.374 cv
76.5269 46.374 li
cp
level3{
gsave
clp
[-.565825 4.18353 -2.84458 -2.22327 77.9155 44.1494 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.565825 4.18353 -2.84458 -2.22327 77.9155 44.1494 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
75.0098 46.2686 mo
74.9326 46.2314 74.8511 46.1943 74.7661 46.1572 cv
73.4951 45.6006 71.9414 45.4619 71.9414 45.4619 cv
71.9414 45.4619 73.5098 45.4932 75.0576 46.1494 cv
75.1543 46.1904 75.2441 46.2295 75.3296 46.2686 cv
75.0098 46.2686 li
cp
level3{
gsave
clp
[1.71043 3.12733 3.97958 -1.59378 73.1499 44.9775 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.71043 3.12733 3.97958 -1.59378 73.1499 44.9775 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.9058 46.2686 mo
75.9326 46.1846 75.9746 46.0957 76.0317 46.0039 cv
76.4487 45.3496 77.9302 45.0234 77.9302 45.0234 cv
77.9302 45.0234 76.2368 45.2578 75.6924 46.0361 cv
75.6338 46.1182 75.5879 46.1953 75.5522 46.2686 cv
75.9058 46.2686 li
cp
level3{
gsave
clp
[.0505818 2.0715 -3.34671 .0549709 76.7266 45.043 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0505818 2.0715 -3.34671 .0549709 76.7266 45.043 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.5137 46.3828 mo
74.6748 46.2764 74.8579 46.168 75.0659 46.0566 cv
76.6758 45.2031 79.3325 44.9375 79.3325 44.9375 cv
79.3325 44.9375 76.5117 45.0488 74.5225 46.0576 cv
74.2974 46.1719 74.1006 46.2803 73.9297 46.3828 cv
74.5137 46.3828 li
cp
level3{
gsave
clp
[-1.46542 4.02386 -6.81343 -1.5626 77.082 44.4219 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.46542 4.02386 -6.81343 -1.5626 77.082 44.4219 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
73.6187 46.3135 mo
73.6777 46.208 73.7617 46.0947 73.8765 45.9746 cv
74.4839 45.3398 76.0039 44.9707 76.0039 44.9707 cv
76.0039 44.9707 74.313 45.2617 73.5415 46.0186 cv
73.4316 46.127 73.3452 46.2246 73.2783 46.3135 cv
73.6187 46.3135 li
cp
level3{
gsave
clp
[-.1604 1.67331 -2.74307 .373693 74.688 45.1504 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.1604 1.67331 -2.74307 .373693 74.688 45.1504 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
75.5513 46.3984 mo
75.8403 46.1387 76.3154 45.7637 77.0103 45.3711 cv
78.313 44.6357 79.7236 44.4541 79.7236 44.4541 cv
79.7236 44.4541 78.3364 44.4922 76.7573 45.3604 cv
75.9038 45.8291 75.4546 46.1777 75.2222 46.3984 cv
75.5513 46.3984 li
cp
level3{
gsave
clp
[-1.9677 3.88058 -3.462 -1.99901 78.3638 43.6689 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.9677 3.88058 -3.462 -1.99901 78.3638 43.6689 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.208 46.4854 mo
75.3398 46.2871 75.5146 46.0645 75.7437 45.832 cv
76.5352 45.0264 77.6909 44.7354 77.6909 44.7354 cv
77.6909 44.7354 76.4858 44.8887 75.5146 45.8428 cv
75.2617 46.0908 75.0781 46.3047 74.9448 46.4854 cv
75.208 46.4854 li
cp
level3{
gsave
clp
[-1.06131 2.99686 -3.69648 -.850109 76.7075 44.5098 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.06131 2.99686 -3.69648 -.850109 76.7075 44.5098 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
76.687 46.3281 mo
76.6265 46.2217 76.5435 46.1084 76.4277 45.9883 cv
75.8208 45.3535 74.3003 44.9844 74.3003 44.9844 cv
74.3003 44.9844 75.9917 45.2744 76.7637 46.0322 cv
76.873 46.1406 76.9585 46.2383 77.0269 46.3281 cv
76.687 46.3281 li
cp
level3{
gsave
clp
[.160524 1.6746 2.74518 .37398 75.6162 45.1641 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.160524 1.6746 2.74518 .37398 75.6162 45.1641 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.6216 46.499 mo
74.6748 46.293 74.7856 46.0371 75.0054 45.752 cv
75.5796 45.002 76.8594 44.582 76.8594 44.582 cv
76.8594 44.582 75.4502 44.9053 74.7285 45.7988 cv
74.4937 46.0889 74.3662 46.3193 74.3003 46.499 cv
74.6216 46.499 li
cp
level3{
gsave
clp
[-2.55957 0 0 2.55957 76.8604 45.541 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.55957 0 0 2.55957 76.8604 45.541 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
73.7515 46.4531 mo
73.5542 46.3691 73.3286 46.2822 73.0732 46.1924 cv
71.3159 45.5771 68.7603 45.3525 68.7603 45.3525 cv
68.7603 45.3525 71.4214 45.4727 73.5791 46.2012 cv
73.8447 46.292 74.0762 46.376 74.2773 46.4531 cv
73.7515 46.4531 li
cp
level3{
gsave
clp
[1.6986 2.69362 5.84559 -.739307 70.9932 45.0703 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.6986 2.69362 5.84559 -.739307 70.9932 45.0703 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
73.1836 46.5039 mo
73.0698 46.1719 72.9058 45.7725 72.6675 45.3496 cv
72.0342 44.2236 71.1167 43.8242 71.1167 43.8242 cv
71.1167 43.8242 72.0713 44.0313 72.8491 45.3643 cv
73.1201 45.8291 73.2915 46.208 73.4009 46.5039 cv
73.1836 46.5039 li
cp
level3{
gsave
clp
[.611979 4.91647 2.08847 -1.44524 72.0132 43.2021 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.611979 4.91647 2.08847 -1.44524 72.0132 43.2021 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
76.562 46.9238 mo
76.562 47.0117 76.7432 47.085 76.9663 47.085 cv
77.1895 47.085 77.3701 47.0117 77.3701 46.9238 cv
77.3701 46.834 77.1895 46.7617 76.9663 46.7617 cv
76.7432 46.7617 76.562 46.834 76.562 46.9238 cv
cp
level3{
gsave
clp
[-.359462 0 0 .187845 76.9658 46.9238 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359462 0 0 .187845 76.9658 46.9238 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.8032 47.1816 mo
75.8032 47.2705 75.9844 47.3428 76.2075 47.3428 cv
76.4307 47.3428 76.6113 47.2705 76.6113 47.1816 cv
76.6113 47.0938 76.4307 47.0205 76.2075 47.0205 cv
75.9844 47.0205 75.8032 47.0938 75.8032 47.1816 cv
cp
level3{
gsave
clp
[-.359049 0 0 .187629 76.207 47.1816 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359049 0 0 .187629 76.207 47.1816 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.9712 46.3662 mo
75.9712 46.4561 76.1528 46.5273 76.3755 46.5273 cv
76.5986 46.5273 76.7793 46.4561 76.7793 46.3662 cv
76.7793 46.2783 76.5986 46.2051 76.3755 46.2051 cv
76.1528 46.2051 75.9712 46.2783 75.9712 46.3662 cv
cp
level3{
gsave
clp
[-.359064 0 0 .187637 76.375 46.3662 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359064 0 0 .187637 76.375 46.3662 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.6172 46.8262 mo
75.6172 46.9141 75.7974 46.9873 76.0205 46.9873 cv
76.2437 46.9873 76.4243 46.9141 76.4243 46.8262 cv
76.4243 46.7363 76.2437 46.6641 76.0205 46.6641 cv
75.7974 46.6641 75.6172 46.7363 75.6172 46.8262 cv
cp
level3{
gsave
clp
[-.359141 0 0 .187677 76.0205 46.8262 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359141 0 0 .187677 76.0205 46.8262 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.7085 46.8262 mo
74.7085 46.9141 74.8901 46.9873 75.1128 46.9873 cv
75.3359 46.9873 75.5166 46.9141 75.5166 46.8262 cv
75.5166 46.7363 75.3359 46.6641 75.1128 46.6641 cv
74.8901 46.6641 74.7085 46.7363 74.7085 46.8262 cv
cp
level3{
gsave
clp
[-.359543 0 0 .187887 75.1123 46.8262 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359543 0 0 .187887 75.1123 46.8262 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.3223 47.0068 mo
74.3223 47.0957 74.5029 47.168 74.7256 47.168 cv
74.9487 47.168 75.1294 47.0957 75.1294 47.0068 cv
75.1294 46.918 74.9487 46.8457 74.7256 46.8457 cv
74.5029 46.8457 74.3223 46.918 74.3223 47.0068 cv
cp
level3{
gsave
clp
[-.358808 0 0 .187503 74.7256 47.0068 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358808 0 0 .187503 74.7256 47.0068 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.0044 46.5576 mo
74.084 46.46 73.8477 46.3076 73.4785 46.2188 cv
73.1079 46.1289 72.7427 46.1357 72.6631 46.2344 cv
72.5835 46.332 72.8188 46.4834 73.1904 46.5723 cv
73.5601 46.6621 73.9243 46.6543 74.0044 46.5576 cv
cp
level3{
gsave
clp
[.596261 .143637 .167855 -.20627 73.3359 46.3955 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.596261 .143637 .167855 -.20627 73.3359 46.3955 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.2471 46.5889 mo
74.2471 46.6953 74.5195 46.7822 74.8564 46.7822 cv
75.1919 46.7822 75.4644 46.6953 75.4644 46.5889 cv
75.4644 46.4824 75.1919 46.3955 74.8564 46.3955 cv
74.5195 46.3955 74.2471 46.4824 74.2471 46.5889 cv
cp
level3{
gsave
clp
[-.54116 0 0 .225483 74.8564 46.5879 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.54116 0 0 .225483 74.8564 46.5879 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.9629 46.792 mo
74.0649 46.7734 74.1064 46.6367 74.0557 46.4854 cv
74.0054 46.334 73.8809 46.2246 73.7773 46.2432 cv
73.6763 46.2607 73.6338 46.3975 73.6851 46.5498 cv
73.7368 46.7012 73.8599 46.8096 73.9629 46.792 cv
cp
level3{
gsave
clp
[.0818682 .243934 .216366 -.0375925 73.8701 46.5186 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0818682 .243934 .216366 -.0375925 73.8701 46.5186 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.5361 46.7617 mo
72.4878 46.8779 72.707 47.0273 73.0249 47.0957 cv
73.3438 47.165 73.6411 47.126 73.6895 47.0107 cv
73.7383 46.8945 73.5186 46.7451 73.2002 46.6768 cv
72.8823 46.6084 72.5845 46.6465 72.5361 46.7617 cv
cp
level3{
gsave
clp
[-.51219 -.110113 -.102605 .244417 73.1147 46.8857 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.51219 -.110113 -.102605 .244417 73.1147 46.8857 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.1665 46.5332 mo
74.1831 46.6064 74.4316 46.6396 74.7236 46.6064 cv
75.0142 46.5742 75.2378 46.4873 75.2217 46.4141 cv
75.2056 46.3398 74.9561 46.3076 74.665 46.3398 cv
74.3735 46.373 74.1499 46.46 74.1665 46.5332 cv
cp
level3{
gsave
clp
[-.468784 .0525506 .0341996 .155149 74.6943 46.4736 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.468784 .0525506 .0341996 .155149 74.6943 46.4736 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.7344 46.6016 mo
75.728 46.709 75.9946 46.8037 76.3306 46.8145 cv
76.6665 46.8252 76.9443 46.7471 76.9502 46.6406 cv
76.957 46.5342 76.6909 46.4395 76.355 46.4277 cv
76.019 46.418 75.7412 46.4951 75.7344 46.6016 cv
cp
level3{
gsave
clp
[-.540644 -.0175209 -.0141836 .225268 76.3413 46.6201 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.540644 -.0175209 -.0141836 .225268 76.3413 46.6201 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.0122 46.4492 mo
73.9756 46.5313 74.1899 46.6514 74.4888 46.7188 cv
74.7881 46.7861 75.0596 46.7744 75.0952 46.6924 cv
75.1309 46.6104 74.9175 46.4902 74.6182 46.4229 cv
74.3193 46.3555 74.0469 46.3672 74.0122 46.4492 cv
cp
level3{
gsave
clp
[-.481514 -.107652 -.0751061 .172744 74.5537 46.5713 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.481514 -.107652 -.0751061 .172744 74.5537 46.5713 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.9727 46.5908 mo
74.9668 46.6826 75.1904 46.7646 75.4727 46.7734 cv
75.7544 46.7822 75.9863 46.7148 75.9932 46.624 cv
75.998 46.5313 75.7749 46.4502 75.4932 46.4414 cv
75.2109 46.4326 74.978 46.5 74.9727 46.5908 cv
cp
level3{
gsave
clp
[-.453143 -.0141868 -.0125178 .193608 75.4829 46.6084 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.453143 -.0141868 -.0125178 .193608 75.4829 46.6084 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.3872 46.5732 mo
75.3872 46.6611 75.5781 46.7314 75.8135 46.7314 cv
76.0483 46.7314 76.2393 46.6611 76.2393 46.5732 cv
76.2393 46.4854 76.0483 46.4141 75.8135 46.4141 cv
75.5781 46.4141 75.3872 46.4854 75.3872 46.5732 cv
cp
level3{
gsave
clp
[-.379311 0 0 .184642 75.8115 46.5723 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.379311 0 0 .184642 75.8115 46.5723 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.7148 46.5967 mo
76.7148 46.6846 76.9058 46.7559 77.1411 46.7559 cv
77.3765 46.7559 77.5669 46.6846 77.5669 46.5967 cv
77.5669 46.5088 77.3765 46.4385 77.1411 46.4385 cv
76.9058 46.4385 76.7148 46.5088 76.7148 46.5967 cv
cp
level3{
gsave
clp
[-.379372 0 0 .184672 77.1392 46.5967 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.379372 0 0 .184672 77.1392 46.5967 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.2944 46.6953 mo
76.3359 46.7646 76.5889 46.752 76.8594 46.668 cv
77.1304 46.585 77.3174 46.4619 77.2764 46.3936 cv
77.2349 46.3252 76.9819 46.3379 76.7114 46.4199 cv
76.4404 46.5039 76.2534 46.6279 76.2944 46.6953 cv
cp
level3{
gsave
clp
[-.436574 .134395 .086814 .144412 76.7832 46.5449 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.436574 .134395 .086814 .144412 76.7832 46.5449 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.4966 46.416 mo
76.5381 46.4844 76.7905 46.4727 77.0615 46.3887 cv
77.3325 46.3057 77.5186 46.1816 77.4775 46.1133 cv
77.437 46.0449 77.1841 46.0566 76.9131 46.1406 cv
76.6416 46.2246 76.4556 46.3477 76.4966 46.416 cv
cp
level3{
gsave
clp
[-.436465 .134361 .0867922 .144375 76.9849 46.2656 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.436465 .134361 .0867922 .144375 76.9849 46.2656 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.2261 46.709 mo
73.2192 46.8154 73.4854 46.9102 73.8223 46.9209 cv
74.1577 46.9307 74.4351 46.8535 74.4419 46.7471 cv
74.4487 46.6406 74.1816 46.5449 73.8447 46.5342 cv
73.5098 46.5234 73.2319 46.6016 73.2261 46.709 cv
cp
level3{
gsave
clp
[-.540556 -.017518 -.0141813 .225232 73.8325 46.7266 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.540556 -.017518 -.0141813 .225232 73.8325 46.7266 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.8164 46.3926 mo
76.7808 46.4746 76.9941 46.5947 77.2939 46.6621 cv
77.5933 46.7295 77.8647 46.7178 77.9004 46.6348 cv
77.936 46.5537 77.7222 46.4326 77.4233 46.3662 cv
77.1235 46.2988 76.8521 46.3105 76.8164 46.3926 cv
cp
level3{
gsave
clp
[-.48164 -.10768 -.0751259 .17279 77.3579 46.5137 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.48164 -.10768 -.0751259 .17279 77.3579 46.5137 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.6211 46.8818 mo
76.6592 46.9102 76.7554 46.8896 76.8374 46.835 cv
76.9185 46.7793 76.9541 46.7119 76.9165 46.6826 cv
76.8784 46.6543 76.7817 46.6748 76.6997 46.7305 cv
76.6196 46.7852 76.5835 46.8525 76.6211 46.8818 cv
cp
level3{
gsave
clp
[-.131369 .088695 .0803275 .0610824 76.77 46.7832 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.131369 .088695 .0803275 .0610824 76.77 46.7832 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.1172 46.6436 mo
75.1113 46.7354 75.335 46.8164 75.6172 46.8262 cv
75.8979 46.834 76.1318 46.7676 76.1372 46.6748 cv
76.1431 46.584 75.9185 46.5029 75.6377 46.4941 cv
75.3555 46.4844 75.1226 46.5508 75.1172 46.6436 cv
cp
level3{
gsave
clp
[-.453041 -.0141836 -.012515 .193565 75.627 46.6611 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.453041 -.0141836 -.012515 .193565 75.627 46.6611 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.7866 46.5537 mo
74.7866 46.6416 74.9771 46.7119 75.2124 46.7119 cv
75.4473 46.7119 75.6387 46.6416 75.6387 46.5537 cv
75.6387 46.4668 75.4473 46.3955 75.2124 46.3955 cv
74.9771 46.3955 74.7866 46.4668 74.7866 46.5537 cv
cp
level3{
gsave
clp
[-.37893 0 0 .184457 75.2109 46.5527 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.37893 0 0 .184457 75.2109 46.5527 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.8662 46.8223 mo
76.8828 46.8965 77.1318 46.9297 77.4238 46.8965 cv
77.7153 46.8633 77.9375 46.7773 77.9219 46.7031 cv
77.9053 46.6299 77.6567 46.5967 77.3647 46.6299 cv
77.0737 46.6621 76.8506 46.749 76.8662 46.8223 cv
cp
level3{
gsave
clp
[-.469005 .0525753 .0342157 .155222 77.394 46.7637 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.469005 .0525753 .0342157 .155222 77.394 46.7637 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.2954 47.3457 mo
73.2954 47.4346 73.4761 47.5068 73.6997 47.5068 cv
73.9229 47.5068 74.1035 47.4346 74.1035 47.3457 cv
74.1035 47.2559 73.9229 47.1846 73.6997 47.1846 cv
73.4761 47.1846 73.2954 47.2559 73.2954 47.3457 cv
cp
level3{
gsave
clp
[-.359064 0 0 .187637 73.6992 47.3457 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359064 0 0 .187637 73.6992 47.3457 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.2939 46.624 mo
74.2939 46.7119 74.4741 46.7852 74.6982 46.7852 cv
74.9214 46.7852 75.1016 46.7119 75.1016 46.624 cv
75.1016 46.5352 74.9214 46.4629 74.6982 46.4629 cv
74.4741 46.4629 74.2939 46.5352 74.2939 46.624 cv
cp
level3{
gsave
clp
[-.358904 0 0 .187553 74.6978 46.624 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358904 0 0 .187553 74.6978 46.624 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.7393 46.4531 mo
76.7393 46.5361 76.8643 46.6025 77.0176 46.6025 cv
77.1719 46.6025 77.2974 46.5361 77.2974 46.4531 cv
77.2974 46.3701 77.1719 46.3027 77.0176 46.3027 cv
76.8643 46.3027 76.7393 46.3701 76.7393 46.4531 cv
cp
level3{
gsave
clp
[-.24845 0 0 .174473 77.0171 46.4512 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.24845 0 0 .174473 77.0171 46.4512 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.1406 46.3926 mo
76.1719 46.4951 76.4697 46.5332 76.8091 46.4785 cv
77.1465 46.4238 77.395 46.2959 77.3643 46.1943 cv
77.3325 46.0918 77.0342 46.0537 76.6963 46.1084 cv
76.3579 46.1641 76.1099 46.291 76.1406 46.3926 cv
cp
level3{
gsave
clp
[-.544514 .0887794 .0651049 .215438 76.7544 46.2949 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.544514 .0887794 .0651049 .215438 76.7544 46.2949 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.5645 46.625 mo
74.6201 46.5342 74.4565 46.3926 74.2002 46.3105 cv
73.9448 46.2275 73.6929 46.2334 73.6377 46.3242 cv
73.583 46.415 73.7456 46.5557 74.002 46.6387 cv
74.2578 46.7217 74.5098 46.7158 74.5645 46.625 cv
cp
level3{
gsave
clp
[.411805 .133718 .115968 -.191702 74.0981 46.4736 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.411805 .133718 .115968 -.191702 74.0981 46.4736 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.8818 46.2715 mo
74.915 46.1748 74.7207 46.0566 74.4492 46.0078 cv
74.1777 45.958 73.9302 45.9971 73.8979 46.0938 cv
73.8657 46.1895 74.0596 46.3076 74.332 46.3564 cv
74.6035 46.4063 74.8496 46.3672 74.8818 46.2715 cv
cp
level3{
gsave
clp
[.437664 .0792526 .0686068 -.203455 74.3896 46.1826 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.437664 .0792526 .0686068 -.203455 74.3896 46.1826 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.561 46.1055 mo
74.5127 46.2246 74.6699 46.3633 74.9131 46.416 cv
75.1553 46.4697 75.3911 46.417 75.4395 46.2988 cv
75.4888 46.1807 75.3315 46.041 75.0884 45.9873 cv
74.8462 45.9346 74.6104 45.9863 74.561 46.1055 cv
cp
level3{
gsave
clp
[-.391369 -.0853895 -.103179 .250239 74.9985 46.2012 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.391369 -.0853895 -.103179 .250239 74.9985 46.2012 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.7739 46.3359 mo
74.7974 46.4629 75.0977 46.5371 75.4463 46.5039 cv
75.7959 46.4697 76.0601 46.3408 76.0381 46.2148 cv
76.0151 46.0889 75.7144 46.0137 75.3647 46.0469 cv
75.0161 46.0811 74.751 46.21 74.7739 46.3359 cv
cp
level3{
gsave
clp
[-.562307 .0532711 .0473521 .266356 75.4058 46.2754 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.562307 .0532711 .0473521 .266356 75.4058 46.2754 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.7441 46.5391 mo
77.7993 46.4482 77.6367 46.3066 77.3809 46.2246 cv
77.125 46.1406 76.8726 46.1475 76.8164 46.2383 cv
76.7617 46.3291 76.9253 46.4697 77.1812 46.5527 cv
77.437 46.6357 77.6895 46.6299 77.7441 46.5391 cv
cp
level3{
gsave
clp
[.412269 .133869 .116099 -.191918 77.2773 46.3877 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.412269 .133869 .116099 -.191918 77.2773 46.3877 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.7095 46.2334 mo
75.6606 46.3516 75.8179 46.4912 76.0605 46.5439 cv
76.3037 46.5977 76.5396 46.5449 76.5879 46.4268 cv
76.6362 46.3086 76.479 46.1689 76.2368 46.1162 cv
75.9941 46.0625 75.7578 46.1152 75.7095 46.2334 cv
cp
level3{
gsave
clp
[-.391208 -.0853546 -.103137 .250136 76.1475 46.3301 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.391208 -.0853546 -.103137 .250136 76.1475 46.3301 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.1387 46.2197 mo
76.1387 46.3262 76.3511 46.4111 76.6128 46.4111 cv
76.8755 46.4111 77.0874 46.3262 77.0874 46.2197 cv
77.0874 46.1143 76.8755 46.0273 76.6128 46.0273 cv
76.3511 46.0273 76.1387 46.1143 76.1387 46.2197 cv
cp
level3{
gsave
clp
[-.42169 0 0 .223875 76.6128 46.2188 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.42169 0 0 .223875 76.6128 46.2188 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.2837 46.4609 mo
74.2837 46.5439 74.4082 46.6113 74.562 46.6113 cv
74.7163 46.6113 74.8413 46.5439 74.8413 46.4609 cv
74.8413 46.3789 74.7163 46.3115 74.562 46.3115 cv
74.4082 46.3115 74.2837 46.3789 74.2837 46.4609 cv
cp
level3{
gsave
clp
[-.248298 0 0 .174366 74.5615 46.46 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248298 0 0 .174366 74.5615 46.46 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.1045 46.4199 mo
77.1045 46.5039 77.2305 46.5703 77.3838 46.5703 cv
77.5381 46.5703 77.6636 46.5039 77.6636 46.4199 cv
77.6636 46.3379 77.5381 46.2715 77.3838 46.2715 cv
77.2305 46.2715 77.1045 46.3379 77.1045 46.4199 cv
cp
level3{
gsave
clp
[-.248402 0 0 .17444 77.3833 46.4199 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248402 0 0 .17444 77.3833 46.4199 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.3018 46.5566 mo
75.1021 46.0742 74.7744 45.3789 74.2935 44.6504 cv
73.3931 43.2861 72.4185 42.9482 72.4185 42.9482 cv
72.4185 42.9482 73.3774 43.0205 74.4688 44.6299 cv
75.0591 45.5 75.3691 46.1465 75.5303 46.5566 cv
75.3018 46.5566 li
cp
level3{
gsave
clp
[2.34088 4.61653 4.11856 -2.37812 72.9272 42.6553 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.34088 4.61653 4.11856 -2.37812 72.9272 42.6553 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
75.7549 46.4395 mo
75.5278 46.1748 75.2378 45.8691 74.8774 45.5557 cv
73.792 44.6104 72.6343 44.3691 72.6343 44.3691 cv
72.6343 44.3691 73.769 44.4287 75.0845 45.5439 cv
75.5 45.8965 75.8013 46.1953 76.019 46.4395 cv
75.7549 46.4395 li
cp
level3{
gsave
clp
[1.98554 4.08096 3.36876 -2.04239 73.5522 43.8125 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.98554 4.08096 3.36876 -2.04239 73.5522 43.8125 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
77.1484 46.3564 mo
77.1348 46.3125 77.1191 46.2686 77.1001 46.2217 cv
76.8423 45.5908 75.9087 45.1299 75.9087 45.1299 cv
75.9087 45.1299 76.9761 45.5313 77.3149 46.2891 cv
77.3247 46.3125 77.334 46.334 77.3438 46.3564 cv
77.1484 46.3564 li
cp
level3{
gsave
clp
[-.0402389 1.48319 2.29204 .90518 76.6353 45.417 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0402389 1.48319 2.29204 .90518 76.6353 45.417 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.6353 46.5146 mo
75.6943 46.2539 75.792 45.9512 75.9517 45.6211 cv
76.4849 44.5176 77.6743 43.8984 77.6743 43.8984 cv
77.6743 43.8984 76.3647 44.375 75.6938 45.6914 cv
75.5303 46.0137 75.4214 46.2861 75.3525 46.5146 cv
75.6353 46.5146 li
cp
level3{
gsave
clp
[-.282905 3.23162 -3.08868 .555719 76.6123 44.0898 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.282905 3.23162 -3.08868 .555719 76.6123 44.0898 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
76.6772 46.3564 mo
75.9448 46.2158 75.3164 46.1953 75.3164 46.1953 cv
75.3164 46.1953 76.0742 46.1709 76.9951 46.3564 cv
76.6772 46.3564 li
cp
level3{
gsave
clp
[1.77634 2.08052 4.19264 -1.61293 75.8965 45.9727 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.77634 2.08052 4.19264 -1.61293 75.8965 45.9727 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.5801 46.2197 mo
74.9531 46.1162 74.4521 46.1006 74.4521 46.1006 cv
74.4521 46.1006 75.0913 46.0791 75.9087 46.2197 cv
75.5801 46.2197 li
cp
level3{
gsave
clp
[1.79036 2.09693 4.22571 -1.62566 74.9619 45.9043 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.79036 2.09693 4.22571 -1.62566 74.9619 45.9043 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.2124 46.1221 mo
75.0425 45.9121 74.8169 45.6768 74.5205 45.4297 cv
73.4966 44.5771 72.001 44.2695 72.001 44.2695 cv
72.001 44.2695 73.5596 44.4316 74.8169 45.4414 cv
75.1436 45.7051 75.3804 45.9307 75.5537 46.1221 cv
75.2124 46.1221 li
cp
level3{
gsave
clp
[1.1897 3.3594 4.14365 -.95295 73.3403 43.9619 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1897 3.3594 4.14365 -.95295 73.3403 43.9619 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
75.1172 45.9189 mo
73.999 45.7959 72.9951 45.8057 72.9951 45.8057 cv
72.9951 45.8057 74.2769 45.7354 75.728 45.9189 cv
75.1172 45.9189 li
cp
level3{
gsave
clp
[2.67025 2.16054 7.01608 -2.28981 73.9209 45.5049 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.67025 2.16054 7.01608 -2.28981 73.9209 45.5049 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.4243 46.3955 mo
75.2837 46.3486 75.1323 46.3008 74.9712 46.2529 cv
73.2197 45.7383 71.0093 45.7158 71.0093 45.7158 cv
71.0093 45.7158 73.2539 45.6172 75.3921 46.2197 cv
75.6074 46.2803 75.8027 46.3389 75.978 46.3955 cv
75.4243 46.3955 li
cp
level3{
gsave
clp
[2.94078 2.92118 7.32833 -2.597 72.5894 45.1563 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.94078 2.92118 7.32833 -2.597 72.5894 45.1563 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.8013 46.4727 mo
75.9614 46.3125 76.1577 46.1465 76.3965 45.9805 cv
77.5615 45.1729 79.3726 45.1152 79.3726 45.1152 cv
79.3726 45.1152 77.4663 44.9863 76.0313 45.9326 cv
75.7344 46.1289 75.5054 46.3096 75.3267 46.4727 cv
75.8013 46.4727 li
cp
level3{
gsave
clp
[-1.56439 4.26052 -6.29393 -3.58985 77.9048 44.2793 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.56439 4.26052 -6.29393 -3.58985 77.9048 44.2793 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
76.4277 46.3457 mo
76.5122 46.2891 76.606 46.2285 76.7119 46.166 cv
77.2983 45.8193 77.918 45.6807 77.918 45.6807 cv
77.918 45.6807 77.311 45.7627 76.6016 46.1738 cv
76.4932 46.2363 76.4004 46.293 76.3188 46.3457 cv
76.4277 46.3457 li
cp
level3{
gsave
clp
[-.944144 1.2952 -1.57572 -.259187 77.4189 45.5986 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.944144 1.2952 -1.57572 -.259187 77.4189 45.5986 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
76.1704 46.2227 mo
76.0137 46.1357 75.8276 46.0449 75.6104 45.9531 cv
74.6245 45.5371 73.4409 45.4736 73.4409 45.4736 cv
73.4409 45.4736 74.6323 45.4482 75.8315 45.9375 cv
76.0884 46.042 76.2944 46.1377 76.4595 46.2227 cv
76.1704 46.2227 li
cp
level3{
gsave
clp
[1.61148 2.15634 3.59893 -1.50033 74.3784 45.083 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.61148 2.15634 3.59893 -1.50033 74.3784 45.083 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
76.7803 46.4551 mo
76.8633 46.3115 76.9829 46.1494 77.1548 45.9834 cv
77.7017 45.4551 78.6338 45.3281 78.6338 45.3281 cv
78.6338 45.3281 77.6396 45.3516 76.9634 45.9736 cv
76.7598 46.1611 76.6274 46.3213 76.5425 46.4551 cv
76.7803 46.4551 li
cp
level3{
gsave
clp
[-.436669 3.22859 -2.19527 -1.71578 77.7573 44.6426 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.436669 3.22859 -2.19527 -1.71578 77.7573 44.6426 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
75.7314 46.3564 mo
75.6777 46.3223 75.6221 46.2881 75.563 46.2529 cv
74.6851 45.7363 73.6104 45.6074 73.6104 45.6074 cv
73.6104 45.6074 74.6953 45.6367 75.7646 46.2461 cv
75.8315 46.2842 75.8936 46.3213 75.9526 46.3564 cv
75.7314 46.3564 li
cp
level3{
gsave
clp
[1.33373 2.43858 3.10314 -1.24277 74.4028 45.29 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.33373 2.43858 3.10314 -1.24277 74.4028 45.29 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
76.3506 46.3564 mo
76.3691 46.2783 76.3979 46.1963 76.438 46.1113 cv
76.7256 45.5029 77.75 45.2002 77.75 45.2002 cv
77.75 45.2002 76.5796 45.418 76.2026 46.1406 cv
76.1626 46.2178 76.1309 46.2891 76.106 46.3564 cv
76.3506 46.3564 li
cp
level3{
gsave
clp
[.0473019 1.93718 -3.1297 .0514064 76.9146 45.2139 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0473019 1.93718 -3.1297 .0514064 76.9146 45.2139 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.3887 46.4629 mo
75.5 46.3643 75.6265 46.2627 75.77 46.1611 cv
76.8828 45.3672 78.7197 45.1201 78.7197 45.1201 cv
78.7197 45.1201 76.7695 45.2236 75.395 46.1611 cv
75.2393 46.2676 75.103 46.3682 74.9849 46.4629 cv
75.3887 46.4629 li
cp
level3{
gsave
clp
[-1.20062 3.29676 -5.58225 -1.28024 77.2217 44.7764 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.20062 3.29676 -5.58225 -1.28024 77.2217 44.7764 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
74.769 46.3984 mo
74.811 46.3008 74.8682 46.1953 74.9478 46.084 cv
75.3687 45.4941 76.4185 45.1514 76.4185 45.1514 cv
76.4185 45.1514 75.2495 45.4209 74.7163 46.124 cv
74.6406 46.2246 74.5811 46.3154 74.5347 46.3984 cv
74.769 46.3984 li
cp
level3{
gsave
clp
[-.161114 1.68075 -2.75527 .375355 75.5244 45.2734 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.161114 1.68075 -2.75527 .375355 75.5244 45.2734 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
76.106 46.4775 mo
76.3057 46.2354 76.6343 45.8877 77.1147 45.5234 cv
78.0146 44.8389 78.9897 44.6709 78.9897 44.6709 cv
78.9897 44.6709 78.0308 44.707 76.939 45.5127 cv
76.3491 45.9492 76.0386 46.2725 75.8784 46.4775 cv
76.106 46.4775 li
cp
level3{
gsave
clp
[-1.56045 3.07742 -2.74547 -1.58528 78.1406 44.1807 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.56045 3.07742 -2.74547 -1.58528 78.1406 44.1807 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.8687 46.5576 mo
75.96 46.374 76.0806 46.168 76.2383 45.9512 cv
76.7856 45.2031 77.585 44.9326 77.585 44.9326 cv
77.585 44.9326 76.7515 45.0742 76.0806 45.9609 cv
75.9058 46.1914 75.7793 46.3906 75.687 46.5576 cv
75.8687 46.5576 li
cp
level3{
gsave
clp
[-.918685 2.59412 -3.19972 -.735866 76.9731 44.792 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.918685 2.59412 -3.19972 -.735866 76.9731 44.792 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
76.8906 46.4111 mo
76.8491 46.3135 76.7915 46.208 76.7119 46.0967 cv
76.292 45.5068 75.2412 45.1641 75.2412 45.1641 cv
75.2412 45.1641 76.4102 45.4336 76.9434 46.1367 cv
77.02 46.2383 77.0791 46.3291 77.126 46.4111 cv
76.8906 46.4111 li
cp
level3{
gsave
clp
[.161116 1.68078 2.75532 .375361 76.1353 45.2861 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.161116 1.68078 2.75532 .375361 76.1353 45.2861 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.4629 46.5703 mo
75.5 46.3789 75.5771 46.1416 75.7285 45.876 cv
76.125 45.1807 77.0103 44.79 77.0103 44.79 cv
77.0103 44.79 76.0356 45.0908 75.5371 45.9199 cv
75.375 46.1895 75.2866 46.4043 75.2412 46.5703 cv
75.4629 46.5703 li
cp
level3{
gsave
clp
[-1.76953 0 0 1.76953 77.0107 45.6797 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.76953 0 0 1.76953 77.0107 45.6797 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.8623 46.5283 mo
74.7256 46.4502 74.5693 46.3691 74.3926 46.2861 cv
73.1782 45.7148 71.4126 45.5059 71.4126 45.5059 cv
71.4126 45.5059 73.2515 45.6172 74.7427 46.2949 cv
74.9268 46.3779 75.0864 46.4561 75.2256 46.5283 cv
74.8623 46.5283 li
cp
level3{
gsave
clp
[1.42125 2.2538 4.89111 -.618591 72.8794 45.3203 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.42125 2.2538 4.89111 -.618591 72.8794 45.3203 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
74.4697 46.5752 mo
74.3911 46.2676 74.2773 45.8965 74.1128 45.5029 cv
73.6753 44.458 73.0405 44.0859 73.0405 44.0859 cv
73.0405 44.0859 73.7012 44.2783 74.2383 45.5166 cv
74.4248 45.9473 74.5439 46.2998 74.6196 46.5752 cv
74.4697 46.5752 li
cp
level3{
gsave
clp
[.514538 4.13366 1.75594 -1.21512 73.6235 43.6816 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.514538 4.13366 1.75594 -1.21512 73.6235 43.6816 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
76.8042 46.9648 mo
76.8042 47.0479 76.9297 47.1143 77.0835 47.1143 cv
77.2378 47.1143 77.3628 47.0479 77.3628 46.9648 cv
77.3628 46.8818 77.2378 46.8154 77.0835 46.8154 cv
76.9297 46.8154 76.8042 46.8818 76.8042 46.9648 cv
cp
level3{
gsave
clp
[-.248294 0 0 .174364 77.083 46.9639 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248294 0 0 .174364 77.083 46.9639 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.2798 47.2051 mo
76.2798 47.2881 76.4048 47.3545 76.5591 47.3545 cv
76.7134 47.3545 76.8384 47.2881 76.8384 47.2051 cv
76.8384 47.1221 76.7134 47.0547 76.5591 47.0547 cv
76.4048 47.0547 76.2798 47.1221 76.2798 47.2051 cv
cp
level3{
gsave
clp
[-.248551 0 0 .174544 76.5581 47.2031 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248551 0 0 .174544 76.5581 47.2031 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.3965 46.4482 mo
76.3965 46.5303 76.5215 46.5977 76.6758 46.5977 cv
76.8301 46.5977 76.9551 46.5303 76.9551 46.4482 cv
76.9551 46.3652 76.8301 46.2988 76.6758 46.2988 cv
76.5215 46.2988 76.3965 46.3652 76.3965 46.4482 cv
cp
level3{
gsave
clp
[-.248297 0 0 .174366 76.6753 46.4473 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248297 0 0 .174366 76.6753 46.4473 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.1509 46.874 mo
76.1509 46.957 76.2754 47.0244 76.4307 47.0244 cv
76.584 47.0244 76.709 46.957 76.709 46.874 cv
76.709 46.792 76.584 46.7246 76.4307 46.7246 cv
76.2754 46.7246 76.1509 46.792 76.1509 46.874 cv
cp
level3{
gsave
clp
[-.248468 0 0 .174486 76.4292 46.873 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248468 0 0 .174486 76.4292 46.873 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.5234 46.874 mo
75.5234 46.957 75.6484 47.0244 75.8027 47.0244 cv
75.957 47.0244 76.082 46.957 76.082 46.874 cv
76.082 46.792 75.957 46.7246 75.8027 46.7246 cv
75.6484 46.7246 75.5234 46.792 75.5234 46.874 cv
cp
level3{
gsave
clp
[-.248539 0 0 .174536 75.8013 46.873 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248539 0 0 .174536 75.8013 46.873 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.2559 47.042 mo
75.2559 47.125 75.3813 47.1924 75.5347 47.1924 cv
75.689 47.1924 75.814 47.125 75.814 47.042 cv
75.814 46.96 75.689 46.8936 75.5347 46.8936 cv
75.3813 46.8936 75.2559 46.96 75.2559 47.042 cv
cp
level3{
gsave
clp
[-.248082 0 0 .174215 75.5347 47.042 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248082 0 0 .174215 75.5347 47.042 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.0371 46.625 mo
75.0913 46.5342 74.9282 46.3926 74.6733 46.3105 cv
74.4175 46.2275 74.1646 46.2334 74.1094 46.3242 cv
74.0552 46.415 74.2178 46.5557 74.4736 46.6387 cv
74.73 46.7217 74.981 46.7158 75.0371 46.625 cv
cp
level3{
gsave
clp
[.412209 .133849 .116082 -.19189 74.5703 46.4736 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.412209 .133849 .116082 -.19189 74.5703 46.4736 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.2051 46.6543 mo
75.2051 46.7529 75.3926 46.833 75.625 46.833 cv
75.8569 46.833 76.0464 46.7529 76.0464 46.6543 cv
76.0464 46.5547 75.8569 46.4746 75.625 46.4746 cv
75.3926 46.4746 75.2051 46.5547 75.2051 46.6543 cv
cp
level3{
gsave
clp
[-.373708 0 0 .209324 75.625 46.6543 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.373708 0 0 .209324 75.625 46.6543 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.0083 46.8428 mo
75.0781 46.8262 75.1084 46.6982 75.0728 46.5576 cv
75.0376 46.417 74.9517 46.3164 74.8799 46.333 cv
74.8091 46.3496 74.7808 46.4766 74.8159 46.6182 cv
74.8516 46.7588 74.937 46.8594 75.0083 46.8428 cv
cp
level3{
gsave
clp
[.0570823 .22714 .149841 -.0344872 74.9424 46.5889 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0570823 .22714 .149841 -.0344872 74.9424 46.5889 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.022 46.8154 mo
73.9883 46.9229 74.1396 47.0615 74.3599 47.125 cv
74.5801 47.1885 74.7856 47.1533 74.8193 47.0459 cv
74.8525 46.9385 74.7012 46.7998 74.481 46.7354 cv
74.2607 46.6719 74.0552 46.708 74.022 46.8154 cv
cp
level3{
gsave
clp
[-.354038 -.103015 -.0710445 .227342 74.4209 46.9307 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.354038 -.103015 -.0710445 .227342 74.4209 46.9307 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.1489 46.6025 mo
75.1597 46.6709 75.332 46.7012 75.5332 46.6709 cv
75.7344 46.6406 75.8892 46.5605 75.8774 46.4912 cv
75.8672 46.4229 75.6943 46.3926 75.4932 46.4229 cv
75.292 46.4531 75.1367 46.5342 75.1489 46.6025 cv
cp
level3{
gsave
clp
[-.32412 .0484997 .0236584 .144316 75.5132 46.5479 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.32412 .0484997 .0236584 .144316 75.5132 46.5479 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.2324 46.666 mo
76.228 46.7656 76.4126 46.8535 76.6445 46.8633 cv
76.877 46.873 77.0688 46.8008 77.0728 46.7021 cv
77.0776 46.6035 76.8936 46.5146 76.6611 46.5049 cv
76.4292 46.4951 76.2368 46.5674 76.2324 46.666 cv
cp
level3{
gsave
clp
[-.372996 -.0153448 -.00944294 .208925 76.6543 46.6836 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.372996 -.0153448 -.00944294 .208925 76.6543 46.6836 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.0415 46.5244 mo
75.0166 46.6016 75.1641 46.7119 75.3716 46.7754 cv
75.5786 46.8369 75.7661 46.8262 75.7905 46.75 cv
75.8149 46.6738 75.6675 46.5615 75.4609 46.5 cv
75.2544 46.4375 75.0659 46.4482 75.0415 46.5244 cv
cp
level3{
gsave
clp
[-.332445 -.100562 -.0520555 .160899 75.4155 46.6377 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.332445 -.100562 -.0520555 .160899 75.4155 46.6377 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.7061 46.6563 mo
75.7021 46.7412 75.8564 46.8174 76.0518 46.8262 cv
76.2461 46.834 76.4063 46.7725 76.4111 46.6855 cv
76.4146 46.6016 76.2598 46.5254 76.0659 46.5176 cv
75.8706 46.5088 75.7095 46.5703 75.7061 46.6563 cv
cp
level3{
gsave
clp
[-.313589 -.0130169 -.00828347 .17987 76.0586 46.6719 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.313589 -.0130169 -.00828347 .17987 76.0586 46.6719 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.9927 46.6396 mo
75.9927 46.7207 76.1235 46.7861 76.2866 46.7861 cv
76.4487 46.7861 76.582 46.7207 76.582 46.6396 cv
76.582 46.5576 76.4487 46.4922 76.2866 46.4922 cv
76.1235 46.4922 75.9927 46.5576 75.9927 46.6396 cv
cp
level3{
gsave
clp
[-.261865 0 0 .171812 76.2886 46.6406 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.261865 0 0 .171812 76.2886 46.6406 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.9102 46.6611 mo
76.9102 46.7422 77.042 46.8086 77.2046 46.8086 cv
77.3672 46.8086 77.499 46.7422 77.499 46.6611 cv
77.499 46.5801 77.3672 46.5137 77.2046 46.5137 cv
77.042 46.5137 76.9102 46.5801 76.9102 46.6611 cv
cp
level3{
gsave
clp
[-.261982 0 0 .171888 77.2046 46.6621 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.261982 0 0 .171888 77.2046 46.6621 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.6196 46.7539 mo
76.6479 46.8174 76.8223 46.8057 77.0103 46.7285 cv
77.1978 46.6514 77.3262 46.5361 77.2974 46.4736 cv
77.2695 46.4102 77.0947 46.4199 76.9072 46.498 cv
76.7202 46.5752 76.5908 46.6904 76.6196 46.7539 cv
cp
level3{
gsave
clp
[-.301687 .125407 .0603374 .133689 76.9561 46.6123 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.301687 .125407 .0603374 .133689 76.9561 46.6123 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.7588 46.4941 mo
76.7876 46.5576 76.9614 46.5459 77.1494 46.4678 cv
77.3369 46.3906 77.4653 46.2764 77.4375 46.2129 cv
77.4087 46.1484 77.2349 46.1611 77.0474 46.2383 cv
76.8594 46.3154 76.731 46.4297 76.7588 46.4941 cv
cp
level3{
gsave
clp
[-.301465 .125315 .060293 .13359 77.0957 46.3516 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.301465 .125315 .060293 .13359 77.0957 46.3516 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.4985 46.7656 mo
74.4937 46.8643 74.6782 46.9521 74.9106 46.9629 cv
75.1431 46.9717 75.3345 46.9004 75.3389 46.8008 cv
75.3433 46.7021 75.1587 46.6143 74.9268 46.6035 cv
74.6943 46.5938 74.5029 46.666 74.4985 46.7656 cv
cp
level3{
gsave
clp
[-.37339 -.015361 -.00945291 .209146 74.9204 46.7832 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.37339 -.015361 -.00945291 .209146 74.9204 46.7832 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.9805 46.4717 mo
76.9556 46.5479 77.103 46.6602 77.3105 46.7217 cv
77.5171 46.7852 77.7046 46.7734 77.7295 46.6973 cv
77.7544 46.6211 77.6064 46.5088 77.3999 46.4463 cv
77.1934 46.3848 77.0049 46.3965 76.9805 46.4717 cv
cp
level3{
gsave
clp
[-.332387 -.100544 -.0520464 .160871 77.355 46.585 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.332387 -.100544 -.0520464 .160871 77.355 46.585 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.8452 46.9268 mo
76.8716 46.9531 76.938 46.9336 76.9941 46.8828 cv
77.0508 46.832 77.0752 46.7686 77.0493 46.7422 cv
77.0229 46.7148 76.9565 46.7354 76.9004 46.7861 cv
76.8438 46.8369 76.8188 46.9004 76.8452 46.9268 cv
cp
level3{
gsave
clp
[-.000837158 .000750181 .000510993 .000521865 774.463 270.045 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.000837158 .000750181 .000510993 .000521865 774.463 270.045 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.8057 46.7051 mo
75.8018 46.7891 75.9561 46.8662 76.1509 46.874 cv
76.3457 46.8828 76.5068 46.8193 76.5107 46.7354 cv
76.5146 46.6494 76.3604 46.5742 76.165 46.5654 cv
75.9707 46.5576 75.8096 46.6191 75.8057 46.7051 cv
cp
level3{
gsave
clp
[-.313589 -.0130169 -.00828347 .17987 76.1582 46.7197 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.313589 -.0130169 -.00828347 .17987 76.1582 46.7197 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.5771 46.6211 mo
75.5771 46.7021 75.709 46.7686 75.8716 46.7686 cv
76.0342 46.7686 76.166 46.7021 76.166 46.6211 cv
76.166 46.54 76.0342 46.4736 75.8716 46.4736 cv
75.709 46.4736 75.5771 46.54 75.5771 46.6211 cv
cp
level3{
gsave
clp
[-.262027 0 0 .171918 75.8726 46.6221 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.262027 0 0 .171918 75.8726 46.6221 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.0146 46.8711 mo
77.0259 46.9404 77.1982 46.9707 77.3999 46.9404 cv
77.6016 46.9092 77.7554 46.8291 77.7441 46.7607 cv
77.7324 46.6924 77.561 46.6611 77.3589 46.6914 cv
77.1577 46.7217 77.0034 46.8027 77.0146 46.8711 cv
cp
level3{
gsave
clp
[-.324797 .048601 .0237078 .144618 77.3794 46.8174 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.324797 .048601 .0237078 .144618 77.3794 46.8174 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.5469 47.3564 mo
74.5469 47.4395 74.6719 47.5068 74.8262 47.5068 cv
74.9805 47.5068 75.105 47.4395 75.105 47.3564 cv
75.105 47.2744 74.9805 47.207 74.8262 47.207 cv
74.6719 47.207 74.5469 47.2744 74.5469 47.3564 cv
cp
level3{
gsave
clp
[-.248367 0 0 .174415 74.8252 47.3555 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248367 0 0 .174415 74.8252 47.3555 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.2368 46.6865 mo
75.2368 46.7695 75.3618 46.8359 75.5161 46.8359 cv
75.6704 46.8359 75.7949 46.7695 75.7949 46.6865 cv
75.7949 46.6045 75.6704 46.5371 75.5161 46.5371 cv
75.3618 46.5371 75.2368 46.6045 75.2368 46.6865 cv
cp
level3{
gsave
clp
[-.248136 0 0 .174253 75.5151 46.6855 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248136 0 0 .174253 75.5151 46.6855 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.5894 46.3545 mo
76.5894 46.4453 76.3867 46.5176 76.1362 46.5176 cv
75.8867 46.5176 75.6831 46.4453 75.6831 46.3545 cv
75.6831 46.2637 75.8867 46.1914 76.1362 46.1914 cv
76.3867 46.1914 76.5894 46.2637 76.5894 46.3545 cv
cp
level3{
gsave
clp
[.402232 0 0 .190677 76.1362 46.3535 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402232 0 0 .190677 76.1362 46.3535 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.5601 46.2891 mo
77.5093 46.4004 77.0254 46.4424 76.4766 46.3828 cv
75.9282 46.3223 75.5249 46.1836 75.5747 46.0713 cv
75.6255 45.96 76.1104 45.918 76.6582 45.9775 cv
77.2061 46.0381 77.6099 46.1768 77.5601 46.2891 cv
cp
level3{
gsave
clp
[.883664 .0971319 -.106608 .235723 76.5679 46.1797 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.883664 .0971319 -.106608 .235723 76.5679 46.1797 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.1162 46.542 mo
80.0264 46.4434 80.292 46.2891 80.7065 46.1982 cv
81.1211 46.1074 81.5303 46.1143 81.6196 46.2139 cv
81.709 46.3125 81.4448 46.4668 81.0288 46.5576 cv
80.6133 46.6484 80.2056 46.6416 80.1162 46.542 cv
cp
level3{
gsave
clp
[-.66871 .145578 -.188186 -.20949 80.8677 46.3779 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.66871 .145578 -.188186 -.20949 80.8677 46.3779 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.6011 46.1553 mo
79.5474 46.0498 79.8638 45.9209 80.3042 45.8672 cv
80.7441 45.8135 81.1445 45.8555 81.1973 45.9609 cv
81.2505 46.0674 80.9355 46.1953 80.4941 46.249 cv
80.0537 46.3027 79.6543 46.2607 79.6011 46.1553 cv
cp
level3{
gsave
clp
[-.709268 .0862943 -.111119 -.222237 80.3989 46.0576 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.709268 .0862943 -.111119 -.222237 80.3989 46.0576 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.1211 45.9746 mo
80.2002 46.1045 79.9448 46.2559 79.5513 46.3145 cv
79.1577 46.373 78.7759 46.3154 78.6963 46.1855 cv
78.6172 46.0557 78.8726 45.9033 79.2666 45.8457 cv
79.6597 45.7871 80.0425 45.8447 80.1211 45.9746 cv
cp
level3{
gsave
clp
[.633756 -.0934081 .166716 .27313 79.4092 46.0811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633756 -.0934081 .166716 .27313 79.4092 46.0811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.7759 46.2266 mo
79.7397 46.3643 79.2515 46.4463 78.686 46.4102 cv
78.1187 46.373 77.6904 46.2314 77.7256 46.0938 cv
77.7627 45.9561 78.2515 45.874 78.8174 45.9111 cv
79.3843 45.9473 79.813 46.0889 79.7759 46.2266 cv
cp
level3{
gsave
clp
[.911254 .0591723 -.076924 .291128 78.7485 46.1611 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.911254 .0591723 -.076924 .291128 78.7485 46.1611 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.9585 46.4482 mo
74.8691 46.3486 75.1338 46.1953 75.5483 46.1045 cv
75.9639 46.0137 76.373 46.0205 76.4624 46.1201 cv
76.5518 46.2188 76.2866 46.373 75.8716 46.4629 cv
75.4561 46.5547 75.0479 46.5469 74.9585 46.4482 cv
cp
level3{
gsave
clp
[-.668408 .145512 -.188101 -.209395 75.71 46.2832 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.668408 .145512 -.188101 -.209395 75.71 46.2832 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
78.2593 46.1143 mo
78.3379 46.2441 78.083 46.3965 77.6895 46.4541 cv
77.2959 46.5127 76.9131 46.4551 76.834 46.3262 cv
76.7554 46.1953 77.0103 46.0439 77.4033 45.9863 cv
77.7979 45.9268 78.1807 45.9854 78.2593 46.1143 cv
cp
level3{
gsave
clp
[.633679 -.0933968 .166695 .273097 77.5474 46.2207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633679 -.0933968 .166695 .273097 77.5474 46.2207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.5625 46.0986 mo
77.5625 46.2148 77.2183 46.3086 76.7939 46.3086 cv
76.3687 46.3086 76.0249 46.2148 76.0249 46.0986 cv
76.0249 45.9834 76.3687 45.8896 76.7939 45.8896 cv
77.2183 45.8896 77.5625 45.9834 77.5625 46.0986 cv
cp
level3{
gsave
clp
[.684188 0 0 .243845 76.7935 46.0996 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.684188 0 0 .243845 76.7935 46.0996 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.5728 46.3633 mo
80.5728 46.4541 80.3706 46.5273 80.1201 46.5273 cv
79.8696 46.5273 79.668 46.4541 79.668 46.3633 cv
79.668 46.2725 79.8696 46.2002 80.1201 46.2002 cv
80.3706 46.2002 80.5728 46.2725 80.5728 46.3633 cv
cp
level3{
gsave
clp
[.402261 0 0 .190691 80.1201 46.3633 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402261 0 0 .190691 80.1201 46.3633 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.9956 46.3193 mo
75.9956 46.4102 75.793 46.4824 75.543 46.4824 cv
75.293 46.4824 75.0898 46.4102 75.0898 46.3193 cv
75.0898 46.2285 75.293 46.1553 75.543 46.1553 cv
75.793 46.1553 75.9956 46.2285 75.9956 46.3193 cv
cp
level3{
gsave
clp
[.40255 0 0 .190828 75.5425 46.3184 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40255 0 0 .190828 75.5425 46.3184 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
78.9204 46.4678 mo
79.2441 45.9395 79.7759 45.1797 80.5562 44.3818 cv
82.0166 42.8906 83.5972 42.5225 83.5972 42.5225 cv
83.5972 42.5225 82.0425 42.6006 80.2715 44.3613 cv
79.314 45.3125 78.8115 46.0195 78.5503 46.4678 cv
78.9204 46.4678 li
cp
level3{
gsave
clp
[-2.97088 5.85897 -5.22699 -3.01814 82.4189 41.8413 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.97088 5.85897 -5.22699 -3.01814 82.4189 41.8413 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
78.1855 46.3389 mo
78.5527 46.0498 79.0239 45.7158 79.6094 45.373 cv
81.3701 44.3389 83.2485 44.0762 83.2485 44.0762 cv
83.2485 44.0762 81.4072 44.1396 79.272 45.3604 cv
78.5986 45.7451 78.1099 46.0732 77.7568 46.3389 cv
78.1855 46.3389 li
cp
level3{
gsave
clp
[-2.69343 5.53593 -4.5698 -2.77056 81.5513 43.0479 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.69343 5.53593 -4.5698 -2.77056 81.5513 43.0479 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.9253 46.248 mo
75.9473 46.2012 75.9731 46.1523 76.0029 46.1016 cv
76.4214 45.4111 77.937 44.9072 77.937 44.9072 cv
77.937 44.9072 76.2051 45.3467 75.6558 46.1748 cv
75.6392 46.2002 75.6235 46.2246 75.6084 46.248 cv
75.9253 46.248 li
cp
level3{
gsave
clp
[.0324653 1.19666 -1.84925 .730311 76.7661 45.3213 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0324653 1.19666 -1.84925 .730311 76.7661 45.3213 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
78.3794 46.4229 mo
78.2832 46.1357 78.1245 45.8057 77.8657 45.4443 cv
77.002 44.2373 75.0718 44.0508 75.0718 44.0508 cv
75.0718 44.0508 77.1963 44.083 78.2842 45.5205 cv
78.5503 45.874 78.7261 46.1719 78.8384 46.4229 cv
78.3794 46.4229 li
cp
level3{
gsave
clp
[.229211 2.61828 2.50247 .450247 76.8774 44.3301 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.229211 2.61828 2.50247 .450247 76.8774 44.3301 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
76.6899 46.248 mo
77.877 46.0947 78.8975 46.0732 78.8975 46.0732 cv
78.8975 46.0732 77.6675 46.0459 76.1733 46.248 cv
76.6899 46.248 li
cp
level3{
gsave
clp
[-2.69164 3.15255 -6.35298 -2.44403 77.9268 45.7002 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.69164 3.15255 -6.35298 -2.44403 77.9268 45.7002 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
78.4688 46.0986 mo
79.4863 45.9863 80.2979 45.9688 80.2979 45.9688 cv
80.2979 45.9688 79.2617 45.9463 77.9355 46.0986 cv
78.4688 46.0986 li
cp
level3{
gsave
clp
[-2.73668 3.20529 -6.45928 -2.48492 79.4487 45.6426 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.73668 3.20529 -6.45928 -2.48492 79.4487 45.6426 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
79.0649 45.9922 mo
79.3418 45.7627 79.708 45.5049 80.1885 45.2354 cv
81.8481 44.3027 84.2744 43.9658 84.2744 43.9658 cv
84.2744 43.9658 81.7461 44.1436 79.707 45.248 cv
79.1768 45.5361 78.7925 45.7832 78.5117 45.9922 cv
79.0649 45.9922 li
cp
level3{
gsave
clp
[-1.49365 4.21768 -5.2023 -1.19641 81.9429 43.4297 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.49365 4.21768 -5.2023 -1.19641 81.9429 43.4297 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
79.2197 45.7695 mo
81.0342 45.6357 82.6616 45.6475 82.6616 45.6475 cv
82.6616 45.6475 80.583 45.5703 78.2295 45.7695 cv
79.2197 45.7695 li
cp
level3{
gsave
clp
[-4.16667 3.37132 -10.9479 -3.57304 81.1357 45.1494 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.16667 3.37132 -10.9479 -3.57304 81.1357 45.1494 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
78.7212 46.292 mo
78.9497 46.2393 79.1948 46.1885 79.4565 46.1357 cv
82.2988 45.5732 85.8848 45.5479 85.8848 45.5479 cv
85.8848 45.5479 82.2422 45.4395 78.7749 46.0986 cv
78.4238 46.165 78.1079 46.2295 77.8228 46.292 cv
78.7212 46.292 li
cp
level3{
gsave
clp
[-4.33934 4.31042 -10.8135 -3.83207 83.1885 44.5928 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.33934 4.31042 -10.8135 -3.83207 83.1885 44.5928 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
78.1099 46.376 mo
77.8506 46.2012 77.5322 46.0195 77.1445 45.8379 cv
75.2549 44.9541 72.3174 44.8916 72.3174 44.8916 cv
72.3174 44.8916 75.4092 44.75 77.7378 45.7852 cv
78.2192 46 78.5913 46.1973 78.8794 46.376 cv
78.1099 46.376 li
cp
level3{
gsave
clp
[2.23113 6.07632 8.97636 -5.11982 74.8062 43.4736 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.23113 6.07632 8.97636 -5.11982 74.8062 43.4736 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
77.0933 46.2363 mo
76.957 46.1748 76.8042 46.1084 76.6323 46.04 cv
75.6821 45.6611 74.6768 45.5098 74.6768 45.5098 cv
74.6768 45.5098 75.6606 45.6006 76.812 46.0488 cv
76.9873 46.1172 77.1387 46.1797 77.2705 46.2363 cv
77.0933 46.2363 li
cp
level3{
gsave
clp
[1.1731 1.60929 1.95784 -.32204 75.5981 45.3584 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1731 1.60929 1.95784 -.32204 75.5981 45.3584 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
77.5117 46.1025 mo
77.7661 46.0078 78.0669 45.9082 78.4204 45.8086 cv
80.0181 45.3535 81.939 45.2832 81.939 45.2832 cv
81.939 45.2832 80.0068 45.2559 78.061 45.79 cv
77.6431 45.9053 77.3105 46.0098 77.0435 46.1025 cv
77.5117 46.1025 li
cp
level3{
gsave
clp
[-2.29606 3.07238 -5.12779 -2.13769 80.3062 44.6025 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.29606 3.07238 -5.12779 -2.13769 80.3062 44.6025 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
76.522 46.3555 mo
76.3872 46.1992 76.1938 46.0225 75.9146 45.8408 cv
75.0273 45.2627 73.5151 45.124 73.5151 45.124 cv
73.5151 45.124 75.1284 45.1504 76.2246 45.8311 cv
76.5547 46.0352 76.7695 46.2109 76.9072 46.3555 cv
76.522 46.3555 li
cp
level3{
gsave
clp
[.613957 4.53939 3.08655 -2.41239 74.9756 43.9824 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.613957 4.53939 3.08655 -2.41239 74.9756 43.9824 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
78.2227 46.248 mo
78.3101 46.2119 78.4014 46.1738 78.4976 46.1357 cv
79.9214 45.5703 81.6636 45.4297 81.6636 45.4297 cv
81.6636 45.4297 79.9048 45.4609 78.1689 46.1279 cv
78.0615 46.1699 77.9604 46.21 77.8647 46.248 cv
78.2227 46.248 li
cp
level3{
gsave
clp
[-1.84967 3.38192 -4.30356 -1.72353 80.2876 44.8789 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.84967 3.38192 -4.30356 -1.72353 80.2876 44.8789 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
77.2188 46.248 mo
77.1885 46.1631 77.1416 46.0732 77.0767 45.9805 cv
76.6108 45.3154 74.9487 44.9834 74.9487 44.9834 cv
74.9487 44.9834 76.8477 45.2227 77.4585 46.0127 cv
77.5239 46.0967 77.5752 46.1748 77.6152 46.248 cv
77.2188 46.248 li
cp
level3{
gsave
clp
[-.0512307 2.09808 3.38965 .0556762 76.2954 45.0059 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0512307 2.09808 3.38965 .0556762 76.2954 45.0059 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
78.7798 46.3643 mo
78.5986 46.2578 78.394 46.1475 78.1602 46.0342 cv
76.3555 45.167 73.3765 44.8975 73.3765 44.8975 cv
73.3765 44.8975 76.5396 45.0098 78.77 46.0352 cv
79.0225 46.1514 79.2432 46.2617 79.4346 46.3643 cv
78.7798 46.3643 li
cp
level3{
gsave
clp
[1.55916 4.28127 7.24929 -1.66256 75.9263 44.3125 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.55916 4.28127 7.24929 -1.66256 75.9263 44.3125 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
79.7837 46.2959 mo
79.7168 46.1885 79.623 46.0723 79.4937 45.9502 cv
78.812 45.3057 77.1084 44.9307 77.1084 44.9307 cv
77.1084 44.9307 79.0044 45.2256 79.8696 45.9951 cv
79.9932 46.1045 80.0898 46.2051 80.165 46.2959 cv
79.7837 46.2959 li
cp
level3{
gsave
clp
[.157713 1.64528 2.69712 .367433 78.5908 45.1328 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.157713 1.64528 2.69712 .367433 78.5908 45.1328 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
77.6162 46.3818 mo
77.2925 46.1172 76.7598 45.7363 75.9795 45.3379 cv
74.5195 44.5898 72.9375 44.4053 72.9375 44.4053 cv
72.9375 44.4053 74.4937 44.4453 76.2642 45.3262 cv
77.2212 45.8027 77.7241 46.1572 77.9854 46.3818 cv
77.6162 46.3818 li
cp
level3{
gsave
clp
[2.11828 4.17754 3.72693 -2.15198 74.5024 43.502 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.11828 4.17754 3.72693 -2.15198 74.5024 43.502 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
78.001 46.4697 mo
77.853 46.2686 77.6567 46.042 77.4004 45.8057 cv
76.5137 44.9873 75.2173 44.6914 75.2173 44.6914 cv
75.2173 44.6914 76.5684 44.8477 77.6577 45.8164 cv
77.9404 46.0684 78.1465 46.2852 78.2954 46.4697 cv
78.001 46.4697 li
cp
level3{
gsave
clp
[1.10798 3.12863 3.85901 -.887488 76.3481 44.4316 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.10798 3.12863 3.85901 -.887488 76.3481 44.4316 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
76.3428 46.3086 mo
76.4111 46.2012 76.5039 46.0869 76.6333 45.9639 cv
77.314 45.3193 79.0186 44.9453 79.0186 44.9453 cv
79.0186 44.9453 77.1221 45.2393 76.2573 46.0088 cv
76.1343 46.1191 76.0381 46.2188 75.9624 46.3086 cv
76.3428 46.3086 li
cp
level3{
gsave
clp
[-.157395 1.64197 -2.69168 .366692 77.5366 45.1475 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.157395 1.64197 -2.69168 .366692 77.5366 45.1475 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
78.6587 46.4834 mo
78.5986 46.2734 78.4741 46.0137 78.228 45.7236 cv
77.585 44.9629 76.1489 44.5361 76.1489 44.5361 cv
76.1489 44.5361 77.7295 44.8652 78.5391 45.7715 cv
78.8018 46.0664 78.9453 46.3008 79.0195 46.4834 cv
78.6587 46.4834 li
cp
level3{
gsave
clp
[2.87061 0 0 2.87061 76.1489 45.5098 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.87061 0 0 2.87061 76.1489 45.5098 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
79.6328 46.4365 mo
79.8555 46.3516 80.1079 46.2627 80.395 46.1719 cv
82.3647 45.5469 85.23 45.3184 85.23 45.3184 cv
85.23 45.3184 82.2461 45.4414 79.8276 46.1816 cv
79.5293 46.2725 79.2705 46.3574 79.0444 46.4365 cv
79.6328 46.4365 li
cp
level3{
gsave
clp
[-1.79508 2.84662 -6.17764 -.781302 82.6919 44.998 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.79508 2.84662 -6.17764 -.781302 82.6919 44.998 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
80.271 46.4873 mo
80.3979 46.1514 80.5825 45.7451 80.8496 45.3154 cv
81.5591 44.1729 82.5889 43.7666 82.5889 43.7666 cv
82.5889 43.7666 81.5166 43.9766 80.646 45.3301 cv
80.3418 45.8018 80.1499 46.1865 80.0273 46.4873 cv
80.271 46.4873 li
cp
level3{
gsave
clp
[-.64544 5.18529 -2.20266 -1.52426 81.5654 43.0586 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.64544 5.18529 -2.20266 -1.52426 81.5654 43.0586 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
76.4829 46.9141 mo
76.4829 47.0039 76.2798 47.0781 76.0298 47.0781 cv
75.7793 47.0781 75.5771 47.0039 75.5771 46.9141 cv
75.5771 46.8232 75.7793 46.75 76.0298 46.75 cv
76.2798 46.75 76.4829 46.8232 76.4829 46.9141 cv
cp
level3{
gsave
clp
[.402949 0 0 .191017 76.0298 46.9131 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402949 0 0 .191017 76.0298 46.9131 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.334 47.1768 mo
77.334 47.2666 77.1313 47.3398 76.8813 47.3398 cv
76.6304 47.3398 76.4277 47.2666 76.4277 47.1768 cv
76.4277 47.0869 76.6304 47.0137 76.8813 47.0137 cv
77.1313 47.0137 77.334 47.0869 77.334 47.1768 cv
cp
level3{
gsave
clp
[.402221 0 0 .190672 76.8809 47.1758 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402221 0 0 .190672 76.8809 47.1758 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.1445 46.3486 mo
77.1445 46.4395 76.9419 46.5127 76.6924 46.5127 cv
76.4419 46.5127 76.2393 46.4395 76.2393 46.3486 cv
76.2393 46.2588 76.4419 46.1846 76.6924 46.1846 cv
76.9419 46.1846 77.1445 46.2588 77.1445 46.3486 cv
cp
level3{
gsave
clp
[.402835 0 0 .190963 76.6919 46.3477 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402835 0 0 .190963 76.6919 46.3477 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.5425 46.8154 mo
77.5425 46.9053 77.3398 46.9785 77.0903 46.9785 cv
76.8398 46.9785 76.6372 46.9053 76.6372 46.8154 cv
76.6372 46.7246 76.8398 46.6514 77.0903 46.6514 cv
77.3398 46.6514 77.5425 46.7246 77.5425 46.8154 cv
cp
level3{
gsave
clp
[.40238 0 0 .190748 77.0898 46.8145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40238 0 0 .190748 77.0898 46.8145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
78.5601 46.8154 mo
78.5601 46.9053 78.3584 46.9785 78.1079 46.9785 cv
77.8574 46.9785 77.6548 46.9053 77.6548 46.8154 cv
77.6548 46.7246 77.8574 46.6514 78.1079 46.6514 cv
78.3584 46.6514 78.5601 46.7246 78.5601 46.8154 cv
cp
level3{
gsave
clp
[.40238 0 0 .190748 78.1074 46.8145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40238 0 0 .190748 78.1074 46.8145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
78.9946 46.999 mo
78.9946 47.0889 78.7915 47.1621 78.542 47.1621 cv
78.2915 47.1621 78.0889 47.0889 78.0889 46.999 cv
78.0889 46.9092 78.2915 46.835 78.542 46.835 cv
78.7915 46.835 78.9946 46.9092 78.9946 46.999 cv
cp
level3{
gsave
clp
[.402506 0 0 .190807 78.5415 46.998 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402506 0 0 .190807 78.5415 46.998 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.3506 46.542 mo
79.2607 46.4434 79.5264 46.2891 79.9399 46.1982 cv
80.3555 46.1074 80.7646 46.1143 80.855 46.2139 cv
80.9434 46.3125 80.6792 46.4668 80.2632 46.5576 cv
79.8486 46.6484 79.4399 46.6416 79.3506 46.542 cv
cp
level3{
gsave
clp
[-.6691 .145662 -.188295 -.209612 80.1025 46.3779 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.6691 .145662 -.188295 -.209612 80.1025 46.3779 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.0786 46.5742 mo
79.0786 46.6826 78.7729 46.7705 78.396 46.7705 cv
78.019 46.7705 77.7139 46.6826 77.7139 46.5742 cv
77.7139 46.4668 78.019 46.3779 78.396 46.3779 cv
78.7729 46.3779 79.0786 46.4668 79.0786 46.5742 cv
cp
level3{
gsave
clp
[.60697 0 0 .228799 78.395 46.5742 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.60697 0 0 .228799 78.395 46.5742 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.397 46.7803 mo
79.2827 46.7617 79.2358 46.623 79.2925 46.4697 cv
79.3491 46.3154 79.4893 46.2051 79.605 46.2227 cv
79.7192 46.2412 79.7661 46.3799 79.7085 46.5342 cv
79.6504 46.6885 79.5127 46.7988 79.397 46.7803 cv
cp
level3{
gsave
clp
[-.0913783 .248027 -.24328 -.0379754 79.5015 46.502 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0913783 .248027 -.24328 -.0379754 79.5015 46.502 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.9971 46.751 mo
81.0508 46.8682 80.8057 47.0195 80.4487 47.0898 cv
80.0908 47.1592 79.7578 47.1211 79.7031 47.0029 cv
79.6489 46.8857 79.8945 46.7334 80.2524 46.6641 cv
80.6089 46.5947 80.9424 46.6328 80.9971 46.751 cv
cp
level3{
gsave
clp
[.574586 -.112316 .114681 .248278 80.3525 46.877 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.574586 -.112316 .114681 .248278 80.3525 46.877 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.1685 46.5176 mo
79.1494 46.5918 78.8711 46.626 78.5444 46.5918 cv
78.2173 46.5596 77.9678 46.4717 77.9854 46.3965 cv
78.0034 46.3223 78.2832 46.2891 78.6094 46.3213 cv
78.936 46.3555 79.1875 46.4434 79.1685 46.5176 cv
cp
level3{
gsave
clp
[.526234 .0533345 -.039112 .157633 78.5771 46.457 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.526234 .0533345 -.039112 .157633 78.5771 46.457 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.4102 46.5879 mo
77.418 46.6963 77.1191 46.793 76.7422 46.8027 cv
76.3657 46.8145 76.0547 46.7354 76.0479 46.627 cv
76.04 46.5186 76.3389 46.4229 76.7148 46.4111 cv
77.0918 46.4004 77.4033 46.4795 77.4102 46.5879 cv
cp
level3{
gsave
clp
[.606021 -.0177545 .0153872 .228441 76.7305 46.6064 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606021 -.0177545 .0153872 .228441 76.7305 46.6064 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.3423 46.4326 mo
79.3823 46.5166 79.1436 46.6387 78.8076 46.7061 cv
78.4712 46.7754 78.167 46.7617 78.1274 46.6797 cv
78.0874 46.5957 78.3271 46.4736 78.6626 46.4063 cv
78.9976 46.3379 79.3022 46.3496 79.3423 46.4326 cv
cp
level3{
gsave
clp
[.539381 -.110005 .0851655 .175062 78.7358 46.5566 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.539381 -.110005 .0851655 .175062 78.7358 46.5566 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
78.2651 46.5762 mo
78.271 46.6699 78.021 46.752 77.7046 46.7617 cv
77.3892 46.7715 77.1279 46.7031 77.1206 46.6094 cv
77.1147 46.5166 77.3657 46.4336 77.6821 46.4238 cv
77.9976 46.415 78.2583 46.4834 78.2651 46.5762 cv
cp
level3{
gsave
clp
[.51007 -.0142345 .0142345 .196911 77.6929 46.5938 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.51007 -.0142345 .0142345 .196911 77.6929 46.5938 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
77.8008 46.5576 mo
77.8008 46.6475 77.5864 46.7188 77.3228 46.7188 cv
77.0591 46.7188 76.8442 46.6475 76.8442 46.5576 cv
76.8442 46.4697 77.0591 46.3975 77.3228 46.3975 cv
77.5864 46.3975 77.8008 46.4697 77.8008 46.5576 cv
cp
level3{
gsave
clp
[.424683 0 0 .188091 77.3223 46.5566 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424683 0 0 .188091 77.3223 46.5566 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.312 46.582 mo
76.312 46.6719 76.0977 46.7432 75.8335 46.7432 cv
75.5703 46.7432 75.3564 46.6719 75.3564 46.582 cv
75.3564 46.4941 75.5703 46.4209 75.8335 46.4209 cv
76.0977 46.4209 76.312 46.4941 76.312 46.582 cv
cp
level3{
gsave
clp
[.424875 0 0 .188176 75.834 46.5811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424875 0 0 .188176 75.834 46.5811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.7822 46.6836 mo
76.7363 46.752 76.4531 46.7402 76.1489 46.6553 cv
75.8457 46.5703 75.6372 46.4453 75.6821 46.376 cv
75.7285 46.3066 76.0112 46.3193 76.3154 46.4033 cv
76.6196 46.4883 76.8291 46.6143 76.7822 46.6836 cv
cp
level3{
gsave
clp
[.48976 .13756 -.0972405 .147047 76.2344 46.5293 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.48976 .13756 -.0972405 .147047 76.2344 46.5293 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.5562 46.3984 mo
76.5107 46.4688 76.2271 46.4561 75.9229 46.3711 cv
75.6196 46.2861 75.4106 46.1611 75.4561 46.0908 cv
75.5024 46.0225 75.7852 46.0342 76.0894 46.1191 cv
76.3936 46.2041 76.603 46.3291 76.5562 46.3984 cv
cp
level3{
gsave
clp
[.489714 .137547 -.0972313 .147033 76.0078 46.2451 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.489714 .137547 -.0972313 .147033 76.0078 46.2451 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.2236 46.6953 mo
80.2314 46.8037 79.9316 46.9004 79.5552 46.9111 cv
79.1782 46.9219 78.8672 46.8428 78.8604 46.7354 cv
78.853 46.627 79.1519 46.5303 79.5293 46.5195 cv
79.9053 46.5078 80.2163 46.5879 80.2236 46.6953 cv
cp
level3{
gsave
clp
[.606282 -.0177622 .0153939 .22854 79.5435 46.7148 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606282 -.0177622 .0153939 .22854 79.5435 46.7148 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.1978 46.375 mo
76.2378 46.458 75.998 46.5811 75.6626 46.6484 cv
75.3267 46.7168 75.0225 46.7051 74.9824 46.6211 cv
74.9424 46.5381 75.1821 46.416 75.5181 46.3477 cv
75.8525 46.2793 76.1582 46.292 76.1978 46.375 cv
cp
level3{
gsave
clp
[.539915 -.110114 .0852498 .175236 75.5903 46.498 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.539915 -.110114 .0852498 .175236 75.5903 46.498 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.417 46.873 mo
76.374 46.9014 76.2666 46.8799 76.1743 46.8242 cv
76.0825 46.7686 76.0435 46.6992 76.0854 46.6699 cv
76.1279 46.6416 76.2363 46.6621 76.3276 46.7188 cv
76.4185 46.7734 76.4595 46.8428 76.417 46.873 cv
cp
level3{
gsave
clp
[.146952 .0900673 -.0900673 .061625 76.249 46.7705 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.146952 .0900673 -.0900673 .061625 76.249 46.7705 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
78.1025 46.6299 mo
78.1099 46.7227 77.8589 46.8057 77.5425 46.8154 cv
77.2271 46.8242 76.9653 46.7559 76.9585 46.6621 cv
76.9526 46.5693 77.2036 46.4863 77.52 46.4766 cv
77.8354 46.4678 78.0967 46.5361 78.1025 46.6299 cv
cp
level3{
gsave
clp
[.510435 -.0142447 .0142447 .197052 77.5303 46.6475 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.510435 -.0142447 .0142447 .197052 77.5303 46.6475 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
78.4741 46.5381 mo
78.4741 46.6279 78.2598 46.7002 77.9956 46.7002 cv
77.7324 46.7002 77.5186 46.6279 77.5186 46.5381 cv
77.5186 46.4502 77.7324 46.3779 77.9956 46.3779 cv
78.2598 46.3779 78.4741 46.4502 78.4741 46.5381 cv
cp
level3{
gsave
clp
[.42489 0 0 .188182 77.9961 46.5381 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.42489 0 0 .188182 77.9961 46.5381 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.1416 46.8115 mo
76.1235 46.8867 75.8452 46.9199 75.5166 46.8867 cv
75.1899 46.8535 74.9404 46.7656 74.9585 46.6904 cv
74.9766 46.6162 75.2559 46.582 75.5835 46.6162 cv
75.9102 46.6494 76.1597 46.7373 76.1416 46.8115 cv
cp
level3{
gsave
clp
[.526265 .0533377 -.0391143 .157643 75.5503 46.7529 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.526265 .0533377 -.0391143 .157643 75.5503 46.7529 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.145 47.3428 mo
80.145 47.4336 79.9424 47.5068 79.6919 47.5068 cv
79.4424 47.5068 79.2397 47.4336 79.2397 47.3428 cv
79.2397 47.252 79.4424 47.1787 79.6919 47.1787 cv
79.9424 47.1787 80.145 47.252 80.145 47.3428 cv
cp
level3{
gsave
clp
[.402821 0 0 .190957 79.6924 47.3418 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402821 0 0 .190957 79.6924 47.3418 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.0254 46.6104 mo
79.0254 46.7002 78.8237 46.7734 78.5732 46.7734 cv
78.3228 46.7734 78.1206 46.7002 78.1206 46.6104 cv
78.1206 46.5195 78.3228 46.4463 78.5732 46.4463 cv
78.8237 46.4463 79.0254 46.5195 79.0254 46.6104 cv
cp
level3{
gsave
clp
[.40223 0 0 .190677 78.5728 46.6094 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40223 0 0 .190677 78.5728 46.6094 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.0645 46.3545 mo
72.0645 46.4453 71.8618 46.5176 71.6113 46.5176 cv
71.3618 46.5176 71.1592 46.4453 71.1592 46.3545 cv
71.1592 46.2637 71.3618 46.1914 71.6113 46.1914 cv
71.8618 46.1914 72.0645 46.2637 72.0645 46.3545 cv
cp
level3{
gsave
clp
[.401951 0 0 .190544 71.6118 46.3535 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.401951 0 0 .190544 71.6118 46.3535 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.0352 46.2891 mo
72.9844 46.4004 72.5005 46.4424 71.9521 46.3828 cv
71.4043 46.3223 71 46.1836 71.0508 46.0713 cv
71.1016 45.96 71.5859 45.918 72.1343 45.9775 cv
72.6821 46.0381 73.0859 46.1768 73.0352 46.2891 cv
cp
level3{
gsave
clp
[.883437 .0971071 -.106581 .235662 72.0435 46.1797 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.883437 .0971071 -.106581 .235662 72.0435 46.1797 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.5923 46.542 mo
75.5015 46.4434 75.7671 46.2891 76.1826 46.1982 cv
76.5972 46.1074 77.0054 46.1143 77.0957 46.2139 cv
77.1841 46.3125 76.9199 46.4668 76.5049 46.5576 cv
76.0894 46.6484 75.6807 46.6416 75.5923 46.542 cv
cp
level3{
gsave
clp
[-.66871 .145578 -.188186 -.20949 76.3438 46.3779 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.66871 .145578 -.188186 -.20949 76.3438 46.3779 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.0771 46.1553 mo
75.0234 46.0498 75.3389 45.9209 75.7793 45.8672 cv
76.2197 45.8135 76.6196 45.8555 76.6733 45.9609 cv
76.7256 46.0674 76.4116 46.1953 75.9697 46.249 cv
75.5288 46.3027 75.1294 46.2607 75.0771 46.1553 cv
cp
level3{
gsave
clp
[-.709202 .0862862 -.111108 -.222217 75.875 46.0576 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.709202 .0862862 -.111108 -.222217 75.875 46.0576 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.5967 45.9746 mo
75.6758 46.1045 75.4204 46.2559 75.0273 46.3145 cv
74.6333 46.373 74.251 46.3154 74.1724 46.1855 cv
74.0928 46.0557 74.3477 45.9033 74.7422 45.8457 cv
75.1353 45.7871 75.5181 45.8447 75.5967 45.9746 cv
cp
level3{
gsave
clp
[.633651 -.0933926 .166688 .273085 74.8853 46.0811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633651 -.0933926 .166688 .273085 74.8853 46.0811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.252 46.2266 mo
75.2148 46.3643 74.7271 46.4463 74.1611 46.4102 cv
73.5942 46.373 73.1655 46.2314 73.2017 46.0938 cv
73.2378 45.9561 73.7275 45.874 74.2935 45.9111 cv
74.8594 45.9473 75.2891 46.0889 75.252 46.2266 cv
cp
level3{
gsave
clp
[.911286 .0591744 -.0769267 .291138 74.2246 46.1611 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.911286 .0591744 -.0769267 .291138 74.2246 46.1611 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.4341 46.4482 mo
70.3452 46.3486 70.6089 46.1953 71.0234 46.1045 cv
71.439 46.0137 71.8491 46.0205 71.9385 46.1201 cv
72.0269 46.2188 71.7627 46.373 71.3477 46.4629 cv
70.9321 46.5547 70.5229 46.5469 70.4341 46.4482 cv
cp
level3{
gsave
clp
[-.668627 .14556 -.188162 -.209464 71.1855 46.2832 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.668627 .14556 -.188162 -.209464 71.1855 46.2832 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.7344 46.1143 mo
73.814 46.2441 73.5586 46.3965 73.1655 46.4541 cv
72.771 46.5127 72.3882 46.4551 72.3091 46.3262 cv
72.231 46.1953 72.4858 46.0439 72.8794 45.9863 cv
73.2729 45.9268 73.6558 45.9854 73.7344 46.1143 cv
cp
level3{
gsave
clp
[.633678 -.0933965 .166695 .273096 73.0225 46.2207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633678 -.0933965 .166695 .273096 73.0225 46.2207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.0381 46.0986 mo
73.0381 46.2148 72.6934 46.3086 72.2695 46.3086 cv
71.8442 46.3086 71.5005 46.2148 71.5005 46.0986 cv
71.5005 45.9834 71.8442 45.8896 72.2695 45.8896 cv
72.6934 45.8896 73.0381 45.9834 73.0381 46.0986 cv
cp
level3{
gsave
clp
[.684197 0 0 .243849 72.269 46.0996 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.684197 0 0 .243849 72.269 46.0996 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.0483 46.3633 mo
76.0483 46.4541 75.8457 46.5273 75.5952 46.5273 cv
75.3457 46.5273 75.1431 46.4541 75.1431 46.3633 cv
75.1431 46.2725 75.3457 46.2002 75.5952 46.2002 cv
75.8457 46.2002 76.0483 46.2725 76.0483 46.3633 cv
cp
level3{
gsave
clp
[.402391 0 0 .190753 75.5957 46.3633 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402391 0 0 .190753 75.5957 46.3633 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.4717 46.3193 mo
71.4717 46.4102 71.2681 46.4824 71.0186 46.4824 cv
70.7686 46.4824 70.5654 46.4102 70.5654 46.3193 cv
70.5654 46.2285 70.7686 46.1553 71.0186 46.1553 cv
71.2681 46.1553 71.4717 46.2285 71.4717 46.3193 cv
cp
level3{
gsave
clp
[.40268 0 0 .19089 71.0186 46.3184 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40268 0 0 .19089 71.0186 46.3184 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.3955 46.4678 mo
74.7192 45.9395 75.251 45.1797 76.0317 44.3818 cv
77.4922 42.8906 79.0732 42.5225 79.0732 42.5225 cv
79.0732 42.5225 77.5186 42.6006 75.7476 44.3613 cv
74.7896 45.3125 74.2866 46.0195 74.0264 46.4678 cv
74.3955 46.4678 li
cp
level3{
gsave
clp
[-2.97088 5.85897 -5.22699 -3.01814 77.895 41.8418 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.97088 5.85897 -5.22699 -3.01814 77.895 41.8418 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
73.6611 46.3389 mo
74.0288 46.0498 74.5 45.7158 75.0845 45.373 cv
76.8452 44.3389 78.7236 44.0762 78.7236 44.0762 cv
78.7236 44.0762 76.8828 44.1396 74.748 45.3604 cv
74.0747 45.7451 73.5859 46.0732 73.2329 46.3389 cv
73.6611 46.3389 li
cp
level3{
gsave
clp
[-2.69308 5.53521 -4.56921 -2.7702 77.0269 43.0479 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.69308 5.53521 -4.56921 -2.7702 77.0269 43.0479 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
71.4014 46.248 mo
71.4224 46.2012 71.4482 46.1523 71.4785 46.1016 cv
71.8975 45.4111 73.4121 44.9072 73.4121 44.9072 cv
73.4121 44.9072 71.6802 45.3467 71.1309 46.1748 cv
71.1143 46.2002 71.0986 46.2246 71.084 46.248 cv
71.4014 46.248 li
cp
level3{
gsave
clp
[.0324868 1.19745 -1.85048 .730795 72.2412 45.3213 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0324868 1.19745 -1.85048 .730795 72.2412 45.3213 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
73.8545 46.4229 mo
73.7593 46.1357 73.6006 45.8057 73.3418 45.4443 cv
72.4771 44.2373 70.5469 44.0508 70.5469 44.0508 cv
70.5469 44.0508 72.6714 44.083 73.7603 45.5205 cv
74.0264 45.874 74.2012 46.1719 74.314 46.4229 cv
73.8545 46.4229 li
cp
level3{
gsave
clp
[.229211 2.61828 2.50247 .450247 72.353 44.3301 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.229211 2.61828 2.50247 .450247 72.353 44.3301 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.165 46.248 mo
73.353 46.0947 74.373 46.0732 74.373 46.0732 cv
74.373 46.0732 73.1426 46.0459 71.6494 46.248 cv
72.165 46.248 li
cp
level3{
gsave
clp
[-2.69131 3.15215 -6.35219 -2.44373 73.4023 45.7002 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.69131 3.15215 -6.35219 -2.44373 73.4023 45.7002 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
73.9448 46.0986 mo
74.9614 45.9863 75.7739 45.9688 75.7739 45.9688 cv
75.7739 45.9688 74.7373 45.9463 73.4106 46.0986 cv
73.9448 46.0986 li
cp
level3{
gsave
clp
[-2.73787 3.20669 -6.46209 -2.48601 74.9243 45.6426 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.73787 3.20669 -6.46209 -2.48601 74.9243 45.6426 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.5405 45.9922 mo
74.8169 45.7627 75.1831 45.5049 75.6636 45.2354 cv
77.3242 44.3027 79.7505 43.9658 79.7505 43.9658 cv
79.7505 43.9658 77.2222 44.1436 75.1821 45.248 cv
74.6528 45.5361 74.2686 45.7832 73.9878 45.9922 cv
74.5405 45.9922 li
cp
level3{
gsave
clp
[-1.49365 4.21768 -5.2023 -1.19641 77.4189 43.4297 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.49365 4.21768 -5.2023 -1.19641 77.4189 43.4297 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
74.6953 45.7695 mo
76.5093 45.6357 78.1372 45.6475 78.1372 45.6475 cv
78.1372 45.6475 76.0591 45.5703 73.7046 45.7695 cv
74.6953 45.7695 li
cp
level3{
gsave
clp
[-4.16718 3.37174 -10.9493 -3.57347 76.6113 45.1494 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.16718 3.37174 -10.9493 -3.57347 76.6113 45.1494 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.1973 46.292 mo
74.4258 46.2393 74.6709 46.1885 74.9321 46.1357 cv
77.7744 45.5732 81.3604 45.5479 81.3604 45.5479 cv
81.3604 45.5479 77.7183 45.4395 74.2505 46.0986 cv
73.8999 46.165 73.584 46.2295 73.2983 46.292 cv
74.1973 46.292 li
cp
level3{
gsave
clp
[-4.33933 4.31042 -10.8135 -3.83206 78.6641 44.5928 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.33933 4.31042 -10.8135 -3.83206 78.6641 44.5928 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
73.5859 46.376 mo
73.3257 46.2012 73.0078 46.0195 72.6206 45.8379 cv
70.73 44.9541 67.7925 44.8916 67.7925 44.8916 cv
67.7925 44.8916 70.8853 44.75 73.2129 45.7852 cv
73.6943 46 74.0664 46.1973 74.3545 46.376 cv
73.5859 46.376 li
cp
level3{
gsave
clp
[2.23112 6.0763 8.97633 -5.1198 70.2808 43.4736 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.23112 6.0763 8.97633 -5.1198 70.2808 43.4736 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.5693 46.2363 mo
72.4331 46.1748 72.2793 46.1084 72.1079 46.04 cv
71.1577 45.6611 70.1528 45.5098 70.1528 45.5098 cv
70.1528 45.5098 71.1362 45.6006 72.2876 46.0488 cv
72.4624 46.1172 72.6147 46.1797 72.7461 46.2363 cv
72.5693 46.2363 li
cp
level3{
gsave
clp
[1.17304 1.60921 1.95774 -.322024 71.0742 45.3584 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.17304 1.60921 1.95774 -.322024 71.0742 45.3584 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.9878 46.1025 mo
73.2417 46.0078 73.543 45.9082 73.8955 45.8086 cv
75.4941 45.3535 77.415 45.2832 77.415 45.2832 cv
77.415 45.2832 75.4819 45.2559 73.5361 45.79 cv
73.1191 45.9053 72.7856 46.0098 72.5186 46.1025 cv
72.9878 46.1025 li
cp
level3{
gsave
clp
[-2.29639 3.07282 -5.12853 -2.138 75.7817 44.6025 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.29639 3.07282 -5.12853 -2.138 75.7817 44.6025 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
71.998 46.3555 mo
71.8628 46.1992 71.6699 46.0225 71.3906 45.8408 cv
70.5024 45.2627 68.9907 45.124 68.9907 45.124 cv
68.9907 45.124 70.6045 45.1504 71.7007 45.8311 cv
72.0308 46.0352 72.2456 46.2109 72.3833 46.3555 cv
71.998 46.3555 li
cp
level3{
gsave
clp
[.614016 4.53983 3.08685 -2.41262 70.4512 43.9814 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.614016 4.53983 3.08685 -2.41262 70.4512 43.9814 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
73.6987 46.248 mo
73.7856 46.2119 73.8765 46.1738 73.9727 46.1357 cv
75.397 45.5703 77.1387 45.4297 77.1387 45.4297 cv
77.1387 45.4297 75.3804 45.4609 73.645 46.1279 cv
73.5366 46.1699 73.436 46.21 73.3403 46.248 cv
73.6987 46.248 li
cp
level3{
gsave
clp
[-1.84953 3.38166 -4.30322 -1.72339 75.7632 44.8789 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.84953 3.38166 -4.30322 -1.72339 75.7632 44.8789 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.6948 46.248 mo
72.6636 46.1631 72.6177 46.0732 72.5527 45.9805 cv
72.0859 45.3154 70.4243 44.9834 70.4243 44.9834 cv
70.4243 44.9834 72.3228 45.2227 72.9346 46.0127 cv
72.999 46.0967 73.0503 46.1748 73.0913 46.248 cv
72.6948 46.248 li
cp
level3{
gsave
clp
[-.0512289 2.098 3.38953 .0556742 71.771 45.0059 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0512289 2.098 3.38953 .0556742 71.771 45.0059 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.2549 46.3643 mo
74.0747 46.2578 73.8696 46.1475 73.6357 46.0342 cv
71.8315 45.167 68.8525 44.8975 68.8525 44.8975 cv
68.8525 44.8975 72.0156 45.0098 74.2456 46.0352 cv
74.4985 46.1514 74.7188 46.2617 74.9106 46.3643 cv
74.2549 46.3643 li
cp
level3{
gsave
clp
[1.55916 4.28127 7.24929 -1.66256 71.4023 44.3125 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.55916 4.28127 7.24929 -1.66256 71.4023 44.3125 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
75.2593 46.2959 mo
75.1929 46.1885 75.0991 46.0723 74.9697 45.9502 cv
74.2881 45.3057 72.5845 44.9307 72.5845 44.9307 cv
72.5845 44.9307 74.4805 45.2256 75.3457 45.9951 cv
75.4683 46.1045 75.5649 46.2051 75.6401 46.2959 cv
75.2593 46.2959 li
cp
level3{
gsave
clp
[.157725 1.6454 2.69732 .36746 74.0664 45.1328 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.157725 1.6454 2.69732 .36746 74.0664 45.1328 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
73.0913 46.3818 mo
72.7676 46.1172 72.2358 45.7363 71.4556 45.3379 cv
69.9956 44.5898 68.4136 44.4053 68.4136 44.4053 cv
68.4136 44.4053 69.9692 44.4453 71.7402 45.3262 cv
72.6973 45.8027 73.2002 46.1572 73.4604 46.3818 cv
73.0913 46.3818 li
cp
level3{
gsave
clp
[2.11806 4.17711 3.72654 -2.15176 69.978 43.502 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.11806 4.17711 3.72654 -2.15176 69.978 43.502 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
73.4771 46.4697 mo
73.3286 46.2686 73.1328 46.042 72.8765 45.8057 cv
71.9888 44.9873 70.6929 44.6914 70.6929 44.6914 cv
70.6929 44.6914 72.0444 44.8477 73.1338 45.8164 cv
73.416 46.0684 73.6226 46.2852 73.7715 46.4697 cv
73.4771 46.4697 li
cp
level3{
gsave
clp
[1.10802 3.12875 3.85915 -.887521 71.8242 44.4316 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.10802 3.12875 3.85915 -.887521 71.8242 44.4316 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
71.8188 46.3086 mo
71.8862 46.2012 71.979 46.0869 72.1094 45.9639 cv
72.7896 45.3193 74.4937 44.9453 74.4937 44.9453 cv
74.4937 44.9453 72.5981 45.2393 71.7334 46.0088 cv
71.6094 46.1191 71.5132 46.2188 71.4375 46.3086 cv
71.8188 46.3086 li
cp
level3{
gsave
clp
[-.157414 1.64215 -2.69199 .366734 73.0117 45.1475 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.157414 1.64215 -2.69199 .366734 73.0117 45.1475 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.1338 46.4834 mo
74.0747 46.2734 73.9497 46.0137 73.7041 45.7236 cv
73.0601 44.9629 71.625 44.5361 71.625 44.5361 cv
71.625 44.5361 73.2056 44.8652 74.0142 45.7715 cv
74.2769 46.0664 74.4204 46.3008 74.4946 46.4834 cv
74.1338 46.4834 li
cp
level3{
gsave
clp
[2.86963 0 0 2.86963 71.625 45.5098 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.86963 0 0 2.86963 71.625 45.5098 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.1089 46.4365 mo
75.3306 46.3516 75.5835 46.2627 75.8701 46.1719 cv
77.8408 45.5469 80.7056 45.3184 80.7056 45.3184 cv
80.7056 45.3184 77.7212 45.4414 75.3032 46.1816 cv
75.0054 46.2725 74.7456 46.3574 74.5195 46.4365 cv
75.1089 46.4365 li
cp
level3{
gsave
clp
[-1.79512 2.84668 -6.17777 -.781319 78.167 44.998 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.79512 2.84668 -6.17777 -.781319 78.167 44.998 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
75.7466 46.4873 mo
75.873 46.1514 76.0576 45.7451 76.3257 45.3154 cv
77.0342 44.1729 78.064 43.7666 78.064 43.7666 cv
78.064 43.7666 76.9927 43.9766 76.1211 45.3301 cv
75.8179 45.8018 75.625 46.1865 75.5029 46.4873 cv
75.7466 46.4873 li
cp
level3{
gsave
clp
[-.645394 5.18492 -2.20251 -1.52415 77.0405 43.0586 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.645394 5.18492 -2.20251 -1.52415 77.0405 43.0586 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
71.958 46.9141 mo
71.958 47.0039 71.7554 47.0781 71.5054 47.0781 cv
71.2554 47.0781 71.0522 47.0039 71.0522 46.9141 cv
71.0522 46.8232 71.2554 46.75 71.5054 46.75 cv
71.7554 46.75 71.958 46.8232 71.958 46.9141 cv
cp
level3{
gsave
clp
[.402956 0 0 .191021 71.5049 46.9131 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402956 0 0 .191021 71.5049 46.9131 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.8101 47.1768 mo
72.8101 47.2666 72.6064 47.3398 72.3564 47.3398 cv
72.1055 47.3398 71.9033 47.2666 71.9033 47.1768 cv
71.9033 47.0869 72.1055 47.0137 72.3564 47.0137 cv
72.6064 47.0137 72.8101 47.0869 72.8101 47.1768 cv
cp
level3{
gsave
clp
[.402351 0 0 .190734 72.3564 47.1758 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402351 0 0 .190734 72.3564 47.1758 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.6206 46.3486 mo
72.6206 46.4395 72.418 46.5127 72.1685 46.5127 cv
71.918 46.5127 71.7153 46.4395 71.7153 46.3486 cv
71.7153 46.2588 71.918 46.1846 72.1685 46.1846 cv
72.418 46.1846 72.6206 46.2588 72.6206 46.3486 cv
cp
level3{
gsave
clp
[.402838 0 0 .190965 72.168 46.3477 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402838 0 0 .190965 72.168 46.3477 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.0181 46.8154 mo
73.0181 46.9053 72.8159 46.9785 72.5654 46.9785 cv
72.3159 46.9785 72.1123 46.9053 72.1123 46.8154 cv
72.1123 46.7246 72.3159 46.6514 72.5654 46.6514 cv
72.8159 46.6514 73.0181 46.7246 73.0181 46.8154 cv
cp
level3{
gsave
clp
[.402513 0 0 .190811 72.5649 46.8145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402513 0 0 .190811 72.5649 46.8145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.0361 46.8154 mo
74.0361 46.9053 73.8335 46.9785 73.583 46.9785 cv
73.3335 46.9785 73.1304 46.9053 73.1304 46.8154 cv
73.1304 46.7246 73.3335 46.6514 73.583 46.6514 cv
73.8335 46.6514 74.0361 46.7246 74.0361 46.8154 cv
cp
level3{
gsave
clp
[.402513 0 0 .190811 73.583 46.8145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402513 0 0 .190811 73.583 46.8145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.4697 46.999 mo
74.4697 47.0889 74.2676 47.1621 74.0171 47.1621 cv
73.7676 47.1621 73.5649 47.0889 73.5649 46.999 cv
73.5649 46.9092 73.7676 46.835 74.0171 46.835 cv
74.2676 46.835 74.4697 46.9092 74.4697 46.999 cv
cp
level3{
gsave
clp
[.402256 0 0 .190689 74.0171 46.998 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402256 0 0 .190689 74.0171 46.998 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.8262 46.542 mo
74.7368 46.4434 75.0024 46.2891 75.416 46.1982 cv
75.8315 46.1074 76.2407 46.1143 76.3306 46.2139 cv
76.4194 46.3125 76.1553 46.4668 75.7393 46.5576 cv
75.3237 46.6484 74.915 46.6416 74.8262 46.542 cv
cp
level3{
gsave
clp
[-.669053 .145652 -.188282 -.209597 75.5781 46.3779 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.669053 .145652 -.188282 -.209597 75.5781 46.3779 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.5537 46.5742 mo
74.5537 46.6826 74.248 46.7705 73.8711 46.7705 cv
73.4946 46.7705 73.189 46.6826 73.189 46.5742 cv
73.189 46.4668 73.4946 46.3779 73.8711 46.3779 cv
74.248 46.3779 74.5537 46.4668 74.5537 46.5742 cv
cp
level3{
gsave
clp
[.60697 0 0 .228799 73.8696 46.5742 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.60697 0 0 .228799 73.8696 46.5742 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.873 46.7803 mo
74.7588 46.7617 74.7109 46.623 74.7686 46.4697 cv
74.8252 46.3154 74.9644 46.2051 75.0801 46.2227 cv
75.1943 46.2412 75.2412 46.3799 75.1841 46.5342 cv
75.1265 46.6885 74.9878 46.7988 74.873 46.7803 cv
cp
level3{
gsave
clp
[-.0913377 .247917 -.243172 -.0379585 74.978 46.502 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0913377 .247917 -.243172 -.0379585 74.978 46.502 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.4722 46.751 mo
76.5269 46.8682 76.2808 47.0195 75.9243 47.0898 cv
75.5664 47.1592 75.2329 47.1211 75.1792 47.0029 cv
75.125 46.8857 75.3706 46.7334 75.728 46.6641 cv
76.085 46.5947 76.4185 46.6328 76.4722 46.751 cv
cp
level3{
gsave
clp
[.575065 -.11241 .114776 .248485 75.8267 46.877 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.575065 -.11241 .114776 .248485 75.8267 46.877 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.6436 46.5176 mo
74.6255 46.5918 74.3462 46.626 74.02 46.5918 cv
73.6934 46.5596 73.4429 46.4717 73.4614 46.3965 cv
73.4795 46.3223 73.7593 46.2891 74.0854 46.3213 cv
74.4121 46.3555 74.6626 46.4434 74.6436 46.5176 cv
cp
level3{
gsave
clp
[.525921 .0533028 -.0390888 .15754 74.0527 46.458 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.525921 .0533028 -.0390888 .15754 74.0527 46.458 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.8862 46.5879 mo
72.894 46.6963 72.5952 46.793 72.2183 46.8027 cv
71.8413 46.8145 71.5298 46.7354 71.5229 46.627 cv
71.5156 46.5186 71.8145 46.4229 72.1909 46.4111 cv
72.5679 46.4004 72.8784 46.4795 72.8862 46.5879 cv
cp
level3{
gsave
clp
[.606249 -.0177612 .015393 .228527 72.2061 46.6064 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606249 -.0177612 .015393 .228527 72.2061 46.6064 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.8179 46.4326 mo
74.8584 46.5166 74.6187 46.6387 74.2837 46.7061 cv
73.9468 46.7754 73.6426 46.7617 73.6025 46.6797 cv
73.5635 46.5957 73.8032 46.4736 74.1382 46.4063 cv
74.4736 46.3379 74.7783 46.3496 74.8179 46.4326 cv
cp
level3{
gsave
clp
[.539583 -.110047 .0851973 .175128 74.2109 46.5566 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.539583 -.110047 .0851973 .175128 74.2109 46.5566 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.7402 46.5762 mo
73.7466 46.6699 73.4961 46.752 73.1807 46.7617 cv
72.8643 46.7715 72.604 46.7031 72.5967 46.6094 cv
72.5903 46.5166 72.8408 46.4336 73.1572 46.4238 cv
73.4727 46.415 73.7344 46.4834 73.7402 46.5762 cv
cp
level3{
gsave
clp
[.509778 -.0142264 .0142264 .196798 73.1685 46.5938 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.509778 -.0142264 .0142264 .196798 73.1685 46.5938 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.2759 46.5576 mo
73.2759 46.6475 73.0625 46.7188 72.7979 46.7188 cv
72.5347 46.7188 72.3203 46.6475 72.3203 46.5576 cv
72.3203 46.4697 72.5347 46.3975 72.7979 46.3975 cv
73.0625 46.3975 73.2759 46.4697 73.2759 46.5576 cv
cp
level3{
gsave
clp
[.424382 0 0 .187957 72.7979 46.5566 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424382 0 0 .187957 72.7979 46.5566 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.7871 46.582 mo
71.7871 46.6719 71.5728 46.7432 71.3096 46.7432 cv
71.0454 46.7432 70.832 46.6719 70.832 46.582 cv
70.832 46.4941 71.0454 46.4209 71.3096 46.4209 cv
71.5728 46.4209 71.7871 46.4941 71.7871 46.582 cv
cp
level3{
gsave
clp
[.424686 0 0 .188092 71.3096 46.5811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424686 0 0 .188092 71.3096 46.5811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.2583 46.6836 mo
72.2124 46.752 71.9282 46.7402 71.625 46.6553 cv
71.3218 46.5703 71.1123 46.4453 71.1582 46.376 cv
71.2046 46.3066 71.4873 46.3193 71.7915 46.4033 cv
72.0947 46.4883 72.3047 46.6143 72.2583 46.6836 cv
cp
level3{
gsave
clp
[.489788 .137568 -.097246 .147055 71.7104 46.5293 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.489788 .137568 -.097246 .147055 71.7104 46.5293 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.0322 46.3984 mo
71.9858 46.4688 71.7021 46.4561 71.3989 46.3711 cv
71.0947 46.2861 70.8857 46.1611 70.9321 46.0908 cv
70.978 46.0225 71.2612 46.0342 71.5645 46.1191 cv
71.8687 46.2041 72.0781 46.3291 72.0322 46.3984 cv
cp
level3{
gsave
clp
[.489582 .13751 -.0972051 .146993 71.4839 46.2451 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.489582 .13751 -.0972051 .146993 71.4839 46.2451 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.6992 46.6953 mo
75.7065 46.8037 75.4077 46.9004 75.0308 46.9111 cv
74.6543 46.9219 74.3433 46.8428 74.3364 46.7354 cv
74.3281 46.627 74.627 46.5303 75.0044 46.5195 cv
75.3804 46.5078 75.6914 46.5879 75.6992 46.6953 cv
cp
level3{
gsave
clp
[.606121 -.0177575 .0153898 .228479 75.0195 46.7148 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606121 -.0177575 .0153898 .228479 75.0195 46.7148 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.6729 46.375 mo
71.7134 46.458 71.4736 46.5811 71.1387 46.6484 cv
70.8022 46.7168 70.498 46.7051 70.4585 46.6211 cv
70.4185 46.5381 70.6582 46.416 70.9937 46.3477 cv
71.3286 46.2793 71.6333 46.292 71.6729 46.375 cv
cp
level3{
gsave
clp
[.539703 -.110071 .0852163 .175167 71.0659 46.498 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.539703 -.110071 .0852163 .175167 71.0659 46.498 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.8931 46.873 mo
71.8496 46.9014 71.7422 46.8799 71.6499 46.8242 cv
71.5586 46.7686 71.519 46.6992 71.5615 46.6699 cv
71.604 46.6416 71.7114 46.6621 71.8037 46.7188 cv
71.8945 46.7734 71.9351 46.8428 71.8931 46.873 cv
cp
level3{
gsave
clp
[.146985 .0900875 -.0900875 .0616388 71.7256 46.7715 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.146985 .0900875 -.0900875 .0616388 71.7256 46.7715 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.5786 46.6299 mo
73.5854 46.7227 73.334 46.8057 73.0181 46.8154 cv
72.7026 46.8242 72.4404 46.7559 72.4346 46.6621 cv
72.4287 46.5693 72.6797 46.4863 72.9951 46.4766 cv
73.3115 46.4678 73.5723 46.5361 73.5786 46.6299 cv
cp
level3{
gsave
clp
[.510436 -.0142447 .0142447 .197052 73.0063 46.6475 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.510436 -.0142447 .0142447 .197052 73.0063 46.6475 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.9492 46.5381 mo
73.9492 46.6279 73.7349 46.7002 73.4717 46.7002 cv
73.2085 46.7002 72.9946 46.6279 72.9946 46.5381 cv
72.9946 46.4502 73.2085 46.3779 73.4717 46.3779 cv
73.7349 46.3779 73.9492 46.4502 73.9492 46.5381 cv
cp
level3{
gsave
clp
[.424586 0 0 .188048 73.4717 46.5381 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424586 0 0 .188048 73.4717 46.5381 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.6177 46.8115 mo
71.5991 46.8867 71.3193 46.9199 70.9927 46.8867 cv
70.666 46.8535 70.416 46.7656 70.4341 46.6904 cv
70.4526 46.6162 70.7314 46.582 71.0586 46.6162 cv
71.3853 46.6494 71.6357 46.7373 71.6177 46.8115 cv
cp
level3{
gsave
clp
[.52638 .0533494 -.0391229 .157677 71.0259 46.7529 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.52638 .0533494 -.0391229 .157677 71.0259 46.7529 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.6201 47.3428 mo
75.6201 47.4336 75.4185 47.5068 75.168 47.5068 cv
74.9175 47.5068 74.7148 47.4336 74.7148 47.3428 cv
74.7148 47.252 74.9175 47.1787 75.168 47.1787 cv
75.4185 47.1787 75.6201 47.252 75.6201 47.3428 cv
cp
level3{
gsave
clp
[.402829 0 0 .19096 75.1675 47.3418 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402829 0 0 .19096 75.1675 47.3418 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.5015 46.6104 mo
74.5015 46.7002 74.2988 46.7734 74.0483 46.7734 cv
73.7988 46.7734 73.5957 46.7002 73.5957 46.6104 cv
73.5957 46.5195 73.7988 46.4463 74.0483 46.4463 cv
74.2988 46.4463 74.5015 46.5195 74.5015 46.6104 cv
cp
level3{
gsave
clp
[.402517 0 0 .190813 74.0483 46.6094 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402517 0 0 .190813 74.0483 46.6094 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.5005 46.3545 mo
80.5005 46.4453 80.3516 46.5176 80.167 46.5176 cv
79.9834 46.5176 79.8335 46.4453 79.8335 46.3545 cv
79.8335 46.2637 79.9834 46.1914 80.167 46.1914 cv
80.3516 46.1914 80.5005 46.2637 80.5005 46.3545 cv
cp
level3{
gsave
clp
[.296315 0 0 .190587 80.167 46.3535 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296315 0 0 .190587 80.167 46.3535 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.2163 46.2891 mo
81.1787 46.4004 80.8223 46.4424 80.4175 46.3828 cv
80.0137 46.3223 79.7163 46.1836 79.7534 46.0713 cv
79.791 45.96 80.1475 45.918 80.5522 45.9775 cv
80.9556 46.0381 81.2529 46.1768 81.2163 46.2891 cv
cp
level3{
gsave
clp
[.651384 .0971154 -.078166 .235682 80.4829 46.1797 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.651384 .0971154 -.078166 .235682 80.4829 46.1797 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
83.1001 46.542 mo
83.0342 46.4434 83.2295 46.2891 83.5352 46.1982 cv
83.8413 46.1074 84.1426 46.1143 84.2085 46.2139 cv
84.2744 46.3125 84.0791 46.4668 83.7729 46.5576 cv
83.4673 46.6484 83.166 46.6416 83.1001 46.542 cv
cp
level3{
gsave
clp
[-.49283 .145716 -.138608 -.20969 83.6543 46.3799 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.49283 .145716 -.138608 -.20969 83.6543 46.3799 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
82.7202 46.1553 mo
82.6812 46.0498 82.9141 45.9209 83.2388 45.8672 cv
83.563 45.8135 83.8584 45.8555 83.897 45.9609 cv
83.936 46.0674 83.7046 46.1953 83.3784 46.249 cv
83.0532 46.3027 82.7598 46.2607 82.7202 46.1553 cv
cp
level3{
gsave
clp
[-.522578 .086308 -.0827611 -.222273 83.3066 46.0576 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.522578 .086308 -.0827611 -.222273 83.3066 46.0576 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
83.104 45.9746 mo
83.1621 46.1045 82.9736 46.2559 82.6841 46.3145 cv
82.3936 46.373 82.1123 46.3154 82.0537 46.1855 cv
81.9956 46.0557 82.1831 45.9033 82.4736 45.8457 cv
82.7637 45.7871 83.0459 45.8447 83.104 45.9746 cv
cp
level3{
gsave
clp
[.466465 -.093293 .122816 .272794 82.5796 46.0811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.466465 -.093293 .122816 .272794 82.5796 46.0811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
82.8496 46.2266 mo
82.8228 46.3643 82.4624 46.4463 82.0454 46.4102 cv
81.6279 46.373 81.3115 46.2314 81.3389 46.0938 cv
81.3662 45.9561 81.7261 45.874 82.1431 45.9111 cv
82.5601 45.9473 82.8765 46.0889 82.8496 46.2266 cv
cp
level3{
gsave
clp
[.671304 .0591979 -.05683 .291254 82.0923 46.1611 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.671304 .0591979 -.05683 .291254 82.0923 46.1611 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
79.2993 46.4482 mo
79.2334 46.3486 79.4277 46.1953 79.7334 46.1045 cv
80.0391 46.0137 80.3418 46.0205 80.4077 46.1201 cv
80.4727 46.2188 80.2783 46.373 79.9722 46.4629 cv
79.6665 46.5547 79.3643 46.5469 79.2993 46.4482 cv
cp
level3{
gsave
clp
[-.492471 .14561 -.138507 -.209537 79.853 46.2842 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.492471 .14561 -.138507 -.209537 79.853 46.2842 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.7314 46.1143 mo
81.79 46.2441 81.6016 46.3965 81.3115 46.4541 cv
81.021 46.5127 80.7393 46.4551 80.6807 46.3262 cv
80.6235 46.1953 80.811 46.0439 81.1016 45.9863 cv
81.3911 45.9268 81.6733 45.9854 81.7314 46.1143 cv
cp
level3{
gsave
clp
[.466353 -.0932706 .122787 .272728 81.2065 46.2217 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.466353 -.0932706 .122787 .272728 81.2065 46.2217 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.2178 46.0986 mo
81.2178 46.2148 80.9639 46.3086 80.6514 46.3086 cv
80.3379 46.3086 80.0845 46.2148 80.0845 46.0986 cv
80.0845 45.9834 80.3379 45.8896 80.6514 45.8896 cv
80.9639 45.8896 81.2178 45.9834 81.2178 46.0986 cv
cp
level3{
gsave
clp
[.504401 0 0 .243912 80.6509 46.0996 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.504401 0 0 .243912 80.6509 46.0996 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
83.436 46.3633 mo
83.436 46.4541 83.2876 46.5273 83.103 46.5273 cv
82.9185 46.5273 82.7695 46.4541 82.7695 46.3633 cv
82.7695 46.2725 82.9185 46.2002 83.103 46.2002 cv
83.2876 46.2002 83.436 46.2725 83.436 46.3633 cv
cp
level3{
gsave
clp
[.296482 0 0 .190695 83.1025 46.3633 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296482 0 0 .190695 83.1025 46.3633 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.0635 46.3193 mo
80.0635 46.4102 79.9136 46.4824 79.73 46.4824 cv
79.5454 46.4824 79.3955 46.4102 79.3955 46.3193 cv
79.3955 46.2285 79.5454 46.1553 79.73 46.1553 cv
79.9136 46.1553 80.0635 46.2285 80.0635 46.3193 cv
cp
level3{
gsave
clp
[.2969 0 0 .190964 79.7295 46.3184 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.2969 0 0 .190964 79.7295 46.3184 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
82.2188 46.4678 mo
82.458 45.9395 82.8491 45.1797 83.4248 44.3818 cv
84.5005 42.8906 85.6665 42.5225 85.6665 42.5225 cv
85.6665 42.5225 84.52 42.6006 83.2153 44.3613 cv
82.5083 45.3125 82.1387 46.0195 81.9463 46.4678 cv
82.2188 46.4678 li
cp
level3{
gsave
clp
[-2.63913 5.20472 -4.64331 -2.68112 84.9956 42.1348 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.63913 5.20472 -4.64331 -2.68112 84.9956 42.1348 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
81.6772 46.3389 mo
81.9478 46.0498 82.2954 45.7158 82.7266 45.373 cv
84.0239 44.3389 85.4082 44.0762 85.4082 44.0762 cv
85.4082 44.0762 84.0518 44.1396 82.4785 45.3604 cv
81.9819 45.7451 81.6221 46.0732 81.3618 46.3389 cv
81.6772 46.3389 li
cp
level3{
gsave
clp
[-2.27136 4.66843 -3.85369 -2.3364 84.269 43.3867 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.27136 4.66843 -3.85369 -2.3364 84.269 43.3867 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
80.0112 46.248 mo
80.0273 46.2012 80.0459 46.1523 80.0688 46.1016 cv
80.3774 45.4111 81.4941 44.9072 81.4941 44.9072 cv
81.4941 44.9072 80.2168 45.3467 79.8125 46.1748 cv
79.8003 46.2002 79.7886 46.2246 79.7773 46.248 cv
80.0112 46.248 li
cp
level3{
gsave
clp
[.0413235 1.52317 -2.35382 .929577 80.627 45.248 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0413235 1.52317 -2.35382 .929577 80.627 45.248 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
81.8203 46.4229 mo
81.749 46.1357 81.6323 45.8057 81.4419 45.4443 cv
80.8042 44.2373 79.3823 44.0508 79.3823 44.0508 cv
79.3823 44.0508 80.9478 44.083 81.7495 45.5205 cv
81.9463 45.874 82.0752 46.1719 82.1592 46.4229 cv
81.8203 46.4229 li
cp
level3{
gsave
clp
[.245598 2.80547 2.68137 .482436 80.688 44.2656 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.245598 2.80547 2.68137 .482436 80.688 44.2656 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
80.5747 46.248 mo
81.4502 46.0947 82.2017 46.0732 82.2017 46.0732 cv
82.2017 46.0732 81.2959 46.0459 80.1943 46.248 cv
80.5747 46.248 li
cp
level3{
gsave
clp
[-2.08468 2.44165 -4.9204 -1.89291 81.5005 45.8037 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.08468 2.44165 -4.9204 -1.89291 81.5005 45.8037 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
81.8857 46.0986 mo
82.6357 45.9863 83.2349 45.9688 83.2349 45.9688 cv
83.2349 45.9688 82.4702 45.9463 81.4932 46.0986 cv
81.8857 46.0986 li
cp
level3{
gsave
clp
[-2.10755 2.46844 -4.97437 -1.91367 82.6191 45.7324 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.10755 2.46844 -4.97437 -1.91367 82.6191 45.7324 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
82.3257 45.9922 mo
82.5298 45.7627 82.7993 45.5049 83.1533 45.2354 cv
84.3774 44.3027 86.165 43.9658 86.165 43.9658 cv
86.165 43.9658 84.3018 44.1436 82.7983 45.248 cv
82.4077 45.5361 82.125 45.7832 81.9175 45.9922 cv
82.3257 45.9922 li
cp
level3{
gsave
clp
[-1.33837 3.77919 -4.66144 -1.07203 84.5347 43.5908 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.33837 3.77919 -4.66144 -1.07203 84.5347 43.5908 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
82.4399 45.7695 mo
83.7764 45.6357 84.9766 45.6475 84.9766 45.6475 cv
84.9766 45.6475 83.4453 45.5703 81.7095 45.7695 cv
82.4399 45.7695 li
cp
level3{
gsave
clp
[-3.1567 2.55414 -8.29425 -2.70696 83.8662 45.2852 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.1567 2.55414 -8.29425 -2.70696 83.8662 45.2852 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
82.0723 46.292 mo
82.2407 46.2393 82.4214 46.1885 82.6138 46.1357 cv
84.7085 45.5732 87.3521 45.5479 87.3521 45.5479 cv
87.3521 45.5479 84.667 45.4395 82.1123 46.0986 cv
81.8535 46.165 81.6206 46.2295 81.4102 46.292 cv
82.0723 46.292 li
cp
level3{
gsave
clp
[-3.43402 3.41115 -8.55749 -3.03259 85.437 44.8701 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.43402 3.41115 -8.55749 -3.03259 85.437 44.8701 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
81.6221 46.376 mo
81.4307 46.2012 81.1958 46.0195 80.9106 45.8379 cv
79.5171 44.9541 77.3521 44.8916 77.3521 44.8916 cv
77.3521 44.8916 79.6309 44.75 81.3467 45.7852 cv
81.7021 46 81.9761 46.1973 82.1885 46.376 cv
81.6221 46.376 li
cp
level3{
gsave
clp
[1.81103 4.93221 7.2862 -4.15581 79.127 43.8799 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.81103 4.93221 7.2862 -4.15581 79.127 43.8799 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
80.873 46.2363 mo
80.7725 46.1748 80.6587 46.1084 80.5327 46.04 cv
79.832 45.6611 79.0913 45.5098 79.0913 45.5098 cv
79.0913 45.5098 79.8169 45.6006 80.665 46.0488 cv
80.7944 46.1172 80.9063 46.1797 81.0029 46.2363 cv
80.873 46.2363 li
cp
level3{
gsave
clp
[1.05899 1.45275 1.76739 -.290714 79.7085 45.4082 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.05899 1.45275 1.76739 -.290714 79.7085 45.4082 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
81.1807 46.1025 mo
81.3687 46.0078 81.5903 45.9082 81.8496 45.8086 cv
83.0283 45.3535 84.4438 45.2832 84.4438 45.2832 cv
84.4438 45.2832 83.019 45.2559 81.5854 45.79 cv
81.2778 45.9053 81.0317 46.0098 80.8359 46.1025 cv
81.1807 46.1025 li
cp
level3{
gsave
clp
[-1.86517 2.4958 -4.16549 -1.73652 83.3018 44.8066 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.86517 2.4958 -4.16549 -1.73652 83.3018 44.8066 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
80.4517 46.3555 mo
80.3525 46.1992 80.2095 46.0225 80.0039 45.8408 cv
79.3491 45.2627 78.2349 45.124 78.2349 45.124 cv
78.2349 45.124 79.4243 45.1504 80.2329 45.8311 cv
80.4756 46.0352 80.6338 46.2109 80.7354 46.3555 cv
80.4517 46.3555 li
cp
level3{
gsave
clp
[.503764 3.72466 2.53258 -1.97942 79.2915 44.2969 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.503764 3.72466 2.53258 -1.97942 79.2915 44.2969 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
81.7046 46.248 mo
81.7686 46.2119 81.8359 46.1738 81.9063 46.1357 cv
82.9565 45.5703 84.2402 45.4297 84.2402 45.4297 cv
84.2402 45.4297 82.9443 45.4609 81.6655 46.1279 cv
81.5854 46.1699 81.5112 46.21 81.4409 46.248 cv
81.7046 46.248 li
cp
level3{
gsave
clp
[-1.5332 2.80329 -3.56724 -1.42864 83.2744 45.043 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.5332 2.80329 -3.56724 -1.42864 83.2744 45.043 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
80.9653 46.248 mo
80.9424 46.1631 80.9087 46.0732 80.8599 45.9805 cv
80.5166 45.3154 79.292 44.9834 79.292 44.9834 cv
79.292 44.9834 80.6914 45.2227 81.1416 46.0127 cv
81.189 46.0967 81.2275 46.1748 81.2573 46.248 cv
80.9653 46.248 li
cp
level3{
gsave
clp
[-.0516387 2.11478 3.41664 .0561196 80.2881 45 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0516387 2.11478 3.41664 .0561196 80.2881 45 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
82.1152 46.3643 mo
81.9819 46.2578 81.8306 46.1475 81.6582 46.0342 cv
80.3291 45.167 78.1328 44.8975 78.1328 44.8975 cv
78.1328 44.8975 80.4644 45.0098 82.1084 46.0352 cv
82.2944 46.1514 82.4565 46.2617 82.5977 46.3643 cv
82.1152 46.3643 li
cp
level3{
gsave
clp
[1.35973 3.73365 6.32202 -1.4499 79.9478 44.4814 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.35973 3.73365 6.32202 -1.4499 79.9478 44.4814 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
82.855 46.2959 mo
82.8057 46.1885 82.7368 46.0723 82.6416 45.9502 cv
82.1392 45.3057 80.8833 44.9307 80.8833 44.9307 cv
80.8833 44.9307 82.2808 45.2256 82.9185 45.9951 cv
83.0093 46.1045 83.0806 46.2051 83.1357 46.2959 cv
82.855 46.2959 li
cp
level3{
gsave
clp
[.172818 1.80286 2.95544 .402624 81.9585 45.0771 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.172818 1.80286 2.95544 .402624 81.9585 45.0771 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
81.2573 46.3818 mo
81.019 46.1172 80.6265 45.7363 80.0522 45.3379 cv
78.9756 44.5898 77.8096 44.4053 77.8096 44.4053 cv
77.8096 44.4053 78.9561 44.4453 80.2607 45.3262 cv
80.9658 45.8027 81.3374 46.1572 81.5298 46.3818 cv
81.2573 46.3818 li
cp
level3{
gsave
clp
[1.78629 3.5228 3.14281 -1.8147 78.8608 43.7988 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.78629 3.5228 3.14281 -1.8147 78.8608 43.7988 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
81.5415 46.4697 mo
81.4321 46.2686 81.2876 46.042 81.0991 45.8057 cv
80.4453 44.9873 79.4897 44.6914 79.4897 44.6914 cv
79.4897 44.6914 80.4858 44.8477 81.2881 45.8164 cv
81.4961 46.0684 81.6484 46.2852 81.7588 46.4697 cv
81.5415 46.4697 li
cp
level3{
gsave
clp
[1.02506 2.89449 3.57021 -.821071 80.2466 44.5176 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.02506 2.89449 3.57021 -.821071 80.2466 44.5176 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
80.3193 46.3086 mo
80.3691 46.2012 80.438 46.0869 80.5332 45.9639 cv
81.0347 45.3193 82.2915 44.9453 82.2915 44.9453 cv
82.2915 44.9453 80.894 45.2393 80.2563 46.0088 cv
80.1655 46.1191 80.0942 46.2188 80.0386 46.3086 cv
80.3193 46.3086 li
cp
level3{
gsave
clp
[-.172498 1.79951 -2.94995 .401877 81.2168 45.0918 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.172498 1.79951 -2.94995 .401877 81.2168 45.0918 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
82.0259 46.4834 mo
81.9819 46.2734 81.8906 46.0137 81.709 45.7236 cv
81.2344 44.9629 80.1768 44.5361 80.1768 44.5361 cv
80.1768 44.5361 81.3413 44.8652 81.9375 45.7715 cv
82.1309 46.0664 82.2368 46.3008 82.2915 46.4834 cv
82.0259 46.4834 li
cp
level3{
gsave
clp
[2.11475 0 0 2.11475 80.1768 45.5098 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.11475 0 0 2.11475 80.1768 45.5098 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
82.7446 46.4365 mo
82.9082 46.3516 83.0942 46.2627 83.3052 46.1719 cv
84.7578 45.5469 86.8691 45.3184 86.8691 45.3184 cv
86.8691 45.3184 84.6699 45.4414 82.8877 46.1816 cv
82.668 46.2725 82.4766 46.3574 82.3105 46.4365 cv
82.7446 46.4365 li
cp
level3{
gsave
clp
[-1.60072 2.53839 -5.50874 -.696704 85.0845 45.0928 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.60072 2.53839 -5.50874 -.696704 85.0845 45.0928 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
83.2139 46.4873 mo
83.3076 46.1514 83.4438 45.7451 83.6411 45.3154 cv
84.1641 44.1729 84.9219 43.7666 84.9219 43.7666 cv
84.9219 43.7666 84.1328 43.9766 83.4907 45.3301 cv
83.2666 45.8018 83.125 46.1865 83.0342 46.4873 cv
83.2139 46.4873 li
cp
level3{
gsave
clp
[-.578462 4.6472 -1.97409 -1.36608 84.2085 43.2734 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.578462 4.6472 -1.97409 -1.36608 84.2085 43.2734 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
80.4219 46.9141 mo
80.4219 47.0039 80.2725 47.0781 80.0884 47.0781 cv
79.9038 47.0781 79.7549 47.0039 79.7549 46.9141 cv
79.7549 46.8232 79.9038 46.75 80.0884 46.75 cv
80.2725 46.75 80.4219 46.8232 80.4219 46.9141 cv
cp
level3{
gsave
clp
[.296958 0 0 .191001 80.0884 46.9131 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296958 0 0 .191001 80.0884 46.9131 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.0493 47.1768 mo
81.0493 47.2666 80.9004 47.3398 80.7153 47.3398 cv
80.5308 47.3398 80.3818 47.2666 80.3818 47.1768 cv
80.3818 47.0869 80.5308 47.0137 80.7153 47.0137 cv
80.9004 47.0137 81.0493 47.0869 81.0493 47.1768 cv
cp
level3{
gsave
clp
[.296424 0 0 .190657 80.7153 47.1758 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296424 0 0 .190657 80.7153 47.1758 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.9106 46.3486 mo
80.9106 46.4395 80.7612 46.5127 80.5762 46.5127 cv
80.3916 46.5127 80.2427 46.4395 80.2427 46.3486 cv
80.2427 46.2588 80.3916 46.1846 80.5762 46.1846 cv
80.7612 46.1846 80.9106 46.2588 80.9106 46.3486 cv
cp
level3{
gsave
clp
[.297226 0 0 .191174 80.5767 46.3477 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.297226 0 0 .191174 80.5767 46.3477 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.2036 46.8154 mo
81.2036 46.9053 81.0547 46.9785 80.8701 46.9785 cv
80.6851 46.9785 80.5356 46.9053 80.5356 46.8154 cv
80.5356 46.7246 80.6851 46.6514 80.8701 46.6514 cv
81.0547 46.6514 81.2036 46.7246 81.2036 46.8154 cv
cp
level3{
gsave
clp
[.296893 0 0 .190959 80.8696 46.8145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296893 0 0 .190959 80.8696 46.8145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.9531 46.8154 mo
81.9531 46.9053 81.8042 46.9785 81.6196 46.9785 cv
81.436 46.9785 81.2861 46.9053 81.2861 46.8154 cv
81.2861 46.7246 81.436 46.6514 81.6196 46.6514 cv
81.8042 46.6514 81.9531 46.7246 81.9531 46.8154 cv
cp
level3{
gsave
clp
[.296636 0 0 .190794 81.6196 46.8145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296636 0 0 .190794 81.6196 46.8145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
82.2734 46.999 mo
82.2734 47.0889 82.124 47.1621 81.9395 47.1621 cv
81.7559 47.1621 81.606 47.0889 81.606 46.999 cv
81.606 46.9092 81.7559 46.835 81.9395 46.835 cv
82.124 46.835 82.2734 46.9092 82.2734 46.999 cv
cp
level3{
gsave
clp
[.296753 0 0 .190869 81.9395 46.998 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296753 0 0 .190869 81.9395 46.998 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
82.5356 46.542 mo
82.4702 46.4434 82.665 46.2891 82.9707 46.1982 cv
83.2764 46.1074 83.5781 46.1143 83.644 46.2139 cv
83.71 46.3125 83.5156 46.4668 83.209 46.5576 cv
82.9028 46.6484 82.6016 46.6416 82.5356 46.542 cv
cp
level3{
gsave
clp
[-.492819 .145713 -.138605 -.209685 83.0898 46.3779 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.492819 .145713 -.138605 -.209685 83.0898 46.3779 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
82.3354 46.5742 mo
82.3354 46.6826 82.1099 46.7705 81.832 46.7705 cv
81.5547 46.7705 81.3291 46.6826 81.3291 46.5742 cv
81.3291 46.4668 81.5547 46.3779 81.832 46.3779 cv
82.1099 46.3779 82.3354 46.4668 82.3354 46.5742 cv
cp
level3{
gsave
clp
[.447741 0 0 .228608 81.8325 46.5742 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.447741 0 0 .228608 81.8325 46.5742 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
82.5698 46.7803 mo
82.4858 46.7617 82.4512 46.623 82.4937 46.4697 cv
82.5352 46.3154 82.6382 46.2051 82.7236 46.2227 cv
82.8071 46.2412 82.8413 46.3799 82.7998 46.5342 cv
82.7573 46.6885 82.6553 46.7988 82.5698 46.7803 cv
cp
level3{
gsave
clp
[-.0675468 .247672 -.17894 -.037921 82.647 46.501 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0675468 .247672 -.17894 -.037921 82.647 46.501 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
83.7495 46.751 mo
83.7896 46.8682 83.6079 47.0195 83.3452 47.0898 cv
83.082 47.1592 82.8359 47.1211 82.7959 47.0029 cv
82.7559 46.8857 82.937 46.7334 83.2007 46.6641 cv
83.4634 46.5947 83.709 46.6328 83.7495 46.751 cv
cp
level3{
gsave
clp
[.423847 -.112473 .085243 .248626 83.2725 46.876 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.423847 -.112473 .085243 .248626 83.2725 46.876 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
82.4019 46.5176 mo
82.3882 46.5918 82.1826 46.626 81.9419 46.5918 cv
81.7012 46.5596 81.5166 46.4717 81.5303 46.3965 cv
81.5435 46.3223 81.749 46.2891 81.9902 46.3213 cv
82.231 46.3555 82.4155 46.4434 82.4019 46.5176 cv
cp
level3{
gsave
clp
[.387399 .0533118 -.028433 .157566 81.9663 46.457 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.387399 .0533118 -.028433 .157566 81.9663 46.457 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.106 46.5879 mo
81.1113 46.6963 80.8911 46.793 80.6133 46.8027 cv
80.3359 46.8145 80.1064 46.7354 80.1011 46.627 cv
80.0962 46.5186 80.3159 46.4229 80.5938 46.4111 cv
80.8716 46.4004 81.1006 46.4795 81.106 46.5879 cv
cp
level3{
gsave
clp
[.447047 -.01774 .0118266 .228254 80.6016 46.6074 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.447047 -.01774 .0118266 .228254 80.6016 46.6074 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
82.5298 46.4326 mo
82.5591 46.5166 82.3828 46.6387 82.1357 46.7061 cv
81.8882 46.7754 81.6641 46.7617 81.6348 46.6797 cv
81.6055 46.5957 81.7817 46.4736 82.0288 46.4063 cv
82.2754 46.3379 82.501 46.3496 82.5298 46.4326 cv
cp
level3{
gsave
clp
[.397466 -.110013 .0626956 .175074 82.0811 46.5557 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.397466 -.110013 .0626956 .175074 82.0811 46.5557 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.7363 46.5762 mo
81.7407 46.6699 81.5562 46.752 81.3232 46.7617 cv
81.0898 46.7715 80.8979 46.7031 80.8926 46.6094 cv
80.8882 46.5166 81.0728 46.4336 81.3057 46.4238 cv
81.5386 46.415 81.7314 46.4834 81.7363 46.5762 cv
cp
level3{
gsave
clp
[.375197 -.0142031 .0106523 .196476 81.3125 46.5938 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.375197 -.0142031 .0106523 .196476 81.3125 46.5938 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.3936 46.5576 mo
81.3936 46.6475 81.2358 46.7188 81.041 46.7188 cv
80.8472 46.7188 80.689 46.6475 80.689 46.5576 cv
80.689 46.4697 80.8472 46.3975 81.041 46.3975 cv
81.2358 46.3975 81.3936 46.4697 81.3936 46.5576 cv
cp
level3{
gsave
clp
[.312709 0 0 .188336 81.0415 46.5566 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.312709 0 0 .188336 81.0415 46.5566 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.2964 46.582 mo
80.2964 46.6719 80.1382 46.7432 79.9448 46.7432 cv
79.7495 46.7432 79.5923 46.6719 79.5923 46.582 cv
79.5923 46.4941 79.7495 46.4209 79.9448 46.4209 cv
80.1382 46.4209 80.2964 46.4941 80.2964 46.582 cv
cp
level3{
gsave
clp
[.312905 0 0 .188454 79.9443 46.5811 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.312905 0 0 .188454 79.9443 46.5811 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.6431 46.6836 mo
80.6099 46.752 80.3999 46.7402 80.1768 46.6553 cv
79.9531 46.5703 79.7988 46.4453 79.8325 46.376 cv
79.8667 46.3066 80.0747 46.3193 80.2993 46.4033 cv
80.5234 46.4883 80.6772 46.6143 80.6431 46.6836 cv
cp
level3{
gsave
clp
[.360728 .137195 -.0709629 .146657 80.2412 46.5293 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.360728 .137195 -.0709629 .146657 80.2412 46.5293 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.4766 46.3984 mo
80.4424 46.4688 80.2339 46.4561 80.0098 46.3711 cv
79.7856 46.2861 79.6323 46.1611 79.6655 46.0908 cv
79.6997 46.0225 79.9082 46.0342 80.1323 46.1191 cv
80.3564 46.2041 80.5107 46.3291 80.4766 46.3984 cv
cp
level3{
gsave
clp
[.360792 .137219 -.0709755 .146683 80.0742 46.2451 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.360792 .137219 -.0709755 .146683 80.0742 46.2451 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
83.1797 46.6953 mo
83.1851 46.8037 82.9639 46.9004 82.6865 46.9111 cv
82.4087 46.9219 82.1802 46.8428 82.1748 46.7354 cv
82.1689 46.627 82.3892 46.5303 82.6675 46.5195 cv
82.9448 46.5078 83.1733 46.5879 83.1797 46.6953 cv
cp
level3{
gsave
clp
[.447032 -.0177394 .0118262 .228246 82.6753 46.7158 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.447032 -.0177394 .0118262 .228246 82.6753 46.7158 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.2119 46.375 mo
80.2422 46.458 80.0649 46.5811 79.8174 46.6484 cv
79.5703 46.7168 79.3462 46.7051 79.3169 46.6211 cv
79.2871 46.5381 79.4634 46.416 79.7109 46.3477 cv
79.9585 46.2793 80.1831 46.292 80.2119 46.375 cv
cp
level3{
gsave
clp
[.397691 -.110075 .062731 .175173 79.7632 46.498 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.397691 -.110075 .062731 .175173 79.7632 46.498 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.3735 46.873 mo
80.3428 46.9014 80.2622 46.8799 80.1953 46.8242 cv
80.1279 46.7686 80.0981 46.6992 80.1294 46.6699 cv
80.1611 46.6416 80.2407 46.6621 80.3086 46.7188 cv
80.375 46.7734 80.4053 46.8428 80.3735 46.873 cv
cp
level3{
gsave
clp
[.00114939 .000949492 -.000699626 .000649653 1126.47 263.151 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.00114939 .000949492 -.000699626 .000649653 1126.47 263.151 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.6157 46.6299 mo
81.6211 46.7227 81.4365 46.8057 81.2036 46.8154 cv
80.9707 46.8242 80.7783 46.7559 80.7739 46.6621 cv
80.7686 46.5693 80.9541 46.4863 81.187 46.4766 cv
81.4189 46.4678 81.6118 46.5361 81.6157 46.6299 cv
cp
level3{
gsave
clp
[.374984 -.014195 .0106462 .196364 81.1924 46.6475 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.374984 -.014195 .0106462 .196364 81.1924 46.6475 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
81.8896 46.5381 mo
81.8896 46.6279 81.7314 46.7002 81.5381 46.7002 cv
81.3433 46.7002 81.186 46.6279 81.186 46.5381 cv
81.186 46.4502 81.3433 46.3779 81.5381 46.3779 cv
81.7314 46.3779 81.8896 46.4502 81.8896 46.5381 cv
cp
level3{
gsave
clp
[.31277 0 0 .188373 81.5381 46.5381 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.31277 0 0 .188373 81.5381 46.5381 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
80.1709 46.8115 mo
80.1572 46.8867 79.9517 46.9199 79.7109 46.8867 cv
79.4697 46.8535 79.2856 46.7656 79.2993 46.6904 cv
79.313 46.6162 79.5181 46.582 79.7593 46.6162 cv
80 46.6494 80.1846 46.7373 80.1709 46.8115 cv
cp
level3{
gsave
clp
[.387388 .0533102 -.0284321 .157561 79.7354 46.752 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.387388 .0533102 -.0284321 .157561 79.7354 46.752 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
83.1216 47.3428 mo
83.1216 47.4336 82.9722 47.5068 82.7876 47.5068 cv
82.603 47.5068 82.4541 47.4336 82.4541 47.3428 cv
82.4541 47.252 82.603 47.1787 82.7876 47.1787 cv
82.9722 47.1787 83.1216 47.252 83.1216 47.3428 cv
cp
level3{
gsave
clp
[.297082 0 0 .191081 82.7876 47.3418 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.297082 0 0 .191081 82.7876 47.3418 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
82.2969 46.6104 mo
82.2969 46.7002 82.147 46.7734 81.9629 46.7734 cv
81.7783 46.7734 81.6294 46.7002 81.6294 46.6104 cv
81.6294 46.5195 81.7783 46.4463 81.9629 46.4463 cv
82.147 46.4463 82.2969 46.5195 82.2969 46.6104 cv
cp
level3{
gsave
clp
[.29676 0 0 .190874 81.9629 46.6094 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.29676 0 0 .190874 81.9629 46.6094 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
84.8008 46.126 mo
84.8008 46.2324 84.6538 46.3193 84.4727 46.3193 cv
84.29 46.3193 84.1436 46.2324 84.1436 46.126 cv
84.1436 46.0205 84.29 45.9336 84.4727 45.9336 cv
84.6538 45.9336 84.8008 46.0205 84.8008 46.126 cv
cp
level3{
gsave
clp
[.292254 0 0 .224942 84.4722 46.1279 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292254 0 0 .224942 84.4722 46.1279 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
85.5059 46.0488 mo
85.4688 46.1807 85.1172 46.2295 84.7192 46.1592 cv
84.3213 46.0889 84.0278 45.9248 84.0645 45.793 cv
84.1011 45.6621 84.4536 45.6133 84.8516 45.6836 cv
85.2495 45.7539 85.542 45.917 85.5059 46.0488 cv
cp
level3{
gsave
clp
[.641023 .114313 -.0766913 .277825 84.7847 45.9229 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.641023 .114313 -.0766913 .277825 84.7847 45.9229 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
87.3623 46.3477 mo
87.2974 46.2305 87.4897 46.0488 87.7905 45.9424 cv
88.0923 45.835 88.3892 45.8438 88.4541 45.9609 cv
88.519 46.0771 88.3271 46.2588 88.0249 46.3662 cv
87.7241 46.4736 87.4268 46.4648 87.3623 46.3477 cv
cp
level3{
gsave
clp
[-.486263 .172218 -.137485 -.246026 87.9082 46.1543 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.486263 .172218 -.137485 -.246026 87.9082 46.1543 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
86.9888 45.8926 mo
86.9492 45.7686 87.1787 45.6162 87.4985 45.5537 cv
87.8184 45.4893 88.1089 45.5391 88.1475 45.6641 cv
88.186 45.7881 87.958 45.9395 87.6372 46.0029 cv
87.3164 46.0664 87.0264 46.0166 86.9888 45.8926 cv
cp
level3{
gsave
clp
[-.515571 .101376 -.0811011 -.26213 87.5679 45.7783 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.515571 .101376 -.0811011 -.26213 87.5679 45.7783 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
87.3662 45.6787 mo
87.4229 45.832 87.2383 46.0107 86.9521 46.0791 cv
86.6665 46.1475 86.3887 46.0801 86.3311 45.9277 cv
86.2739 45.7744 86.459 45.5957 86.7451 45.5273 cv
87.0303 45.459 87.3086 45.5264 87.3662 45.6787 cv
cp
level3{
gsave
clp
[.460741 -.110114 .121705 .32165 86.8467 45.8037 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.460741 -.110114 .121705 .32165 86.8467 45.8037 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
87.1157 45.9756 mo
87.0884 46.1377 86.7344 46.2354 86.3237 46.1914 cv
85.9121 46.1484 85.6006 45.9814 85.627 45.8193 cv
85.6533 45.6572 86.0083 45.5605 86.4199 45.6035 cv
86.8306 45.6475 87.1421 45.8145 87.1157 45.9756 cv
cp
level3{
gsave
clp
[.661443 .0694732 -.056447 .343024 86.3735 45.8965 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.661443 .0694732 -.056447 .343024 86.3735 45.8965 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
83.6167 46.2373 mo
83.5518 46.1201 83.7437 45.9385 84.0449 45.832 cv
84.3467 45.7246 84.644 45.7334 84.7095 45.8496 cv
84.7734 45.9668 84.582 46.1475 84.2798 46.2549 cv
83.9785 46.3623 83.6812 46.3535 83.6167 46.2373 cv
cp
level3{
gsave
clp
[-.486322 .172239 -.137502 -.246056 84.1631 46.043 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.486322 .172239 -.137502 -.246056 84.1631 46.043 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
86.0137 45.8438 mo
86.0708 45.9961 85.8857 46.1748 85.5996 46.2441 cv
85.3145 46.3125 85.0361 46.2451 84.9785 46.0928 cv
84.9219 45.9395 85.1069 45.7607 85.3931 45.6924 cv
85.6782 45.624 85.9565 45.6904 86.0137 45.8438 cv
cp
level3{
gsave
clp
[.460662 -.110095 .121684 .321594 85.4946 45.9688 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.460662 -.110095 .121684 .321594 85.4946 45.9688 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
85.5083 45.8252 mo
85.5083 45.9619 85.2578 46.0732 84.9497 46.0732 cv
84.6401 46.0732 84.3916 45.9619 84.3916 45.8252 cv
84.3916 45.6895 84.6401 45.5791 84.9497 45.5791 cv
85.2578 45.5791 85.5083 45.6895 85.5083 45.8252 cv
cp
level3{
gsave
clp
[.496589 0 0 .288109 84.9497 45.8252 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.496589 0 0 .288109 84.9497 45.8252 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
87.6938 46.1377 mo
87.6938 46.2441 87.5469 46.3301 87.3652 46.3301 cv
87.1831 46.3301 87.0361 46.2441 87.0361 46.1377 cv
87.0361 46.0303 87.1831 45.9443 87.3652 45.9443 cv
87.5469 45.9443 87.6938 46.0303 87.6938 46.1377 cv
cp
level3{
gsave
clp
[.292369 0 0 .22503 87.3647 46.1387 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292369 0 0 .22503 87.3647 46.1387 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
84.3701 46.085 mo
84.3701 46.1914 84.2227 46.2773 84.041 46.2773 cv
83.8599 46.2773 83.7119 46.1914 83.7119 46.085 cv
83.7119 45.9775 83.8599 45.8926 84.041 45.8926 cv
84.2227 45.8926 84.3701 45.9775 84.3701 46.085 cv
cp
level3{
gsave
clp
[.29227 0 0 .224954 84.041 46.0859 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.29227 0 0 .224954 84.041 46.0859 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
86.4937 46.2598 mo
86.729 45.6377 87.1147 44.7432 87.6816 43.8047 cv
88.7422 42.0488 89.8906 41.6133 89.8906 41.6133 cv
89.8906 41.6133 88.7612 41.7061 87.4751 43.7793 cv
86.7798 44.8994 86.4146 45.7314 86.2251 46.2598 cv
86.4937 46.2598 li
cp
level3{
gsave
clp
[-2.92868 5.77576 -5.15275 -2.97528 89.3521 41.3022 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.92868 5.77576 -5.15275 -2.97528 89.3521 41.3022 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
85.96 46.1084 mo
86.2271 45.7676 86.5693 45.375 86.9941 44.9717 cv
88.2725 43.7539 89.6367 43.4434 89.6367 43.4434 cv
89.6367 43.4434 88.2998 43.5195 86.749 44.9561 cv
86.2603 45.4092 85.9053 45.7949 85.6489 46.1084 cv
85.96 46.1084 li
cp
level3{
gsave
clp
[-2.44801 5.03151 -4.15341 -2.51811 88.5952 42.8135 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.44801 5.03151 -4.15341 -2.51811 88.5952 42.8135 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
84.3188 46.002 mo
84.335 45.9463 84.3535 45.8887 84.3755 45.8291 cv
84.6797 45.0156 85.7798 44.4219 85.7798 44.4219 cv
85.7798 44.4219 84.5215 44.9395 84.123 45.916 cv
84.1108 45.9443 84.0996 45.9727 84.0889 46.002 cv
84.3188 46.002 li
cp
level3{
gsave
clp
[.0547652 2.01863 -3.11947 1.23195 84.9224 44.7607 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0547652 2.01863 -3.11947 1.23195 84.9224 44.7607 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
86.1011 46.2061 mo
86.0317 45.8691 85.916 45.4795 85.728 45.0547 cv
85.1006 43.6338 83.6992 43.4141 83.6992 43.4141 cv
83.6992 43.4141 85.2417 43.4512 86.0317 45.1445 cv
86.2251 45.5605 86.3525 45.9121 86.4341 46.2061 cv
86.1011 46.2061 li
cp
level3{
gsave
clp
[.298491 3.40967 3.25885 .586336 84.9658 43.6279 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.298491 3.40967 3.25885 .586336 84.9658 43.6279 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
84.874 46.002 mo
85.7368 45.8203 86.4771 45.7949 86.4771 45.7949 cv
86.4771 45.7949 85.584 45.7637 84.4995 46.002 cv
84.874 46.002 li
cp
level3{
gsave
clp
[-2.13051 2.49532 -5.02855 -1.93451 85.7969 45.5342 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.13051 2.49532 -5.02855 -1.93451 85.7969 45.5342 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
86.1655 45.8252 mo
86.9048 45.6924 87.4946 45.6729 87.4946 45.6729 cv
87.4946 45.6729 86.7422 45.6445 85.7788 45.8252 cv
86.1655 45.8252 li
cp
level3{
gsave
clp
[-2.14054 2.50707 -5.05223 -1.94362 86.8955 45.4434 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.14054 2.50707 -5.05223 -1.94362 86.8955 45.4434 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
86.5991 45.7002 mo
86.7993 45.4297 87.0649 45.127 87.4146 44.8086 cv
88.6206 43.7109 90.3818 43.3145 90.3818 43.3145 cv
90.3818 43.3145 88.5464 43.5234 87.0649 44.8242 cv
86.6802 45.1621 86.4009 45.4541 86.1973 45.7002 cv
86.5991 45.7002 li
cp
level3{
gsave
clp
[-1.49206 4.21317 -5.19674 -1.19514 88.8384 42.96 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.49206 4.21317 -5.19674 -1.19514 88.8384 42.96 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
86.7109 45.4385 mo
88.0288 45.2803 89.2104 45.2939 89.2104 45.2939 cv
89.2104 45.2939 87.7012 45.2031 85.9917 45.4385 cv
86.7109 45.4385 li
cp
level3{
gsave
clp
[-3.17446 2.56851 -8.34091 -2.72219 88.127 44.9404 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.17446 2.56851 -8.34091 -2.72219 88.127 44.9404 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
86.3496 46.0518 mo
86.5156 45.9912 86.6938 45.9297 86.8828 45.8691 cv
88.9473 45.2061 91.5513 45.1768 91.5513 45.1768 cv
91.5513 45.1768 88.9063 45.0498 86.3887 45.8252 cv
86.1338 45.9033 85.9038 45.9795 85.6963 46.0518 cv
86.3496 46.0518 li
cp
level3{
gsave
clp
[-3.55458 3.53089 -8.8579 -3.13905 89.7163 44.5273 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.55458 3.53089 -8.8579 -3.13905 89.7163 44.5273 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
85.9053 46.1514 mo
85.7168 45.9463 85.4863 45.7314 85.2046 45.5176 cv
83.8315 44.4775 81.6992 44.4043 81.6992 44.4043 cv
81.6992 44.4043 83.9443 44.2373 85.6353 45.4561 cv
85.9849 45.709 86.2549 45.9414 86.4644 46.1514 cv
85.9053 46.1514 li
cp
level3{
gsave
clp
[1.9058 5.19031 7.66748 -4.37328 83.4058 43.4326 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.9058 5.19031 7.66748 -4.37328 83.4058 43.4326 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
85.1675 45.9883 mo
85.0688 45.915 84.9575 45.8359 84.8325 45.7559 cv
84.1426 45.3105 83.4126 45.1328 83.4126 45.1328 cv
83.4126 45.1328 84.1265 45.2383 84.9629 45.7666 cv
85.0898 45.8467 85.2002 45.9209 85.2964 45.9883 cv
85.1675 45.9883 li
cp
level3{
gsave
clp
[1.18546 1.62625 1.97847 -.325433 83.9751 45.04 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.18546 1.62625 1.97847 -.325433 83.9751 45.04 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
85.4712 45.8291 mo
85.6558 45.7178 85.8745 45.6006 86.1309 45.4824 cv
87.2915 44.9473 88.6855 44.8652 88.6855 44.8652 cv
88.6855 44.8652 87.2827 44.833 85.8696 45.4629 cv
85.5664 45.5967 85.3242 45.7197 85.1304 45.8291 cv
85.4712 45.8291 li
cp
level3{
gsave
clp
[-1.96358 2.62749 -4.38527 -1.82814 87.6045 44.415 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.96358 2.62749 -4.38527 -1.82814 87.6045 44.415 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
84.7524 46.1279 mo
84.6548 45.9434 84.5142 45.7354 84.3115 45.5215 cv
83.6665 44.8418 82.5684 44.6787 82.5684 44.6787 cv
82.5684 44.6787 83.7402 44.708 84.5366 45.5098 cv
84.7759 45.751 84.9326 45.957 85.0322 46.1279 cv
84.7524 46.1279 li
cp
level3{
gsave
clp
[.533671 3.94579 2.68293 -2.09693 83.5957 43.874 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.533671 3.94579 2.68293 -2.09693 83.5957 43.874 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
85.9878 46.002 mo
86.0508 45.958 86.1172 45.9131 86.1865 45.8691 cv
87.2207 45.2041 88.4858 45.0371 88.4858 45.0371 cv
88.4858 45.0371 87.209 45.0752 85.9482 45.8604 cv
85.8706 45.9092 85.7974 45.9561 85.7275 46.002 cv
85.9878 46.002 li
cp
level3{
gsave
clp
[-1.63609 2.99141 -3.80663 -1.52451 87.5693 44.6709 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.63609 2.99141 -3.80663 -1.52451 87.5693 44.6709 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
85.2583 46.002 mo
85.2358 45.9014 85.2026 45.7949 85.1558 45.6865 cv
84.8169 44.9043 83.6099 44.5127 83.6099 44.5127 cv
83.6099 44.5127 84.9883 44.7939 85.4326 45.7246 cv
85.4795 45.8232 85.5171 45.916 85.5459 46.002 cv
85.2583 46.002 li
cp
level3{
gsave
clp
[-.0610311 2.49943 4.03808 .0663269 84.5938 44.5293 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0610311 2.49943 4.03808 .0663269 84.5938 44.5293 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
86.3916 46.1377 mo
86.2603 46.0127 86.1118 45.8818 85.9414 45.75 cv
84.6313 44.7285 82.4683 44.4111 82.4683 44.4111 cv
82.4683 44.4111 84.7651 44.543 86.3848 45.751 cv
86.5679 45.8877 86.7285 46.0166 86.8677 46.1377 cv
86.3916 46.1377 li
cp
level3{
gsave
clp
[1.49332 4.10049 6.94318 -1.59235 84.2085 44.0117 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.49332 4.10049 6.94318 -1.59235 84.2085 44.0117 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
87.1211 46.0566 mo
87.0728 45.9307 87.0039 45.7949 86.9106 45.6504 cv
86.416 44.8916 85.1782 44.4502 85.1782 44.4502 cv
85.1782 44.4502 86.5552 44.7979 87.1831 45.7041 cv
87.2725 45.832 87.3433 45.9492 87.3979 46.0566 cv
87.1211 46.0566 li
cp
level3{
gsave
clp
[.211447 2.20584 3.61604 .492619 86.2251 44.5928 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.211447 2.20584 3.61604 .492619 86.2251 44.5928 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
85.5469 46.1582 mo
85.3115 45.8467 84.9248 45.3984 84.3589 44.9287 cv
83.2983 44.0488 82.1499 43.8311 82.1499 43.8311 cv
82.1499 43.8311 83.2793 43.8779 84.5649 44.915 cv
85.2598 45.4766 85.6255 45.8936 85.8145 46.1582 cv
85.5469 46.1582 li
cp
level3{
gsave
clp
[1.92422 3.79482 3.38549 -1.95483 83.1108 43.2764 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.92422 3.79482 3.38549 -1.95483 83.1108 43.2764 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
85.8257 46.2617 mo
85.7183 46.0244 85.5762 45.7588 85.3901 45.4795 cv
84.7461 44.5166 83.8042 44.1689 83.8042 44.1689 cv
83.8042 44.1689 84.7866 44.3516 85.5771 45.4932 cv
85.7817 45.79 85.9316 46.0459 86.0405 46.2617 cv
85.8257 46.2617 li
cp
level3{
gsave
clp
[1.16183 3.2807 4.04657 -.930624 84.4946 44.0098 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.16183 3.2807 4.04657 -.930624 84.4946 44.0098 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
84.6221 46.0732 mo
84.6714 45.9463 84.7388 45.8105 84.8335 45.667 cv
85.3271 44.9082 86.5659 44.4668 86.5659 44.4668 cv
86.5659 44.4668 85.188 44.8145 84.5601 45.7197 cv
84.4702 45.8486 84.4004 45.9658 84.3452 46.0732 cv
84.6221 46.0732 li
cp
level3{
gsave
clp
[-.211429 2.20565 -3.61573 .492576 85.519 44.6094 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.211429 2.20565 -3.61573 .492576 85.519 44.6094 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
86.3042 46.2783 mo
86.2603 46.0313 86.1699 45.7256 85.9917 45.3838 cv
85.5239 44.4873 84.4814 43.9854 84.4814 43.9854 cv
84.4814 43.9854 85.6294 44.3721 86.2168 45.4404 cv
86.4067 45.7871 86.5122 46.0635 86.5659 46.2783 cv
86.3042 46.2783 li
cp
level3{
gsave
clp
[2.08447 0 0 2.08447 84.4814 45.1318 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.08447 0 0 2.08447 84.4814 45.1318 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
87.0122 46.2236 mo
87.1724 46.124 87.3564 46.0186 87.5645 45.9121 cv
88.9956 45.1758 91.0762 44.9072 91.0762 44.9072 cv
91.0762 44.9072 88.9087 45.0508 87.1528 45.9229 cv
86.9365 46.0303 86.748 46.1299 86.584 46.2236 cv
87.0122 46.2236 li
cp
level3{
gsave
clp
[-1.78002 2.82273 -6.12578 -.774744 89.3799 44.6934 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.78002 2.82273 -6.12578 -.774744 89.3799 44.6934 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
87.4741 46.2832 mo
87.5669 45.8867 87.7007 45.4092 87.895 44.9043 cv
88.4102 43.5576 89.1577 43.0791 89.1577 43.0791 cv
89.1577 43.0791 88.3799 43.3271 87.7466 44.9209 cv
87.5264 45.4756 87.3867 45.9297 87.2974 46.2832 cv
87.4741 46.2832 li
cp
level3{
gsave
clp
[-.645186 5.18325 -2.2018 -1.52366 88.4849 42.6133 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.645186 5.18325 -2.2018 -1.52366 88.4849 42.6133 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
84.7236 46.7852 mo
84.7236 46.8916 84.5762 46.9775 84.3945 46.9775 cv
84.2129 46.9775 84.0664 46.8916 84.0664 46.7852 cv
84.0664 46.6787 84.2129 46.5918 84.3945 46.5918 cv
84.5762 46.5918 84.7236 46.6787 84.7236 46.7852 cv
cp
level3{
gsave
clp
[.292247 0 0 .224936 84.395 46.7861 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292247 0 0 .224936 84.395 46.7861 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
85.3418 47.0947 mo
85.3418 47.2012 85.1943 47.2871 85.0127 47.2871 cv
84.8311 47.2871 84.6836 47.2012 84.6836 47.0947 cv
84.6836 46.9883 84.8311 46.9023 85.0127 46.9023 cv
85.1943 46.9023 85.3418 46.9883 85.3418 47.0947 cv
cp
level3{
gsave
clp
[.29226 0 0 .224947 85.0127 47.0957 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.29226 0 0 .224947 85.0127 47.0957 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
85.2046 46.1201 mo
85.2046 46.2266 85.0571 46.3125 84.8755 46.3125 cv
84.6938 46.3125 84.5474 46.2266 84.5474 46.1201 cv
84.5474 46.0137 84.6938 45.9268 84.8755 45.9268 cv
85.0571 45.9268 85.2046 46.0137 85.2046 46.1201 cv
cp
level3{
gsave
clp
[.292253 0 0 .224941 84.876 46.1211 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292253 0 0 .224941 84.876 46.1211 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
85.4932 46.6689 mo
85.4932 46.7754 85.3462 46.8613 85.1646 46.8613 cv
84.9829 46.8613 84.8354 46.7754 84.8354 46.6689 cv
84.8354 46.5615 84.9829 46.4756 85.1646 46.4756 cv
85.3462 46.4756 85.4932 46.5615 85.4932 46.6689 cv
cp
level3{
gsave
clp
[.292395 0 0 .22505 85.1641 46.6699 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292395 0 0 .22505 85.1641 46.6699 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
86.2329 46.6689 mo
86.2329 46.7754 86.0854 46.8613 85.9038 46.8613 cv
85.7222 46.8613 85.5747 46.7754 85.5747 46.6689 cv
85.5747 46.5615 85.7222 46.4756 85.9038 46.4756 cv
86.0854 46.4756 86.2329 46.5615 86.2329 46.6689 cv
cp
level3{
gsave
clp
[.292526 0 0 .225152 85.9038 46.6699 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292526 0 0 .225152 85.9038 46.6699 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
86.5474 46.8857 mo
86.5474 46.9912 86.4009 47.0781 86.2192 47.0781 cv
86.0376 47.0781 85.8901 46.9912 85.8901 46.8857 cv
85.8901 46.7783 86.0376 46.6924 86.2192 46.6924 cv
86.4009 46.6924 86.5474 46.7783 86.5474 46.8857 cv
cp
level3{
gsave
clp
[.292307 0 0 .224983 86.2188 46.8867 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292307 0 0 .224983 86.2188 46.8867 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
86.8062 46.3477 mo
86.7412 46.2305 86.9336 46.0488 87.2344 45.9424 cv
87.5366 45.835 87.8335 45.8438 87.8989 45.9609 cv
87.9629 46.0771 87.7715 46.2588 87.4692 46.3662 cv
87.168 46.4736 86.8716 46.4648 86.8062 46.3477 cv
cp
level3{
gsave
clp
[-.486541 .172317 -.137564 -.246167 87.3525 46.1543 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.486541 .172317 -.137564 -.246167 87.3525 46.1543 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
86.6089 46.3857 mo
86.6089 46.5137 86.3862 46.6162 86.1133 46.6162 cv
85.8394 46.6162 85.6177 46.5137 85.6177 46.3857 cv
85.6177 46.2578 85.8394 46.1543 86.1133 46.1543 cv
86.3862 46.1543 86.6089 46.2578 86.6089 46.3857 cv
cp
level3{
gsave
clp
[.441007 0 0 .269827 86.1108 46.3848 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.441007 0 0 .269827 86.1108 46.3848 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
86.8398 46.6279 mo
86.7573 46.6064 86.7222 46.4434 86.7642 46.2617 cv
86.8057 46.0801 86.9067 45.9502 86.9907 45.9717 cv
87.0742 45.9932 87.1074 46.1572 87.0664 46.3389 cv
87.0244 46.5195 86.9238 46.6494 86.8398 46.6279 cv
cp
level3{
gsave
clp
[-.0664634 .291861 -.176273 -.0447906 86.9165 46.2998 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0664634 .291861 -.176273 -.0447906 86.9165 46.2998 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
88.0015 46.5928 mo
88.041 46.7314 87.8633 46.9102 87.6035 46.9922 cv
87.3442 47.0742 87.1016 47.0283 87.062 46.8896 cv
87.0229 46.752 87.2021 46.5732 87.4614 46.4902 cv
87.7202 46.4092 87.9624 46.4541 88.0015 46.5928 cv
cp
level3{
gsave
clp
[.41703 -.13177 .0839853 .2925 87.5332 46.7402 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.41703 -.13177 .0839853 .2925 87.5332 46.7402 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
86.6738 46.3193 mo
86.6611 46.4063 86.4585 46.4463 86.2207 46.4063 cv
85.9834 46.3672 85.8018 46.2646 85.8154 46.1758 cv
85.8281 46.0879 86.0317 46.0488 86.2686 46.0869 cv
86.5059 46.1279 86.6875 46.2305 86.6738 46.3193 cv
cp
level3{
gsave
clp
[.382582 .0637637 -.0275343 .185494 86.2441 46.2471 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.382582 .0637637 -.0275343 .185494 86.2441 46.2471 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
85.397 46.4004 mo
85.4028 46.5283 85.186 46.6426 84.9121 46.6543 cv
84.6387 46.668 84.4126 46.5742 84.4082 46.4473 cv
84.4019 46.3193 84.6191 46.2061 84.8921 46.1934 cv
85.166 46.1807 85.3916 46.2734 85.397 46.4004 cv
cp
level3{
gsave
clp
[.439539 -.0202419 .0115668 .268928 84.9004 46.4219 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.439539 -.0202419 .0115668 .268928 84.9004 46.4219 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
86.8003 46.2178 mo
86.8296 46.3164 86.6558 46.4609 86.4121 46.54 cv
86.168 46.6211 85.9468 46.6074 85.918 46.5088 cv
85.8896 46.4111 86.0635 46.2666 86.3062 46.1865 cv
86.5498 46.1064 86.7715 46.1211 86.8003 46.2178 cv
cp
level3{
gsave
clp
[.392033 -.128749 .0607579 .206866 86.3594 46.3633 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.392033 -.128749 .0607579 .206866 86.3594 46.3633 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
86.0181 46.3877 mo
86.0225 46.4971 85.8408 46.5957 85.6108 46.6055 cv
85.3818 46.6182 85.1919 46.5371 85.1875 46.4268 cv
85.1826 46.3174 85.3652 46.2197 85.5942 46.208 cv
85.8237 46.1982 86.0137 46.2783 86.0181 46.3877 cv
cp
level3{
gsave
clp
[.36911 -.0173699 .0101324 .231598 85.6035 46.4053 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.36911 -.0173699 .0101324 .231598 85.6035 46.4053 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
85.6807 46.3662 mo
85.6807 46.4707 85.5254 46.5557 85.3335 46.5557 cv
85.1421 46.5557 84.9868 46.4707 84.9868 46.3662 cv
84.9868 46.2617 85.1421 46.1777 85.3335 46.1777 cv
85.5254 46.1777 85.6807 46.2617 85.6807 46.3662 cv
cp
level3{
gsave
clp
[.307554 0 0 .220919 85.334 46.3672 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307554 0 0 .220919 85.334 46.3672 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
84.5996 46.3945 mo
84.5996 46.5 84.4443 46.584 84.2524 46.584 cv
84.061 46.584 83.9058 46.5 83.9058 46.3945 cv
83.9058 46.29 84.061 46.2051 84.2524 46.2051 cv
84.4443 46.2051 84.5996 46.29 84.5996 46.3945 cv
cp
level3{
gsave
clp
[.307843 0 0 .221127 84.2529 46.3955 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307843 0 0 .221127 84.2529 46.3955 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
84.9414 46.5137 mo
84.9082 46.5957 84.7026 46.5811 84.4814 46.4805 cv
84.2612 46.3809 84.1094 46.2334 84.1426 46.1514 cv
84.1758 46.0703 84.3818 46.085 84.6025 46.1846 cv
84.8228 46.2842 84.9746 46.4316 84.9414 46.5137 cv
cp
level3{
gsave
clp
[.355774 .160532 -.0708655 .172102 84.542 46.334 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.355774 .160532 -.0708655 .172102 84.542 46.334 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
84.7773 46.1787 mo
84.7432 46.2607 84.5381 46.2461 84.3174 46.1455 cv
84.0962 46.0469 83.9453 45.8994 83.9785 45.8174 cv
84.0117 45.7354 84.2173 45.75 84.4385 45.8496 cv
84.6587 45.9492 84.8105 46.0977 84.7773 46.1787 cv
cp
level3{
gsave
clp
[.355677 .160488 -.0708462 .172055 84.3784 45.999 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.355677 .160488 -.0708462 .172055 84.3784 45.999 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
87.4404 46.5283 mo
87.4458 46.6553 87.2285 46.7695 86.9546 46.7822 cv
86.6816 46.7949 86.4556 46.7021 86.4507 46.5742 cv
86.4448 46.4473 86.6616 46.333 86.9355 46.3203 cv
87.209 46.3076 87.4341 46.4004 87.4404 46.5283 cv
cp
level3{
gsave
clp
[.4401 -.0202678 .0115816 .269272 86.9434 46.5498 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.4401 -.0202678 .0115816 .269272 86.9434 46.5498 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
84.5161 46.1504 mo
84.5459 46.248 84.3716 46.3926 84.1284 46.4736 cv
83.8848 46.5537 83.6636 46.5391 83.6343 46.4404 cv
83.6055 46.3428 83.7793 46.1982 84.0229 46.1182 cv
84.2666 46.0381 84.4878 46.0527 84.5161 46.1504 cv
cp
level3{
gsave
clp
[.392483 -.128897 .0608276 .207104 84.0757 46.2959 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.392483 -.128897 .0608276 .207104 84.0757 46.2959 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
84.6758 46.7354 mo
84.645 46.7705 84.5669 46.7451 84.4995 46.6797 cv
84.4331 46.6143 84.4043 46.5322 84.4355 46.4971 cv
84.4663 46.4639 84.5449 46.4893 84.6108 46.5537 cv
84.6772 46.6201 84.707 46.7021 84.6758 46.7354 cv
cp
level3{
gsave
clp
[.000991861 .000978457 -.000603158 .000670176 848.465 256.636 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.000991861 .000978457 -.000603158 .000670176 848.465 256.636 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
85.8999 46.4502 mo
85.9053 46.5605 85.7231 46.6582 85.4932 46.6689 cv
85.2646 46.6787 85.0737 46.5986 85.0693 46.4893 cv
85.0649 46.3789 85.248 46.2822 85.4771 46.2715 cv
85.7065 46.2607 85.8955 46.3398 85.8999 46.4502 cv
cp
level3{
gsave
clp
[.369071 -.017368 .0101314 .231574 85.4858 46.4688 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.369071 -.017368 .0101314 .231574 85.4858 46.4688 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
86.1694 46.3428 mo
86.1694 46.4482 86.0142 46.5332 85.8228 46.5332 cv
85.6313 46.5332 85.4756 46.4482 85.4756 46.3428 cv
85.4756 46.2383 85.6313 46.1543 85.8228 46.1543 cv
86.0142 46.1543 86.1694 46.2383 86.1694 46.3428 cv
cp
level3{
gsave
clp
[.307824 0 0 .221113 85.8228 46.3447 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.307824 0 0 .221113 85.8228 46.3447 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
84.4761 46.665 mo
84.4624 46.752 84.2598 46.792 84.0225 46.7529 cv
83.7847 46.7139 83.604 46.6113 83.6167 46.5225 cv
83.6304 46.4346 83.833 46.3955 84.0708 46.4336 cv
84.3076 46.4736 84.4893 46.5771 84.4761 46.665 cv
cp
level3{
gsave
clp
[.382797 .0637995 -.0275498 .185599 84.0459 46.5938 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.382797 .0637995 -.0275498 .185599 84.0459 46.5938 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
87.3828 47.29 mo
87.3828 47.3965 87.2358 47.4834 87.0547 47.4834 cv
86.873 47.4834 86.7261 47.3965 86.7261 47.29 cv
86.7261 47.1836 86.873 47.0977 87.0547 47.0977 cv
87.2358 47.0977 87.3828 47.1836 87.3828 47.29 cv
cp
level3{
gsave
clp
[.292141 0 0 .224855 87.0542 47.292 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.292141 0 0 .224855 87.0542 47.292 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
86.5703 46.4268 mo
86.5703 46.5342 86.4233 46.6201 86.2422 46.6201 cv
86.0605 46.6201 85.9131 46.5342 85.9131 46.4268 cv
85.9131 46.3213 86.0605 46.2354 86.2422 46.2354 cv
86.4233 46.2354 86.5703 46.3213 86.5703 46.4268 cv
cp
level3{
gsave
clp
[.291988 0 0 .224737 86.2417 46.4287 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.291988 0 0 .224737 86.2417 46.4287 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
41.1353 46.5234 mo
41.1353 46.6445 40.9365 46.7422 40.6914 46.7422 cv
40.4463 46.7422 40.2471 46.6445 40.2471 46.5234 cv
40.2471 46.4023 40.4463 46.3047 40.6914 46.3047 cv
40.9365 46.3047 41.1353 46.4023 41.1353 46.5234 cv
cp
level3{
gsave
clp
[.394883 0 0 .255011 40.6914 46.5225 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394883 0 0 .255011 40.6914 46.5225 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.0874 46.4355 mo
42.0371 46.585 41.562 46.6416 41.0249 46.5605 cv
40.4878 46.4805 40.0913 46.2949 40.1416 46.1445 cv
40.1914 45.9961 40.6655 45.9395 41.2036 46.0205 cv
41.7407 46.1006 42.1362 46.2852 42.0874 46.4355 cv
cp
level3{
gsave
clp
[.864771 .128703 -.10412 .315251 41.1162 46.2891 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.864771 .128703 -.10412 .315251 41.1162 46.2891 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.5938 46.7744 mo
44.5049 46.6416 44.7651 46.4355 45.1714 46.3145 cv
45.5786 46.1924 45.9795 46.2021 46.0674 46.3359 cv
46.1543 46.4678 45.8955 46.6738 45.4878 46.7959 cv
45.0806 46.917 44.6807 46.9072 44.5938 46.7744 cv
cp
level3{
gsave
clp
[-.655061 .195217 -.185095 -.280534 45.3296 46.5547 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.655061 .195217 -.185095 -.280534 45.3296 46.5547 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.0884 46.2568 mo
44.0361 46.1162 44.3447 45.9434 44.7769 45.8721 cv
45.2085 45.7998 45.6011 45.8555 45.6533 45.9971 cv
45.7051 46.1377 45.397 46.3105 44.9634 46.3828 cv
44.5317 46.4541 44.1406 46.3984 44.0884 46.2568 cv
cp
level3{
gsave
clp
[-.694731 .115548 -.10977 -.297536 44.8706 46.127 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.694731 .115548 -.10977 -.297536 44.8706 46.127 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.5981 46.0156 mo
44.6753 46.1885 44.4258 46.3916 44.0391 46.4697 cv
43.6533 46.5469 43.2788 46.4707 43.2007 46.2979 cv
43.1235 46.124 43.374 45.9209 43.7607 45.8428 cv
44.145 45.7646 44.521 45.8418 44.5981 46.0156 cv
cp
level3{
gsave
clp
[.621095 -.125663 .163218 .365435 43.8999 46.1572 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.621095 -.125663 .163218 .365435 43.8999 46.1572 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.2598 46.3525 mo
44.2236 46.5371 43.7456 46.6465 43.1909 46.5977 cv
42.6348 46.5479 42.2148 46.3594 42.25 46.1748 cv
42.2861 45.9912 42.7656 45.8818 43.3203 45.9297 cv
43.875 45.9795 44.2964 46.168 44.2598 46.3525 cv
cp
level3{
gsave
clp
[.893584 .0782067 -.0753102 .389585 43.2534 46.2637 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.893584 .0782067 -.0753102 .389585 43.2534 46.2637 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
39.5371 46.6484 mo
39.4492 46.5156 39.7085 46.3096 40.1147 46.1885 cv
40.522 46.0674 40.9238 46.0771 41.0112 46.209 cv
41.0981 46.3428 40.8398 46.5479 40.4321 46.6689 cv
40.0249 46.791 39.624 46.7822 39.5371 46.6484 cv
cp
level3{
gsave
clp
[-.655045 .195212 -.18509 -.280527 40.2739 46.4287 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.655045 .195212 -.18509 -.280527 40.2739 46.4287 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.7725 46.2021 mo
42.8496 46.376 42.6001 46.5791 42.2144 46.6572 cv
41.8286 46.7354 41.4531 46.6582 41.3745 46.4844 cv
41.2983 46.3115 41.5483 46.1074 41.9346 46.0303 cv
42.3193 45.9521 42.6953 46.0293 42.7725 46.2021 cv
cp
level3{
gsave
clp
[.62133 -.125711 .16328 .365573 42.0742 46.3447 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.62133 -.125711 .16328 .365573 42.0742 46.3447 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.0894 46.1816 mo
42.0894 46.3369 41.752 46.4619 41.3359 46.4619 cv
40.9189 46.4619 40.5815 46.3369 40.5815 46.1816 cv
40.5815 46.0273 40.9189 45.9023 41.3359 45.9023 cv
41.752 45.9023 42.0894 46.0273 42.0894 46.1816 cv
cp
level3{
gsave
clp
[.669599 0 0 .326845 41.3354 46.1836 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.669599 0 0 .326845 41.3354 46.1836 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.0405 46.5352 mo
45.0405 46.6563 44.8418 46.7549 44.5967 46.7549 cv
44.3516 46.7549 44.1533 46.6563 44.1533 46.5352 cv
44.1533 46.4141 44.3516 46.3164 44.5967 46.3164 cv
44.8418 46.3164 45.0405 46.4141 45.0405 46.5352 cv
cp
level3{
gsave
clp
[.39493 0 0 .255041 44.5972 46.5342 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.39493 0 0 .255041 44.5972 46.5342 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.5537 46.4766 mo
40.5537 46.5977 40.355 46.6953 40.1099 46.6953 cv
39.8647 46.6953 39.6655 46.5977 39.6655 46.4766 cv
39.6655 46.3545 39.8647 46.2568 40.1099 46.2568 cv
40.355 46.2568 40.5537 46.3545 40.5537 46.4766 cv
cp
level3{
gsave
clp
[.395207 0 0 .25522 40.1099 46.4746 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395207 0 0 .25522 40.1099 46.4746 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.4204 46.6748 mo
43.7378 45.9688 44.2593 44.9521 45.0249 43.8867 cv
46.4556 41.8916 48.0063 41.3984 48.0063 41.3984 cv
48.0063 41.3984 46.4819 41.5029 44.7456 43.8574 cv
43.8066 45.1309 43.3135 46.0752 43.0586 46.6748 cv
43.4204 46.6748 li
cp
level3{
gsave
clp
[-3.52233 6.94652 -6.19723 -3.57837 47.1191 40.8857 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.52233 6.94652 -6.19723 -3.57837 47.1191 40.8857 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
42.7002 46.5039 mo
43.0601 46.1152 43.5225 45.6699 44.0967 45.2109 cv
45.8223 43.8281 47.6636 43.4756 47.6636 43.4756 cv
47.6636 43.4756 45.8584 43.5625 43.7661 45.1943 cv
43.1055 45.709 42.6265 46.1465 42.2803 46.5039 cv
42.7002 46.5039 li
cp
level3{
gsave
clp
[-3.03058 6.22889 -5.14183 -3.11737 46.1523 42.5596 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.03058 6.22889 -5.14183 -3.11737 46.1523 42.5596 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
40.4849 46.3818 mo
40.5059 46.3184 40.5308 46.2529 40.5605 46.1855 cv
40.9712 45.2617 42.4565 44.5879 42.4565 44.5879 cv
42.4565 44.5879 40.7588 45.1758 40.2202 46.2832 cv
40.2036 46.3164 40.1885 46.3496 40.1738 46.3818 cv
40.4849 46.3818 li
cp
level3{
gsave
clp
[.0555386 2.04714 -3.16353 1.24935 41.3032 45.041 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0555386 2.04714 -3.16353 1.24935 41.3032 45.041 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
42.8906 46.6143 mo
42.7959 46.2314 42.6411 45.7881 42.3877 45.3066 cv
41.5396 43.6924 39.6475 43.4434 39.6475 43.4434 cv
39.6475 43.4434 41.73 43.4854 42.7969 45.4092 cv
43.0586 45.8809 43.2295 46.2793 43.3408 46.6143 cv
42.8906 46.6143 li
cp
level3{
gsave
clp
[.328638 3.75404 3.58798 .645555 41.3818 43.7295 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.328638 3.75404 3.58798 .645555 41.3818 43.7295 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
41.2339 46.3818 mo
42.3979 46.1758 43.3984 46.1475 43.3984 46.1475 cv
43.3984 46.1475 42.1924 46.1113 40.7285 46.3818 cv
41.2339 46.3818 li
cp
level3{
gsave
clp
[-2.77698 3.25249 -6.55439 -2.52152 42.4678 45.79 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.77698 3.25249 -6.55439 -2.52152 42.4678 45.79 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
42.9775 46.1816 mo
43.9756 46.0303 44.7715 46.0078 44.7715 46.0078 cv
44.7715 46.0078 43.7554 45.9766 42.4551 46.1816 cv
42.9775 46.1816 li
cp
level3{
gsave
clp
[-2.80603 3.28652 -6.62296 -2.54789 43.9541 45.6934 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.80603 3.28652 -6.62296 -2.54789 43.9541 45.6934 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.5625 46.0391 mo
43.8335 45.7324 44.1924 45.3877 44.6631 45.0264 cv
46.291 43.7803 48.6699 43.3301 48.6699 43.3301 cv
48.6699 43.3301 46.1914 43.5674 44.1919 45.0439 cv
43.6729 45.4287 43.2954 45.7598 43.021 46.0391 cv
43.5625 46.0391 li
cp
level3{
gsave
clp
[-1.78619 5.04373 -6.22119 -1.43074 46.5024 42.8311 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.78619 5.04373 -6.22119 -1.43074 46.5024 42.8311 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
43.7144 45.7412 mo
45.4932 45.5625 47.0884 45.5771 47.0884 45.5771 cv
47.0884 45.5771 45.0513 45.4746 42.7432 45.7412 cv
43.7144 45.7412 li
cp
level3{
gsave
clp
[-4.20291 3.40065 -11.0432 -3.60411 45.6123 45.0957 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.20291 3.40065 -11.0432 -3.60411 45.6123 45.0957 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.2256 46.4395 mo
43.4497 46.3691 43.6904 46.2998 43.9458 46.2305 cv
46.7324 45.4785 50.248 45.4453 50.248 45.4453 cv
50.248 45.4453 46.6772 45.2998 43.2778 46.1816 cv
42.9346 46.2705 42.6245 46.3564 42.3442 46.4395 cv
43.2256 46.4395 li
cp
level3{
gsave
clp
[-4.57299 4.54252 -11.3958 -4.0384 47.7031 44.5439 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.57299 4.54252 -11.3958 -4.0384 47.7031 44.5439 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
42.6265 46.5508 mo
42.3716 46.3184 42.0601 46.0742 41.6802 45.832 cv
39.8267 44.6504 36.9473 44.5664 36.9473 44.5664 cv
36.9473 44.5664 39.9785 44.3779 42.2612 45.7627 cv
42.7334 46.0498 43.0981 46.3135 43.3809 46.5508 cv
42.6265 46.5508 li
cp
level3{
gsave
clp
[2.41328 6.57238 9.70918 -5.53779 39.3057 43.2217 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.41328 6.57238 9.70918 -5.53779 39.3057 43.2217 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
41.6304 46.3662 mo
41.4966 46.2822 41.3457 46.1943 41.1777 46.1035 cv
40.2456 45.5977 39.2607 45.3945 39.2607 45.3945 cv
39.2607 45.3945 40.2251 45.5146 41.354 46.1143 cv
41.5259 46.2061 41.6743 46.2891 41.8032 46.3662 cv
41.6304 46.3662 li
cp
level3{
gsave
clp
[1.41391 1.93964 2.35973 -.388147 40.0791 45.2598 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.41391 1.93964 2.35973 -.388147 40.0791 45.2598 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
42.0405 46.1865 mo
42.2891 46.0605 42.5845 45.9258 42.9302 45.792 cv
44.4976 45.1846 46.3804 45.0908 46.3804 45.0908 cv
46.3804 45.0908 44.4854 45.0537 42.5781 45.7686 cv
42.1689 45.9229 41.8423 46.0615 41.5801 46.1865 cv
42.0405 46.1865 li
cp
level3{
gsave
clp
[-2.48605 3.32662 -5.55211 -2.31458 44.8623 44.458 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.48605 3.32662 -5.55211 -2.31458 44.8623 44.458 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
41.0698 46.5254 mo
40.937 46.3154 40.748 46.0791 40.4741 45.8359 cv
39.604 45.0635 38.1216 44.8789 38.1216 44.8789 cv
38.1216 44.8789 39.7031 44.9121 40.7783 45.8223 cv
41.1016 46.0967 41.3125 46.3311 41.4473 46.5254 cv
41.0698 46.5254 li
cp
level3{
gsave
clp
[.671377 4.96394 3.37522 -2.63801 39.5259 43.7813 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.671377 4.96394 3.37522 -2.63801 39.5259 43.7813 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
42.7368 46.3818 mo
42.8228 46.332 42.9116 46.2822 43.0054 46.2314 cv
44.4023 45.4756 46.1099 45.2861 46.1099 45.2861 cv
46.1099 45.2861 44.3857 45.3291 42.6851 46.2207 cv
42.5791 46.2764 42.48 46.3301 42.3862 46.3818 cv
42.7368 46.3818 li
cp
level3{
gsave
clp
[-2.04508 3.7392 -4.7582 -1.9056 44.8276 44.7725 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.04508 3.7392 -4.7582 -1.9056 44.8276 44.7725 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
41.7529 46.3818 mo
41.7227 46.2676 41.6777 46.1475 41.6138 46.0234 cv
41.1567 45.1348 39.5269 44.6904 39.5269 44.6904 cv
39.5269 44.6904 41.3892 45.0098 41.9883 46.0664 cv
42.0508 46.1787 42.1016 46.2842 42.1416 46.3818 cv
41.7529 46.3818 li
cp
level3{
gsave
clp
[-.0690731 2.82878 4.57018 .0750668 40.853 44.7129 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0690731 2.82878 4.57018 .0750668 40.853 44.7129 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.2827 46.5371 mo
43.1055 46.3936 42.9043 46.2451 42.6758 46.0957 cv
40.9067 44.9355 37.9858 44.5752 37.9858 44.5752 cv
37.9858 44.5752 41.0869 44.7246 43.2734 46.0967 cv
43.521 46.252 43.7373 46.3994 43.9253 46.5371 cv
43.2827 46.5371 li
cp
level3{
gsave
clp
[1.81461 4.9827 8.437 -1.93494 40.3965 44.0225 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.81461 4.9827 8.437 -1.93494 40.3965 44.0225 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
44.2666 46.4434 mo
44.2017 46.3008 44.1094 46.1465 43.9829 45.9834 cv
43.3149 45.1211 41.6445 44.6201 41.6445 44.6201 cv
41.6445 44.6201 43.5034 45.0137 44.3516 46.043 cv
44.4717 46.1895 44.5669 46.3223 44.6406 46.4434 cv
44.2666 46.4434 li
cp
level3{
gsave
clp
[.231034 2.41017 3.951 .538251 43.0742 44.8154 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.231034 2.41017 3.951 .538251 43.0742 44.8154 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
42.1416 46.5596 mo
41.8247 46.2061 41.3027 45.6963 40.5386 45.1641 cv
39.1064 44.1631 37.5557 43.917 37.5557 43.917 cv
37.5557 43.917 39.0806 43.9697 40.8169 45.1484 cv
41.7549 45.7852 42.2485 46.2588 42.5039 46.5596 cv
42.1416 46.5596 li
cp
level3{
gsave
clp
[2.38183 4.69729 4.19061 -2.41972 38.9512 43.1113 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.38183 4.69729 4.19061 -2.41972 38.9512 43.1113 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
42.52 46.6768 mo
42.374 46.4082 42.1826 46.1055 41.9307 45.7881 cv
41.0615 44.6953 39.7905 44.3008 39.7905 44.3008 cv
39.7905 44.3008 41.1157 44.5078 42.1826 45.8037 cv
42.46 46.1406 42.6621 46.4316 42.8091 46.6768 cv
42.52 46.6768 li
cp
level3{
gsave
clp
[1.36822 3.8635 4.76544 -1.09595 40.7964 44.0693 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.36822 3.8635 4.76544 -1.09595 40.7964 44.0693 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
40.894 46.4629 mo
40.96 46.3193 41.0522 46.165 41.1787 46.002 cv
41.8457 45.1396 43.5171 44.6387 43.5171 44.6387 cv
43.5171 44.6387 41.6582 45.0332 40.8101 46.0605 cv
40.689 46.208 40.5947 46.3418 40.5205 46.4629 cv
40.894 46.4629 li
cp
level3{
gsave
clp
[-.231165 2.41154 -3.95325 .538558 42.0879 44.833 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.231165 2.41154 -3.95325 .538558 42.0879 44.833 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.1646 46.6953 mo
43.1055 46.416 42.9829 46.0684 42.7422 45.6797 cv
42.1113 44.6621 40.7041 44.0918 40.7041 44.0918 cv
40.7041 44.0918 42.2534 44.5313 43.0464 45.7441 cv
43.3037 46.1377 43.4453 46.4521 43.5176 46.6953 cv
43.1646 46.6953 li
cp
level3{
gsave
clp
[2.81348 0 0 2.81348 40.7041 45.3936 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.81348 0 0 2.81348 40.7041 45.3936 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.1201 46.6338 mo
44.3369 46.5195 44.5854 46.4004 44.8657 46.2793 cv
46.7983 45.4434 49.6064 45.1377 49.6064 45.1377 cv
49.6064 45.1377 46.6807 45.3018 44.3101 46.292 cv
44.0181 46.4141 43.7637 46.5273 43.542 46.6338 cv
44.1201 46.6338 li
cp
level3{
gsave
clp
[-2.13755 3.3897 -7.35622 -.93036 47.2349 44.8379 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.13755 3.3897 -7.35622 -.93036 47.2349 44.8379 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
44.7446 46.7021 mo
44.8691 46.252 45.0498 45.709 45.3125 45.1348 cv
46.0073 43.6055 47.0166 43.0625 47.0166 43.0625 cv
47.0166 43.0625 45.9668 43.3438 45.1128 45.1543 cv
44.8145 45.7842 44.6255 46.2988 44.5059 46.7021 cv
44.7446 46.7021 li
cp
level3{
gsave
clp
[-.772398 6.20523 -2.63593 -1.82408 46.0688 42.4072 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.772398 6.20523 -2.63593 -1.82408 46.0688 42.4072 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
41.0313 47.2715 mo
41.0313 47.3926 40.832 47.4902 40.5869 47.4902 cv
40.3418 47.4902 40.1431 47.3926 40.1431 47.2715 cv
40.1431 47.1504 40.3418 47.0527 40.5869 47.0527 cv
40.832 47.0527 41.0313 47.1504 41.0313 47.2715 cv
cp
level3{
gsave
clp
[.394868 0 0 .255001 40.5874 47.2705 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394868 0 0 .255001 40.5874 47.2705 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
41.8657 47.623 mo
41.8657 47.7441 41.6665 47.8418 41.4214 47.8418 cv
41.1758 47.8418 40.9775 47.7441 40.9775 47.623 cv
40.9775 47.502 41.1758 47.4033 41.4214 47.4033 cv
41.6665 47.4033 41.8657 47.502 41.8657 47.623 cv
cp
level3{
gsave
clp
[.395195 0 0 .255212 41.4219 47.6211 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395195 0 0 .255212 41.4219 47.6211 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
41.6802 46.5156 mo
41.6802 46.6367 41.481 46.7354 41.2368 46.7354 cv
40.9907 46.7354 40.792 46.6367 40.792 46.5156 cv
40.792 46.3955 40.9907 46.2969 41.2368 46.2969 cv
41.481 46.2969 41.6802 46.3955 41.6802 46.5156 cv
cp
level3{
gsave
clp
[.395218 0 0 .255227 41.2363 46.5146 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395218 0 0 .255227 41.2363 46.5146 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.0703 47.1387 mo
42.0703 47.2598 41.8716 47.3574 41.6265 47.3574 cv
41.3813 47.3574 41.1821 47.2598 41.1821 47.1387 cv
41.1821 47.0176 41.3813 46.9199 41.6265 46.9199 cv
41.8716 46.9199 42.0703 47.0176 42.0703 47.1387 cv
cp
level3{
gsave
clp
[.394881 0 0 .255009 41.6265 47.1377 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394881 0 0 .255009 41.6265 47.1377 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.0679 47.1387 mo
43.0679 47.2598 42.8696 47.3574 42.6245 47.3574 cv
42.3794 47.3574 42.1802 47.2598 42.1802 47.1387 cv
42.1802 47.0176 42.3794 46.9199 42.6245 46.9199 cv
42.8696 46.9199 43.0679 47.0176 43.0679 47.1387 cv
cp
level3{
gsave
clp
[.394744 0 0 .254921 42.624 47.1377 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394744 0 0 .254921 42.624 47.1377 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.4937 47.3848 mo
43.4937 47.5059 43.2944 47.6045 43.0503 47.6045 cv
42.8042 47.6045 42.6055 47.5059 42.6055 47.3848 cv
42.6055 47.2646 42.8042 47.166 43.0503 47.166 cv
43.2944 47.166 43.4937 47.2646 43.4937 47.3848 cv
cp
level3{
gsave
clp
[.395202 0 0 .255217 43.0498 47.3838 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.395202 0 0 .255217 43.0498 47.3838 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.8423 46.7744 mo
43.7544 46.6416 44.0146 46.4355 44.4204 46.3145 cv
44.8281 46.1924 45.23 46.2021 45.3169 46.3359 cv
45.4038 46.4678 45.145 46.6738 44.7373 46.7959 cv
44.3311 46.917 43.9302 46.9072 43.8423 46.7744 cv
cp
level3{
gsave
clp
[-.655298 .195288 -.185162 -.280636 44.5791 46.5547 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.655298 .195288 -.185162 -.280636 44.5791 46.5547 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.5752 46.8174 mo
43.5752 46.9629 43.2764 47.0801 42.9067 47.0801 cv
42.5371 47.0801 42.2378 46.9629 42.2378 46.8174 cv
42.2378 46.6729 42.5371 46.5547 42.9067 46.5547 cv
43.2764 46.5547 43.5752 46.6729 43.5752 46.8174 cv
cp
level3{
gsave
clp
[.594371 0 0 .306586 42.9063 46.8174 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.594371 0 0 .306586 42.9063 46.8174 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.8887 47.0928 mo
43.7759 47.0684 43.7295 46.8828 43.7856 46.6768 cv
43.8418 46.4707 43.9785 46.3232 44.0913 46.3477 cv
44.2041 46.3721 44.2495 46.5576 44.1934 46.7637 cv
44.1367 46.9697 44.001 47.1172 43.8887 47.0928 cv
cp
level3{
gsave
clp
[-.0898659 .331924 -.23771 -.0507308 43.9902 46.7197 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0898659 .331924 -.23771 -.0507308 43.9902 46.7197 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.4565 47.0527 mo
45.5098 47.21 45.269 47.4131 44.9189 47.5068 cv
44.5688 47.5996 44.2417 47.5479 44.188 47.3906 cv
44.1353 47.2324 44.3765 47.0313 44.7261 46.9365 cv
45.0762 46.8438 45.4028 46.8965 45.4565 47.0527 cv
cp
level3{
gsave
clp
[.564553 -.150935 .113201 .332346 44.8223 47.2207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.564553 -.150935 .113201 .332346 44.8223 47.2207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.6636 46.7422 mo
43.6455 46.8418 43.3726 46.8867 43.0527 46.8418 cv
42.7319 46.7969 42.4868 46.6797 42.5049 46.5801 cv
42.522 46.4805 42.7959 46.4346 43.1162 46.4795 cv
43.437 46.5244 43.6821 46.6416 43.6636 46.7422 cv
cp
level3{
gsave
clp
[.515039 .0723369 -.0376152 .211224 43.0864 46.6621 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.515039 .0723369 -.0376152 .211224 43.0864 46.6621 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
41.9404 46.835 mo
41.9478 46.9805 41.6543 47.1094 41.2852 47.124 cv
40.916 47.1387 40.6113 47.0322 40.6045 46.8877 cv
40.5967 46.7422 40.8901 46.6143 41.2588 46.5996 cv
41.6279 46.585 41.9331 46.6904 41.9404 46.835 cv
cp
level3{
gsave
clp
[.593787 -.0231158 .0158921 .306284 41.2734 46.8613 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.593787 -.0231158 .0158921 .306284 41.2734 46.8613 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.835 46.6279 mo
43.874 46.7393 43.6387 46.9033 43.3105 46.9941 cv
42.9805 47.085 42.6826 47.0693 42.6431 46.958 cv
42.6045 46.8457 42.8394 46.6826 43.1675 46.5918 cv
43.4966 46.5 43.7954 46.5166 43.835 46.6279 cv
cp
level3{
gsave
clp
[.530257 -.146328 .0825811 .234704 43.2388 46.793 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.530257 -.146328 .0825811 .234704 43.2388 46.793 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.7778 46.8203 mo
42.7847 46.9443 42.5386 47.0557 42.2285 47.0674 cv
41.9194 47.0811 41.6636 46.9893 41.6567 46.8643 cv
41.6509 46.7402 41.8965 46.6289 42.2065 46.6172 cv
42.5161 46.6045 42.772 46.6953 42.7778 46.8203 cv
cp
level3{
gsave
clp
[.498743 -.0202389 .0130107 .263105 42.2173 46.8438 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.498743 -.0202389 .0130107 .263105 42.2173 46.8438 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.3232 46.7959 mo
42.3232 46.915 42.1128 47.0107 41.854 47.0107 cv
41.5962 47.0107 41.3857 46.915 41.3857 46.7959 cv
41.3857 46.6768 41.5962 46.5811 41.854 46.5811 cv
42.1128 46.5811 42.3232 46.6768 42.3232 46.7959 cv
cp
level3{
gsave
clp
[.417156 0 0 .250583 41.856 46.7949 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417156 0 0 .250583 41.856 46.7949 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.8633 46.8281 mo
40.8633 46.9473 40.6538 47.0439 40.395 47.0439 cv
40.1362 47.0439 39.9263 46.9473 39.9263 46.8281 cv
39.9263 46.709 40.1362 46.6123 40.395 46.6123 cv
40.6538 46.6123 40.8633 46.709 40.8633 46.8281 cv
cp
level3{
gsave
clp
[.417691 0 0 .250905 40.396 46.8271 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417691 0 0 .250905 40.396 46.8271 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
41.3252 46.9629 mo
41.2798 47.0557 41.0024 47.04 40.7041 46.9258 cv
40.4067 46.8125 40.2017 46.6445 40.2466 46.5527 cv
40.292 46.459 40.5698 46.4766 40.8677 46.5889 cv
41.165 46.7021 41.3701 46.8701 41.3252 46.9629 cv
cp
level3{
gsave
clp
[.481566 .182763 -.095733 .195817 40.7847 46.7568 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.481566 .182763 -.095733 .195817 40.7847 46.7568 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
41.103 46.583 mo
41.0576 46.6758 40.7798 46.6592 40.4824 46.5459 cv
40.1846 46.4326 39.9795 46.2646 40.0249 46.1709 cv
40.0703 46.0791 40.3472 46.0957 40.645 46.209 cv
40.9434 46.3223 41.1484 46.4902 41.103 46.583 cv
cp
level3{
gsave
clp
[.481502 .182739 -.0957203 .195792 40.5625 46.377 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.481502 .182739 -.0957203 .195792 40.5625 46.377 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.6987 46.9795 mo
44.7056 47.125 44.4126 47.2539 44.0435 47.2686 cv
43.6738 47.2822 43.3687 47.1777 43.3618 47.0322 cv
43.3545 46.8877 43.6479 46.7588 44.0181 46.7432 cv
44.3862 46.7285 44.6909 46.835 44.6987 46.9795 cv
cp
level3{
gsave
clp
[.59447 -.0231424 .0159104 .306637 44.0313 47.0059 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.59447 -.0231424 .0159104 .306637 44.0313 47.0059 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.751 46.5508 mo
40.7905 46.6621 40.5562 46.8262 40.2271 46.917 cv
39.8979 47.0078 39.5996 46.9922 39.5605 46.8799 cv
39.521 46.7686 39.7554 46.6055 40.0854 46.5137 cv
40.4136 46.4229 40.7124 46.4395 40.751 46.5508 cv
cp
level3{
gsave
clp
[.530072 -.146277 .0825521 .234622 40.1558 46.7158 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.530072 -.146277 .0825521 .234622 40.1558 46.7158 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.9668 47.2158 mo
40.9253 47.2549 40.8193 47.2256 40.729 47.1514 cv
40.6392 47.0771 40.6006 46.9844 40.6416 46.9453 cv
40.6831 46.9063 40.7891 46.9355 40.8789 47.0098 cv
40.9683 47.085 41.0083 47.1768 40.9668 47.2158 cv
cp
level3{
gsave
clp
[.144424 .119872 -.0880988 .0823218 40.8047 47.0801 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.144424 .119872 -.0880988 .0823218 40.8047 47.0801 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.6191 46.8906 mo
42.626 47.0166 42.3799 47.127 42.0703 47.1387 cv
41.7603 47.1514 41.5039 47.0605 41.498 46.9355 cv
41.4917 46.8105 41.7383 46.7002 42.0479 46.6885 cv
42.3574 46.6748 42.6128 46.7656 42.6191 46.8906 cv
cp
level3{
gsave
clp
[.498762 -.0202396 .0130112 .263115 42.0586 46.915 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.498762 -.0202396 .0130112 .263115 42.0586 46.915 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.9829 46.7695 mo
42.9829 46.8887 42.7725 46.9854 42.5146 46.9854 cv
42.2568 46.9854 42.0464 46.8887 42.0464 46.7695 cv
42.0464 46.6514 42.2568 46.5537 42.5146 46.5537 cv
42.7725 46.5537 42.9829 46.6514 42.9829 46.7695 cv
cp
level3{
gsave
clp
[.417583 0 0 .25084 42.5161 46.7686 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417583 0 0 .25084 42.5161 46.7686 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
40.6968 47.1348 mo
40.6787 47.2354 40.4053 47.2793 40.084 47.2354 cv
39.7637 47.1904 39.5186 47.0732 39.5371 46.9727 cv
39.5552 46.873 39.8281 46.8281 40.1489 46.873 cv
40.4688 46.917 40.7148 47.0342 40.6968 47.1348 cv
cp
level3{
gsave
clp
[.515463 .0723966 -.0376462 .211398 40.1191 47.0557 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.515463 .0723966 -.0376462 .211398 40.1191 47.0557 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.6206 47.8447 mo
44.6206 47.9658 44.4224 48.0645 44.1772 48.0645 cv
43.9321 48.0645 43.7334 47.9658 43.7334 47.8447 cv
43.7334 47.7246 43.9321 47.626 44.1772 47.626 cv
44.4224 47.626 44.6206 47.7246 44.6206 47.8447 cv
cp
level3{
gsave
clp
[.394923 0 0 .255037 44.1772 47.8438 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394923 0 0 .255037 44.1772 47.8438 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.5239 46.8652 mo
43.5239 46.9854 43.3257 47.084 43.0806 47.084 cv
42.8345 47.084 42.6362 46.9854 42.6362 46.8652 cv
42.6362 46.7441 42.8345 46.6465 43.0806 46.6465 cv
43.3257 46.6465 43.5239 46.7441 43.5239 46.8652 cv
cp
level3{
gsave
clp
[.394744 0 0 .254921 43.0801 46.8643 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.394744 0 0 .254921 43.0801 46.8643 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.0215 46.4395 mo
43.0215 46.5508 42.8604 46.6416 42.6616 46.6416 cv
42.4624 46.6416 42.3013 46.5508 42.3013 46.4395 cv
42.3013 46.3271 42.4624 46.2373 42.6616 46.2373 cv
42.8604 46.2373 43.0215 46.3271 43.0215 46.4395 cv
cp
level3{
gsave
clp
[.319946 0 0 .236178 42.6626 46.4404 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319946 0 0 .236178 42.6626 46.4404 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.7939 46.3584 mo
43.7529 46.4971 43.3682 46.5479 42.9316 46.4736 cv
42.4956 46.3994 42.1748 46.2275 42.2148 46.0898 cv
42.2554 45.9512 42.6411 45.8994 43.0767 45.9736 cv
43.5127 46.0479 43.8335 46.2197 43.7939 46.3584 cv
cp
level3{
gsave
clp
[.703081 .120811 -.0851619 .291135 43.0044 46.2246 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.703081 .120811 -.0851619 .291135 43.0044 46.2246 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.8276 46.6719 mo
45.7554 46.5488 45.9658 46.3584 46.2964 46.2461 cv
46.6265 46.1348 46.9526 46.1436 47.0229 46.2656 cv
47.0938 46.3887 46.8838 46.5791 46.5537 46.6914 cv
46.2231 46.8037 45.8984 46.7949 45.8276 46.6719 cv
cp
level3{
gsave
clp
[-.532197 .180037 -.150361 -.259174 46.4248 46.4688 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.532197 .180037 -.150361 -.259174 46.4248 46.4688 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.4175 46.1934 mo
45.375 46.0625 45.6265 45.9023 45.9756 45.8379 cv
46.3267 45.7695 46.6455 45.8223 46.687 45.9531 cv
46.729 46.084 46.479 46.2422 46.1279 46.3086 cv
45.7769 46.376 45.46 46.3232 45.4175 46.1934 cv
cp
level3{
gsave
clp
[-.565025 .106683 -.0889025 -.27461 46.0518 46.0723 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.565025 .106683 -.0889025 -.27461 46.0518 46.0723 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.8311 45.9697 mo
45.894 46.1299 45.6914 46.3184 45.3779 46.3896 cv
45.0649 46.4619 44.7607 46.3896 44.6973 46.2305 cv
44.6343 46.0703 44.8379 45.8818 45.1509 45.8096 cv
45.4634 45.7383 45.7676 45.8086 45.8311 45.9697 cv
cp
level3{
gsave
clp
[.504281 -.116677 .132497 .338165 45.2622 46.0996 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.504281 -.116677 .132497 .338165 45.2622 46.0996 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.5566 46.2813 mo
45.5278 46.4512 45.1392 46.5537 44.689 46.5078 cv
44.2378 46.4629 43.897 46.2871 43.9263 46.1172 cv
43.9551 45.9473 44.3438 45.8457 44.7939 45.8906 cv
45.2441 45.9365 45.5854 46.1113 45.5566 46.2813 cv
cp
level3{
gsave
clp
[.725022 .0730949 -.0612417 .359548 44.7417 46.1982 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.725022 .0730949 -.0612417 .359548 44.7417 46.1982 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
41.7241 46.5557 mo
41.6538 46.4326 41.8638 46.2422 42.1938 46.1299 cv
42.5244 46.0176 42.8496 46.0264 42.9209 46.1484 cv
42.9912 46.2715 42.7817 46.4629 42.4512 46.5742 cv
42.1206 46.6875 41.7954 46.6787 41.7241 46.5557 cv
cp
level3{
gsave
clp
[-.53231 .180075 -.150392 -.259229 42.3223 46.3516 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.53231 .180075 -.150392 -.259229 42.3223 46.3516 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.3501 46.1436 mo
44.4126 46.3027 44.21 46.4902 43.897 46.5625 cv
43.5835 46.6348 43.2793 46.5635 43.2158 46.4033 cv
43.1538 46.2441 43.3564 46.0557 43.6699 45.9834 cv
43.9824 45.9111 44.2871 45.9824 44.3501 46.1436 cv
cp
level3{
gsave
clp
[.504024 -.116617 .13243 .337993 43.7813 46.2734 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.504024 -.116617 .13243 .337993 43.7813 46.2734 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.7954 46.124 mo
43.7954 46.2666 43.5215 46.3828 43.1841 46.3828 cv
42.8462 46.3828 42.5728 46.2666 42.5728 46.124 cv
42.5728 45.9805 42.8462 45.8643 43.1841 45.8643 cv
43.5215 45.8643 43.7954 45.9805 43.7954 46.124 cv
cp
level3{
gsave
clp
[.543594 0 0 .302436 43.1855 46.1221 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.543594 0 0 .302436 43.1855 46.1221 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.1899 46.4502 mo
46.1899 46.5625 46.0293 46.6533 45.8296 46.6533 cv
45.6313 46.6533 45.4702 46.5625 45.4702 46.4502 cv
45.4702 46.3389 45.6313 46.248 45.8296 46.248 cv
46.0293 46.248 46.1899 46.3389 46.1899 46.4502 cv
cp
level3{
gsave
clp
[.320093 0 0 .236287 45.8315 46.4521 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320093 0 0 .236287 45.8315 46.4521 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.5503 46.3965 mo
42.5503 46.5078 42.3882 46.5977 42.1899 46.5977 cv
41.9902 46.5977 41.8291 46.5078 41.8291 46.3965 cv
41.8291 46.2832 41.9902 46.1934 42.1899 46.1934 cv
42.3882 46.1934 42.5503 46.2832 42.5503 46.3965 cv
cp
level3{
gsave
clp
[.320216 0 0 .236378 42.1909 46.3965 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320216 0 0 .236378 42.1909 46.3965 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.876 46.5791 mo
45.1338 45.9258 45.5557 44.9863 46.1772 44.001 cv
47.3389 42.1553 48.5962 41.7002 48.5962 41.7002 cv
48.5962 41.7002 47.3594 41.7969 45.9507 43.9736 cv
45.189 45.1504 44.7896 46.0254 44.5815 46.5791 cv
44.876 46.5791 li
cp
level3{
gsave
clp
[-3.11685 6.14686 -5.48382 -3.16644 47.9751 41.3408 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.11685 6.14686 -5.48382 -3.16644 47.9751 41.3408 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
44.291 46.4209 mo
44.5835 46.0615 44.959 45.6504 45.4243 45.2256 cv
46.8247 43.9473 48.3179 43.6211 48.3179 43.6211 cv
48.3179 43.6211 46.854 43.7012 45.1558 45.21 cv
44.6201 45.6865 44.231 46.0908 43.9507 46.4209 cv
44.291 46.4209 li
cp
level3{
gsave
clp
[-2.6238 5.39282 -4.45167 -2.69894 47.1563 42.917 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.6238 5.39282 -4.45167 -2.69894 47.1563 42.917 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
42.4927 46.3086 mo
42.5107 46.25 42.5313 46.1885 42.5547 46.1279 cv
42.8892 45.2725 44.0928 44.6494 44.0928 44.6494 cv
44.0928 44.6494 42.7158 45.1934 42.2788 46.2178 cv
42.2656 46.248 42.2529 46.2783 42.2417 46.3086 cv
42.4927 46.3086 li
cp
level3{
gsave
clp
[.0560835 2.06722 -3.19457 1.26161 43.1548 45.0195 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0560835 2.06722 -3.19457 1.26161 43.1548 45.0195 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.4453 46.5234 mo
44.3696 46.1699 44.2432 45.7598 44.0376 45.3145 cv
43.3496 43.8213 41.8149 43.5908 41.8149 43.5908 cv
41.8149 43.5908 43.5044 43.6299 44.3706 45.4092 cv
44.5815 45.8457 44.7212 46.2139 44.8115 46.5234 cv
44.4453 46.5234 li
cp
level3{
gsave
clp
[.311326 3.55628 3.39897 .611547 43.207 43.8252 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.311326 3.55628 3.39897 .611547 43.207 43.8252 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.1016 46.3086 mo
44.0459 46.1182 44.8574 46.0918 44.8574 46.0918 cv
44.8574 46.0918 43.8794 46.0576 42.6909 46.3086 cv
43.1016 46.3086 li
cp
level3{
gsave
clp
[-2.31196 2.70785 -5.45683 -2.09928 44.1104 45.8047 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.31196 2.70785 -5.45683 -2.09928 44.1104 45.8047 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.5166 46.124 mo
45.3257 45.9834 45.9722 45.9629 45.9722 45.9629 cv
45.9722 45.9629 45.1475 45.9336 44.0918 46.124 cv
44.5166 46.124 li
cp
level3{
gsave
clp
[-2.33051 2.72957 -5.50061 -2.11612 45.3149 45.71 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.33051 2.72957 -5.50061 -2.11612 45.3149 45.71 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.9907 45.9912 mo
45.2109 45.708 45.502 45.3887 45.8843 45.0557 cv
47.2051 43.9023 49.1343 43.4863 49.1343 43.4863 cv
49.1343 43.4863 47.1235 43.7061 45.5005 45.0713 cv
45.0801 45.4268 44.7744 45.7334 44.5513 45.9912 cv
44.9907 45.9912 li
cp
level3{
gsave
clp
[-1.58602 4.47851 -5.52402 -1.2704 47.4263 43.0938 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.58602 4.47851 -5.52402 -1.2704 47.4263 43.0938 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
45.1143 45.7158 mo
46.5576 45.5508 47.8521 45.5645 47.8521 45.5645 cv
47.8521 45.5645 46.1987 45.4697 44.3257 45.7158 cv
45.1143 45.7158 li
cp
level3{
gsave
clp
[-3.45927 2.79895 -9.08924 -2.96642 46.6621 45.1758 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.45927 2.79895 -9.08924 -2.96642 46.6621 45.1758 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.7178 46.3613 mo
44.8994 46.2979 45.0942 46.2324 45.3022 46.1689 cv
47.563 45.4727 50.415 45.4424 50.415 45.4424 cv
50.415 45.4424 47.5181 45.3086 44.7603 46.124 cv
44.4814 46.2051 44.2295 46.2852 44.0029 46.3613 cv
44.7178 46.3613 li
cp
level3{
gsave
clp
[-3.8454 3.81978 -9.58263 -3.39587 48.3921 44.7256 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.8454 3.81978 -9.58263 -3.39587 48.3921 44.7256 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.231 46.4658 mo
44.0254 46.25 43.772 46.0244 43.4634 45.7998 cv
41.96 44.708 39.624 44.6299 39.624 44.6299 cv
39.624 44.6299 42.0835 44.4551 43.9355 45.7354 cv
44.3184 46.001 44.6138 46.2451 44.8442 46.4658 cv
44.231 46.4658 li
cp
level3{
gsave
clp
[2.05452 5.59533 8.2658 -4.71454 41.5044 43.5586 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.05452 5.59533 8.2658 -4.71454 41.5044 43.5586 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.4233 46.2939 mo
43.3149 46.2168 43.1924 46.1348 43.0562 46.0508 cv
42.3003 45.583 41.5 45.3955 41.5 45.3955 cv
41.5 45.3955 42.2832 45.5068 43.1987 46.0615 cv
43.3379 46.1455 43.459 46.2236 43.564 46.2939 cv
43.4233 46.2939 li
cp
level3{
gsave
clp
[1.25931 1.72756 2.10172 -.345707 42.1289 45.292 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.25931 1.72756 2.10172 -.345707 42.1289 45.292 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.7559 46.1279 mo
43.958 46.0107 44.1973 45.8867 44.478 45.7637 cv
45.7495 45.2012 47.2769 45.1143 47.2769 45.1143 cv
47.2769 45.1143 45.7397 45.0801 44.1919 45.7422 cv
43.8604 45.8838 43.5947 46.0127 43.3833 46.1279 cv
43.7559 46.1279 li
cp
level3{
gsave
clp
[-2.1168 2.83251 -4.72746 -1.97079 46.0811 44.6162 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.1168 2.83251 -4.72746 -1.97079 46.0811 44.6162 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
42.9678 46.4414 mo
42.8613 46.248 42.7065 46.0293 42.4858 45.8047 cv
41.7793 45.0898 40.5762 44.9189 40.5762 44.9189 cv
40.5762 44.9189 41.8604 44.9492 42.7324 45.792 cv
42.9941 46.0449 43.165 46.2617 43.2749 46.4414 cv
42.9678 46.4414 li
cp
level3{
gsave
clp
[.574281 4.24604 2.88709 -2.25649 41.7046 44.0361 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.574281 4.24604 2.88709 -2.25649 41.7046 44.0361 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
44.3213 46.3086 mo
44.3901 46.2627 44.4629 46.2158 44.5391 46.1699 cv
45.6724 45.4707 47.0576 45.2949 47.0576 45.2949 cv
47.0576 45.2949 45.6587 45.335 44.2783 46.1602 cv
44.1924 46.2109 44.1123 46.2607 44.0361 46.3086 cv
44.3213 46.3086 li
cp
level3{
gsave
clp
[-1.75803 3.21437 -4.09035 -1.63814 46.0449 44.8896 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.75803 3.21437 -4.09035 -1.63814 46.0449 44.8896 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
43.5229 46.3086 mo
43.498 46.2031 43.4619 46.0918 43.4087 45.9766 cv
43.0381 45.1553 41.7163 44.7441 41.7163 44.7441 cv
41.7163 44.7441 43.2271 45.04 43.7139 46.0166 cv
43.7642 46.1211 43.8052 46.2188 43.8379 46.3086 cv
43.5229 46.3086 li
cp
level3{
gsave
clp
[-.0640618 2.62355 4.23861 .0696206 42.7949 44.7617 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0640618 2.62355 4.23861 .0696206 42.7949 44.7617 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.7637 46.4512 mo
44.6201 46.3193 44.4565 46.1826 44.2715 46.0439 cv
42.8359 44.9717 40.4658 44.6377 40.4658 44.6377 cv
40.4658 44.6377 42.9819 44.7764 44.7563 46.0439 cv
44.9575 46.1885 45.1328 46.3242 45.2856 46.4512 cv
44.7637 46.4512 li
cp
level3{
gsave
clp
[1.59341 4.37532 7.40854 -1.69908 42.3857 44.1973 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.59341 4.37532 7.40854 -1.69908 42.3857 44.1973 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
45.562 46.3662 mo
45.5098 46.2334 45.4351 46.0908 45.332 45.9395 cv
44.79 45.1436 43.4346 44.6797 43.4346 44.6797 cv
43.4346 44.6797 44.9429 45.043 45.6313 45.9951 cv
45.7285 46.1309 45.8062 46.2539 45.8652 46.3662 cv
45.562 46.3662 li
cp
level3{
gsave
clp
[.220105 2.29616 3.7641 .51279 44.5845 44.8359 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.220105 2.29616 3.7641 .51279 44.5845 44.8359 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
43.8379 46.4727 mo
43.5806 46.1455 43.1567 45.6738 42.5371 45.1816 cv
41.3755 44.2578 40.1172 44.0293 40.1172 44.0293 cv
40.1172 44.0293 41.354 44.0781 42.7637 45.167 cv
43.5244 45.7578 43.9238 46.1953 44.1323 46.4727 cv
43.8379 46.4727 li
cp
level3{
gsave
clp
[2.06221 4.06697 3.62828 -2.09502 41.1909 43.4092 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.06221 4.06697 3.62828 -2.09502 41.1909 43.4092 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.145 46.5811 mo
44.0269 46.333 43.8711 46.0527 43.667 45.7598 cv
42.9619 44.748 41.9307 44.3828 41.9307 44.3828 cv
41.9307 44.3828 43.0054 44.5762 43.8711 45.7744 cv
44.0967 46.0859 44.2607 46.3545 44.3794 46.5811 cv
44.145 46.5811 li
cp
level3{
gsave
clp
[1.2306 3.47488 4.2861 -.985708 42.7021 44.2051 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.2306 3.47488 4.2861 -.985708 42.7021 44.2051 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
42.8257 46.3828 mo
42.8794 46.251 42.9536 46.1074 43.0571 45.9561 cv
43.5986 45.1602 44.9546 44.6963 44.9546 44.6963 cv
44.9546 44.6963 43.4453 45.0605 42.7573 46.0117 cv
42.6597 46.1475 42.5835 46.2715 42.5229 46.3828 cv
42.8257 46.3828 li
cp
level3{
gsave
clp
[-.220075 2.29585 -3.76359 .51272 43.8052 44.8525 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.220075 2.29585 -3.76359 .51272 43.8052 44.8525 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
44.6675 46.5977 mo
44.6201 46.3389 44.521 46.0186 44.3252 45.6592 cv
43.8135 44.7178 42.6719 44.1904 42.6719 44.1904 cv
42.6719 44.1904 43.9292 44.5967 44.5723 45.7188 cv
44.7803 46.083 44.8955 46.373 44.9546 46.5977 cv
44.6675 46.5977 li
cp
level3{
gsave
clp
[2.28271 0 0 2.28271 42.6719 45.3945 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.28271 0 0 2.28271 42.6719 45.3945 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
45.4434 46.542 mo
45.6196 46.4365 45.8208 46.3262 46.0483 46.2139 cv
47.6157 45.4404 49.8945 45.1582 49.8945 45.1582 cv
49.8945 45.1582 47.5215 45.3096 45.5977 46.2246 cv
45.3608 46.3379 45.1543 46.4434 44.9741 46.542 cv
45.4434 46.542 li
cp
level3{
gsave
clp
[-1.89482 3.00478 -6.52086 -.82471 48.0195 44.9209 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.89482 3.00478 -6.52086 -.82471 48.0195 44.9209 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
45.9502 46.6045 mo
46.0513 46.1885 46.1973 45.6865 46.4102 45.1553 cv
46.9741 43.7412 47.7935 43.2383 47.7935 43.2383 cv
47.7935 43.2383 46.9409 43.498 46.248 45.1729 cv
46.0068 45.7559 45.853 46.2314 45.7554 46.6045 cv
45.9502 46.6045 li
cp
level3{
gsave
clp
[-.686135 5.51223 -2.34154 -1.62036 47.0479 42.7217 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.686135 5.51223 -2.34154 -1.62036 47.0479 42.7217 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
42.937 47.1318 mo
42.937 47.2422 42.7759 47.333 42.5767 47.333 cv
42.3774 47.333 42.2163 47.2422 42.2163 47.1318 cv
42.2163 47.0195 42.3774 46.9297 42.5767 46.9297 cv
42.7759 46.9297 42.937 47.0195 42.937 47.1318 cv
cp
level3{
gsave
clp
[.319792 0 0 .236064 42.5781 47.1328 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319792 0 0 .236064 42.5781 47.1328 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.6138 47.457 mo
43.6138 47.5684 43.4526 47.6582 43.2539 47.6582 cv
43.0547 47.6582 42.8931 47.5684 42.8931 47.457 cv
42.8931 47.3447 43.0547 47.2539 43.2539 47.2539 cv
43.4526 47.2539 43.6138 47.3447 43.6138 47.457 cv
cp
level3{
gsave
clp
[.320128 0 0 .236313 43.2549 47.457 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320128 0 0 .236313 43.2549 47.457 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.4639 46.4326 mo
43.4639 46.5439 43.3022 46.6348 43.103 46.6348 cv
42.9048 46.6348 42.7432 46.5439 42.7432 46.4326 cv
42.7432 46.3213 42.9048 46.2305 43.103 46.2305 cv
43.3022 46.2305 43.4639 46.3213 43.4639 46.4326 cv
cp
level3{
gsave
clp
[.320093 0 0 .236287 43.105 46.4336 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320093 0 0 .236287 43.105 46.4336 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.7803 47.0088 mo
43.7803 47.1211 43.6187 47.2109 43.4204 47.2109 cv
43.2212 47.2109 43.0601 47.1211 43.0601 47.0088 cv
43.0601 46.8965 43.2212 46.8057 43.4204 46.8057 cv
43.6187 46.8057 43.7803 46.8965 43.7803 47.0088 cv
cp
level3{
gsave
clp
[.320242 0 0 .236397 43.4214 47.0098 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320242 0 0 .236397 43.4214 47.0098 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.5898 47.0088 mo
44.5898 47.1211 44.4287 47.2109 44.2295 47.2109 cv
44.0308 47.2109 43.8696 47.1211 43.8696 47.0088 cv
43.8696 46.8965 44.0308 46.8057 44.2295 46.8057 cv
44.4287 46.8057 44.5898 46.8965 44.5898 47.0088 cv
cp
level3{
gsave
clp
[.320234 0 0 .236391 44.231 47.0098 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320234 0 0 .236391 44.231 47.0098 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.9346 47.2363 mo
44.9346 47.3486 44.7744 47.4395 44.5752 47.4395 cv
44.3765 47.4395 44.2144 47.3486 44.2144 47.2363 cv
44.2144 47.125 44.3765 47.0342 44.5752 47.0342 cv
44.7744 47.0342 44.9346 47.125 44.9346 47.2363 cv
cp
level3{
gsave
clp
[.320233 0 0 .23639 44.5757 47.2383 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.320233 0 0 .23639 44.5757 47.2383 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.2178 46.6719 mo
45.1465 46.5488 45.3579 46.3584 45.687 46.2461 cv
46.0176 46.1348 46.3428 46.1436 46.4136 46.2656 cv
46.4858 46.3887 46.2754 46.5791 45.9438 46.6914 cv
45.6143 46.8037 45.2886 46.7949 45.2178 46.6719 cv
cp
level3{
gsave
clp
[-.53227 .180062 -.150381 -.25921 45.8154 46.4688 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.53227 .180062 -.150381 -.25921 45.8154 46.4688 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.0015 46.7119 mo
45.0015 46.8457 44.7583 46.9541 44.459 46.9541 cv
44.1587 46.9541 43.9155 46.8457 43.9155 46.7119 cv
43.9155 46.5771 44.1587 46.4678 44.459 46.4678 cv
44.7583 46.4678 45.0015 46.5771 45.0015 46.7119 cv
cp
level3{
gsave
clp
[.483738 0 0 .283502 44.4585 46.71 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.483738 0 0 .283502 44.4585 46.71 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.2549 46.9668 mo
45.1641 46.9434 45.126 46.7715 45.1714 46.5811 cv
45.2168 46.3906 45.3276 46.2549 45.4204 46.2764 cv
45.5112 46.2998 45.5483 46.4717 45.5029 46.6611 cv
45.4575 46.8525 45.3462 46.9883 45.2549 46.9668 cv
cp
level3{
gsave
clp
[-.0733969 .307474 -.192419 -.0476088 45.3379 46.6211 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0733969 .307474 -.192419 -.0476088 45.3379 46.6211 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
46.5278 46.9297 mo
46.5703 47.0742 46.376 47.2627 46.0913 47.3486 cv
45.8062 47.4346 45.5415 47.3867 45.4985 47.2412 cv
45.4551 47.0957 45.6514 46.9082 45.9355 46.8223 cv
46.2192 46.7354 46.4849 46.7832 46.5278 46.9297 cv
cp
level3{
gsave
clp
[.457102 -.138516 .0910246 .306713 46.0146 47.085 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.457102 -.138516 .0910246 .306713 46.0146 47.085 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.0732 46.6416 mo
45.0591 46.7334 44.8364 46.7754 44.5771 46.7334 cv
44.3169 46.6924 44.1177 46.584 44.1328 46.4912 cv
44.1465 46.3994 44.3696 46.3584 44.6284 46.3984 cv
44.8892 46.4395 45.0884 46.5488 45.0732 46.6416 cv
cp
level3{
gsave
clp
[.417926 .0670259 -.0315416 .195164 44.605 46.5674 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.417926 .0670259 -.0315416 .195164 44.605 46.5674 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.6743 46.7285 mo
43.6802 46.8623 43.4429 46.9805 43.1431 46.9941 cv
42.8438 47.0078 42.5962 46.9102 42.5903 46.7764 cv
42.585 46.6426 42.8228 46.5234 43.1221 46.5098 cv
43.4219 46.4971 43.6689 46.5938 43.6743 46.7285 cv
cp
level3{
gsave
clp
[.481979 -.0217286 .0118519 .282471 43.1309 46.751 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.481979 -.0217286 .0118519 .282471 43.1309 46.751 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.2109 46.5352 mo
45.2437 46.6387 45.0537 46.791 44.7866 46.875 cv
44.5186 46.959 44.2764 46.9434 44.2446 46.8408 cv
44.2129 46.7383 44.4043 46.5869 44.6709 46.5029 cv
44.937 46.4189 45.1797 46.4336 45.2109 46.5352 cv
cp
level3{
gsave
clp
[.428988 -.136406 .0672147 .217459 44.728 46.6895 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.428988 -.136406 .0672147 .217459 44.728 46.6895 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.3545 46.7148 mo
44.3599 46.8291 44.1606 46.9326 43.9087 46.9434 cv
43.6577 46.9551 43.4507 46.8701 43.4443 46.7549 cv
43.4399 46.6396 43.6387 46.5371 43.8906 46.5254 cv
44.1421 46.5137 44.3491 46.5986 44.3545 46.7148 cv
cp
level3{
gsave
clp
[.40498 -.0177796 .0118531 .242988 43.9009 46.7334 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40498 -.0177796 .0118531 .242988 43.9009 46.7334 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.9844 46.6914 mo
43.9844 46.8008 43.8149 46.8896 43.605 46.8896 cv
43.395 46.8896 43.2251 46.8008 43.2251 46.6914 cv
43.2251 46.5811 43.395 46.4932 43.605 46.4932 cv
43.8149 46.4932 43.9844 46.5811 43.9844 46.6914 cv
cp
level3{
gsave
clp
[.337319 0 0 .230797 43.605 46.6914 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.337319 0 0 .230797 43.605 46.6914 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.8013 46.7207 mo
42.8013 46.832 42.6304 46.9199 42.4209 46.9199 cv
42.2104 46.9199 42.042 46.832 42.042 46.7207 cv
42.042 46.6113 42.2104 46.5215 42.4209 46.5215 cv
42.6304 46.5215 42.8013 46.6113 42.8013 46.7207 cv
cp
level3{
gsave
clp
[.337928 0 0 .231214 42.4219 46.7207 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.337928 0 0 .231214 42.4219 46.7207 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
43.1753 46.8457 mo
43.1387 46.9326 42.9131 46.917 42.6719 46.8115 cv
42.4307 46.707 42.2642 46.5518 42.3003 46.4668 cv
42.3369 46.3799 42.5615 46.3965 42.8042 46.5 cv
43.0459 46.6045 43.2114 46.7598 43.1753 46.8457 cv
cp
level3{
gsave
clp
[.388774 .169719 -.0769654 .181559 42.7358 46.6572 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.388774 .169719 -.0769654 .181559 42.7358 46.6572 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.9951 46.4941 mo
42.9585 46.5801 42.7334 46.5645 42.4912 46.46 cv
42.2505 46.3555 42.084 46.2002 42.1206 46.1143 cv
42.1567 46.0283 42.3823 46.0439 42.6245 46.1484 cv
42.8657 46.2539 43.0327 46.4082 42.9951 46.4941 cv
cp
level3{
gsave
clp
[.388899 .169773 -.0769901 .181618 42.5557 46.3057 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.388899 .169773 -.0769901 .181618 42.5557 46.3057 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.9131 46.8613 mo
45.9185 46.9951 45.6807 47.1152 45.3813 47.1279 cv
45.0806 47.1416 44.834 47.0439 44.8286 46.9102 cv
44.8223 46.7764 45.0605 46.6563 45.3599 46.6426 cv
45.6587 46.6299 45.9063 46.7285 45.9131 46.8613 cv
cp
level3{
gsave
clp
[.481826 -.0217217 .0118482 .282382 45.3706 46.8838 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.481826 -.0217217 .0118482 .282382 45.3706 46.8838 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.71 46.4648 mo
42.7417 46.5674 42.5518 46.7188 42.2837 46.8037 cv
42.0176 46.8877 41.7754 46.873 41.7437 46.7695 cv
41.7119 46.667 41.9028 46.5156 42.1694 46.4307 cv
42.436 46.3467 42.6787 46.3623 42.71 46.4648 cv
cp
level3{
gsave
clp
[.429086 -.136438 .0672301 .217509 42.2266 46.6172 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.429086 -.136438 .0672301 .217509 42.2266 46.6172 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.8848 47.0801 mo
42.8506 47.1152 42.7651 47.0889 42.6924 47.0205 cv
42.6191 46.9512 42.5879 46.8662 42.6211 46.8291 cv
42.6548 46.7939 42.7407 46.8203 42.8135 46.8896 cv
42.8862 46.958 42.9185 47.0439 42.8848 47.0801 cv
cp
level3{
gsave
clp
[.000842751 .000799899 -.000514221 .000557073 597.928 302.195 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.000842751 .000799899 -.000514221 .000557073 597.928 302.195 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.2261 46.7793 mo
44.231 46.8955 44.0313 46.9971 43.7803 47.0088 cv
43.5293 47.0205 43.3203 46.9355 43.3159 46.8203 cv
43.311 46.7051 43.5107 46.6025 43.7622 46.5908 cv
44.0127 46.5801 44.2207 46.6641 44.2261 46.7793 cv
cp
level3{
gsave
clp
[.40498 -.0177796 .0118531 .242988 43.7725 46.7988 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.40498 -.0177796 .0118531 .242988 43.7725 46.7988 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.52 46.667 mo
44.52 46.7773 44.3506 46.8662 44.1406 46.8662 cv
43.9316 46.8662 43.7607 46.7773 43.7607 46.667 cv
43.7607 46.5576 43.9316 46.4678 44.1406 46.4678 cv
44.3506 46.4678 44.52 46.5576 44.52 46.667 cv
cp
level3{
gsave
clp
[.337921 0 0 .231209 44.1406 46.667 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.337921 0 0 .231209 44.1406 46.667 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
42.666 47.0039 mo
42.6509 47.0977 42.4292 47.1387 42.1689 47.0977 cv
41.9087 47.0566 41.7104 46.9482 41.7241 46.8555 cv
41.7393 46.7627 41.9609 46.7217 42.2217 46.7617 cv
42.4814 46.8037 42.6802 46.9121 42.666 47.0039 cv
cp
level3{
gsave
clp
[.418764 .0671603 -.0316048 .195555 42.1968 46.9307 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.418764 .0671603 -.0316048 .195555 42.1968 46.9307 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
45.8496 47.6621 mo
45.8496 47.7734 45.6899 47.8633 45.4893 47.8633 cv
45.2905 47.8633 45.1299 47.7734 45.1299 47.6621 cv
45.1299 47.5498 45.2905 47.46 45.4893 47.46 cv
45.6899 47.46 45.8496 47.5498 45.8496 47.6621 cv
cp
level3{
gsave
clp
[.319531 0 0 .235872 45.4912 47.6631 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319531 0 0 .235872 45.4912 47.6631 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
44.9595 46.7559 mo
44.9595 46.8662 44.7983 46.958 44.6006 46.958 cv
44.4009 46.958 44.2397 46.8662 44.2397 46.7559 cv
44.2397 46.6436 44.4009 46.5537 44.6006 46.5537 cv
44.7983 46.5537 44.9595 46.6436 44.9595 46.7559 cv
cp
level3{
gsave
clp
[.319811 0 0 .236079 44.6011 46.7568 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.319811 0 0 .236079 44.6011 46.7568 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.8081 46.3193 mo
68.8081 46.4092 68.9888 46.4805 69.2119 46.4805 cv
69.4351 46.4805 69.6157 46.4092 69.6157 46.3193 cv
69.6157 46.2314 69.4351 46.1592 69.2119 46.1592 cv
68.9888 46.1592 68.8081 46.2314 68.8081 46.3193 cv
cp
level3{
gsave
clp
[-.358491 0 0 .187337 69.2119 46.3203 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358491 0 0 .187337 69.2119 46.3203 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.9424 46.2549 mo
67.9878 46.3662 68.4199 46.4063 68.9087 46.3477 cv
69.3979 46.2891 69.7573 46.1514 69.7129 46.041 cv
69.6675 45.9316 69.2354 45.8906 68.7466 45.9492 cv
68.2578 46.0088 67.8979 46.1455 67.9424 46.2549 cv
cp
level3{
gsave
clp
[-.787183 .0951631 .0951631 .232065 68.8271 46.1475 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.787183 .0951631 .0951631 .232065 68.8271 46.1475 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
65.6621 46.5049 mo
65.7422 46.4072 65.5063 46.2549 65.1362 46.166 cv
64.7656 46.0771 64.4009 46.084 64.3208 46.1816 cv
64.2412 46.2793 64.4775 46.4307 64.8481 46.5205 cv
65.2188 46.6104 65.5825 46.6025 65.6621 46.5049 cv
cp
level3{
gsave
clp
[.596756 .143756 .167994 -.206441 64.9927 46.3428 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.596756 .143756 .167994 -.206441 64.9927 46.3428 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.1216 46.124 mo
66.1689 46.0205 65.8877 45.8926 65.4951 45.8408 cv
65.1025 45.7881 64.7451 45.8291 64.6978 45.9326 cv
64.6509 46.0371 64.9312 46.1641 65.3257 46.2168 cv
65.7183 46.2686 66.0747 46.2285 66.1216 46.124 cv
cp
level3{
gsave
clp
[.633363 .0852282 .0994329 -.21892 65.4106 46.0293 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633363 .0852282 .0994329 -.21892 65.4106 46.0293 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
65.6577 45.9463 mo
65.5874 46.0732 65.8149 46.2227 66.166 46.2813 cv
66.5171 46.3379 66.8584 46.2813 66.9287 46.1543 cv
66.999 46.0264 66.7715 45.876 66.4204 45.8184 cv
66.0698 45.7617 65.728 45.8184 65.6577 45.9463 cv
cp
level3{
gsave
clp
[-.566362 -.0920233 -.14891 .269377 66.293 46.0508 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.566362 -.0920233 -.14891 .269377 66.293 46.0508 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
65.9653 46.1943 mo
65.998 46.3301 66.4341 46.4102 66.9385 46.375 cv
67.4438 46.3389 67.8267 46.1992 67.7939 46.0635 cv
67.7617 45.9287 67.3252 45.8477 66.8203 45.8828 cv
66.3159 45.9199 65.9331 46.0586 65.9653 46.1943 cv
cp
level3{
gsave
clp
[-.813101 .0576608 .0685244 .286633 66.8789 46.1279 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.813101 .0576608 .0685244 .286633 66.8789 46.1279 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.2627 46.4121 mo
70.3423 46.3145 70.1069 46.1631 69.7368 46.0742 cv
69.3662 45.9844 69.001 45.9912 68.9214 46.0889 cv
68.8428 46.1865 69.0771 46.3389 69.4478 46.4277 cv
69.8184 46.5176 70.1831 46.5107 70.2627 46.4121 cv
cp
level3{
gsave
clp
[.595919 .143555 .167759 -.206151 69.5933 46.251 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.595919 .143555 .167759 -.206151 69.5933 46.251 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.3188 46.084 mo
67.2485 46.2109 67.4766 46.3613 67.8267 46.4189 cv
68.1782 46.4756 68.519 46.4189 68.5898 46.292 cv
68.6602 46.1641 68.4326 46.0146 68.0815 45.957 cv
67.7305 45.8994 67.3887 45.9561 67.3188 46.084 cv
cp
level3{
gsave
clp
[-.566009 -.091966 -.148818 .269209 67.9536 46.1895 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.566009 -.091966 -.148818 .269209 67.9536 46.1895 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.9399 46.0684 mo
67.9399 46.1826 68.2471 46.2754 68.6255 46.2754 cv
69.0044 46.2754 69.3115 46.1826 69.3115 46.0684 cv
69.3115 45.9551 69.0044 45.8623 68.6255 45.8623 cv
68.2471 45.8623 67.9399 45.9551 67.9399 46.0684 cv
cp
level3{
gsave
clp
[-.609956 0 0 .240311 68.6255 46.0693 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.609956 0 0 .240311 68.6255 46.0693 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
65.2554 46.3291 mo
65.2554 46.418 65.436 46.4902 65.6592 46.4902 cv
65.8823 46.4902 66.063 46.418 66.063 46.3291 cv
66.063 46.2402 65.8823 46.168 65.6592 46.168 cv
65.436 46.168 65.2554 46.2402 65.2554 46.3291 cv
cp
level3{
gsave
clp
[-.358984 0 0 .187595 65.6592 46.3291 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358984 0 0 .187595 65.6592 46.3291 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.3374 46.2852 mo
69.3374 46.374 69.519 46.4463 69.7412 46.4463 cv
69.9644 46.4463 70.1455 46.374 70.1455 46.2852 cv
70.1455 46.1963 69.9644 46.124 69.7412 46.124 cv
69.519 46.124 69.3374 46.1963 69.3374 46.2852 cv
cp
level3{
gsave
clp
[-.359064 0 0 .187637 69.7412 46.2852 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359064 0 0 .187637 69.7412 46.2852 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.7295 46.4316 mo
66.4409 45.9121 65.9663 45.1641 65.2705 44.3779 cv
63.9678 42.9102 62.5576 42.5469 62.5576 42.5469 cv
62.5576 42.5469 63.9443 42.624 65.5239 44.3574 cv
66.3779 45.2949 66.8267 45.9902 67.0586 46.4316 cv
66.7295 46.4316 li
cp
level3{
gsave
clp
[2.80793 5.53763 4.9403 -2.85261 63.5366 41.9814 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.80793 5.53763 4.9403 -2.85261 63.5366 41.9814 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
67.3848 46.3057 mo
67.0571 46.0205 66.6367 45.6914 66.1147 45.3545 cv
64.5449 44.3359 62.8691 44.0762 62.8691 44.0762 cv
62.8691 44.0762 64.5107 44.1396 66.415 45.3418 cv
67.0156 45.7207 67.4521 46.043 67.7671 46.3057 cv
67.3848 46.3057 li
cp
level3{
gsave
clp
[2.50405 5.14669 4.24849 -2.57576 64.3418 43.1836 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.50405 5.14669 4.24849 -2.57576 64.3418 43.1836 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
69.4004 46.2158 mo
69.3804 46.1689 69.3584 46.1211 69.3315 46.0713 cv
68.9575 45.3916 67.6064 44.8955 67.6064 44.8955 cv
67.6064 44.8955 69.1514 45.3281 69.6406 46.1436 cv
69.6558 46.168 69.6704 46.1924 69.6831 46.2158 cv
69.4004 46.2158 li
cp
level3{
gsave
clp
[-.0346856 1.2785 1.97572 .780258 68.6519 45.2852 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0346856 1.2785 1.97572 .780258 68.6519 45.2852 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
67.2114 46.3867 mo
67.2969 46.1055 67.4385 45.7793 67.6694 45.4238 cv
68.4399 44.2363 70.1621 43.5703 70.1621 43.5703 cv
70.1621 43.5703 68.2676 44.083 67.2969 45.5 cv
67.0586 45.8467 66.9028 46.1406 66.8018 46.3867 cv
67.2114 46.3867 li
cp
level3{
gsave
clp
[-.287447 3.28351 -3.13827 .564642 68.5811 43.8545 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.287447 3.28351 -3.13827 .564642 68.5811 43.8545 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
68.7188 46.2158 mo
67.6597 46.0645 66.7495 46.043 66.7495 46.043 cv
66.7495 46.043 67.8462 46.0166 69.1792 46.2158 cv
68.7188 46.2158 li
cp
level3{
gsave
clp
[2.43813 2.85563 5.75464 -2.21384 67.6084 45.7129 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.43813 2.85563 5.75464 -2.21384 67.6084 45.7129 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
67.1323 46.0684 mo
66.2241 45.957 65.4995 45.9404 65.4995 45.9404 cv
65.4995 45.9404 66.4248 45.918 67.6074 46.0684 cv
67.1323 46.0684 li
cp
level3{
gsave
clp
[2.47378 2.89738 5.83877 -2.24621 66.252 45.6514 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.47378 2.89738 5.83877 -2.24621 66.252 45.6514 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
66.6001 45.9629 mo
66.3535 45.7383 66.0269 45.4844 65.5986 45.2178 cv
64.1172 44.3008 61.9536 43.9688 61.9536 43.9688 cv
61.9536 43.9688 64.209 44.1436 66.0278 45.2314 cv
66.4995 45.5137 66.8433 45.7578 67.0938 45.9629 cv
66.6001 45.9629 li
cp
level3{
gsave
clp
[1.41549 3.99696 4.93005 -1.1338 64.0039 43.498 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.41549 3.99696 4.93005 -1.1338 64.0039 43.498 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
66.4619 45.7451 mo
64.8438 45.6123 63.3926 45.624 63.3926 45.624 cv
63.3926 45.624 65.2461 45.5479 67.3457 45.7451 cv
66.4619 45.7451 li
cp
level3{
gsave
clp
[3.74885 3.03326 9.85011 -3.21474 64.749 45.1826 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74885 3.03326 9.85011 -3.21474 64.749 45.1826 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
66.9058 46.2578 mo
66.7026 46.207 66.4839 46.1553 66.251 46.1045 cv
63.7158 45.5508 60.5176 45.5264 60.5176 45.5264 cv
60.5176 45.5264 63.7661 45.4189 66.8589 46.0684 cv
67.1714 46.1348 67.4536 46.1973 67.708 46.2578 cv
66.9058 46.2578 li
cp
level3{
gsave
clp
[3.95184 3.92551 9.84787 -3.48987 62.8965 44.6836 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.95184 3.92551 9.84787 -3.48987 62.8965 44.6836 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
67.4521 46.3408 mo
67.6836 46.1689 67.9668 45.9902 68.313 45.8115 cv
69.9985 44.9414 72.6187 44.8799 72.6187 44.8799 cv
72.6187 44.8799 69.8608 44.7412 67.7842 45.7598 cv
67.3545 45.9707 67.0229 46.165 66.7651 46.3408 cv
67.4521 46.3408 li
cp
level3{
gsave
clp
[-2.04864 5.57933 -8.24217 -4.70106 70.4199 43.626 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.04864 5.57933 -8.24217 -4.70106 70.4199 43.626 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
68.3584 46.2041 mo
68.4795 46.1426 68.6167 46.0771 68.769 46.0098 cv
69.6172 45.6377 70.5146 45.4893 70.5146 45.4893 cv
70.5146 45.4893 69.6362 45.5771 68.6099 46.0195 cv
68.4536 46.0869 68.3179 46.1475 68.2002 46.2041 cv
68.3584 46.2041 li
cp
level3{
gsave
clp
[-1.1145 1.5289 -1.86003 -.305952 69.7129 45.3574 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.1145 1.5289 -1.86003 -.305952 69.7129 45.3574 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
67.9854 46.0723 mo
67.7583 45.9795 67.4897 45.8809 67.1753 45.7813 cv
65.75 45.335 64.0366 45.2656 64.0366 45.2656 cv
64.0366 45.2656 65.7598 45.2383 67.4951 45.7646 cv
67.8677 45.8779 68.1655 45.9795 68.4033 46.0723 cv
67.9854 46.0723 li
cp
level3{
gsave
clp
[2.10891 2.82196 4.70984 -1.96345 65.4717 44.668 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.10891 2.82196 4.70984 -1.96345 65.4717 44.668 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
68.8677 46.3223 mo
68.9878 46.168 69.1611 45.9932 69.4102 45.8145 cv
70.2012 45.2451 71.5503 45.1094 71.5503 45.1094 cv
71.5503 45.1094 70.1108 45.1338 69.1333 45.8047 cv
68.8389 46.0059 68.6475 46.1787 68.5239 46.3223 cv
68.8677 46.3223 li
cp
level3{
gsave
clp
[-.565825 4.18353 -2.84458 -2.22327 70.2563 44.0977 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.565825 4.18353 -2.84458 -2.22327 70.2563 44.0977 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
67.3506 46.2158 mo
67.2734 46.1787 67.1919 46.1416 67.1069 46.1045 cv
65.8364 45.5488 64.2822 45.4092 64.2822 45.4092 cv
64.2822 45.4092 65.8506 45.4404 67.3984 46.0977 cv
67.4951 46.1377 67.5854 46.1777 67.6709 46.2158 cv
67.3506 46.2158 li
cp
level3{
gsave
clp
[1.71057 3.12759 3.97992 -1.59391 65.4912 44.9248 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.71057 3.12759 3.97992 -1.59391 65.4912 44.9248 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
68.2466 46.2158 mo
68.2739 46.1318 68.3154 46.0439 68.373 45.9521 cv
68.7896 45.2979 70.271 44.9707 70.271 44.9707 cv
70.271 44.9707 68.5776 45.2061 68.0332 45.9834 cv
67.9751 46.0664 67.9287 46.1436 67.8931 46.2158 cv
68.2466 46.2158 li
cp
level3{
gsave
clp
[.0505835 2.07157 -3.34682 .0549728 69.0679 44.9902 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0505835 2.07157 -3.34682 .0549728 69.0679 44.9902 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
66.8545 46.3301 mo
67.0156 46.2246 67.1987 46.1152 67.4067 46.0049 cv
69.0166 45.1504 71.6733 44.8848 71.6733 44.8848 cv
71.6733 44.8848 68.8525 44.9961 66.8638 46.0059 cv
66.6382 46.1201 66.4414 46.2285 66.2705 46.3301 cv
66.8545 46.3301 li
cp
level3{
gsave
clp
[-1.46542 4.02386 -6.81343 -1.5626 69.4229 44.3691 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.46542 4.02386 -6.81343 -1.5626 69.4229 44.3691 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
65.9595 46.2617 mo
66.0186 46.1563 66.1025 46.043 66.2173 45.9229 cv
66.8252 45.2881 68.3447 44.9189 68.3447 44.9189 cv
68.3447 44.9189 66.6538 45.209 65.8823 45.9668 cv
65.7725 46.0742 65.6865 46.1729 65.6191 46.2617 cv
65.9595 46.2617 li
cp
level3{
gsave
clp
[-.160403 1.67335 -2.74313 .3737 67.0288 45.0986 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.160403 1.67335 -2.74313 .3737 67.0288 45.0986 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
67.8926 46.3457 mo
68.1816 46.0869 68.6567 45.7109 69.3511 45.3184 cv
70.6538 44.583 72.0649 44.4014 72.0649 44.4014 cv
72.0649 44.4014 70.6772 44.4404 69.0981 45.3086 cv
68.2451 45.7773 67.7954 46.126 67.5635 46.3457 cv
67.8926 46.3457 li
cp
level3{
gsave
clp
[-1.9677 3.88058 -3.462 -1.99901 70.7051 43.6162 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.9677 3.88058 -3.462 -1.99901 70.7051 43.6162 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
67.5488 46.4336 mo
67.6807 46.2354 67.8555 46.0127 68.0845 45.7793 cv
68.876 44.9736 70.0317 44.6836 70.0317 44.6836 cv
70.0317 44.6836 68.8267 44.8369 67.8555 45.791 cv
67.6025 46.0381 67.4189 46.252 67.2856 46.4336 cv
67.5488 46.4336 li
cp
level3{
gsave
clp
[-1.06131 2.99686 -3.69648 -.850109 69.0483 44.458 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.06131 2.99686 -3.69648 -.850109 69.0483 44.458 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
69.0278 46.2754 mo
68.9673 46.1699 68.8843 46.0566 68.7686 45.9365 cv
68.1616 45.3018 66.6411 44.9326 66.6411 44.9326 cv
66.6411 44.9326 68.3325 45.2227 69.1045 45.9795 cv
69.2144 46.0879 69.2998 46.1855 69.3677 46.2754 cv
69.0278 46.2754 li
cp
level3{
gsave
clp
[.160368 1.67297 2.74252 .373617 67.957 45.1123 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.160368 1.67297 2.74252 .373617 67.957 45.1123 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
66.9629 46.4463 mo
67.0156 46.2412 67.127 45.9854 67.3462 45.6992 cv
67.9204 44.9492 69.2007 44.5293 69.2007 44.5293 cv
69.2007 44.5293 67.791 44.8535 67.0693 45.7461 cv
66.835 46.0371 66.707 46.2676 66.6411 46.4463 cv
66.9629 46.4463 li
cp
level3{
gsave
clp
[-2.55957 0 0 2.55957 69.2012 45.4883 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.55957 0 0 2.55957 69.2012 45.4883 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
66.0928 46.4014 mo
65.895 46.3174 65.6699 46.2295 65.4141 46.1406 cv
63.6567 45.5254 61.1011 45.3008 61.1011 45.3008 cv
61.1011 45.3008 63.7627 45.4209 65.9204 46.1494 cv
66.1855 46.2393 66.417 46.3232 66.6187 46.4014 cv
66.0928 46.4014 li
cp
level3{
gsave
clp
[1.69864 2.69368 5.84574 -.739325 63.3345 45.0186 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.69864 2.69368 5.84574 -.739325 63.3345 45.0186 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
65.5244 46.4512 mo
65.4111 46.1201 65.2471 45.7207 65.0083 45.2979 cv
64.3755 44.1719 63.4575 43.7725 63.4575 43.7725 cv
63.4575 43.7725 64.4126 43.9785 65.1899 45.3115 cv
65.4609 45.7764 65.6328 46.1553 65.7417 46.4512 cv
65.5244 46.4512 li
cp
level3{
gsave
clp
[.61184 4.91536 2.088 -1.44491 64.3545 43.1504 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.61184 4.91536 2.088 -1.44491 64.3545 43.1504 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
68.9033 46.8711 mo
68.9033 46.96 69.084 47.0322 69.3071 47.0322 cv
69.5303 47.0322 69.7109 46.96 69.7109 46.8711 cv
69.7109 46.7822 69.5303 46.709 69.3071 46.709 cv
69.084 46.709 68.9033 46.7822 68.9033 46.8711 cv
cp
level3{
gsave
clp
[-.359302 0 0 .187761 69.3071 46.8711 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359302 0 0 .187761 69.3071 46.8711 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.1445 47.1289 mo
68.1445 47.2188 68.3252 47.291 68.5483 47.291 cv
68.7715 47.291 68.9521 47.2188 68.9521 47.1289 cv
68.9521 47.041 68.7715 46.9688 68.5483 46.9688 cv
68.3252 46.9688 68.1445 47.041 68.1445 47.1289 cv
cp
level3{
gsave
clp
[-.358984 0 0 .187595 68.5483 47.1299 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358984 0 0 .187595 68.5483 47.1299 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.3125 46.3145 mo
68.3125 46.4033 68.4937 46.4756 68.7163 46.4756 cv
68.9395 46.4756 69.1201 46.4033 69.1201 46.3145 cv
69.1201 46.2256 68.9395 46.1533 68.7163 46.1533 cv
68.4937 46.1533 68.3125 46.2256 68.3125 46.3145 cv
cp
level3{
gsave
clp
[-.358904 0 0 .187553 68.7163 46.3145 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358904 0 0 .187553 68.7163 46.3145 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.9585 46.7734 mo
67.9585 46.8623 68.1382 46.9346 68.3613 46.9346 cv
68.5845 46.9346 68.7656 46.8623 68.7656 46.7734 cv
68.7656 46.6846 68.5845 46.6113 68.3613 46.6113 cv
68.1382 46.6113 67.9585 46.6846 67.9585 46.7734 cv
cp
level3{
gsave
clp
[-.359141 0 0 .187677 68.3618 46.7734 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359141 0 0 .187677 68.3618 46.7734 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.0498 46.7734 mo
67.0498 46.8623 67.2314 46.9346 67.4536 46.9346 cv
67.6768 46.9346 67.8579 46.8623 67.8579 46.7734 cv
67.8579 46.6846 67.6768 46.6113 67.4536 46.6113 cv
67.2314 46.6113 67.0498 46.6846 67.0498 46.7734 cv
cp
level3{
gsave
clp
[-.359543 0 0 .187887 67.4536 46.7734 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359543 0 0 .187887 67.4536 46.7734 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.6631 46.9541 mo
66.6631 47.0439 66.8438 47.1152 67.0664 47.1152 cv
67.2896 47.1152 67.4702 47.0439 67.4702 46.9541 cv
67.4702 46.8662 67.2896 46.793 67.0664 46.793 cv
66.8438 46.793 66.6631 46.8662 66.6631 46.9541 cv
cp
level3{
gsave
clp
[-.358824 0 0 .187511 67.0664 46.9541 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358824 0 0 .187511 67.0664 46.9541 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.3452 46.5049 mo
66.4248 46.4072 66.189 46.2549 65.8193 46.166 cv
65.4487 46.0771 65.0835 46.084 65.0039 46.1816 cv
64.9248 46.2793 65.1597 46.4307 65.5313 46.5205 cv
65.9014 46.6104 66.2651 46.6025 66.3452 46.5049 cv
cp
level3{
gsave
clp
[.596753 .143756 .167994 -.20644 65.6758 46.3428 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.596753 .143756 .167994 -.20644 65.6758 46.3428 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.5884 46.5371 mo
66.5884 46.6436 66.8604 46.7305 67.1973 46.7305 cv
67.5332 46.7305 67.8057 46.6436 67.8057 46.5371 cv
67.8057 46.4297 67.5332 46.3428 67.1973 46.3428 cv
66.8604 46.3428 66.5884 46.4297 66.5884 46.5371 cv
cp
level3{
gsave
clp
[-.541665 0 0 .225694 67.1978 46.5361 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.541665 0 0 .225694 67.1978 46.5361 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.3037 46.7393 mo
66.4058 46.7217 66.4473 46.584 66.397 46.4336 cv
66.3462 46.2822 66.2222 46.1729 66.1182 46.1914 cv
66.0171 46.208 65.9746 46.3457 66.0259 46.4971 cv
66.0776 46.6484 66.2007 46.7568 66.3037 46.7393 cv
cp
level3{
gsave
clp
[.0817943 .243714 .216171 -.0375586 66.2114 46.4668 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0817943 .243714 .216171 -.0375586 66.2114 46.4668 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.877 46.71 mo
64.8286 46.8262 65.0479 46.9746 65.3657 47.0439 cv
65.6851 47.1123 65.9824 47.0742 66.0308 46.958 cv
66.0791 46.8428 65.8599 46.6934 65.541 46.625 cv
65.2236 46.5566 64.9253 46.5947 64.877 46.71 cv
cp
level3{
gsave
clp
[-.51219 -.110113 -.102605 .244417 65.4551 46.834 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.51219 -.110113 -.102605 .244417 65.4551 46.834 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.5073 46.4805 mo
66.5239 46.5537 66.7729 46.5879 67.0649 46.5537 cv
67.3555 46.5215 67.5786 46.4355 67.5625 46.3623 cv
67.5469 46.2881 67.2969 46.2549 67.0059 46.2881 cv
66.7144 46.3203 66.4907 46.4072 66.5073 46.4805 cv
cp
level3{
gsave
clp
[-.468153 .0524798 .0341535 .15494 67.0347 46.4209 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.468153 .0524798 .0341535 .15494 67.0347 46.4209 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.0757 46.5498 mo
68.0688 46.6563 68.3359 46.752 68.6719 46.7617 cv
69.0073 46.7725 69.2852 46.6953 69.2915 46.5879 cv
69.2983 46.4814 69.0317 46.3867 68.6958 46.376 cv
68.3599 46.3662 68.0825 46.4434 68.0757 46.5498 cv
cp
level3{
gsave
clp
[-.540138 -.0175045 -.0141703 .225058 68.6826 46.5684 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.540138 -.0175045 -.0141703 .225058 68.6826 46.5684 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.353 46.3965 mo
66.3164 46.4795 66.5308 46.5996 66.8296 46.667 cv
67.1289 46.7344 67.4009 46.7217 67.436 46.6406 cv
67.4717 46.5576 67.2583 46.4375 66.959 46.3701 cv
66.6602 46.3037 66.3877 46.3154 66.353 46.3965 cv
cp
level3{
gsave
clp
[-.482184 -.107802 -.0752107 .172985 66.8945 46.5186 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.482184 -.107802 -.0752107 .172985 66.8945 46.5186 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.314 46.5381 mo
67.3076 46.6309 67.5317 46.7119 67.814 46.7217 cv
68.0952 46.7305 68.3276 46.6631 68.3345 46.5713 cv
68.3389 46.4795 68.1157 46.3975 67.834 46.3896 cv
67.5522 46.3799 67.3188 46.4473 67.314 46.5381 cv
cp
level3{
gsave
clp
[-.4532 -.0141886 -.0125194 .193633 67.8242 46.5566 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.4532 -.0141886 -.0125194 .193633 67.8242 46.5566 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.7285 46.5205 mo
67.7285 46.6084 67.9189 46.6787 68.1543 46.6787 cv
68.3896 46.6787 68.5801 46.6084 68.5801 46.5205 cv
68.5801 46.4336 68.3896 46.3623 68.1543 46.3623 cv
67.9189 46.3623 67.7285 46.4336 67.7285 46.5205 cv
cp
level3{
gsave
clp
[-.378776 0 0 .184382 68.1528 46.5195 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.378776 0 0 .184382 68.1528 46.5195 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.0562 46.5439 mo
69.0562 46.6318 69.2466 46.7031 69.4819 46.7031 cv
69.7173 46.7031 69.9077 46.6318 69.9077 46.5439 cv
69.9077 46.457 69.7173 46.3867 69.4819 46.3867 cv
69.2466 46.3867 69.0562 46.457 69.0562 46.5439 cv
cp
level3{
gsave
clp
[-.378788 0 0 .184388 69.4805 46.5439 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.378788 0 0 .184388 69.4805 46.5439 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.6353 46.6436 mo
68.6768 46.7119 68.9297 46.7002 69.2007 46.6162 cv
69.4712 46.5332 69.6582 46.4102 69.6172 46.3418 cv
69.5757 46.2725 69.3232 46.2852 69.0522 46.3682 cv
68.7813 46.4521 68.5947 46.5752 68.6353 46.6436 cv
cp
level3{
gsave
clp
[-.436652 .134419 .0868294 .144437 69.124 46.4932 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.436652 .134419 .0868294 .144437 69.124 46.4932 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.8374 46.3633 mo
68.8789 46.4326 69.1318 46.4199 69.4023 46.3359 cv
69.6733 46.2529 69.8594 46.1299 69.8184 46.0605 cv
69.7778 45.9932 69.5249 46.0049 69.2544 46.0879 cv
68.9824 46.1719 68.7964 46.2959 68.8374 46.3633 cv
cp
level3{
gsave
clp
[-.43641 .134344 .0867812 .144357 69.3257 46.2129 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.43641 .134344 .0867812 .144357 69.3257 46.2129 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
65.5669 46.6563 mo
65.5601 46.7627 65.8262 46.8574 66.1631 46.8691 cv
66.499 46.8789 66.7759 46.8018 66.7827 46.6953 cv
66.7896 46.5879 66.5225 46.4932 66.1855 46.4824 cv
65.8506 46.4717 65.5728 46.5488 65.5669 46.6563 cv
cp
level3{
gsave
clp
[-.540553 -.0175179 -.0141812 .22523 66.1738 46.6748 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.540553 -.0175179 -.0141812 .22523 66.1738 46.6748 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.1572 46.3398 mo
69.1216 46.4229 69.335 46.543 69.6348 46.6104 cv
69.9341 46.6777 70.2061 46.665 70.2417 46.583 cv
70.2769 46.501 70.063 46.3799 69.7642 46.3135 cv
69.4644 46.2461 69.1929 46.2588 69.1572 46.3398 cv
cp
level3{
gsave
clp
[-.482425 -.107856 -.0752483 .173071 69.6992 46.4619 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.482425 -.107856 -.0752483 .173071 69.6992 46.4619 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.9624 46.8291 mo
69 46.8584 69.0962 46.8369 69.1787 46.7822 cv
69.2593 46.7275 69.2949 46.6592 69.2573 46.6309 cv
69.2192 46.6016 69.1226 46.623 69.041 46.6787 cv
68.9604 46.7324 68.9243 46.8008 68.9624 46.8291 cv
cp
level3{
gsave
clp
[-.130859 .0883503 .0800154 .0608451 69.1108 46.7305 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.130859 .0883503 .0800154 .0608451 69.1108 46.7305 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.458 46.5908 mo
67.4521 46.6826 67.6763 46.7646 67.9585 46.7734 cv
68.2388 46.7822 68.4727 46.7148 68.478 46.623 cv
68.4839 46.5313 68.2593 46.4502 67.9785 46.4414 cv
67.6963 46.4326 67.4634 46.499 67.458 46.5908 cv
cp
level3{
gsave
clp
[-.453029 -.0141832 -.0125146 .19356 67.9678 46.6084 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.453029 -.0141832 -.0125146 .19356 67.9678 46.6084 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.1274 46.501 mo
67.1274 46.5889 67.3184 46.6602 67.5537 46.6602 cv
67.7881 46.6602 67.9795 46.5889 67.9795 46.501 cv
67.9795 46.4141 67.7881 46.3428 67.5537 46.3428 cv
67.3184 46.3428 67.1274 46.4141 67.1274 46.501 cv
cp
level3{
gsave
clp
[-.379365 0 0 .184669 67.5522 46.501 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.379365 0 0 .184669 67.5522 46.501 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.2075 46.7705 mo
69.2241 46.8438 69.4727 46.877 69.7646 46.8438 cv
70.0562 46.8115 70.2788 46.7256 70.2627 46.6514 cv
70.2461 46.5771 69.998 46.5439 69.7061 46.5771 cv
69.4146 46.6104 69.1914 46.6963 69.2075 46.7705 cv
cp
level3{
gsave
clp
[-.468852 .0525582 .0342045 .155172 69.7354 46.7109 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.468852 .0525582 .0342045 .155172 69.7354 46.7109 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
65.6362 47.293 mo
65.6362 47.3828 65.8174 47.4541 66.0405 47.4541 cv
66.2637 47.4541 66.4443 47.3828 66.4443 47.293 cv
66.4443 47.2041 66.2637 47.1318 66.0405 47.1318 cv
65.8174 47.1318 65.6362 47.2041 65.6362 47.293 cv
cp
level3{
gsave
clp
[-.359064 0 0 .187637 66.04 47.293 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.359064 0 0 .187637 66.04 47.293 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.6353 46.5713 mo
66.6353 46.6602 66.8149 46.7324 67.0391 46.7324 cv
67.2622 46.7324 67.4424 46.6602 67.4424 46.5713 cv
67.4424 46.4834 67.2622 46.4102 67.0391 46.4102 cv
66.8149 46.4102 66.6353 46.4834 66.6353 46.5713 cv
cp
level3{
gsave
clp
[-.358743 0 0 .187469 67.0386 46.5713 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.358743 0 0 .187469 67.0386 46.5713 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.0801 46.4004 mo
69.0801 46.4834 69.2051 46.5508 69.3584 46.5508 cv
69.5132 46.5508 69.6387 46.4834 69.6387 46.4004 cv
69.6387 46.3184 69.5132 46.251 69.3584 46.251 cv
69.2051 46.251 69.0801 46.3184 69.0801 46.4004 cv
cp
level3{
gsave
clp
[-.248566 0 0 .174555 69.3594 46.3994 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248566 0 0 .174555 69.3594 46.3994 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.4819 46.3408 mo
68.5127 46.4434 68.811 46.4805 69.1499 46.4268 cv
69.4873 46.3721 69.7363 46.2441 69.7051 46.1416 cv
69.6733 46.04 69.3755 46.002 69.0371 46.0566 cv
68.6987 46.1113 68.4507 46.2383 68.4819 46.3408 cv
cp
level3{
gsave
clp
[-.544422 .0887644 .0650939 .215402 69.0952 46.2432 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.544422 .0887644 .0650939 .215402 69.0952 46.2432 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.9053 46.5723 mo
66.9614 46.4814 66.7979 46.3408 66.5415 46.2588 cv
66.2856 46.1748 66.0337 46.1816 65.9785 46.2715 cv
65.9238 46.3623 66.0864 46.5039 66.3433 46.5869 cv
66.5986 46.6699 66.8506 46.6641 66.9053 46.5723 cv
cp
level3{
gsave
clp
[.411805 .133718 .115968 -.191702 66.439 46.4219 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.411805 .133718 .115968 -.191702 66.439 46.4219 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.2231 46.2188 mo
67.2563 46.1221 67.062 46.0039 66.79 45.9561 cv
66.5186 45.9063 66.271 45.9443 66.2388 46.041 cv
66.207 46.1377 66.4004 46.2549 66.6729 46.3047 cv
66.9443 46.3535 67.1904 46.3154 67.2231 46.2188 cv
cp
level3{
gsave
clp
[.437786 .0792747 .0686259 -.203511 66.7305 46.1309 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.437786 .0792747 .0686259 -.203511 66.7305 46.1309 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.9023 46.0537 mo
66.8535 46.1719 67.0112 46.3115 67.2539 46.3643 cv
67.4961 46.417 67.7319 46.3652 67.7803 46.2461 cv
67.8296 46.1279 67.6724 45.9893 67.4297 45.9355 cv
67.1875 45.8828 66.9512 45.9346 66.9023 46.0537 cv
cp
level3{
gsave
clp
[-.391251 -.0853639 -.103148 .250164 67.3403 46.1494 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.391251 -.0853639 -.103148 .250164 67.3403 46.1494 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.1147 46.2842 mo
67.1382 46.4102 67.4385 46.4854 67.7871 46.4512 cv
68.1367 46.418 68.4009 46.2891 68.3789 46.1631 cv
68.356 46.0371 68.0552 45.9619 67.7056 45.9951 cv
67.3569 46.0293 67.0923 46.1582 67.1147 46.2842 cv
cp
level3{
gsave
clp
[-.561879 .0532306 .0473161 .266153 67.7466 46.2227 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.561879 .0532306 .0473161 .266153 67.7466 46.2227 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.085 46.4873 mo
70.1401 46.3965 69.9775 46.2549 69.7217 46.1719 cv
69.4658 46.0889 69.2134 46.0957 69.1572 46.1855 cv
69.103 46.2773 69.2661 46.418 69.522 46.5 cv
69.7778 46.584 70.0303 46.5771 70.085 46.4873 cv
cp
level3{
gsave
clp
[.412403 .133913 .116137 -.191981 69.6187 46.335 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.412403 .133913 .116137 -.191981 69.6187 46.335 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.0508 46.1816 mo
68.0015 46.2988 68.1587 46.4395 68.4019 46.4922 cv
68.6445 46.5459 68.8804 46.4932 68.9287 46.374 cv
68.9775 46.2559 68.8198 46.1172 68.5776 46.0635 cv
68.335 46.0098 68.0991 46.0635 68.0508 46.1816 cv
cp
level3{
gsave
clp
[-.39126 -.0853659 -.10315 .25017 68.4893 46.2773 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.39126 -.0853659 -.10315 .25017 68.4893 46.2773 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.4795 46.168 mo
68.4795 46.2734 68.6919 46.3594 68.9536 46.3594 cv
69.2163 46.3594 69.4282 46.2734 69.4282 46.168 cv
69.4282 46.0615 69.2163 45.9756 68.9536 45.9756 cv
68.6919 45.9756 68.4795 46.0615 68.4795 46.168 cv
cp
level3{
gsave
clp
[-.42169 0 0 .223875 68.9536 46.167 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.42169 0 0 .223875 68.9536 46.167 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.6245 46.4092 mo
66.6245 46.4922 66.7495 46.5586 66.9028 46.5586 cv
67.0571 46.5586 67.1821 46.4922 67.1821 46.4092 cv
67.1821 46.3262 67.0571 46.2588 66.9028 46.2588 cv
66.7495 46.2588 66.6245 46.3262 66.6245 46.4092 cv
cp
level3{
gsave
clp
[-.248298 0 0 .174366 66.9033 46.4072 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248298 0 0 .174366 66.9033 46.4072 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.4458 46.3682 mo
69.4458 46.4512 69.5713 46.5176 69.7246 46.5176 cv
69.8789 46.5176 70.0049 46.4512 70.0049 46.3682 cv
70.0049 46.2852 69.8789 46.2188 69.7246 46.2188 cv
69.5713 46.2188 69.4458 46.2852 69.4458 46.3682 cv
cp
level3{
gsave
clp
[-.248402 0 0 .17444 69.7251 46.3672 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248402 0 0 .17444 69.7251 46.3672 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.6426 46.5039 mo
67.4429 46.0215 67.1157 45.3262 66.6343 44.5977 cv
65.7339 43.2334 64.7598 42.8965 64.7598 42.8965 cv
64.7598 42.8965 65.7183 42.9678 66.8101 44.5781 cv
67.3999 45.4482 67.71 46.0938 67.8711 46.5039 cv
67.6426 46.5039 li
cp
level3{
gsave
clp
[2.34032 4.61543 4.11758 -2.37756 65.2681 42.6025 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.34032 4.61543 4.11758 -2.37756 65.2681 42.6025 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
68.0962 46.3867 mo
67.8691 46.1221 67.5786 45.8174 67.2183 45.5029 cv
66.1328 44.5576 64.9751 44.3174 64.9751 44.3174 cv
64.9751 44.3174 66.1099 44.376 67.4258 45.4922 cv
67.8408 45.8438 68.1421 46.1436 68.3599 46.3867 cv
68.0962 46.3867 li
cp
level3{
gsave
clp
[1.98504 4.07994 3.36791 -2.04188 65.8936 43.7607 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.98504 4.07994 3.36791 -2.04188 65.8936 43.7607 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
69.4897 46.3047 mo
69.4761 46.2607 69.46 46.2158 69.4409 46.1699 cv
69.1831 45.5381 68.2495 45.0771 68.2495 45.0771 cv
68.2495 45.0771 69.3169 45.4795 69.6558 46.2373 cv
69.6655 46.2598 69.6748 46.2822 69.6846 46.3047 cv
69.4897 46.3047 li
cp
level3{
gsave
clp
[-.040282 1.48478 2.2945 .906149 68.9761 45.3643 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.040282 1.48478 2.2945 .906149 68.9761 45.3643 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
67.9766 46.4629 mo
68.0356 46.2012 68.1328 45.8994 68.2925 45.5684 cv
68.8262 44.4658 70.0151 43.8457 70.0151 43.8457 cv
70.0151 43.8457 68.7056 44.3232 68.0347 45.6387 cv
67.8711 45.9619 67.7622 46.2344 67.6934 46.4629 cv
67.9766 46.4629 li
cp
level3{
gsave
clp
[-.283031 3.23306 -3.09005 .555966 68.9526 44.0371 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.283031 3.23306 -3.09005 .555966 68.9526 44.0371 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
69.0181 46.3047 mo
68.2856 46.1641 67.6572 46.1436 67.6572 46.1436 cv
67.6572 46.1436 68.415 46.1191 69.3359 46.3047 cv
69.0181 46.3047 li
cp
level3{
gsave
clp
[1.77634 2.08052 4.19264 -1.61293 68.2373 45.9209 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.77634 2.08052 4.19264 -1.61293 68.2373 45.9209 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
67.9214 46.168 mo
67.2939 46.0635 66.7935 46.0479 66.7935 46.0479 cv
66.7935 46.0479 67.4326 46.0273 68.2495 46.168 cv
67.9214 46.168 li
cp
level3{
gsave
clp
[1.79239 2.09931 4.23051 -1.62751 67.3032 45.8525 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.79239 2.09931 4.23051 -1.62751 67.3032 45.8525 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
67.5537 46.0703 mo
67.3833 45.8594 67.1577 45.624 66.8613 45.3779 cv
65.8379 44.5254 64.3423 44.2168 64.3423 44.2168 cv
64.3423 44.2168 65.9004 44.3789 67.1577 45.3887 cv
67.4849 45.6523 67.7217 45.8789 67.8945 46.0703 cv
67.5537 46.0703 li
cp
level3{
gsave
clp
[1.19008 3.36047 4.14497 -.953252 65.6812 43.9092 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.19008 3.36047 4.14497 -.953252 65.6812 43.9092 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
67.458 45.8662 mo
66.3398 45.7441 65.3359 45.7539 65.3359 45.7539 cv
65.3359 45.7539 66.6177 45.6836 68.0688 45.8662 cv
67.458 45.8662 li
cp
level3{
gsave
clp
[2.66763 2.15842 7.0092 -2.28757 66.2607 45.4531 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.66763 2.15842 7.0092 -2.28757 66.2607 45.4531 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
67.7651 46.3428 mo
67.6245 46.2959 67.4731 46.248 67.312 46.2012 cv
65.561 45.6865 63.3501 45.6641 63.3501 45.6641 cv
63.3501 45.6641 65.5947 45.5645 67.7329 46.168 cv
67.9482 46.2285 68.1436 46.2871 68.3193 46.3428 cv
67.7651 46.3428 li
cp
level3{
gsave
clp
[2.93982 2.92023 7.32595 -2.59615 64.9307 45.1045 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.93982 2.92023 7.32595 -2.59615 64.9307 45.1045 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
68.1421 46.4199 mo
68.3022 46.2607 68.4985 46.0938 68.7373 45.9287 cv
69.9023 45.1201 71.7139 45.0635 71.7139 45.0635 cv
71.7139 45.0635 69.8071 44.9336 68.3721 45.8809 cv
68.0757 46.0771 67.8462 46.2578 67.668 46.4199 cv
68.1421 46.4199 li
cp
level3{
gsave
clp
[-1.56394 4.25928 -6.2921 -3.58881 70.2466 44.2275 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.56394 4.25928 -6.2921 -3.58881 70.2466 44.2275 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
68.7686 46.293 mo
68.853 46.2363 68.9473 46.1758 69.0532 46.1143 cv
69.6392 45.7676 70.2588 45.6289 70.2588 45.6289 cv
70.2588 45.6289 69.6523 45.7109 68.9424 46.1211 cv
68.8345 46.1846 68.7412 46.2412 68.6597 46.293 cv
68.7686 46.293 li
cp
level3{
gsave
clp
[-.943112 1.29379 -1.574 -.258903 69.7598 45.5469 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.943112 1.29379 -1.574 -.258903 69.7598 45.5469 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
68.5112 46.1709 mo
68.3545 46.084 68.1685 45.9932 67.9517 45.9014 cv
66.9658 45.4854 65.7817 45.4219 65.7817 45.4219 cv
65.7817 45.4219 66.9731 45.3955 68.1724 45.8857 cv
68.4297 45.9902 68.6353 46.085 68.8003 46.1709 cv
68.5112 46.1709 li
cp
level3{
gsave
clp
[1.61149 2.15635 3.59895 -1.50034 66.7192 45.0313 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.61149 2.15635 3.59895 -1.50034 66.7192 45.0313 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
69.1211 46.4033 mo
69.2041 46.2588 69.3237 46.0977 69.4956 45.9307 cv
70.0425 45.4023 70.9746 45.2764 70.9746 45.2764 cv
70.9746 45.2764 69.9805 45.2988 69.3042 45.9219 cv
69.1006 46.1094 68.9683 46.2686 68.8833 46.4033 cv
69.1211 46.4033 li
cp
level3{
gsave
clp
[-.436669 3.22859 -2.19527 -1.71578 70.0981 44.5908 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.436669 3.22859 -2.19527 -1.71578 70.0981 44.5908 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
68.0728 46.3047 mo
68.019 46.2695 67.9629 46.2354 67.9038 46.2012 cv
67.0264 45.6846 65.9512 45.5547 65.9512 45.5547 cv
65.9512 45.5547 67.0361 45.584 68.106 46.1943 cv
68.1724 46.2314 68.2344 46.2686 68.2935 46.3047 cv
68.0728 46.3047 li
cp
level3{
gsave
clp
[1.3345 2.43999 3.10493 -1.24349 66.7437 45.2373 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.3345 2.43999 3.10493 -1.24349 66.7437 45.2373 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
68.6914 46.3047 mo
68.7104 46.2256 68.7388 46.1445 68.7793 46.0596 cv
69.0664 45.4512 70.0908 45.1475 70.0908 45.1475 cv
70.0908 45.1475 68.9204 45.3652 68.5439 46.0879 cv
68.5039 46.165 68.4722 46.2373 68.4468 46.3047 cv
68.6914 46.3047 li
cp
level3{
gsave
clp
[.0473429 1.93885 -3.13241 .0514509 69.2554 45.1611 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0473429 1.93885 -3.13241 .0514509 69.2554 45.1611 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
67.73 46.4102 mo
67.8408 46.3125 67.9673 46.2109 68.1108 46.1084 cv
69.2241 45.3154 71.061 45.0684 71.061 45.0684 cv
71.061 45.0684 69.1104 45.1709 67.7358 46.1084 cv
67.5801 46.2148 67.4438 46.3154 67.3257 46.4102 cv
67.73 46.4102 li
cp
level3{
gsave
clp
[-1.20015 3.29546 -5.58006 -1.27973 69.5625 44.7246 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.20015 3.29546 -5.58006 -1.27973 69.5625 44.7246 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
67.1104 46.3457 mo
67.1519 46.248 67.2095 46.1436 67.2886 46.0313 cv
67.7095 45.4424 68.7593 45.0996 68.7593 45.0996 cv
68.7593 45.0996 67.5908 45.3691 67.0571 46.0723 cv
66.9814 46.1729 66.9219 46.2637 66.8755 46.3457 cv
67.1104 46.3457 li
cp
level3{
gsave
clp
[-.160973 1.67928 -2.75286 .375027 67.8652 45.2217 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.160973 1.67928 -2.75286 .375027 67.8652 45.2217 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
68.4468 46.4258 mo
68.647 46.1836 68.9751 45.8359 69.4556 45.4707 cv
70.356 44.7871 71.3311 44.6191 71.3311 44.6191 cv
71.3311 44.6191 70.3716 44.6543 69.2798 45.46 cv
68.6899 45.8965 68.3799 46.2207 68.2192 46.4258 cv
68.4468 46.4258 li
cp
level3{
gsave
clp
[-1.56054 3.07759 -2.74563 -1.58537 70.4819 44.1289 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.56054 3.07759 -2.74563 -1.58537 70.4819 44.1289 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
68.2095 46.5059 mo
68.3008 46.3223 68.4214 46.1152 68.5796 45.8994 cv
69.1265 45.1504 69.9263 44.8809 69.9263 44.8809 cv
69.9263 44.8809 69.0923 45.0225 68.4214 45.9092 cv
68.2466 46.1396 68.1201 46.3389 68.0278 46.5059 cv
68.2095 46.5059 li
cp
level3{
gsave
clp
[-.918744 2.59429 -3.19992 -.735913 69.3145 44.7402 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.918744 2.59429 -3.19992 -.735913 69.3145 44.7402 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
69.2314 46.3594 mo
69.1899 46.2617 69.1323 46.1553 69.0532 46.0439 cv
68.6333 45.4551 67.5825 45.1123 67.5825 45.1123 cv
67.5825 45.1123 68.751 45.3818 69.2847 46.084 cv
69.3608 46.1855 69.4199 46.2764 69.4668 46.3594 cv
69.2314 46.3594 li
cp
level3{
gsave
clp
[.161128 1.68091 2.75552 .375389 68.4766 45.2344 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.161128 1.68091 2.75552 .375389 68.4766 45.2344 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
67.8042 46.5186 mo
67.8408 46.3271 67.918 46.0898 68.0693 45.8242 cv
68.4658 45.1279 69.3511 44.7373 69.3511 44.7373 cv
69.3511 44.7373 68.3765 45.0391 67.8779 45.8682 cv
67.7163 46.1377 67.6274 46.3525 67.5825 46.5186 cv
67.8042 46.5186 li
cp
level3{
gsave
clp
[-1.76855 0 0 1.76855 69.3516 45.6279 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.76855 0 0 1.76855 69.3516 45.6279 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
67.2031 46.4766 mo
67.0664 46.3984 66.9106 46.3174 66.7334 46.2344 cv
65.519 45.6621 63.7534 45.4531 63.7534 45.4531 cv
63.7534 45.4531 65.5928 45.5654 67.0835 46.2422 cv
67.2676 46.3262 67.4272 46.4033 67.5664 46.4766 cv
67.2031 46.4766 li
cp
level3{
gsave
clp
[1.42215 2.25523 4.89423 -.618986 65.2197 45.2676 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.42215 2.25523 4.89423 -.618986 65.2197 45.2676 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
66.8105 46.5234 mo
66.7319 46.2148 66.6187 45.8438 66.4536 45.4512 cv
66.0161 44.4053 65.3813 44.0342 65.3813 44.0342 cv
65.3813 44.0342 66.042 44.2266 66.5791 45.4639 cv
66.7661 45.8955 66.8848 46.248 66.9604 46.5234 cv
66.8105 46.5234 li
cp
level3{
gsave
clp
[.514538 4.13366 1.75594 -1.21512 65.9648 43.6299 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.514538 4.13366 1.75594 -1.21512 65.9648 43.6299 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
69.145 46.9131 mo
69.145 46.9951 69.271 47.0615 69.4243 47.0615 cv
69.5786 47.0615 69.7036 46.9951 69.7036 46.9131 cv
69.7036 46.8291 69.5786 46.7627 69.4243 46.7627 cv
69.271 46.7627 69.145 46.8291 69.145 46.9131 cv
cp
level3{
gsave
clp
[-.248294 0 0 .174364 69.4243 46.9111 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248294 0 0 .174364 69.4243 46.9111 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.6211 47.1523 mo
68.6211 47.2354 68.7456 47.3027 68.8999 47.3027 cv
69.0547 47.3027 69.1792 47.2354 69.1792 47.1523 cv
69.1792 47.0703 69.0547 47.0029 68.8999 47.0029 cv
68.7456 47.0029 68.6211 47.0703 68.6211 47.1523 cv
cp
level3{
gsave
clp
[-.248435 0 0 .174463 68.8999 47.1514 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248435 0 0 .174463 68.8999 47.1514 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.7373 46.3965 mo
68.7373 46.4785 68.8623 46.5459 69.0166 46.5459 cv
69.1709 46.5459 69.2959 46.4785 69.2959 46.3965 cv
69.2959 46.3125 69.1709 46.2461 69.0166 46.2461 cv
68.8623 46.2461 68.7373 46.3125 68.7373 46.3965 cv
cp
level3{
gsave
clp
[-.248598 0 0 .174577 69.0161 46.3945 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248598 0 0 .174577 69.0161 46.3945 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.4917 46.8223 mo
68.4917 46.9043 68.6167 46.9717 68.7715 46.9717 cv
68.9253 46.9717 69.0498 46.9043 69.0498 46.8223 cv
69.0498 46.7393 68.9253 46.6719 68.7715 46.6719 cv
68.6167 46.6719 68.4917 46.7393 68.4917 46.8223 cv
cp
level3{
gsave
clp
[-.248468 0 0 .174486 68.7705 46.8203 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248468 0 0 .174486 68.7705 46.8203 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.8643 46.8223 mo
67.8643 46.9043 67.9893 46.9717 68.1436 46.9717 cv
68.2979 46.9717 68.4229 46.9043 68.4229 46.8223 cv
68.4229 46.7393 68.2979 46.6719 68.1436 46.6719 cv
67.9893 46.6719 67.8643 46.7393 67.8643 46.8223 cv
cp
level3{
gsave
clp
[-.248578 0 0 .174563 68.1436 46.8203 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248578 0 0 .174563 68.1436 46.8203 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.5967 46.9902 mo
67.5967 47.0732 67.7222 47.1396 67.876 47.1396 cv
68.0303 47.1396 68.1548 47.0732 68.1548 46.9902 cv
68.1548 46.9072 68.0303 46.8408 67.876 46.8408 cv
67.7222 46.8408 67.5967 46.9072 67.5967 46.9902 cv
cp
level3{
gsave
clp
[-.24816 0 0 .174269 67.8745 46.9893 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.24816 0 0 .174269 67.8745 46.9893 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.3779 46.5723 mo
67.4326 46.4814 67.269 46.3408 67.0142 46.2588 cv
66.7583 46.1748 66.5059 46.1816 66.4507 46.2715 cv
66.396 46.3623 66.5586 46.5039 66.8145 46.5869 cv
67.0708 46.6699 67.3218 46.6641 67.3779 46.5723 cv
cp
level3{
gsave
clp
[.412101 .133814 .116051 -.19184 66.9111 46.4219 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.412101 .133814 .116051 -.19184 66.9111 46.4219 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.5459 46.6016 mo
67.5459 46.7012 67.7334 46.7813 67.9658 46.7813 cv
68.1982 46.7813 68.3872 46.7012 68.3872 46.6016 cv
68.3872 46.5029 68.1982 46.4229 67.9658 46.4229 cv
67.7334 46.4229 67.5459 46.5029 67.5459 46.6016 cv
cp
level3{
gsave
clp
[-.373715 0 0 .209328 67.9658 46.6025 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.373715 0 0 .209328 67.9658 46.6025 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.3491 46.79 mo
67.4189 46.7734 67.4492 46.6465 67.4136 46.5059 cv
67.3789 46.3652 67.2925 46.2646 67.2207 46.2813 cv
67.1504 46.2979 67.1216 46.4248 67.1572 46.5654 cv
67.1929 46.7061 67.2783 46.8066 67.3491 46.79 cv
cp
level3{
gsave
clp
[.0569712 .226698 .14955 -.0344201 67.2832 46.5361 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0569712 .226698 .14955 -.0344201 67.2832 46.5361 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.3628 46.7627 mo
66.3296 46.8701 66.481 47.0098 66.7007 47.0732 cv
66.9209 47.1367 67.127 47.1016 67.1602 46.9941 cv
67.1934 46.8867 67.042 46.748 66.8218 46.6836 cv
66.6021 46.6201 66.396 46.6553 66.3628 46.7627 cv
cp
level3{
gsave
clp
[-.35417 -.103053 -.0710709 .227427 66.7617 46.8789 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.35417 -.103053 -.0710709 .227427 66.7617 46.8789 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.4897 46.5508 mo
67.5005 46.6182 67.6729 46.6484 67.8745 46.6182 cv
68.0757 46.5879 68.23 46.5078 68.2188 46.4395 cv
68.208 46.3711 68.0356 46.3408 67.834 46.3711 cv
67.6328 46.4014 67.478 46.4814 67.4897 46.5508 cv
cp
level3{
gsave
clp
[-.323829 .0484562 .0236372 .144187 67.854 46.4961 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.323829 .0484562 .0236372 .144187 67.854 46.4961 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.5732 46.6143 mo
68.5688 46.7129 68.7534 46.8018 68.9858 46.8115 cv
69.2178 46.8213 69.4102 46.749 69.4141 46.6504 cv
69.4185 46.5508 69.2344 46.4629 69.0024 46.4531 cv
68.77 46.4434 68.5776 46.5146 68.5732 46.6143 cv
cp
level3{
gsave
clp
[-.373135 -.0153505 -.00944645 .209003 68.9951 46.6318 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.373135 -.0153505 -.00944645 .209003 68.9951 46.6318 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.3823 46.4727 mo
67.3574 46.5488 67.5054 46.6602 67.7124 46.7227 cv
67.9194 46.7852 68.1074 46.7734 68.1313 46.6982 cv
68.1558 46.6211 68.0083 46.5098 67.8018 46.4473 cv
67.5952 46.3857 67.4067 46.3965 67.3823 46.4727 cv
cp
level3{
gsave
clp
[-.332372 -.100539 -.0520439 .160863 67.7568 46.5859 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.332372 -.100539 -.0520439 .160863 67.7568 46.5859 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.0469 46.6045 mo
68.043 46.6885 68.1973 46.7656 68.3926 46.7734 cv
68.5869 46.7822 68.7476 46.7197 68.752 46.6338 cv
68.7559 46.5488 68.6006 46.4736 68.4067 46.4648 cv
68.2119 46.457 68.0508 46.5186 68.0469 46.6045 cv
cp
level3{
gsave
clp
[-.313589 -.0130169 -.00828347 .17987 68.3994 46.6191 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.313589 -.0130169 -.00828347 .17987 68.3994 46.6191 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.3335 46.5879 mo
68.3335 46.668 68.4644 46.7344 68.6279 46.7344 cv
68.7896 46.7344 68.9229 46.668 68.9229 46.5879 cv
68.9229 46.5059 68.7896 46.4395 68.6279 46.4395 cv
68.4644 46.4395 68.3335 46.5059 68.3335 46.5879 cv
cp
level3{
gsave
clp
[-.262188 0 0 .172024 68.6284 46.5879 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.262188 0 0 .172024 68.6284 46.5879 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.251 46.6094 mo
69.251 46.6904 69.3828 46.7559 69.5454 46.7559 cv
69.708 46.7559 69.8398 46.6904 69.8398 46.6094 cv
69.8398 46.5273 69.708 46.4619 69.5454 46.4619 cv
69.3828 46.4619 69.251 46.5273 69.251 46.6094 cv
cp
level3{
gsave
clp
[-.261667 0 0 .171682 69.5454 46.6104 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.261667 0 0 .171682 69.5454 46.6104 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.9604 46.7021 mo
68.9888 46.7656 69.1636 46.7539 69.3511 46.6758 cv
69.5386 46.5986 69.6675 46.4834 69.6387 46.4209 cv
69.6104 46.3574 69.436 46.3682 69.248 46.4463 cv
69.0615 46.5234 68.9321 46.6377 68.9604 46.7021 cv
cp
level3{
gsave
clp
[-.301498 .125329 .0602996 .133605 69.2969 46.5596 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.301498 .125329 .0602996 .133605 69.2969 46.5596 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.1001 46.4414 mo
69.1284 46.5049 69.3027 46.4941 69.4902 46.416 cv
69.6777 46.3389 69.8066 46.2246 69.7783 46.1611 cv
69.7495 46.0967 69.5757 46.1084 69.3882 46.1855 cv
69.2007 46.2637 69.0718 46.3779 69.1001 46.4414 cv
cp
level3{
gsave
clp
[-.301653 .125393 .0603307 .133674 69.4365 46.2988 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.301653 .125393 .0603307 .133674 69.4365 46.2988 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.8394 46.7129 mo
66.835 46.8125 67.0195 46.9004 67.2515 46.9102 cv
67.4839 46.9199 67.6753 46.8477 67.6797 46.749 cv
67.6846 46.6504 67.5 46.5615 67.2676 46.5508 cv
67.0352 46.541 66.8438 46.6143 66.8394 46.7129 cv
cp
level3{
gsave
clp
[-.37339 -.015361 -.00945291 .209146 67.2607 46.7305 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.37339 -.015361 -.00945291 .209146 67.2607 46.7305 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.3218 46.4199 mo
69.2964 46.4961 69.4438 46.6074 69.6514 46.6699 cv
69.8579 46.7324 70.0454 46.7217 70.0703 46.6445 cv
70.0957 46.5693 69.9473 46.457 69.7407 46.3945 cv
69.5342 46.332 69.3457 46.3438 69.3218 46.4199 cv
cp
level3{
gsave
clp
[-.332263 -.100507 -.052027 .160811 69.6958 46.5332 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.332263 -.100507 -.052027 .160811 69.6958 46.5332 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.186 46.874 mo
69.2124 46.9004 69.2793 46.8809 69.335 46.8301 cv
69.3921 46.7793 69.416 46.7158 69.3901 46.6895 cv
69.3638 46.6631 69.2974 46.6826 69.2412 46.7334 cv
69.1846 46.7852 69.1597 46.8477 69.186 46.874 cv
cp
level3{
gsave
clp
[-.000837158 .000750181 .000510993 .000521865 774.725 269.666 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.000837158 .000750181 .000510993 .000521865 774.725 269.666 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.1465 46.6523 mo
68.1431 46.7373 68.2974 46.8135 68.4917 46.8223 cv
68.687 46.8301 68.8481 46.7676 68.8516 46.6826 cv
68.8555 46.5977 68.7012 46.5215 68.5059 46.5137 cv
68.3115 46.5049 68.1504 46.5674 68.1465 46.6523 cv
cp
level3{
gsave
clp
[-.313589 -.0130169 -.00828347 .17987 68.499 46.668 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.313589 -.0130169 -.00828347 .17987 68.499 46.668 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.918 46.5693 mo
67.918 46.6504 68.0498 46.7168 68.2124 46.7168 cv
68.375 46.7168 68.5068 46.6504 68.5068 46.5693 cv
68.5068 46.4873 68.375 46.4219 68.2124 46.4219 cv
68.0498 46.4219 67.918 46.4873 67.918 46.5693 cv
cp
level3{
gsave
clp
[-.262027 0 0 .171918 68.2129 46.5703 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.262027 0 0 .171918 68.2129 46.5703 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.3555 46.8193 mo
69.3667 46.8877 69.5396 46.918 69.7407 46.8877 cv
69.9429 46.8564 70.0962 46.7764 70.085 46.709 cv
70.0737 46.6406 69.9019 46.6094 69.6997 46.6396 cv
69.4985 46.6699 69.3442 46.751 69.3555 46.8193 cv
cp
level3{
gsave
clp
[-.324399 .0485415 .0236788 .144441 69.7202 46.7646 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.324399 .0485415 .0236788 .144441 69.7202 46.7646 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.8877 47.3047 mo
66.8877 47.3867 67.0127 47.4541 67.167 47.4541 cv
67.3213 47.4541 67.4463 47.3867 67.4463 47.3047 cv
67.4463 47.2227 67.3213 47.1553 67.167 47.1553 cv
67.0127 47.1553 66.8877 47.2227 66.8877 47.3047 cv
cp
level3{
gsave
clp
[-.248261 0 0 .17434 67.1665 47.3037 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248261 0 0 .17434 67.1665 47.3037 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.5776 46.6348 mo
67.5776 46.7178 67.7026 46.7842 67.8569 46.7842 cv
68.0112 46.7842 68.1362 46.7178 68.1362 46.6348 cv
68.1362 46.5518 68.0112 46.4854 67.8569 46.4854 cv
67.7026 46.4854 67.5776 46.5518 67.5776 46.6348 cv
cp
level3{
gsave
clp
[-.248253 0 0 .174335 67.8569 46.6338 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.248253 0 0 .174335 67.8569 46.6338 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.9302 46.3027 mo
68.9302 46.3926 68.7275 46.4658 68.4771 46.4658 cv
68.2275 46.4658 68.0239 46.3926 68.0239 46.3027 cv
68.0239 46.2119 68.2275 46.1387 68.4771 46.1387 cv
68.7275 46.1387 68.9302 46.2119 68.9302 46.3027 cv
cp
level3{
gsave
clp
[.402676 0 0 .190888 68.4771 46.3018 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402676 0 0 .190888 68.4771 46.3018 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.9009 46.2363 mo
69.8506 46.3486 69.3662 46.3896 68.8179 46.3301 cv
68.269 46.2705 67.8657 46.1309 67.916 46.0195 cv
67.9668 45.9072 68.4517 45.8652 68.9995 45.9258 cv
69.5469 45.9863 69.9512 46.124 69.9009 46.2363 cv
cp
level3{
gsave
clp
[.882631 .0970184 -.106484 .235447 68.9092 46.127 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.882631 .0970184 -.106484 .235447 68.9092 46.127 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.4575 46.4902 mo
72.3672 46.3906 72.6328 46.2363 73.0474 46.1465 cv
73.4619 46.0547 73.8711 46.0625 73.9604 46.1611 cv
74.0498 46.2607 73.7856 46.415 73.3696 46.5059 cv
72.9546 46.5967 72.5464 46.5889 72.4575 46.4902 cv
cp
level3{
gsave
clp
[-.668834 .145605 -.18822 -.209528 73.2095 46.3262 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.668834 .145605 -.18822 -.209528 73.2095 46.3262 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.9424 46.1035 mo
71.8887 45.9971 72.2046 45.8691 72.645 45.8154 cv
73.0854 45.7617 73.4854 45.8037 73.5386 45.9092 cv
73.5913 46.0146 73.2769 46.1426 72.835 46.1973 cv
72.3945 46.251 71.9951 46.208 71.9424 46.1035 cv
cp
level3{
gsave
clp
[-.709268 .0862943 -.111119 -.222237 72.7402 46.0059 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.709268 .0862943 -.111119 -.222237 72.7402 46.0059 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.4619 45.9229 mo
72.5415 46.0518 72.2856 46.2041 71.8921 46.2617 cv
71.499 46.3203 71.1167 46.2627 71.0376 46.1338 cv
70.958 46.0039 71.2134 45.8516 71.6079 45.7939 cv
72.0005 45.7344 72.3833 45.792 72.4619 45.9229 cv
cp
level3{
gsave
clp
[.633153 -.0933191 .166557 .27287 71.75 46.0283 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633153 -.0933191 .166557 .27287 71.75 46.0283 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.1167 46.1748 mo
72.0806 46.3125 71.5928 46.3945 71.0269 46.3574 cv
70.4595 46.3213 70.0313 46.1787 70.0669 46.042 cv
70.104 45.9043 70.5923 45.8223 71.1582 45.8594 cv
71.7251 45.8955 72.1538 46.0371 72.1167 46.1748 cv
cp
level3{
gsave
clp
[.910464 .059121 -.0768574 .290876 71.0903 46.1084 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.910464 .059121 -.0768574 .290876 71.0903 46.1084 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.2993 46.3965 mo
67.21 46.2959 67.4751 46.1426 67.8896 46.0518 cv
68.3047 45.9609 68.7139 45.9688 68.8032 46.0674 cv
68.8926 46.167 68.6279 46.3213 68.2124 46.4111 cv
67.7974 46.5029 67.3887 46.4951 67.2993 46.3965 cv
cp
level3{
gsave
clp
[-.669115 .145666 -.188299 -.209616 68.0508 46.2314 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.669115 .145666 -.188299 -.209616 68.0508 46.2314 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.6001 46.0625 mo
70.6787 46.1914 70.4238 46.3438 70.0303 46.4023 cv
69.6372 46.46 69.2544 46.4033 69.1748 46.2734 cv
69.0962 46.1436 69.3511 45.9922 69.7446 45.9336 cv
70.1387 45.875 70.5215 45.9326 70.6001 46.0625 cv
cp
level3{
gsave
clp
[.633931 -.0934339 .166762 .273205 69.8882 46.1689 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633931 -.0934339 .166762 .273205 69.8882 46.1689 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.9033 46.0469 mo
69.9033 46.1631 69.5591 46.2568 69.1348 46.2568 cv
68.7095 46.2568 68.3662 46.1631 68.3662 46.0469 cv
68.3662 45.9307 68.7095 45.8369 69.1348 45.8369 cv
69.5591 45.8369 69.9033 45.9307 69.9033 46.0469 cv
cp
level3{
gsave
clp
[.684647 0 0 .244009 69.1348 46.0479 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.684647 0 0 .244009 69.1348 46.0479 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.9136 46.3115 mo
72.9136 46.4023 72.7114 46.4746 72.4609 46.4746 cv
72.2109 46.4746 72.0088 46.4023 72.0088 46.3115 cv
72.0088 46.2207 72.2109 46.1475 72.4609 46.1475 cv
72.7114 46.1475 72.9136 46.2207 72.9136 46.3115 cv
cp
level3{
gsave
clp
[.402261 0 0 .190691 72.4609 46.3105 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402261 0 0 .190691 72.4609 46.3105 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.3364 46.2666 mo
68.3364 46.3574 68.1338 46.4297 67.8843 46.4297 cv
67.6338 46.4297 67.4312 46.3574 67.4312 46.2666 cv
67.4312 46.1758 67.6338 46.1035 67.8843 46.1035 cv
68.1338 46.1035 68.3364 46.1758 68.3364 46.2666 cv
cp
level3{
gsave
clp
[.401947 0 0 .190543 67.8838 46.2656 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.401947 0 0 .190543 67.8838 46.2656 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.2612 46.416 mo
71.585 45.8877 72.1167 45.127 72.897 44.3301 cv
74.3579 42.8379 75.938 42.4697 75.938 42.4697 cv
75.938 42.4697 74.3833 42.5479 72.6123 44.3086 cv
71.6548 45.2607 71.1523 45.9668 70.8911 46.416 cv
71.2612 46.416 li
cp
level3{
gsave
clp
[-2.9711 5.85941 -5.22738 -3.01837 74.7598 41.7896 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.9711 5.85941 -5.22738 -3.01837 74.7598 41.7896 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
70.5269 46.2871 mo
70.8936 45.9971 71.3647 45.6641 71.9507 45.3213 cv
73.7109 44.2871 75.5894 44.0234 75.5894 44.0234 cv
75.5894 44.0234 73.748 44.0879 71.6133 45.3086 cv
70.9399 45.6934 70.4512 46.0205 70.0977 46.2871 cv
70.5269 46.2871 li
cp
level3{
gsave
clp
[-2.6939 5.5369 -4.57061 -2.77105 73.8931 42.9951 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.6939 5.5369 -4.57061 -2.77105 73.8931 42.9951 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
68.2661 46.1963 mo
68.2881 46.1494 68.314 46.1006 68.3442 46.0498 cv
68.7627 45.3584 70.2778 44.8555 70.2778 44.8555 cv
70.2778 44.8555 68.5459 45.2949 67.9971 46.123 cv
67.98 46.1475 67.9644 46.1719 67.9492 46.1963 cv
68.2661 46.1963 li
cp
level3{
gsave
clp
[.0324648 1.19664 -1.84922 .730299 69.1069 45.2695 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0324648 1.19664 -1.84922 .730299 69.1069 45.2695 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
70.7202 46.3701 mo
70.6245 46.084 70.4653 45.7529 70.2065 45.3926 cv
69.3428 44.1855 67.4126 43.999 67.4126 43.999 cv
67.4126 43.999 69.5371 44.0303 70.625 45.4688 cv
70.8911 45.8223 71.0669 46.1201 71.1797 46.3701 cv
70.7202 46.3701 li
cp
level3{
gsave
clp
[.229112 2.61715 2.50139 .450053 69.2183 44.2783 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.229112 2.61715 2.50139 .450053 69.2183 44.2783 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
69.0313 46.1963 mo
70.2183 46.043 71.2388 46.0205 71.2388 46.0205 cv
71.2388 46.0205 70.0083 45.9932 68.5142 46.1963 cv
69.0313 46.1963 li
cp
level3{
gsave
clp
[-2.6943 3.15566 -6.35925 -2.44644 70.2686 45.6475 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.6943 3.15566 -6.35925 -2.44644 70.2686 45.6475 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
70.8096 46.0469 mo
71.8271 45.9336 72.6392 45.916 72.6392 45.916 cv
72.6392 45.916 71.6025 45.8936 70.2764 46.0469 cv
70.8096 46.0469 li
cp
level3{
gsave
clp
[-2.73966 3.20878 -6.46631 -2.48763 71.7905 45.5898 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.73966 3.20878 -6.46631 -2.48763 71.7905 45.5898 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
71.4058 45.9395 mo
71.6826 45.7109 72.0488 45.4531 72.5293 45.1836 cv
74.189 44.251 76.6152 43.9141 76.6152 43.9141 cv
76.6152 43.9141 74.0869 44.0918 72.0483 45.1963 cv
71.5176 45.4834 71.1333 45.7314 70.8525 45.9395 cv
71.4058 45.9395 li
cp
level3{
gsave
clp
[-1.49322 4.21645 -5.20078 -1.19607 74.2827 43.3779 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.49322 4.21645 -5.20078 -1.19607 74.2827 43.3779 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
71.561 45.7178 mo
73.375 45.584 75.0024 45.5947 75.0024 45.5947 cv
75.0024 45.5947 72.9243 45.5186 70.5708 45.7178 cv
71.561 45.7178 li
cp
level3{
gsave
clp
[-4.16893 3.37315 -10.9539 -3.57497 73.4775 45.0967 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.16893 3.37315 -10.9539 -3.57497 73.4775 45.0967 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
71.0625 46.2393 mo
71.291 46.1875 71.5361 46.1357 71.7979 46.084 cv
74.6401 45.5205 78.2261 45.4961 78.2261 45.4961 cv
78.2261 45.4961 74.583 45.3877 71.1162 46.0469 cv
70.7651 46.1133 70.4487 46.1777 70.1636 46.2393 cv
71.0625 46.2393 li
cp
level3{
gsave
clp
[-4.33835 4.30944 -10.811 -3.83119 75.5293 44.541 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.33835 4.30944 -10.811 -3.83119 75.5293 44.541 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
70.4512 46.3232 mo
70.1914 46.1484 69.873 45.9668 69.4858 45.7852 cv
67.5957 44.9023 64.6582 44.8389 64.6582 44.8389 cv
64.6582 44.8389 67.75 44.6973 70.0786 45.7334 cv
70.5601 45.9482 70.9321 46.1445 71.2202 46.3232 cv
70.4512 46.3232 li
cp
level3{
gsave
clp
[2.23113 6.07632 8.97636 -5.11982 67.1465 43.4209 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.23113 6.07632 8.97636 -5.11982 67.1465 43.4209 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
69.4341 46.1846 mo
69.2983 46.1221 69.145 46.0566 68.9736 45.9873 cv
68.0234 45.6094 67.0181 45.458 67.0181 45.458 cv
67.0181 45.458 68.0015 45.5479 69.1528 45.9971 cv
69.3281 46.0654 69.4795 46.1279 69.6113 46.1846 cv
69.4341 46.1846 li
cp
level3{
gsave
clp
[1.17304 1.60921 1.95774 -.322024 67.939 45.3066 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.17304 1.60921 1.95774 -.322024 67.939 45.3066 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
69.8525 46.0508 mo
70.1069 45.9561 70.4077 45.8555 70.7612 45.7559 cv
72.3589 45.3018 74.2798 45.2314 74.2798 45.2314 cv
74.2798 45.2314 72.3477 45.2041 70.4019 45.7383 cv
69.9844 45.8525 69.6514 45.957 69.3843 46.0508 cv
69.8525 46.0508 li
cp
level3{
gsave
clp
[-2.29606 3.07238 -5.12779 -2.13769 72.647 44.5508 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.29606 3.07238 -5.12779 -2.13769 72.647 44.5508 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
68.8633 46.3037 mo
68.7285 46.1475 68.5347 45.9697 68.2554 45.7881 cv
67.3682 45.2109 65.856 45.0723 65.856 45.0723 cv
65.856 45.0723 67.4697 45.0977 68.5659 45.7783 cv
68.8955 45.9834 69.1104 46.1582 69.248 46.3037 cv
68.8633 46.3037 li
cp
level3{
gsave
clp
[.613957 4.53939 3.08655 -2.41239 67.3154 43.9307 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.613957 4.53939 3.08655 -2.41239 67.3154 43.9307 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
70.564 46.1963 mo
70.6509 46.1592 70.7422 46.1211 70.8384 46.084 cv
72.2622 45.5186 74.0044 45.377 74.0044 45.377 cv
74.0044 45.377 72.2456 45.4092 70.5103 46.0762 cv
70.4028 46.1172 70.3013 46.1582 70.2061 46.1963 cv
70.564 46.1963 li
cp
level3{
gsave
clp
[-1.85033 3.38313 -4.30509 -1.72414 72.6294 44.8262 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.85033 3.38313 -4.30509 -1.72414 72.6294 44.8262 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
69.5601 46.1963 mo
69.5298 46.1113 69.4829 46.0205 69.4175 45.9287 cv
68.9517 45.2637 67.2896 44.9316 67.2896 44.9316 cv
67.2896 44.9316 69.1885 45.1709 69.7998 45.96 cv
69.8647 46.0439 69.916 46.123 69.9561 46.1963 cv
69.5601 46.1963 li
cp
level3{
gsave
clp
[-.051229 2.09801 3.38953 .0556743 68.6367 44.9541 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.051229 2.09801 3.38953 .0556743 68.6367 44.9541 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
71.1206 46.3125 mo
70.9399 46.2051 70.7349 46.0947 70.501 45.9824 cv
68.6968 45.1143 65.7173 44.8447 65.7173 44.8447 cv
65.7173 44.8447 68.8804 44.957 71.1108 45.9834 cv
71.3633 46.0996 71.5845 46.209 71.7759 46.3125 cv
71.1206 46.3125 li
cp
level3{
gsave
clp
[1.55977 4.28294 7.25211 -1.6632 68.2666 44.2598 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.55977 4.28294 7.25211 -1.6632 68.2666 44.2598 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
72.1245 46.2432 mo
72.0581 46.1357 71.9644 46.0205 71.835 45.8984 cv
71.1533 45.2539 69.4492 44.8789 69.4492 44.8789 cv
69.4492 44.8789 71.3452 45.1738 72.2109 45.9434 cv
72.334 46.0527 72.4307 46.1523 72.5059 46.2432 cv
72.1245 46.2432 li
cp
level3{
gsave
clp
[.157557 1.64366 2.69445 .36707 70.9321 45.0811 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.157557 1.64366 2.69445 .36707 70.9321 45.0811 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
69.957 46.3291 mo
69.6333 46.0645 69.1006 45.6846 68.3208 45.2852 cv
66.8604 44.5381 65.2788 44.3535 65.2788 44.3535 cv
65.2788 44.3535 66.835 44.3926 68.605 45.2744 cv
69.562 45.751 70.0654 46.1045 70.3262 46.3291 cv
69.957 46.3291 li
cp
level3{
gsave
clp
[2.11775 4.17649 3.72599 -2.15144 66.8433 43.4502 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.11775 4.17649 3.72599 -2.15144 66.8433 43.4502 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
70.3423 46.417 mo
70.1938 46.2158 69.998 45.9902 69.7412 45.7529 cv
68.855 44.9355 67.5581 44.6396 67.5581 44.6396 cv
67.5581 44.6396 68.9092 44.7949 69.9985 45.7646 cv
70.2817 46.0166 70.4873 46.2334 70.6362 46.417 cv
70.3423 46.417 li
cp
level3{
gsave
clp
[1.10756 3.12744 3.85754 -.887151 68.6895 44.3799 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.10756 3.12744 3.85754 -.887151 68.6895 44.3799 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
68.6836 46.2568 mo
68.752 46.1494 68.8447 46.0342 68.9741 45.9121 cv
69.6553 45.2676 71.3599 44.8926 71.3599 44.8926 cv
71.3599 44.8926 69.4629 45.1875 68.5981 45.9561 cv
68.4751 46.0674 68.3789 46.166 68.3032 46.2568 cv
68.6836 46.2568 li
cp
level3{
gsave
clp
[-.157536 1.64343 -2.69409 .36702 69.8779 45.0947 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.157536 1.64343 -2.69409 .36702 69.8779 45.0947 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
70.9995 46.4307 mo
70.9399 46.2217 70.8149 45.9619 70.5688 45.6709 cv
69.9263 44.9102 68.4902 44.4834 68.4902 44.4834 cv
68.4902 44.4834 70.0703 44.8125 70.8799 45.7197 cv
71.1426 46.0137 71.2861 46.248 71.3604 46.4307 cv
70.9995 46.4307 li
cp
level3{
gsave
clp
[2.87012 0 0 2.87012 68.4902 45.457 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.87012 0 0 2.87012 68.4902 45.457 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
71.9741 46.3848 mo
72.1963 46.2988 72.4492 46.2109 72.7358 46.1201 cv
74.7056 45.4941 77.5708 45.2666 77.5708 45.2666 cv
77.5708 45.2666 74.5869 45.3887 72.1685 46.1289 cv
71.8701 46.2207 71.6118 46.3057 71.3853 46.3848 cv
71.9741 46.3848 li
cp
level3{
gsave
clp
[-1.79508 2.84662 -6.17764 -.781302 75.0327 44.9463 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.79508 2.84662 -6.17764 -.781302 75.0327 44.9463 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
72.6118 46.4355 mo
72.7388 46.0986 72.9233 45.6934 73.1904 45.2637 cv
73.8999 44.1201 74.9297 43.7139 74.9297 43.7139 cv
74.9297 43.7139 73.8579 43.9248 72.9868 45.2783 cv
72.6826 45.75 72.4907 46.1348 72.3682 46.4355 cv
72.6118 46.4355 li
cp
level3{
gsave
clp
[-.645601 5.18659 -2.20321 -1.52464 73.9063 43.0059 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.645601 5.18659 -2.20321 -1.52464 73.9063 43.0059 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
68.8237 46.8623 mo
68.8237 46.9521 68.6211 47.0254 68.3706 47.0254 cv
68.1201 47.0254 67.918 46.9521 67.918 46.8623 cv
67.918 46.7715 68.1201 46.6982 68.3706 46.6982 cv
68.6211 46.6982 68.8237 46.7715 68.8237 46.8623 cv
cp
level3{
gsave
clp
[.402503 0 0 .190806 68.3706 46.8613 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402503 0 0 .190806 68.3706 46.8613 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.6748 47.125 mo
69.6748 47.2148 69.4722 47.2881 69.2227 47.2881 cv
68.9712 47.2881 68.7686 47.2148 68.7686 47.125 cv
68.7686 47.0342 68.9712 46.9609 69.2227 46.9609 cv
69.4722 46.9609 69.6748 47.0342 69.6748 47.125 cv
cp
level3{
gsave
clp
[.402665 0 0 .190883 69.2217 47.124 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402665 0 0 .190883 69.2217 47.124 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.4858 46.2959 mo
69.4858 46.3867 69.2827 46.46 69.0332 46.46 cv
68.7827 46.46 68.5801 46.3867 68.5801 46.2959 cv
68.5801 46.2061 68.7827 46.1328 69.0332 46.1328 cv
69.2827 46.1328 69.4858 46.2061 69.4858 46.2959 cv
cp
level3{
gsave
clp
[.402515 0 0 .190812 69.0327 46.2959 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402515 0 0 .190812 69.0327 46.2959 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.8838 46.7627 mo
69.8838 46.8525 69.6812 46.9268 69.4312 46.9268 cv
69.1807 46.9268 68.978 46.8525 68.978 46.7627 cv
68.978 46.6719 69.1807 46.5986 69.4312 46.5986 cv
69.6812 46.5986 69.8838 46.6719 69.8838 46.7627 cv
cp
level3{
gsave
clp
[.402967 0 0 .191026 69.4307 46.7617 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402967 0 0 .191026 69.4307 46.7617 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.9014 46.7627 mo
70.9014 46.8525 70.6992 46.9268 70.4487 46.9268 cv
70.1982 46.9268 69.9956 46.8525 69.9956 46.7627 cv
69.9956 46.6719 70.1982 46.5986 70.4487 46.5986 cv
70.6992 46.5986 70.9014 46.6719 70.9014 46.7627 cv
cp
level3{
gsave
clp
[.402952 0 0 .191019 70.4482 46.7617 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402952 0 0 .191019 70.4482 46.7617 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.3354 46.9473 mo
71.3354 47.0371 71.1328 47.1104 70.8828 47.1104 cv
70.6328 47.1104 70.4297 47.0371 70.4297 46.9473 cv
70.4297 46.8564 70.6328 46.7822 70.8828 46.7822 cv
71.1328 46.7822 71.3354 46.8564 71.3354 46.9473 cv
cp
level3{
gsave
clp
[.402967 0 0 .191026 70.8823 46.9453 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402967 0 0 .191026 70.8823 46.9453 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.6919 46.4902 mo
71.6016 46.3906 71.8672 46.2363 72.2813 46.1465 cv
72.6963 46.0547 73.106 46.0625 73.1958 46.1611 cv
73.2842 46.2607 73.02 46.415 72.604 46.5059 cv
72.1895 46.5967 71.7813 46.5889 71.6919 46.4902 cv
cp
level3{
gsave
clp
[-.669115 .145666 -.188299 -.209616 72.4438 46.3252 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.669115 .145666 -.188299 -.209616 72.4438 46.3252 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.4194 46.5225 mo
71.4194 46.6309 71.1138 46.7188 70.7368 46.7188 cv
70.3604 46.7188 70.0547 46.6309 70.0547 46.5225 cv
70.0547 46.4141 70.3604 46.3262 70.7368 46.3262 cv
71.1138 46.3262 71.4194 46.4141 71.4194 46.5225 cv
cp
level3{
gsave
clp
[.606941 0 0 .228788 70.7363 46.5225 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606941 0 0 .228788 70.7363 46.5225 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.7378 46.7285 mo
71.6235 46.71 71.5767 46.5703 71.6333 46.417 cv
71.6904 46.2627 71.8301 46.1533 71.9458 46.1709 cv
72.0601 46.1885 72.1069 46.3281 72.0498 46.4824 cv
71.9912 46.6357 71.8535 46.7461 71.7378 46.7285 cv
cp
level3{
gsave
clp
[-.0914299 .248167 -.243417 -.0379968 71.8428 46.4502 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0914299 .248167 -.243417 -.0379968 71.8428 46.4502 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.3379 46.6982 mo
73.3916 46.8164 73.1465 46.9668 72.7896 47.0371 cv
72.4316 47.1074 72.0986 47.0684 72.0444 46.9502 cv
71.9897 46.833 72.2358 46.6816 72.5938 46.6113 cv
72.9497 46.542 73.2837 46.5811 73.3379 46.6982 cv
cp
level3{
gsave
clp
[.574438 -.112287 .114651 .248214 72.6929 46.8242 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.574438 -.112287 .114651 .248214 72.6929 46.8242 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.5093 46.4658 mo
71.4907 46.54 71.2119 46.5742 70.8853 46.54 cv
70.5586 46.5068 70.3086 46.4199 70.3262 46.3447 cv
70.3442 46.2695 70.6245 46.2363 70.9502 46.2686 cv
71.2773 46.3027 71.5283 46.3906 71.5093 46.4658 cv
cp
level3{
gsave
clp
[.526864 .0533984 -.0391588 .157822 70.9189 46.4053 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.526864 .0533984 -.0391588 .157822 70.9189 46.4053 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.7515 46.5352 mo
69.7588 46.6445 69.46 46.7402 69.083 46.751 cv
68.7065 46.7617 68.3955 46.6826 68.3887 46.5742 cv
68.3813 46.4668 68.6802 46.3701 69.0562 46.3594 cv
69.4326 46.3486 69.7446 46.4268 69.7515 46.5352 cv
cp
level3{
gsave
clp
[.606112 -.0177572 .0153896 .228476 69.0718 46.5547 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606112 -.0177572 .0153896 .228476 69.0718 46.5547 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.6836 46.3799 mo
71.7236 46.4639 71.4844 46.5869 71.1484 46.6543 cv
70.812 46.7227 70.5078 46.71 70.4683 46.6279 cv
70.4282 46.5439 70.668 46.4209 71.0034 46.3535 cv
71.3384 46.2852 71.6436 46.2969 71.6836 46.3799 cv
cp
level3{
gsave
clp
[.540204 -.110173 .0852954 .175329 71.0771 46.5039 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.540204 -.110173 .0852954 .175329 71.0771 46.5039 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.606 46.5234 mo
70.6123 46.6182 70.3618 46.7002 70.0454 46.709 cv
69.73 46.7188 69.4692 46.6514 69.4614 46.5576 cv
69.4556 46.4639 69.7065 46.3809 70.0229 46.3721 cv
70.3384 46.3623 70.5991 46.4307 70.606 46.5234 cv
cp
level3{
gsave
clp
[.509553 -.0142201 .0142201 .196711 70.0337 46.542 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.509553 -.0142201 .0142201 .196711 70.0337 46.542 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.1416 46.5059 mo
70.1416 46.5947 69.9277 46.667 69.6636 46.667 cv
69.4004 46.667 69.1855 46.5947 69.1855 46.5059 cv
69.1855 46.417 69.4004 46.3457 69.6636 46.3457 cv
69.9277 46.3457 70.1416 46.417 70.1416 46.5059 cv
cp
level3{
gsave
clp
[.424525 0 0 .188021 69.6636 46.5049 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424525 0 0 .188021 69.6636 46.5049 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.6528 46.5303 mo
68.6528 46.6191 68.4385 46.6914 68.1748 46.6914 cv
67.9116 46.6914 67.6973 46.6191 67.6973 46.5303 cv
67.6973 46.4414 67.9116 46.3691 68.1748 46.3691 cv
68.4385 46.3691 68.6528 46.4414 68.6528 46.5303 cv
cp
level3{
gsave
clp
[.424875 0 0 .188176 68.1748 46.5293 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424875 0 0 .188176 68.1748 46.5293 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
69.1235 46.6309 mo
69.0771 46.7002 68.7944 46.6885 68.4902 46.6035 cv
68.1865 46.5186 67.978 46.3926 68.0234 46.3242 cv
68.0693 46.2549 68.3525 46.2666 68.6567 46.3516 cv
68.9604 46.4365 69.1704 46.5615 69.1235 46.6309 cv
cp
level3{
gsave
clp
[.489578 .137509 -.0972044 .146992 68.5752 46.4775 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.489578 .137509 -.0972044 .146992 68.5752 46.4775 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.897 46.3457 mo
68.8516 46.416 68.5679 46.4033 68.2642 46.3193 cv
67.9604 46.2344 67.752 46.1084 67.7974 46.0391 cv
67.8433 45.9697 68.1265 45.9824 68.4302 46.0674 cv
68.7344 46.1514 68.9438 46.2773 68.897 46.3457 cv
cp
level3{
gsave
clp
[.489412 .137462 -.0971714 .146942 68.3481 46.1934 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.489412 .137462 -.0971714 .146942 68.3481 46.1934 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.5649 46.6436 mo
72.5723 46.752 72.2729 46.8486 71.896 46.8594 cv
71.519 46.8691 71.2085 46.791 71.2017 46.6826 cv
71.1938 46.5742 71.4927 46.4775 71.8701 46.4668 cv
72.2461 46.4561 72.5571 46.5352 72.5649 46.6436 cv
cp
level3{
gsave
clp
[.606802 -.0177774 .0154071 .228736 71.8848 46.6631 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606802 -.0177774 .0154071 .228736 71.8848 46.6631 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.5386 46.3223 mo
68.5786 46.4063 68.3389 46.5283 68.0034 46.5967 cv
67.668 46.665 67.3638 46.6523 67.3237 46.5693 cv
67.2837 46.4863 67.5234 46.3633 67.8594 46.2959 cv
68.1934 46.2275 68.499 46.2393 68.5386 46.3223 cv
cp
level3{
gsave
clp
[.539839 -.110099 .0852378 .175211 67.9316 46.4463 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.539839 -.110099 .0852378 .175211 67.9316 46.4463 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.7578 46.8203 mo
68.7148 46.8496 68.6074 46.8281 68.5151 46.7725 cv
68.4233 46.7158 68.3843 46.6475 68.4268 46.6182 cv
68.4688 46.5889 68.5771 46.6104 68.6685 46.666 cv
68.7593 46.7217 68.8003 46.791 68.7578 46.8203 cv
cp
level3{
gsave
clp
[.146922 .0900489 -.0900489 .0616124 68.5908 46.7188 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.146922 .0900489 -.0900489 .0616124 68.5908 46.7188 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.4434 46.5771 mo
70.4512 46.6709 70.1997 46.7539 69.8838 46.7627 cv
69.5684 46.7725 69.3066 46.7031 69.2998 46.6104 cv
69.2935 46.5176 69.5449 46.4336 69.8608 46.4248 cv
70.1763 46.416 70.4375 46.4834 70.4434 46.5771 cv
cp
level3{
gsave
clp
[.509784 -.0142265 .0142265 .1968 69.8716 46.5947 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.509784 -.0142265 .0142265 .1968 69.8716 46.5947 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
70.8149 46.4863 mo
70.8149 46.5752 70.6011 46.6484 70.3369 46.6484 cv
70.0737 46.6484 69.8594 46.5752 69.8594 46.4863 cv
69.8594 46.3975 70.0737 46.3262 70.3369 46.3262 cv
70.6011 46.3262 70.8149 46.3975 70.8149 46.4863 cv
cp
level3{
gsave
clp
[.424882 0 0 .188179 70.3369 46.4863 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424882 0 0 .188179 70.3369 46.4863 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.4824 46.7588 mo
68.4644 46.834 68.186 46.8682 67.8579 46.834 cv
67.5308 46.8018 67.2813 46.7129 67.2993 46.6377 cv
67.3174 46.5645 67.5967 46.5303 67.9243 46.5645 cv
68.251 46.5977 68.5005 46.6855 68.4824 46.7588 cv
cp
level3{
gsave
clp
[.525581 .0532684 -.0390635 .157438 67.8916 46.7002 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.525581 .0532684 -.0390635 .157438 67.8916 46.7002 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.4863 47.291 mo
72.4863 47.3809 72.2832 47.4541 72.0327 47.4541 cv
71.7832 47.4541 71.5806 47.3809 71.5806 47.291 cv
71.5806 47.2002 71.7832 47.127 72.0327 47.127 cv
72.2832 47.127 72.4863 47.2002 72.4863 47.291 cv
cp
level3{
gsave
clp
[.402515 0 0 .190812 72.0332 47.29 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402515 0 0 .190812 72.0332 47.29 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.3667 46.5576 mo
71.3667 46.6484 71.1646 46.7217 70.9141 46.7217 cv
70.6636 46.7217 70.4614 46.6484 70.4614 46.5576 cv
70.4614 46.4668 70.6636 46.3945 70.9141 46.3945 cv
71.1646 46.3945 71.3667 46.4668 71.3667 46.5576 cv
cp
level3{
gsave
clp
[.402388 0 0 .190751 70.9141 46.5576 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402388 0 0 .190751 70.9141 46.5576 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.4058 46.3027 mo
64.4058 46.3926 64.2026 46.4658 63.9526 46.4658 cv
63.7026 46.4658 63.5 46.3926 63.5 46.3027 cv
63.5 46.2119 63.7026 46.1387 63.9526 46.1387 cv
64.2026 46.1387 64.4058 46.2119 64.4058 46.3027 cv
cp
level3{
gsave
clp
[.402522 0 0 .190815 63.9526 46.3018 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402522 0 0 .190815 63.9526 46.3018 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
65.3765 46.2363 mo
65.3257 46.3486 64.8413 46.3896 64.293 46.3301 cv
63.7451 46.2705 63.3413 46.1309 63.3921 46.0195 cv
63.4424 45.9072 63.9268 45.8652 64.4751 45.9258 cv
65.0229 45.9863 65.4268 46.124 65.3765 46.2363 cv
cp
level3{
gsave
clp
[.882563 .097011 -.106475 .235429 64.3848 46.127 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.882563 .097011 -.106475 .235429 64.3848 46.127 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.9331 46.4902 mo
67.8423 46.3906 68.1079 46.2363 68.5234 46.1465 cv
68.938 46.0547 69.3467 46.0625 69.4365 46.1611 cv
69.5249 46.2607 69.2612 46.415 68.8457 46.5059 cv
68.4302 46.5967 68.022 46.5889 67.9331 46.4902 cv
cp
level3{
gsave
clp
[-.668896 .145618 -.188238 -.209548 68.6851 46.3262 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.668896 .145618 -.188238 -.209548 68.6851 46.3262 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.418 46.1035 mo
67.3643 45.9971 67.6797 45.8691 68.1201 45.8154 cv
68.5605 45.7617 68.9604 45.8037 69.0142 45.9092 cv
69.0664 46.0146 68.7524 46.1426 68.311 46.1973 cv
67.8696 46.251 67.4702 46.208 67.418 46.1035 cv
cp
level3{
gsave
clp
[-.709302 .0862985 -.111124 -.222248 68.2158 46.0059 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.709302 .0862985 -.111124 -.222248 68.2158 46.0059 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.938 45.9229 mo
68.0166 46.0518 67.7617 46.2041 67.3682 46.2617 cv
66.9741 46.3203 66.5918 46.2627 66.5132 46.1338 cv
66.4341 46.0039 66.689 45.8516 67.083 45.7939 cv
67.4766 45.7344 67.8594 45.792 67.938 45.9229 cv
cp
level3{
gsave
clp
[.633332 -.0933456 .166604 .272947 67.2261 46.0283 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633332 -.0933456 .166604 .272947 67.2261 46.0283 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.5928 46.1748 mo
67.5557 46.3125 67.0679 46.3945 66.502 46.3574 cv
65.9351 46.3213 65.5063 46.1787 65.5425 46.042 cv
65.5791 45.9043 66.0684 45.8223 66.6343 45.8594 cv
67.2002 45.8955 67.6299 46.0371 67.5928 46.1748 cv
cp
level3{
gsave
clp
[.910631 .0591319 -.0768715 .290929 66.5664 46.1084 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.910631 .0591319 -.0768715 .290929 66.5664 46.1084 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
62.7754 46.3965 mo
62.686 46.2959 62.9502 46.1426 63.3647 46.0518 cv
63.7798 45.9609 64.1899 45.9688 64.2793 46.0674 cv
64.3677 46.167 64.104 46.3213 63.6885 46.4111 cv
63.2729 46.5029 62.8638 46.4951 62.7754 46.3965 cv
cp
level3{
gsave
clp
[-.669209 .145686 -.188326 -.209646 63.5269 46.2314 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.669209 .145686 -.188326 -.209646 63.5269 46.2314 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.0752 46.0625 mo
66.1548 46.1914 65.8999 46.3438 65.5063 46.4023 cv
65.1123 46.46 64.7295 46.4033 64.6499 46.2734 cv
64.5723 46.1436 64.8271 45.9922 65.2202 45.9336 cv
65.6138 45.875 65.9966 45.9326 66.0752 46.0625 cv
cp
level3{
gsave
clp
[.633978 -.0934408 .166774 .273226 65.3633 46.1689 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.633978 -.0934408 .166774 .273226 65.3633 46.1689 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
65.3794 46.0469 mo
65.3794 46.1631 65.0342 46.2568 64.6108 46.2568 cv
64.1855 46.2568 63.8413 46.1631 63.8413 46.0469 cv
63.8413 45.9307 64.1855 45.8369 64.6108 45.8369 cv
65.0342 45.8369 65.3794 45.9307 65.3794 46.0469 cv
cp
level3{
gsave
clp
[.684926 0 0 .244109 64.6104 46.0479 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.684926 0 0 .244109 64.6104 46.0479 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.3896 46.3115 mo
68.3896 46.4023 68.1865 46.4746 67.9365 46.4746 cv
67.6865 46.4746 67.4839 46.4023 67.4839 46.3115 cv
67.4839 46.2207 67.6865 46.1475 67.9365 46.1475 cv
68.1865 46.1475 68.3896 46.2207 68.3896 46.3115 cv
cp
level3{
gsave
clp
[.402533 0 0 .19082 67.9365 46.3105 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402533 0 0 .19082 67.9365 46.3105 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
63.8125 46.2666 mo
63.8125 46.3574 63.6089 46.4297 63.3594 46.4297 cv
63.1099 46.4297 62.9063 46.3574 62.9063 46.2666 cv
62.9063 46.1758 63.1099 46.1035 63.3594 46.1035 cv
63.6089 46.1035 63.8125 46.1758 63.8125 46.2666 cv
cp
level3{
gsave
clp
[.402236 0 0 .190679 63.3594 46.2656 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402236 0 0 .190679 63.3594 46.2656 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.7363 46.416 mo
67.0601 45.8877 67.5923 45.127 68.373 44.3301 cv
69.833 42.8379 71.4141 42.4697 71.4141 42.4697 cv
71.4141 42.4697 69.8594 42.5479 68.0884 44.3086 cv
67.1304 45.2607 66.6274 45.9668 66.3672 46.416 cv
66.7363 46.416 li
cp
level3{
gsave
clp
[-2.9711 5.85941 -5.22738 -3.01837 70.2358 41.79 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.9711 5.85941 -5.22738 -3.01837 70.2358 41.79 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
66.002 46.2871 mo
66.3696 45.9971 66.8408 45.6641 67.4258 45.3213 cv
69.186 44.2871 71.0645 44.0234 71.0645 44.0234 cv
71.0645 44.0234 69.2241 44.0879 67.0889 45.3086 cv
66.4155 45.6934 65.9272 46.0205 65.5737 46.2871 cv
66.002 46.2871 li
cp
level3{
gsave
clp
[-2.6936 5.53628 -4.57009 -2.77073 69.3682 42.9961 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.6936 5.53628 -4.57009 -2.77073 69.3682 42.9961 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
63.7422 46.1963 mo
63.7632 46.1494 63.7891 46.1006 63.8193 46.0498 cv
64.2383 45.3584 65.7529 44.8555 65.7529 44.8555 cv
65.7529 44.8555 64.0215 45.2949 63.4722 46.123 cv
63.4556 46.1475 63.4395 46.1719 63.4253 46.1963 cv
63.7422 46.1963 li
cp
level3{
gsave
clp
[.032482 1.19728 -1.8502 .730686 64.5825 45.2695 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.032482 1.19728 -1.8502 .730686 64.5825 45.2695 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
66.1958 46.3701 mo
66.1001 46.084 65.9414 45.7529 65.6826 45.3926 cv
64.8179 44.1855 62.8882 43.999 62.8882 43.999 cv
62.8882 43.999 65.0122 44.0303 66.1011 45.4688 cv
66.3672 45.8223 66.542 46.1201 66.6548 46.3701 cv
66.1958 46.3701 li
cp
level3{
gsave
clp
[.229112 2.61715 2.50139 .450053 64.6938 44.2783 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.229112 2.61715 2.50139 .450053 64.6938 44.2783 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
64.5063 46.1963 mo
65.6938 46.043 66.7139 46.0205 66.7139 46.0205 cv
66.7139 46.0205 65.4839 45.9932 63.9902 46.1963 cv
64.5063 46.1963 li
cp
level3{
gsave
clp
[-2.69363 3.15488 -6.35768 -2.44584 65.7441 45.6475 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.69363 3.15488 -6.35768 -2.44584 65.7441 45.6475 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
66.2856 46.0469 mo
67.3022 45.9336 68.1147 45.916 68.1147 45.916 cv
68.1147 45.916 67.0786 45.8936 65.7515 46.0469 cv
66.2856 46.0469 li
cp
level3{
gsave
clp
[-2.74026 3.20948 -6.46772 -2.48817 67.2661 45.5898 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.74026 3.20948 -6.46772 -2.48817 67.2661 45.5898 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
66.8818 45.9395 mo
67.1577 45.7109 67.5239 45.4531 68.0044 45.1836 cv
69.665 44.251 72.0913 43.9141 72.0913 43.9141 cv
72.0913 43.9141 69.563 44.0918 67.5234 45.1963 cv
66.9937 45.4834 66.6094 45.7314 66.3286 45.9395 cv
66.8818 45.9395 li
cp
level3{
gsave
clp
[-1.49322 4.21645 -5.20078 -1.19607 69.7593 43.3779 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.49322 4.21645 -5.20078 -1.19607 69.7593 43.3779 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
67.0361 45.7178 mo
68.8501 45.584 70.478 45.5947 70.478 45.5947 cv
70.478 45.5947 68.3999 45.5186 66.0459 45.7178 cv
67.0361 45.7178 li
cp
level3{
gsave
clp
[-4.16934 3.37348 -10.9549 -3.57532 68.9526 45.0967 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.16934 3.37348 -10.9549 -3.57532 68.9526 45.0967 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
66.5381 46.2393 mo
66.7666 46.1875 67.0117 46.1357 67.2729 46.084 cv
70.1152 45.5205 73.7012 45.4961 73.7012 45.4961 cv
73.7012 45.4961 70.0591 45.3877 66.5913 46.0469 cv
66.2407 46.1133 65.9248 46.1777 65.6396 46.2393 cv
66.5381 46.2393 li
cp
level3{
gsave
clp
[-4.33795 4.30905 -10.81 -3.83084 71.0049 44.541 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.33795 4.30905 -10.81 -3.83084 71.0049 44.541 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
65.9272 46.3232 mo
65.6665 46.1484 65.3491 45.9668 64.9614 45.7852 cv
63.0713 44.9023 60.1333 44.8389 60.1333 44.8389 cv
60.1333 44.8389 63.2261 44.6973 65.5542 45.7334 cv
66.0352 45.9482 66.4072 46.1445 66.6958 46.3232 cv
65.9272 46.3232 li
cp
level3{
gsave
clp
[2.23124 6.07663 8.97682 -5.12008 62.6221 43.4199 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.23124 6.07663 8.97682 -5.12008 62.6221 43.4199 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
64.9102 46.1846 mo
64.7739 46.1221 64.6206 46.0566 64.4487 45.9873 cv
63.4985 45.6094 62.4937 45.458 62.4937 45.458 cv
62.4937 45.458 63.4775 45.5479 64.6289 45.9971 cv
64.8037 46.0654 64.9556 46.1279 65.0874 46.1846 cv
64.9102 46.1846 li
cp
level3{
gsave
clp
[1.17313 1.60934 1.95789 -.322049 63.415 45.3066 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.17313 1.60934 1.95789 -.322049 63.415 45.3066 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
65.3286 46.0508 mo
65.5825 45.9561 65.8838 45.8555 66.2363 45.7559 cv
67.835 45.3018 69.7559 45.2314 69.7559 45.2314 cv
69.7559 45.2314 67.8228 45.2041 65.877 45.7383 cv
65.4604 45.8525 65.1265 45.957 64.8594 46.0508 cv
65.3286 46.0508 li
cp
level3{
gsave
clp
[-2.29639 3.07282 -5.12853 -2.138 68.1226 44.5508 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.29639 3.07282 -5.12853 -2.138 68.1226 44.5508 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
64.3389 46.3037 mo
64.2036 46.1475 64.0107 45.9697 63.7314 45.7881 cv
62.8433 45.2109 61.332 45.0723 61.332 45.0723 cv
61.332 45.0723 62.9453 45.0977 64.0415 45.7783 cv
64.3716 45.9834 64.5864 46.1582 64.7241 46.3037 cv
64.3389 46.3037 li
cp
level3{
gsave
clp
[.613957 4.53939 3.08655 -2.41239 62.7915 43.9307 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.613957 4.53939 3.08655 -2.41239 62.7915 43.9307 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
66.0396 46.1963 mo
66.1265 46.1592 66.2173 46.1211 66.3135 46.084 cv
67.7383 45.5186 69.4795 45.377 69.4795 45.377 cv
69.4795 45.377 67.7217 45.4092 65.9858 46.0762 cv
65.8779 46.1172 65.7773 46.1582 65.6812 46.1963 cv
66.0396 46.1963 li
cp
level3{
gsave
clp
[-1.85033 3.38313 -4.30509 -1.72414 68.1045 44.8262 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.85033 3.38313 -4.30509 -1.72414 68.1045 44.8262 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
65.0356 46.1963 mo
65.0049 46.1113 64.9585 46.0205 64.8936 45.9287 cv
64.4268 45.2637 62.7656 44.9316 62.7656 44.9316 cv
62.7656 44.9316 64.6636 45.1709 65.2754 45.96 cv
65.3398 46.0439 65.3911 46.123 65.4321 46.1963 cv
65.0356 46.1963 li
cp
level3{
gsave
clp
[-.0512289 2.098 3.38953 .0556742 64.1128 44.9541 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0512289 2.098 3.38953 .0556742 64.1128 44.9541 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
66.5957 46.3125 mo
66.4155 46.2051 66.2104 46.0947 65.9771 45.9824 cv
64.1724 45.1143 61.1934 44.8447 61.1934 44.8447 cv
61.1934 44.8447 64.3564 44.957 66.5864 45.9834 cv
66.8394 46.0996 67.0596 46.209 67.2515 46.3125 cv
66.5957 46.3125 li
cp
level3{
gsave
clp
[1.5597 4.28275 7.2518 -1.66313 63.7427 44.2607 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5597 4.28275 7.2518 -1.66313 63.7427 44.2607 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
67.6006 46.2432 mo
67.5337 46.1357 67.4399 46.0205 67.3105 45.8984 cv
66.6289 45.2539 64.9253 44.8789 64.9253 44.8789 cv
64.9253 44.8789 66.8213 45.1738 67.6865 45.9434 cv
67.8091 46.0527 67.9063 46.1523 67.981 46.2432 cv
67.6006 46.2432 li
cp
level3{
gsave
clp
[.157557 1.64365 2.69445 .367069 66.4077 45.0811 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.157557 1.64365 2.69445 .367069 66.4077 45.0811 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
65.4321 46.3291 mo
65.1084 46.0645 64.5767 45.6846 63.7964 45.2852 cv
62.3364 44.5381 60.7544 44.3535 60.7544 44.3535 cv
60.7544 44.3535 62.3101 44.3926 64.0811 45.2744 cv
65.0381 45.751 65.541 46.1045 65.8013 46.3291 cv
65.4321 46.3291 li
cp
level3{
gsave
clp
[2.11762 4.17623 3.72576 -2.15131 62.3188 43.4502 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.11762 4.17623 3.72576 -2.15131 62.3188 43.4502 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
65.8179 46.417 mo
65.6699 46.2158 65.4736 45.9902 65.2173 45.7529 cv
64.3301 44.9355 63.0342 44.6396 63.0342 44.6396 cv
63.0342 44.6396 64.3853 44.7949 65.4746 45.7646 cv
65.7568 46.0166 65.9634 46.2334 66.1123 46.417 cv
65.8179 46.417 li
cp
level3{
gsave
clp
[1.10754 3.12739 3.85748 -.887137 64.1655 44.3789 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.10754 3.12739 3.85748 -.887137 64.1655 44.3789 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
64.1597 46.2568 mo
64.2271 46.1494 64.3203 46.0342 64.4502 45.9121 cv
65.1304 45.2676 66.835 44.8926 66.835 44.8926 cv
66.835 44.8926 64.939 45.1875 64.0742 45.9561 cv
63.9502 46.0674 63.854 46.166 63.7783 46.2568 cv
64.1597 46.2568 li
cp
level3{
gsave
clp
[-.15756 1.64369 -2.6945 .367076 65.353 45.0947 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.15756 1.64369 -2.6945 .367076 65.353 45.0947 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
66.4746 46.4307 mo
66.4155 46.2217 66.291 45.9619 66.0449 45.6709 cv
65.4014 44.9102 63.9663 44.4834 63.9663 44.4834 cv
63.9663 44.4834 65.5464 44.8125 66.355 45.7197 cv
66.6177 46.0137 66.7612 46.248 66.8354 46.4307 cv
66.4746 46.4307 li
cp
level3{
gsave
clp
[2.86914 0 0 2.86914 63.9663 45.457 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.86914 0 0 2.86914 63.9663 45.457 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
67.4497 46.3848 mo
67.6714 46.2988 67.9243 46.2109 68.2109 46.1201 cv
70.1816 45.4941 73.0469 45.2666 73.0469 45.2666 cv
73.0469 45.2666 70.062 45.3887 67.6445 46.1289 cv
67.3462 46.2207 67.0869 46.3057 66.8604 46.3848 cv
67.4497 46.3848 li
cp
level3{
gsave
clp
[-1.79521 2.84681 -6.17805 -.781354 70.5083 44.9453 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.79521 2.84681 -6.17805 -.781354 70.5083 44.9453 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
68.0874 46.4355 mo
68.2139 46.0986 68.3984 45.6934 68.6665 45.2637 cv
69.3755 44.1201 70.4048 43.7139 70.4048 43.7139 cv
70.4048 43.7139 69.3335 43.9248 68.4619 45.2783 cv
68.1587 45.75 67.9658 46.1348 67.8442 46.4355 cv
68.0874 46.4355 li
cp
level3{
gsave
clp
[-.645486 5.18566 -2.20282 -1.52437 69.3818 43.0059 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.645486 5.18566 -2.20282 -1.52437 69.3818 43.0059 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
64.2988 46.8623 mo
64.2988 46.9521 64.0962 47.0254 63.8467 47.0254 cv
63.5962 47.0254 63.3936 46.9521 63.3936 46.8623 cv
63.3936 46.7715 63.5962 46.6982 63.8467 46.6982 cv
64.0962 46.6982 64.2988 46.7715 64.2988 46.8623 cv
cp
level3{
gsave
clp
[.402385 0 0 .19075 63.8462 46.8613 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402385 0 0 .19075 63.8462 46.8613 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
65.1509 47.125 mo
65.1509 47.2148 64.9473 47.2881 64.6978 47.2881 cv
64.4463 47.2881 64.2446 47.2148 64.2446 47.125 cv
64.2446 47.0342 64.4463 46.9609 64.6978 46.9609 cv
64.9473 46.9609 65.1509 47.0342 65.1509 47.125 cv
cp
level3{
gsave
clp
[.402669 0 0 .190884 64.6978 47.124 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402669 0 0 .190884 64.6978 47.124 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.9614 46.2959 mo
64.9614 46.3867 64.7588 46.46 64.5093 46.46 cv
64.2588 46.46 64.0562 46.3867 64.0562 46.2959 cv
64.0562 46.2061 64.2588 46.1328 64.5093 46.1328 cv
64.7588 46.1328 64.9614 46.2061 64.9614 46.2959 cv
cp
level3{
gsave
clp
[.402393 0 0 .190754 64.5088 46.2959 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402393 0 0 .190754 64.5088 46.2959 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
65.3589 46.7627 mo
65.3589 46.8525 65.1567 46.9268 64.9063 46.9268 cv
64.6567 46.9268 64.4531 46.8525 64.4531 46.7627 cv
64.4531 46.6719 64.6567 46.5986 64.9063 46.5986 cv
65.1567 46.5986 65.3589 46.6719 65.3589 46.7627 cv
cp
level3{
gsave
clp
[.402958 0 0 .191022 64.9058 46.7617 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402958 0 0 .191022 64.9058 46.7617 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.377 46.7627 mo
66.377 46.8525 66.1743 46.9268 65.9238 46.9268 cv
65.6743 46.9268 65.4717 46.8525 65.4717 46.7627 cv
65.4717 46.6719 65.6743 46.5986 65.9238 46.5986 cv
66.1743 46.5986 66.377 46.6719 66.377 46.7627 cv
cp
level3{
gsave
clp
[.402848 0 0 .190969 65.9243 46.7617 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402848 0 0 .190969 65.9243 46.7617 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.8105 46.9473 mo
66.8105 47.0371 66.6084 47.1104 66.3584 47.1104 cv
66.1084 47.1104 65.9058 47.0371 65.9058 46.9473 cv
65.9058 46.8564 66.1084 46.7822 66.3584 46.7822 cv
66.6084 46.7822 66.8105 46.8564 66.8105 46.9473 cv
cp
level3{
gsave
clp
[.402702 0 0 .1909 66.3579 46.9453 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402702 0 0 .1909 66.3579 46.9453 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.167 46.4902 mo
67.0776 46.3906 67.3433 46.2363 67.7568 46.1465 cv
68.1724 46.0547 68.5815 46.0625 68.6719 46.1611 cv
68.7603 46.2607 68.4961 46.415 68.0801 46.5059 cv
67.6646 46.5967 67.2563 46.5889 67.167 46.4902 cv
cp
level3{
gsave
clp
[-.669348 .145716 -.188365 -.20969 67.9194 46.3262 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.669348 .145716 -.188365 -.20969 67.9194 46.3262 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.8945 46.5225 mo
66.8945 46.6309 66.5889 46.7188 66.2124 46.7188 cv
65.8354 46.7188 65.5298 46.6309 65.5298 46.5225 cv
65.5298 46.4141 65.8354 46.3262 66.2124 46.3262 cv
66.5889 46.3262 66.8945 46.4141 66.8945 46.5225 cv
cp
level3{
gsave
clp
[.606941 0 0 .228788 66.2114 46.5225 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606941 0 0 .228788 66.2114 46.5225 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.2139 46.7285 mo
67.0996 46.71 67.0518 46.5703 67.1094 46.417 cv
67.166 46.2627 67.3052 46.1533 67.4214 46.1709 cv
67.5352 46.1885 67.5825 46.3281 67.5249 46.4824 cv
67.4673 46.6357 67.3286 46.7461 67.2139 46.7285 cv
cp
level3{
gsave
clp
[-.091359 .247975 -.243229 -.0379674 67.3184 46.4502 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.091359 .247975 -.243229 -.0379674 67.3184 46.4502 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.813 46.6982 mo
68.8677 46.8164 68.6216 46.9668 68.2656 47.0371 cv
67.9077 47.1074 67.5737 47.0684 67.52 46.9502 cv
67.4658 46.833 67.7114 46.6816 68.0688 46.6113 cv
68.4258 46.542 68.7593 46.5811 68.813 46.6982 cv
cp
level3{
gsave
clp
[.575133 -.112423 .11479 .248514 68.167 46.8242 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.575133 -.112423 .11479 .248514 68.167 46.8242 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.9849 46.4658 mo
66.9663 46.54 66.6875 46.5742 66.3613 46.54 cv
66.0347 46.5068 65.7842 46.4199 65.8022 46.3447 cv
65.8203 46.2695 66.1001 46.2363 66.4263 46.2686 cv
66.7529 46.3027 67.0034 46.3906 66.9849 46.4658 cv
cp
level3{
gsave
clp
[.526715 .0533833 -.0391478 .157777 66.3945 46.4053 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.526715 .0533833 -.0391478 .157777 66.3945 46.4053 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
65.2271 46.5352 mo
65.2349 46.6445 64.936 46.7402 64.5591 46.751 cv
64.1826 46.7617 63.8706 46.6826 63.8638 46.5742 cv
63.8564 46.4668 64.1553 46.3701 64.5317 46.3594 cv
64.9087 46.3486 65.2197 46.4268 65.2271 46.5352 cv
cp
level3{
gsave
clp
[.606238 -.0177609 .0153928 .228523 64.5469 46.5547 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606238 -.0177609 .0153928 .228523 64.5469 46.5547 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.1587 46.3799 mo
67.1997 46.4639 66.9595 46.5869 66.6245 46.6543 cv
66.2876 46.7227 65.9839 46.71 65.9438 46.6279 cv
65.9043 46.5439 66.144 46.4209 66.479 46.3535 cv
66.8145 46.2852 67.1191 46.2969 67.1587 46.3799 cv
cp
level3{
gsave
clp
[.54013 -.110158 .0852837 .175305 66.5518 46.5039 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.54013 -.110158 .0852837 .175305 66.5518 46.5039 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.0815 46.5234 mo
66.0874 46.6182 65.8369 46.7002 65.5215 46.709 cv
65.2051 46.7188 64.9448 46.6514 64.9375 46.5576 cv
64.9312 46.4639 65.1816 46.3809 65.498 46.3721 cv
65.8135 46.3623 66.0752 46.4307 66.0815 46.5234 cv
cp
level3{
gsave
clp
[.509413 -.0142162 .0142162 .196657 65.5093 46.542 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.509413 -.0142162 .0142162 .196657 65.5093 46.542 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
65.6167 46.5059 mo
65.6167 46.5947 65.4033 46.667 65.1387 46.667 cv
64.8755 46.667 64.6611 46.5947 64.6611 46.5059 cv
64.6611 46.417 64.8755 46.3457 65.1387 46.3457 cv
65.4033 46.3457 65.6167 46.417 65.6167 46.5059 cv
cp
level3{
gsave
clp
[.424382 0 0 .187957 65.1387 46.5049 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424382 0 0 .187957 65.1387 46.5049 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.1279 46.5303 mo
64.1279 46.6191 63.9141 46.6914 63.6504 46.6914 cv
63.3867 46.6914 63.1733 46.6191 63.1733 46.5303 cv
63.1733 46.4414 63.3867 46.3691 63.6504 46.3691 cv
63.9141 46.3691 64.1279 46.4414 64.1279 46.5303 cv
cp
level3{
gsave
clp
[.424568 0 0 .18804 63.6504 46.5293 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424568 0 0 .18804 63.6504 46.5293 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.5991 46.6309 mo
64.5532 46.7002 64.2695 46.6885 63.9663 46.6035 cv
63.6626 46.5186 63.4531 46.3926 63.4995 46.3242 cv
63.5454 46.2549 63.8286 46.2666 64.1323 46.3516 cv
64.436 46.4365 64.6455 46.5615 64.5991 46.6309 cv
cp
level3{
gsave
clp
[.489423 .137465 -.0971737 .146946 64.0508 46.4775 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.489423 .137465 -.0971737 .146946 64.0508 46.4775 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.373 46.3457 mo
64.3271 46.416 64.0435 46.4033 63.7397 46.3193 cv
63.4355 46.2344 63.2271 46.1084 63.2729 46.0391 cv
63.3193 45.9697 63.6021 45.9824 63.9058 46.0674 cv
64.2095 46.1514 64.4194 46.2773 64.373 46.3457 cv
cp
level3{
gsave
clp
[.489532 .137496 -.0971953 .146978 63.8237 46.1934 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.489532 .137496 -.0971953 .146978 63.8237 46.1934 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
68.04 46.6436 mo
68.0474 46.752 67.7485 46.8486 67.3721 46.8594 cv
66.9951 46.8691 66.6841 46.791 66.6772 46.6826 cv
66.6689 46.5742 66.9678 46.4775 67.3457 46.4668 cv
67.7217 46.4561 68.0322 46.5352 68.04 46.6436 cv
cp
level3{
gsave
clp
[.606652 -.017773 .0154033 .22868 67.3604 46.6631 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.606652 -.017773 .0154033 .22868 67.3604 46.6631 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.0137 46.3223 mo
64.0547 46.4063 63.8149 46.5283 63.4795 46.5967 cv
63.1431 46.665 62.8389 46.6523 62.7993 46.5693 cv
62.7593 46.4863 62.999 46.3633 63.3345 46.2959 cv
63.6694 46.2275 63.9746 46.2393 64.0137 46.3223 cv
cp
level3{
gsave
clp
[.539842 -.110099 .0852381 .175212 63.4082 46.4463 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.539842 -.110099 .0852381 .175212 63.4082 46.4463 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
64.2339 46.8203 mo
64.1909 46.8496 64.0835 46.8281 63.9912 46.7725 cv
63.8994 46.7158 63.8604 46.6475 63.9023 46.6182 cv
63.9448 46.5889 64.0522 46.6104 64.1445 46.666 cv
64.2354 46.7217 64.2764 46.791 64.2339 46.8203 cv
cp
level3{
gsave
clp
[.146933 .090056 -.090056 .0616172 64.0669 46.7188 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.146933 .090056 -.090056 .0616172 64.0669 46.7188 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
65.9194 46.5771 mo
65.9263 46.6709 65.6753 46.7539 65.3589 46.7627 cv
65.0435 46.7725 64.7817 46.7031 64.7754 46.6104 cv
64.7695 46.5176 65.0205 46.4336 65.3359 46.4248 cv
65.6523 46.416 65.9136 46.4834 65.9194 46.5771 cv
cp
level3{
gsave
clp
[.509919 -.0142303 .0142303 .196852 65.3472 46.5947 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.509919 -.0142303 .0142303 .196852 65.3472 46.5947 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.29 46.4863 mo
66.29 46.5752 66.0762 46.6484 65.813 46.6484 cv
65.5493 46.6484 65.3354 46.5752 65.3354 46.4863 cv
65.3354 46.3975 65.5493 46.3262 65.813 46.3262 cv
66.0762 46.3262 66.29 46.3975 66.29 46.4863 cv
cp
level3{
gsave
clp
[.424578 0 0 .188044 65.8125 46.4863 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.424578 0 0 .188044 65.8125 46.4863 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
63.9585 46.7588 mo
63.9404 46.834 63.6606 46.8682 63.3335 46.834 cv
63.0068 46.8018 62.7573 46.7129 62.7754 46.6377 cv
62.7935 46.5645 63.0728 46.5303 63.3994 46.5645 cv
63.7261 46.5977 63.9766 46.6855 63.9585 46.7588 cv
cp
level3{
gsave
clp
[.525589 .0532692 -.0390641 .15744 63.3677 46.7002 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.525589 .0532692 -.0390641 .15744 63.3677 46.7002 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
67.9614 47.291 mo
67.9614 47.3809 67.7593 47.4541 67.5088 47.4541 cv
67.2583 47.4541 67.0557 47.3809 67.0557 47.291 cv
67.0557 47.2002 67.2583 47.127 67.5088 47.127 cv
67.7593 47.127 67.9614 47.2002 67.9614 47.291 cv
cp
level3{
gsave
clp
[.402507 0 0 .190808 67.5083 47.29 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402507 0 0 .190808 67.5083 47.29 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
66.8423 46.5576 mo
66.8423 46.6484 66.6396 46.7217 66.3892 46.7217 cv
66.1396 46.7217 65.937 46.6484 65.937 46.5576 cv
65.937 46.4668 66.1396 46.3945 66.3892 46.3945 cv
66.6396 46.3945 66.8423 46.4668 66.8423 46.5576 cv
cp
level3{
gsave
clp
[.402391 0 0 .190753 66.3896 46.5576 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.402391 0 0 .190753 66.3896 46.5576 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.8418 46.3027 mo
72.8418 46.3926 72.6929 46.4658 72.5083 46.4658 cv
72.3242 46.4658 72.1743 46.3926 72.1743 46.3027 cv
72.1743 46.2119 72.3242 46.1387 72.5083 46.1387 cv
72.6929 46.1387 72.8418 46.2119 72.8418 46.3027 cv
cp
level3{
gsave
clp
[.296783 0 0 .190888 72.5078 46.3018 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296783 0 0 .190888 72.5078 46.3018 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.5571 46.2363 mo
73.5195 46.3486 73.1631 46.3896 72.7583 46.3301 cv
72.3545 46.2705 72.0571 46.1309 72.0942 46.0195 cv
72.1318 45.9072 72.4883 45.8652 72.8931 45.9258 cv
73.2964 45.9863 73.5938 46.124 73.5571 46.2363 cv
cp
level3{
gsave
clp
[.650768 .0970235 -.0780921 .235459 72.8237 46.127 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.650768 .0970235 -.0780921 .235459 72.8237 46.127 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.4409 46.4902 mo
75.3755 46.3906 75.5703 46.2363 75.876 46.1465 cv
76.1826 46.0547 76.4834 46.0625 76.5493 46.1611 cv
76.6152 46.2607 76.4199 46.415 76.1138 46.5059 cv
75.8081 46.5967 75.5068 46.5889 75.4409 46.4902 cv
cp
level3{
gsave
clp
[-.492886 .145733 -.138624 -.209714 75.9956 46.3262 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.492886 .145733 -.138624 -.209714 75.9956 46.3262 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.0615 46.1035 mo
75.022 45.9971 75.2549 45.8691 75.5796 45.8154 cv
75.9043 45.7617 76.1992 45.8037 76.2378 45.9092 cv
76.2769 46.0146 76.0454 46.1426 75.7197 46.1973 cv
75.394 46.251 75.1006 46.208 75.0615 46.1035 cv
cp
level3{
gsave
clp
[-.522517 .0862981 -.0827516 -.222247 75.6484 46.0059 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.522517 .0862981 -.0827516 -.222247 75.6484 46.0059 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.4448 45.9229 mo
75.5034 46.0518 75.3149 46.2041 75.0249 46.2617 cv
74.7344 46.3203 74.4531 46.2627 74.395 46.1338 cv
74.3364 46.0039 74.5244 45.8516 74.8149 45.7939 cv
75.1045 45.7344 75.3867 45.792 75.4448 45.9229 cv
cp
level3{
gsave
clp
[.465988 -.0931977 .122691 .272515 74.9204 46.0293 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.465988 -.0931977 .122691 .272515 74.9204 46.0293 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.1909 46.1748 mo
75.1636 46.3125 74.8032 46.3945 74.3867 46.3574 cv
73.9688 46.3213 73.6528 46.1787 73.6802 46.042 cv
73.707 45.9043 74.0674 45.8223 74.4839 45.8594 cv
74.9009 45.8955 75.2173 46.0371 75.1909 46.1748 cv
cp
level3{
gsave
clp
[.670791 .0591527 -.0567865 .291031 74.4341 46.1084 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.670791 .0591527 -.0567865 .291031 74.4341 46.1084 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
71.6401 46.3965 mo
71.5747 46.2959 71.769 46.1426 72.0747 46.0518 cv
72.3804 45.9609 72.6826 45.9688 72.7485 46.0674 cv
72.8135 46.167 72.6191 46.3213 72.313 46.4111 cv
72.0073 46.5029 71.7056 46.4951 71.6401 46.3965 cv
cp
level3{
gsave
clp
[-.493036 .145778 -.138666 -.209778 72.1943 46.2314 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.493036 .145778 -.138666 -.209778 72.1943 46.2314 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.0728 46.0625 mo
74.1309 46.1914 73.9424 46.3438 73.6528 46.4023 cv
73.3623 46.46 73.0801 46.4033 73.022 46.2734 cv
72.9644 46.1436 73.1519 45.9922 73.4424 45.9336 cv
73.7319 45.875 74.0142 45.9326 74.0728 46.0625 cv
cp
level3{
gsave
clp
[.466598 -.0933197 .122851 .272872 73.5479 46.1689 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.466598 -.0933197 .122851 .272872 73.5479 46.1689 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.5591 46.0469 mo
73.5591 46.1631 73.3047 46.2568 72.9922 46.2568 cv
72.6792 46.2568 72.4258 46.1631 72.4258 46.0469 cv
72.4258 45.9307 72.6792 45.8369 72.9922 45.8369 cv
73.3047 45.8369 73.5591 45.9307 73.5591 46.0469 cv
cp
level3{
gsave
clp
[.504857 0 0 .244133 72.9922 46.0479 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.504857 0 0 .244133 72.9922 46.0479 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.7769 46.3115 mo
75.7769 46.4023 75.6289 46.4746 75.4443 46.4746 cv
75.2598 46.4746 75.1104 46.4023 75.1104 46.3115 cv
75.1104 46.2207 75.2598 46.1475 75.4443 46.1475 cv
75.6289 46.1475 75.7769 46.2207 75.7769 46.3115 cv
cp
level3{
gsave
clp
[.296506 0 0 .19071 75.4434 46.3105 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296506 0 0 .19071 75.4434 46.3105 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.4043 46.2666 mo
72.4043 46.3574 72.2544 46.4297 72.0708 46.4297 cv
71.8862 46.4297 71.7363 46.3574 71.7363 46.2666 cv
71.7363 46.1758 71.8862 46.1035 72.0708 46.1035 cv
72.2544 46.1035 72.4043 46.1758 72.4043 46.2666 cv
cp
level3{
gsave
clp
[.296572 0 0 .190753 72.0703 46.2656 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296572 0 0 .190753 72.0703 46.2656 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.5596 46.416 mo
74.7988 45.8877 75.1899 45.127 75.7656 44.3301 cv
76.8413 42.8379 78.0073 42.4697 78.0073 42.4697 cv
78.0073 42.4697 76.8613 42.5479 75.5562 44.3086 cv
74.8496 45.2607 74.4795 45.9668 74.2876 46.416 cv
74.5596 46.416 li
cp
level3{
gsave
clp
[-2.63922 5.20489 -4.64346 -2.68121 77.3364 42.083 ] concat
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.63922 5.20489 -4.64346 -2.68121 77.3364 42.083 ] concat
clp
/12 /Gradient get_res exec grestore
}if
newpath
74.0181 46.2871 mo
74.2891 45.9971 74.6362 45.6641 75.0674 45.3213 cv
76.3647 44.2871 77.7495 44.0234 77.7495 44.0234 cv
77.7495 44.0234 76.3931 44.0879 74.8193 45.3086 cv
74.3228 45.6934 73.9629 46.0205 73.7026 46.2871 cv
74.0181 46.2871 li
cp
level3{
gsave
clp
[-2.27201 4.66976 -3.85479 -2.33707 76.6108 43.334 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.27201 4.66976 -3.85479 -2.33707 76.6108 43.334 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.3521 46.1963 mo
72.3682 46.1494 72.3872 46.1006 72.4097 46.0498 cv
72.7183 45.3584 73.835 44.8555 73.835 44.8555 cv
73.835 44.8555 72.5581 45.2949 72.1533 46.123 cv
72.1411 46.1475 72.1299 46.1719 72.1187 46.1963 cv
72.3521 46.1963 li
cp
level3{
gsave
clp
[.0413235 1.52317 -2.35382 .929577 72.9683 45.1963 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.0413235 1.52317 -2.35382 .929577 72.9683 45.1963 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.1611 46.3701 mo
74.0898 46.084 73.9736 45.7529 73.7827 45.3926 cv
73.145 44.1855 71.7236 43.999 71.7236 43.999 cv
71.7236 43.999 73.2886 44.0303 74.0908 45.4688 cv
74.2876 45.8223 74.416 46.1201 74.5 46.3701 cv
74.1611 46.3701 li
cp
level3{
gsave
clp
[.245508 2.80444 2.68039 .482259 73.0283 44.2139 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.245508 2.80444 2.68039 .482259 73.0283 44.2139 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.916 46.1963 mo
73.791 46.043 74.5425 46.0205 74.5425 46.0205 cv
74.5425 46.0205 73.6367 45.9932 72.5352 46.1963 cv
72.916 46.1963 li
cp
level3{
gsave
clp
[-2.08684 2.44418 -4.92549 -1.89487 73.8423 45.751 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.08684 2.44418 -4.92549 -1.89487 73.8423 45.751 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.2271 46.0469 mo
74.9766 45.9336 75.5757 45.916 75.5757 45.916 cv
75.5757 45.916 74.811 45.8936 73.8345 46.0469 cv
74.2271 46.0469 li
cp
level3{
gsave
clp
[-2.10974 2.471 -4.97953 -1.91566 74.9609 45.6797 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.10974 2.471 -4.97953 -1.91566 74.9609 45.6797 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.6665 45.9395 mo
74.8706 45.7109 75.1401 45.4531 75.4941 45.1836 cv
76.7183 44.251 78.5059 43.9141 78.5059 43.9141 cv
78.5059 43.9141 76.6426 44.0918 75.1392 45.1963 cv
74.749 45.4834 74.4658 45.7314 74.2588 45.9395 cv
74.6665 45.9395 li
cp
level3{
gsave
clp
[-1.3379 3.77788 -4.65982 -1.07166 76.874 43.5391 ] concat
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3379 3.77788 -4.65982 -1.07166 76.874 43.5391 ] concat
clp
/14 /Gradient get_res exec grestore
}if
newpath
74.7808 45.7178 mo
76.1177 45.584 77.3174 45.5947 77.3174 45.5947 cv
77.3174 45.5947 75.7861 45.5186 74.0508 45.7178 cv
74.7808 45.7178 li
cp
level3{
gsave
clp
[-3.15886 2.55589 -8.29991 -2.70881 76.2075 45.2324 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.15886 2.55589 -8.29991 -2.70881 76.2075 45.2324 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.4131 46.2393 mo
74.5815 46.1875 74.7627 46.1357 74.9546 46.084 cv
77.0493 45.5205 79.6929 45.4961 79.6929 45.4961 cv
79.6929 45.4961 77.0078 45.3877 74.4531 46.0469 cv
74.1943 46.1133 73.9614 46.1777 73.751 46.2393 cv
74.4131 46.2393 li
cp
level3{
gsave
clp
[-3.43284 3.40997 -8.55453 -3.03154 77.7778 44.8184 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.43284 3.40997 -8.55453 -3.03154 77.7778 44.8184 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
73.9629 46.3232 mo
73.7715 46.1484 73.5371 45.9668 73.2515 45.7852 cv
71.8584 44.9023 69.6929 44.8389 69.6929 44.8389 cv
69.6929 44.8389 71.9717 44.6973 73.6875 45.7334 cv
74.043 45.9482 74.3169 46.1445 74.5293 46.3232 cv
73.9629 46.3232 li
cp
level3{
gsave
clp
[1.81102 4.93219 7.28617 -4.15579 71.4678 43.8271 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.81102 4.93219 7.28617 -4.15579 71.4678 43.8271 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
73.2139 46.1846 mo
73.1133 46.1221 73 46.0566 72.8735 45.9873 cv
72.1729 45.6094 71.4321 45.458 71.4321 45.458 cv
71.4321 45.458 72.1577 45.5479 73.0059 45.9971 cv
73.1353 46.0654 73.2471 46.1279 73.3442 46.1846 cv
73.2139 46.1846 li
cp
level3{
gsave
clp
[1.05908 1.45287 1.76754 -.290739 72.0493 45.3564 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.05908 1.45287 1.76754 -.290739 72.0493 45.3564 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
73.522 46.0508 mo
73.7095 45.9561 73.9312 45.8555 74.1904 45.7559 cv
75.3691 45.3018 76.7847 45.2314 76.7847 45.2314 cv
76.7847 45.2314 75.3604 45.2041 73.9268 45.7383 cv
73.6187 45.8525 73.3726 45.957 73.1768 46.0508 cv
73.522 46.0508 li
cp
level3{
gsave
clp
[-1.8651 2.49572 -4.16534 -1.73646 75.6426 44.7559 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.8651 2.49572 -4.16534 -1.73646 75.6426 44.7559 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.7925 46.3037 mo
72.6934 46.1475 72.5503 45.9697 72.3447 45.7881 cv
71.6904 45.2109 70.5757 45.0723 70.5757 45.0723 cv
70.5757 45.0723 71.7651 45.0977 72.5737 45.7783 cv
72.8169 45.9834 72.9746 46.1582 73.0762 46.3037 cv
72.7925 46.3037 li
cp
level3{
gsave
clp
[.503763 3.72466 2.53257 -1.97941 71.6323 44.2471 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.503763 3.72466 2.53257 -1.97941 71.6323 44.2471 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
74.0454 46.1963 mo
74.1099 46.1592 74.1768 46.1211 74.2476 46.084 cv
75.2974 45.5186 76.5811 45.377 76.5811 45.377 cv
76.5811 45.377 75.2852 45.4092 74.0068 46.0762 cv
73.9268 46.1172 73.8525 46.1582 73.7822 46.1963 cv
74.0454 46.1963 li
cp
level3{
gsave
clp
[-1.53386 2.80449 -3.56877 -1.42925 75.6162 44.9902 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.53386 2.80449 -3.56877 -1.42925 75.6162 44.9902 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
73.3062 46.1963 mo
73.2837 46.1113 73.2495 46.0205 73.2012 45.9287 cv
72.8574 45.2637 71.6328 44.9316 71.6328 44.9316 cv
71.6328 44.9316 73.0322 45.1709 73.4824 45.96 cv
73.5303 46.0439 73.5688 46.123 73.5981 46.1963 cv
73.3062 46.1963 li
cp
level3{
gsave
clp
[-.0516387 2.11478 3.41664 .0561196 72.6294 44.9482 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0516387 2.11478 3.41664 .0561196 72.6294 44.9482 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.4561 46.3125 mo
74.3228 46.2051 74.1719 46.0947 73.999 45.9824 cv
72.6699 45.1143 70.4736 44.8447 70.4736 44.8447 cv
70.4736 44.8447 72.8052 44.957 74.4492 45.9834 cv
74.6353 46.0996 74.7974 46.209 74.939 46.3125 cv
74.4561 46.3125 li
cp
level3{
gsave
clp
[1.3603 3.73522 6.32469 -1.45051 72.2876 44.4287 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.3603 3.73522 6.32469 -1.45051 72.2876 44.4287 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
75.1958 46.2432 mo
75.147 46.1357 75.0781 46.0205 74.9829 45.8984 cv
74.4805 45.2539 73.2246 44.8789 73.2246 44.8789 cv
73.2246 44.8789 74.6216 45.1738 75.2598 45.9434 cv
75.3501 46.0527 75.4214 46.1523 75.4766 46.2432 cv
75.1958 46.2432 li
cp
level3{
gsave
clp
[.172675 1.80136 2.95298 .402289 74.2993 45.0254 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.172675 1.80136 2.95298 .402289 74.2993 45.0254 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
73.5981 46.3291 mo
73.3599 46.0645 72.9673 45.6846 72.3931 45.2852 cv
71.3164 44.5381 70.1509 44.3535 70.1509 44.3535 cv
70.1509 44.3535 71.2969 44.3926 72.6021 45.2744 cv
73.3071 45.751 73.6782 46.1045 73.8706 46.3291 cv
73.5981 46.3291 li
cp
level3{
gsave
clp
[1.78575 3.52174 3.14187 -1.81416 71.2021 43.7471 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.78575 3.52174 3.14187 -1.81416 71.2021 43.7471 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
73.8828 46.417 mo
73.7729 46.2158 73.6284 45.9902 73.4399 45.7529 cv
72.7866 44.9355 71.8311 44.6396 71.8311 44.6396 cv
71.8311 44.6396 72.8267 44.7949 73.6294 45.7646 cv
73.8374 46.0166 73.9893 46.2334 74.0996 46.417 cv
73.8828 46.417 li
cp
level3{
gsave
clp
[1.02458 2.89314 3.56854 -.820687 72.5884 44.4658 ] concat
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.02458 2.89314 3.56854 -.820687 72.5884 44.4658 ] concat
clp
/16 /Gradient get_res exec grestore
}if
newpath
72.6602 46.2568 mo
72.71 46.1494 72.7788 46.0342 72.874 45.9121 cv
73.376 45.2676 74.6323 44.8926 74.6323 44.8926 cv
74.6323 44.8926 73.2349 45.1875 72.5972 45.9561 cv
72.5063 46.0674 72.4355 46.166 72.3794 46.2568 cv
72.6602 46.2568 li
cp
level3{
gsave
clp
[-.172653 1.80114 -2.95262 .40224 73.5576 45.0391 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.172653 1.80114 -2.95262 .40224 73.5576 45.0391 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
74.3667 46.4307 mo
74.3228 46.2217 74.2314 45.9619 74.0498 45.6709 cv
73.5757 44.9102 72.5181 44.4834 72.5181 44.4834 cv
72.5181 44.4834 73.6821 44.8125 74.2783 45.7197 cv
74.4722 46.0137 74.5781 46.248 74.6323 46.4307 cv
74.3667 46.4307 li
cp
level3{
gsave
clp
[2.11426 0 0 2.11426 72.5181 45.457 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.11426 0 0 2.11426 72.5181 45.457 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
75.0854 46.3848 mo
75.249 46.2988 75.4351 46.2109 75.646 46.1201 cv
77.0986 45.4941 79.21 45.2666 79.21 45.2666 cv
79.21 45.2666 77.0107 45.3887 75.2285 46.1289 cv
75.0093 46.2207 74.8179 46.3057 74.6514 46.3848 cv
75.0854 46.3848 li
cp
level3{
gsave
clp
[-1.60072 2.53839 -5.50874 -.696704 77.4253 45.041 ] concat
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.60072 2.53839 -5.50874 -.696704 77.4253 45.041 ] concat
clp
/15 /Gradient get_res exec grestore
}if
newpath
75.5547 46.4355 mo
75.6484 46.0986 75.7847 45.6934 75.9819 45.2637 cv
76.5049 44.1201 77.2627 43.7139 77.2627 43.7139 cv
77.2627 43.7139 76.4736 43.9248 75.8315 45.2783 cv
75.6074 45.75 75.4663 46.1348 75.3755 46.4355 cv
75.5547 46.4355 li
cp
level3{
gsave
clp
[-.578554 4.64795 -1.9744 -1.3663 76.5498 43.2207 ] concat
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.578554 4.64795 -1.9744 -1.3663 76.5498 43.2207 ] concat
clp
/13 /Gradient get_res exec grestore
}if
newpath
72.7632 46.8623 mo
72.7632 46.9521 72.6133 47.0254 72.4292 47.0254 cv
72.2446 47.0254 72.0957 46.9521 72.0957 46.8623 cv
72.0957 46.7715 72.2446 46.6982 72.4292 46.6982 cv
72.6133 46.6982 72.7632 46.7715 72.7632 46.8623 cv
cp
level3{
gsave
clp
[.296746 0 0 .190865 72.4292 46.8613 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296746 0 0 .190865 72.4292 46.8613 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.3901 47.125 mo
73.3901 47.2148 73.2412 47.2881 73.0566 47.2881 cv
72.8721 47.2881 72.7231 47.2148 72.7231 47.125 cv
72.7231 47.0342 72.8721 46.9609 73.0566 46.9609 cv
73.2412 46.9609 73.3901 47.0342 73.3901 47.125 cv
cp
level3{
gsave
clp
[.296612 0 0 .190778 73.0566 47.124 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296612 0 0 .190778 73.0566 47.124 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.2515 46.2959 mo
73.2515 46.3867 73.1021 46.46 72.9175 46.46 cv
72.7329 46.46 72.5835 46.3867 72.5835 46.2959 cv
72.5835 46.2061 72.7329 46.1328 72.9175 46.1328 cv
73.1021 46.1328 73.2515 46.2061 73.2515 46.2959 cv
cp
level3{
gsave
clp
[.296898 0 0 .190962 72.9175 46.2959 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296898 0 0 .190962 72.9175 46.2959 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.5444 46.7627 mo
73.5444 46.8525 73.3955 46.9268 73.2109 46.9268 cv
73.0264 46.9268 72.8765 46.8525 72.8765 46.7627 cv
72.8765 46.6719 73.0264 46.5986 73.2109 46.5986 cv
73.3955 46.5986 73.5444 46.6719 73.5444 46.7627 cv
cp
level3{
gsave
clp
[.297245 0 0 .191186 73.2104 46.7617 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.297245 0 0 .191186 73.2104 46.7617 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.2944 46.7627 mo
74.2944 46.8525 74.145 46.9268 73.9604 46.9268 cv
73.7769 46.9268 73.627 46.8525 73.627 46.7627 cv
73.627 46.6719 73.7769 46.5986 73.9604 46.5986 cv
74.145 46.5986 74.2944 46.6719 74.2944 46.7627 cv
cp
level3{
gsave
clp
[.297105 0 0 .191096 73.9604 46.7617 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.297105 0 0 .191096 73.9604 46.7617 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.6143 46.9473 mo
74.6143 47.0371 74.4653 47.1104 74.2808 47.1104 cv
74.0967 47.1104 73.9468 47.0371 73.9468 46.9473 cv
73.9468 46.8564 74.0967 46.7822 74.2808 46.7822 cv
74.4653 46.7822 74.6143 46.8564 74.6143 46.9473 cv
cp
level3{
gsave
clp
[.297105 0 0 .191096 74.2803 46.9453 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.297105 0 0 .191096 74.2803 46.9453 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.877 46.4902 mo
74.811 46.3906 75.0063 46.2363 75.312 46.1465 cv
75.6172 46.0547 75.9194 46.0625 75.9849 46.1611 cv
76.0508 46.2607 75.8564 46.415 75.5503 46.5059 cv
75.2437 46.5967 74.9424 46.5889 74.877 46.4902 cv
cp
level3{
gsave
clp
[-.49291 .14574 -.138631 -.209724 75.4316 46.3262 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.49291 .14574 -.138631 -.209724 75.4316 46.3262 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.6763 46.5225 mo
74.6763 46.6309 74.4507 46.7188 74.1733 46.7188 cv
73.8955 46.7188 73.6699 46.6309 73.6699 46.5225 cv
73.6699 46.4141 73.8955 46.3262 74.1733 46.3262 cv
74.4507 46.3262 74.6763 46.4141 74.6763 46.5225 cv
cp
level3{
gsave
clp
[.447741 0 0 .228608 74.1733 46.5225 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.447741 0 0 .228608 74.1733 46.5225 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.9106 46.7285 mo
74.8267 46.71 74.792 46.5703 74.8345 46.417 cv
74.876 46.2627 74.979 46.1533 75.0645 46.1709 cv
75.1484 46.1885 75.1826 46.3281 75.1406 46.4824 cv
75.0986 46.6357 74.9961 46.7461 74.9106 46.7285 cv
cp
level3{
gsave
clp
[-.0675658 .247741 -.17899 -.0379317 74.9873 46.4492 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.0675658 .247741 -.17899 -.0379317 74.9873 46.4492 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
76.0903 46.6982 mo
76.1304 46.8164 75.9487 46.9668 75.686 47.0371 cv
75.4229 47.1074 75.1772 47.0684 75.1372 46.9502 cv
75.0967 46.833 75.2778 46.6816 75.5415 46.6113 cv
75.8042 46.542 76.0503 46.5811 76.0903 46.6982 cv
cp
level3{
gsave
clp
[.423744 -.112446 .0852223 .248565 75.6133 46.8232 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.423744 -.112446 .0852223 .248565 75.6133 46.8232 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.7427 46.4658 mo
74.729 46.54 74.5234 46.5742 74.2827 46.54 cv
74.0425 46.5068 73.8579 46.4199 73.8711 46.3447 cv
73.8843 46.2695 74.0898 46.2363 74.3315 46.2686 cv
74.5718 46.3027 74.7563 46.3906 74.7427 46.4658 cv
cp
level3{
gsave
clp
[.387927 .0533845 -.0284717 .157781 74.3071 46.4053 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.387927 .0533845 -.0284717 .157781 74.3071 46.4053 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.4468 46.5352 mo
73.4521 46.6445 73.2319 46.7402 72.9546 46.751 cv
72.6768 46.7617 72.4478 46.6826 72.4424 46.5742 cv
72.437 46.4668 72.6572 46.3701 72.9346 46.3594 cv
73.2124 46.3486 73.4414 46.4268 73.4468 46.5352 cv
cp
level3{
gsave
clp
[.446923 -.017735 .0118234 .228191 72.9424 46.5557 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.446923 -.017735 .0118234 .228191 72.9424 46.5557 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.8706 46.3799 mo
74.9004 46.4639 74.7241 46.5869 74.4766 46.6543 cv
74.229 46.7227 74.0054 46.71 73.9756 46.6279 cv
73.9463 46.5439 74.1226 46.4209 74.3696 46.3535 cv
74.6167 46.2852 74.8418 46.2969 74.8706 46.3799 cv
cp
level3{
gsave
clp
[.397942 -.110145 .0627706 .175284 74.4219 46.5039 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.397942 -.110145 .0627706 .175284 74.4219 46.5039 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.0771 46.5234 mo
74.0815 46.6182 73.897 46.7002 73.6641 46.709 cv
73.4312 46.7188 73.2388 46.6514 73.2334 46.5576 cv
73.229 46.4639 73.4136 46.3809 73.6465 46.3721 cv
73.8794 46.3623 74.0728 46.4307 74.0771 46.5234 cv
cp
level3{
gsave
clp
[.374823 -.0141889 .0106417 .19628 73.6538 46.542 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.374823 -.0141889 .0106417 .19628 73.6538 46.542 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.7344 46.5059 mo
73.7344 46.5947 73.5771 46.667 73.3818 46.667 cv
73.188 46.667 73.0303 46.5947 73.0303 46.5059 cv
73.0303 46.417 73.188 46.3457 73.3818 46.3457 cv
73.5771 46.3457 73.7344 46.417 73.7344 46.5059 cv
cp
level3{
gsave
clp
[.312536 0 0 .188232 73.3823 46.5049 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.312536 0 0 .188232 73.3823 46.5049 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.6372 46.5303 mo
72.6372 46.6191 72.4795 46.6914 72.2856 46.6914 cv
72.0903 46.6914 71.9331 46.6191 71.9331 46.5303 cv
71.9331 46.4414 72.0903 46.3691 72.2856 46.3691 cv
72.4795 46.3691 72.6372 46.4414 72.6372 46.5303 cv
cp
level3{
gsave
clp
[.312905 0 0 .188454 72.2852 46.5293 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.312905 0 0 .188454 72.2852 46.5293 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.9839 46.6309 mo
72.9507 46.7002 72.7412 46.6885 72.5181 46.6035 cv
72.2939 46.5186 72.1396 46.3926 72.1738 46.3242 cv
72.2075 46.2549 72.4155 46.2666 72.6406 46.3516 cv
72.8643 46.4365 73.0181 46.5615 72.9839 46.6309 cv
cp
level3{
gsave
clp
[.360494 .137106 -.0709168 .146561 72.5815 46.4775 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.360494 .137106 -.0709168 .146561 72.5815 46.4775 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.8174 46.3457 mo
72.7832 46.416 72.5747 46.4033 72.3506 46.3193 cv
72.127 46.2344 71.9731 46.1084 72.0063 46.0391 cv
72.0405 45.9697 72.2495 45.9824 72.4731 46.0674 cv
72.6973 46.1514 72.8516 46.2773 72.8174 46.3457 cv
cp
level3{
gsave
clp
[.360725 .137194 -.0709623 .146655 72.4141 46.1934 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.360725 .137194 -.0709623 .146655 72.4141 46.1934 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.5205 46.6436 mo
75.5259 46.752 75.3052 46.8486 75.0273 46.8594 cv
74.7495 46.8691 74.521 46.791 74.5161 46.6826 cv
74.5098 46.5742 74.73 46.4775 75.0083 46.4668 cv
75.2861 46.4561 75.5146 46.5352 75.5205 46.6436 cv
cp
level3{
gsave
clp
[.447268 -.0177487 .0118325 .228367 75.0161 46.6631 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.447268 -.0177487 .0118325 .228367 75.0161 46.6631 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.5527 46.3223 mo
72.583 46.4063 72.4058 46.5283 72.1587 46.5967 cv
71.9111 46.665 71.687 46.6523 71.6577 46.5693 cv
71.6284 46.4863 71.8047 46.3633 72.0518 46.2959 cv
72.2993 46.2275 72.5239 46.2393 72.5527 46.3223 cv
cp
level3{
gsave
clp
[.397857 -.110121 .0627573 .175247 72.104 46.4463 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.397857 -.110121 .0627573 .175247 72.104 46.4463 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.7144 46.8203 mo
72.6836 46.8496 72.6035 46.8281 72.5361 46.7725 cv
72.4688 46.7158 72.439 46.6475 72.4702 46.6182 cv
72.502 46.5889 72.5815 46.6104 72.6494 46.666 cv
72.7163 46.7217 72.7466 46.791 72.7144 46.8203 cv
cp
level3{
gsave
clp
[.00114939 .000949492 -.000699626 .000649653 1126.15 262.73 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.00114939 .000949492 -.000699626 .000649653 1126.15 262.73 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
73.957 46.5771 mo
73.9619 46.6709 73.7773 46.7539 73.5444 46.7627 cv
73.3115 46.7725 73.1191 46.7031 73.1147 46.6104 cv
73.1094 46.5176 73.2949 46.4336 73.5278 46.4248 cv
73.7603 46.416 73.9531 46.4834 73.957 46.5771 cv
cp
level3{
gsave
clp
[.374761 -.0141865 .0106399 .196247 73.5337 46.5947 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.374761 -.0141865 .0106399 .196247 73.5337 46.5947 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.2305 46.4863 mo
74.2305 46.5752 74.0728 46.6484 73.8789 46.6484 cv
73.6846 46.6484 73.5269 46.5752 73.5269 46.4863 cv
73.5269 46.3975 73.6846 46.3262 73.8789 46.3262 cv
74.0728 46.3262 74.2305 46.3975 74.2305 46.4863 cv
cp
level3{
gsave
clp
[.312765 0 0 .18837 73.8789 46.4863 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.312765 0 0 .18837 73.8789 46.4863 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
72.5117 46.7588 mo
72.498 46.834 72.2925 46.8682 72.0518 46.834 cv
71.8105 46.8018 71.6265 46.7129 71.6401 46.6377 cv
71.6538 46.5645 71.8589 46.5303 72.1001 46.5645 cv
72.3408 46.5977 72.5254 46.6855 72.5117 46.7588 cv
cp
level3{
gsave
clp
[.386899 .0532429 -.0283962 .157362 72.0757 46.7002 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.386899 .0532429 -.0283962 .157362 72.0757 46.7002 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
75.4624 47.291 mo
75.4624 47.3809 75.3135 47.4541 75.1284 47.4541 cv
74.9438 47.4541 74.7949 47.3809 74.7949 47.291 cv
74.7949 47.2002 74.9438 47.127 75.1284 47.127 cv
75.3135 47.127 75.4624 47.2002 75.4624 47.291 cv
cp
level3{
gsave
clp
[.296751 0 0 .190868 75.1284 47.29 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.296751 0 0 .190868 75.1284 47.29 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
74.6377 46.5576 mo
74.6377 46.6484 74.4878 46.7217 74.3042 46.7217 cv
74.1196 46.7217 73.9702 46.6484 73.9702 46.5576 cv
73.9702 46.4668 74.1196 46.3945 74.3042 46.3945 cv
74.4878 46.3945 74.6377 46.4668 74.6377 46.5576 cv
cp
level3{
gsave
clp
[.29676 0 0 .190874 74.3037 46.5576 ] concat
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.29676 0 0 .190874 74.3037 46.5576 ] concat
clp
/11 /Gradient get_res exec grestore
}if
newpath
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 ]]
] del_res
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 12.0.0
%%For: (\704\754\750\762\760\750\751) (\764\773\742)
%%Title: (eco5.eps)
%%CreationDate: 11/20/2008 4:39 PM
%AI9_DataStream
%Gb"-6H]KGoE@:O2"8s8**s*YS=GR64KEiY+a@@OXGG7(T8@Mb.Ma;-U8bT/+ZTUJ"nNQo>R@BV6H['(4<oo-3ZHK/D]-8I_gcaH[
%D*RpNch8H0I/i#lpV5U8pj[d=2_E5/Pl.'oju_bHQS3g]ZiBa]\$(;Fh/o8uR,H8Ws1u/d5CE@g]@ZL9IJ*-J\$(;ViUGgnLQ=[t
%o'Z"f=7>U,rTa.HafE&RnbVY-&-$paJ,ANcJ%+>2qT&'>J,AC$GOWBY5CS9hs75T)kiRZPTC-m[IJC;'hn4C9+0XQshsC>+gl;'W
%h1/l35KZ.(qXle^qY9?f2p`:e5--rG5%m?6rsjbbrC"0Ap$_eT[r6coiR>hKT0@Y`#B&>lrMr_d?@R@K2f1\MgE6Cp1S3ObeGK#r
%5J4kpKg([n!W@FfHLpk'l,1PcY<Lcrqg?fQ)>s(:0EYEYr&8!_qtK!^rUIMO?bs%^rf1Uc"+;qS6be$IqU6g:"tV7;W5Gh=a8^R<
%)1Hg#IDAj#J+KkYIJs%%2"`dLhZ(ooj3>@;e_\$e?f&U1n)H8%0Z$':3VjW-poCkGrpA7j]3i>PmL?8=a&h_:_b8n%rUKR,o:4c4
%GNH9:If/uPrY54/5Q0-Qf<=*'a!6#GqY7P'^FLD_q]u\h1&$(o^OLY(_]SL\gO%e.oFYnk]V8cJrr,oh1TXP^Nk`CNEd[ht=$OFt
%PaD6Lg]d`Uo^f]Mqes3h.mMCi,0aZZ!>#%]R.Q!;?]=be\S_9ur&:.J4.i/:eQ57g`ftCt_jq>-n\ecO<tCradi`X_r6stUhnOU4
%kr##@57I8ecSGFUr*+&mNCUJV_VNP]!kT)*q(PKdBisfZ1lQW%\bc]9n/'6XJ,LI-?N91An,D)-=5U^jaSU5Vn^H*.r]f&=cj't`
%[eF]iI/Ed#5JM^>$!&\,[3`SG?[qk=p"R,Vq<OrfYAig]oqDEW*WPcsj6p?)6Gi9d7sl'D,l[-PIsgu$YQ"=nit'Sso$)*eJ,TA=
%55[W%ctQ8L;n-mW\t?k\b]F3V/qmG7(g_4E4\E39#PK9gchNC3JqNcdO)KLIk5?rEE&/'%2rBnL2o?j%s3Uu;PPMQ++!)fR)MlR`
%)>H1>F80nB$/QT'g<UhsIs:\W%Ta__r6P(UI,Dh]IJ`!tr+Yt\5(ao*r17Oe(V]^c&+G93n$1c:0E*\UQG31[m>pbqY<IF1nb^(N
%s18dp?i1@1X1PQAIJO&9gt2#0qr-^^HnGAEQbNT's5D4PaMn$XDnc8I,@1;ta&h08_s`'GDu].r[rAGJL+ed@IJkB%PtS^b.b!G8
%][+Lnpu;m7\GN07+5Z9Zq$-gh7gtk<J*4.`Lu-p6!.=S;G(+]/p?e@,Isgqf+5VD"lbE&%5%rugQTY!-De[aK:TQe/LTS>]Gru<J
%qKHl7!sQB5NF,`S_n5A7(q]\A&$N^fbBW3lgj.$:JYdoo@GWSAI<Z:NeVEU#Qg8tZ'g2!#^\[a(7>pcXGQ7Bqm@,3SPr19to\Z!W
%"m#-I)%QTPJ,^#Y^?CfqIJ*Tia#j,_7miO*X&hRR)JV^m9"3auTU_<'ro+_I?N<mS^UL";"O:B2rQRRAJ,efilgO7jY;.MJe@Q&u
%J%FBap[Z;<^3oI[044M8(VfQgJ+,u.i(mbeA!hiU5(jKb*"oV)m(tq+_D+0+;]Od6Vs%WH1!\-D>iIC(iuoK(_oikd1_91;:U?Ph
%*8lQs:@g70k5B[pO7U8:8jaNGP[*e+Gt`9OBh>qD:PX$c&*^G0b6Vrggu9+]$C83G93Ugt\*TI!Ea0ZOe&rPW7l)"Y5GPYYS#`"0
%(8sZ:^e';a>GAQFgM,D@4&A#-p-A"u%3D'i5Y;old>]1c/DW9a9B.3P3//Y/h/PWqoT(]:j6h/BG!%rR4&M=h[->Cmo+1='*o[8Q
%j?n5q*d5p(%gTc?iSibfE&n$_5E2T*jIj<s4[j%gkbmOL470R!9KSh[Hk5jOmba@;*dIudro"p=/)#*Z6'(]NkP$VcfVe\\O8H0U
%HafX@j*oXO?tk\6_f!6Dm?V&3c+CIn425jKBfGI7jTN3b#eP'e]+Uo=fV<EmY[\^?>S*<h+e<""+(87>@<XB/b@fJp!Hu//h*7cF
%5/BlS_Pu2*kucl.J1^pO`l#od@#GH_iZ;K;*8kZ#,4$()Beu8>30nO[*1Xi"%RJDA]^bMK^^bU>ST'*BJNI@m4Yjom$*\=fm%ElW
%JCjVtHg>Y+_`lhkDG.5*,4%UFFN<W**X?r3%u92g(C0lk+*NG$O:Lk**l>`8ggN7&LOhA!_u@/1m.^D5IPL0??U7f3QS4e-jE6\)
%\E%&_/ik+>c9lYjJi;TrRnaV*It@\rLC(PI0>fP@BnE1M?n%s,H"_*4+#n/2,s]6*#n@G=BnRXjq[jkSKE[[5:1,&meA7Q+#N-EV
%Ur#$APD]YUcglY431fhtVuXIAfL:p9Kr8404,^g@1[oTQqe#kj#V52<+Od)B4g8OC%iYMOiKZ.5RtQ:,CCYg(.lX4a2;\L1"JlHI
%($P($+SXdKVRQL733ES&k-F?7[s@i54@(XMX^=?>K%n9k%LIINb<>EK4$/n/pOQi,*t*i;#'M_")u<fV5dhF;>>qgZ`**H>K-AL-
%-jM*A5`fE$lsZY/@FLb)h2\_)*,I)Aqo]e[`FbM4!ZQ%g>OVof&S^S3]4Z_Tl=!+*D;XCi[rZn?E(?_U5_B<7r"JF0r!>R`)4<,D
%(X%%2la=r\<otq![kQ_H8:W's&;^]@+:sqQ1Fn3G=g9[@b`7B#B9o'UZEWH7QnrL^k5=d=MTh_LMp>!WZg#]4#@c3(WejkG6Y;>E
%3YAtnL7MI*12RR5J.(=/_6Z*%&TBuB4:m/GA,umfO2*CL\H&W2UuQt^$7XX<\^uWb+39?b15!aO7hR/-'7lk9U[W%eP^pIKJU/G&
%Ks)S4!5(96@3,[l2HV:KCGS]k8DF9B%blO?+*(cMWgU%8%3aF-,gl^mbR>FnG%THb81?]b=SEuFDJVj<JAn.JKhqXH$"#]tF3cBX
%R<g-u*gs\dK29GHD55'pq',i5b^WCi5i%H#g\s2F_goLqa&?lo7-O*fb%I&"?qFGTrDWD<UL1JclYDuI4sE+H!6J^27S@Cnd,u['
%VTnS]c`hoQht.kQ5T@uJ>;<T%FfiG0FHlb84c06PB/Y$C)I*7-TL/3Mj1Cu)"8B1S^SU=b%C^2$XEfadA`1#+K8s&Y_P%S!+&n2#
%@3-B[."_DZs%dKZo^?ecD\,`7<>,T.YApn8<Ke$VImK.XC)MBo[sX(>ZiAlC4>Q6qTd%0\kl/#:WdV>CZ&H-*E`(:->0$K[2/P*#
%Mg]4WoGF4MdT/a.rFntS%<7J,q8gJ]Tjo\f$l:@_6e'#+i<(Gp9h0(7.u_o(eaU`"D-XIXqOF0&r1pr]`p3@u2%"XboGFr(<b5-r
%9r-,gUt"gk@bXh#.lA,h/F)U<ESj`KH`^2+05GuI>FuEh?I"?ZqLK]+r:?c*^UtV;!cnh`C?Y1+;pMp3d%B8g@m&N;%EJ8,gZ-4!
%NCSqANu6UIT8:<o14T&ue[3><GD#TloN9>`h5ent^S6G&S*DKT[^al/*;62*7`uHb>;RhuJ<qYAm1D=k-[DIEB.f771I9LX(c94-
%C!<!I5r4ue`Lpp=RUfbRB&R4M[&2ekeeI^p0bB8"=H(0S3Af)Zbbei_fi0NBibU4_K5ideB;;`!NO.S'Ru[5!baRlYBL'iijD760
%B&mc!cDG,/->.Dj/hYd63H2p4S;k[)<X--cVIaEh;BEqbK'!h*e1BYn_M@($6L`@K@Z-O&'WobDH6T["]DsdsTW,rK(h%E'dPr+$
%7c=I>bP6_@?F8Uak`#fK"[Ec<akYn6'qr_SNC@MmEet^9,8lDt\JPdqfjm4-d%AS&-Y#2,j)Ht!UB,Y<7c]dCaY.#"0fcI(g#qe#
%8I`if'?Mf8AqBlY7cnN#hQsI)Aj%d%OrBpunN"'TBd9ag;LXuu=5&l%WQ"gHokLNl[i4kT->dL6/`!]f6oK>F[\c8ne8UmU>frgr
%-hD]aVP,gW.a.:;ip93g847Z6dOkSuT;(k[I\V(l,>f\Y8"bp"Me+&;CM(aq+R52nH]B\,,JBrfdAdGG=%BP/maVUG%;8feg,5(2
%0i7I0`>i)(a%Xa6St3sLQd(NC;6qY8[Nf!'dC>MraM'ZuV)-jg4]+=3<,^b*Rl=#akWBCc4;&[YP]0D6eK*=D(NP`dU5\=(M*r9b
%]6ueEAmIT,q%3$"bXu%s=<<lR*f,9^3jO*g>X['S;q0TY=HS:se(79'*BT?0VRE7;nIsWDWF^_HOW,ssZKK4<>N@/OS%1t*JR$QQ
%.CNm#S_Kr7Nd3Wk-Z'CJNm_7J+?OmeHdd/l(=VWrCg&A!H43gF<HD00Rb!oIL`esD8gK5UeErsYNnnl?#(5^_[/HE$Hb;)r]=t,D
%#!HjQG.n9Z)0af#:?u,0k"]D-Z*HfPDX1N4>!!QYkcqRPfs^R[9qWT9&pE%"CcejiGfsiL^@eSH40f.d38mn2O#>pe>F,,,QM\]J
%l>%^<1Rc,t4lZ:Kc85+2Y0Qg?d?H;K,G$B9gqLfYgu*+-hjk'BBs`e@.*="V"__9aOCCRT7$B$&"DSL1K2SosM)pduO>Ve\J0$5s
%!VM2?H:+ejA;t"@D#me+BF.*t+:S@IJ'eg2m9j8b"d=\('WiMD"FCS*JMG%A'C,b,d0+29T[j*Xl/,&28F+ggDs=g/elLMn:t[]@
%Kg!n_T'*(`mD5j%+S<0K8J`JBN3#f[d?J])'SWgSLb8)eX$=>=!MN"Z0cnmV,_'@T-]S?ZI#\;[Gl8`N)rUC-fA=4BlN^_m10:!'
%IAo=$En:)U]G(2B7iK(glWQ@L$2&Q)4(Xu2rnFg&-f*sM:Z7hu2QJ4X]rni2WNKsQ,e(HO[K!,eIB#G(dc8W[79`YQG%ONQ:i3Xc
%nQ;ukE5B7IDscA-m#J(1Z1TBNhS_[/X@LTser1Dk>^IPs04Z$`nXs'sB^3-j@V_]M6uu^;27%$k1bD\O[gdX7\phCgf/;c3I<Bp4
%X$"E=IY7Sa\!%fRlG)R&Gd;b]cd9^Q9tRsspt+&klsl$CFIKX7,qVr`jEAtg.W+/+M^ES_,VO-56;CkV*"OLGOSb3T5]Ml1frs0@
%HE:Qu(UAcer*tb8*([T(kXUMYjLE5MonYhGZfA")QS2%^,MN#?m]hdtguXpD'(JL$Wl.#oJ;lHX&EQW\Jk]7tRAe0$,V;RJUPW#k
%lY&e]9^=[YF]>,q@BAK#gZT6r9cK,!jtt&1<D7LmBpQ@4[tPmL`K`OuajFnUqr_N45<X1UK[$c]T7-NeG#<(MB?O&u#hgV[[bae,
%NYZeDhGq1"B@V@0NMuNUa%T_imkOCsjaC0"fZIO,]5?cO8$-u@)e#6$kZZhkqc,K?6bNl>O]9"r-<J;RD+%=704AK[O(i*ReiU5T
%qp^fiZOFC8kjsI@USmQj-.%t0[BTcr:O29j?MgG*i`^28lT1T[-?\]MK^2g>?<\o2QH`a/gE;WH<U9\WmBV-jDJn3kN."p8ZmL+(
%)thji9X!2LU)n[4nOK)=W0Xl=:9,r>(Oi-f^\Pn&ig6\49OgR1=h,$,qf1]pNs@!BYcU3#)>Fs.Hk8e.+eGcI;):S8/LF!K5]/s3
%'4IkqE^a<K0Y&C6VJZ%t777W+h0]gZ(*W-CaVG1_Sk,Ep3L+,M:$'#MOn6[Z<KGliG!B$,(Q$YJV6;H\D03If5*D*TGtDKDZ17$(
%;lQH<UWlsTb?+$UPP/0b[G"2R>a)dgha3Acijnk\p0:[>?C1D03H+&j^jf;#CMeI)E7GSblnsb[ZIH<^>d'.&4dXO,(!HJ]PL00(
%l1'%Fl8]l5,HB!6e^gjGn4(kn'h>J?8H:p-=Fq/WYa6'Q.XE5+Qn5.t!Wtr);.K[Je-D!<O;NM9^&DkrQ6c&C](&qg7sXp)MTui!
%8jB^bPC#0p\"D<bAc6@[?q*t>W%;A*.p-ZeMAJacXCG<E7BVlb(!i"d*3[5a.S#N6gN/$?ilDgj8[2-;&""]t7,lnlltI[SDrsS&
%PGE&YMgK;I[90i0c"j'rkcmOF9e)A:-L0s9C.O1D>K<<MDpqB?VUjqk/"b:8`oeVP"sp[F4=0(g==6*&;k+Z4d:[6?[do7qDWPlf
%H/GL@C-M@ORs*q,UW9fu.iS&)l+Q&]#!LO!l\b./^2_Ymj$\15+9di;1^?S55d-rk@[(1<k_huAeHZp$]_4HAq\-OmG1p1YP)a='
%=gOSQrUH.94Wg>jM4V''B;[J*&hV.GkN*(=G9epra8O^O\<1:Y9#R4;]$8Hc1,jePVVF\?cH\iX"q,1]d:Yt02d=cZO*nod]GU,P
%OJ,Gsju79R(\/4YlRSJNo9'aD9@:Gs8_>!.+;#ogGMj=p"%DZ2*4_Pen&=mI,bOs/UN7Z,gaC$?7#sFKj(;*aN[&L!:dYG$(`B"*
%807FE"#FIa#"S;Y-l:5]TLqb[&jn>YI2WuNT`naN'WKHS`\q/H6FrrC\^.s:k]M>r5@YUBKr13Wg7e@eVa6B!b0IBG[]BBZP-W@.
%DZ*\Ubt5@hp8h`X.X!HA0=al[?c<4MH,;I7VY+a?\R.Hi6TML8o]?g7_JFI<RSR\=P92\")I";=UoIJ4U7Z*KCa315p-2cY7@OnF
%7e@\JHpe4>s44&n<6UYHN_d1Tc[T)Y>HrY?A,b[J!\\lT,5'S%9Og&XlWZMU,KlIQN&pO+NG3+%'C,>o'2?N9^@bhsk*s"U?W.E5
%A%[4Z6b3$O[V_e[j3nshpAK/Z>([mJ=.f-f4dM_rZWiH[?_5YK9c@3;?Rq,YlE]KFA3D*"jm8MQ%@dsW7//[#FUch],,*f9Um!?_
%Fb<P2HUbY.'"Q>e2];@%;OKSM/BVu]+lM]irY-':N.WpK6n)4tOeopKXeQ+%U16;*!Mf7$q(26bK0[j&%r[A`Z`'M*kNOS4hGi5g
%;2anq2f#?QCZ0@cqkgW;U<i8h$hi;"p=EG#mu`$?ftUb(]88\_frKHD%p\hCq#bR^o"-4AiZ?1]Fs>ht6pA![/%;_ln&U$"),/=3
%OBfd3fTSF<A:/n>,C27b@@,Z(2DQ?(ML$nuE6F0gp"q1K7r:odKC^rAR]\ThEkT>>H<ulET;:Z-Y[3'4F$euI*_cX[adgn%?KKE%
%\V673bk^q%[2.DPOAE0Pk+lXYcS[R<Yd&$HhETaENZ*3hN_F_TZ5BUP2gTVKRmtQJRmfhaXU)R]"6URp[c(*DLA*%\0K5JJR%oH>
%X.SlXTE?JNEF`[1ilL*abt1%'mj4GAZX60W'9h^]UdDn:7D"g,M*mSV7F#&s^aRU/+&)[.j=jJa(!6!gdWQP>>hYKd.eXcb&_;-*
%IQRQsDtP%GNbVd(%>V?[3Y&@DFnV(I_to50L=eJu3r3_Uk0BC@eHZ+<L<:_QZtC?J=.VHsU/NO(0'I:0HC37$[Tb\18t+&:fA]_t
%l>IKpbO;aU*OC'iNJZ"a#`aB_0b5SY+eG@a#.\:ce$+j>%95$X`Lj,kAl]]9<^Z?EaAo!_cH"Z4*oGE6[h.5aeC:@8dCo?]MDp*"
%Wn;ir>(FZu`-E/GV1V>;I%>1!(*KJ]ed<[GTTXXb(r4F+pKlUeM,+0(WO".E4:>Zl0%ng2.bhPV[c:&52S8C)(>[[!3>61JM73;'
%9mu'Y^Cu'A-AJc-]KEZD/PELb36""BdDdr%(Z7@r$GL!bV:NYceWFSj!Ui#j=Q7jP33\6fIOm6K)SP:c9.4+6nKNj';7*'l58e=>
%dd?aff!s:&c]\L[]<BWB<N9rufkqeXUQV_$Z50!K,JNBHLn\5LbbHm[O$j;FNs<0@iofR248Yp4eY"S,(Z+9#+TF&"`(S1aM]YG=
%ZuJ;9,k#^@k96Whke(>;@",<YC<#m7WI/lB"\a`a_gN/N?E+l`5N2pC_#n#0qdi@*H1^cXPik7ISX;l&LX-%j36q96^g\>uo^m7T
%A*KtO"[AESdRmh=p]kmsijT-9TU`8OmUjC=4lpn$geVA;A[8B/bl5c#*%peMhp4s,i4=8?jQ(kEgmMAWUYomBHXPNJKan"IY+?(7
%]i"Q4r&Ib51(_k.PN@^3NY$h1+ip&W(U@h5CdhBa=aM08Bo/Vs^/P\(93Bgt!'OB&]?1tP7AS$BnZ;;"'n<"LZS>5iI]Ma<28?*b
%U?Gf-h^\DX""QcZc-#BZNIQ`+oisSJo.j&:pI$.W:<eF16l9_6E@/9m'olg;b-*JhX37^6OO:f,2$q]T303]+P3<89gD,\9K(GNA
%`j\D3<da@Pc%O1Y6/AW#C5<V2/ZFjY]3;?>af^rp?G978Nq6/KJf5Je['ii?nX$jKrXou_;CO3P-H.SdQH@]1\MMncfe/\6![tg:
%E+d*=Gu1Oeg*J2nhn2:>qH/@@Cmnk7*3N3ZXa2s)m0fs3Y/?oia^L_?\2H7\IPf>FF`(549^B-oN_8W#/FLR<>kABl@f_$0`6X:J
%`rbjBJUS<u#8TFA5aB.`=MQ!dq(o#4<+(2N.aG%5L0Q41"2q\n%'3A*o2l(1,GCNdJuP?.Y1qG3B[C6R@CG(A,7X>ho[q!t0eGT;
%6JEuWgGWnm]<1+<ZtU`63d$b;Fe8fPG922dLB;Y"M(&"&^QqF*OpFAAES*ukMrgCB//AA@Jo*d?D*]l$<Fjd_a^P<15rB/W4td/s
%LquNsDIO'#6"]@k'm_[&cl:tr'8PG/i1%E1>c]E8<951!4$VVLi"dGH"^lUK.O*SV2a1#TXqdDgb080E"K/sV3-@l%Q!,09$s$X>
%CS=h?/qrEP@T]iPlHE.APBg%dXHtSV6*)Hr:gBW.,o?oa[R"3<TIl,1^SEP!g*s$q#0CK@B/6jiVQ1%CS9\Ku9J$I[5sT)OVYW6n
%<p_aTmg1;G(eadJa="JMYP]@Edj7li2B(<cHWh60l4`E>9G>"/?^'_(b5SEH=`=Ea/rm%UREZI9='/a:Fu?lf%$/@gApCOq0>j:@
%3;:H$BRt83YN^r7<>"XNp6"D1bSKrO[`K>4]WoD-2PaAu'6S1;c4`]f?<BgXO_I].eL@?%eoBi%;2)BoF<=n!T2eF_o^Qb[kk`NN
%[ES.I<g'e4&e1qPe5DGD&o,<f63c1N+@Rr:66&Y;DW4]J',_#,##:ZtR^aVR!Y2-9WN<ubec?I'6D<B:aTMmb;.<bQXpQN&0S=8q
%Ihh`cjY;c8kUka%2Rm2FE!Neu<,MTOaT0]JFt,a)0qdEqA+,9;/O&ZuF50I8js*p!]!e*5qD<@;ZM^)AWa+5ZMIHr_Q<__bF=Up&
%iC,\kT^?K3lJnqXHt!i5Fs2qu62fIq?G<h.:Ja\&s.4Q2._d%oW8cF`<VR5*\SWH.;H(2%I<MSUSiC\JW-[)1I:?1BM&(MKAn+BJ
%T%G.G#MAmr(E%_>?r.8%V&2]c`GCe/#*Zp2k?+l.Z!ELRC:qE0Fj>RRRt-hdA:G>iYEl8F:'eS=B5+#e>$JBKZ9%4/\]V?<l!b1B
%_Sp4M-]O<L<jo/?mh1O[Z$J.GF_1@M+cF2]XTcr&_29hGfY_I)Qs.LeIB7JXSdU1"49W4)TUYH/CBB"?OP_#3i/STg1j[s+]krDV
%?"K/ag>s6'Pf?%6EALWU%T9mdEd+Z(X55/R]F1fg`iAd'<nRNNp;-(K1TZFGm>21,hm4_7okNX<ISRS>EZXD-LjNjSlXCn^V,,WC
%<a\p][Db7kWj1.3BT%-U8s18`O;HY]YF*?t;p8b!@NM@4oN!s_>L9,SWXVZo%pRPYPk>"p;+c1W!bc(DhSZ[qBS0nuiN`UMgP3n[
%@C"X]ZJ="<jQBsnCsB+8gkWjCO5";K2a1I=o6o08G>u=Sm6RKC72(eja"=\29<2_P`@`e5pR>/1[JFJMXY2\A@`BTcV;BPoCpc'=
%r/?/*E/1V`46jd:EJ2co]jIhAD$IenGhQn7f"<`oePeX2;ho;?M.AcJhnlD4<L__I4g'Z9P[YN-m4N7/cFr\T_\3r-&sM_0[dt'4
%RsYcn/C8<2!(gHT+H#Qo-`'QRUVk?])u`NWr4>;E7^[:R4+d5`G!f7[T'2+*:aA6ZCeLE4*O.#[HLY`I-oM7/(f,(SK[\F.j2n_0
%F%>pOp4\&l0)8"r.#YnS;kK=ebb;G\(VHu=0=6miN>!Y)LLPV7\T:_KSr;OnaJ3kl3s:?Q-^.+LBOSk(+W5F!`k9qNC?pQ*-TkJ6
%M4/"r[L2SX8^2O`3j3\h7j]ETYu\ha!IPNuZ5fWE7k&4"HA5=^8ECJb>b[KV]J<VJ?G8*JbAGb7M-FR]\.u>d,*bk,Vi=TWj-$``
%GqsQ)6.q$T1Qe#3*DLtZ?iiY_8R<ksaj+S#j[W;>;c1mlaMYm!MNr2)B$rs_A"c)#(B7/$qJA<qg,d?,2-*-[Y\7Qa4%I_#q*Q.o
%dq0;"hk$'fF'Z57TkRP&MoJ7kr3DTE?B+Q?b!i"eJJ--\,.D)#ji$e/cl?Lj?DF1H_i(49P#qFOoP[^PW`)9/SN/5Jlj$Dt:)YZ3
%#3VYVjdFU.CN43jiC&Q^2qD&'$[7Ps#gr_%_sn-u6q(m0nqg#r784(cD1g:HIg[!uFKeTXJ^crZJ//#MKb;j)<#uM9,J9C;r@HdB
%5SmBg/\S2u*NH;8j!IZ>RC]BZ[a6m2K_'`te_&6Sm--*)(F@PI;QV2,ibN^*7B*qn:(jFi%=$R)\$F_^buRMkNMSPJC,%dWKb<?U
%92itDcjcWa(^a(n9%plAQ6Osh^etKSB&t=k].t0RQ6qBic4mW6_ejR"a[b[YQ2R%[O8\<hr!D@/[]p:FDnUCPVmMJg^T&H)^>eT>
%''V2%Quq*YMSGM/5O0IJ\(-)5X]s7AEN\W??/I\CH3g?i],FtiSZQf84eAj,\(*D&ko&g0-49EgD-bWZ\VI)@JUO"/Dt`d$?o%[d
%lS.\TpfY.%>0"\+C!h&VXA/VZUP*6*hTM)M@Z=C_@Vpi\o1<sgg:[B5AK5L\Z6^]s=,I6NH2#_c=<4*d+fojl<3>(!(\H/(C,E0K
%#OIrBW^a9#oJitCSrN?jPRguFf2bQeA>$=seGJJ4,jj.lHF/^^V;kN\[oN6)RrVmVYAFY[S)7t^c*hNEF6sRG+8"2l)kYoAb]B>?
%)`HsNG.:p=`u-s]*.D[i?g[L?G5E/t+.Si6>Ig]uY;lR5mQY[kQM='q!G3]%8!6t*@>V@mi`E/deq;sRQ\`g-37<K@P[/m[.<sd.
%dPZcdFUT&;@-np:4V.1rAC*Pn<c"A')REIL(.Y(VJM*4g:n<<5HVWQSXB^M>1ph/<g2SOnU$=bapcOA;eSu]IFIq!uk4*k$@Wj)M
%%c:ad["pi&60'II`D*6SoN:/C=;7@\V-#em>J(tFIr5gD)k7o"i'&+@kE@VR#qHQk8ATkcB[?o'6P)#K=jK_-GG.H:r/@lNgsd\?
%p!;>``l\V[BYb2UI].;kjAns8;d!sa)UWt2T)KJXr(dW.GU+_qJu2R7%$/Daf;VV*8f[6<4Y64<IG]stT.6:PVumoD^/3>V2NZmk
%$=m6gP[]8lcZ/bQTr<_8Y!\i,Kei!FRad!G#aW^bPbFp?rBQ*4(detT@-NX[?`9qt6,TslKkUmJjU+GEX(_E=-qL$OKk;$&;'EoB
%hfFJdDpNoSg?mRrcS(nb4cAuiW\JVL](@Rh:5+kKkW!AU)qECec[N&%HrIN,e4$@Eo=?hs+4%?!2n#[r>M?J"/g%P&4[kM#BD"Ca
%B,qJ'"42kY,>^3O0-+GWbr_L;%MS]t0VQ@A)!&H#5:f(8*,OjAO@]u;Gn2`\!,@N2o+TL="6%=J3*[iJMas:^#FkJhW:(4L2ai9?
%)$PI"ZulTDjl"KsbkE-Q]fVsR%n%S'2Bl-8D"gX',f)<IH6FKWM(u\eMW^glmN".Y5*l)>@(B3.K]'BsU,uuk[5gNG?%\lo$=]Hs
%etk\8$>OX/da)D\RhMm5U>=:Ei<a?rcUI#tc:kHf$!UO=B.ta>(QIEe9KiN'c3/hf&1Ejf0IX4kN,+<Q1Kq8o=k>N/.s*KQ;nOlL
%os$&KY)1l,jRt<K[h3X4'#f-Dgag`k*s`gPCHY;XW6H8E:`[O(QTakM:OLh/?hVE,HX[0;0X@L<1#D?=ai-^VlJ9jOU./3WC]0<d
%/O.L.q.]94//4b2!q`)#(1bV=&4ri&>UZ'P\">%l%K&eu/_Ja0%E*U3'@(-C><(]FCrBNmYM=(BpL+o=;Np*p%4d3LlT/n=Qs$L7
%G9jd?`Aq$UFN:X#Q$a!t_3S]i0d))gMADAK"_B).+HljSn+ja5?j8VJEbp%J+$7gX%)q`!;=*gVjm[Z%_;fJD"gF]9$Ws1unKPkJ
%/t!!GVVhn!AZ$57[."OU=L87hO9j9N$YALaieZsXA;@%l)YOLd0(+JFi?2_nj)@imU;!V0c8_g(*EG-hb:;PnY4u.eN"r.@R&#Wp
%g7".=BSRAY_8&-/M898`?so;.4I7WL=I0^9ZVOH\L.[F='lL(>i*QT-6b%>[mUc&R^T2!'lI9IrWJcOB,f5R(fTujo'VrU+0j;6-
%Nj"cTPnB4fHIccM9:9d\q//W+fuPNP$s"p'$aod=nrY]^;8GTh3*Ea!bAa;$9B%F6#F7Io.L,3@!Y*"M%H:5sX+\boalR<HH6qF1
%AZ/UlE,c<de4fNb[X#SEnTMXa3%H,_%FTYB#i1/W^+OcF'&1J_7]uGe]HfX^UY9)J3/HIpkH2l8&@A7!"kG-3><mZ9'neFI9s.gA
%2$9B%3[t&lbk)*<@Gn*NDW/a%1ODV12OALJ.Q1pZN93cQN4:VhTbsb96!2oL4HoB[4n=5<+W6P/T$,^]."<b/5;#<5AO8K\/.M.N
%&1LF6s2:DAKUZZ6C'o,6_'W=aHSD-?,6,nkhV;nV8M4^@BK949h(m?DPVZ[8@cgfcN#[_<bF2(<F/K2e-S9C'Elg$gH/?"$?jfTF
%D(r"9`>pfrQWVtAK\"*A[u%SXQI5236%-%1\DF%@ek*EKjFDA@Z==Mnlm:e3V<XXFi%;o8[aKLE.9N6R[mo+sp(+d*DV)>)j`=Vs
%flds>aMp/aY<=In^)K]%$)aDqIi$M9m]Z#)3n*,cm7blUA`^J&Bt;9$j)>B@A^/-35V+6k0%ieWIHluT,@c0OY*YGj/8;$f9gb2q
%.nrH\q1:2F:6Vm`LPX3FN0RMAa@TOFBl+Y".=0KCXWuR&fBk+7Ml`?o<Cp(;-^JLnPpD`_,Z@:EP,'V3.Aq_2P+6h:2$$]\19LQ/
%<NUiN+Y1_s2YX`//uUjt9Ck9BRCspJ,&L1')\caS,ZTC<9`R^UJhV`t9ut@9e>",Bd3cMr&*CC=.;TWPY#\[(>Qd;@eM1H_)<sc0
%3X5B&]0!.o1>E+ok%MoRFA*abmJ#:cieF8]a+JhurPPm-U1=55dK4I7"p+o6Nj<du=I6tTm3#>oAQ;l@V!Di$6C,V(dUjJ#[ZG;7
%Tkp3T"[n:$39L>lS+_rW[>1tFDLCYV5T9i>Z&#VIjDp1",CjLa_?G;PCA=ms,*1AG8/+-1aS_:rOXi"/gGT\MOq;eKE?J@"_Ke5b
%\RGeD\H?=h0pWHpeu>thXJM^EH-d<iW)o26'3)NNn:@b-(&!eh@k[(T5<H9?$lB:W3<i[Jk7+o9VTiYFI*^dh=LeY8SCluS2NMrE
%9N->1h*h-b/j&D%5_"ghcaHkT+9-VmfR:5@<Zh:n5Zoi@o=:%;=("6Krj2Cb,YktjI9r2amc-K(K,u[7II:T/gIdM@g2?DP\'^d+
%OIl=tcd:^I(sgO/k4L^FZc-CR.seVec:JS79Uo&q.FlLoa%A7kV8Gs1SUo]$LZ4C1K-9/F0=F.sJf@T448TB<R;99pEm%!FS$cIs
%rg-69%B=JLX-IqUGt_k/k\O*^"NRH?;C)_rb&A%GB4inaC+SO*Ou">7</<qak,Ic8&&J(J`GViBW)qNi?G:)NVX$Y799G]<nhXc7
%>MS?V\bQTfAql&o6>^&,*hUDfQ3KKYMV-_'CT`h"BsE4\p9:"3j#$4*c'W+9a%,Zfs!!PmT7kC8#+>9YW6?&#1LGjXSBik\phVMD
%c$F/,@k_h0.fY13bE&PP2MH"J8o?d.E*LMfE<;blK'LBBSO6].2V5#i9%b=a*8An-Z%KT';lM(&HIb'_I[]9$Wr'5eUf\8,0h%3V
%e`Y;F+%]=?&u[7:+G-sld@j03F;l(?S#Oa[8bTBRru=n$iU`;R1PoW'NoqlgI2HPQQ5MjgXL'U_DII]oe+c'nO5`P>2i9RmY&U?Z
%M[P6#n!Gl94^G_%JqB>On8\nQjbt2FQ#T,B;J<49P+1Cj*>o^VUj.0R4*?ZQ6hjCSgSq]heRt!"h?DMP<0qk/gG&o(B3A:I5E"#1
%f[6:]mdP^`;FuP)QP9OD+jtM[s!'7FaJaAe7ReRlIn#Tb8&ikr8-k%l"sT$t+;^3-O^oL>3tLjF*tF/JAC5-mD%#65NIR_%37-]G
%,0DH3NYNP9+B]lNZ'_LWV[/t=Y*QHO(/;!O_A$6;Z-%*GR]4ElLdbt=24<CZK4/3@PM.3\Bbo70['W`+cP<Ek249OO6kpKV\%"Y,
%#O'"fK*?Bq.fRe_KMtpuG9?*L#5&o@ddDZb(^AOr72O2I!q[7Y"pgZh@p_OQs%r/G&N6F06qF?7UFskueZ<,`r63q?ZVA7[n[sMg
%ZVY&(d%a#Ufto&g-t6SdZr4gBW(&4F:a4Uc6.H4(mD##NIkN*J[AYRA<$cs@IOt@r<i?CU4uTP:.i*E5Qs6qN!P-Wq&VD.eaLhlK
%DK,^d;Lmbb(K:tclJ2Si.meciXL^=Fqgl!P%NDi^[dI0+i2sF&(:+LFdGPuShMG7=%+-\U!A\$B$n0OhKj!$%$uEJBcXe$(0'1f@
%4DnB*@A#CpC@@p"Q'8^D@GGo4jRgB?i>#%GpX]9\,=jjJp"ZRVmQ"LX4c%N2IUgAmd5RO1kQL@4iiQcPCq-ANA'RC3d,!KQRbadK
%k6bo$`;["*mX7^3HQ2A__@@;&/Wdbc<Vj1TU+7KMmCWc;?(JcP8t;5Ki6_4oitt%'",U>SXk7k5Q3b$59jC,coHI6!W0B*C-n<6-
%O$^B,lJtWDioP(FX[oP$A%S@9QO1R``GL/mCY2GZ@fS\7.c=']S88S&N%Kj^ooi'?KUE,"i[%o0#b"(,<>h"[9rY9,q<aC0$R6_E
%&WkaEOiE*ij.*qDTj_[K)QX%U\F:TG^o.RJikuWlI`WG6cMTT>U#XdT1b/(]8BE[]3]ip]F8\db*k+=K6P#b#\bVG%7U@%:YSG)1
%4qi[]'1MbN.*jrom"SB/f>NZO_D7\uPYm3I3!qRT`4kAnH;LW1[;%u_G.%HS.&qhJ#6l+5J^"E)Ka?FS+M<A3_>lP-Al^%l!bNj2
%L0e9t9<6J4.aeVdNag2dDV#_r)*kGGO1JI7Dp(USLS([+1!)4mA3\:5ZPFfr[E;]M?\sKYgo54E1DnbP+ZTs2('E_S#R&tgb%')m
%jMtjh,VlClneu=^6_3+B1E9)S6YU<13Rb-jI,1)S9W63:@a^rA9M1b@A<jI*$+5%l^tB'r;QH2<Lg-nkEO7;J6a[h3.m[6+g9(G;
%cc=^F&8?IqR/a]ZVRlJf)H8OfpAmhTZ\"',+4!rt@TVZK>ptf_9K^!Kq0T5^-.XqF0IS@SK1RebWYC(p(GGLO?*Mk_NnN]7l<b:\
%2@q69m#5[lTLJ,qgbl`8M<HfO]qE;8D6#"`f>MAc+(XI/UN0(^BKt<b/XWW?8'IOFiFGogbt=.hK[tu'k0u0p?P:Z"QddUig8[o5
%!BH971AUr(-=[p[n;EJsT+%"`gK'@J[AN#"ZZ8F`?>PS+fYhP?-T$o5>P[$/-`2.eWI[oah;]05$>)hiWskOT:dM7K2OgS(0m1Q_
%,?-[XKWYJ/&Ed$"'!\Hm<0A@B<HJjNBiKY]37/V?S?(\p/(EI]Mu$Yq\<KO#'8m;dIDPc^UTq!)F'2SIfW&:UeZN#.=M^d>AuGi7
%Q+@YB<[AnhK>PGeYjY5t@Y-q=6`#<jF+DbN`9eTeI9i"^SKY2q&PX6n-hb/MgU:O"l8Gi7eU36Y\Vk9!iMq<:o7t?[E2YJ7$Z^OQ
%J`$mAedG@N+Z`qcNZZ,Mk#:E`TE9#I&Cj>C^IA3l(t$\p5>)tII6:RNlpJ\`Ol=TnV;!IW;8kt;%-u^_*$6GfWsQYI+W#SZ6rF=k
%&L;Q==A]Hi<h'kTdYO-Q5aatbC8'&[!/jrn4U0n!BEUt"('=TDGR/-&R/<)(QIl.!`gF4Qnl?h,g3RASUW!ZC[7/YN"9)CG<H92"
%lJE<7,!km9@VWZ[L"Dn-3tmq5g^+f0O`jU,G/p9u-0-<*k)Vs<Xhm3S&<Bl5D$=2il;iKhQCM+d]5)Dq?iY'O]GF]?ru+;^>P7bi
%>32q$T@[rJ[TGC#nHM,lk"lH>PGSp$.nf$YQDm20Q%CW?GO,[o<rBC;Jr6,T'FNi5<\&iqRR0:JLZh-i&D7Z6,q5#"c\=&seFfR2
%\ntE#W@J1=^ih^#V;,;fg.Sue[a^hlO'#s`+J#27M)mG%kQpa7Pq\guR-0D5a`P<DP+`KOf-5XJTMM%D]gP$8fT4T"o2N!/hq#Yn
%:[!iZ-J(_Qg'"U%JYSqFFG_&h=PkQIe56R]'E_RPKRTT7[;o*E#8\iqP).g\W%7pT[>H[:jf8[YGX')D4\J3lI6:S"k^udi%[6Gl
%-GrW68bkJ:b*kV&K#CK%WAP*+Mb%!PW%B4T<'bTu78jdOlgTmDK>0*GJ\N>T^3uC3bqP-k:tL@TI#_m)kL>iXlHasG=Hnji;/X"U
%=,BHa+=o('X_h8#.k!JC[sm\(h?IFA[CiTQGAM45%ThR<AB*3;/Jj.R;&';CFe-RHr2[)E"o?C5:aesYcXgTZQ]3S616=da0VH1N
%^:r25p6*?X0h)21qp7`S:1XZE8Pn5t-DA,;rfErLUVV%&Li-(JJ.R?EgY#GpX<Urh`$/erXY<sf\AE9WM2k:EemB-t;:aJK]?b$R
%g=On.A]/?P@TR<MC%!#N.rheWg:U&+qbj9(5?-uP/4f(k2JSq@&SB_(Z>,A_L_ZD^UIr!&f^Do3V54=.KiZos;"jJW@Fu)+[Bk%G
%ROHZ**E(j?ercj3b;?1"i:Tn%3"CX1Lonu,fsAVob5_!-iqQJBqG=JE6,B"LE]#qebZ4m_\7Wf_aVmsS2K;Y,m"g2q>#_$d<WIN?
%UpQ78!`Gg`9%9B@7#_nZOn(>!bZO&f1^Jsm;d#PP5p%61!>_JnE\p[<UFeoe@TQ.)!eC`%DmHK:3>rhc4)9:'B@Lqe7[X2.<6R<<
%=*0k/G&<;,7@HC\:Xn_1rNNSBX-cn%?s"8HZr-k_@22Sj6kiNBHgB`D\_h2-lVVF'-U+sb\(B/#>)95ZreOb)fR?<BRj-M=_R2lK
%DHdpcLq'k[9QS%L?r`c-<\hK5)B5,>=n=O_XV-+ZMXDV0M'+>T14gVd#g,D<f>L]JJN$6\,%;j6h:muP[lY?[Y'\U%MJ36YP9PDp
%1pV5$L`Q`AK<[LgN]Go3US;go8CPgcdk.qCfK2G8B56h>94O(nk:Ep=<c%lg5>fOS]i\@SH+&l)i/s(R:M=3J8W+!8/[Ci[q=K93
%>S:#ZJS(CB'E^M&.[(\h:+UE1K>JY^8Y7$qf(.Bl=,,C`d3=<s,VW-T=-VksaULJ[7:m"3r&S]_\NOL]jmuHD*`H@Yq8X$7^\[`f
%rMMUCJ,f)Y5CSZO]RR\ih!@8>H2I<[/'qXPqs)H'J,A`-W8"C,_Eah!fO)N6M9.q>0#?6j\FD07;=6!?E_&?R)Bj=SI.3`>@-6@P
%+I$C&QH#I,PZ1gQBgJ!e<p@[OcDmCZ+I^tHqOk">*c\Sa.MZAlEU(J/[q!C]i0g-,%J6Io+b.Z@Af8VCOeS15_8C.f<1Zo[-K)97
%L],"Kkug,$7J6@>0Mj=?&;?Wu:-%J_#"u[U`Z5-^(r]k)2><>LNoD\q(mn!<'R@%#3tetg+KU6%(3Kr^^o<^5-\MR)O"*IKMn"H&
%Pm,qohB!8;!8`YZoROR^<2eodZN[7gS@ED2:pI:gEbn)E>+oaQXSu-*\,YPQlIoAAp+mQ;T0n[)$IkLE`(hCSnLs0VD37'6Oj'3'
%DNsT.)DeBV5,l)+a6"Rs]k#2WhR!E+$#I/>O1^'Lf$K]aBj&5&)9.h68u$s<"He^Q.LX7Ni+`Ol7`!P]1^u?&&X%mM>pIYhM[A+%
%Z_$Ys`$Z,K2[--QM@$EhW0]/:JEhqe:D'8@<EdpP0*9WJiY)VoZ??C&O5%>#dUk:<gsBQ%f=fpPqp!^iE0[@(<RU9DLQ/a)URE4p
%)f=AD;e_M!M-)0s_@KYoLGjEa'Bdo5-jfLWN3T,AnKe?Fd"qmN8.^LaZ6l=Qe``G,/d>i`2FmU"1>8TBN=+8!6KTLYg/OS:7bP^@
%a2$:DB/@sGaDVdM`CXhckA&&/6d1,g-VOB8b)fG)U4j268kM$g"@qJ+:.)qS7[m!]#=rNlBdK]OWnVY-"hk+Wr<[eO9jVVG.Wg:o
%KeKm+CKgo>M#:)o-;OfA>h#:3lu17G]k:sdSr:H4$?W"m-]VqlWJtZ&,6J/o8J/3@m=%u/[dm]6-Enoq/]CgI!SPer#WVX!MR,%S
%f$;I9#]#5]1W0Et!]_]-SfMgt!#02KRW\\jP!d4Hj9)_K_4a:-M;6J\B,l^T+q[t.+!NY6L_&p)d*9B'JEt%f3rmZ#_!*t#3>@[>
%__#a13?S<7)p'XM!9/ag/-%%b55"t%#<CEFg^ABDWr7]]s5fdM"n];[M<B**d:O'$Yt<t_-h=`\r/&6H),?CN1dMfK97";RCQcVZ
%A1YWW#hB+0<-V-_&D[E?<-V+>Xr/`l9u-lM=OmTQ;kZ#OgM>2E]Mbc_FWq"?2&Jk*,hRBH\'i2&XNE?f2WFtr%>ltAXT@rt_t#:9
%D?Yl4_a<\Y:\k)aq)B(32pcU\k/io-O?]gL]++I=gL%%-]/FW7M&U!$f$%D=\r3OL>#Vm2Vm`Jj'>mUMF*HO"h)BW2,pM%#%?f[N
%rnh<!Ej7E#:d\:4XS'f3@i#%6`'F^)C6`a5X0;^mfKY0-kmG_M=.K5kYQWAd5tiqck"Jm/QBuAS&gYN0`;\:>?T@jbQT?"37I0[7
%`;jdE!QHrP**4'c32s(-M$#"d?t*sNljD%$5IlD<g<U8f8Yu;eS\bVpktgX]G$0]@Fde>uTp4Y`cre%\B?>n"e<L]GKV6%`#rjqE
%"U+@TQ4O^62.9\%6%4;;gt#bL*VOX:k,@qcm$k'5Rj63ghjeiDgNQ_.33r]oJk"\sBrF=kk(:u_"+3e-/*'7N4"H1E8O#\27k*Z`
%$^-2.)T+T-!Om@bYX!f0X[#E6niPlV/u?g-T/>uq1OpCq=S$DR74>q'#"sFS<5"'Q;aB4Bs0;TR$u;cSK>,AhRO`#Zjm1J$WeVX4
%!6)NdBdXVqJ&`=O9o-VT^jpulC-V%WEl%2>4Jg[X6f=R?^aJH&Ktjeln@'p@DccT5hU\`X^>W&Z`U9nab%/W"f$Os(W,XLED.nQA
%KboZp8?topSY]F-M[cpn#)g0U/U8a;)%59=p*F?f9YmMU8mT2`[:,728T;oEh?m\$)dgMZ(ea/QSgDaHI/(L"RQ2Xb"/R7Pd8a/G
%V?U#f@\q[_G'4s!<Rp]qK8s:`Oj0G_l39D[TnchqLq>SCYR>S&fIVdee*OtAX)c-ZEm1P^le2+.k$<O=Z2JAG<`RnS*a;:d<9q4K
%5(:g]DU7cJGod574B8t.Me[Z:4Z.6D#L>R>X.>gbLK[1$R+[I?gSEo\29Ud?1c-S3Yh:Vk[\okM)n/JJ(`D7'etM]jno>4]<H'(?
%FQ<mM;2S1!^pR2O.b+OKJ?F2`jTJ?D!iR+>M:I9jfG;(!Uu[e(?g!X50;gf'HsP=3J`D'@ms9<33W7JFc]mF6Zu+.cZ&r;D=G&[k
%Mu6hGG1mVZ$Q6%PD62536%U<VS1'Q^\-`?2NT>.[aX:)FYbe4ra?P$5.!B@eLm9Pr;IN@$(nX>d/Xhg,@T6H!#0f^;a-oatR^gh.
%d#kRB:Q0//_4b*>Ia:<S];cph\e7>+6k[VSS[>YC*dSeF[QCQ*#GoV1e88R%h,].L2a=pYXh8FF*91XX[)]5f]J8aNdi5'eeSXEL
%(?.B`eLPM(b.;WTgAW;IQ`>'PZLa@[AM4gdap(eE=,J:nCb]c99B_LT1=iTTBbV(]];-Pu#%M#@nInRWTTcY48Ert[HBS^"9iVcr
%lN&`F,>:O6Wfr%sHVP%XN9iV^+AQBM:U^#Y-7BEOr.,Rjkj^Vs1p)6OLF2^O8V)JIbkS`3<2lfM^t\ArWgRm8-K^LLnXWJC+ig$(
%=Qk<F61kU*Z?e_D5h[RMNV]<heJV[Gk*q(p5",0T_DJd`b]n$U@if!m'Y?()cslcbrjE?T6;s2[<IP_U'(>!<qR_jIrlGT7R2tD:
%$o7*>C/6BYH\1E]_L""lf$Dk)SVJSDOCf_kT@oEeLLY\E`qJP?d'r*\IXSfRbD\5^Q>.O<m"._MeNanM\T(^-ruE[LQ:#`f]J7Z0
%YPHn;M3D:rHN!^-h;OE5hn9!Wog]EADQZ6kMaS9jo&'+Xj%#)B.tj@.Z+).c[]0#JTZ7fgao[p`MV)d=hhL_+=A-mY#4$Z9nj3!j
%o6aXZk[2'VbbluEF>d6'$5r#7i=)TFCq)0ehui)bj`"WZ9nf!U1PZ:/#_<D:KIK;+(<99s0EqblBf&WIcOTgcLliM]]VAl<#V+$u
%>U_fU@*os5M1m&QNi8HH(Rb3(2>D=b7mNhr<gs"KIfonuB;Ojrbn.h3HPn(Jq'1q*5Jf$7QTt&:i5a*t&XtfOAP[^,'4:IOQTalk
%ShT<2nm1k3jkO`/iA:^gj(p-'JY_Z<hFqC_1aVE[qR4tpFC]*V'd]bdLHkSnC]nmacq@="`KYUm[$\.na2jQf-&GZ4]d1b$Xo'T:
%cYgK<(J:8L/,?.;E>tsnMUq64`#PDW[2GJ$.-nL&=M$+fXWOMHe-+p@2]dKuS6?Z(`_d2Y#W7K8K-TT)f&o\m=<njC7&C]L[QOr!
%F_"[SP!B2mk$cUFY,\MbZ;DTg1nG88gY4NXOgX+VfW[u/YJju-I)5I.=:'6DgLXWib*id2omS,`0.9dh]dbV"238Z7:Uqf@f=nLf
%AnKCQ$Y(FC@UjKhN*[B-).+8T(6KaDBY0Gi3W&hGF@)h"Sb;X=?8>n1B;%LA7"$:<\fL0\H*!@BEY-Fob"+/i!SNU%rQ%5H,A1eF
%@jH%>0pjWW?SmieN5P@#Q+j?J9ioG-">\`;H?oJ]GE2/kHA3c'#H+j5EI7kVEV=VJg_Od"_5?p@B0L%S*bPJNCt0S*O;2Bu@!sk8
%l[,Q'Ej_99otG9:UU?OL;":b&";S-=&&q61W[d&nXI[)T)#*`l'L`#Je=+YR.VJCD60V6f'"g4[-tuuWCZ$cs:cTrthadDWdD+M8
%[D^fj]6[(aM6E'8FO/GL:F#8J>n+hm\:'3CWMn;RhWi+)R2&k"5dsA1P6)"h+G$u7_KCPOMO1(N`&5@(Ca/&nH,UP&gW%QRPoK;V
%5"j)H?'_O=e^(\^6qP):Nu-:#EOD@=`4&!#>>RaG=A`o*CTuaY1NaG'/$=#r+dncV\$I\;^4nG1b!J0Gf/4i&kqYLNNOM4mr(N);
%EH)6AV)'[QZp+T3?!q_u3+aPj]fXBaF0IkN-p'*Fk)HST7p(<GAfb@*,A$!X@"o!N7cs?*ZL\QjS!Re0bkpV+M#NlF^DL679J-IB
%pFO"oTTo((#hJeR(NL0Es/besXE3AVW'ANHTKW3(M=&Jks+9EKUYpIG)XDX-hO8OfKks+4UMA:/ZZaDICK%?q3ou1@n*DNHEh=o<
%AY&eLJRToEgH"MC\jS_?OK9\[!@>?)R/3*VQQ]7/<n2:=K;_Us=gQBU=qC/m&f<V_G(NZb"H/dHE"d8JjFa0QPV>Z[?YrZm7t0oY
%eIq]F-Uh]/n.'[scJ$uLX);+HF]k-d9%B+,pTASug+58/P9YFE@'%Ra\!4t*'&-@N%412;dTFS&G[>$n5\mXdXiRYJ8,JNQT>fmD
%BlPZ0_eaTK/T=/,bg'0`X`g+!s(Vbp$N.BdBBb'^f*\KiWnr+(kA:fW/3_Bo]aMo)\!8VW?fCO6'p*K&i@,$pHa5;Blj+9d<N*t/
%fR=q^kW)B.,$gB+!UTroe!?H5Z3.a;jBf7Ldmg`MH0b0pGG1V;JY!g<K%.`6m.j&>JM.$KJ(=WF?X19oNNV+kDuIj`s74b@MVboR
%cb:?!n^ce7L8Bq+f6Oo^8!L73k-BYDUJf7,N;#-@JLYJ^rFu6Pc?+s>P;qA#s7GH#]heHN.=hVe57.<1(*V?!FZu(PCD<E3-Z6I*
%EUZsJp%m/84\tdKr5fXe@-2gL:H=)10TpE]j#qA\$<"G+WEK%j?1Y,7L&_#lhL'YJJ)9SM^A@Q\0j(s^h3J?D&h<h2.f"K!(&l'#
%^4_2hfb7`d`0WXW'8?j$,B;R@m^`3H>^l@S'n>;MXYBK<$MkqMI?B,q:q&(tn&q<tZ7!BQM4[*A3\TMU/gHpLK&DM<<:u/VS1e:S
%T=OmQ=0Ff9HN!@s#Yr/2pu]3#&+AuVDj6WhhdHrf50WTLm-^d&rsBt\ouB2OSE2rirQ?;Sn,F4%qgZH4s1IrI^V9Tss#Jk_pCa\0
%bAV+o<N#<0-1:Ts+7NJ4[-ARerX\>OkgK>jMVj67D&rbP+`N.qqiQFB/6%4umW0E0IsK!:a6rruV*;i:q`#"h)RCOE.jL*n%/4]b
%6@Ej2nAHd4\aeP$m7$kuN-pbL"311Ho5)#3]0+!gb'#MC@+Y5"T7":9h!C$I8;H_q7dbM9FE+>S!'Pc<eMS6lI#!IDa6"RA0Rk%>
%mcnTTP:q4oT@n1%r#V_]L[hce1Ek6QON73,R.%r&KR/Eq`G.2_koO8>m%rjdQbS:$B!f$o$UbM2Zb8Cf1="7q>]29dJ_aY_Zt(]+
%koOrVqHEdWMdF;62Vd'##9G:Q42c!--M4aX-j-;c[hib5Z(\YW`TGk*n;#>%]XR&7">Ma*3U/qNf;oLk#9Mrjg5C+i9QI1LmBa"U
%&>.3tDpBT-?,kKr%4+u_\gU(\g1><0RRO*bl\S?fSVb[.[(#31eHTNX>O<`1\m=H"D6WHHR-[l*g1Od3,sIe!hsObUo+Gg6DH!@s
%$@bC&+45T!'&N"-.5ju9kY6G:_nFlQ0S5`eX"-eaKao7+Fq,OT?7soFe^(qm*IL=D^"rND$HqK,MS:d8j+L]X^*A%"FJ[%7_.P[]
%gV&A3<.94=<>4]Hh]AKRCXp@L;YjnliA2G@mJ2A'U2#J6,'?]>l^Dh)p)^r&ghgarD=s8h3Q#Jci*5f-C1;TWXs[n)%1$UlH8Vsf
%BQtD=pe1m=F8g.Sm\8_Z)hM:Pm6+=\,C&tTU^R"9k;(h^o7tN`=#D]U\<iZWX,6MFo*bB3k;(ih4[aQ+UL6^[56bA>6q_^o(8:e7
%cNs/*M4&),):=_9H\1q;]qo442;<hY\F4(LQ"K5qQp78m_ldG3kp[iCDqg(0@V&@3gpCa=%DTASgP4tA@$?546cYAB/F'+OnWB(G
%FR!i@&r\8]=#RsfA&=n[$4T@NB5'og3)iI8gFf+a8cPs638SLE;I,^VX?h:51tY'P,Tc#`9`jQRmh%dA!laTs[Dr@8?*B;/M/%Hb
%rfpnr>OAGu1/c&`GBQ*9coE7+r2<g/-br4S^-Bn?KT&B)X-U/+p)^XW\ut29K6/@+,CI(=[7(jJi,S#7M0sjjHJ>a]'u5-Yg2O$f
%qKBfS)X+W3XW$?!Bs_YAI/]Qmr54\d[5"[adS6K:IpHu:S7mGU3DOA)5V(W+HOrlC2a:?n@(Ug".fl.tmB-]kcS&Wf]Za4f&+@9n
%R#76d0T3,!^&%NoO*=t2q]@VI^]&C8:;EpiF>l4)b_V2](2"&k%jO7T;,j/+B@6ALc<caljXi>#D(\Hts3U(u0%M`n;SD+>OdZt$
%1cd^FS4>TsE`U$W#>45Uqri6nO1rGpGjjlW?;Pl3IQV2eCZpqQ)kE+dM=@`h^COh-V`L@$_W-A*:@ea548A\m*gXFIR39A<RU(Ng
%nG/:M?QMc_J@tq%1?_a5(-M+.6]pHDGRn;8LO"+46BE-pC+1b[gn!l20dO:lo##j,D=7%6par37"lEMA:ib.qS3,GbrZ6WXjDm>q
%\%6t^=@_po6lAY1MXV)<i;7!i+Rd+d4IQ$%%1,'&$W[^VA`cp1GkZGI-6:>bh+)\l0Q^"VPC)9%:\bp!?lbrU?f6(EjMQD7c#hl-
%=FVES8F)G_^h918bK9!"EMZ2?^bRMuCmMQd$'r-J!O`D-KAus4"V5(7"cRbXDAMSDegbu*!\rL_\D3Z__E>]BQME/L@`[Th!Xn0G
%m;b`"cZtQ?<e/+9Qj(.UHniI+^i+HF:e[HaRRm"g*bRFQSI'HMN@.--#!7)2G.,1mMA$M@24lX(,_P]?(AnKY#<^obIj)gC\Q`Z*
%1*aPE3-Z%siGjA]297tOiM7i'NFg!)7p\V,_i'Qc-^JBD3\2AUG(KfXV)#8(H-hK.@!LNb0Q3$*R#-^U,b=3[7":Q]`aL?41;]W8
%V4[Z2(YebQ*=X#:g`6k8KC3F*DHOtl">8hhmRESn!mCs08as#o@(Gf&32^2.r4iL(S-IWT",Itmg^>kP]dGiAe&'!&aWr0?pGf[5
%6dPKR3(\@V7p,/4]>_*?J5D!<)ViQSRK@._E/\b6]4I)acq^[d)4ih9!='ANjOj!mE>.=TVFSi"!H.0#Jk$:DFDu9-a1RQ('J6ZX
%"^k[+6%F%&GJU/9E'3Z*dT8V!pUFuTGb3bQ+U(Ith2.poShD'h:Q+Ps^rn6_nUZdPY5oCiaRNV3b#0hDL0,?#GlFou9"!gY"JX<b
%:aan!63,q#/9"@hS5Pf@AAJo=DXn0Onu,Wf/0i'\:b";?#`g:55TOmU4B0$%P\S'pM\HPp3k7:\nKJP;YeH@W$=[_bQODiJ==!;M
%Q7KadN2Y3Ol(FT8R5BlF3u$4Q1JWk@j9bQr\r6>k-R<`NXDAM%*O6q:ZBWfI1u/0O.,<%?D!g1hQg_fm`2<]kSL/d^'8kBa(cXKs
%j^*1YUB<F;iAD(\b^"_5N,nEPj:p#43)h)1dE9IH-W]Ag;?6&a@Yu>MMiIhk2f<%T#UO6sWuDhIV"bKDK0mkVmpYj1#c>CQ%t$&e
%Q3k&!,.@VL?')\7q'-B?c\ouM#o@n)]TBL_:G\TEGn?\Sdu$7A03iQfjTC?u_k)N$XCc)>&tG=4dCuNR..XU#aRPsjY`).&n:2D\
%hE+EJ*FO2d%)DKTkq]o46\7+PN"B]_n>;!pQt?SA0+,OMLVXQ-C'OkOf#]@Z>Mu(#]cd_-6REG-ScH#6;IPPq5f"$`UMTaL@V0O'
%=[cI!H^TD'89>NdE!Zt4E!AhcZG<X<m5^CSG^;W'i\Gb)Va.8G?3QT!Xoa`S<!7iOdJ:fX\LFMn!p#=D$`%I2DH]"CR.=%K0eI]h
%!m=b<*e5p\Ta):)M(ZE=B5]Xl4*R<N"l`6o&a9tC1'MtV:a;<[&YV%c/@7uWAYW#LcbqOX*]ocPnCA:DRO0"eSc'\s#F&kg@MpB2
%fo?m`&:$(*3/tH^ciJN^I\_CE6BLeMWJD;I3$q^m[@X!:j?Rm-?1=DZXS>P$2Ic+_De(1OW1q2>;%d!DMLBH0JS<pmn4lup+AROW
%4e^Bl[>+`<L\JNU>,jo>aHLR]Tc5uD"]g,hh5"6UBJrFS-jQV(Q!6!9mVY=YDU<a"WS(FLL&`_*08MOA48HaP0-%RnH9>lmi<s!Z
%%T:aN/YE0?4D+B?KUOkS)OR.@qI4G%C#*/5\2]f5+lmC([2(P59UW\Ck>4Q^&B*O=_cdI60$CP_YR5/S'pE6E7S#g7$(MGR12L""
%8\cbDJ4C<SHkE%0SH\)5;2%QNPMS)q6^6Vc`"693ZF!%;2TcDVnRuh1Mp*!Y/A5T(PI?d5,7?%SE":UtFNk?l'h@'353\(!L*L_Z
%fa[>%bZ%MI"<bW.fY$8!kEr09Pl1ZY=:h).27#<&3\,Ne0`T8<IY("^G71`$D*f"l<XLIBngNOU!U+X0/0/=&RqBV#)j7jOO69oj
%CG(Hi$Y-*d$4h>R%!o1I:mie(<A#l%>G@WHY\"JD3$O?$5s-!U/Ek:;S5;A&GGmhflDc94N%bPs$<mg#1J?5:k=JDN4:RZc,eZ$o
%+tB6j2'=Wj0;/tOpg%i@`=hor;A#/%OEf^)5\H?:_"n5!5iF3kj)'!XB%fmAe0E+ADI=e#?U1,FdPZsZ"#KEIKm^BH?Dl6YAl=KG
%eFO?0Gr[W.Q1kEfjb6'!fTkET`:;adUX1T[8IQbd:lGlDCSXXKF[h'P<sZhMJ'TV+X_(U03l(N!2agJte5`u.3eDB+*CZCOio.,Y
%rZm=tL?;>7G=\u-"%&t,[`TVPQj>1DNe,+Yf^lG.!(EHgd#CJ9`']E#'.\4F=`eVL[0RV3T1"5V=opc&:SHADBI76mc]RQ*E,$$.
%DX[@<Op"Y5)W_+].jm1Sj]o-_-JU7&fV2M9?[/;*d<`ooH(?9l0;-dF#s.iD+V\o=0crjQ6%k`kZI/pnNCX>>'N@ZP@J$KVdjal>
%f'd%ElE15hj^]kd'0."O(V",IXgnt!QV/_t/4``c6b"jd]uY&!77@*FZf(nf(3Y8gi=rW20VksY-!H"Cf^*2J*3t!Z-&u-<O@'+@
%5W'4??"!^VlObCr,c-bK!<OjI&^8Cd*84$Sa<Kfr4g:AX[:8.hck<W/(XB]5WFTkg"a,*Q@"W^rPbOIJD"/o##*u*2Kj`@?6e54o
%@SS-FSE3=M99ZM*&SEkFW<NJU&'SFWX0W(&W$B890.*(hAD05/4_-%bJ4!%K9Q\\H.tY`^/C;[U`Hg4/eW%#ekg9M5`rcg&?c:!>
%g*C>@1U=B5:a$,3WY'Cb)F;mj!Bc>U/#8u`^W:#=X;#NXHD^1?$efn.RaY6+o9$HogmV3>5[,I\5jlsmQ_UN=+m5Z-/]L,aD5*,B
%6u\aAZ`8jFI7KFU1QLPnnoM'TJ^3MdKMt8fSG7W;(8S9/+`WXA)<E2X1gOA4!Kk[EOS@.,=aSTX_dL_2*c9qV`aH';@IRjj6\I<)
%=;5#\!37p]Hm,8gee:Vn5]sNJ]Okcbg/SfE!hetu.i!US\ep7PJZ(BGMZSpH/Ar9ilrTp^+=tn*c[8mP1rrD/N(sclT?jk39DDu;
%I(@<uA=TBMM/'@c<p*<1:d[G3CT,Kj3C7%JaC_Z=R(;LfmF7`4YE1snfgLBLWpdsH.8'c^.fo!R6L=an$Gd*E6,<Sn8FhF4_XGT;
%mV"JD8`0/*9:&)UPZ4Q2/s+_2ZriW($3E$;%>)ph?.R*Yon6fjB="2J:ga]c0K(`!dB6)TEL=&B5YP+T9d+^J"6VM!RY!G6&nYR(
%K;r<.Z>4)T$qj8;:Qhg"6$D@A#3LG:H.XLCFQBJD/&T71#2F79lp2d&W(UO5::1."6V5bDOc`p,?_,h%0qug]phA!sT"_$:2Pd'A
%_8CnMOjMC/E?-:iFSVUq29BZpLA0[T!Cd`h5UPY<i[&^G_lgi;=9_X*'Cl5>WJB/?rTKi@UF4N=1"Ch-Mp_mdl+Iok(>L7DS1'[`
%Z^bPqLCk41]UINu8C`s4FekHY,W-&?llPe4NtEiK91@E31,58.`9IS*s)D"*%/SHB/;#2OK.r<UU1e5+9=hN%]uTMqelhRWo&Yu3
%<S2G>+"/M!>Y86l.6#pF,.R])dh\Qf42kjZ/<HK9jCFZoVkmM78\@>2C[u5k:>).sI)\lQYL.3Ee,_S#)m,"u-$s0\75#s^=X$'^
%DOkGL:=Bgl1Ar+\$O]3("2(,1IpF[/f0n3I;3,!h>h&@Q,Xq<3cdAoIoA/:3*i=/udJ:4q4ecI"!NjP8:llI>`rHOHLfOfkWtSW?
%P%l<mk,9'Rq84V00g'L*6:+q^l7F`;c-^7+K%Ue-K7Jcqb7Of16n&X\(mO4Y/6!b[XD0iAKZ\&G_arsO9OZfJh5$'o;a;$iFD6'n
%TEIV<&un_PfqjQ-$acJ5$$sbE8"Gs9M&(%@,r*GLA-K%KqOCLd"R:SH>^$n@+F=XD\]Cu$gu2f<ihE)0Nga>iWM5q\R4Cnnk[6m*
%4eb@flQ)!G#$P]1(p1k<Ou]l^6h+3M]TUbqMS@=9<<SKW6F"%_[?,tS-Ku7'EE93Scea2"FW`mW`<lmAJ/^72#U'j%;+G:5iRMDk
%?-TEDfcuD?V$_'$;=/7`>l_CQBeDFn#B>9eJ:T,K/>9T]QX]O&W2K!kc;KM%"Iaj$0E]scW*k0#T8<!8SHZ-.Om!gW.\R<M-(q.H
%Y7bJ#b<okb1o6,7Z^P$b1_KsKOoT-Hc3GMC(giCr>)[\iKeoA>PX75m&mEe=-_=%;;c*";VYNgMC8eJ>4ts<M!X7XVHcBG1h!-n1
%6l$J\:Ym!\8YQQ&fHY8J*1l\lpa)Epn8e/Z.TFY,c0S<P,JJsG$L7H\OY$Rsa\'jW1*]+UNtI\**6n+)";hqdnnNG?9.67@a6ZsY
%0qt1)`]3V.&$CjG4-*44Fija`Ou4Erjb%ein>:$b6b?<;[btn_;^nG`:t^4X8NVD],:S]uLME1^m1BfcFK@lh5q`tc2,lr^aoMPQ
%U'78o#agB^3cG)Gc=ZIf#^\^b]EF^1j.I`kNsL%sUG-[E-NpeT,r/O.F[7#KUO[_(hI1]m44411HYhhBAi[CA&0^E$*T'WQ"o;?6
%:udrh)tN;2P8G\e&a^LrLX/=QB-%-:GcTDifKfFcUV<J(O=3_Nd\*+m79HoO%_e$%E]fus+pll='gZK3+-$-G:?Y0aj1OFfKO[]U
%CQ@sOm5ko4U0XAB#t?d@1&qlXb82DC;r,i`Q1YPgQgj4%&/pggXE/^C2m.*nMQjokVsG:3H912>D$VUG?t]hg!IEcocO;_QWL_;_
%V8O''\-q#Ud3A1B]-gX6)SM<NRI+Hs)HVAKUQUY2dk9B+njW1QT`HF(==%)7(i^!_%]kh-O?j4B@!*,/%&!Z8J]P`.7&^23(i]'n
%]7ajI_c&:Ic_R,YXd"kIrFj9O&r&smO:`1O:hlA[HAIH?K^3.'7Sq&Rjdh).Ip,6,!9%K[BS?REkm*4F"8+7?GY'Gm`F'8+*>S`B
%<YL+c%;5theUt^UbE;HX-80EFV6Cf2PV9X81Y3;9bGV7S.an79;M:Ok3VD/(]PY\,WJH@U'=tpJ\[^_7.%Gq9_6-&)M?/5YN9I_h
%,iB+W6GDMNNNn$^AM"`pk9=F>K7?G;-9I/:EG[mXTI`H(APpQu#9k_)9G7D*cgB:F%/!#q1"I9PGtH]b]Y>dD=mPcR-3uk[f0oTq
%hek%T%%Tbl\K&2qFVF#r>4..Y7)1kll$=a]1iKI0Z&GHKf@,SAY!'pBXr&[7><+OBWqOBc$91dWa!^=*i%`@TF\b"2K$&EIkt5c8
%eBi(ZTAtLWSTJ3l+mgOSH)D8oge?j2q^>o-b(=U?-=GTi#d?.SE,ACn(5:h<@-oBj#bp!Y[gTEcGfe>P3]ePSKZ@I/Q\K6b'FFVA
%0m6/6">Cs.JbM>56dWrO!ucD&9U,5RljO$R1tiN.Ai``F4m43o'd_*ORQG*t;OU912fL/Pj[T-9M<"kY&#<W/-B?h(PD=]u\?d*[
%@FKH\-hD"n;)CaNUaH_&4`2*%LAj2t2tRNR@hYuVE3[?"UDXF3SN5dd]Nrk'Y0%3Jrm?-d\o8Z=9FdM6W%a$q(bAq4$Bp[%'eE%i
%)oh/C_87VLGG9d]$lWB+$PTRH`=!nNcB)^>^bBfeGsZ"H*AP3qThuffZ+ZN5jK7a@@FRPs*3NC4%>W:<)ogP%-?(r?DWGc,3haI4
%ME8#[,G(9FnF/D5^$+GJr,+rK!h*@J33m]STlX\1>&P$W#BGWGj\DNjK!)Q9T7fgYf!oLN;IFipj&&-[*D';t;AsjF,uQ0hf4^[H
%$`m**H'MEoHj2gQYSW8NWr,IK[Q(^U-/<,H"Tqbr-&QY-;dSip_Sp)U6fhO(=&It.MH-0?ChrJP`l5+:9/p%?(Us)k%6:A_EA07k
%]J65i92E`$lQFnF.lEqmE%mM[d77sog(c)3T6:l!>,1?"lU/["<IHulCL*QK2b;H#Z9M4g8?M:>U@ct6AP:oNJXGY(U[S@#)lH0c
%a"<KrUFVTo@*gGoV-BK4[1<TcXHe7im&eRJoTXg[PUJ^q>!M6lp`:omT,*3GW6Nn0-[%:cBZNaT[60+FOLQR$5_M4Pm*E(-KRlh!
%8/-GI-A&pk\p>Y9+U=a`=$dKO6@P/aMGPNB;H\iF880cSXc\O1Gs-ok,n_D:a_9TT==Y:5'rJZCb=607=:%KmfK^qN#h:d(+#`-+
%OOFN<I$ElLDZlkuZ9MTo,p_8.jS>`BUh3plg/&i#hD$0,Ybs#s/&EEA,hhIaET.kUj$,4:RR_?5_7k[@(:&?nV&bWZ:7qIi0$,")
%BSF=Q"?`;K2DDD&!m*P3:1?"%+'9lL`V>*kQ>Ge>0L+e5!g-ZtRYFoc<_r,IHOB/g$`-Fh/RK9MW9Q_6Tqh$YOME9CO5a:IOd+5=
%2q#Q;;3XPGd?L:mWACj$Sl5a5B.EGpn>I==l^cGO0jAZ`Ta]0n?J$@RU_*ETG&3W6C6FRG6H2O/>0ZA&Rjt.h&:HdQfo^sKbSHh#
%+XWu+T?(Z#QnA*K:J,4lc@Nm9AiW9Cr1ia`F9sr:!t?5iLdB4j9K83a,.fmHUIC3%_d6j$`1K=hoPi``p^na+G*9Naq!tM4Al%;_
%,lFC.!Q5'M];3?^?H%R"I&u`BN6oOB1Ll`2AhhE!L_S)[_5FU;E4)5hZDTG)<TSWs_/ZC3.nF^IM"[K#*9AAi(-FQ'1j+pq1R?QZ
%`?G+b6qgr^lc(+]]84O-UCr_L_9b42e=.XGY\C>YOSZaH:pmff6m/rsB]B0+2teTkJ;k:"&I2FD3@Ehd6LTG#qD<AF@=Ub.PFAHg
%0hM:0P`R1o^$>O4bS\6rf_76,FFC\TlWbT@0\NkRo4:@jiqUZA.QY0-pDU,">23H8FB6%\E$C4acV?-PH5hfB=&&)%,R@mrBAZN.
%oOoP=Je0%u1(t-Kj9O-<2984cc^\KECZ:!:_dc>dWe:L%5*We<dN2)/;b)G$*]1*d\F=)scR1ghplf/]GK:IJ+WjC%cp"15\<%^f
%j,@Fh&?7P>]cfdVi\\#sk[]T?7<9fFMBXlIEj%!^K3Nd_q4,ugb0kgM7sX7,oe7pGLV2\u";ED7&-b:mfb485a>HV`)'[o3*0:7-
%Ug0HE>+N1nB];D#dmGi[1:2]`6YLU4bIo6)-HF./:](ob@u[9]*1033,`HO]E_HQ$pYnWBk&mFdK3/:+jNuF+M=?HiNT=S>iQJ:>
%&9Kad?N:E5>:o*fjEsd_^K+G4S8roY/km>Y?=MnS8.,e8kuI;GiJL@9\d2ON&>Hu!Gq(=6#@u%-a_#PUObPQN)O]8RmHNeH)7(n9
%[t1c#9Z2SDM_8++84P<T$INg4EakBPN'oL3+bkWHEFYLaSnUe_ek".B9/En5q]DShAqp#I7:TKQ>rbCoaGe[YQ\Qgj[fq=D4H4#'
%O[\qbDR>[:9Q:4*IDu6q?)97\)5Ce$MlM^Z<-Y4DK)).qIUR(Djtus_ER'CIZSr@p>^;h^C7a^M=N5`'aCH\3*VrTO(EuJ*jq]L3
%LS`64F>]Cb*mqY_cULuOBCtg*KZ66`3D^ie-69qVTY2$s<V>3q$HnE]EEqO\a(<7qXs=\fKmGT%L62!HhXY04US;`n/WXQt60SMh
%ABMj;I-/NeY!N-Nh1^\Pi.=GN;Q(3j##.UV?I[9_7N703k("kualGXYj99H3!sP271Q8W/1KIJsU;C"j7>MN.(eNq]+id2a-E_^:
%8Yep$'MtRB,l&"1V%BbB8Dl5/;C*%dr552f@,7&u@rRM]%UtoC-hR'0KDEo^l/P:?Ik\<r+:XOf5NG_8[(!>l7^REVrl%u'h*@?X
%Ko."-%I+/7:uipa's)3onUFuSY\kT-,FZ_9W>c*h)RS'e9O,:kAi#38AcoHi\^:UJJ.51DoRkg^.!hTkD_W2%*6!@\)[Jg01$B1d
%Gmg\WgLW&^GVF>>$p@qH%E'HnF#K/3&Y:[OZ$6b,2L&`=U[B4/:39C/Kg>B.4.iG>T91A0d1Jf5>jlnT.&1810GYGM.<0Z"9;9T,
%.5)_g)Q6pq,P`HB*S(.uA2l%A03WHr@B(\O@<CUH=t[?X0cPPdJrreF>lY]eCU6<').+/C/A.FtX`i'Y>nc;U91(^QkeLIZ^kqIe
%1128i;OGX-b&LUJ>pg%m6T\p3C`,/S\rQ9KJiCJD#(d+/R2m[scO5/F.1:_e1;OY#JAs(fH7!rVj`RZ%oCO'a-P"7N&ReY,P[b#m
%6VrMR8Z5FQA[lE*"Yfoskp)YVP=,L]?PmF6q<s5Tb+>0CR.mYM!Qp<;k(a8AE]Oc_#'1\f0KOa)>kik>1l`n&GJr!OBCe.;$/K8"
%H'Bd4Q=J&):GK#8+Q88iL43@N,/R/ieJLHP\g)EO`iESj!<N:0C53*6c>/BUiE0]FR;<^0;Y$J0\o49\07"hir&T,GiLZ8Wi-L!J
%OQhqBNFk5t+@2S23q+5ef<Rucj]"jXa2AUJb8)'SDT#[`GA,r0Un/#Bh$Uod1([6gR2boH$kOR-*q,&SA;Dtt4Vp$`RXRfd(lYgm
%mb4a^9KC4^0?9S;1fho3eJrM7X!ep0cIdG?,Q9KD*j8iV$IjVO*N'mJ58JIN@m<+[VGeDV650@980$>&Ros'IB1,/S0H76e9`V*4
%5E)>4Ua0#>4r:N.i)N!U#U!<]F$@ub&;X@CHj6Q:o`EMZd;G3p=263'^_os.(<a/tGm@/PRF=RO3QM(3&s0sXi;R]*Rh,kH/&aeV
%5R`,^crV^uPj#2f<(.>F5HKg$=XMe)-EdY?i>H5@(`q>)KNCJ*G5AFhC:=hh7nKL\-tM\84H*0<0kYA>f/FU%0Nr!P!PoM&64kL\
%Qrgf)*^<%EoL:/LdB%n#JL["eH+se*knf5CPCirAEdSQQ-Z_.=FRe4h/KR%l6A^&,-YCtGbU\3'<$'pIqBHjZ<OQ%6n=D^oGrlk!
%A'Fip.m<B)#A6[re`P*21&3@\c+8NPPO7uZ?p8=G!HP4()%iS;UE.Y^@t[N*#0HQ58/01qVRpBc2S?LEU!UoPahXH@>Tls>+r[CE
%W5E$hTF=MJJ]is)d9t35Dai#L*Zm]Y0,i2RUh`KrH>$>Yl4.SqL,t8QS'A`j)O$nZd4-A<+iM/uB#gR\\/(i<U4^*9a,sgPShmF;
%1PeRs1[kL"gQLHY=_.!lb77iW$!5Tfl,Id;#ssQ%eq/rNNs3V(Bia+:bSqj%'_,0u7P>'>MFD\R7k^Tq/N1;nZ,hoU\I&\!N#?X.
%.d7Up^EiP$K:#3")n%F186q4r>gZ<!d^321g\KVs(?=He_EW)okrSX&&rc?T)#-^&HgkK@Zp!+JGm<Cpar4MsK78Sl%n3i/X^!'N
%^r8.U,i^83'ZB72E.qD4:,X\8dtLc9&`h.!B#-DR-I((oDS)r]H4+fV\%GgahGi\O<>?+J"1Y<Sa(XRmW6-56V,nrLKe_@^0c8&f
%-QG'F['CL>,2?.[;&4<IEDo:i]<\I/8n'"*5.QgL'S]8Z3MDkcNOBO]$/\!QEb(Rh'(%+>8jj\5etX[=AhFIS#EP?%R`34]a.//7
%K;T.n@u^(K)[cO1jlg['%=2P"U(\%iDCBfMF'3#,:be6[gs"oXgBkPR;oZh9@?Jd(JH7U_A3KC<73Kf?p#:kF;,Mf8BJ:,S+U&IH
%-nRRrTA!!657Rd^`!%m##96+=<V8ZQ8qadr?4$40m[XsYR>*S5-Ip1WJdrAiKKHR4]$\fl"UuG'8<\l)1M6jN&=bB)64'TTO"Lu9
%(abbc0H*-.$_),::oB`(Em^JsX$-l16,t7>74Ek;&/6Hr"7gH*<`rH]4+d$m.1853h[A?#Ck/nY=l!*Y6Qm/>'26/1=nJ7i,l%gr
%/;$Pi#Ub2_(T+q`I<%k]qEf_R!\#tM=nk<#NtV/A=<@7E1g>nB9J4+*RUS_keU'm]6A4fZR=Lt8.'k0uN)[H@HV*cpBF[aYDl7b/
%\I0,W'MJc918V9e.!?anq)"R@5d>)B1+gp_jXDGgl%Wu365Mta'W$1J>c;)Vfm#P^'"K\hbA/4'Xo[sS<'fL'HD/:-]U^@,>U^W9
%hKJ'^Xd9_=)G"_`p_$mZ>UNK&E>**OXdDb%Luurqf5A]]+XR%saRF4K$*C*"0OP#39Gi"&T=ofo-;*8RqoUAPh-;444IO`"]+3M1
%O(*(56"A=E"ftli,mr=uU.iZs(Z<!n'UWKt>hb+''t]Z=?J(/2L-e7h<DPs,W=p1SZM<#ao]K-O>9B4Uq,#PLpQ?2"/g,'MASWH)
%\;;g1*;<*/s0K!#OCo0o/YP0g9!9NqQBhp](iTI`nRd(6`,;u(M";;Z%Q]R0W);UW_;i`H>)\T]'[0*Ep(FAm9[W$f#iRoY%g(0m
%9V4"YDhPrfG8?2sA:GBO=m/aopCqbM!34,f0SUF:&)Shl19(n'Pe$:TH<04<%1\$+[GZ5N^3qB"@)*YWjqY[%6lR:D.V(pM\Om^b
%hBW?!5_q`*KPWKT_X!#&iDl/1,@dP.1'CSu;2Cm@$g^+j+ts++]2dcN>-a9G0W-)teFU6h]h-m694p/>(ll,NK_g>.UuW?2>gFTA
%M5gnFF5d\`8rJ*,NE7RHoh6ZQ1i^WtahWO:U1B9S7BAc!3'tDM$F4Ud^L5.p_fWCG'k_(":Bu/a`T^5qm1G5.L2hgb_.<*Re7Y&!
%'tjoS6lX7lV+6'C'N_6qd&'5@#;IIO;gdAn,SIr,@ZK.CQK.Wf\JT93#)rmW[i'b?@1Oh=@LWS0=!_'S2+B)g.?sM)Vfo,sK.1&9
%)N0t)1^PA&b;"bh"RFP[Kn(Rb5Dd3k%UrecPbK:r#k9o(-o.Ma>c\h,%jnBU8Bu.ab#'%@TiRBgcep8"S+mBnT]B&tfI)m>Rk]$f
%B&FC`jEbG$2\1oma0`i;:^A?>0W"][P#Ua,,+fLBk%%M%i'f08!?C8&':t!q2aON[_V'h?'KDEg0t7j+<*KCMG`79Q*[[X6Q@<Ip
%7D</a/BSf1F1W=W60f`Sl!VLuTfnEmcTKjU'$%oql(^_,3i5&[Z)#Dpm3)i*eK1/n:J;WRQS1,]5t:$lZ.t5)"`Z7oUlHl7;W>Y6
%oSE(^<Mj(aY=Aj/\`D[#cK*`F<FG=_fg[NU'bVr+.SiL1ED1XSK.T'X/nuts!a\<]8YeJiWKLOX!is?)`tG(2knp'B`/ODe$_cAl
%Oj>c@_''MWZt<o/,<H>--;H8rB3Jb>kpg,UBGEi1&4T@YGt6%TUqF!9`DcCM;iqZ)daE)]@80+]+\qVdK_@n=(hD>)QAM=DO<8/!
%%8!=6c@%C,Bj,1?",\#Pda%"f>*BdU,\EQ[YmFtUONR83F5ScEVj\;42>+*4UCl,ma=X?'-sWHU5ZYNWNQ&b-.I.+lB-omKXa$a1
%(>tM:54oaQN\/8+(K4WrTj)@I9]mX943B'>b+G>bL,)ZRM(&XUEdnZra@(.fht!>B;#/C60qJF]ZZ>-9>nhc6N$N&2%=1jXp.7$(
%"r#c)-?`_laj`nu[+%*J+UI4so\L0[IhJ,\F\&q33ko$@(h(SX6PRj:csgt&joWQK]-Z?,OV[N#bR;hm>XJ,1TJC'XmQ;FYA<s7c
%Wg8(K,d5=$2nHh\`se:XUF"1hn_BCYb@/7f)oVcYSqV?&2q+V58--$G5m,ag]H/6E]iL+XKB[oTk@D4=&J\&?b=<5a5Y;/+9e8aI
%66-,%CP]p&Z9DD](Q,7ABUOuUG#:ZM:_Y?T_"*RD>SZMoK#&Om\[.jRq&P+-4jpVr-:Xl)Z1)2H22[^B6DaL<&ClbdM.mrc7'Ck=
%BPp;#/Xl/cdP%nF9m44LkZ)LA#d_6I[ujl<<WH.j'&aF*UX+@K8r@V^d!=t)>9^&7d*3i'OmsB#YgpXG-"Dj'%%#ACcQVCtD\Q/N
%\0=H568=tK,`W[4g5D^t,9bMXPn(Xi(T$%5js_o^%)eY3A%5?q1IP5>5gWmg'ZNt3g+U"BUU+OVR[H;__r)r)=%&ZTR.%BqE^88j
%+>Rbrd,dtM$R-!(L`20KYuFsqQOaihR4MMB>4:AQ`Q=tdUR;Ua;.4k2#`-db]g[ku`uLZl/]8-es%kBsX^a(Te7rU)PC=*!SoQ_d
%I.OXU/luI+3/=41iZ<<.0nl./\>lI>5*Q4/(Vsr&ga6Y6RS`Oig_k\kn<u1&HI\8GUI7!/j5$4296g-kAic26]MdAh2%n?=0^?7Y
%URg@RK!=Ei+TZ.7X_*68#;k13@X5=R1?VR%KJpK-LD#Fd+>@/5qB;b(:ca(S''b]UIrorc;Y$%q/-sn$QnKEe4`pF'Zj8;jT\aqY
%Ojl/IAXj*bIQPSSm3g,4`2Y0+ia\aC$#+@92(tXo?ppl_;W/q_$V*<='hm#'L,lrhYh+0EKk$9)ghiXg>7b\B2>M/3ZWT>CHfb(p
%Pg_3l5_V5B%',YPD7Z:`q5o:qa+UlXB?fb5FFguX$&`Q;13q<2PDLPT9f(p_;WP'f*+YJZS$Jd0EKPUc`Md1ailOfY]3nc+FL'hb
%&F1(mi,b7%/THn,M^AT@_qRrL<dS@dUd;;k-:qCbjk(>(7%3nhL#Lh6be$E;0BUE>0+J@pHA/C>(n2G"A\mNGgr;)+l;crcaRauB
%BFo2RW%96uAioN:Lc5nJNs@D$Wm6S9rZ`@\PNpr(R@W4gR)VcjDkf8TK\-Ss&nBNdRBaXheSL<fb#Jr)EQ0W@E-*2=VQ(P"Gj@m>
%d3bA]=e%4*N,B>_OCA@m63_LgdOV@sqMhI*%ttqK&<abbG%T:]\Lrlj1UZh:k4l*m3)6[tBS/Y;2'pO"`9XsYFoM>DqNbW0D7QY1
%`RW:tDs9\mD0K'mM9WB$H'SqrDt7`u^@SFblFjF$b7PnIf3\'b;:#pB0YB):n9pDEiE,;\8QiMT\#d0Fc]R\c26s^=\%%Vu5:>+H
%n5/[-9A@FkISPXiQL0U]!!2^Mf4^E4Xs`F[oGK^<8*"_/!0tnTf03K0QDP%:@4pHrCNCP.l"$rh1[B,):umqRMe5.aU0^lcMU4p9
%J[n=`cZ9R+'lAT80YWchi8:LuMT<^1;/TS1;E[[eV&*k?BfC]nDk=q_bI@%mjJLH#Ougq3#fe)A`=e.#AhHtY`eiMB$TikNLlag`
%ht)csq7Yud^?NSf:QdBQ7J^4M$-eZcI?G#:gf/J13`#Sm+85WSD!^S9&JNMVi/J/aM\,W-'2f,8S:28`P6WQr\Y^$A5=t)X?R.@(
%4.2Qcc1X^aS8qQaM=3PUe#.a)AU6.:^$,#P0rb;3_W#V1M/t-,GNoZj)))97gsgLF4\<@5(MTPrM/T!HlR1fQn3o,<lD0tLR4Um-
%&WYn5bldG$78iAYT_"OH8n8?1Pe6^3qYaV6ZKTN#S(^W;-cq_9+q7L4R>:W1o"0:+L8-\%9d`m&8XWKH*lgN7-]$O>U;ppkcNbaO
%R$d'c,en!O_+.7=nkCLGIZf(-?fVV`m::++1tsD"E6:mt-_^.-h_COlFU5=![sF0t*+GDt@Ko<iR(/6/r17VXbKi(*[@L8mOtXpG
%H7djmgcT;RT9P*U2u0<ahg&*PGKGd/mCP4ll*UX@$_C^0@+sT,]+%GAoHr13ip%o5Qh!Ro/_\>%4NY<A*DX/Em_j=@P_G#mc$Es0
%jrt6Kj816FLej9TnqtWZ_Y3SVjefJMl:LQCI$(JABI?aMUoAf@*mUQWX?.:]:Wi,aA1Q`*bYH`IF5DR`6UB&D`*8!(lK6F9rkeSM
%1p<C<l:ua*,l*U.UeReYUuk7j5"UJR2he,md!67j(_<$>qo-3QH^.nGV;U9XqLtc:J^"@=iS48nc\03k[d'f;Spla'"qJQ"Nl'.*
%:G1l*ne'I-6JGB$4AW#Y;jS>^C8P=?lA-l9DP!:Wbu6J6Q[:0j\[E_a5>T%\Y<!Q+FQD0=\TXrd=KYf#dZNu\02I#W$JgpHXceIM
%4Q\4fM(L!_@YqHs^+OGK@_%YW1I`7:\T-G.rD``q?I$R&db2!RlI7q]LSm)VX3TG0)JPBIG_2dPjs%LJaJB+D%uMjqjNl$8_"-B-
%9[-:S-Y**#q,4rJ,Zm-rRjV?"Y/?BkVP]QVo;%8L;%Zo3'/mKm)P3$'.]2Nrh!hK^>q<B@?23\F'j8^[AYZjfSP8]tVXb]I9"lUY
%?%hllIO>11I5'(Lhpp?*WohB^SMP4TMG3b"_#17S:`3N+DfKV1Y'NkBNk#qH=g+BTolEV"*$1!mZKbolS:$?JQ"Zj^H)9%[H6INe
%n@6OOjllG9mZ7nj2k6*i]d^+qM:L)ICMZ!MnnTZp+e#ri>5nJ)).Xdd\Z+t.?9aDU2`#C+$&*\jb<g0&JaFnM&>ar3"hhdk<;;6^
%ESXdr<;ih'c31%e2Q`Q32,E>ml&F`'ZZ`Kp*JAB8K3i\clkktAS81E&CE6a&eC<4EE]u%7gYB7*WHt:f;6Q-?_fQXJ-cZ">4>=;t
%Y'Ptr-ZXJgk)0AaCdZA<C*'a+@LYs*.@s\F>f_Qf_FVpgl^k+(l50,.*d$X]BqMob:TVc>e_%D[hg$E<IE,QFI%`<DHSl<POme+;
%+?RE;#VM'@huh*;+SN7PVl>->ISm<26'naOp5+u]U(0k7F/tm;kD:(TO0OtMg"VEAjODC:9h\.Ge5J/E`T>QTVYXHd/\O]-:!Kc_
%Zco4D1M8f/gl(J\Mt_S>#l'6b2r:rD.F*%Z+M[q@Dsu8WCNEa9h@&rtf$+C\m.I4$h,!a02!p3SRDa=p@2"5)99Q'cr4GlPK)bdu
%X(mU@r>t*a#YHelhl>@Jp#5.&*Cm[+c<>LRKf9"j)ioj5^LskX54-'GrJjhf+5)V,@t3mK5E&4:qBMX3U,uQ#6@66Q$g9luS3KY&
%JdUS"caoo"D7el?UeJ&@*L#O@p&#DY%bN3Wf0`?cd?B:ei\=\Nni3Q-1GaBjoM[>%W1cpf0W2%"iDo1IA#%#:-<PdB9X&1g*uW?#
%rq*gq%VQMb1`lN5GPuM`8$`FilU?:gXbH.]T!n'Nl?6nE"pq%E%+u,ri[moHGGZ"!2LAnTf:RL^.Uq\aW'C"-+8Un(Z.UjN`"Sp_
%rS_]/1E`Oc0fu<N1=l323#6mrlae#C^=I0[T/b*m*q_ltnH;S/KaFs4U@`\T3&IkGfd!EfU.=J-j.+*/,8D%C9s_#XVP`#g?SGL)
%*mNspUO(giI^^+BrhJo'=-lb;T)9`4[68dnHfW[_oE]:r;+!LBplcQSGIja>L4GjJlGSGlT4E4EULuJtDu*TJ-%:aa"Ea<[9(<f4
%)JRQ-o.[Z6!N0<EQ/k.NBu9qN=!IZU`D[Q6kkJdqc]klgjGCk/%t=]8'tKU!a`ZLeFnUH]7$IPi,!Yf8C3SVY:7p+7_QM]Nq86Xk
%1C%p2[<gt+GI&Ydp\jW+U4uB=N94W"o=dEtMp9BhUW<2dH1QW!K!X\$O]p\hMd#c[5,//%]*NN(9c:n-dX,A$+8Y$d6s]<I9j%km
%qs.mE)V/g"_!#ceGK(D'!-cEud:d>&2gEKLE+JtH0XcWj4jhpQ^nTZX_r$!QN@eO9meaON[U:M"o"^tapCj-j"ae^476QGZA/IYH
%)m*Kf/JFGPdtI"0o%),VpIs^t:]+'$@J(=uqU!]*4OnE'BK\%P07&KrNGp[p'IR@B*CS47)T^"/`%>a]U2mR=r=)!^.V*;$*gj&+
%T&N80kX?r>UcnA"mX'iMlpd%0SpOr56)ZKBJJ<GRi\:&HlNW_Odj(crcn:*'J&AHdW!n[>,F<T2=8YZYhm2puB%%jul?@Yb5\fr0
%jgd%W`CQe,VmG]bL<sa6`3/ds(<pirf'2Yo:i+_qnpX7S(o@-/oXgd5?*tQ8a8YLs&/s-Im"&#_d9jEZGf'%qJY#9]KraWuYZ]Ji
%9o3&rWr!![g*;r-h\UbgU'lohPLFqeq%,YGT\\g_97P?UWapA<^)-!H.VcW<(<h'CIg#P?4bqV8EV.r(.Gq))9S5+6C\Yt%4nPbH
%MVLl#EptPSSX-l_2**V=O1ZNHH>`O/l;sEY\OlKYW".(6$(>W94d!@:PX?(f"b?cdS#o1Mlb5U^Nmn@$(8LTU?b>Wb_`F5L0Y1T_
%pKMfE,3D#Fq8#HoFBqU:;`01)9Tr1GLX_:,e[pR^]^@l3:IUT4$I&'>YPFmD(nKB_-XMii4`5OKZH>3qbRUX_ig)oT$nVLJ5+?i;
%IUtQ`G-_ECq4U%P:/hI(hi-,rJ#?"R%u\]T,GW<TmAWn"/m?Vb5!Om^d6q'k0Q-Zr26sdqq"t$pF2_F]7dGWI]'kJ?+u,gK^uS,^
%4^I4lj)C#JpIq_+4i,2>T7&qhlqIo=\-3jCK8h)(@=Mo70aTnMh5ELkWV8RG7mS+'#R-F^d*oM2`aCd<d63]eU*hE4O[>P`XLCoG
%.u;;8[X/qLf)bUds"+DkG2gp5Sk6WaM*E1=@]%3l5P12dSi@]JC(F"lMk4B*Nu(:6KBNE.j5*<fq[4Y5m.WutfcQUR(T,B.kQ;Q`
%l_16*qOulPd<K%S4uJM79rWBk`u2LoW<g%*OG=NH@-3hsM%I[1">#aM<hbf&naCc&.#@B)MogA5lL`s%&KT-apcM:<f[3N+a'BbL
%-?:oRf'3a"fOkLj,`[9W`C>j0"-[c_'7WCoF7=cQIH[ZeT:HhEDKO4#^?CD.m<939`uWQ4nBJ:3^#8KKbpRBLr]?\WpRUu`d3Fif
%g&3&i!6$3JoT\fkMW')1bTUHFdYj]AIS5ohEl^,/?P2*S1.Tj@E\Q2-B5t5.rL7FS5lZ#&#;5th0E+R3a&1K*nj?d[kXu"EU[cE:
%]]b:4^gT%d(*?A?j<^fr&U698l&dMVXHb)6Z%3Qt*2n:-2S8.9+*utn6u?ec0:U:8lu&ENBiJnL*Z7,dmY..J$RS'J3U@3bF*$j7
%aR*qj^uV%GRlrL;lgN]T_=7*Akg?Lf*o/;#/2fQoIdcF/lOV:CYp0nUe.6;Q\Dh)`m)&h`&Is'n'R437Ae0jsI=M)6WCSfgU]/p'
%]`>rYWS)N,1g]g0WC+=tp!0bMWGom$.%i>MTL*IpGN"&Lf@fMId9V7u>u2KrEFdQ?qeH`@`N[jn4Ygb*qNIKk&_63;qE^)Q)aFYH
%'80/Wp^/9;;5Sl<Ae0jKI=M*!:^O9V7b;."G<r>LQC?o*7eoK&^ZAM6c9N+sO!h6.)B'nS$jREPe8Ug;8GU7GK?^<Km>4tmkZ'h^
%fb"Z'B%Ktbf3PQuhU1hTg#H<JD\)kIee,')&0oPR[N*m>4b5Q3Jq&P#L/oHUC6)WRI:)o;L_4;D2X@'?,:I498<"\#oG;qpQ\Q%G
%]!ErL86Z'&dF@85XOVM%?\V/LBQVR2hY4r1OVe9&1<C%ih&-hb*&^t29\,,niqif6b%*b+c&5\cKS4An"*N`7mhL?0Z0Vj016+hb
%9^[5dO%>4'-8MP24k9G$@Q822*gj#F4b[q^0oto_QlJMDHT^pZC'+5Dld/bsBeAkAjL,HHW'<!#pHA%:,l7NWPP*;OWRbcC]?rd*
%nY2qKX[3T^G%D]$n3bSd>!/Rd/)kOrI4@cp9qGIWrU;b=/bl$XADR!dc@.I3BTaH?jQCu>U;-Kf:]C(]s*sb2lTb@8O2(\+?iApo
%^\Rhh:?Y1BVuQBB5Q9L-J+qtFIeVkeJ,K`Nc[YQ4^\dR!b>3WYTDh(TgPWcEr:b^=+9,'Jrot:arqNOThu*>/PJ>o:J,Rjgj_$gV
%aWH$/'2.&>eFnCe=8UU!\Gb$/^X<&DQhKN*IebYs21>;nXmJ@NrD.q6F\Y;N^-(c)d%ISc50MP</48(4cAMQ!5e_(lY9il@^u[BK
%B(MdWks+))k6HWoXp.@W%7%LP3@Mb*:4Z>_^`"&Mo^2(N>kD52BinNHDES]uG<oT<:!a?J_2*i`CEO-WF;UJi\tg?7/(!r)*+f2&
%"c'N(%.mR0))&S4XpPBhE#ILl":(04qP`=+XCr]3c!W,0:?':0\'i%ig$et12o#7`LYr'RO2(Pi^OH!&7f+\<Lg>(\^]*eBs5-&r
%[`^mbq5^.fr+Fp$rUJq:s5ad+ZF58]jo;cTs,[+SN5]NFXFWq]I.7I+%U0bAgPUW,EKUOq(UR\7bkh1UhZNYjkZ7@!LjM/moE1h=
%NQ)se4;b06T%_cMpBT+(&7/,j0>9tX:mcUL9%\WT]LVCW8jTQS_RNmF%q6F`X&82m36CJ'HEiW.?u&"k+D.pm+2\&4NSk?^YpjbD
%((C%V)rd?p0c-.'p<;oqpXdC7:`Ph`)]<`J"XW`?DuNE&eM>H_05.qu:draT$h:q'[)Qg!n]Tiu>Jb\E6`bSoh>`*8l6tObT8i1$
%Qm#4/H`rocb%[3YnS::g(<#0?GhaVmmVn0cBBJD-^45_4jr#0J8(;L`@u5e>@NuaUP_dSA3B=@)S%osbdepTZmd9XTV.>2A[3MG*
%'/kh`QEMk!i$E/X0fc\5_*f'r9Y"h2].SSg:>rulc+N3K-3YKf#J-*2Dne(j)e\KN;Bl5T.u4CQ)P8M>`&QQaHt$?'Ea4WUL!r1(
%-;f-UHU!Qt<t+']o^T%t+?@;T]G!5D'[)lGRPK>1'jsZ<h2oR-aSVf(Xb.a^dP=kCJ/H76O2.MPU:YMik?n;;HE($561^B!Y9b#I
%A2Et'_FNo8,JVr+J)T3E]^cbT#Hp+Am:t(f_Nes\:I2&+[5a)C[gi+ndFL%HGip"mGn?lRE5+Vcp?"<(5-H8d"YmZuhSIm&^'1d=
%Q%S:f6:&grL#.Z(.Xg=ojpY+\#)44U=Q^Sk%`'<.`i`="6c#%4dnMThQum\n-AZ!].+YJ(7DEMM1>!PtE^4*62dWnbnYj+?]EZC!
%<WCtG?%$A*HC.)I=k.:%#2O1D+?Jk5&=:E3fe!##nHEl6SVY>P7Pr=[&8,7`!8A9EQ7M4miYY;>^u>te-0lK=SDq?%<hh&ZVd.?;
%QLX(u3rGiCqqIB<llCqdDRW$(+=i;1#%hT%`C?>:m:(jp\G`KUb/MVD6"@E?]il&WPFDQ(fW<!o(4$H%a5GPAkQPtaj)F>0.b=mp
%&dNWHh2'$J-Q8&S<EKV=,tYbO!BM.;0fp;O):s"N^CI.,j^u:O8$utdNb^4s].S8n#)K*W%]jW]"MK`-/iB5Y7ltSIV$j:S]K$Ir
%`r01Hi>Ci2(iV?V"ZT3CA)#cW6QWn5L2k5_"rkl"c"n7O.S$8a!)d\/5d':#kIc&KN'4@?#1-92]k>=AK@p&$LKiLCU'$rp5@/,H
%\/%(acC5EhEU%9DLCua[k=UoE`eE16-K&p`p3/`WT8fO[`B5u3;nM20LA]>/8D90W,R;Ima+hgYQ8X8$0pp`UR-[l3DKgs[8V8q#
%e3U5_&ZfAtqs=Yu/U`ca5#%$2HMaQ97Lian,j(@H<3%+tYQCY-,S$?,&n&Kl6]4:?5p(NJnX:/B*A]a4QPD?3<5"Wk)73g43.ok_
%&SR*2^d-^rp#Z8-^_(dMA2PX2r]%P>Ln0U!ULN9X<^_Q*3tmor7,>]kbmi2]Lb@%??GH"3#:nWL7FuLfaeDrBedc/Y]Q:DbPMe+s
%IPPN_6G,#<e>;TamCiNG)dbJo'o0f;D;Te&L=Qt++76VN74:hnA\iPhnV"&L?km_A[7)(Ai*?Z;Uk:sB*MhLW'D+0Bg%!nq9l'IP
%p*J268+9ut0.6Jh.WBg:<td9V3VclDg'2Oi8E8F9s,)TUl(3A)Y#E?8)+KDM%,o0,Hhi)^2T,95cGMR;7lGh$-XZ;ucaLEQC)9V\
%[3Kb)jbkm<:O=B89b<%I)^!od';Tm<m.Lf%cg&p@!MWZb1u\k\D^RTaIW.!>HO.kVY\fA5l(rBh)^Kje7,<f40sq_)EcCN2/:KfW
%.tq)Rap&A7j*jN2JT!rW4kF'`p!QpX_3unk4QhZ#)UUZ<*Q4G;&]AAe#l9m)@?$PZCfBZ6jQt\Ap6q3Mlpe$5W+X#]2t>XV7%5-D
%`h9)Nf0P^<Jmhif0U!5irU&&Qg,0_S&71['E]GC($T>qUJudIY_r/bd<=P:UO_n10,SaLh!JHHb=U$Sp#,b<Dhd;LEN9.O6%Pd=5
%#h1MEn4Ri.%uA9i$7f\Hhr:<0D^#R8]Y`+DRaa`)lEKZ!e%B`,gFPq#2VE^9.Gfe"NK[bdZGTb_d%qN0qKt3FNgN*#PU17;UkO\R
%>6ZU&)e\DeMQpX"IH/4DTU"BtFmueGZ*A-*^s['d:s8(G9CV319<d%%\V.WRJC"#Q1FJ2k6%?:o-&pg0#$aKS[[OKRoC9.jp:`UX
%W6dHTX2-@H_V+I.03C]Bf%u4lZe7%h"Khsh3mmM%o8mIN3-]S6R.9QcPT]Z@T>De#'6gSIlRbS?CgMZ:LgDr"c:F3?(,9%M(GrA"
%Tg`X21ION-=KG>`T-l9X&B*!L)Fb-U+52\l>V?q7equoB9;^h`7BO;8g;Shc7#;Iof^IUO_G3CuD4ts#FHfX44,?mSM`_D1(E?\(
%$R2e/+dL)G#BAR'Q!ju/<Y4\Bfjf1:KoABZea6T6)\W(Q!Q:[;>T^+p2Y<)+X'TQue1G?u4TtY#jRAo6-Yu!d_oi(qSD*:O0Y:Q*
%f]Y<9-kM'tZ-kPp@s"H[QuB>_;O;)pD4/<RpR@1YL1;B_``C[8"Ofhu8tA8\TR!rDg@WptRp61+.DB=7D,KQA)g_VZ+As#crRoQW
%K1P0Z5q2,%j=Qn2Lj+cr8MVR6apUig`4Sr+LXrH%d?S<`hjGCl)jN/8SC*Z>[EqO+Mf7P5f/2H=p'euOs!8W97)=Y!`*lX=/*OUG
%^(#*WVE:h2Z.EfHEh'V$cXO3C4?,m-o26T9?eK#inLn_SYrg<K375WeVqR,3C%<ZD\pB"hZc[LTq%oU?D>LMqFOA)T/^YPQr8,#*
%:$&1JmGasaokgJo;VFDf=n9kbrVS@-Dh#lOq??ffJ,A90n%J:A^:4)7ra5<L]=_bg4'/<TZ_/KDamTc$Bj:3&ES_4WnX6b6/-e>r
%nM.IZ"^@cPLFd7*T+B@5525=.P:)0(?jg*s:8ec<9T9]],A`?Sn\McG?-\9Ur6)Rh]h]2Xf*pa.<N&n7h46#jLC_ji&8pVF,o+dI
%`p8]r@u`,ZbXBJ(XAA<Gm#mX_?(B=eHY'n;!3R5'Q?[Y,8Nc"qkIAAQU`Q^>_8/cTM=X_-7t7Nq&hekXm2MtURgTMA40/k)86=ft
%DO9*a,d.r%UT`F[>R)3$J)2cYa5g+%%J.W!]%h6%dU'C.aC4SG[U(I4k1j1]Q_(TCmYO+<%WbUr>=Mi#is=@B?X@WYY]SWl/<8*G
%Esk)[S_MM+QV](#-O@mR6M?9_1(@jE6cAV=W#SGh_J0inHXM@K*0`1qMb95]qp^qjbcRnT949d=1ui3[+b`W=.H99:+?1Z'`aBGJ
%jEdm7RO_N9F)02FJsOOYMd.'_<kl8!857Gd#a0@>O-IXD&#I7B0P`o'hTD7/P^`/:9H)8:]jeu3;9X0W`XpND^+"BUVH@=a\D9B>
%YW6r\\B;b[LGn>6=\)f)i&UbYe;$ceHKX?e?(g442PRrgYu++?d073+eobiTE!8tSbIjlGm'^V>>qRhiL:HJXSFp`+Nl;!tQ0)Ct
%S>:H_mLl_O)F(DUIsJHVpGmJ%:>Ns<!f]C!%ckT]([BBA:?h)a#MVt#qP:m&ObMQ"a'8O/HB]-O8Nc'(9.nMQfjQZp@U8pD_a>>U
%#/P@8Uql8f]o0T=IfM]l7JgL1p;t0&dOs&41#ghd%>ttF''`jh[&iO-._-G%6eLaMP<tQoc_EJ0?S38OJU8bm+kirO$RmFDJ;GU;
%]s[2`+F9u;3%smhJA+')QS8_*B<0/H/fRk`:d/f1Atm24o#FTaY4BJSdO/;CI!1KiDe&F[18CW:Je\JS1I4RfE*EcUd[]SKL#0ne
%[JHOL^EoEV>>s9'Z)9>C*EL$OZt+gc+J$rT7G"q_Y>h\3F>':-7/tT[L#L^7k,_<pl_M&5/S1CMd3.I5\7R;$'4q&VTaN]5(Y^(2
%?%'tKe*e+&qkhtbcq/<]b9Ja6`6C:YEmA*3o-:JYZ#R%@-DtR=7#><Bdl&tuZuk=g&NaFC2J?Yol6TY7kHqqmR&#KODo=i['8QH.
%lu1<g+_O?TD?.ODkn0t9U\F8p^QT.a_c#&n/+*i-S@DOM\4V.a*nIh[10CTPEBMXtdtubG5)I8+1ic=f$F;5#$$>(s(tjujgN>-=
%8N^+a/_]5q);](b#7IJ)DrNGhicGQ;RZ=Y@XZceJD%&!!TQ*N_5.TW"_G%F>$kZ-X9lQc]^e5'!K,8#4#7l$>FZ8X,q^::cSY,C0
%f\@,]P&0F[LZg<Wn8[dPqkd_:&,2MKaX!;ur?^X9ZdU`R!h'8_-i6Th!^2h<%F%1+ZLbT/0<Z4bGLd7NF76C%XP:SP/T.E0K'6dh
%SHo8fp"f82GMkqs"kWXmZ.Z6<F8O!+&.%eg[.>m<A)\-p2uDY4Dpgi92bh/@$2,loalUOcefLK9\%leB^?fhM#3*4$%N[a*]8-uq
%"^o?H@DKMF--XGjVoh+*SMuC,X4:L?>?G2_!\[=+8Fk/&7W,rOMD2?C?oWr8i"mK"hCFV4["R;u^5=FZ%MR5GQ6R8Sb6g9r>.ML4
%(IZ9U?AD!XXq@#gI2-Y/7ONsNdcRXp(YKRF\ApYamAO$X2SL"S(=tLKkm>[jX`t/E!1$btkdBFY?#ZO,0B]&_#GGWs]Eue%XVT>_
%^.Sn%;C&5QQ=!lfRa\B\mM_JG;J:\/j>7Cl]23YUSHV4DNQBaK9+m,e_@-JM"_BH[$tHjlm)K!E,E=T?Kb9o\lSN>n4bkk?6"PBj
%IDh/Yd4'c/:@Q3W(lE<;`[gS[\_a+Ch4L:j_UoLn,rsS5QuC^3$247Xp^CZ`4MgK^qdG;CjfgA,X"C`;q^h82G_f.7hX@2d[6X4C
%gNJJG@l3P%,K=e6m^G'7'1diPMQ8%Z$.?W.kY4-(60LBS\7=[KQ,LC0n[MUT)nNuqI6.oWp4B,M%kUK*W,D7^Rg)eob-Cb\`3n=Y
%-OUU&&`ZkL[ej1QLrkNCbjek>\HNl/>W31&)&J%S/D^OM#.;MU)oPg%=[PsmRBCb*&=`^F[.oYH4JO]Re%t_./Nu<@[!Q\Ap^/7'
%&U3`(_;D*03,jLa.WQce)$#H?cR24&4FG?:FG^q+e"E=ndRL^M1ciP.fY?ld@;^O@#I06r:Dn@sDm\Sng:1&g*4M#I3f<@]^gd'Q
%^l7=N!#F`4<B9gQ(n#:!f_0a6L*23N>;7un7(*V4WEer4\CD64l3*4j9FjZrI%n435e<e('R5%1AoB;b#EAT*("-s3IIlmo\pm^+
%RoqM>K)Ii%lU1<&%S*Lcn0l;J]!0`0pW0lD@=jnjFm8#I?42>/M#!LpCCq9P4GGEu?n#TSK>GB!a!3>Sb2^F^`Xu8Kcnap]2>S/c
%F)TpL5an)\<rWi*j_3Eg5A\/*[K1l'3JUOBm.cGii\Mi7d`U0T`cC#L)%B;#&LKt"3oN2\6.\H*EbhdMioNVX#X]H1YE@eDo(tuu
%-jNoB^<X?BZAj.F@+BLj`Ap4$c/"nRl^hLPoYPc-9^('];K53_7,Q94,=W`n98OGVaZpYqNCRLTGC:'1NbrRMNI&7,0IDQ<[Q1^K
%7H@bAn`#q`,T^eiJM$MI6=,'!]=Z9B:RNo;C`F6]-0/qag?hde@LfB"17o0Uq<eaLUAfc/m=_%HmTdJs<s2O`fdJru9R7U#i9ZA9
%nMs`\kqll;"-#GhmsCsOnl<.<Mu(8SS^#YhI)=WfAnC#h8/j4`Y1Xt4bc1at4XY3QJ*3PHo5QT^Tg2i1FNN0kLmU*'\;,ihAc7(I
%Sl13XAbaGpqOh_JPc5"aOp##nJ/m--k.u^Z7QZQ1;\!#i"3H<4Ze!'/\AI2:91H%G$AU3Nms#Gb4QW5OmC2rO/!DJ8Rgcm:Vs!%E
%G!ToY15i>g0$c'=-8:?Q!H3)&/BQI<4#IA=HU&L>aX/I[;U!+"U2m^99"Of@E1u$."rc)od%)+*H/<]]e(b?QNo>F:4n9'fg/$^`
%kbGqJm"rT@;Nchn>i8(&]I*KKhUgdo4ug@1F3ifR$upjrRm2W>`kmB]R-]R@"s9Z8R1OYpTV")p+[WJk)p1bb,<bluMJ8!g/(9`&
%bRCa@S/S7acAOSWjr1>Mrn^=SV"-Q%?(]]^ihS.u2f>[l6.)=KYARb+e[,hdYaa_dQ+s&/N$9!s!a;HE(59`Q<;WLNURCSZ<DGTN
%M;*:PUsq8`/oW&$`])fR"e$Fe>S^U,BQ5U:C>Bb[^0n;bVDRa50Uq(QG,G8cG)"lkbCJeM)f.U1*`qI7]2MGL!_,>Vf_qOg>WOAF
%':;$o?['5Q_$.Pi6sU[5m_uTQ61]n.%)XB2]Y@MQ>;lj1O7`Y=Q=Ll.K!=6IO>.Beo6ag"aN]bH,B:dm)Pe$_.u,QALp)+E"7MQo
%8dK$[0W(Z`0,'tNl-6I0kkJ$iR8TeSe^EVo;ef(URSVVYD$YrR>UP0)E<dSs)I6(76*s#E=ccK6cb@?%&@T*5kKo>%)%A6Q2YkF-
%CB6JHCPruCp9]N.lBPDlTH,,+.3&=SU;4=4T$(rZ-+)t@<j:ro$a6O'M&ru5'Bc1pEk<Bg0`)@5cB,9Cq\U53Gi4GmR<l4\1(+tR
%qi\fG;S'8_!/'i4.kXE6;9,jd#rImPM_.t@)Ke+0(Y9tKA<H*8e]S=_me?Y@D`BqL``JP)FMYj+_p+pIrQ&IZkS!K;^UoKqbS`(W
%0.^W^H8k343oPb_h5:rl`7u<F:ZgU/#gf4@EA1jteQPA`^.O?E=I20G,@1QAE@Qmm@upt5ct";ebWFj)[B-nIk&">.%1@%FFgMC;
%8:[3,8p]X$:<VXBYW=re.)=6Mr&dZ?.GdYbLt4?]8I._E(ZhR@OASqfd`qr-Fdaf)lAj1HW"p<m:,/LkDM(ofJf5YJR1UZ)eQ*=O
%^C^^AO05n*IF=nO+pZuufF\LXYUeg&oZAip>0O,H$">N!TV6oB-g$AiJnW7@)(r`+07e0]"KPtXkgLBo%tn>SfnEfDH9?=>a2or!
%'aG>=>tb1S)pp2ODu0)L.lleLq:.eT2e&2II`[pDe"U"i9W@fN^J>rGMq&!QaP[>FIdem,ER9Pe`*4,bN-`R3DoBr#>d1t-O5]IC
%?HX-CRYPfpGRtUK52mS;pr!H62W>&G\.Rb)[NeeZd@N@6:"nttl4YelZ2KL'K'+>VDT(^b-QTDX*6S7r,s6J3>G]71M=[>'TW-iB
%VC>@aUr,6.=[3-N+u4'S&[BN%"PO]E!]%O)EP=tN+l!qe*(os1+,7#[KGJFlQHWi^aq)o4SNo5lYt^aE?nN\D!sdhT30[6IE]BHC
%5O%_:(_!0-i'Z%&;GN#a$fT$UhV94n?IXhEGg"f^aj5bM]^a"LdLXN?^(l*XHO`h=d"et^p6DkeSG@s(#irL[AX@Ttj<[HeL!k`s
%BlRZN$Aa7l%jm7_en.=hMqp5Eq;p]Tp6D56><bI!e_@ZpUBkFQ,/Pgb@cRt("8R9g6t*d2=kYe$)qJ:nGBe,!a)DOWJ[nSq./",H
%h4.T4p<tOC(D+XMert)]/9pq`1i<@^\1Wep-D6\=`5`n@kNN$6nf`<Tbi)r%`/n6Y_p8uag^?TAl,\1]&jtAt[lT:15<WCZT#\'r
%l"$$XD+h2YI?<;1P'Y7sp.=a'b\"-Sg5`?n;04L.2c%GGi_8*mAsD5HfA6.lD$+_oN;[hVX^)paS7()(Ep^8"1+Gofp(5s1?[cL#
%&h?iAK(Zu*>na'L-N2]`(Ic;j/V`Rd2!(8__YT0mVfW>T7;ftq(lWu<h4u9.&h-]'!.*)o4S']6LC'K3`EXY6o3Ap\4Y8NlX,Q)M
%/E'(*q(eag1-E>o^,\J1&QWV/PW?/F(rGF]<6KJkIc2`!0l:T?f0FS$$6Qbi7pHcBhB?k[&KYb87g<@rh_[LO>PdoS*j^\gb3r]]
%'-cKLKl9R;@rSVen@jB3!TtC;J=7OuC"KAVNEU!^o4q8X&H+64^/W=iX@4<liDOn*,*(PEl1%Ng89COcCt+7(([YRY+hW^CK?4PT
%,D\1N9cB(b)4q:U%>*^/m$s`XPHG'S/>1H>(BC.^&&`h?40B'4Yq_iIpeRg:k!WM#M4CE]HBC0KB-^-9\"2osm3\E0mtS'C/o7Es
%;GB1Nf^r/ml%W+#`+qQX`$Q0h:i;H-)WUrj]!+,^>Z*$M`g2$-LASrb\aPbN:O;6*D+@Gu"kUDWq:"en`X%^2STB4)3In7#>foH&
%[+U5u(EYCN`JP[`\^p,ipa$k@gd]X&@rp7H'I4AWFgjSEQ>"t2Fo1rer[rN8h&@BVECR#3m`>VKKFp;ZS,VWcIEi]C6Ds?k,-O>k
%7tA2CAG4+$lZ%VK>=?2;;pd'4llap8M%hb$]T^?X.K0rDU$!TSD5b(Q[.dKeLYD,^_bj<f4K]k>,Lsh/gR0HBhK[p^+Xsi?`&j4l
%s6;RR7h&V$8iU$=8GBpHTEF)Sli`TJ'3`D<kio%fDrMm!0?+&T#Gr1V3#!rW!pAq#Iib)n\0[srEheB1oHCf-4TnT'q_hU@>>Tj0
%(sed@*2OmdT(6_-K6RrOW$D%fV7#L3-(=DV=^sa:;Q;9B?JVpS$+@[,=6gpU2pPlRVI!YD22.DB65VC@T0Q^/E;2J)6KZWnDN0QN
%-OF532;]&G=tTa9+;9XlV]AJ*,5;OUhuXis%,BVOD7AZqN/8tD8>,FDIr3OE"'O]t/5"-,?pN+sTK8A+j^21&ShqqM-pjg&Lt444
%pXIs&h&\J4[Tca:CkmA;m'n=*eHGEBK%W3!1gPr\gSDDih!2Vu?gUpRD?Gg)#aeHn0Jdm@*$%LJ:,IT]%*tqNm.0WAN>r;>Tr!MP
%hosoqi38GJHp<?+-\=U%9jKKpN7P.Oc[QBWhP(Mpd=(H9iu/rc!RGjJ*G8_a;n0!S.8Yg^FsI/9JI%jP&!%sl025@,<K7'8&()O8
%Ajsu`.Vbbo3"Zu;M0;Z>mYE*_f*6%1at?-dW^mV**5kU"*KOsj*&<SaN#d7QL!HIV8aNS/W+O\1@V1E,dO4$Mi8MNFQ$Lc&B[?G@
%ZmO[.M-(2u'/(Fsp-+Prm9"h[3@4#Y>(4%`2NhFUY[0X)&u6s("Z"R`i6*U'(7n;+I-#HX+ps__.:0cD>=BMK$<DlJA)4s$;RrEl
%-ZREb+l&lJ^#W\PM):XjHMB`r)LlL<0\;Nfbd<5Er<VhC&=u\A:8<[XAA5Z;$#1%[dC&%0`uS<kc>YMuG81:tRFa'2[C06\+U<YG
%$`p>iQ%+Id[d:lIA)YG5I=375.\H0(>7gsWGDn(25eulBTf:#^i2^W+r.[5o)IG8>.[gmNPLtfQ&=CCZCUlli2C#%[^&gQcgGfBA
%2f>sh/HTl3:pq/>;2D0Ln:[d!UW+O/Fj-(o>Van$0_1sZ]&q1$n`ofuE[X!%X5kLCJcTj&H*kArAXaD.ZEidC)\Y^(e!kh-0f9GT
%)7-)CdGd7.qCjn5`PM@+]Xd\D,QJD_%#B3qGE&lFIcH"NLhpn*:HGn=dVYnDL"fFc`jknh#'%SK1C?719=ALUV:+=f0.We!qq<$a
%-dOtTl5V%/7cYiQpPBJp]_#Al!eClu\2Cgja'RXuO6mMqApj\UA/s:Zc2m)sp12K$K>F<3F2.dhE!r'Y<U$DNT*5.J#HCe;lslZQ
%(6LZD+dT:]_g:^RN&'1M2Iak97fhM+&V6e9RWR*mn0i3[i/C'n);d<-N0cRLX1CXKbi.>9K;=1CJlicJ)V>X>E(P^EULZLi[nj&'
%0smoF5oX`P,ZodTBgc2PG>UTE+Upl]7=\0L&M:@6a9_[J*m$lUk\gNfn;,Xd')/g:.VT,-OaTh*^)o@+f!qOOYYj]uRKYLS'+l9K
%,@a=c$33V/.$elkAdA]A8mEl:OD8Dhm43Nid&Ck*Y$?]J^1IR4O+jbEKc/i-%cZ,coK,dC<CQG=0^)uP.`GQB>ZEgc^Ipqs[!`fT
%mr\^lfhgU%"8]58ldh9$o'DU%"2VZ?`4[l-8)^M<';egeXo@=A3pE`,dBYHu7^u!!`>G41j!bUr.l5BkG'V,a7*bdro[:$C&7u';
%MM&s>a#AUUhst3M*(Vc+%bNqb3p(LMf\q7VZ%]t1#e1:P?T`=Se6gnt5jqD4TX*3nIblg7U_(Xn7c?7XVkffA&[5;U:#WA[^r:G_
%nJJDN_hPVZ+c`6^NjL!J=2cGP$t/bh[+,[u\ul-?O23s0S"+\Af?Ur>&ap?5lB3`1$?`^N_=Pp5)F-^W*MOV:>[NJ+k/"1gUjN#T
%cnEBd>a$+akr`"K:9g-,M]D#b"[si/K=DD65I(dgng/TS$8t%D>qPQ>E7l\Veh5S:'M)uHg^i7T8cDsFe(:cZbNGF<>(gM+<daS]
%V/7#JDcP*?H(*cP%dV+s,p&g3'V-VS(+%=d#[Rf]e+mAV'PE.qmL\`bQm,=W`Wp?9JrHoRB\#b[o-<;tRiGJ'a*<6X#fd\j/2/I\
%+tut,#'L_!P.T/VN<h=t-/GDM"1<e$LCF'%&Mdi(4YDQF7C?L:\eA4M]R2J^f<UrK^a:pS$),5lXRe==7cBoC63Z'UktLFEW:l2O
%ooU$Hgomn4jKb:oOHuKtiU[@'X=s)JC(ZijS`Eg-Trn4p8\M1'R1&l0-t_IKQk8"i6Q8]No[=r&*V`2&eM=9V'=j9q4bnXM/c@u_
%nmm<oN!M.W%[ka_LCRr).;="(Y277,?Vf\A(m2DQgj@(>\,!\EHnK>Ip:,Sp/ImuJAsB-=B8>7#VDo^Zj5.Ihk'rM8m9"4Pa9Wk/
%59TgN*&u$Vkn-"6`G$fpZfEMbf9$Ug"T7S9\maO=ZP,nM*"P+LGE%rLg912-i,ZZBKcBV&3A;k(-nrE['@ioe*LpjO"?2:UdY]HM
%>n"4/_Shs:XYH$fik'C[#Tjnl1L*AQ3<N#t7?BMZ6e'K2i_lRX[jitNKWXm+*4G4R=NFC9eo-8Z+FY\8Hi<Sf_g1'5A?n7pUWsIU
%P-*GjP+5b`!J_A\s1;LjLm9Fr.Fd8BD95,_]V7lAS:R4BQ][8eXkFZTH"8!AoIcbM(-=(gkX.VS[\qtR-Ig_oHd,2Zm9m#N&Xu+C
%Nas)E*55a6(4l(9N4]^IB0PN`TLqP@opf-SNCN,15.*NfEB+<.c9+J^$&\qu#h(=!eZP.QETVLYpgE+dN%bWPMkkn6mmJ3e(A*Wj
%0fj:d4/(jXo2[l6bl;o*_h8=HDccVAL(q0A=.dH)D+O0p^t9JHbj<JTN]4T?__YfkW3c.1,V)sl9]2!3)Xsjq*:p]$YE$?N'[,T-
%F`=k<od,:/Ck*:+1n#;ALlBB',&k%tQH.(A-/V:$MiW^)^PfhN*$.m)3qX+t%%8(/iXm]>Q=4D#6A_d]]:&>iS7H$O\T**uWB5fM
%=(O_($V#Ip1;1bW/N0c&W]B\Lnp)0*Kq:<fWL+0Oq)Kt7@%L$8(rgiYA;BjV-Lg1edl2?%[]5Gu0kDL]_PQ&G?kqlPod0ISd]%_,
%"J/hga\((Q,@B)<mqL/d%%(j&aJ"6<a@u`3iTE#&bMq]("^=.;9^</1CDei5=2mI]3&$Y>8hiq:gNl>T/k-TGD\NPsT`UTj7auo!
%G:k1ie7jT.5)?hngJIF))%Lp'4*<4nY5aWDOk8R'%K]PSX+5J*BcM6ur:NO'2n]DNBFg/J1p2`D4R_cl"4gf]hRa3dH<p_mE%bnb
%1qg0C_XXfmL.`&A4.Y5"he!n+@\q)c7mCi=9R0gi%KfOB.[`45b\4qZ(/k6r#+MXP:riAhWXOKs<R`7KK/iQG=tFu79*SS$As!aU
%gK[\)AMR#=BbL&tM]@S5GIT7Kd?Efq(JURWR%/?nR.O`qd(&Wr<;=t.L+kPg`0+_CAb[/cCH'Re70Pi+"C)c/oeA4p7o1<FB:3<,
%/g'?nrtr,eCa2k"(s2,5.`?lR"#GX22P,W>`PIk7bW(gXXBseK8B7KmM&a0O$@b[j3Zk8&a;\&3kkLV2=>En\93KCj!'J%>*Pr6f
%D0FVKe'UJ*WggQq_1@@:cD\o'YH7LIAsu_C!gtBE0SE*=kV8,XkMrTkh+OB<LJ$bM4G#[mq7*/FUD'+*TQr5=r3KLH50&2EL`f8M
%q.Nq#ptA"okR=<d4=7IY7_p,8\6DQNf^BHS<[2o1ILcrn$O&:TRq5bgSR)itKppF"GUCaa=EM0KY*R+p,P]WYp.;%JV?R;8(i0Y]
%L>)fGZcf"97?oW7TH9N.5)Dn0h4VjWob'3Pr`O>jRjV<3/L?YtD9PTCA,q1fm\1Q4:Jqhj#58TPb)Eb]&@^K7NT>#)A1SFf#k(E,
%Fd9K\-,Gr!W'DsFHsU!$b29b_G<JqQYhMn#$*@A3j(1YCEu"go3\Ckn9f/i`G"k`_^f$lS.S/68'V?u9I#X2?dN3QNAq@S2!G03-
%_0LgF.chnt%>jo3gVnc3I!=PMNcnX\2S.%O.XeYg/j*1DaKaJdo\Ij9`O-kLBrWqJZq/`c;nB5R9ILL.W<dH2@](OmZ6hYIC'*p=
%GILV:$*:+\>r(R],EN*PpIoU`I(KKL!LsrXDR>"_OO/7/=eP^OLPr>0Fc$8$UNc:acb?C]aqKu='&S[..;&'P3qmMC,XWWnL;L=$
%0c8T.!<JBH.A)WHMJ$)#MK2`%Z(84'G0H_6ht<3X^bNll`m[m(UHU(RUu8^+Q=q=b_E6hCl2Jd*DU@%235K#O-KG1*hNp^*X;eVQ
%"057N_QR^%Nu[_qY.7?GneG@4g]G6n!EtTl'-)iI*CO7.NK"_O9[GB+UbH14OQq\XD#Hs;#@;m?N)`.H(nISkofn`9a2^,m&@5_'
%\7uY[CO[ZcN5X@):C=pdT8q_'o1]D(]/X`=f@6'u_m_9RP4`s@+7hTS%#![9J-!*A![SUM5ZsnX<gGDd@"C<4h-=-N8qfj-T*&b!
%o8<=2]s!MeFmU`YMjr)Ah*[fX%T->L6Lrdg9kP5)&Gqu"R%;;d7!jn?X%OFGGBOP'W^q6/$<EEe+;1A&LkkH%MF;"1Z^*nJ.IZG9
%`5XXRM#o4RmWf*e4NR]jl"Kl0)3^1A`+Y<BJW2**53DT,LlPbP\Pt7WfQ.`b=A,cM%EjQq.H^NgL[HmZ-FT0R=OuVnWtSZ3<+7`i
%q:'HM8BP4nP$=2s^*;SgLqE/r=o8*fr;7O$[quEgA(%MTZ@l>LMSQ%j/Otb(gcaNQ>USQb-"]QA&Q*Xhao%B"o/Q=&2NXH2Amrh%
%"-$T"iHP\"@QKW8k7JD=Y5qDBg6tbC)sb(fN$r--N,?"skdD`kQTW%V3@iS&LoYdE!e(>nJ;c;C;UG9if"cr`F%3g0DL@6\-pV0C
%RJ@CkOT&]:#4Za-2CBj2nJkS![+P_n$/`r4@7>7OPQ]np[o"H/(Kp\Ye]:X`)X).i'P;(sg:_N#\2m=o#rQ@u1RK=c-+b`(H)u#O
%9Y[B^<9]51_f?)eX=1FHlr/lVH;9.[f2Sk`S2!Sn2=)Z2,"2?bbpsA>Jj/?#fYSKkY47k>552*V*1-bMD&Z[AUH[XX&r/>eFm_Nb
%,SWo+AJW$33^c4d9!hC"10l4L5(a+H)QtNAiH9a.qHZo-gD46Uk1j/9TUF18i)El/CY4[pJ3RTUKYF8C?"ZuVKRbT>`/AoMA+-B_
%).7?0;mTCl!RNi<m8%\d`KdrqlI2CiHsSPuR`oVS:AkE(i9+rAk]F)TOBQ0hOU5ekP#Nr?9/6E+#:li/LZh21KY77i7tjC0:nh>j
%m7;EW;*252<l8^h#csio%%Ge@4q/f"Dt#A`nNujSIGDpu2sX+M6HMQL.rSse,)'AgVlGXOVb("C,<75F''"NN,%Ot@`O$FV<YY',
%ke.C_(4)GQ)_]&+lqj9qWBA`kI4e+:@@IGE53=0,>r7rdm=k2L#%GNQVdsKZ';fe,L7g8W)f;s$^,h.lG5Dt7F&'Z@o3ElH"h:7;
%%Kt$]#Y8[mA8SMGdA:8;cXCh%C4;GGO%X*H+ZnT?"#29,$IGB5h2)c\SGl1Co0*>MkZ#e(Z-#a)j>OUaNL[Vr-a#8Hh<6?Zjnd"Z
%4a(Zka4r<H9i'"-haP$0*N86;N69@+X*r)dRcU$KQgsXr?<On?jcmQo"IPDc3P&0b8K9/2:4Z/W:T#4o+UEjpRr4g'X*"]7AqpEL
%%<4(e).^YkIkqSJ*WBC+0A?7fJ'NZVoXTO6^QVR<K]XF7_)ru)DR[?>G4=`JgMGgYlADZDJtAAX)`UsnS:i;'CS$sUHu1,c>KO*&
%f[u8dCrKt\n@^arSAq^??-5,h^2PuUR>u6>(l-<b1n-#Do_i'/`t3:0O%f=)jcLpHfSm,9Rk>:2EVlg;)%Yjl@8g(r#Xc=8""K>P
%#Tm=`P9?nSiHoZ4cd.s.PaI8N6Xtc%JHFA^3k0tb5r<ZKEDTWplXaS<Lqr+L++)4Xl3JRKFI%G[&V;/eU+fhGLEle-i=UG,-dnZ!
%9X(ep,NaV\;7dB_<m_<?9OBqt"SOph&HnD6jNb6bUEJDb#EYt1&=7]7LEp%9BlMpK0uXuK#Q@o#Z?2gn@)FN1"Xj2_,`,]ZU*L-O
%'GdBS*uC#=/R=Uh%X55+"#8CLX2NH9Fg<Q_9BI?`RiE%4pUr<B\AhV.*Zu"D8U2<g"JB>iRGn4[UY1M<']:$/fs]4U#rud&WP'-)
%0K8cR8[PD>NK%hJX=Z#V5fP?-W);&r*Qi_u'^?Uc(LJ>pTlDA!hqdR5"+4Z.&Dn<mhYIB-d,(XbGEp4V@>Cd>P<TDZ\8-%tNq=[!
%2leI5Co:ema1>3NZ7coHid$&!'F)/eB>+/eJ<0f'f-&)7>rBL_V,/u)#C+D@SiYtpKP1Bs(Srq<>V?_&TjDCX7CPK9qRiI`&`PG2
%@&a_nir8Rs`6\9#*tiRmP!5`s4%kk.4mm@3)a-@upu\%:V$j^3Us``?'%M][$!4f_oC19JkIlM.;GTd.*-9h2\<`D[!bk=NnXSs(
%7i+4EV79;>Lt5Gk^)n,[,P@V2gJV^/)>&9E3jrm)AOQ$)84L\^.7<\"'G>Lb<#K>B0i3)KPnAnZX^#$^b[jRSD;W2(2W[OOL!Up4
%!7JS-)T*tiDNF,]rCmF\goX/)pU,V*(Ju?;N:0*U^:sjS^ha7NXHaq71tHg8JD@HP7O$YV8E]s`0GnpYf\*bY>27Cgk.KED"BMs&
%_A4[(\6['&7!RpqeY^49/^i-X&fWd2^f@p@*4B1J"K"aIJent`A=nfQA<Mtq1_r_&Gn!LOoL'/A&,1g1>W2Gs7-K5GHF\:c$\VA=
%>Ik!!.DlR4$^oF_C/O>.p)U!`Ld!Q*?J7l0jTKV#)!ip=+mn`'p];C#(RCZ[onY'(8p^gW[%i4)fagH_T9`$=p.(irqd%gtPi32D
%46_E>CXTq[(<aAF0o!bOQ>-].1N*#O.K>LOb&p=-n2lqoTrY?g2Bomo$(((Ge//a`bK@,BO/9CU6/<sZ(`[e/-\IV"^,qFpk`S?4
%Yo9l*h/N^(Ss&[,?!-l4qVNaF9U3F`_*YTkB&>V-A]d=tik^*l*JJ\!33uM2aF$]qN@dJj4:lh]`AkAS<Q73CTQlMRZfDSZ)sCfe
%5Bm6\jDD)H#Xg)NqYn!pI6YLS\sPjicXlAGmd\Y=2)^2j7r[qIfTO/'EI;]Edpod^\-$F%f^X'UK%=8HB0Qs7Cuo&66&CK&O`$7o
%:,sMDb=:'o'8o!5JAmU5D<>UZU#7rrWjQH<(JQ*2*c+IL&WRrS)(j$@nhoElGp=M'c(;'Y(KcmDX&"Em<oiaE<4>1U^$5i%V@?4R
%1^$][MFPOm3C))%q?]%O)5hd:k]@EI>,XQED7W\=>[^q=p"1B"+*nu7kK#HRRRc&_EcDSIk/@?G9o8S!]tB8(XKh.T29G7j[7bV-
%7c0Z@I?'+QR#!d4idQBS_>l]N7/B!^?nI!Vd1_n?S6/EuRZ:1Gn*-0?aA289gTZFd(66P>175qH[tDIsDk$OhODJZT/`uG2an/Z%
%QF(=Ub&Ra7@VQ[D]M$Ah^?i5\*@B:)--0DTGn;'XJ<NY!^RfGf_4`WneJ6HM`'/i&+7SPbCdb!\pN:&WU7(c`)'C0Bm$*1OCU/)a
%Yhk0:$6Qgt:;*@L2TL_!4@,eKB>fHsPc[d5igP7BI%`fTK``?;`)aK5!6;?!=_'m])KAspNtR@0%bn,3Qi+Y1hI,Q%gtZF]4g(2m
%J:6^8N5P"[9Zt[h*l3"#'MYVfc%-?14WZ85=5_CZ@+mkR9atRhmr/Jf..?1m5qCBpit@,W\=UZq#;#7blGYIY=%@$]9](N:"0!1c
%;3SW&/=@X?gL9J7i>jSOb=_WD,Kcn\HdN-fN^=uA(I.@=FRl*&/Jg>5O!X/q[F$S<[Sbnphl,rJg+P<#5ZR%MU9[`u*#=bt'SdRF
%boD"W0LZhX>&J`Tr*K8Y+)r.;\J(%4k\/6jCJP4MQL\7VO_j6E>(m(u.\-'Sku\d#,jfK2;2)`3,>K.QNcHXN1-o5PSeBL91b]%V
%=+_DnfSOKU&q__KL\>"bF=#uKcmn#Mcc%I;(*3MrYa9H0jRUr?^<tGNf$7Li"BHuX7p[_ZH`T:O&D6*:,k`7hPsnOPL^r8F,neN,
%HqLi<@(Y+E-$C^,"SFS/dIoqc;qYXLb$+!$gB.%1L]afqZ#?<^0.l,!_-+/XD-$h0a:e19R#cK$5cgLJO_%G80[.rNE7rd\a?)J!
%Yh7OGeD,nm7gp1$h9MsRHHC.k"B\bZh-tRh@o]d8;Zf%5McaGpb?7m%+$Qri#<#9(fl!L#"HfrFISG>N(GCoGIWABCZ$?>kA-#-.
%N>tgVj6GTi",A(]+&q8&8@W`5b_+,P^5&^@TG"ss4a`fpUM:?7Ma?.$,:5f=1^Zr<*]!@W%QpFEGT+\I-8QpcAr2`+ASQ*TF!i$t
%gZEJ>(7m(j^o)PV\mErt#We+S]s72`>LWYuU-A(lcZPE_BllaS?,Q:_<&BHFC![k4=DC?7(F;,Vm>t\m31rgb:gMgf_6()!NNEg1
%LPmJn6/udb##ZFMf3Xm&H5o`J`E^g.RT1rMRZ"fa>&c:PR>!oE!ThF`Q+-/m\?PGm=.%#Jg3?j,Q0UO(C)^6IFNeaUdBuOs7Z(_Y
%"Wa[4_B3Ud7YF!Ph;N?"$.ul>Q`]Z[T-qQ]<f"Z)K6,3;d5RglT6m'S#<LsPBaUqcca>H@Gf.i`5LtkZQ08lOX^jXfRF+VpCFY+p
%Ie\<X5Zc+?DGel60!KHaE$.N=8p%U=<cBf:T-cp^r31%QY#CA@[`.kf>GgF4nJ`KgV++g4mLaH:*PjF``W+X(7<h']2'Nj\SXF62
%6Hd,]-,Fs_^."6Y[PB*-15H>,n3d>6diuWJQ-OZJ-Zo_@Y\G-+m:SqROhlWLT&VE,)Z#e,Wp;o'CeU%_]3qX)Ea9<MY!sD<=m5tW
%.!BPNLH!]>bDe<E=[>GPLW\KDrLR#M9Sus.q6c7P=)"7rQ!fG_ZJL5'Dk\OX\TsKh1-!(nNQ)mAL1scN'-[;)N:;l#?nZ?f&7rI]
%p^RNTi=dTT46BfKC7BuC[)+3Z("fJ!>^SE+$m-%c`IUn=6`s30+te1pXG\AXPTsHVg1)OY5^f*iqK-a"^t%SoI'e.G`Ronr,X$OB
%qY#kCfNE?6a2rI8Jm2</&G:<]Ug%>7q(1MSQt2C8THbBa,S\@D^+O76g;sMZMlXaGmgX6_bUUZ]<_$,1Rm[8MnlDfI"4a>#'+Y[h
%H1m=?YkM'n/6tH??.."E+)V$@M8O=Oqc%8/3cO\h$UF$=D1<7plB.2>%SND;^4@pjfq6tNC7(f=[Bg(9Q10G-]*Zd#i$eoM3[TG9
%e\@Y'*%_Y)Y@,RKG=XF/rY.A>B$Q(7/\?mYP*Ml!'19`&;%(ef'<m?pE)Fn$#9XB5C'fLR&^G(^M]<SYA(<L?*nHWdQg-uEl>.gT
%KpA#nYo=D'NlFTV#*r\9;M4CVI!V&&["gIM7#$;9@H:X\9C9G<ftK!"Bc]^.<PR"jkX5nL\+PUT>`$PdRP?e/cpuY)QuHh4:[C%Q
%n8*9P&U3&:]ueLS)4T>A1V<T#OVlQ:mU%AkprNC>O+=XF_lF=]0Y_U/2#Id"ru2gq0c.&d)6m+3AFb(cbkZ<G>R"F06A9G(iN.AN
%-B\sDP'sM8C0htIX/IaGfRG9>2=BB,&q.g(Bm<&iNQ-XZ8/K-f`ndEuE?j^*_B)/\i7<j*8)OY$fJrrPi>T;GX_=k(bSY;9-SBG4
%NO[AdHTn/+(U1W4fH/S>gB$2dR@QJ$[tFfF<4?-]d]SDri[E7C[Xm'*%L0oqVqqb2B.E7I;@MAA;<?]3J@mUO2>4AtAlF77YBRN9
%CEc*Xh'[?GRF_s+WCb3:!Lj`s8"pj,9o[1"[sM@GNq?-8)R+CJG^6-1`0S7DpFVm`<AO-`Y_NtZ^p9VMlX4oU_Ek1<<P],ueh36H
%*417'm>'JZRPA<@Y0:/q`^R]a_UlJW@,fTK!NgPsb7;cN1(M\4oI<sSC.n><ON,k>J@Q'NHLS*t!$]UC6R?mllWbGYHM8EA4>m=W
%6$l^B@m+Q[P_-p:d^H$u=0CT^]scLI;>@l&XQg],Lp2`^8F4e[U`;/9b0qbE@@dKj@p\O^e)@MWDQ/AlVeq/jgA_sC8ZW=_,@EHp
%9s53!-9"G5"HYeK61+*"HsZ,cLX#H<Vs#jc:1Q6^$=W\p>qb_R^"(u#._I>Tn&eNDUDA%:"k_ppq`'c5db)%X:gj5VMK,Nn!IqbO
%IQ1IhDPMCJm;>acG\^Nae=Jr1\S?81<)Y^rM*W/`:=+3$_;>#/)LQWaa"[^7V%jV/1o<]]UVQOOZdXerAoZI@.M#)N#:S3UQGSq[
%h-Hp!VXLgY42S(g&XB8_qH,ZZFa8*?%[UW/[ln.Fq>ZeWKTRSDhUT[g7<'lF'(ACk/=/BI_Rq[nid\/<9[fq12P.[CZ-c$>-%ltp
%`M1[PC*m_rQ'Xb38!=^8r?0ABILUGb;Z=aN6p7mc$%0s:k9cIW[YJF@1<^.o+?`Zrrf#M&+V*POW2_=p71fMEG/_ZJqC%/M9XGhG
%SQ]M7<8TkNh!W)X<]#Wk9T1#m+Cd'@VoS#,/ZqoFhT;,s"A<1(@iXU);%m^R_A^gOX-)em+X(*99Eh^Sl#'u[Jo=(o&NEJ'N@`a"
%`f`"QP1FPf0.,`0H?*C1eg3]hj+%5]acAC)=5K>^Zi+(YG]<Q>nf=(61R9d-a#[,"O(1'6^_SO?r'r[i1LeSqhS>DNhK<4g(`e]=
%F/b8Z&:2.N@5fC97b6O[*LH%`?@'7r3^Q=Qnci_N4M>ajpA(*kWOa;hVH':_&"IWue%unl]UIX0F/LQrMBeS_LmDGYoPD[5\jAdd
%LIS4Cl`S<lDlVmZ+V$6B,Xc<T(EL0tQGUtU3/kt>F#A*HbaiHh7AdF(LQ^W!E./^F9&mVebmp8A%++2M*#&cY7GF6.@r$-<Y;=%K
%OU!LLEa4:ZS>apV>W9Zf#BB;e,eTlaFdKp*lSe\CoRiBg.ASA;^X>t$e>EL!W2'uW3E9o=`Uh8A8:XJq_@94i#2j;Y"4sI9XVr4Y
%NLiEiM8=^@CrAYRLUojTrIQ&W9"8j&U5a$OE.S9+=2W0nB^FM&k=OW^I.*gdQkHKu&;lFV6ac)0;3F8cH7,79nk07E^(AFU^@78/
%-K]Fh"^OSA]E?DD;o+GCU-63RC'/;T0hiT`k"6s_N[rM]A&'.9TJMgo0PhY.a-LjK(,BA,2b4L:[@RYsY_7;aK96tt(h`8.04>Tr
%A'cW^C%)P,YSo0Fo1QC33+u.I*nf-"[>RAI80%_DfLgd;W:>n8;]n-JeRr8pZN<tb!;\"90t*==R&,t`[X=1GN/4Kmkm[A7`+LVJ
%&r"o0`+DC;euk"7Qqe1$j5QdhW.G6A#$A#BVude:WZ>V'o:qqaghTr4Y@Cu&a#07.mBgB.`GD:O%5ZB?AWV@+c9s\8+M,M):G<XP
%&k49YB#I>E^.H];=(4@_+lagSak*\4Sr($f6mVT\`bP%VY)P(D]*cQ^+b!h+$mN?T7RSGU&[`%&4)\Cp_*e(ueg3_eXD3OV&mB!0
%P>?(<U-Ts%kFH]IHp,_V/:6[6\sa8QN"tWZ[n&!Q$:o^)p*D*3etFj%fbTj[,V5lO*Wl4j+R+ubM6Ki=>[kq[k`)_Ra'Da)]1q'\
%cjkKV@13N'\8(TKl!f7/m%kM=2*&=^MFo*'RN7Z34KX%8)@oIcZAFpZ$K["r\%Jo^D;j\Q"F:0KU=J)b7"h<c_tH>B0\;EiYoFF8
%3-Y^80g$d_(8N_J+AII8gEXdu@eX>9M75%+Rf5;l)TiHZESDJc.fQC:$di!da0ZIhOD[9Q#?g6!`+*ip.28pd4<PH`;_i7-?PT<B
%*An"gO,hP@mM<]$=4OcjO>;WTI9iTZ,[o0f345T=&7\K_C>cH$!@e4)bmplt(D+.QQqfh>(Rt78nj.-/dp^s>5A`E)<IsWW&L'Z%
%f*WK)ojt%V2gH='Qgb8h`1?_ZrPuB,5<TIt2mu4^fb'\</<i24kA2sTlY`X>+^T\eq;r`f`/(G7\or?Hdhk,AKn$UVd0m#FiFSBJ
%BNdiYC$(0B/>j`fVOn9&1+^%!'gcBa*oaufeS<5EL>X%Rs)#W02-d`SOb^)c0pTlHo?)GqN-B8'p^1oW%\["d(WSt7R0>i!1!#Us
%R5DYqK1+eF[>>#SDJ+j4EQ4,ZOim;krGc2P`5Wn)p3=.&OL<,pb3P0P0rE*#eHk=FiZ;8*8>*B?X`NF$NtHtI$isd+A'h@HWrpUk
%0Y#Si-(e3Fi\abJX;MTRT;k5rbj5<HJ)%BfBVq_:\+V#:=N_bsjSdg!;KF^KV/>V1G_4q+FAh@NhC]_.=M:KL;k`+#Z!Sgm-QeVF
%HJ<h7KoB@3nA+?PMTVUKiBWD9iLfY5S#Z9Z3cF>erKgMdYm"lb&09,>7:@.gIB>4lMC.)3@bdJsOmClg_O`V?:WpJH7V;L`")!3O
%#uaN:/`j2B'&g7@_.UGqP9:%s7RI0]+3\Smb0mO'+#INXOUe<pgA]-q<?%-e<Ki6&:$1Dmd4[B]<')hPC1'R,f@eaL-%*n5XD'I$
%?P4_/d.\u#V+)`t[SS>8/2#8_P>:bhWdK9%I4#g)EPXGe]b4lLFF+PKT<$+im0^6c$?c%c'N:5i'aJ2'QQP;>]u'[.O(0_dmjC<c
%^0Jl:+K/+KAbO-:A?UBFl0Do[W#Ag7E_[/t^$Xd%+[<D+7u3I(`M_nXqF<rP*Gj3AhoXJ=NhEl1/_j2@V=&khWiFQK`=L4YK@d"!
%Y\S-D]/\#i%\8QeQ/5Ho4X$^?dn2=Hj1JUN`8f!a]5O3\!\t^S21XD;HKU=Q/BM]_Atr'an,q3@c)EcRkd\0G4/V[U0`^`5gm9i?
%SXm8$i,pa+HbF=3F@'u#.P*@@.WmnVgF8DKC;XeVQqMcgUOCb!Y449iXgbUY"63ddE3$&BR^`_7j'Ks=[[#jekMjYAf[lGGj^.C*
%K%tp@DN<^qp)3$<THu>ZcB$>JDfL[FqWtDCM#Wc%(2H@gaL2!YI=F>sE#B5kch=hPK$!P:)i++k5LueQa?9`%jQ-req<7C9^Mu_D
%4V1LFStHVB&T;,Z#[!TKU46,[1#bmY7G*Tb:ZJG%1Z<):@b@bcf512jDEA5Khj6F#aeK3fbX8Xh>g8/4R82XdjhkQGJV%6=(@R]7
%k)Lc@U'E6UEk-d.ZYYKoKO;'j6/BWpNeH)ZDL@bYA:4JJgg8&HiSe5(hmmUh3n1]fe,DR&Sq>SV1KN*NH.)dp2\L#A90HH.LJnpq
%>*nOH<0]SSI#^KYFMe3+rWkAGU+q"!DD>0`J!r_EMSsA@kX;^HbCfrAYt*`WCG'ChQW.g8"K5CQ1jRX91R7'QoD@?uD]VVHo8e;1
%<%oCD'Nt-A1[p>h,-,bp.JtL3n4!ml>CgG3Bc!Rm<<XGToh#L/@_`mH7333`YF]rM1d+W$G>9+*;uu-`q6:'MO\rcbKMiB?MJ-;g
%LWZ%1DN1J[pf4%RfebL^F'Vt[XO",T;kD%<LL!o-Y!nZ>#O/mVgFeqp>V&s?(t-`&>kK6pAQPa1(/(KNagO-#<dMSg8R3;/bNLur
%WbPb+9P["GQc"Ul#Er+7)]EUEI7>esVTu)"goc_0KSolSP\^rVEZ"FlZIXGdjgIX+QPe51EY&>0Mos]rN=BsrPl!@b\UT?iRgQt`
%8-o38Ook:E^Z,3s:J5_,#rg39l.`@+:tue.'Om+:ms_7e@_&O0YjJ,1ZMDk:Ca4>FdM*rilic5h^suFCro[*([k0A2TdkgTCrP>Z
%,r=-d+2GZY1GpROX%/;IW]YDK_@U$Kq:^RhfpFh+Q"gs$3s%a@QhTn8m`SaNQQ02X#O,1s8iXQB8Z0()_Curt.ac&mr#4\=:j4)'
%/J1@ZqI3R-/8T8U%2KXaE`S[2cttQtZub*4b&Y?8jDD%N]C*P4&qo?O@^6?,bc;RsYjUi(p^(#fbh/,qQ#Rm86tQ-+.cE=,TU&X^
%cX9,%&jcSOS5d`3pAGNom7W_Tl@sZ!<;O.C8GA$-[XJ<-V:69dYQDi'VR.CEQ@d3@7a*^(n;LXnMOGJmQX\TjZR4AM)di5@!/NW_
%,1LiXS:6E5d%3pihd[g57'Zs#/=+b%G<9H1Ho_mTZ(3614GjAEJPK3dr&8QL]rWZ2FI.hsD$h/VCi;>\12RE3F4Qf^=-4L=4[,qb
%Q-C[X?[SQkjLeKW+e1>e"PdUs=R6UP<W4F*,%FJQXr:`#_PcK`MQEj]OQUMR"WFDVT<.-ThlPu"^'Pt-kB9rMR1,IJiaiqQ/mYFj
%X$\#;+\]V9a9cmU'`;g/cBUXlDQTEK!NZ7g_D$_+]6K(5rNQ*:kpc1fo68W`2#NA]"G>0_-r_jF*,9uk.`'M.Ha4g.6I4j-"rK`H
%nb\%kmOBF8*jB+]c\+<Mqb[iL>d>(+/k]sN7q+D!'HIJ"Co'C>P)6M+%c:Vo[".2ene:7%#pdhT`8pX(#-V_e`oScsA-#!WWnicS
%%f8mWV?KH.9T05W!U!:(hB(MsaalsilP(/ULZi48i]/]V/nR/J/Ehen<)ktr1p66#9];:r3>NnhR3G,IROO_9d_q+NG@cg$%<2B<
%Y3CP>ZTEl4Gt%T"=5]FmK7;I:b%)?SNU<_K(IWZV"qh%NGZUbOmUSLKbJVSl!qu%45hfBG"r`=A.X"S=Kgd\o;8NO$CM_5K3D&*$
%;OKSMdTK>eOQo+(?ke]1aNkeXX+j%tLc[`CO>%W_8co'5.0P3G-dq"Y[OtK:`,DWTpl=-PiD'#7/ZccDiklV=V\Y<%ZFJ:C:^`oZ
%:IN[/J,/7c5)H8Rl7O<YU+#EN-VaIk0Dr++3PoV;%R)1\7g#+j-hU67P"o7)*]^V4'T+]2ogk?R+$PH7c%qdL-jq@jE7c4NHtP_G
%DcneD-+7>ET(7/:3oV^ngH;0IdgN?&)OO/q`O%2dW?g#Tbbn+WY_kr:G`1b@ni4!fO[`c5X=M9B"$n'5_`HkM+lP,]pme?>3CGeg
%8m+?fUY9h(.u6;i+M]8[?$n8CHX;P^@LrVY`4u!iN&oLLo#&`Ta=8rQEbd--D$OAW23/mND,(=Zmj.hT6?,oI(\LG100LtVn&p8%
%QD^h_7;u0p]P)^286P]8h]1/YMe-6?YpS*Y[1qLmeed;gRh_-UPF#8NLJ./X<@G9cM(Ni^Nk)7.:&\12_;g[m\1K(gT$=U[SF[38
%CgTlHE4>5[_XZ^t.P^5igeQOcjRV'.;Zjd0e3i&KoM+KVodUoU$&e@egqSZ_P'+]I3,1=X_iNAnaB:g:$1$K)R/mk9LC-,;29cSh
%p+0#?QYZbDTl?4(e%8J1UuICo!'CXDGl\lb@mGUT)Y%Zk%%U^<k+Q]MBG4p5mT`^5/=`+H_P&X97c-JV1>]Xs+?CY?<g,RWo,)S,
%&gG_ZQ/s)`M"@?MV(KKK`#2]XgBkM9BY@(_0"NCqBg"Cjl%]@r-=2<mL/>VUT+,$AmeCr,h&0fW'_Esd)sAmorCs,b%F;H/$g%gC
%%Td%l/YH[/1fIB@QY$dR6>,RrU4*u#%pLB+3T)`.FW83!2rX!.iG!qrPS)Oc:38#52[N9a;HS0'V(WOl=C[u@5o:*_C"D?I<cL[W
%l63>6"6=Ve:,-N0+0h61X1'->?n?V9D.1PO?'_X5ReTKV=Q>K1_Rk_1l@:o:$6$T.oN[.#UCffYn"O;@VipesOND/A;leP4<)>dV
%^bIOYe&n]Bbd]7b+>UjXLameBGF96\hGNc\KY^19Ib-t_!j(KHhA$uDS#!@Xn<%$TVFhs(84NgQ@UiG<2EY*[GkA>*Kl^WMJhFZX
%&1Lke5b!W52l't%a=f07VCF5WZ,gAE@`2/QMFtf.2K#;5L*B0)P:R>_3(.R(o!Cj9ir.sTS"?ZB,4ok(TF!-*M+QSCMSF"PGi^a:
%`Ck2piX<CAG8st:7o?K5jB5@%/X&*@4D%9b>*7.Qn8i.f>JrSZm`Be7"`4ZRRd,Qb>.6Eui@6c197du=Wmk=a4%Il\)`]U\-*'^m
%TpVjY-SNhZAU!IV<<_hafL);:S(j0)_X;6nn9"6\j]s=Rplrgl=2W^\o^^K0Bcsd?EB075"2pDr\W=*prO*.TCb&p[r;G=W;NF/e
%!Z5duV`P<,L5dT9jm]]>Ag1_d<Y>0S/bY(20]5J-U@#%L>R_d=+Y#G[<OaV55Cr&-n>I),65s<VYc8!-:fuVSZF:biUe]T%g;_HD
%MRI<ZU>/MsaZqYZ`>d=!N^)QnlAY?^9R%PKG1r0W:\^LQ/UT6VV$]B`E.&U$S)2Eah`/4oJ'pT*E1P_*<Q\$AL\^MfZ"tkpN8,lk
%lh!eB/kW`;&Sb6A,m#;t$tf0&>FZR[^(m%s<KO`snA`2iAAnMY.Aj2CFe?d$8=kZgPs`Asoh7NLK/pq(A?P6TK?ulK,ijPb4ucf(
%:.LVX1%`M\&8bOt$uE=$;LOJGNZZAf)*2r#_p""_cXb3^>XAT1LGjG0cq..t.m1AQ!PigUi,Hu99C4@35uGr>D-C3R*HQ(o7HlDT
%=ACWdLZ6rB^`"+$mg'*nDE"\K&5P1GU+)A[h[*"o]:k:M#b-OT@-5>\4b[:MXjbfIUN$UA8WBDfi;VAXmJ->/:j2#!@J7U>X-/<P
%gOW<97^tduYN1SP6`Za!Et8"Lk_\'5.in;J<Z5h^8pmRa,/&FRCG!ggbiat/>)u?!!,NP`m#kB0%]Ocp"OLps@'Y\S94>=p]mf^)
%jOTPB4$t^t&:HpQ6XXon7_[VF'fJ-;J2\h%IB?KXZFG'%ghfH6,B`L$BG#abDgl,Ep*/$aXMV&>)S+6mmF['r<j\H\e.op;<V/W2
%SV`<2lSuH&g4g">0DM*&FVZM,@L/2ZS;D(@B!ThB-p2,\4(90EQE(dM?lLg-'H'asK0DFd([$&2hHtL%Y+[8ggn%0f^HP3O^2Lpq
%2I_ec_.1iN30)YS?'X%*'8`c\MQ_#m];M4+@8]EV!-aF?eYsY+hWAW9"WGFk$R-6HRQU.,8%DkD>=gBKhA&tpVMGcKn9->po3ZiP
%eS0jW.GWsKI2<od^-.EkU/Q2&N:?]lr"YrlUhp_Pl9k28r)JWD(,1l,=FD?'c`4br<c'iPNm^`Ai2QWTMi?;"q?h#E4q'`oZR%#B
%etDN_6epcU!>1#SOg(,gm,eRJ@26(Yk=jO]a_[Fo`p,@(<OKLaS-H55YbM=V!l-U444$]XR:?0J:(3;l#[e$M]hb5&VV);[Yo%Y9
%Gq8>589ak,cXV;dL5h9iJph@c]@mH>^jAdK,"ZBKjiktP=k(;]J#Lgq"<)R-gWD9(o5sC5k';^)lg9n@m:#1n'jGQQfO:frZ%?b5
%K\&q\/1BUsBt.(7T%WHOQ8!8ifDn*+LLraor9_pjKfJ6#kl!<0ZO9*HN]<qdZA[&m%t)ZF!ljE?@FdI_[<hr87LMPrg?Z.ancPB;
%6dt/E@PP9ABI7SiB?2l)Z+VT'.BDrja6D&GrP2NJbq.bC#bdgsnNiWtJ^?ntile3Z3"FhgMJk76=V0"#QhQpJT'fR\_hcC$&(6k/
%JFLo.1*UPd$+!7$n7UQCf71d@jjM^Lom\%#?5XEn'UEFs,[)'tK'kIZP-r/,`GCODW0k+4-[Rn31:pm[?@au%P!sK3k:ulp_])3g
%3/.Y`fsUDlTA:aHgn3ZYC@Y/ZaZpf5QbP>h9(4PoJTRLZ;MbpsODFC#gG@iM=.E>_U`G/?`9(mMR*+DH4F)8K.=pss@ai@ins\UP
%FA#_!^$Z]3ehuutUogr)LJRp7bs?5URL-VgGm'60<-BrJ0[dmj@J2c?gB%g&G?86:]VcK.,<ppel.m_baH*\/A.aH27>6Cc8>B.p
%(ng5?UM$\Q@W;Y^]j*$!h03G<97k;ll%U.*L4+2fQ-o*tE3(O?Yg2Dlm(N)1qh&u7EHUC5P[4#_`?r5g*FWp1/iR9W(BIOtrjZVK
%4TKY4:/;+Yd:>%2WqO,W00\hsQt70(B:OPI:\a:XL3t+=*bYLBLOF19S^t#"E'"4eZaZt0bPo(1$R)Wh/!n[-/Q!MX?dBtlG'ojL
%BfC(W>[I`TiB4!0Ac6eZCdfC[fuY,n$tHZa;h:eWhY`jMMLX(BI2Kgb)Wd3`bq^PS0^Q;^h3el]0_))=9h/1THDh]`ce>RZ0`Qj8
%j9'#cGmnmO>DWXgFt.WRpO-POZm)rE/s2nEi"Hpo**Yc5A'MMs5"K=Jkm!Qbnr/RS-t=EZ"!Y54l?M&nC!_5S?!Brf]LN:d9?CZg
%Ch.Gpa4FYhm;ckPi%fLRl).+C=2P,YD*DFV%&$2Er8bPTBDdpB@RMqbN=NAF(2HB"dm=]55JNZCDeTo$HM>a9]RJp>'AV8sL!cYt
%NUL!IQu9<1l]&F<>eb5_SqlfY>Ul7'e.c1<[)#*";QW.>:EtIJ@V^2+h2fWa!"nJgo;iR'MirosjM%X]oU<oM[B<oiRWn1nV]jqD
%IMLl!\kb^s;7iDGFU5>b5GaX^fcG.:rPRA'[2L\5Ds5>SGj]K'm"VTWdHKWf>oI0Y;H9=63[VHaO%L6QESd61#%WEhWG2>@0#tQH
%)q@=H,Z9V)."t4@2ajX53JF!NJ@4l_JpfW\%BaPY]b,/O&(57gKdRl/mqP(Do6Z/*4nI(q\!.jIr]-Q@:KPu-D7ufH<P.QEVP_r[
%@6FWM/&$MMs8A<*d-qhOAsEVD!5h51]9Rs3Cl8_XWf$.Y*k8nl3$k>64Y!'@+E5?Z?ngW'5&$ia<-*e]/i04gh`_p^k0c2Kj,!?J
%&(5Yf,<i_fWa=pBiF>:+`@F$GgZY[9TqqD$\CIAFR_]A"^l7U?P1C&A2QP9WV-6\#]'bZd`0nuZK#Mpf"'.fSW`o.rC=b8!RKi;t
%*q'>q!3tkG:&`-U+D,`4;%uEocV6g?"C$+oLs)qUUg55a!*"BFnA,Bcq:C-;m]:_a=T8g*5d_"+9ju*H-pQ/As"NqhJXYKVgr&+7
%,'ZQ2>u.G9Xt427_dG)$6_ZAr>^^*UG)7,lS=iL8\W-bhJL)H8=e*2VprCRGAW88m;gu._6(DTI/UQ!_[H5L]<CgJ:+,o`^9tHGR
%-g]=uQ*S@0pcJHb<,Qp$"CAR='5Vr$(+sjHnJ&6U3gSc2VbYs4AKYfpWco`<;sh^fp,;u,c3cCL*cAtqLFmLfN(!*sHQuep`Q1Og
%_L?M7!a4V-4]:uZoYn\l$r7t%d`+\OGn:5RblaGM,ZQZ$mP]kN6UHdPM;5<&>QfgJs!"fg@JAV:.Y_3eqA_lkJ-n[dW5>daMD)5-
%LI,$2QQ`H2$E<"T'HYUGrSF2m<-FqP"?a83[6nuQ(ok2'i^M94W1"22cPp0O2Fk7n6,\1j=1)LZJh*4.R4(1WE=b#c"@nDoeFY_P
%,E+fcWrWMTLAD=7GD&<gOgj&'A4(>:B#0-C-e'9)r>mFJBJ@hZKC]U_$)PMnmb/Q=6[9)n65==`=G2f,M2SW3%IYKD,7!3r%!cK]
%(qm/V\pG*uiG#>78dcJ$M$t^6U)3HfQVcBX,Vd2]U<l&`q'CRj)42C06jTSiEn\l'Q$!RIlSiSA+S\D%Fjurp#fibk)=F*N[fk1h
%\%`<8dB9as1/9q:G))'qpDka?Ze-DRn+k*'cu#eoJ@)Z9K;Xl39U`L(G?Ma>O6a:c'fSP-Jo`MVDkF_s^Z@1[228=NIJeqkA`sUP
%^kt"FDq2WL,0:MU]cKmje+$=aONtnJ.tu#OI'TQqdTHGJpkitId?S/%$a-S?;a*5qCG<h_`>8;I-_t\.!h""6Le?"idu_&O\?"Pp
%mIbWX"T)K\ogWb\72WN+*C8W4a]p<(MQAu\2l))'"KJAn]cDaF]k0Ilm/aNo!`uO[&A*W,jjX(Vs8E=s]e5L[9,B'CI7O\L+9Gr^
%+_ic=D+_1\KgBNb#P4Cod@";,R%"YG#E]7Af_IX[[ps6].c?oSA%TUb[a*(Mk_"1TfbjP2Ho1ei@Uh$ELjY"2D\D$p%I?mp)?hdr
%[!!Z8T\cu53P?'N4jPA`(HFU:iB6f3C3nNeNr>b2_dCGVR(ZeI&7I.6@^*Z::4*njBH3UY>o]q,d=9eF[U[`1@q8d\d>?O=jN'91
%_kB.-rnfG1M/<A</-`Bis"A@]XeNU-)-$B9XSdV8mK\EF!Uih,Wd[?iaEV!\b#.bK^m?*a,gI>_UkEX(8/Y-%b\58u)Yg"ob(E1b
%"(AMKS_]8.&JoG&bYg#;@/bb&pkq'@TAbR*5ZK#dBfZT6[2`rRNJIioIgJ%8Bi9A4Xkt"O:seA:R_o9$Hh91[+^k1j;'PX7\;_T1
%P2r4]+Zc[don^8rg8d7sOg#9=;pq..kk]i-g/dr%A:OJK(M,.06hs=4c8m^(B4?&**"!?"Z>.T4T?59_L&n'(oTXE;9U4%q.Vng,
%,gVR:+gp.l%Xa)h=TL<sj@H&HiXf*',=[-91WbSIH/O'n8gRr<4sq#6-?i#L-bMU:UclBP3X>8u+:/U/Cn@J,'gjEG(?SLo@<DhF
%5*'Yi^OoCE[O(:RdGUM:(um)e[!fmp+fKZ]_9pRRrl\r8aI]B:NG^R]\QDo.F-pE;GWOUaF/nrf<.UGD+%0q;/g?ib1JYsE-^3<V
%Y!b[K;!^D;VkFI?Pcbd0TcDH%0DV,D4Kq^"4IZ$%^Chl.%cX6%%3F.6`;tS3Jh_I!eB>+,/FA80n;m?13YL6Z;k"T;AE-8nj\CU4
%,<"YA4``eKA_!Ebn0+Q"Sp(G!qrb&4:.9"*Ddt\j"W[XJII?Xmp_j[DY/)56BT?BjV&_3'PtpYMnKm)8`M^%fopL;&oo9?(?A4_$
%7:P3,R\rtroZYf=%lbB=+M*%l[.aB4p:KA%&q^t0[H0D9cpb;MSg"_sPI3&6;jnY8Ph`G@-4VHqYcD2n_NH]j59\?_fYUYsn*'.7
%!.XtjSakg.gq*b<*;,]M-#c>[6Qd!#3e270N+Bu*;?3K7_n<khc*@o+'EeBm7TZ>qEc>8jE'QnDU6fVn?JSeR*f&K95K[7D?#7Ws
%AhDJbE*WuZk&U5TWTP34\NIJ8oVWe1$GL'.agO*)qdpjEp['A8bV;4p[glJ:Y8A4b;TsLkeD8;bP,,W4D:L%,3XeHE`._+&q!PD4
%DT#!Ek,6J.pPD_AY7u<0LZVZC?G)HZn@[%Kl"k`I/_^?sJ05p(^YA7r!58GCYWr*(&GG<7H$CBLjh5Sa[N_jKA6[_<iAoAG1"HAF
%Sp,AHR"?ieB@_Wj8Q2S#/93TYCe.2srUOuFkHL5i2!7n\53n?Ak>`t7@ii0tb]A#:HacTs%,a<Wosc7,qGq:>of"/_bIN-e#ae7=
%6RNM$WUD$H%qBiGjJ';@D*p&S&7&TI7Vpba"P`a60maDmR89&-Q;@WJW:RhCEgghkm!0!XSjgf&e>4\L+/Ei.ot[hQ.g>MmR,i(\
%Lr"=S,2#.7hL2O/9tY5!XGp97<5*.M'Di[C4@YhJe),tOpPj`kibX=O"s_aK&AF]f]B>1$?(o8l'a-RRQ]NBA3VArNiSOWGp-oO%
%gK1\TRb)\64lge9Vr?`QE*AfDB8ECj;_)4Xa)*lPputTRYFkdjohU)7j0*t3q`k(@s7UZOqSOD(oD9UqrV:C2q0,'[e,S\L5Q:GY
%O5Km3Mj(p2k[2J>s"o0"fh[+g7n`$e?]tHH5Q%S\lTa2(lbD=js78n\nfPXEQiEMgr;,"<+9(+empfmQnZ]QWMTTWT,`=7]BW(V'
%_\]-DiK)R[J%#B^s3l4A7@#G1YqF:ro?JUpj=H:E$?,J!_T[:cWU6(\iEqE,b9WC]X'IQV.mK)FRsnUr^0NfeI47IZW%Qh=gG!q\
%(UH-G'`.e8T:LUE\I/Q7o,3%>?Mh\AjKN!NbMkZ@%>f(c)6q`q%NF'JkdNJXGS4n^H7(l#!@Dr%W#0V,aZ-XcMOWl@1ZSmqfo%$B
%"m^b@]Y.TbBJpV7:mpDd7XRkU8X"G8Y#Ie^(9D:A'V3]75EaHUN2R?o+f%/=&k>s@]o5&\D^n#u3)Ph/OZ3&E%d3KP=_i2gns]*9
%W;A#FR^Tse[X7T%*p-rZ=GT0N+/BS<YD)oI:3p\D8lpJj:cMEC!hhD&PT$F!n3l+Jhc5)EpUh&bJEuha[(T4u:/j;e<dmc<hUhT6
%BoOr)nje/2O!G#Z2g+8E4`Gj3QDuNJ4j5Y[FJlUsU+73jc%m+4!"a!2e&g\I%H?E-'/=`4eRB%4cO;DU_pH\+(N^KPGn'VIo^NrY
%I"'t@H8:RMjXi,H,Gau,Q<JZ:&MNS,IB(L]=@8]Nn93S]\%a,Id9fN%9h`Vu.DL)T9-ZWXqc)GH>t,qM4Rkn2R4p2upNY*G*m?YH
%cWkTkihUMMfUJWjEO#tC'd2d:*8EV=B-dm;3p.<ZCaa:dk]MkcINO;0JIm(q@Vk53+$.rVRI8Nj5ZakmCHim[*(0ffN-WZDVmF]V
%B2+nFoso9H$X:=5m\uVce"'X"Bb0?_cd#9Z#@?Z+G%.8`IM&BK$Q_!)<@\gER.[+:YW7'?M:c'4ZVu:65(s*^_Sdn(XK"QcKltg'
%/=+Y&d3OCV>N8VH\KBDmA9`nLAq77ZB!QTuKXEDDr`Fhu(t6\AF0)P;49l2B.I0d^80=Y2-D2/W@o>L`**C>J42\Z^0\7#+a)Z%,
%b,-=H$t8TIbMCefWjD->gRBfo?HO&P/A[j^$AoS=knuQ7pL9etF3_?B%)]4=]"`4<XFMghN)5jIN9qVYke):K<;cMiS_i4LZAK2p
%,@7nnZRoD^:/pfT(c0N#U+HCD!/0E<Ma6/Xf8$&jUYa=LgESOi@O.q-V9_?mkA5U],]$.r+[%'q(;k2Pf#oe<[gB*_p76P<pCF#d
%%4gcp]EqFNY;;d,LaDRsfY4LZDng8)+=>AQ?Ph+a`nX_nk7G?JCKE;4jaKeiqmA>5;<>IZ=75muF82kD2u?"eT=7JrHcD>a[nh<t
%5<n5ZLgN$jnKFNSK(eRUf($0@LaPCTa0ebs$@Zk9dBu8_PSj^L5H(5!0nK6H+C<RQeWThcO_3,;V3hl=I4j>EH!MW>K1#&X\i*(?
%(m5AJ8)Vkf*8Z]KT-[]F7!S"Fn+]4mr!"e*?L%LBF(46@5.3[)3Q*ALQfEDS3npt!epeUT*aLpECMd]kEl`)Q7fZMgGIf,e^RAAo
%Lg_6*`TWM^iQfH,f^n]$;$$t?\Xl%De(Dr/P<2Xq*Pb+%H<jJt)(CZ1E-U:^!`9X'TPL[p<@GA(Jj6u[E4/pJoK0Yh$$4tZir2J"
%!=5X3k;hn4@VK?6Pi"Ym#O]pH9r2l0@3n<kM)qFugQ7%W^U=jajUM]nL9PakCHi?ggsLQ;3bIJUr%4QTYg8,(Z8dF@NArgsB\dGg
%168mLZ]UWB&rtVck99a`UDoD^9*!RWJleec7hbT?G/iqGkL&:OYgKFT!.\asG@Goo5S.ldYs<&o9)hi]ZZ:eBAK7#Pe:^n>me4fp
%`qhS/LGO47REUA8!1c'Gh@7>m,qg:][gUUHh`LBFO\ZhVG"9a^k=rQ>F$DB,&cg^W*ic(lW.<\]TFiqj1<Bg74oLrXBHuHI^_C0M
%)cJQ##iT#Tp"Ue%R/D[qQ"1KfU]I:1Lb!ZpU\Kc@p;qN'(EK*0*BfSP[@j:Xq%q@apq3bn2N*?Nl=.71e_hap6u.5`-#UT5Q%7_H
%%2Vb_qp(bN,=08^Si2!aU-\A@bC$l4WrAPn4N[N/MU3N<Vt,:AJ#/<n=a)^EWk?N,3:p/QL#!JAj-Q)T>I02ah<:gM3L5f:a^D^f
%<Pkn?rlSGO;0[GneCTB`g:#Qee)1uH#';<rn?Vir'/4_0(-bg1UpkG(p8mfQ$T8,j4!&iDMqrSM3-)b-$mbZLJA^S-'o3#CSZU/5
%9![&+2M3P2j0k<0dg&]#S]Em5!$(rgW/*=+%pGXG*aA&8U:_h>f9H8tN_d%>ASKWE*FI)HVIlp4L;:<h0$ai8W,eDs\MEp4\P_t'
%cWY+1'oEcO:nqH1RI?*nVM&s%E,[gW)\qQ/V\X;35$,GL(Z4EK7t,`_(jI(a+^rHu@<J$^HEfT1<bjT:-I7!mJohu)!/#EHK/cD\
%/C>RQC"Z!"%1Eebf!n#6Zk0`>gu0Qkf>AHNiOS%sSkYK_E]Td9V5Cc5mNSl-aBtVtmX4SFmEs<dFiT"R\c8;8[qi8o3N`MBA]FaH
%04RJ39m()r8$&;n0gdO*9-TAVb\0[.-EAauG@MPi_A3,De?@almX@:Xf$.EL.#D-6>u;488)D>.bkU[H5CQ@uVq9,<=$g?C[>mU7
%@@HUr[8;ng$o`M;=+ui]'.^VIi*r9%U[P.m!o_We:Tf\>&Oo0H9%!DOdZV4%&\$'C)cftUV]Ns-p2WrW[pi2rH"]DL;GtUN!^5,c
%Hf2fK^=l9uTIRapmD[`@.Pkbt_F8X2P'6"O3B8j;`m+aNIW/iO->XM_M(`0CeF'u?S&NFKY!$&Rkp1GIJ,h:Ei=#-D1A?&#>hiRt
%B9qre:ofe,B]5@Z%8W:HTo"[Hg@t>ZG%r8<BXnLMii#XohQjo-gcX(KZmPC8gF^u:'F0+T42$\0jY`OjIYL33c<L"3MFL<[deh9l
%3i4SgZ9<bLpcS8coBEV^Y(NDnk>6`-a1,aGN3[6:c_]3&Fqn9B#!M=ApDSF``ZEX&qWu-J6=iYGP%q6r3AK#"AQ:c.mcijeol[KW
%K\;KU*IP*Rs%VW6+gC(P(hI,5*\COf_j2hKCDg6HV-)mkYs'7N]L/Amrd7E'!1;n8$/k#)s/(-?1,sT,2Y\&%N6YZ$S"_7>ETdg,
%W(D\ZY6LVNe*g9h`W[f'XkK`g!?G36Ib:g\1.3M=4:/5W,V*`5>VV13!-;*1fTIbimER>fgnmtO>bs9"gQ:1#2M0,7SFtjkZ4'DR
%lC!9VI@eeg0Tish`J`1M_RM<a)Q!WX>';rS9&dXR>gFR82kK_O^:gma9]asbdGA[5W.J`\+;O85#<StQ/T,C="L^b>Ni@d"X%5cS
%,Xer,0>2j,bBQKon93?QcY2Yqk>*fu8AV.RO=b,up)RDDeG*:mfSCKCM_7,lH5ITYIsU3.fLe%=mne>\7%6,]g4L&lP\%Rd6?=.k
%"nk*c#9A)?N0Y?9%Q'J>q#dT-FGLWDo*bu!L$lu0bm>H`_(eh,L^k9IcGB86#!P[LXpbbnCE4!3VtHeh?6-M%ZeTP-fZhMMmQ800
%j+CH*bh#$U(h%)kC,!O-EKD:/FdNCM);1>;PmQPa.DW8Rp^7,%B!%lXQj&eLOA1s_)G?k\]@!-<1VWDqP.+i(0BM]a`@X*Tk@l#E
%/T5R!&Yte'I^%n^_i"CO:r!_r<>\AD$c#'6rVlLoaaS6m`H*MliS_?ZC\R,VaoEB%<q6n7r_d2,`f2,Q$Hd:=6K[jtbeIW54;FdF
%LL9D@4j/>HF^b!Hqu3&9MMFpQU!I\3(r=HON5^S/V3ff/F)IG1"lfYcoFZLc^,3j]Z]R;B?^\r4Z<3\_KTBC]F"L(!gO\BtNNs>n
%*/T.#-^jB!HtX@l5+g>80CW,&"a/)bS'`F+I0JOmlb`9;]9aWK"jF]Mp8u[_aQ+(O2'fs.>C+O,N6*H]>hjRD1*/k@X3W_,are6J
%>/lFb5O[;uJOUgZTuSDHFcF4D$1ZPc*_hFAkItoagms;":+!`^4)/F-j/8k(>lmh:o\VCZbmB:LH0rl^=[_i:r-Ag1'o3%7)DsF,
%a(V*&.'B&sf56?t64Zk)cibiA'YLhO$Yr$F^[8FqA2WNm1sH5kO%.)nS23c"__Ga2A0rB:R_,9LTL!(/`_P$$&"ZpmXe-_UnIF/R
%djVqD[luV@=c/,'&$LkDO`-qSKd14p(@eMRV6iZTa6#6!;PtQ&oe(qqW4rh[Ht;O#QAO*5cFbJD0K$,9Z\#eV>KCOfQ?NF7"[8=X
%B>eI\o\iDI0SX!hCgf[[R)@1_>I8odJN$GB4L5<g9U<E_e`9q&cO-R)2$VDmk#eLIK.C040'ppM/I\gs15Tp^\0uD`Yf%RTWJ*!]
%6kTU/15Xn/%Vn(B]A74i!&@/)rWIVE`fpRpc+\J@*\rMY\W&#;ZI&)[G-ec*89H>2htpfohXX,6.@T?2n^<qTKAj:Z_CZt>?!Kq%
%PdsJh8tVn3;hhrg@9nuZ$pC<X8IMll^0]np%\#9=(pJ0sM4:map2u?FjmKX?+ba(O+[V+=7YJXD6r5AiJ8s>b_X<\L?s3#ULCiCT
%S]O0uKls7.MNN!ldFF0LQ.*`'""_=R6B?Wl+C\ucQXK*K?"UFej'4re@Z?0&_Rg[WO#U)cneGAB^8$hUWCD*Kk;5\?QkgNH$uS^H
%(u:/0a3m#TC;Z*E27o7;:`;*)+hJCK>h<*QF?2q)/`\<^X4]\nR/0*V/CJ3nXAq_`@`]7.2^rV)2JRjZCPt/U/ImRU8hG-:Q.l-*
%fB/#.2\jZ-N]#-]$fV)rg'qh+/!V@#E-AWA-aeYXW]J.5.%cVX.\p7\-BK3CF&*NkD`';S3EB]C.6(t.ho,-pUOn2Sk8&\r-Y4`X
%V\F`p:P%h_j;.19!gTdtB>a&HC,7YG];N`*_HF!Z:iG1BJh=Q#$F0-\6t_KF2M%#dDiY0\Y+brE#'q%O2K?jnZY(].LIl+hQlbWU
%%b6ptb1rLqe=Jt,D3;T@e&ZF&ii%EIe]8<+/J-b?6cSoS=;WGqi)km_O6U'Mdg9E8O_<pPfk,#Fpdqm>[/b-Q>I0XehJL:&9=N=g
%TX)saKhF.@@H<N73DG"/HU\nF%W%G"n6"CI=)0ZE0QM5JM\:";lA'QEOB)cY6NVEFINAZQ[,:t`P7NV1M\j]CBeR%OQXgc=6PfqK
%@8XSl>=c;ghU5/bT\>4X="UJK")%IB?X:SdXG+/[aN@G@ab1om*pN*21bA8ENh'l,>eIh!4+!$^T)ls_8Rl7AH_Qd=[d!=h[4Z\I
%)/9.JF@K4=FkfBjf#r@YCXX.0*%Uhgb794FPB%p1g9E_@TTBgET$2em%>#g=j2Ft,<XqTjfS1!o+Q^r&^9@_J4+"E%-$*s"LS^3,
%A!i4.E//E%E6/[5LZ%K[mgDHd:q1[$2>u@[mt5^8D)cD%4<4(>UCoorD\`r>Q=F0jKWr(Zg)>TKihDfHX:6T\]tP&u;gTuV9Ci#8
%_m3tg<$d.^*:A_k\Hl3@$P^'<Zb]#tjq9qVBlI0IVUSgXQ('cQ2mi>+fLU+-$;i6*4J3Sr0Q_R;F@PHt1tQP((qRMs@LK.FCI++*
%0IDjGR%FR-U+_Y$^Glt&UtCl\4^D`OUlW/J>Fi!_(")JV-ptA+R&crA4ie'Z++b7Z5p+komWDb10V*:jfh.s=40hm0dR;59Y'r0c
%c!A)ebc'*3F&/Z[q4?=-O=/@en$op@gckDRTTT%Z9Vjb0]4[JAE0"-(+gGh)NBB6?YNHN:k/KcJC0>#W726^/(]TZ-8eZ_(?50j^
%`o^)6n&R2g!m4rAb-l/)1,oa_qh&I0DePKA?<78-n3Ykpb]gP[SfFaYboA+9OK<Q*`fc6ugn'@cWtmM.A%?h<UTQ8'e2`8@-`4,X
%Da_-U\&S=%(a(1>JW?DM=K7UF?WB_s.*lYiG:JG<aOJ(BO85FCFMoj,Ye2&FeVg[mr-aN8V21^H(h)IDd3FuU36t%?`EDBLL]t*s
%-Jt]q";Y+??7`\BfYrt^AW5%&P05]66=bcp)"Y=*-_UotkeohFVZhq^I4eiJDO\[ceiZ%3-uYUJQbbXma0AFFjlnlNiE<6nP/Msd
%V%?='<>J>R2$Z;=a^\9i[YTNbkD(c]Y[1SPOt;6,`qTa&g$kQQ8Dlm`$4A$c,;2t^4jBml$1afI$L2/P[sONak.P;_d`Hgrm`Un:
%Qst<Nh-K'?Uj1Z0Na8O5\").?k_?OgoH[#_RKW5<qQNm?(qqOL?e0)!D=1P<9g1WZ>]gX(Og&hPai(n,L(<8+7K]`lOTR:k`V3-F
%.29mV-d8NL<(s);g\7kr_*1ZhSc%(p!f`b[3ss]<%HUR:4=NAj'HGm`_1t1?ok4tDdb%\+K^$?,hn7/)?^<<gkHk9#F^0aPk%#[&
%$:=^0N\2\Z_SjU=M$6!fX;VV52l(KQkAIM7(!9EpUrQ7hYQ/oe.*R(\+u=\cP<\`$XX<RAU(7D'GnH.B$uNtqiRg<GA*9N8dVo>F
%d`+s/iUsh1fUB$V0D%BC*L3Y?iYeag_lkGQDr)>TQRSXulBF5e21!0[<@EZD45s`fjj$0^niBk>U<^1PngqT3ND+`J4P=>*El3n,
%esZLpga7WuM)aEbMM/5*k%eHU1D\5u0%33dEaKS[D/4foi:C(\J7s8elt=:pd)C'7/"?"qTM'EHh<)#n"dL@$c9Mm#ZCU;%;r@hR
%-J\mEh@1!d9Bj'L*i%eOJ&s"<H"*KqcD%.e&d\r$DD9jMdc+UNAkt0/20irn-U-nr3JC-#L?Y5rI`I&JKAAF(#:d.`ntb63#n:M0
%iOMG9BO!eQK6`.-W>I-Mct/?""1.kX?r2gHH?o%k0@7FD!,NJ]LgS_8=[j[VZ*Cauk2p7)`UWC7"?!ngAVZ-'l<sGI*3Zo!b&fDS
%B=J0tPn?n/D]u`3/5[k,/EL@OY:3*nOCLJJ/j.#?A?Kf*\[]q3p60qX96mn7KtRWoF6;7E$Pn+c,)iN<-5Dj["I$$_BY_G>%NcCm
%8"u+TjICo0cf(%&$cWV0B44h9X+ZT=IWf3rA,oi^HT<[CS-#7mTmc6s>QdK.;4f&XcF0*&c_^<8.>88<f9-DIg_pZ/Yi(Hf0G9l?
%`3=M&<EDW[=i7kb&1T1Bm2Ocik6kG,[:+r+U?89..J-Bjs!P0GmElPQi!,V'5f5$7MUr5%\YV7"3)a7>!@[H9GWm'54i8dXNQ*Sn
%/JHPkChL>dU55+g([MnQ.Sd[Dg2\Af(0*sZM]t6Wk;mh!n\WH9&n-@_CuSVcbusDuRSa3,Z-j4p%=oU;K#tr4#9'#]M#Fh9CFuqZ
%d`fHeGn2a3-N-@Q^1O2#.si$[K/O8\qeKBa0G<D[1['j)&@G$!/EY%5DV7[_%;Lu^BCS_h7$<O?RtcV`>8,LPI_R]qe&?+jeXi<B
%JdQqFPC'l`?]04C;_@fU*+Y*q:YColm$,2Fj"!hDDHVNBYWI]$<Ka0=7H)d"(8:A2oE%J7DQJE!3-_"B6CT?@k>DRg7mm7i`VLHI
%@X(]dYc^=K28].2WmDM;h=so'2F9\tc?]ODC*)e02i9cD/XdupZ$RbFA2,(@_73lm=ukM(,&*Uhp)KRRJ^i5TNcXd,,B+%sAu2[k
%fqVSf`gi@8(0q$6\1ICnX2Dc3(2;M4f<'/hob&o!gl/Aj2S*).8U3MdPNU%[j]a8g,?rqNM8fFE]N1+_Cl=S9/o0H0B(nmfI'UC)
%[IQG1a1S&b>mM(4,1!e>QGB';_u<bB-sl2h%IK-e'?bg0OVsnt#8o1Jj)J*:U9-\6H5^+2C0U<j`najTZdc<V&`i9l4F8%j-4fe:
%`bhJ%lm0q]J1@cbbD+D%8ILdl<`F<)7*jW,G5dr[!HEi1S/Y%RAUQ^'klXck=d?)4ki;hFG(;;,\]p("ai/XG_bsqu/X1X1lcD$(
%e`OW=Vg8XMW%n/ULEM!NnO@F>cM8Isr3`&mYF>k?P>l-j^_W=r!Z[P)fXNq4/h>hk[_PT9<.0?tFufq`GRMG/BBN_5PFSd8*+_&U
%GDIRFVCdJ[O1^V_6+qZi&T#MPclJa@>s^=i^Vu?p.4Thd(.'.IR".u6jlUL<a@]mB?3lhGkI;;+lPtCIjrg%Xe=@dRN@]e)?C;dd
%)1aA5-RrNI,ph$S%<6QFX9TO>,)0#'@%/aoLAOElHh;5[R-G,:LLOe%f-9(C.T)m^*i[$KBrt:`]!a3g<"clb];Zp2bFio@+PZ1X
%2cc7b[Y6Y+(.Q!t[dqp-$@47&;9VUKfIOWb2*/qLesC]*M0e!^AZB5nV7:J/l09uj]hM*OMnOAYBlG#Wb/t[WUEAnQ'YSWj)_[B^
%!U2$tHt6SL[_DOgjG4$*37DGNEI.4eFB4]2CB-dfX<+6&.6tq-6pUD0UfFRai^A)#7b#a-5bjt)WnSl(_=R_9Y:TXL_^S&M"<Q5+
%@G/<'pr/_0m,+C.%X81j;i.i@<[=t1,UQ3sZQP>%=YF0lB:4(fIdoVJ]UGM!RXdEKXRpG^_?h`"eJQe:(]La/<eKZn_!3D^L$CPC
%bQD^bb1<KcdY7`&COu[oAM"TD'.XDo<+F-'3[a34_nUQ$V0^p8PMdrm)$;X3AT<'r5Ij'fJM*L`cFnqZGUs@b"Q&Y4i^RR?/d#G6
%@*:+qP1#,!jdZ%_*?42HLr,$cZl7Hq7b)`;`>7_907c@#hoLXWLG-,@>Mbfi$d:n"c]LK)gO`JXN"7Q7EXt\'pOrm<:km66BFo*Q
%^f&#(PIt@LL)aV#NV.TjBuo^&;$tiq_9d.3_oqU)9/f^1W6sZ+-2MA=?u!l<NLC<i/N>sGm+KMMm<F>=h5Mp'$AX>K0KQk"$?3Js
%:bkJ8eBZE6SU:7r"YpJ!a`*!d\fSJli@"6^d/pECS$U0/_%p-3>#)__c./i"p=Z%_Qpe"'9'_46ArUm$9d^'V:rK9`i0N`$bhu<J
%3!>+>@'!-W'P2WBmu7LNW(++aA]g?tOg'LUEteb#qnd8>h1lP):kZcA'tI&9Lo,H3Dh7)Ec=n!@K$Y55BJkO$Fe/0_W0/qdKVe`B
%CXk]Pj>KD=/\'.a/E/6Tm;2XT;Nt62G$l9,DOd@1QCHUIOZELo'+JY)MR(/PWqR.6KT#0!"BjgQ2%h8YKFPOWH]:PG:MONm\rfci
%N.\*$bCYJjB3Lj):E@faE9STc=f;gqBYJKk7#QnM>#5e31W2#%`Z5eI:r,?6Ak/$2r/BBq$G]lEK4q;oX*kPaH322JU>(:MmaIF/
%9gN`H"al*foEX3Q/o]oA0\l:KUk+L_5*cZ54o,&9'$ScRh>Su<6F9!m!er7G98O<d4<5@K"M*MuL!.gK@6$</7&DGi:6"<JG$8T?
%UgsN5g*G2T_m:JNWXJn>Tjf[GOk2:d,n,b"?!ni,n7*GAS^@8q>a5R0>CZi9KI),1k$IJr21fb%UMM-!lA/p(GB8fFC^tgm'!?Ok
%C9I9dFW,5;[*qEebpT#7McUikG6`:a2KZtt`_F/,^1&_BCgrQJ_KY_6ka^@K>kdjZ>U042)a.t"Q3k;GEq*EuaUNT*3>=cl0mJu]
%E%_73'$g/:p)?Vg5egQG#)A#9)mNk*e&CO2_XLfGN)#<lPeb1@*gK_a'LP0mZ`ka$`.6bP%([?i$cT$&`tZG.P!U&Rh&%Z'n1s&%
%]sY\UYt^(Z(m^+rS+s`84_TO32^9fJam&5Y,4\T?>mB%dW2Fuc(87<r31I$nH3r*.olR1,0\Qsr&*$,)4Fn9Q/;Wm]"d9MrgPAK2
%H%s2Y17P3a*Xh*%cuSWAagsVlfAscf52iNMi5W@$@tS3kE+NQ/mK,gI^bZS)]oD4t`4Sra\Z&qnM`1^42_4i_/lmndG<0Yu`Obru
%q;/.7Z+:S?gQef%-]md7N1FtJc6NX(`/SGA.u]>;+"/?k])1&u"n7_1,)T&5pS^@s3AJPmhN,q-%E%"5KZcGcT?R1</Db1Q.dSt>
%Ln0bQ!+5&\B65V'EN_72mkn&fpmDD2S%%$;,4c#Tn$X*I"i`m4BfOHE%9/Y<mOkfnEGSCtefC`Wp'Df&Pob3D_1BX4lZd;\htR"A
%hecjJ]t<GBFZcK+1l:%+6+=YDERM.3/4GV/bmc**5?;olF.8#S83`(k7O`XLqf!&2"Ah7>Jeo9QIPF,:R"tP"dd$1&C]h+4B4r@0
%;Y8,TmLTBZOTlhg`'e>1&NSE0B1dKQ[Ad;shV+F%)17LufB^/.<$iU3]q-g#Cc!:Jc#&)%E@EtlQ12/=XZ3Vg/!fL]%8<o>K$mP?
%0#?rZ=EoYCkpE.;oAP9S-'il#A588J`YV[Sm']lm,U"ufgc'OtR:V05R$$/<O(Y&/-`Qr;eC>YQTq,;LU$N)'+3(&&[@l,cB=:tB
%e<rlTEWWR244T<l&aZPjjL]4Lh<:G1Oc*@mD($sf&rS]s84t^B!Xa7UTlQLDGB[4[(^na`EX_IRd[7mjQB+MAc.3=F%51T`9k6jp
%]TX63XA;kjH+uIHb.9BMicZN<R^9!)_]ao(B&ae022pr4&8"n4bo'!;@:2Fk12B`Cc0"<a3A;AP?WCr-hMSCD'&E0RQp#sW7AAo:
%''6s#&?iQ]p3JZU0cnadWL]RKNMKLP0C*%_PooB23Kc`Vp@74%PR"]%@c<oM3H*#.@\n*4_e!OAk':Y*`8M\hc]/=O(gjfuD:L#U
%.L`^th)Di#>a3UYc81i4S#tPAPblC1RkGBI]Pf`k"`#An">7\E/*I)o9!=al#[-cK7Mm10KlLUNS?)g)Zm5MUgHc<Eb:ti6mJ%_<
%7LVeq"8!9)]O]EP*#<k+XnY3fPgRM!&P$G%B5JTjFIprFF]i+d<3p-aj<a+J@hX1sL+>R/JsE>%='Dl3+LM(0X9BX4YlQ97"[BO/
%X#4[QQE;".XMtkfLE0rT$7QGPCr)h\_OT_p!3eD"O@%9;6i5ZY/A<No1G<c(NCuRC\beM`a'=oCkA9>&>S]Y_Ck?lAGY-i?RSR^m
%/jkMmJm!&J7UmPH'fF]\J5kPk*(\8D'OmQ'WH.+j&hOsU5$(M_%A>fU#"IJ#1Z/_SepXgt%p&f*Z0u!.ad\d+E+4`!o@Xu3*NiY8
%m>Rt'FCV)af_%,HSf<M@kTr3&+*X%=fH[pGbD!P'g:?It1OlINL5ED-^7]'t![M(pM=W`GTXRag`%Z%l:Ja1)V9mc;C!/]$'c`]E
%()JJ,`UDX;=JVM6.1a,N)8@p*9>-_Sp^E\UiLI5A@gppDU&eM#rOiXE$S\MqpFi!;2Pl,hTXNUcJ.Bo$^poN2N`ga[F-CZI\Ek.#
%'Q?KL6?7a_,GE->I05C#nhO>=$A@,%TG,3^NNDr@U8gcNZ/mITVEs9Y!>6=b.Me4N%<6ip#s>AMl\WTsG2n$B%U:t%s*VgSo1IYM
%2Iic'oFE!@.F(sC#pm;5$d3'*PdZk4n[QM8&#C85PM1lKI/a86O6*U`\A6G%nB)%OX"S!hBhR@253'C4doDn*U@U`Q#EEmP-u_[*
%g&"tnI8gTYF$+f@GJSW]]SaU1((0N8E3fk[5)k4k;<Co<0%@.#;ITb]M.LiGAakm;m3uJ\UFp6C840`nVk#PqQZk/R[`)bXZ=U0D
%`$-cMMdq5`LB6aJ8)PrY6cZ@<5]).qO)&inh?%2c`KQVg.hK>$nJsc>K[]IL')Y?AXFu/^dE_NcJgb9j;J's,8G,$V[!iXZT/Wi1
%rf@*(4^nrY$UDtI4^$#eA)(O(kWfVQf.S1V#RBXT(`+FCBWMD!n&)2k"k:$2Kk4BQA4L1)$-#=3MFE"2.$iFeD7PldOhAS%dii#\
%@E4n\$d"4?V(,0LpAf"VGtJKM"$uuW0f[Tf8;D$7SU&)87'i6h,BhL!n%kO\./G+$09"#C<u4PaTFkeU^D"W*ML-0\N8meAB:rn`
%fEXpp-*'Yok$"1`A"Rs^p,`$nU+$o%e5?R22]>M3[rmVI:H<Y:2lF:tI3G9P0f#pkX,!BnOIN(pL^A_QK9aG8ce=n5D>)[[oj%U)
%_'pdjT1+Dlk"9J!m8],rWA.Eh?]t-<m*/tN_so!'b,b71$%IBsA$>NH@@H3GjJ#7[L](R%D8KYUACVc]#_q?(._r#o0,ihrRN2B*
%<(u&XLIKsU\4FSA[!#b/->h^E+'pN-N6+qu;fSa_3&FF($>LG]e]E\@(_\'<69k.#/MP,-1d,S8K3&_K7H8Y(ei-+-hKGX+=&eTZ
%#!bm]VP1M,We$M+$dGcsVkn:,SY$PfJB0^Y6^"5Y3b)g.MHhG>;B_,c^GX'\b]IThaUc1dS6"MN^sEP=Ug!`5H.QB)I'';`qnf_D
%cX+Q2onS54\@-JWBp#LjF[G!I@ciCOY!oBtC<Y/diT&0o1GF51JI1ccMg(X+EVm&`_X"WWRa0ZUgIC\mKBWh)q_Y;3W_riP\D;CD
%Wi'0S%C),D!Yn$5T6[b[(4+r"K;D/W%_Mg7-@B)3L-Fsn^DVPn/%:""mC]3bPt9.g,@MQcpPB02)OXB<bL$sb`X$uT7B`<>E.*Fn
%!Ef!dS_FAeK8AOu;`1WQaZce/N!3Q+ete//9i'd3:9LYh0$H8.n1Q#mZ>71L4a!X;e!M4Z0Hih7232gN[kh/T!DOnRR2dc;79!ar
%Fp`@KH<s@9,V_VP[S0H,^;B6-TM4!V["XTd]4aGsPSF>`7CG6UGjm4GKblR<.NJH(:KLj0na%]2/J%WXEIU6"H%`K>jK>BC9heYl
%ND&e;Ed+\PDIgcT&Jc^DNuh(Y-iAuW%gHk045+`ufm-%fe1""e*))u0K]haX/@T;D];C69r>'6DYs+3uZaqea@)U]`1@*b;Qg]I^
%]15.Gn,-esW&YNT,(VW/`F.<e$m)uYl;[+R_1\2QH"s:#eY=8.>teuDAZ[2?&$W10a(KUdqA;S"h)/A=I+lK@*g"bFc$8#_KYl+&
%eBN\jr"^S5k(D9p\M2!?[u)b_X]?;\):ahp_H=ulQ'H[!="cClM"Y-L#g^,U?Xl=@rJ,<?ec5W`4M:[el-kD0IrkMWj8IGZ=hhZM
%iQ]9>rTF4JiSjLdrTbsg?g[Qfr/71a=5WrB00\>[)Ql!ocen^6J,?GHTDnS&qhM5"p"*8ppV4/;fDDt*qcf(,,K3$B8m)jH2pIr@
%Ie1e/IH9Nn4.#;,3tLQ+YOVY^+7JSKIo.]s8Q'BoDOCddb;hRF]->o03JJm$*sKI)T"*m$SWbM?iu$0ckI7'9"?n+j+c0gC?k0^]
%L6K5:]52("#t@\4lD'9eA28lLhDU`SVLP/,H(hk"A6*&*GIL"jW\!\]TL-]a!D\5#.n]"5l'+jWGDl^_UsE=0Wet6o#N@_t4r.iZ
%HsN[iGV03pBM3`,Fn0sd[guR8lLP"5PS$IiGDEga/X5Ci\hK4'PKoR$]]$RO1<=`e,$SM-KJ?^KkF4.*6*PK$]<G"/lb;ROk7F./
%O^TlSG#1-,,'#@-d\s,@-sb;YAHDa)L_599n7"0%L5`Bo\&Z37%i=p*A36F"L9i4>qO2U:q^@:@-(EM7KR"E*_CdO>k9PXf%Pu(?
%GQZ&IOYD0Jq*>"i%&Q'H*=(9>daf5A.o2_l.>EG9VKfs$YrHPaU(cJ74`_-\n.-,$'.5W5D!ma-FU5"g-/0(\L2uk)<.X*b?Eo2^
%8_>IsUY`;tNV56iKkO6@TH\_mkdhZ)B,End1JoSf(cM=^B)j9G%8N[VPd!J9!"\*-A#EiG?+F>*%B\UJ?ugU>f7mJ"afRmW/$$(t
%WqhJa6'%njUC%c'mq\'i#h_=)ksSs:7P,WM$WKLp,gfI>)lki;-\L??a-FeB6:+.`aC0-$f2>&[HFUZj,iBIcLJ3&#YlsCCAqt&E
%\&E?r_]^r?AD@IE0cG2!$9O7/dK67`qT9B`Xk)#404';o!_FO;b=E3k@AIt$>=U.-kBF6Q#0+ltgl6M<QDK=$aF:c*acgBGe^9B+
%\mKE<CUA8NV80`(\M;LA`Grbc'!bAJ/,3j+m6Ia6m^6>p8*dI.b"AX&+U>KSSOd#$nf8G+\7g`+E$$cN-X\0/-/u^\aT+V]a>Iu/
%&hLE*],>TmCgIn(2<Abr\ZATZ3<5CU@NMVd].L:$5NWgSna)RLd$:Zb-Aj#p;rm9WAG6&a`Bp)0qiJ4E2'Mk\m:Ik$/Ji"*A/rn#
%A>^W`fU+8QhA"R)<kqDc_Jo'FU--l$AVW/\%!DbQKQC`%!<J"uM&e=-"s>$YI.eT^UPo?9`Q>KT:e*T,ItA<WVr6*01W(epbEM><
%>H!ZhSPk%&5YRkm<G0-?6?'P&80:hrPNYK`Z^GRO.;69\M,PN^9M`?h,6c/#,M[:tP62B&co(LG93g+U=e_.DK3&MH3.[=9=jB`u
%,ph+9[J+0A.ERkD\d%@<C\S<lF$mP>1"8rXB6"6(3."04R@JVc:fr"dUH,')5ZIemRUZVFasAPQ[uE?C)pXA7!YIc@Pet$ZW3b0E
%9,PfFi=/J3NQpBE^h<N;+,ISQ:3pE+<bh`kFO:1#>&+RW?ojfWM#^Y$Q_Kmf.KNlHSS_<l(BcCN_!Wd9),(HQH'N,TKb$r#Si'&M
%.4t'CKSfgIA=1:kfk:MD*k/cc8M')+,Y&8f1`?=m<[sJKD=%Wm12(f8\:Xok0Npd+Ql'J0>,(Ie4PbqFG]lcD3Q?Z'V!mL=3C*Q5
%X\5h4Z^ObM7u5S]:LIAM!ZaqO2'%m=\tqEFRUYEdDjIs;.a[o%HJti=l++5V0lG*"OF9Pli8TaGrH'&g%%J%?I4W0gPq>h_"NKHT
%,6SZfh<"@9e;M59#j7oYRYL^u!154K4V3EM*c-ER%Q@(Po<;H493UTI.4LgHWnG*iXL!WZ0,3M&i&nNWHkD\INuFp/[#bO1m_pDO
%egK+g`c@a5`oJP]8Uh5Vn#(SgDKgH!+tSK$'aUPc%0aTc-gIL%Boa6Zj;aXPJB73ElaCQc*&PU;5G!]!4=,6-(X6T/6,T:E7+<nO
%m<P2%.D"V6YP3P8;lFM`JrjuE%s5K$$uh5kl'*$f4`,:0KAgY:dXi"Aks>DS)>J&.*!*p`,,2VSi(Dn1(-X'1.jGkqet)I>p,">G
%8,4]d2KN)0Kc7ES_3#*<;_!dhZr3Z]Q=5U%aTVNbKBr0D5:nHtpP<lnq<c6b0d_BXd]\#o2:AdV0?Am<oQAnL?uH>JX,h<0<l!@n
%5B6!^$Y*!5CK!]$JVh['C)FS,$$[rgQ1L/,+>\*l92Lh-1uLQG!k'E/>F$K^oC#gq\2/&9YJ'3uB<IbbR:MHZd/"81DXR=?$<H>[
%*NLjp)K6BD60Q+/q)fom0&WCT6`2SjPZ,G,\5n?'9Vur0=5t]V#V!'&E23IWF:J_7=%`:N/Y%.&&UYq/*#!a_;*jBWDC1[u_O2U3
%<lh;On"\\-Wc,JZ4$m\`#Z"lPZ=Q'.]IFJ6]2b4-9VjY=/HhV9,De;Y_<_<_#kak":koRfYX1a3=N>S>i[nY4*5%T_LJYDaPPShi
%aci`RGR>0bVX=I>\XWg8Dm*tcAciOLkBbR1&r>#!$q;ChO[oD7IC)]0PG(CaC2E>%&@N!`Ab?d\aWOt#GC?`h]3mWrO1"nooRY;h
%!/-Y%"J5]5cp4oV6+f>$_\a@;23e<kiJllai=g`'Z`fP#'&b8ZK._fhej@m!Uj7sN@3i"4OUb*.C*>C3+VDPX:0G'^^*TD*Ke:g@
%O>%&U+;a'<^lkgj\X6fpmODLL5Z/Mf4gjQDUglH\Ca</7dG8`o=hWq`ViufJ\.2RB/s2sFXY[Z#S=H6Q3;r:p^EFl>cY$_/9>o2r
%!Wd55[o@"5i;@%s6CpPK@b,9fK<$J3kp8FKbZGI-,qj]spC)/]92(gDcYtNJAJ,$b54]MGXI]%#2`"Ki9-8P5k,!XqWad[=LBAMZ
%F1TL?YDC&@Ck;.e?sKF/8ICD*qo6+-IQI*hs/>]f,kg@^;'FRg`*Ofh>)asDgqF9BicWhi$1WnX=P:\qM09<q5KLDs>6nQ(ct8&g
%$We9S&ipf=MD*Akh*/51pt6![Ga=2bZ#/nUVMQM;aYNW\h:[MI]<lCFG,n"IIQHe+7KLP21W<<?KtFHMdlqtemr8$=_=Ad_n3KO>
%hp4\*eqJ8(ds\-;Lq\Wa`V#^]$k>qI/pR.EFU9LYAYfBTkS5CB@0Q?ca1>bGb)B.LUU$jcTq,eo)er8<EaJE0Q.WVJbNSJNRG^Gp
%dBGMEGKu4J;bg:e7#SeB'_rou8MS@$1!6Mq=-C>JejOG-':'dnaEto?+&@l>G+l\<^E4N^nFo#3$ip:B;"\B8Cn18oA^HPO,_ksm
%F4\5/d?Q`Z+95pG8t[ZT$,1Nh6jE>V'cURY@?CD2iW;N8^fg_$"$_.0W5,>?X@Pt%N6S++Aa3Vl<@G:ql5Bk*2(Dh-Xb'<(0p+KN
%@.qYa5Pi#nSh!Y4Egm<+8LIKNnf*%>E?[^A1:"u91!V$<ia"hZ1D*/DXV4qZUD^1I@^eqO9gA)?^>W8Q9c&d`6L'=B#XA`<G[+l6
%hDOPc_!gFFS]_S41kcLe/CT:ieAJZQ"0%o4M+ag-1ah&hXg!"U*2]HBg3fS'\tN1MVk0B>[nu?tbI6fhbQVUX6`O^C^QP7u(6I5>
%"1$s!+LIP>7)X?OmEEXoJ?h;I1(gR-g9>khK!<Y_#c'MFYFZO*LSADRaAqsQdgE0$I5-HfC1mMVC/>VYm->=W83V2[&P:m>U'5%3
%&2MmCRrS57_*[jQODA7Im6n1`npF%6(C7ij4V)1\[?-2<>4boKJn[D>UUjqaKN(C`B;*gB)><k;hL`;Hng9O/TQ).n;M1F!7bKAo
%Oe99ppZb;`bI0-.-qLIN[eU=F:B8Y\coPP2i:#cCT0*47_,XS"Of3-?A<m\lL3=n7Q[(YLa(GXJ^m;IF1rGJ%BJuX85+MB^GH@AV
%jB<oTk']s>2a_)3;6$<s?2d!uS"0C(:uQ(W";]sQ[V6N!JcaFW.`L""4,6-]C!\51GaPAXVT`.K>CDlZjP`k]S^E[f8!pU0XO]h@
%Gm7M/`A<_,1+^&7FJ8LB=n`,*]Hp<24-[.WX:C/Y>RRV7P?$CBi+QYM$J,Gjjq`i@9>BB?(uEKbrQRb@0m8oP!+A\VhfRD<'JG3;
%]4s/8^1!^<CEYJ#.`9$,%i0Uu6A&r[H&lBJ_0C+`]A$kSctN$IKam+gKE%ru)<i^RNCIce\5%608MuU.crH-bE,/E)Gk6&OV(=>3
%L"fJqbLCSn7.'`*j9^(E%SYR#?Kc:u+gLeDO&au&QMBL-N>h@TbaG"?2St@u,[ni#CM&9G>8ia@11hnL@\>J[bT%CD,*^I8TRT:*
%`9#R/Ts`ER=FrX_^GhfFe6<kbAR4"*-k_R,,u4PgjrR?i4f7>[\S&V[nntcf\+l.e^Y=nW&nP/H/?'BqUT9)i29J;maD0TJICR#]
%LpLKV>>]YqSOo>.=grDj!iCWT<+aX'e%$B-P,-3kj";)mB-Y<0ahj[[SI]X"88-[8__CZ`%:oI.9]RjY%W1fmY22+$hNb![5Gf09
%Ol5ItoX#dX3B+lc2@DC8JXIQF_gZQ,BWbQB%Q04FbMCT&Q`tbC+uaX[\Lp&d@1X"!mJQmJ<KdfSIF3AhJ15_Q86GZ%<F,FE%oV#_
%<C4H:7XG5Y!+tL:=%.AgU/WS4=F?ZALO3#j"IhoYNa*BeRul:b2,3)retio#iP2s;.^Xf.+-GLd]%ZYl"k(^aj.//LmrMD]R0>)'
%k(@,17cgC6RbHgs)nMuI0dd2l/-?q^Ka_M%So^Y`(HsVkF,72h5!Pr&cl$M#^Kb,n+c5E_d3<b[#*4Q$0t4+LD0kBRTU:[^B-Igk
%R"SnM0;"7^aK78[NTjn/1_$ZRSpZm/MmVF.Qbd.bT\eooklEcCbg&pG*7to2*@W"\AnN[J^l-I6>_`JrAfkc:(3%(.@B,'OeofU+
%F;h98Z,CF7[V96&H;f>.(_XjC`\JG4#'Wk(/$gr[>'*1Dn849O;RX%m)p#i70YYN7!\g%1CP#?TF"u,gD%N?cLQ'00;s#-6L`!C:
%oj'>0BK0r]Q41P<mDd=4X<>aSL@:C--@>2<Rlr1qC5KW42$&$0m\Cc,CFu:97Kp=Bb0];/8_/9W_.$KYY3pDu*WG]q2W$q@DfK^^
%m[a78,"gHGi^.(_4Eu'A0BpsJcSbWZ1atS,Yt$.NTZc_kLOD"Fe2L*ql?ns1qS"[RKMcX1J%#mSA3Rfm1M=PK5h4JIRs@X)=tY=X
%_6o+'o?Gi(PnR`f\Lj4'3T<p8,!0!d,#&sLH0IX'rRp`P@:@L7jPZKB2G*BV\s$^H`Jgt+i,?B_3)aAlQpskb/4g\kT!EW.UDJDm
%bWD5.%U8[Z[(.rcCY_kTL4M\+3^]c,j$:[KnH6h"ck(bP-VBg7bmU\k,)\-ei[U7Z$0(R%6:I^U]QM9%&PBBZT'9qq:;U2e5?i+a
%5rXemW$kU!/2r$M8K5;Lh+&dZZVR:ajW6;/Grhhs_a*28SQjofT)6%@9W'a6?sLQ3/K<+N@,:49%#*NA_]:*=hu>5JJM)2;XiraD
%>3Hrgb_>$8jFqJpi.Z/q?t`.i6DD3?\<Wcpd,@0[XmnP+dIp"W%Xf`6LD_U\pJ>Io(^8<$-1#"OTC#c;l6l+cSfI>_TsV>X-cJuN
%-bL#08#1$\h9R%rEKe8/1=Q,Li'hWoia<o#Osm8S?Basn,SbuN/AZ3Qm,kat.k*,.k-V;6A>6DKWn8Plkcee0>_nmN-RI+/\C.9M
%RbiF!]hMY9D!u(rn&:GkTrWBf]*4*hq)gbkmRSthYU:gf;O/LXN_Vmjg$XN$1Kc?SNdS8]?3IkB]I7OKgJYXGb]a`?I:Cl`<5i&Y
%%TKTs%mea0o+VMT?B%X-)]IR:k[)qR*PS4qioH9mZhL/,9>+HRUb^f^j^-M/@s-3=G1R"^&^EZk@@1bQCc/8a,Qd:s!=$+J(QD;s
%,L7Mq>R$t,-/@=,b?YJ^e-j22p@:-U,L@!qf:R:=#7Wc;MjRt!\,Q%0-7hRh/=7S`#@AI+>;IIYj_`:H':C:E1qgFX@il3=l-@[.
%,p/\c>aFT8W$ps>j^@I_RUFOgck!^LS_QG!moKsITiX2\qO`D%RX7r;61VUS26A(ANm8QICu$9o^s^NfrQTnTGk/8bE+PU&;MYU*
%TmaK-/<jYd9lEXCHI`=cI.;@_I%]UdZ7&I_6#<7"%l)857#o-pR"s#akZjY.C)02TJYa\$jAn5f=D]7[@P_%[A<M/8Y`5\M9F%FE
%rJKHlHZW7W@dR9h$YWtrjMLO;.l.Ki(\V1_poJ#5k?>D7IAE?uNuAhtWc4TMCZ>J`^#Itg.!qm2(Y:&c[=Q$MiR9c5!GM)rX),JN
%9jsR#-Y4+B^.f&l*nRl`UV"+.H7S'um6R_,oh$4`h/t9$j^A98iQr4MKe^p>7UUO/0TVuDiNa<$PBY/XQa>.F[Xk3G.4rSOesiIl
%3Gn(UA6Q20jX&Y&Ka<BLe4n,74S6HFPjU!9ef=)g0c;du78.FC\jOQ[cq5XBj+/4"fG;(b>hUIsDa]=&<`mB<-9Y0ArI./:+PO?1
%.Za8uLfY?ET1_b1KO.q7a2#R:'XuV+;[+CR-\kh9=pQV`;?1u%/:$noF)jDHjC@.!bFUS.P5qHD3>G#^6BT^,[c+b`X06=Hc(1h*
%X6OB`hHSR<4!(85)Y[F!["UnN,grj7fehF"c<_l`@adT!-_'KWgRBEUOdJ&k(;,LFLA05c%F9i8SXS_9'>W4_#@GEZbV;N*I,g/g
%oNuBWL_Ye*FK:/D7Cm;.#>1XiHY^f^0>IcigE^:)!sBgP$Y_p`p'[iheAD@*@/WpNbioT(ebE8:d!EtK@jh#[SL81%I(pS4Y,b<[
%Q0'Wb2([44lJKCE=D;)G1+Kmr2@_Vd7I.rYYrKp]ncGbnfm$%DqZ)!/,dFZQ72\_IDKjQ36Q$f+(Sf?PGmb<9DP!OQk%iX@1D!LZ
%"%@9+4L8sRn\G]p$T@7V"Xh8*^XQG#Xpj/DX*h0T/3!KoK%%%AWn6Q4_XuYD2]WBl@Tpi:poK&-q;^U47#C1Yfo&i!)$1JA'@X?;
%ZOWi]A7X-.-L1OAOH9]7dMO23FIU?H-V^!eS-P+mZ9/s=nDo(4<#3g"J"Sr,$3@a,hijQNR.SDg7*Pb:%VJjIS,2WY&'bm[!J5IH
%^kc%8DoU@!c8Fk2(2SCt#hQILp),'G_c59_Mbi_C&-3M7c614jW\M)Z!]/:ZqNi`HYD8DO>Acp],`L8K!lo&CU+&]OTe@,q,5#^5
%ND-i.cQV\OfgOS_1nh==^$`>RJfG@Nid`;jDHQcn2mU(JlTk0D-rsrh=f8O85Z6'QN&O#%!)SC6`X?:P*Zk:>V;ePXnI?,a8$YLF
%$7p+%*SI""05o%#BX>\p"_NJ"EF+O13InZb\g3p^\/\/e?!Bj0e\$d@P$>;?/8g],'>(?iBLtfUH0o-q9/Al]1uEL/jb>lY2*W46
%L:,J.R*,Je<?%hCV+8ua'I@YR[1nQqNLZj;$l/S=p/P1V-NcQLq7#EnS>G%AX&u`_0I;CAf9?Ig!ohE\)%TP32!S$k6t9Xb@<Q]4
%`8O-sc&oMV+j'9j='O2-./IX;>&[pZ%PjV#@#WBr\#;ogoUp)RQ6$O$W"jU9NDe5+1a_"9PL6296X7<J!le!s./I+\U&,2/Xif3o
%l)krS\8cjBZ(ki6g`AE+k9-`q+ZgE&-Y4k;',:lmi3a3_R4_-TB*TF'aukH?A6!!+l(I=TAf6FRm;cUHSoaF(=7oCnY_RN4@7m@c
%O#/ZuP\^Bg]"Oi8aH;aFb#Ssc!VRsb`FJm-GLM%K(tmm]Knp*]Rs6dd';HsBr$\m059"V.fK@[@<ud8hF9BDaeQJeZ-fI8Ppj!rf
%Z$VQiYE&4oo(pZ!P:LoJ]'7<FkEUb+&@]!j9J9S:aE!$M4\.[^jp]7%#imnK,Md/2-%B,:koPI#:LfqTIu*oJOlm8>>pH<mm#=RZ
%mmp\k)jD0'OWb/?cMO$o]Ob`.P<=pOX:Y8V7sf;jE[sfe9iVKKgJ['&Z-qib!pkrOAaNXX=J%jO`aKZi/\SK3*J$$'47d`PK/aHC
%E+j8IRB[7S"uF:m256teR+niEC3S'M6*`0HpT+VV3Ii24_9)7&hRPeRF2kNC7!ZgM.ud$9?u"uX!sg]Xl:9p4<@rqkb/@%;lbMlA
%$E52T,`Ju_-bXd.@;Kg<IiDL^1*P6:EZj/qJ=8ee'eXZo"%*@>L&b_UE.l]#:#a()W2;,YppmS#0tm-O%D.g$8CZV\69BW(-k$ef
%BT,Md$JL3m7B"%j'IJ9h//+9\dW&/0/CF\qGAlW)VR;eXRDnbMp_Siu.5;Oorghf!ZYlEg_mT>eB8BAN8iIR?\bT=e<\/_M\"_L>
%P7)XX&I[/rlo38W;!De&V'&JPR$M)@R3DoB+InB$f+:7"7=FnXpASOKKa--(+,kA?+9o-Be8:I(OE@l]Y'$I@!$'A&o/]NY&GK.P
%n@G_I`NZDA?ensnEM<aNS$7G7m\aecArUTY'=h`"\Q<:LfDZ\jIEh&4lI')9@k!A(d5(p&A:$a-a'@'Tj[Y,pClPZXB<U8h<?;-C
%JIiFe\c!QMIm=`a_&p)g2f(jl6J21B$!;H0"Z@fRh_1SVQD)AXLbf;plH(][Vf\Vh8C$G!@2,Dl0LjZeIj^Yb?8nlH*698(b&'*V
%*(FETJPhtWSCqMZPG#de[6UBGFpO'eim9UjAY2-$.sjGZZGG-`%9p,)e_W$W@'#9_&GM).JRX2,PZ=8R`;R*"5`/m+DoWaWK$nUY
%_-+-Q`ou/j@G"82^\a2\fG%VSLNAToCXrX'XOG_K5RJ)n]OK%#9CS-g(Agc$8=$O9kH#To;7"6g4`=o,)RjL7H)j:W^KK1KdbP9_
%$t@.PEY%6-;McR/WL7r5O%cp=Vfd8L53&>c,Ei;iVs%f.$/\94Ul'SiR:SCuiiNI/is:KE:nn`-cUZQ././\FO11H6jJAR>g0=bC
%Z:`U\bOKfbS'!Hn7*K2Q*-]=</TDmT:'*5j-idU[(mMb4U..EJM9a1(g+<NUB%.D0r>s0R#$%>l2/!'<kc?QFn6T$RX\BXJ;Qk(!
%G#oFnW4TQQXfj9Xa>N1^"0Bk8K-j]gW^`k0U,"(^>NX&ANnT':XaqN+$OrC+N4GoZFh\em=K;u!\:BM%>QKa.;&A<+MP1miX0[<r
%S/N#<Yn=*V9Gbn>oY@r8Js:\@WlZ-sVAu`CHZ%D$2tBf@DL*G[FB4hbBUEJ^K@HId_."k0FebbH6r3;<,bidhN1N#1U'di20t#rt
%`L82[0p.*][@Cj9\A0H]$?'=q)Q4"-lpPtsYL\7?$`fGXc?`g=eHH!$L=_SGQPsbtK>6RORbQ]UClut;4D1Vu#?dCrl2ck%kC9^9
%*POhtVnr7W7s!IOZ,et2>;Fos6SF)_#0e@!YLp^@T!HI*Hk]1_2)jEmMe4,2U\3A40/c%_f;M(a]7&\IC3T]Ql%.)cD;EF^=C`m9
%E]$RCkG_X[M%TsQ,qlQSR86_GKa),RZ_F8%_?RF2QFt'+<`]UXh'RCXaKQ!SQ)8M8Do'pib>`X#[(._GaJ%\?4R=tNAXik8'&/21
%D^*XB`S0Z^;Y3Lt<YE`tdc]IRO5^"GMuQATV7b<37Q7RD=_iiL:L[@f#Kl\i/40m,`.ZEp2JUH_B*-nRX,:?8buePZ.7:l&Cn^/U
%5Dda+4"Z%Pil[cYjPMgd=N1uuD'F.-eSi^%<Sh:VD/5Qi"BeN(]5anZ92`\Qn$0HCCNGBd3l.t$oJNBrFeXGj1%=:4adD1F7]7`)
%NP,IMWZm!W?_cI:X*n)=9l3)oMUVGI2&lemO*OcSZ%9r$\bAsjZpKhcg'Yb^T\S>`G/?jJJb"-Iq[H.PU2uk+\'=_5lK!CY.9hGN
%DBe\A-PA*t2$bA1P/:g,f-^@!qnQtZ/prWI?a#"EhH.)ucaMP2Gl$=/l7GLdiNq2eO+)qUDTEB+EaYm&7>?m:d"'SoY1%4n]9_Fa
%4g8''>6V_"iOVgNTGI'5'-I\DOau`gjDtWsP%`#*#h7W_hDCWD1i*q1:\kNE@tnlr%CAq;2FZWIFqc+F(1.7[Co4;^3;C9N<nnXS
%Ja3<c:SVW[G^;DHrb1d4S&]7$>\h/$RaemT$;V3\B,M7'l7mO11riCNASPAfaSH!8V'OAU(rig[:P4A$Db4+L^m+Y10N+@&*<)"#
%QD:i1fM&u!hfXf.hU+d+6W3iV/pt,*#8H<4]3()sf1LLqJg[3"R:<!s@OSUNE;$]Xjc,N89+aPY?Jo0bHcoS@XDFhXWbH$nMi)#'
%\nPA\obj'K#lrd>-4I-"kqQd7=V6<j"+u%>dus@4S[$fO:e+K!=5>DA7p^tL38!4PFB>Es92!FS=r*YDP/7L5!LTpD8SBiZr=dAR
%i,E:KdK<n,q`<@'4Wd(7b3[SrP&E>6LP%gY[f]6):"H@a38GT`b`rb_C?s1!>;]o@J6C3^3EVU%<7YM>&G0^c-.7.O4/AtJ:`Sd@
%k73>FeW`aI7I3;I?2aC0rBl4V<*/u#(qf:B=BL/u+YT?>aiV#9o;%Bu9$Nh49;0YgJHu%[5u)rF$o0I"AehctN7]PqOS$VQ!G_fl
%qrFtZkF-K-Z^I&G/-ND[k_^!&f<jf`QCONT6,\,OF)%mN:5V&AkM77SG#^3`NB'\]P_8im*5!=4q1'J:)YO$JN>BpGTg0u1WI$lb
%m:0Et%PNinFQ6r+5nBCcQ59=MYf&pJEg^:3&%+-2L;epinptH';HIH@Yc]oG['^`to#>m.dl$sS]<>r')CpZ8>WR[JR)]h6:JSbK
%Y#/1I<0,k3-bb=%Y<8THA>:u3Sbg1KC#PMj;'m7:93AY>MZ[PK24I6.Fb[SGUrLKml[2SJK9raV>O9&*pth[U$\l&hO$eu%EF)Eq
%N>Pg^NMuTUQf'.Z@/`$V<?/*LJUFI>qVn1.QmQ8i\a16bKjS":%MtJLAa!gA?CKV=CVYYc!^=.I/_S+.PLi_[itkXh;(.6q1>t,l
%G:\a]nNlqUOmEge(:La[i^'?6EK1"VG8aTc,HJ*4kD_Y_FMTOl$J+:2>Br?iGZKn^f[*<D".>8#D*D+"$kM4)="PsS.BQP&=BN?_
%YG>NE8hC712Y&]`>_:J0cA#l;\on4UUn"pjZT@>e5V91@;#:=$,^;&\$<K,,oeB*p0#U\FF*En<3fK^Lg=KN:OBLQNQ68756K^\O
%&V,>qIMC`QBnX07=RhF;;Um&(0FDsF>Vpki38.L!_*2jn@SEeePs"fl)SVe4*\ki[8dhbPJN3pk6<[^e^qm%A`6M8K?o9*:,bmln
%,\>"^.o"P-069Y1N6mH`'hiZ3)TH8%+qnsP$=WbEUZZLK*9^4X5Ri$0>3FE_GJe#9%='t_q\S3</J>5K$!@X?jMcke3o=].cP[bq
%bc%KNaK6]NJq2,Zf)\O$qEiO.@"-D32sK=t#Hm6`PBt'?4`l17*TbINoq;bBi2g;Vm#R/-LBiQlVi/HfaPiiSdL#++3-97]\oc(U
%4HUX*h(B]=%Zc8Z%ZeXXbsXleCfhApFfn8O9GSKQ?F,qk$JAU%DZ]g:*CN5,3=1WYPrdcY%sREYrV`HHE9&tuH5N"(O[J$fd*&uX
%&KQ0nLOReXVsN&g47`%s3eiDrjIs>6aZ2NVAH0UYntFrhd7HQCkRTiV9?2^\,K8Wpj3g6TkYuVFr&J#s0.usRgVTdMV!9;0nOFh\
%($0C#Hm&L85$U/=+,1"1!sqIp#Mk)kpiajC'?m[Lb;M1h'V>?@2PK`ErgeDnB7@ZC&)u6t3:ooT]pMGFc]NQr_2gX#\dgm1,@Bl%
%j*0i9*r;(eSBjPup!BVMj8^8^bD0EsOoKjrW?:s.(CpL9VhO/P`J$\#nVQAsCiat6!h)Hh+2hGCP;ap`"6;G_K8C\+n'q.O*"me)
%[4V3n\qf\M]Q)\:=-#piXnNOR^HeKDq5>iAY[_%CW_%E:l5*;R*^Q2UFX04f6Q6#n]+p8+OeU,(o(JAT"YsH,)228M'Bs58#R`gr
%Y7u*CaurXW1V^c2;#GoE9uRicYI=U0X9jMZ_HsIn;eQA2Q?cp1[25u7n-No"JC"q78_H6]JDm<ReQ@4*0:d+0]gW"QL/Vms<2*!I
%6A!0J$4Id8hLsi/V)6XXkr.PV^uf49/JjHkLM)pje'69;87>0n9tCr=*/3AT`\TOp$G-80/[n&F-i(+Tk5E[T[*lAm4Il3Z?lDu5
%l#%bF1XaFG?4!CUd\,Am;giV8R*.Df3DP$@DM/c,h3du;SeVt#@N_Fddu%mHI'#D=AYhtsY$I5d@ESjr15HOTJ]'Q9`!4Z)8j<Jl
%E3cK&-B1kuAEAWgP&Arl-58ZnOAr97lYkg4OZUP1Kd8WVR)Mls5S9CTRM/!-6CbG<%1Bk9NL0\mmkQR0$H5fTF@\!?@bT#J:QJ>9
%nXl+I?-J,0ZEk)e@aqfs1p)ItBiaI&k:B;de$b+YM:mhQ(neNQOb!HmCm1aU@WkdPGXhu47OaWYV.(h=Xoo&UQ%!/k29&7"QVr`Q
%hhrM/!74?oO?JbUY\siNdqkN!<_`>+<P,TVeZP/]?SUM!hF(^fMcYRgmT^u^\qpJr)[Kd0=JNNaZn8M4.TK8EboBJdd2k?k2m'R%
%etQ<lJYj)a*2$i,`AK6SPT-YS@rNOYHrdk7[ej7A/rj)-)n,9DOEcWLi"%Uann]=hf^ZePHXV1`?HWiqrhCLn_JXC.lT*ar%X5;?
%mI,"h]X4^\DS\hioqd*8cj@5G/faa(RnaEt>=#!FPVa;bHRE*S<*>'fd5RUdU*3ZATPF.kX"c<V7AIR$S4PN#:k!DXOB7;LOhrAA
%Cjl_,XVfVr'sCBe'[c-o+&%mSo>6GJSt1Z.psPs&>To-YP"Q2/V,cf"4Zd!JN`O<?2>,r1I'cutY3M@^JE3Pt99q<3Jqt8W?d\!&
%!pZaJkT38L$>c6+7:^Pi3p`drGcl9a!Oh3-L.Lt1apr%g>`Ki16gsE`cT?4UeXaQtR)Fn$I?T==<^B0."8dKmKRB4TIf>*/]bf1k
%pdS.+m*L)(SrY\J$VE?@PX+"b3-C_PCCme?l3Xb9bEG<Lg?;*@=WCu&Y>2B$A>*M<JN$uqCcHYII9"i$\ouaB)Dn0u:ng<XS:tp\
%3e"l6QA)ck`]uA7<pc@k9g[F!39>gA5[*A%EA;4E<)Y1<8MCoN/V=,VR_1DLBF@1c7We;8MU,f<^O9-Oo2Mh3$5.jEWU`ag4?!]l
%g32<9!9Zph"H6?F;H8k70bFBl8/%m*LX&$7_IDR]C!q7E=/1?#,bA#HmtE2)''M*D/`YZ<@YGkg+b3rNTWBAq#fCuHr(n"D<0Uq`
%#WYM7N2%l*<VPU^!l[s'-ETF55>Ik'^r_'%5BK("4k4&7p6#N*kUdnPeX)fq@upT0\%ckl3'K,<*A/rd6k2sDLZb-7LS;VLe'SKf
%_HErnF.2&eiGOWeN$]oo^0pbW#kV@^.?[!I9KjngiBKL*"(B)[UXX8#(P_Rui4h*I%]@k9"M?EmO/M^1,&gu03*opO(8=I&f'sAs
%\/8OU3>2FoENCFR`crsf_8t0]6Ds=a8m=3>UucbKc3fr3GpSGd746&32%fBVSZ/9=9Vsp-qN+e[[X0r6o#*![4Bg>V#g,=nWrN?$
%Fff_.n1j]&[CR9%PV)FQbjEQM&a(au[^k-AYls+F`K[h6V5O0M0SZn&Iq!t\^"E4f0ab0brn*-m&GqsH2eZ/d(YMp=e7`i.8;`j?
%"6>mgS!Udf4_pETm$7%_C<:O<AML\(pA6RSZrl#KZ+>"_i:iY5=(dge/[[3L7[Wk+K<\V)da6aKEGI<@:dJW>F;rn66lV=S#GlIM
%qB$Mf)18F)bo5tJo,oX'rt](FcI:]hV`TO-9G9KA)X@D2$gcN4=/H11>@UMA;?+M$8,V:7*d2$2`;uef]OguW@L6f0[=g#a-0(jV
%,lGc]J8Sl"IDodP1:sqC+3(].q5p*s:7XK5A*1!2I;3!<TM[7Q61!Ju:c9-+AlM41>UJ9,&Z%",VQMO\$LkJ-nc7Rs&usNrE_TGK
%8qaOqQj"4$K9OpfUo@S(O:YVI"W=DdNXi)qX"?[WC9l27+PK<=PI+N=G0d>#:We=PI3>@`;?p6^qgk`HOaR)JGT*%jk%0nh#TR0p
%:<,5+UpK64Wf62:7S.7f6O6^m0/en.^43M:=o&nm=%3g8Ugs,q:-8gm3[Tg)&dn<KXR6RIM33r)-!0f8m*N%n*h?I9Y_fGt6FJed
%e-BOXM`mOLEU=X&$jEuZ>G-Lc=fI^Ki>lH.+o;I)>fgAC/r*=R!t3tY8HW=s(iu1(YDA4&9!I":<6A8f;istE48qEWOqZr+h*ao:
%;bK#3EiP7J<.3$g(IRVI4]n:In0$ecUa?*j^,kLR='i8nK(kJk#^DGJ(f_!@:]k%@d+>e8.6NH_4*a:t>b;0S8F`Z?aE_ppOrsMg
%LS"M(Z/AugG/!p5C?HHkg]h$a5ClQC!bfrl>KYt:9_q+0QC!&FJ%RgHC2tRpJD&o#fd0(f+,S6F>RWC92^c?T#**+$88.Z2>M/mc
%]3#]f2r8RfjWSh_dU25*Cn(rm?7^Z2iL-IiDTs7Z6Zi$,YFK8/J/mCqRt=#ad9a8E(]2If>saBcDlTXfd:h/V*:dhlG/_BncL3_S
%P=_X?N@sZ?mJC7l*O;0+?`_8pHWn#DhC?R'\PF9c0I:3eicZb:S3?o=op^9m\[a\kXSD5)NT0qZl0G:=E>Bj1`^qs(+$p1@WPs[M
%3p[-4.T#>^nd;F:p@H;paYIR<d;nu%q63H;Phf0^dl(XkcJ@!s;Hd6^UNu.Jqd5<qd%'9Y;<^3KE-qPbk'!:X`7i#[f7'b*c7;Y#
%r.j7<q2UrqPeT<[HDdM<B@HH<IFc]gEmnZ:#HHpF=?\7>i#V3i.L0L-_$T15K/11Wc%`1EE(;s/]T>-8lY:DWGLYYaZAr'q&*d0K
%?eD76k(u5r[bRl-5j#FR@omF;?p`JXYh(]Pb'g#P6r8c2E9onsR-)sPXOg'fb.2p0f$54@CT1u]iS!%UlV3mmD-h&)iA+7V(;!o:
%im-tZ2>XB"7k4/4=J3PbHFM60fc()=%do:*lk\\;9CkE7W7a&G_2pkjgqU*4,&Wl6A.rZ^4%oo\;N8]p>P^Gmq&"]:2_.H-K*Gq2
%<AIL@-ppp7DBFG;\r4j@@@_-f7L=Qk2F-2e-=::YXq-g!JVTp<'Ne:j"#tXMY:e.3.=nT*o9J+"^Lq!oXV!Eoe`>u^K\/tW$O,Vh
%\,me]"5`#">OSt]aTI)kLl-"<BS[-K.q=tmiQG0l72]RF>PAdPhO,C45up3-m-L58<AXe01mUN_(E^<_ZPWH&`MIDE<sZV)>7\u9
%gNc*uXhqH*PgajMm"qWCT#3u.8[NKj^'mc1j%]hkIaZ]MH1j4]`Zo/%fFBgUBfq"8F/Op!JA59Y>VoGs7b+Bq9)a]"Pa]XuQsXW@
%53:t.>u[N,Z\<6\_%#+T1I_c.,Nr*NPB^Irn&)fjT&RaocG?Z-R9,5!=biau4<%+4_tkKi]X,=(i>"%V6sE&Nep[OPk9@K79*&i]
%#aiB%4Z<faAJLTBH1k*YHNn\`9E1$7/Z23CH;cFC1K$bEio;9j=u>j%Q;?s_+0f@q&%I$PdZnI)qc?&WSG?_pTbqt+DqIBPkDuq&
%V1T!nOW3.>)o&&,mSaKJl?W0K55U_;B'Q1S";L.[a)O%$+BI;M![CQ#rGKFPkXb^l[n6Y@:pdG8,L$4dNQm%c$PiGWEHFkWi,'Y#
%ZPM0u]@'pA`R.%B-dBs56(s=2(KsEJ@+WAD_e+o-!jSiPU&uoHknB*s3m0Vs$X]nW!9hmC+unR-!'NUtR8CQaPZM`QmQ*0Sq10^/
%=K_eI[s?hP4CG#+#tc3j-fD.eA-EUW?RLgR\Jmg:'6P]<;1Al9T0-6D`+#R:W=Nb^TlYuHL;G\oS!7]p#]33CLK@Xe&1]AV3rqOF
%dHZ1*]5)uKpFVhROd6B0nh=r)<Z*cEPEaX(N+&!(h-=\,+a'!ag4l[#/>Gd/V(ALRYXO8jPm3D+\8Guh,7W!4a\-@7'[/RJ=,p]@
%LhrHfCklddB-t>!M$@^*dC:r.N+9qfX9p0&_R.Xk.tBFo[N19"iglRKL[@,$JPomWO35%BP1.ajkeoG-S9q`3=J$UCk')U.+ABDp
%<c/llRPP<VOO\MaA2[g#G`9&e"?'2X#aLF<n?72E#;p"DeAO[SFi0V5Hq@<<MqcLKm$=qu]:nrONnneee<?j#h+1,9\uMPZ/_Fc.
%kAnY[SqS^PW(#+/WBIUA#4l$oZ8]/^o'(:MmV3Q]96,m?B5`&J?q'YhV[Jd#!S8m:)/!G2DD(ZrG$dVkl.CC?#S18))iXY&d/L90
%dE03tl6i#\]l_7iN8jK$)G^iL;U[GmW?3Y#JJo?VnQM)-A$GMqY4Nu5ch)+OjVtY@5@RakI+GSD'P_fCU6EJebs\n'`YtP>W'SI>
%e]:q9dfuNr=1cMSf31a=YmR5S^93LnaicC_[,#?Td;ZRM9!0>(Xu]J,hQEX[m*mD/DJD"^.\<^O^T]d@Ls"JM)d8L$Nj8:i-aDW@
%:C+a?`=>G&$/.8G'e%hqNsBPoj)58Sm\iTR)b.iJ<$iU/91Ec#QjCJo7O+Qc%$W'P=u89=QM_pKfsIn/BaKcs*%XL:nR\u>iZc]A
%I2],%XL9LX<C:f`GM3eiJT#5*)DFRLhe?Wk-.P_ggD"@9IO6(mGWU<AlR/rVF6tI,qMo_r@%-d.g+APLW\UH]WfjrNZ0Kt,?:COj
%eO1JV2$G"W[1Q5f`(Z@pY;Y8[:[TJ>L0)]JX:6.kbjrGg>b0Z.rMhBB@d-ro16n?l"/C1uQ_^88UkE22bKQuaDEsLVJ[ruc[B+[H
%f9/!HJ#?K+W#C<MOirUr#52*(TR_ccIULjAp2&1'Ta\K:(pV?>Qc4ut\=Zi[MrE6dD7F[td]!ts3LZeN8#]/)G%_+^@<IDG$e4/Q
%B=4S7C/qof;rU55ILZ5a8oeOlk+[t_iF8=[/KR.ReO6ce^)cgJ&:81bK2WtbHb3<q?.GoY;TuU-OJmD[qA[BIDYW2ah)=Nj!^aK,
%r0nZ`gVd3F?<#a`AkYG8<u'GkAKO,:G?M@C:6NahJ.CfU@kgGA<^'m\B_UI(<0M'FS!g1o;kpI)?j<1DJu-e6pc\(dFEtBm%>-L.
%^5S_]Z&V\_FrkU=r6f>!?M:5-3`,bK]1["U?d@4q)^bB.Z?rYtE'E!!P3_f6#?;Pl'`;O&^g^N!48N,*ha]1jXU9M[`.eucT.W`'
%4h%aTb]KPl@9]\rOGLQ;OcsN<9;OQ#m@s6NZ^S[RKYiq<B@,0n?fpM]i&dZhPAXrLb4b>!_)]PR=[Y-79O`68]MVR$"0#EPTHZ#]
%*Tn.JhM]lacuhpME^K92jI?Je&=mWEF=@"6Q+$HuH%;:KAh1:QB:Dl:!d+`t=JduF1r[_MJqI^jcB*,"NU:9,n6t`&mHH8XM`\t;
%mQ"\4Sf$h)5P7TB%?=:KN=0ZRiCA=iO^8=)0=0*Hrk!6`"HU4M>[oD@V4F(`mD"``K:nS"pC^GQGAa<$&^l!n#^BotUO5dQRXfa-
%ciOrW3aL1QPlRa]"!=GT#]lE7IrNhNYl)cA6hp;q8RXp6+aQYjC"Rrn(.d^0g5-t/qm@+Z<<nW]bCJKCA-$PLWt&>0/R(?TBg=3s
%q,@a-2Mlg%4RKQ1%6@J#.S*ep[(GT%55UT`_jP2H3>YG**;`tXYGG9R#dhi2CoGS/!c$*S:;0YgcRV-HFDSdr!G_fl9j^KMjiuB>
%@`6'\QVgPF/c5Fu8'?3KDqUic9:s&X@<&U+kP`B?=Mo0U[2d;=Ge+pVaILuD6p[&Sj*![8C)I`JL:uT>YS9=[ik]39@Fl__-k8q*
%)ia&R=f4=/q(VFQ)@%KJbqMjEcscL1bctGH9hmR;Ur>;1<KbRcMpXrOcB!n>=tluJm+Kh>S]<dnpt[>:[W-</9FO;ppldUF#NgiY
%82!HRS?@PN`@>[L+e'7-;4CFmGj(XONV6f6Meh9jW4E7eUjZtn7d"`-'+57ZCrWAGA8RPt(qHrPcD7iJSQ#+DP5baA''9ALa[B+L
%_#r86@,ULF5D@4shU$.5"8J@&>i8WG\7egA$M6,8K%Rpj^0h=lMR(7Ag+*hn':/K&2Ne5&jid?%%'JG*Mp5"5<3n_BQ8Uad&?(ci
%5+hXm4Ns88AP>#D,auVHV90K>YUI_7\5n<c\:*-(/`UfG'Bd;)R>hlTI&'h[+ieEm1`(:.-"APt/GAA9F2bQQc_ob1gNWiQC,>!n
%+g-+RF//B3$oae7RhC2>qO7l[r9F[ToRER=N\H,7]CHM2V:C%dbV$sIGPfDae+.:j$NBbC1&2$>J,#EmI+^>XK>r-0^AQ8P'o&J@
%i]$h6$fJpq%3eTKfmeZiX#ncn0-OT'P`cLq%#@iq%B_rPD*V7NF=@3`[Vg;F$sT$HVW"DZEU-k;`4Pa>.#`G+Mp8:j_S*Jq-kj<d
%Z0#L0fXLi$-^@$b/!82dHMFuE@A#YS0/=3^<&q%(Rm!O@n&>d:FEca\8#<u_PriCI15sQK.m\0JJHA(k%A]R>/#L=N!4(je-n+lL
%VW,$;ksae3+M6q$_Hi(a[FAPu7u*]sYdbR.CH/$i(!DogmomTn4,RUQJNn%DGMm9(^'l4-jUgdmKnYMF(Cp_\p,?C.>@]TQbEOBI
%^W[g38jlts1O#sH("\jd2LLFSTnlnHU$iOZNaX_s\g\)>f:6$L6'^rhaGe9=]N-hPA7'^6kFb:H"&qgs=eHI.Cai9s"1Z`?*rhOJ
%,D"Xp?&X%]74;2JR35'4h"+$h/lS*gfdupTR\U`sMF'%@(+-ouW*Vu[4:]l*4Ab4.H/'U\OXWh4V!kB)ZPf<9Td$3C#.Y`o:p!M:
%-i4=FDBPNkpfNEVTe9tF-EejXJD=3L-iXM\m6!/r);OXcb7V_GM"i!D@%jZ1o%[\rDbR2&-)+O2O9->.$H:h-SS%b3dM<DtKC:0@
%0bF^;`MQ<uJaQEC81EX]qk,:>5AlEBP-#fqX=P@7'"bM(!'+/Aj_irT6qBt=Ss?\u\p3uYbp0R12sTCRpGMk_2cFfn^8t3f=qbJH
%3jQ:V$pD3>ZHcueD"8tuKZh#5lEcAN3FlS#<(4Wjof,Vjb3R?=7:+t\e5@*p^Msf$<^MS#.]aG`c="R^bhaUa9?@g_9JCYM7+7s>
%!A&P'n3iFKGf:\DQlnfeJWHpN36]rGq7C;P>"UZ*PAam5^!8sQ_F"DX[PEm2Bd=8qo-GG:8^uWDs+dCIM0pV+",n./6Z3P)neRU*
%YD>2Xlm)r5HECf1/=IL#a_O^Z8!2s)CNHaM]quDY1:T6-9Z4TkV\fn2-T\\^Skb6p\j`@5?a>f80BSUK^ol$?#Y%g<8d1t?hcb]/
%2L]GZk[9t,`2MG_!j9K,f7*NU7kLWM;@5dfQ'G<%Y!N_m4P>;+p]l+f3"?\D7s@Ih#LIo663?KmD1O[TDNq?Yc:a1=JbAL3k4.Ch
%:N%:<^3TM4qV(;q:p9oiZbQ:)pT(Y!S%#$`s8VERrqHBIa5,GJk4RbYpZ?5jp$KZa&,/k$^OCKWs7D5qrSs1Bl`8dLDr:K^FSl'X
%2g9H0miNY/IXRKahLE37mGk+"f3]V)qMVCi['BV'iWm5G]DMIq5<-21Cq*O#\9Nq\?PNFtf71;YH[;["EU\UjYreRp>MD^'o/h?k
%o^UNDqe,frjQ]f2hS/sQl?@GJDnc,:m6.Z'2D5!gl0e*8mFCm[0CSXb]RMuVK=5dhX5EsPk2GDsrUSEQm>A>ln[`'jls5)o,Oof,
%g'020leA>0p+^WJEU^l,06cB)h!U0Y4hc?_otRtKH#r`/e^qRGqJ+<0e+*<R0Gc?hAdir*Fu&":Y8E&c^\WH'Wq(1ss4#g#(q.$m
%r,:9X^K(87ch@AsGFoO8n%Sfbl8.n`$KOqSg&Fe7SY!UjX5\'2n,J*Ur#<BF3OSh5ZTNZjlm%15_hXlMU>C=UT5<Fkj2%q6q!%gd
%B?JUa7Mej%3:6@i=6F"_nF[OrK>I0PPsqSL'kYi$?$j#E?LD.tGO6I&m)sh#J,[/jMn%E5fc;5YM'hJ&1k80s1a&&oqu34__olA/
%q*h_Vs,0"q'JF[4s7s9M\d-FHHb"W;m2rQ@6L4EmmH1%H-k6-ar@*3inW.VW5Q'k$^Abkg*rk1brc[salok?[s*XkFmAIE8s48p,
%^AaV8hcKhl^ZK`YhS"Dcmh[Q1ehne'nVH\2JS/]\omX[5h!Y-TqTGN0`RWReGOPk%qu46$cThF:IWPD[INQM^WS`*t]Q6=;]AN$X
%IJESZqshqk_u@IHVn`0X]S+a`pt9$Pk3hGaJ,VZ]I.Qn-jIb%ko?Y1"H[GK#s*6irRIXK-48\pX"@K,9q"tZN'\>9^/Q2p<ebq9!
%6T23fL]sPXZhf1"`a?h73BN1][.YnG9\kQc2sQdWE;JJ?hDZO*oVP/0IjFJp.p?MJci5,IrU/M%:U=[QT?];<ds`jnD<4:T,D2us
%Z,VON^!MZ[XtB%s@/9Be!\]\]TVJ=ikPE&Ohq:m,;"dBO"5LWjFEdKAiGlRpp*c,&T3jqBPC8G/(L_5M>5RX+],treS'.T[/5F8>
%lTUa;3E0=3+/pPrUkgou*qpE5G5]3%Sf[U0K23N?G-UITbjK95LTB=h^Ree5ITB=M2VZp#.t[NKFBJ%a^]!f\+6Q->g\'JT(e.hD
%dmSZURnliS-T@Ou\2NF!?gT(;?7UO&meoqegY5La=u(l#F]a)bUCFa5qpXpfJ:/:0Wu\nT/$E,Y*`lS@o^H;`23q+_:UkBK/mT"c
%g&J^7qtBP%f(U[Rdk<5Ai-m+erPti5:ET#.rp&bIIQhF"%9<>Skf0fR:%4eTo'(V\EV=,HiPW"Z0<`@os83YYY-\ccGLBnJJ#Rfi
%p:g0Y]YD40HFGQHoB/=63T,Y]eLb8:*U!=*Q0&$nI/EVucTC,bfZ%;B+)"oin+a*_hqG..gU"pZB(iddo(T<(bu)Q->UK:;^)4XQ
%^V>3,qY'<Sq>H(io/S+hbj)$S=+Z^Hog3;V::pDTqo\j/FSg%6.d(WV0%h%3S<Q_QK<E=7++LqOpA9OC\XIP;p3Uj<_m3?Lh7WRB
%a,ePqc=t(\k1ef618d@p>-hJK0>Q-F?TG^C<W,7nn+WC;GsgD#Oo8ComI0bIV;L/or6t&N]#dri-.GcCQcHN1Ya'.!hX$$?gYE+f
%+7K0_fi[4k*Ob`9@m1M9)uK)B*d9R(?qn(lV1X@t@#%Hi0<Td&FSFgb\PTlO^e%1i"4pbW\l%aUnEIjI`iZZ=mHtY,.s5A$e!7Kp
%MjH4?RW!\+KCeK>oQb]OCkfjegE4b1]__$_lSlHAo$;$<^H(QAmloUc^V+sda1#t.&5)n+Hd=</Bki+UhsS5@GPc^a\^o&UTagG!
%\UAf#j43UIqVs5(>1!<Ih9t*Y\pAjP]s[?2:N'QH4[*-0^V?k0P@&_-If&`OHMdKnIRa#_=/YRaB^j]ir%iOrrn]Q`ZZ_sZ[\);&
%q)d=]ce<`SLRrEs-P*#2s7*ujgDKpc'q>^S/E1;$I;,Ci\C-u@ppf/ClgSi,SL5[I#Q=6hLH#)Bki>-VILO[u?9!dEPQ1IKmaJfF
%LQDK2p>`jorJ//fRKa`Zn^f^D3,7:;o0Nl_\bY"YA:=.BDgiG<eSfUqk5OTUpK,,Es2U1%s(-\2\)4lEqrZp&iVjLnXp&4ZYCEr=
%\,Ti@m7u,SO1.ogYOk($Y+@>u^[0AjFKER&-0Ei5?Q>DU5C;YKmUnWOSUBEMCO!BJ0%]KGf7sn*DkHG>mf'`RHs\Ki]_Np]\=L:h
%fDHD&5038&Dt<ndp&5D-^A=a_a1Irb5CM<kJ,Js<i7dS`qmSP=4kr8-mFUaKnGUnXr<pnDXg`YX4s#/ss7+S8X..k!+$SN[E.@PM
%a7nG6g@h0:pAXcf52i\0I=2&$X7:sn5/$b>3NMUafDZ2Nn43@Q-mq7UCO!diq+7(5k2[DOjCd(o\A.pN^\N<+h*0WaNJ7herLQCN
%nIP@imkHabb[4WMW9:@)>eRn#^UNpqc+?biDjRVu9q6%%mL?Fl`aSE6rL:!^GPB#Pa,eR8GPh*YLZc*i[i^(YB;g3Omr)QSr;S(S
%H1fF[O,s9`q.bBXG?FH#]j"f"JkNlU\A+"FN^*OsrVajfs*05ge7[Y1h:jmWp\0G.eN`I8o8!9&+$T90%a#;(T,rKns58sD5Mk5V
%e*Hn_#;>o<lb@`Cps8h]%eQt!qsNX%:ET$iI!tbW.h7P/$)W4"V0DD-aKI:)i-Oe>l_b8#h0o.hnaYF_G5YNUQgm4dq!c/Fji[IU
%gO2Y<rG:DpQi5tAYO3GRp*'E4hrP4tc:aM35\B9.V>IRoCj*rNE-1?nfqjJMra)5p1XEaA[?%q4(G6*Bo4righ-J8%ca<I*@!pfp
%?N?^(KkpCZ50W3"E8e_5&,TQ"LR2?@pCA@\HN!R9e+\oEiMhUYnADl1^3Y##o[AT9n%\nfj5^"i^\I3ppWF4U\9]5]pTIA^rdp&(
%Rm)<,\6,'@mr"b(I.t/?Bo2)'mb7F4hXfmgqaXrtcC.D>I=;,Y<fqlVoD7L.02>9QqL:_Yp[QMK\+cN0;Q''ZDr/5#J`Y&'q0DaA
%n"*j8Ke;NUmJF*dn>-rlEPh7Ua/'mGG2L_Pr9T,RYoKleqc3),5J6g9pVCG<$\/3:j3p6?mqJ+@I!g7Hmjat,jEGO7^@M6u4$<b^
%GVRg]IIhi#f^7Sm.r"VK_fp#_^:Sgn-.b>0k)9+jh]]'#\_Fm5s7#0+LM&9ui![5Js7Fj&qiohO^!C$Z%psS;O8"GWfju1H4S`q/
%m?bP4[njN;^3fc;2m*3es3'"Y/aYn=350e9>^Aa9l8)^K<h?)b%Muk1A'p2Jq8:7^2NQb1Iqer$Fk5E^n8a`i2=DSnhnOT,DUAh.
%A$F`Q4e0#Y0D7Y\i9o?_&NmYF^&Yp](C+XDd_9,H3;M:uf^V6t&5N5a7b8f'Tt>9A4u^UWMsu<_mq^`C4?U?b7B*3Xl/D'RSDe*5
%c19+33'E>k?[qq-'d#Wo`nfY_,6JG1^>;%<*'LppoJgs?[Fs0@LR3bSIaN@Xi(;DZ]&609s5EtEBDe>3T>(3ldMu<FB_fkZi/jIf
%fe9ja*KHILR&@ukG)"]0B@_CbA'VaFMf!o."QqR&mDh/(B-?-r/aD2Ap[I.<a4-%(^V0O)9<V)LllWsW5M7^dnYP"->P)R+0Ab>o
%k*PFD&kMirT(mU"Dng%t?Up[^`Vo17lR\fYF`D2$Dg_>VpM3M6KR`5P2..uLiK[J(`#_>^^@4CGf86$ul0"D:HJ7QMdtdfjJO<cc
%=Le"@:N,+Yrn,-3LL0M,!3s7dpu25A.KA_oGJDkFq=PWW+A]ND0>I=R`@\h'mi('Yp0r8:YPtrK%XrU74#k"C'uCTe/1g>GPH_ul
%"@gbV9@8jo1#g_B^\ZrfOGc@'&9?I=kS^1M0+@''X,"_5.D'ot+9<LQ$2id?S7h<RYF]W=_p,s-I<]T0^;HUps%L"GK*VG=8Ui%;
%jj3isDtX?!47/fuljLD7>o[=g?fE?W#OS]JLDB1i5JLU<1^KE%r8kbj?U.`>UA=gt2bDfmB1mj8k4Xl1:C?>i;eg/SL"NRSP7R<Y
%G'3DITQTt/YJMrqDB<<hg0a@@aQC-I).!,^b=Fr9ruMKYDfF`ThS4S?qbfsghOrW:T.H_dBb`'fM.=cEhrrs];EXdJci:^cs8Ad,
%Zj2\-D0/"]W1;-^5[^]$+^^+'<Q]SGDI6u=+i2Sr;p/49'\&q7R]k/CdPeJ*':29RYuo?k/6g:p/1=E-_s`6lEemFX*+14@ln&Mk
%C(\A78eV;!Hh;MZX0WEE7\P[Ms5g:D8sS7gZ&PeK*^.qU:!/2@Y@%<\ZR%G&LCR$;Nf'h^JSbf<;6Kjnrbo&l+0^=a0q`8pCEmR0
%(OD&im>ltD3Y[O%Q%Q$XJ<CY4jL\PT5O_Y,[_Lb8h;<Am_C!g:TZ)T)$0T(9%Q+Q"""L6Y2eI_]'u[?V7.2U1LPIg*o%&CJ+as6A
%2bi6-">S@(r*"o:)h-+\on>s?<b?:_0!jcrDnij;kOWU65@2Pb*;KSZj2J_9^VlC?&&3]IM19rcht8(&0E:jKDgoZJnb:p*5/#Ep
%>;gFCDZ:bn%b$De5<JOcat%M^ZMQ9cUuMT-^&%OXY5\-Elm"?;EMI!QS+%CE*@S="_KRKP0nI_Xb<DlprjO$1h1moRD3b')jpLDO
%0]$=*8S1aJQpr5JEMQ>`Z",:&^XH?B![]kiVEm4pk!eMS@g8cb13TDI:IN1_B;)90<WW:\.(-<,FMLh<ODL7+Q5F;g['gS,0;Dto
%`f,I^j/V?l[Y0M-r6=$10R&"t;6cB+3`>S$!B8Xm$cutNZ+Y$@0Vc%!S^$jUs0nX@="(B`!Mtd\-M_3(=AU.,FM0oA#i8j^8q-fB
%LeD7&Wld[\hlGIA^<TqLd4;.8.eoDjck\eABhk<B/c.l][O;8u3jns?H[bjgpQQ8?YlU#'-sch_kHZ4bnG;quoHP?*JUc:>r:7)g
%e)pB"5X1kLLN<[jjLL1G1g7j2M]#EEP'RJ4=c_^AU`U7WLd<^kKZac#[Er[//uo4@XNp_QEuCe2i5pO=F:Zd8Z#;3TjZCt&X)6Kp
%<i,it7bOsIG-p:pl"gA^?f_4^1Hq)Z"=F:(7+C(G/%9RbrQ-i:`(luo7=d9`OthG)._m3b$9@mg'ke1Kl+BQ2@`G;Hem?jE=.qB`
%qq"".l#j"6RR&OqFbR3*nB,/HrX!fIp.Oj(?5VU!i]2Q&m/N^M02DA%,O;\"*\<sgYR-\[HI3:iOkk!Nf93YSdJa]M:79AQ*C].j
%cq1oK#?Ic6AMO;s/e\PUIqYj"4mV7"Jo9,5*-eC;fQV,e[m_Z>s#$5]-pA[(-=U"C:jR-KFk-/[Ni]>iOfEX-<RufcO*CZJ4IWV:
%(KWqK\J9,Dp-2sD\/#R5h1s7J@8Y\7^LXg.4N.4;)@$4t)$>nKn:/;ZguNQ$,l?^1s*oJY4N#_KW?:Uc;rk]Ak!V7Ti?t4u1&?Sj
%:A,#0%YJWU_33G]fZU;IopS_Ln*7J"(&Y\mm<9gsFQ61N\>C0edfBt!/?OsUQI/=ohrUfc:?_SOp"m;_p@"h^W2OT,GJVXPBAH7o
%,D^('#A>0R!F]Y%Hb,QP]f<:7J7"(+5b&#U8H[kgroF*fD`/q.I_Dp=3/[/H#Tj6J5M1Si7&E3f#WA37pLs_-CWKUKO-@68XptFi
%\XJ5C(N_"7JiS%*rTigjf/8);$Da5<JE%N1[FfR"Pl#q,jnG#t8_:R$?LFG2TBecYY(COugOG^cn5K7smW@u?5kJVl!ti8-H6E9p
%)454_kFD2U4`<@bbJ&Pm?Ija47OUHcFPj&id4TLE<h"]OM?0ckbeRDns/_*Ih"EC;Z__2<_`&Q\oHr60$Hb(T]gQ^hr1TKf/%fE@
%hd1GCSikgFDJ13k6E5M:aCaA%DZL*HTE9Y:1hmZ3!8#S`Y&p<(\p!MV&^:!`i!])?#)25g:V,7e*5"4JB)<bkUWaP$;'Z&B+&Ha8
%>)E*[@EZ7=!@7[-hTLRD8Y0egam?PJT'H>->M5?k]$JY/N:Wj7LZj*!1Lme3<jI`a/B,e5!5e`[/Dq>O@#>N*lgD%B%tt6aL3![t
%Kt#J%IQc3>5E*uJQ6(1SM4UePCp'RKH^(H_g(/lS:tf"&E:8,=_7$-nY0N[/L!;(*Q#<Q[.id;F'o97-X]pLH-,rGETG[\#mR?LB
%*G`J7"WC#o63o^W##R0OZK>jH<%D3`#KYh`&lHBC/&VX,<B-gZg>=@QW80*Ub.2tlg.;*!S*IhNY<1fEp(,NREe&NPJu9MYrKD-t
%m?c^6^ARC^WI(0iC&a_#'Y[5gYL;g-<;Rl[+6;=#RlVBeTAQ`'>Z='-4`\$crAHHL[Ts1?TNZ.Z6\VT>YkZ-Nh+ZWNRa*R[0p]!K
%Y$nT^B,%lWr\0]kRmYnVCT!IqCeFgok2!A($K7FURa("XK$MBb-[a$K9H(nX60`iZ+5)&gE?OS]1i!,-65;O*lX26Ob4*(4W<H4r
%6!Ya(k^2umCj&9!5k:EC'T1EImS9gP\n1c-@2ntG)GTSG*?l8dT)6;nRo&/T"^)uOTFQF!rVs+r-9IA:>E[VToKW,J2?d2Lk@*[Z
%X%!^)\8$O:$:H^AJEU*Y&b#2cLrdtZUUsg<YSTZ<4Q*&_W10746'%U?U]@a-_i9X(@2RgQPup.:3JOte-m,Y[Sh^`BpBR"]Yu#*P
%!7c4@D_lDkj25`]>?TeY2rD[e[3@ih?8$C&EQ#l>fL$7$i`F)K,Ws#n<?S&9-)m8)N'].p8!cVG^p$C&'%s'o@i%Y2"Pn\3XgipQ
%LeFA]oHWb*Tm0*\;c_pP^4)Cllfh6,`4//9X!4o0APgB=H3E>/c>RX1$OD>qp6,/B`gOa<g\*Q^0L,noP<S.pY(c'lTIG4InDN9,
%O9q,Z3O.[rT<G.Lg&J6g@b/*n3"bs&J<G&@0"_%-o"eR.>@ZAYfhAH61M"e9I)%*FIc%nZ?F\7#rR3APE/.9@Z(CT6cMj&H5N?+j
%[f_*O9#@"HZ@pE/?<MQ/JZ,M2eJ1;ZMM`?7c*iHFZN.@PMt2+9N_<(8T(GL!E:Fhs:1E55Z@XI/.83;s:4<P]=J8ETXr5ZN0#Ap`
%1sT)?-Vhg,q4fECH%'su3d6]O/^[hY2U>W]g=Sh9Eu>+f!RX00*fQsbb*iL>-;X]p@"'nc%N'6`9)%eS3J<goAL$@)!Q)[ul;kL/
%C/?kb!E*oq48c]2?<\1'$ciqXMVgN<GjB*o3kt(R[rQ]9%oLMdfi-f!/1'9>brn0WENBl)8?PhN'ucq7RG%1I4R9MBHZk0,<pfZ"
%ZeL=Bn@BU@8a@fJ30q=g%*,X$l3J,Na\3t2O^]%U$D3a<V;peps7<l"ghDuGAuNS[[LantNpcUr.CC&Gm;K#DeuZ[;SIj7;2.6Ti
%qHQdbC!aXIQ0cDEoV"U,,d-)'/b57Le"VM&PYNrG.D[XWdG@6A7l@I4*pb.<T#>`*)-TmO6?h+S=SR==_C$'P?0i+U:ap_;(XLd,
%o'L)fKDi$TST8)]85%)B"V,)[1K"X#YQ[T5Bm2P2F;NS_MQ;lP"D3HUO+T5\8!"ZinVn]Uc^`W$+^Ph/3/^af7cm%AH`.Rb%&!/E
%lgil'bKI\j*f*BcL6m+ob7OglrOF:fY;joE1KTI8c9U@jXZ(u,2%BE5aaZ^]")po$jg7.Tb'F&Xih[scOI3S*_62D%.LC^i)QFea
%'KJFHgW<rT4sV-?@3UJG2>9p`G9R%[Ae2TF\[`AS$h-3eDTuS9pgDnmn?De_aR*6"nu?piP,*/c(Ns0Wi;rh.?B85"\__YN5DO#s
%\RAh.>FcIYJmiE*aUQ;cWs2-^`[VPB$j`j7`AYg+q@?Sf!O7Mn+g^H43>?lk:a/coe:n<#a)KE/pQU9]U,0feddlZ1j8B9m(H:9l
%FO<MP;]aX2KDI9QjhT@'Tpk*;O'B*#[f@-9IETL?C5&Ij-boGK-FtL,7c_LHUkiNnXHKhH@5`\V!SC,%$$7,NCte&.XBH8de]q%F
%HZJLM.qh7H=CVTq:l=gYY*k72q',*FBF+g1n1)+dXEBa/fWkYbdd:WCMFGo$h7[W"3$VQmaE#&O7A(YiUu*.+d2S3V>j(V^#B.>5
%?`")C,XF+5YcF/oT\tC5$(?RER,$S2Uo=9NUeUc/$(gR*/kf;TKCb4.0r?*jgt@Q?U3Wt0X,&3[Fq@2>.8d#cLA[k*-/Vfa/;[.k
%1.L\a9_'r=B]U4&1P*4s)4^o0,^<[:?5@7kN^3[S3LW?;P!K_;m%3HcdDY(33cN>(]%gUTRQXZD?lup3f/jPI/.l<jp5,$UaY3W@
%<+AAe$QX'..2l@%ZiR>4L4W*_Ymt#_YV,)t<7nXYJi64+9S2O2h,DC<>!f8)'IO^LF-eZnk-9Fpcl<18iM`Z4;R$`cq7_&E]Lb2Y
%$BNj?BB+?^17ks>s5OV"hL5Vm^*N'_NV/N\hq73qic%h2$GsVULUi;u'dF&1@Ka*l-j0]*/'>IQT%'i"P"O:s;G_WF]q(;LbED_W
%i7hkBgRt;/$AK[^jH=WUbV8/Pg02%3\QWIjhTgf!m>[Z:lSf?QlZ;FPUjHA/mA<5h2lcPb;<ACO7+(N6B5%?;,\'UmH8eDnI;Kk+
%8fEaT;IE@aRg9h"C(aR_LXSSZ2^\8S1P9BHA=MKdb/SjEh=pm6Ej%p'ckGC-hr;DK,4pLNG#/%@iB`?YmHcAke>V'4W>\m`nI',b
%+9^g7()DQIX=SECMH1(:4_F^rmJ7%!NhNXC/JLomVZ4d33B'=[51(hXXJpd'[2AQE`>T@O;<j0K$>L4RPT;M8KBdDuCHVP"Rb[`+
%l4tHm#R,hs]L_X7OE<^d-`eHCrFX#crp)t\_'B+NBC"aW"+:n06Lb>$q)\strmM7mhKmO1n*dusHDBO7q37EA:0?iV<J)m7[&=s*
%_ptH)M.2kqm5]^gM33X:rR+a&2s=d,NfB:K[`"3Q0aAOs`'+^:\8;W-Am2pW=X',P#"#l_OX:J]7?2@$6TQU#19pF#7YpWJ81VhW
%2TskJ*UZVtTjFKqjAp)\FEg!I^\FG$*EQkD6$;7M8J(/5AVcS+_6d?7L>`U'Gj+ucJD1b!:spb>>2XN2A+_W8oE16chG,'Ao3KTm
%k#9FY5_dT9'eaELC>&@;bJIjFZ-`rfa8Psb;`o9;LN`U3_4.Xf=31n\F0d5#nl=5'N57]aT9mfVY-d7u+7K\KKTT0bE6'ac.;Yrj
%:9:O_K33/Y:"n93!&4VY+goNjmK-b8bTHCR*F[f`/tsd<Pk=*&.Z6G&R5$QLMrp:O!`9#XaS(;dV."dtH]KKY'qkg"?p1\8m"(<<
%qEtiT91,`Z&fN8G6dOidN-5j@2'snU)VE0<o4>ASE%'-PjXlUX@D_H2E;"Mj8T3W?ZeP<4H4)[p\#(,9gT!2Nl=\LJqqg.7_19S_
%>bcDGKk!r]#ZNTc)qDSH+(;StHPnZn%"6]s2a(*;/1Ha:;N9'Dm&5PuVX)q0Hl_4Ok*Iei#sgfql%p[/=;"I\1/\fJqRY^UW8%d;
%;lTU14Ta8VoZ"'%n8@K'8;K->>&'j([Kts#.YI*Mm\([7[1d/kN]0lKTKu#2dA.Ssd:mKTnH+kL,fRt5K#PnKA_)_a-![-@_.Ll(
%eB0!Wg*?bT,F=&D\VQ>P:@9T%88i[6/.e/6H>;.-rQ?tq$Cck&GPVnkQR!FJ`4BTo&:Y_0?cJ-[r&ie741&"Q2q?7W[+UDS/H`u+
%TYBEI?778D'^O4<.U3$V+/[&S;UeX'&bYF_5rJL0p5rd<b*pE.ZK*;)]S,"OBmU=mOd0#cq!Km"RTF+P?l`,@WcUHgFGsJ]iLP(c
%lLJCK9-1oQ$+?DG5?%pn!)o^o;FQsN6B\+i)3pJ(YZ^H*>VOEm6'K9=]I+h$7n:F8\;47]9O^L@kb@j<!LY<e9_`-)M"Pjj*FDJm
%*C3<k``LMVeKpVqCr[I%DT:`7@,8EF/]fTc?0fr:Ce9h+#eTun?Y;]o@Gn=W018K<j6"P[d<Wj'46nUs&"uSf\Yl6Hbc_p9?&ds0
%VBH#.loRp$4,X^\,XTPmoJ0(P]g<e^kQ^[_^fk+,E2DWNYMp`pG,W`FD9A0HOYZ=[C(/5&Y*#6068A^:r/4'f-TVP#+pQc)3Plh'
%)bJCtf/NK<>eC1d0Ue"(qZkt5._?18!3dq.)B4PBiG&VLk2G!g)Isbi5h7ArSm9R;LW9ZT4hLi]k8rKtX1n%/Q!pVkf?=*]Du]5_
%rZ/FjXtEsh'1$f\0ZZcud%hqO]Pq;bUe=8[oW=0rPX3?WBo4^EQ!Plq!=p',_M;TOrK>"^M+N:4i!NGD!uXL&/<>M3*5)IkkGcK=
%RW_-@7A;8n.5][9WnPWXI*BQf6cIQP,B+[$DF-m/ndP4[TK175X&F\+SIOCe5baA_4m07(lqhJplXBKEp[CM?$r!DP5=:RmcI<dJ
%MQYc8;Y"PZgV^@%o,H,=m^I?1VLC92n(t,"+WKd5j*$.Zj0GAE3Xc3@*6<kn*IMZocbr?b+fhln2gL9ZK.MN2#T\1IU8/nd1Oh^M
%&pi7g>@aETA:`k0>`k^PrtomS636n\&Q)guFSVde>cN+9\9+$h?/=Lg+"uY$?KC-XPcIX87EI\R`_hSL@X;Vr1CCLV@]4%)?ToM<
%C!fQ-#E:f-ccaF9[H,/p]RVF,Z6^T"pjN1ZR*6*sj%K`5rq>pNH$LdlC6-YDO=>!g=_;003_IB9\@TVAOXQ5D76j[+LH`TfS$Kc0
%UiklVYRaGq49nP";\Ns"Wa=t&DtY_D<>m747oS^/p6RC?eRA(7ldWkSO=*MlK[;W?)k:Pb\AQR$/FIXe?Est&r"_B%$Au];UJ+j8
%Tu]t=a!e0+KVO`tadYh6MhOOcHEoPV"\N["3E`6Hba+T/RQVNee%u2-2'8pd+HmPBP4/9L`ak>l^]KAg\!qTnc+Db6%sW@1(8;jc
%;2]^C0aU\gKt:Vkq(c*$(-57r<$7AS">_0Z@TnO5/a+0!c=h99>&_8"p50G=Z0)`?ZNVRj8hs'3C3!';$PAh&RCoj@);`2P&M>Z.
%5eY<f/N@dJj-jFX+lt'VkT^#d`XU`Q6p36pPt4i`$;sUmA<o?t*h%^Opb2WEBH%nUm3qq?)stFp)]L>+B,VrR3l3.#fU0"er+(e1
%!F.n[#7OQ:9!fI3VE@^c40U:U/=YtIEUXHh<&eRP-O5%Xb"UtAH3W`5O&e_C(fgielhg[H0j3n8EH`kd%P_P%?B=mVK7gY*nrKq3
%^"P48e7\l!_%:'n?YZqJdfib+8a=h!EaiI$,i!.3":SbVg?uE@=g2<<DW);,,\=dr;TkN\-GKj1OJ^VDd8KRIM0)]7U)N5iQs.\u
%RZ@a$UX1FqMR4i%NeoV:9t129YbJf91QK-tT5*+Mlp,]P[ArLJe2a_Pq*Yq@RQUYh6>U>#Ws>u/jqNB=Rl.+-9r_l+n"HBPU;'+n
%&)C?0=u:>kV<B=\E=OeQ%qtKoOD_Ea(Z9PX<q(o#b!)<4]gD5qKeU:I5Z<%P/P<ia:-I6^5f8J)np#q>F>U<0K^dqhhtJa\j)ikP
%;jU_O7?VCDXIa2irnu_ZBD^^^aZeK4:PnH2#/7@aDi"Pm,^bPf2Ad;A@"tO/e</<3P](_Pd.+5@GQ]uNBLYAR<jQ<l:Be*Qnfm!W
%iU\tElnh1V5%>l#m`H2[oi.5jeYkNL.Uu0R)9eO53c_B!VTZ=3@6)WsNLI?B8=u2XEsp5'2e@PT\P18%[Pa8$"55^7VO(L"C^:M@
%ZRags2G:Oeq8^e#Tc/[Oal_t!JNP$#2<V+R)>)+9$bu.;)#M;,iT;6OL&Rt/r8Ffh/'cBq)sH)%?5d!DLK7[<)U]-")3(I;EI=3;
%F;CVPm2(`tJ'&,kVVf&O_Ma?e(1]31;48s7R/G69)csTu5+lnPTiZtMOqP)4VH!Xl;A:f[`1OR!OQ.Z5,fhE\pmXV[=%N2<*BmF?
%RV;RY#hfI1A4?LjS&>q&n.ka+d^e$h?9bp6i*@Vfp_,Qkm&I;cFa*VpEmM?Njf*8rgL+MhM'YH3I$ISa026ft"9&a!:hZP?6oOJa
%kQM^>XmYc@.L_:hq*=Hfbf-*A\dB[o-Yt%`bD/:!2#:fa`\*7u#+?J"p&6CDq7$J1P@4>3_!jeE)-N7D="4b9%JJ"38$_FOl3?^Q
%!borT[e:utMF&WK!8339g?C9iV[*tS*;8T(\)mU.9O%^hd@"Q0;f4"tA?lo)3j:_%A@SB4b<ZgKgSm(8+B5+$mSM%/N,H-[\"hE&
%=dLn"(Df6%o?=N/]9gM4_a5d2rNpu1T6k%F0K&K=O$>UKj73-44Q#6Y\YjJP<V)H;`$PMO1HB@cVbkiH;*02H#rFXjCdu3p*fc0`
%1$__)Sb`M!(7]l+!0@o$ZD9#nVm4MN;V!i=<j8I+@mq217,3qjF5UN)Zp0*&ksq+;Ysss)+$o=umdIu.?Ybn1BWiH0kED--NfK?e
%kMQON,=PTpNY7`^M5K`88PCD1F#RO:>Niq0=/UM7*Q__(6]]5bcACmBVM5G:=Bp=jEY5UBXhREe7"@ekP5U"2Ec5:Nc_>B%^6H6V
%5'k6hG%G]Y:(0nL#]bR%$$-b[MP,XLH83&KIH@tUXQNLZbAa*fbFfSO#sN:4%])1o:#F!QGpXq7)mL&Nl`l/5="kp)\YO)6D=cms
%<jZ0_6hB;Z*I*$cGI)NS&q*fL,uPE9$0P/@97"jY76hal[>GNCXlf==XCXcb,2gsOTk6cC!1U&K6s3ssAjS9-5B20rH(d3\'71?,
%<]!B=b'+g\HCR;hMsJ@CL^Z+4^[-:c&>`Ug$GmikpjN1ZPf0fq`)i)E[n<A9[@VKfF09i3+$J[,T:.jt.m)7=km`uQkS7AWR=`ok
%=XuJIXiuFQO8ImX,]c$-HDOt5>TT$q`qrHW^O<[s$6co15a^-@^'R?\K'JVS&>>_Z,Jb,DQ2n^C71X7SS7J4YrTGc?U2=n!LO0#.
%)Ls83;CKoF6;D6_lm_/_bol::ri;]c$'iR<SP!L5#G>`HgE@$bnIl/I1dmH\DH_)sDQKGV)$)#+c8J#EBc;R6/*:V,d)>;7*A7\,
%Vnn,B)j;51HBF\U!*Cq'OgY\0)8ETTdRn*,?Fog;Zj.E@/M6d^)k?ME<H%ub>>I?H=][cNGl'N$kk*VB]B@">968C*'95^@"'Vr6
%+I*OQ#Pg&54p@m3TmDrp0)SOf(aHSp<7qIXM.HEYKV/U[D]+ZqP(S*nZ+$u4>W/?B0FL14U-!<r#hMnC5U^/uhZVYCeCSp$7mY1J
%?\/hB0(3bGLP<h1$Tot>"/M_X@Enk97fD#Y-:a'@m!=hT;\/ecRPu#j/PBc:.lAFP;/T&c+04$sC&3iR<\GVuWllb*Ic%mo69(":
%jehh1f#p*lQ+MT1@KL:_k2KZfGRGe6KP3[5?pnr`fWd/FA:u(,XHYCtRH[-^6a<1MCZacreg5-Ua=gtC8#pIQZWe+F&_ek&YH3C8
%O8t$U-2Pbt"6QgYk""YWg.P.a7*rfO>C=fFlD:OqXJ29aX>[7N,-M7+LP2DAai"\lQ-eh/J]7.;j2e7)0nUAMg((0?-F?&*K\F`R
%b:oh^BK]9pZ0@eMa<'V=ds."I'kZtDm=)`t[5Y;^BCiIt]T]t>*gBMrqih']^?Yr)J3bXjmd[!Lh@)\"J/s4]aX++7)i/:6^5X@H
%-ZHc7OVY?q=UVG\14KF(aBa/JbY<dI"R(\X-ltu'CRsqj0#oFRdp.In&NgO9RfqsQ*q-[D,RJdVVe+_!(E6DF_ui?(":0"_eX9]a
%ZIKIT;d!f[3':2"/r+)V.))3&:TH=bO@F>YR#g?lO"U@EIpjBEV$aJo.K$r]Vff:FG0!inMLoPFQaIfk%Q,Hr@%a,4j*'-h<u_=p
%;SMT'VLUtPW"E0,If<,PULPRh70XWjoA"@bgD.J0`Z=l/FTJ6WX[8ZCYigfa7U;=473enK-D'&N%QDQXP,IoQ#4gLgX;(1enE%Va
%0l3VN6%92",rR\h*MX7t^EYE+C7rCZd`%%EBXs_i==DCNrsIB]5l@c7aCn>G#S'HG.M9>$FIjOuMG=DeF(n;`7N4_&iG\'i?#Q4Q
%$63u:Bqepn<>f5fm.1S(<jE'?3]DGC6?!=(\,Quh+d.5+FbiHL.FD99D'[>uP/[Pg2iK"<0NL&r809S-]#YN6@ua_"&OP5pNK!^m
%+P`/6\lN6:U8j?5'h(<b!5Z_VCsYCah9nG?9c2+iXYCco\lj'l5"L;Q^g[+WqcfM&r'MFB+\lES_/>N8B1E-.4<^,'2qLdu=%3T0
%o?>-%9*M.AG&+2ELFClu%KIaNQPm7Iq<;uYdoIr+PXAHH$/n^)TKmCA(pH"6ZhtmsMFSF_fBCLK1"-Ou;<a+P[gq)uoGH[)'U5n#
%e(EN0^P*3T_2ka;]\H5*]*(sThuO-G"<DWg00E@X&,3V\q#eJM?$L&Po2X_\J1BpiNN0h2a93uM.=ENLF&aEj:GDjUGdLII*(BH4
%:`AY=CH9Ho<LsH-?oS^-7Nn"k1B<2\((pGm&`EE!-Sl./J0.c?[,.@cQ/,p*ZY782g/HH<++sf;q+u7!2HEWah]u42,E2RI:nn)b
%p><<ng!O>S?lKmF>BP6>NDe3uDo=9q)AtLqd'?1RPgKe7>OitP`Ohaf2&Ot=m-#3FQos&W-gC.R-C_(\aD:oj@VtgME(J6OepZGj
%/rt5i@,MFt1su%5CJbQgQB:l;+2.J*IXLt@LHFi_$,>?g=(6/JGYm!hU(9_AMG;kG&>ge[bXoq<<a<L6#f<sG&+^m+hGKKg64u3n
%,L`\<WE+Rje:O#R#0281L'^cK$4EQ@3_raBb/h5D4C&t:Q`&WV;P23IBHIedItQ5uOM<,aGLqCMV'D$VHBYEe*>kdb'oDO0,Yic&
%R=lF8k*-g*3UqW=QotV/AD;&3+aT2&q7^c=VFK]KWBU#BNr=q`rPMo`=46tTF[ujtIatlF`HS`#Lr,]pY;cTbJKSJ:JKKHiB61&<
%2K.DY\9stY@r6PM#8jOEE6PHs'4pXf"&r1M<=FHhAtZ#6SLoN5cfF\uT#g7NT-hlI.>fqd0#t[TKN1%M552*>I&KlilrS1V7GEnX
%1/DZUnd+biQ*hWdVG"a&dW(Gc@U-ZaJ&5-c6uIWP7-\YsZhf/tH.\%LH05o+LS@oS%*m?gfKdTLn_CKg-+ZHH'dY2g9aF=&n4H*'
%F(Q#1.+R<3;hs,LiZ^ui`=./sRSn@2\6'E6Vu&of%ck4dM$_Tc#c+PH@\WN)IC"("Et0ue.U#W**Htfbg&9aE=$`T9C:<a[bm\:\
%>+07n6K,[rIqo]t5UZjuACS.KJ63/l+jn1h7.bdAE<]/$@Br*3^YB\hZ<?+tO?oF521_g$9VbA`]6ug[H1Ih)mL!f!!\(D;4gFMR
%re5&=aF)(@WK(:6aE[9%-dghmH<7T5`fJCTT'r["^k'dm(KJGhd,7>j(EF>$k^,14dZ<<p_A`"om3nH;`Kg-I;531F@S(KEpp;oj
%c^?_2Zat0+9(,+oP:&p?=6?dGqQ@cH!=.1V4hK..%#Q&SHCN41/O#[DCo[6q83`Xg1Nm@5@i>hG15D7'Jo0/UhH98&JU+n\NbsAo
%1,5lD1%(l'ni1.cl;TX<D0N"cA;4D)oO1cdC)!5`G?/:;=P('nF`2_A2t-'F;.Maqh[U2^F/b(1XcJRMZ[#G%UJObUHn1EJg'GBI
%4tggNg`$H\j*>$ch2&GFVS:/V:?g[/D;rX"URI)`Aimgl3RWTH2q47JM1*irjQ;R)3jPV'&:Qu%<%i1[o.2(Dm5eMQ!TO=-=Zg-$
%)"9[4MH3=.%TG8iqOrH!(gq*9TB8*uPmJDISC^NT!T4FLin-=9E71CgZ.9pnF$L>B]C,aTF;3HRla_cO=,G-'AXZ*rQ7[eeT3:o:
%pUW[0Fuinq_1,O/V&,m#;>bPnIi13&`K-qdgPrO+_Goo#P46#Z&jS#Q_(nA8+b$,\5(!dWZK</NS7?Vc;VrfjA;;M]SAeEtQaH<A
%EOr6Y.b1K%b1T=0$T$tS:!BU5pTrcX,At:HdW0JcpMa/.dR;/gpIX9r:_f-l/shTM"$GU(*9P.6EV"/:aIXTk6RNqL>hu53cA'h*
%$RtIjOV(cD'50tBX-,e!$;"it5L-%\JM2^V?S?N#gTB.adYep&-\/2jieU!)]U%O\UckWFe$\sQCSsUs^2%T=n6*a">A*5F<2K;+
%r65q*02ZY!hL$\83[&ciLHV8jUb*[53"j*J,:D%-@@2<a0KRprP!Xs\d.d]nNjJX0kObGE`L^t?3j^$g?_qK%IA#c^[NBQ-?aO2`
%3]g'SW;rk9V1;Zfi:fFKI'^VYrj"l'6\BqAm>R4RlESU-%*JAtmVi5;8OkFQUk*jm,`c)ngrB?Jp,AXEg+<;/aNb->Hp'&7YW.:+
%1l&+cYCMSY@"$3HcD]e/&PS62iAKY)U@J`Pg#0tOL+t>/+'K,FN[PRL4kcst"[93\qu2;;m?h3aeUUc.:N-uoG2!B-(JeB+AG@)]
%r]Y57NM"#p4P<bZPq1KYb4O'A!o=&/A+[tY3uo^s*m,#47?uEQSCilpEem($C%<[Q8.#I<d*d=u2$mMn7FdLCmNK2>>jP*dc<L\p
%nV3rtXSQ%>.<7_m:us5d1mn[-W.E@oq@4V>!b7N40b@bVnKL#`8C3`e8Y-pm80X_3hgdF"=NG6KSS]%Yk\]@(dn^>$\eA12WD7]k
%PgTI4oNG_"0d2h(PD47U\XrF!HbI4]8O1A8;7*sXIWt,7DVj'mjp$;6rcZ@Q+mft%E9j!@Pi-)ZEHo9)Fj([75#$0i9n&tAI3*H5
%C2-:sS<oW4YS+##S`M/Cj`R_a!.I4diS."J]F7i/iX2u8->_C2Yjr4,c?cY\'Pt=m]6e+b#Y]oR30:k^W1ak3%#?Cb#Jot)dFo&L
%)$$@'aRe-$9!NYm[a3bK98-)"!/@R)aIH53P\tD-CnMi(_O?aLE9P]k%C,o*cL-V4LD`1rM/[MLh7qESbFVr6IK.GhGM]C>Gk6,Z
%=F)?@-0p7YIiUK*`Xa^]4l903`DL$(OK'2@'$&j6I70C/?mPU"(ZYi3d5jGF<fTR5N>VlABQU-(kn1C(]**-^,3HC_3ZB=[/t8!Y
%C(.-PJWQ9:.D<9nc#)<L>WRU%^ll9Q$Pbl=c>R\ma_<.PT0qNm?<u'<B7CpY?;c]T.;4?q7?'I/C+S(Q!3!PNF9[YlGu0LfQ;:oU
%&@el0pChEP4&sYqd2=J8=9CZ+;I&,o*UVGE6]J$<6(,-K&`qZn6YA)+%7o.J%i:kmic56IY"eGhV0`J"lu`M>VGZkuoO>,@QKU!`
%ju`CdcJ\(1p-%=mHUV_)Wm[d)N1%T0B&1fS3tjK3eVdL]]jMVjN8RrFk#&2J[%g\6Q7#/K^lNE.6j*%=eg<el2ik9H#RiZr)!Qu5
%KctDM?5?0\=$E5iJ^(NAoe;DHc[sN+hd].*5Ao9)^#IS+Wn#1l--/XR<-ZH5g]!Kd0U>OLHa(uBc?_-f0pQQ&!;L&c.qehpT)gN%
%+k.Dk;j*Ksp?2d2#lniC"Rd(j56)#(RX.M4)62nL3LJ9R!da=e!'O17<Rd*XW9Jq7WtqPpr4[C&gu/u928p4pqup*\I#+&KGNd_?
%2]oY\X?X?)F`7(i"+XhsLVeq>p)s87n9'cln#QVI4UNo:,13C:4:R(cq`cAGV)c>DK&40Kl%-Ga^(*V9=X!G&BtaV/H&<bMS\?,@
%-VfOc4:6-T!!Fq>1$g(-""`6e?Y;#D;$L_VB0\..FlPEdH"92b&Q95t%p<GiZb_]=4N#*-ek%oPq.+Z5TU)05-p]^bYC7s?k0g^1
%hmU;]!"1qe%fn,_X9AM'eTDJWE;8!p@0Ud*U8sr&5p+98DZl%9FO5cmgl\Voe=e0Rd.DTHf1rt0:A7d.g*rqPnia8CqsII((c!-K
%cto.Wd]CV>g&2el-iE,%2kTN!Y;H,qb<.#Xf3A#rS)4najRSd.VNXX_,9l`sL`O<"fPF(+5QE&C=&F)t.B6VmMU`\[JA^U[?t!e;
%/,W@[?0Jn.8gPK):2UW&;3h52=Oe01?u2@/1m(WhRLnGfIHk&Z:0.\Q_nq?r]`(3.kr/l(@_ZU<_Lm1;2]<1:".gTEQp==j@2f4>
%JOrLu)9B9#`HHF5%TR:O9g+^A!Y-=bUEZUf>ukG-k`YC]QNUuf;nH*KpjZ3krc#'rPN'=Gb<QWc<#FJu\c>90KRu6ueL8<,7FqRB
%Wd#&IB3S`c=4E\s@F+8$,uOoF^VD*)M;h_cQh,/u5e@Bo(6\ihmJ!I`;Pg`W5tt7+W4k\AXU<V0]aL"$4&pBZ;"ihl,#mae%6drI
%)SFR]A[851L8?\gq+Z/MSCo#g4=%jJB0Q=#rdpKA&K<H_pk&5:T6H(ZXoSFu[6.Fi$5[%MP,ZG,C:(WWn>A2\+>(gg6%"WNK$Z-g
%N_VlTi/:Rn#Y;klX9+2>7WO(/"c=cf*SZCS01!b2QU)K0;$fDJ/37Vja_P?K#llZt<Q3pd+tRbg<eM3I'q*mq8=_BA1%O<Wn*s]g
%n5oYt^kU'?MDB\XAc%C"3H0D`e?[gs5DQ`.'?hU7nsL.h!qdrgjFg8_B;nEBO3sI%#\Xn$3WmDa5$&!C]26Rl4nhdr!:Zi`Ysn:t
%,/c$_p*\F>hn:WP,W/o+.+Y>`kaij:>hDW3j?J(bjqIaQah40Q;$[fr-TO8W9:'$#\/g\_BS=ou$5'QHX?!`MUi<EtK]K?f3(4(s
%BL0F:PV*mJr/@t.OjRo8(S^nn/eg7m'!0A:VG<o+('RS1On&7j])J]E7Do[=MGqqL3hra&Hn:>F!kJI8iRu4R2'?X&GjmR[=(4i'
%"!G_hNthKn>YJsr+dOI][ETCNbh;T4e+PPJr0S@7+rag9XM@HHQ,e<2]I>fhaX^="0&!M^YINkDDdVnXU1s>7PInFJ<-CQ3M5Yc.
%2(5gH\tV<Qd?h2l:Fj^8m!9]7?9IA>=("L:+io;dO97b(!N$cnNU`DVS-X*oLO"fXA"XD7,"6rFP79?!-pYS8n]t%i4M&AP-:qa7
%p.M1UFcj,nl5&hhBSKt$f<J#u4Abb-ZqBKhV,;c);G.@<Qf-ILYsm&?N</rVFeo+.7u7+/2KGD<^p+*P(Vl(VGu#!Fa\c#gULck(
%=b957o70jl7.5"f4q.(]dq,V_OaXN[%cEb?htO;_BiH8klrtm.I"?V&_rd_Srg]0:jkJ,Va&cZ?n!3c2-3:`22V4I5l'PT(+Sk>,
%E\(a[0G=pPTJW'3I66t_;a40pGAVIH>GC;1;?bu'g$Q$+'dac6.Ch_=f2!Z'3KfQ+(nsH/@bNY4A@N1XcSAe]:Q)C;HM*E,41nXL
%$1@'$Zs,,G/.AbDMY'HB[BaD]>V)C0[b$G9q$+sug8_uBYn^6IBoc$)@3H;$*6oa(-XL=i/:GfX?@uB3AY9Ge!D\\g`qADF.;CZX
%H7NpUmb"&>\gfDY`<En!QVKo5-o[K1ogfYh^40ijmPP_<(g[9,Y(uD*g)m]cOR;\SnW86B*ppsrGn<*e4E;L+#RmN^Pn::<9ND36
%$m\8ZaLO!;h4\AQ=fOiSgW0M!Rn)NZVeNANN?L=a.+'-3:kDT6o>%K?A-l8)Cs,39:K.%=CtS$,$4=k"2@N.u8&T6MB.t\CKID^_
%(\FIH*Ro>#[s5rM&gef-Kl;14&3E:joDt68A?pc=3`.TIVPgLG(78NfC6`pSb,M2peKA*LA+3s5]W%4AJ>P8:a3Vnn4gFMRre6bG
%@Dpc(ODag]kY>FOQ+JNL'66j[Z[2-XhEt\/-oS$ESo^$1YqR1"ik,Es>uPU([_PruS.,V\<r6%p!tr_=MCAa]-#S-'#"PS"$='Fk
%6J3[SK9>[0,f6pA/It2C075U4<Z2T&V,+:4n3NZr(%FMSJV3[GJ;5e7,/KDm:R..9&Htl8k#=;hZO#p"[:tt_fZ`?3S/oid#6sgo
%O<>L1?e`qNV^F\IlZ]q775+21E3[":]Im>'S8Va%cfS/Sr_@V^St&etW,21.%gpNkGZfK2MiMZP_0RPHH'RFm<."":7kU4Q0WTM1
%4GC@^S2R[25i'qQ5efSI73)Hs`UEt!;UU;4SH@uJ&*SpYAo8M4&07N:au_sCL*iMLhgL:&oNppgEN#ld8^Y'$FbVeb+#Pj0bVb6P
%cf1CW`6:KF$u'ud/.84WK<q9$)ft+;&bLbe(!1FM^3aJRpY@>u[1fhTnPL.ZIntjbCp2V121\pt+`tcM`*d7V*?Nll4Z^2ZBoH5'
%KP2AaJeCi9qm7\0VSIIuRW6n`q"s`)7f\P0[S<iC\j1@3lpU6Y82#G;<hC3![NLPYIXTMQ;"g:H'!b0pq&SmBW-TBBKe?Bn2Fm"j
%5/th3<'c'OHG`kA?sAsP"sqi0G)luZ,u?#Jec:T2?;HhNAL88m.B(qET/)<49nci=`E+._$bai.]rlk:\sTLjW1@]lYkX]6;cfIM
%RijL_l4-[M'\(r-Uj?WjLKF*M`00\HhEqF#*CmHB5Q]&3(*VETM;9mqm^;(`%d$K@&@);@Po]hO`mcr-_-'ai8GII>A<N_g-1)!s
%,]L6h.Qf!#P\<W=M+1?[jWK)l])KaP>M<;+Ltr;jCBCL/SetnmIdoWkgR^hb7>Ejb/jMYa$BD#L42>qA\f_Lc&Iae<fF\.d$qt]V
%:G<?b]IBP)T=.cZ@0c;[NL>UKrk[lrSdLG0["1Zl=Q*/OL^?94#HN"`Fon(M.%[\^?*gW[$E!C^J2I7`84OWH,Ofr=5<*ob$3)c'
%Le&_:SR=b&(^+Rrp$*9ue6O;t5>^`W8K5Cle-Ds9ioY`*.jn5;@"/h<#YZjZoluVp%C-Xq]<h5)MaZ$($d"#uI6&c`1#4]doTlGf
%beA&:D7#!`h/q62M;:TA+)lTt(5Vsp-qK7VK=oD7mDF9g%a$f9^3H=#k'Hi&G17XHp*8F)p`B),=[8SblG!5VImV/`!I?,u6G=Za
%]@+do(W=uWD&?ZE!t]IdTeWmI0aW(H,<<"9N!DZ.AJT#TJl,9GNL*QSGuU_']CRr&F5STM:Fu@VG>W5XRf4H*7[MP]"EXcr`;01\
%K=;rjO0;mdE6C?iZBmZJHB[5#"V_D(1&2HM*<QAfoABp)&;SAM>r9$TlS1Z=i&G$k@f6hZ,8m[eXBo>o%`iDW8oheM%/>oa"fPBL
%?Z\Yt_9('69C-0Pql)nV<i,Q8"6]Mc\j!\HQ"9bK8t9csI"-bk*se9HcN8@HKk/pQhR?&oOLENZQ7"`D]CQ>P%q-O'UB1^7"kI3L
%gp#Y&>:OA_8K-/^LC0GR,i9-9qn@F54Hi*fo^0]B8614'EW0Y/gm)LH%U!rM]m;=@B[;!KJ7ioW_=h;S0p*\hC-pYZD`+(4d7XYD
%GYtYB2J6SmM1$,nef\5k%8s>JahpXW3NjpF%uo<YOf8h+4+P0]opO6tcmo?ok9tu@"Mpq/5(0`N`HDVRIs$g5eKYR3MqLnm_:,^!
%+Zf%0&PNh]!S@!p7gJ,JolL!<SlhA]L\&B](\)nQUmlaE4lYY.jf*"56"iP-;BV,K@:7uq';71I3LWH5=P40GAAH5&RV3e*k;M7i
%FXM]/r-s7HJq8)GRVJEB7NrEVo/88QiYslK;i4TkVlRiAKVW>E][^SSb-/a(-0RBW8\/q.8mgE4Xt1L4H/IE?ldH_ebeYOcaSP.N
%R"`Zo0NpJ\(9hTpFIa8N+QUZG6j[oYEHNCK,`QWG9ZT[?i+8S`C2!&"):=m.OI8A)n($LMJT6_V@g*\cr3F:,p[GKWqj59qjHZ^p
%iJ1a6J@]DAS&cuT#7#02i1D6H[dB9j9#n@i.mRS[HAB\3E9j_eMbB=VCnX^h8tc?-h##6_GE>'rHB`fQ$0MfliH.spKg[(tK"XOg
%_]`Lp0P$UTc.:;:X8eWK+.PEKg2u-O:lZi:?:)2a(e57*(b^j3kZ@NR?k+amk-Ul9dib/Bk%eQ3+j>MR61'RaRra&)@7KT&&Ib*G
%Z3.Mq"$Mgl^'D@?Ms<A)/!j.2=fi*"]L9aV>%O8[5e,FVCY@e=,,Xhe=1gginnS'HC].BmcH^WSGM@$Ah$%5u]NciSN+"CUmF==_
%IuLI0BVg\S-<#&g!OuCfpRn$)ChILJ;t\RnZde[q\p4bm`i_:Uc<(BfNYF(DQB"M+T"68+!>U5D"u2;=\f08AYAWlZ*XsjN;[U+3
%Ft3On</'lF0Gm'@NNVLObUE!#*(hMVA_b("92=^C4pX1ZGtfK!X2M3*=:"db9Y$OLTM`gi3=n6*U9IYMm#nP"UNAqB7Y-u\d!"MZ
%`Fi5#hnLoWR-mSH\,)97^7KN"_s[N&rBYr&S:?,qg?F(>TkGD['po:KYfGZqc3?hT;]PA1V=P9s4_eH\'MSj)!`00sM@okf9hh=o
%&:6L*e-9MN=!>Cek"PbCgW4?]3gn"K_9&%QKcRJ$IsHN*5X?#J:bQMG^rj[^#'6IPdC8H%!6Tqu)ZjM$5dH8<70RdW0>uj^mXf0t
%7W3+([uhSchHe-/6j4Oaj/7;b6KFgA-]/J%LY1O]M$!-d[_6Z_Z<2IJ/J2?sM!,a,(4C&8"+7Ja4+oGCh]Gsi\mC[)n@&$67.*m)
%F`,N0O$!6V^AY![FB7ek`q]hs7sOdFK*0ck=,jGX#@eJTI`CLG8H(&G#M;Qb*k`r_Q&"i)=D0jO<a8eE)]b;RPQ_I-&WYN+"l\^U
%NJPL';6T6nMV`V=$#k1&jU7D-Lr[T2.V]#N!NEX+ioYEp=Q&!pqH10B<R:jsK66sJs(N/aZnP;efetC#][HAV:oD77O(eZHC)>R3
%BK\p=/&,Yq6tS:V$5Y(#WT9:(<-7ZGJ@q=CmMZR8F-r3VE[U2C<T!PRMYN/Ur[5[0?K>T2+sZ.$*e/.uk2ZD#I&u?t\Z>TM:rTp*
%!Xfju6#j+h@oH?$h(6rH1bk^C/i9K'UTb/>75k)kfpFN,UH:hq9[#+Rh=8JsZs/L-JfoT29c(,OU'*+r#J8,qCgo;kb?b=9U;X'f
%c"^2^p+C:R5p%VP]E4oHJ/:E'o>he,<V](iD^0V,9O1>@3-5jZZ,[3N$F?q2l<;!JTfdl&=9Y]BZ4R:X\koVViI$VkrHK4-O#'$p
%^W=Gf8_;)a%UJAe$iS`uX?/(G:MQokF^@.E.0dfo!@E<te4=XA$fXp&bNFT%QG('L>;p/L73jo'7d<<KA4[b1=F>gbhMuqHqI#:(
%\us`0!n:U7Q3g(Ol'j0G@kO"dk/(#dH8rCn)5XZd]^'"Fe1b>&Yfqqu2#?BW)m?,2W3M1Xeh/osYL,i"$#5cdN5MM8X5^99TZ.pS
%dkZ8@:aAL('fb!j@uS\&h[X>=K"Ameg9XbRaOT@.4\?KO)A(J6@rnlG=o!LGb1'5;YoQJb:$n/dG1O"FrhMc.c9L1%3nl8K,VH0E
%(IS=0i'LeDVl\n>!M?ERFGZ[S=YS/^=K%+o_E9AI$n492._Ca$'!(L#kkO!/ZKYhdOXT;3i`]8n-Bl(M@PPf<_;H`BWOn],n3)OQ
%QGfEOh[][D=DB3q147*W4HZ1CP@q54M:)Me-ZPZEZ]T(MTrsP(E>'puFc1$'o/qVkSO`3e_dW/ZUTnoLCa'`F>Olq=*e?R2.Gtl1
%Hr:c%/$SJE!L&V(c.2-%\M.?VeeN,Gc#r>Uf,9<e/kjaI!>eCrY6pl]3Vub+1G8Z[YFk:0i)b?2@@m4r<37!4k(gGGp4%Dq4Tu3Z
%Up*i7LY=U$C0ZJ,T$flnXfAm6$B),J,"@'bdc.2.D.^B`MZ#o-X%Ztap8BBYM:T"eR/s6"Se"O]-'!)ENB=X(RO/A\'ce^U=0-(h
%*<*4O5$$4]`e<"+*GRfe!8V?:!SFaI6[/A7"o<`l*tbuMX#.G_1fcmb!M?+"TPWitok6@<*RoA[lhRC!+r8B1c.dV@np\#P/"VK.
%3NjZf&2F-n)YeYA#1QOMUT<!S(\Q\akt!,#"G[X22)2SGU:4sW\@fR<O"V^=>5(3E:U1%GLb//=Qn;-l*i53G/V8!oXPEn-jW$V]
%.au*-A&%L9p7k+e-B'gh%^ORp$k*R"@&&m4N)is(CD.J]EacKZ2l0S%6p8NOfd)e-FQ\LsRj@>/$C#4t!NgB=>+02EYA`nDV6Ti=
%:jf<B&Kn\@FaC*13nDXM(EChA[d6BiJ6tTG>4m2!+9R;<$-^g-$nkT9TYuR%1rS'\^(%Ypr`+Vt1V>:qP6RH!YG[hO18\5IiO35F
%8$POK/s*!HNt^mUhHi'>,qI,S.bNL`.f0stoO`Z[X$^n,cJ3um$iEqQ'5uV9NS\sh5>n31fM$LRa=SE`_N0nL4R[,<Tk`0a62;[8
%jPYA6Y!1>h=$EX]Xc$^\W'^+YHh?H'`TA1MBb$u7f_jid>i-/eMuaPl.Bdcb&l6-&m@m9)D.9&YnVu'gOCB6Dc*:e3Dt'T9h#I#$
%D",qbIpgM/8NI_DFY3sg^B9e8/G>d2ZU9e;TruoiMRGM='a_O-N_Mi5+U#p4Bf);?m8\s^CUD9[ah!olYJdb"HIRohG;_#_]g]8W
%[r1QRmSQ/&.c[eD<r1SDXaOdoLM]PU\EN<6^\*,`I?X_&#=P-!;[K<*=:@ar9;Xka_FSG`21a4Z9bWW(!e="-q3G3sSpRDG7_P<q
%4)8AK`'(FZc8^X1NK<eG+MfO"`daT+mX.bg-N?8q5IC$#9#9>I=nm4gf>FTJ@,S1o5_:bSRBER5Z4o61H>II&W<G?K5bV_X*&k'=
%8Ri*53KBa7TE;8(,F^aphPNLp:V\D1OA_u")e8Z:i?n$`+PDe7<283EN2,o.EiR_o*GbKCmf*.F-n5-,;\jEApsu2Cr0P@-6hU>8
%9X_E\gH#<CUToB!X9+/Kr)apb*Sb[Y#[d^c<.Ot^1&'$Ub0CqfIfnIJ-PUf;h=pm6&d;?N1DI%]UIY<q9'4Amoml*$YH/cC2gjcf
%Q(Xr<<2sQcHC+P+m[BW8Z!RL0.bd`i?+o]'S^Et#@4l_<,@p^48R/US/WduJb6[Hil!GLF-5qNZFoi)//\Vno&Uc3Q'HFJ/.uf;i
%=uhqCi@rG)C:$WQ`#)ln`J"nNHAes]T6?m*_G*BJocf&?MHJVH7EILVo2'K58D?p.3aB)1@RpPfYoNhBnmL4eKB/-a`I'Vuj84bE
%]S^W;].=MJ<]);tM[a79#1sjq1kk"Dkr#7O952M;/jRnH-k+Bd+lEun\.U5](&5%/U`.4of;G'e4^C^@Ga39?$e;D+%4;@L_kFGK
%rMif//uE+Y8_)jIbrl9A*Z19i2D@8We%1$+g1!`bl+g,PrZSZQA9Fn+<[:Xa[%N]o`5mWB*MQtjb\Ks`Fn?o^q8L)&?sF]%@PJH7
%nLD=\kcRZ6St?8g2-U`P2nr=QU@mfJU`oUSm41&&LVj>rdbV@(*bt#s?%CU0/8Vo+/T"G/I<t&j46I<bF.V,8E6bJb)b3q+3X-<@
%!ICe2(O"nZV#!"bpGYR%g[0j8'8*Ref/(?t&L-+O`(ApE*kE[.5K$[n`Y#-B5oG@9J,&9XJI:]6#YpDbi-sZZDB-&=Flg2Y_TCEs
%am^a9:t!$'^F0*iinrRK\6Bdh.`iZ%-S(!ros'pT7;+[E<="'M&hqa>A$r@G:gcsT,&p7bMWRHL9&LUGQTEWnlQY:28"-ojQCb\*
%TFCioh1-C,-$)cL.;bnL'&(WZ,l,X+X%Jh5AIZ*@0t0A[=TcRT<g9bipu_&bgqKA^J%?X`(iMT6@L)Gr"sJH#rQ#;%JFpq=%uR4h
%F*8,o<^P\@#u1&=M.A!o21F)K//a]#Q]^+bkR'/8o8m[Rl;*4fK1GQlU;<ffKoKO_!fsPA,bs`52#6Ku6pg8;:X-4OU0*/-SRM8)
%0@UZ[6q;[]:r=-^?$p+OAbE&iODnLU',cL@DcaFCH[gIarA?t`9'6hb_q-b*M[rQqM$hH0,ORa+RPGR#YB6U(5fi0JGnhO>f'ZQ&
%-_uP89l&Ud9Fd7N'a9fti.CNuV5Ke!jYP:\oKDQLE#1UYLdJ">PR60agppTVY&<b'meS!:Mf)TH3a#R9kb7C8_eO<GHEY#-+&Y`t
%)_2W3dIQLL]kL7ZAT<7J?PC^%+\hUsB6O`Im.-X0<V66\A?C[)1sbb^ns24Q:ZnS""j&S:Q;_dFG3lZJSZtJmo_]d)<lFBRaP&;d
%[un0Zr3u?s)g_mp"5nd`GfV0R.WY@ns.\8)dKO&lcd?\,Ga3[Sl\BS@^Rt%sT(,<>)\4]4r[Wmhrlr`AKMG$H5t/VNIQ\X'_.9_7
%?iPg"ZfGN,3LFCpMZO,L7FX$D*1\.d.^8=p+oqHZ'a:fp;SOFdW#VUi1!%QFb/INKJIs)1-1kr\mGF:rRbZr`B8Q`t(f1u%AJ#;Y
%rDiG[4FS9i]Zf.6&PhP)h+\ka?X\FVF0`$.o3cRT$k:L\9!gEehZD0IlfgYM\1Zna#LQ5,6p7;#'EEB_lR`9Y)\#&AdrNh\B:oRu
%%S5G+jo_!//m6>+]EAG*=./"r3!KKMZ3d57Q'DJjB#T\rhD;t[:7T?[BmhP-._du=$*,(e>h1]g._J_"D`MMt@A;rOeMpte4bs]e
%8.oED2I1$ONe74?GGpt]N(S%gF+isL8g#sgOTpc0l("b6W7DWPWahD8pQl(e$:_\7.ZR$Im1?OXmUcNh&+U#"p!eJ?gF50e=QQ=J
%LQ$Ds.!e"*Im2k]D\`Rro8bbAoEc!a9j0'5Pqn6cV1X"UM''XC(JtD+nHBVL,(m01!'=rX2,.Rs\BXrubh1sa)[d92>co>ifj<KH
%^dZ)Zi'%@E.deY9On/dK2?fk=2a)((?Z[!d2s'+1'6G@",:r(TP7AB5Ls>=jL&l!@85\Nmne%Q.kGU:c?>8o)o,?BoV#PH#Pkn%n
%DS6Kl&dp,,&F_Xb]tZ=8L.?s/W--)]\-S?DH)"RMp`CXlouR;E?s.O9J'+WkF:=lDTmLc7s'0N7:ZO_jd*b.KgY_?P@*=V5$gidn
%h]H1V?J-1"mOh\iTXUU+n?FT&_28XB1dP7NL,JbXfjGCZ,6sF<q:O#YkXd)rL'2u]NffJePQq?/m\'"p.h+b[VPk;u[G;G'!X,22
%-F'u[c7;QW[SKmV?c+fW2,RJ6WWc>pdZ@@4![(O"$iZu@P?/TOZNP7t`E>fMK\a&G/p6`g&\n7fR-!jJLcT+<r;sSa8L8'OQ"UZ9
%;:(JZW-LWH"K+kKIU7fnR)3Wl&d*jX71\8\.j='Sg0WPQq&e4lo"0_dife"ZY7,ma+,NVobQ0uA5F@o`/O@%$+%j`4AZqokhQf'1
%\[3d9:o@fr#?3Zqjju$,h:@X>Iqd7fkN'f;X:_X5I7ua^=WI[3<U;`)C^j2u;0jo3!S)c&7ZV8[Yj/W.4eHSEo.kO-aet!t^DN@I
%o9'BN7bH("k</C8"<H[&VAh`XeqG<8>X;PaU]HM!!B`+%g<6Qp2[sHZU^L,b\)M.5#e#8.9Pqp`@YAk[r3@[8J6SJ2]"6.n)0m?@
%L08V5$.^M0J`DN;CSl52'\A1D/L8sGp;1I21'ElPZ4V,5iOT+!btFC\ikoQ'$n:,`oQMOd#,k%e8]f**=<eOGV>QC,TQWY4TE(>^
%BnsLPbJ@s*LSc)j`.[0hkr$qAI+=gFC`_EX_7J&YVoN@#d_7(N6UIZ\<RU\C%CI!5/iS*-g)ZS)GS1SS]jeH(C@B&2B/N4FpOf@k
%YTK6R$LX.La@\kCj(ni@_.B*\/lI0rqNrSL7Ea`r2YSP:JF"m,*"Zl?XXmNnkNp^XrVJT<J9']]`P8PM2ZU.='QjF+#8mih<[7mB
%O17kU`uRCa!YedUKL_po-W^`26\tr2V<Wnno^GhQd@$Lt&+>\fL?f>agq)nAG+cI7*`#;1P4A5#5L;W^g\.0$GLufS7/q5o]b>gp
%_a*<)aTPD#oiAaWqt*u\Ock`pFf_?/$'FB1Z-HT0S]I")*U,EMp)VKPk%;g,`(%!k]]HJ@*RSI=&18Rkp9`krhM+dhZ\':W^Zq]/
%%e^VO?O&[PM!.f%44mE0fA%t1%ebpQk%lCMH]Leb*`)KiYY7[P-TeU]+kMpA]fDbNG%dY"[#MDES]UEU:-MV;8KCTMn3H5@SXf&^
%4O5jMf#ccNF`MN,K*R^/I<)KSDmGrSlemJNl$#8@f>uXMIN2V53d+gNp#K4naNZJdE,r%hm,[?aZ&[(p:/"ug\hf(gHE-"j"ugN"
%@hYg:-\j`DFm7/C*pPn7ai-<jHZIoAm839;(/>B_mY0Lm%eZTmX@)qcG.'d:8t\oiFTf)5!h:7q/;=W*jA8?#]Fn1d*U:<9>gEq'
%()WlnEi:3*n*3K"2<66IPN1C$P.'r'a&]JAG,B2c/#S.`WtOGP3Rr*tUtAI<FhCJ8Wgo[G=82[R:3?O\oDLdkWcP>RB@!+5Qg6hU
%Wirrp:3Cs8c)VN@(9$u5A58ZLj'\!Lj+AO$K6%tD^DpnmFIuM<Vh:i<P$qh2i=ul*oFBTYE7.9P#J,aC)McM4]nZ7K&5Ead!M64M
%i;NfH!VmZ$*gH(4;1FDcLdB(W6[7'S9:h(i,O$&,>(``5jZoY9M)WHlJjQlqq-\6@f1)"5K`&\?`f7<@$YRNFmf5*J97%i2_9lP8
%*D=<`#6_a.".Y**,_AYCLOs!GFLp-52hK5SXhPnCI<m%NDL=E=]2"G9hu%"1W)(7m[7tH4F')Z3eEt!(B&?=WD-rlj"sefPEF55S
%9MBGe/:YCn-\?_mil=rEd@A?UeaKlan$L(&[)ML@`NP]<p_^[d@+73>*Zlf$E=Kb`XbdAr$67:c)<fICT-YuR@ZnU^Y=MXZ?2&Q;
%ipWJ;Gb'@Q#6FZP7hCEt^eZ8P@Agsd@+47n\I"paM.u`O5TX)&rR#a*lN%aoN5(Pi^QT>GP7t]p'0foGie</tm<J,$I$PP`@1"<0
%FbiDEQ;Toi7uUmf'$P`iL\Lu;?6/$Lf7a?[F1Sa9q2!r(Lu8#aht`)#1`u6n%e;1bE9eY83)Jp?S(/l8#Wk\7iWK'RnuIK%+'f^D
%M#/Rqmi9:7*5mo^62WNdl47n8[iB-T;U9G$5KZ$G!cC6,WIO,+hc]JAG!B2n&+1Z$qP(TRn7M_!U_Dcqrr%?+5QAn+L:@1'5Am>E
%cA%B?#TLLCRQ)0K9ho*kan,_55*MYTF[)4e^s(u)'U\]$R_iZ#Q`.]_c_W*Fo>tMHVEUEN_!?A#@=ahBVC[**>p_-[r(Pg2&)cur
%Kf8$kW=+2]O!cS;nVQml0(u7IL(92U;Aa^-:F._LogTk[f"&ee&$>CUs8J"(Kn.?BVDHfYB+l30Y5S@<g)!>?J,/j=7uB[)WTp%=
%1:`P(YeaNMNjI\SM?CcB,rm[N\MOP'5+1WMe/P@sIH+8J%c,,\kmfkfV\1%s)4)e5m<,"fB\0H_T-R0m-9mN;qPj,-dqc]_^@l+F
%j:cfJ#gJt:X`Oi'D^7_-r)?8k;kH^?@-2NE&^5VP0qtRdPo@L.F3,$<Hn%:R-iQMc"Ch+9M?HkM9TifKPA(Y'I54Zop\\!j"B1pc
%QM;MH-=(Xbkl0:HQ,,A+j@7ik_bVRRoT5Y:SOdpr8Y0Vm5*J1@o`4tolJTK8b/KM@BHlR&[;W!r8!>BoWe5d_eI&c`.lMc*\YA&\
%dOU^]A:at`T1lLtl;L7i4dW3+$\k9IZs`/TW>7YgB9Fj6q,Fp/';%q-@-3Y%(JK60l/FAlM6mZIa`E<*[6L6R^"a72CRoDp"f(%S
%Ot_2Oc_Otp\5+D[Zur!5`S>b@hd7hf9Z\7bk3%m_:G;_Hpu7WsRJU1HAs*A92psNq_oG0)L7_)gf[OPt2445N\cu**9\=%DA]b4P
%f1DHqdF5JIg$h@c)pNaSFb>Os-#`EnT1RpRk%+VWAAatY#Ati-rj`Vm*N>P:l$FhHoA$?)AH%^Ec:rT!#F385c3^Dn5OblVC;9^s
%2YR0cQ+-e\mJm+!_V9S?0D;mT@g>F"r\pV<N9=#C:3r2!AYTYF;]DI]a[piAK,r!jNL1J4;QV3<_FSkUb`!\[X4u80q$+8YZP>K_
%7%'OU1QuA8c)`<qXfGA%Yr!7'4%29X5g!m>-9D3sB-+XKqreN1N5:["Tp-jP<D!V%#[dJo%_mD:HbHA5a=KNGI?[,0lR.JTGcoun
%Z7CbkBTP5Yq93PR'.B;8+9Ye)d+,t"!(CSIbcCdQ>/FT28B6[$.bJt792]aTg?Y`G=2c+K7AM%WVX(.GIG_^hV@pK_O"l[a.S@WL
%+7YC=]3`,0*i:<.>oa:HZl"jE"`up<P0,0dE*>bX6AuiceEf$lb9g:Jd2[tf3=!+;e]!=I_&:0MmN=2AZjBcV_$Un2m//@Jd3shh
%AP.7%n^082,+pfr/!oLPeb/q-CbAh&\+o&>P3WD?D,AYT,^MCEj^Jubi0)&Q1W^7mLi$fIe)ml)35`Z\g0X0/JE(cCr"=$nP:S&S
%Jt2+Ve5A]q%H+-<l#Un;dt#t9HP*saK3.s!5Y1<i*BQ0,8Y4)JTJZVI_47B_E=lnoRkhf%OLG`m1@mWe;89M%AI%&RN_dnaQF+DZ
%Dnjek6m.GmBp)0.ILMAW'\Cm5bc"Zkopr2G!2mHiKQusqWa7Qb`i^g.H,S5BI\K@'nXr.TJ\>p?lk26eS9W=.g"N^"bph99!3/r/
%ZeCtHh0,ZtLE4l@ks.9N4+ZdZEDC[GCNFVZ3=%UcVkHXZ!7=k7;s^"p%,X)$RVhK;@]#/tMg'kPE3;F;qYLAq;krEPK*O7X02O&m
%4R=06C]/cIBqA!BIu$a!KAu#9kT[NP1H.6!NhUH8="pGP=PKC"5Hrs7dX`#$oMP"cgpG]Z-VVe^`&:X7T1"/H8R.mSgiD^4G'?j,
%[UAQ(js,^>30HF*"'4K`)uRoPoB3Oo'>H9YK,<??KEJ)_ZQ=tcRn[[nqI&=D:SE;HbWKPTYuF"HA"V)rr.5=YkV>CtK5G@iJaa=&
%=e_5hOZ!:cAs-ZAXV)9ad5*2PlcFp<A.t_B[3:(Mgi*UrXq65.Sp[CWY!'+`93n!$kLu:SG"'%pOK#o]^`ImM5FTXhI%NNOJrG.T
%3tati&s+qkQFl"DL^3o@=f=E>EN4cq&=J->4nA6$?Zj'qKT=-FK((=JIPB3%f1q"!M)0Ej2Pr>DESIR69>\h0TI;>mh@N_Xh.7u?
%8a;`t])'kQZBX7`8/_h)6q5>&mdQ6XjE,t7a9e@SA4!D$_D`OEhq"E/)Pr<4jcIEX@E/_H4q8?]J.@CKcul<II-?8/dKGW8,>/SJ
%Q":k*Ss%d#Ld9o<mC0*4IQ\R?9bRj2Lks`FVP(b($bu.;(a0bMC<Hrfm,>M`0O7.C0*!fS+:R1tB`:KTRucET*C&8[]%gB]e=fIL
%(7rjs$.&JaD+#*Abdm.!!uMVO'-oAW8P4uf/.4J^XE+N>p6&+G_niGXo+@-Wl4kX,geEB2:=#E*LhJ,'PN3YgKEdZ$Fe6t&e!M!G
%-(?0IB%CA$,`67T+ic>0<Tj,OTRR\smPO-9H(>iFXcX>AP\?rp?'^:C$([B<C6*l`!<brK\LN(sKN-]6D.iGg#7;6?mgk54+t\Vq
%+&Trl_5R]AZTHnJ+9&?Q(MgkqKco<FFE?d!r5NX2f$EK>h0FE1,c'"j4\adXQOq/b(m",ORk,p_e4#\b@8FqCOdp/n)a0AD,ClAW
%K[=&C9dS<IR,KjWoimKfC_B'<7LV2.,&e"Pa2(.M)jkE(<[=NQ:DCnW/qXnS(b*;iLum,fpNX_)"3n6A/UVM"Dd^Z=%^76(9#X41
%3a2_/?U,5EVQacj$6=Y!6<,3P/.9o*.Gb5u(3#a;S-rRD(4&d@&[O5m)/^A$Mq?hbpBTu9%\qDW!(,/re:TcS?2jG_,O%IVnbC&.
%msCD?e<[F93cLC7BAI,P,jKO5oeuRtg'9:j7lt\AS*I.id\;g16;<P7jr@\c,_lhtA5*"?3E9Ya8X$O#$OLm]Hd5`r'h/DHWHbuc
%'Ch*^K$rp#6G&#V3,=`=ds=6HBNJAiJ,'^N`!P!`9\H#R1O>>&rlb2Nj3!4d`:Vfp8!d^S=USPa6p_<o*U-.M<-grpN2cLRJnb+A
%'S@^B=JckMA-D)<DHCQ[oL!Mk0o=JDVO+#hVo!pn=+*S>fJMO&F?Op(qMi#j4.XWNXEJL8E=29P=BmUUo@9Og$X*`u=u]SjfgTuF
%aq2ipZS%`;E8TEUN1s#nEh)!BhT)abnY;YiRlfq%+#%9:Ei@YG(JU3m%@YhB<iR#L]L9M4%P"<D;iNq#X4/MB6XW5Wdjq02rFR8T
%m,fi)8o,cqib;oU=*N*FjNOjP]c`Q!&N^31a,))e2UYD_bpJJ$0UY&gbS<G'^j[Nia6^BV=C'hBcMUeKAIA7WZb-_Go[+^H;ObcO
%UNWWAdXnbbm"I87S#3a3\paWXlpTDRUJ35=I>69)N#)Zdb%PTjJ].W6Leo0MhppdT$TOUAdFlbI[15_cT3D&=s2sQUnJ^\L%/#N&
%/rr3Y+778=%;A.b>1;UZ*PG+sWX]GVca_FoPX#A_'?Rl7<-mc")!.W@aZLcmPV)q/UM.JmUhHm5fu/8kqQ%R"M$;;d8C=/5#hbfe
%^FC9n$Y;5$O01\-W&.)TrEgf42u%?DX;0(&QskH+OeFF\68,i*=ZKFZX-a<b.1o8^Rd0;E$+i5VN6c#E56C?e-M(aNdPcD>^r@@E
%f(>bA$p##!)S>e4G5,PX?1#u#Nnnsu4#VH-7=0SS8\WkNe77q5Nl0Fc7>EkW^,Qa`oEYgVf;<E(>PNN/Pb_RW<Q!..'r2=_Q>Nt>
%n,K>7%6%2f.Cs28(D/P\qRhuC/#b9]YnU8MB)ffYleC0\*((Jb_$d=5n6f&M0d)`HEbSiB%_'kY'IUHsmcQXQ_sF=64!<>a$=7dd
%m*QMi>UK+`+NY3qC,A<J-:TetE^^.P].s+8m&;Ht=F+lCZd((=s3/p[qj5<5d:W\;q0df,H2K]&BWl0c%\]^mJO-!NdNPS^AlSTM
%'0M84Olg]7co^2J]k0L5]jZ7<-UP.U*H((@n#@sbZg>ogR-+NBBBX0-L#JXi>K3"PrOr+&:K_jF_j-C2=8-qm2$P]JRe#7+nk;c\
%PI4+&Bd7MKnV2@M5:TR.E2ug,Y[tm"MANPND9M3'4!,"K6,k@U6XpC'^oX+a,\T'\oES-N6_"E?`E@(Q5*S@I>%l@&!9mA-iaCLl
%f4GNg_mS=[64<Marj>JK<-LQ!IZ:2ti$86Kma9:=nt:>_L4DPDW0p;cENYWF2:g+U_YX*ae.*'/gDm*UeM4q<N@tbU1p]7kls'U?
%HZt1rkuWEM]t8,:TZ4\OD2U6je7@'Ylq?hK)9=m1f[[1RPm?ko<LnkKdn()U1+lko;3s5OgH1:T8[(3<NeO)h)J_YQ!P82&drbA,
%9Ai]>ap!RJ<PrJ([W=O<Aq*KjSD`?oP81V1.^ie)"]67XC-oJ`NQHs5[L72YNIhir?@`>6Slkc9s2(-c@o;Q&%))!9>bm\K9*,oj
%^5cR>Mo,HE6T^T<In=%K_K8ZB36Ai[DOY15*n9FCL^Fs6/SIEm#ftnF_.#`eo!]=fkV4.?cNP*h,,?k<)2RWUQMc"qXR37&aknW^
%b1`jZB%tZC$DO"ph;?+F']!?QmAQC3[G+?5?D+34=JIYd3qFs)W"(rl!QWK<hU'&p5%QB&Zu[_%a:M5B`bIlI#9,8KmLO2'os:oV
%H=-7/7GIe"]DD?9X\[j.h$?*N;=gC#3PBAVTVg*5kEY>,2qm*6c.]Z.'c`/a+@kit0mhK;0.NcJs#TfN6B]-N-as([n/+Icatm1<
%rr%*Ma=144PR6K=2i"WUTQt(ZN7s1cCq?jhK']ObgfohQC(:!A#Zi,F[^496S64OZ)/Wk.A3)09rc(n2G'6rPr+%n[&W\TB%D)7^
%A&Jsl4BY2,`L=KA4Vu&d&FMYSPcWJqcDmqeLE+YQ?#Ah_$AI/FheEaq=SdIGd[9B\T2Y!Nn#W!"I3ZL_EsAaCWj`e>;8K(_pZ?dW
%3X-hV5qEkOl\*m\roH/#Z=HR3"rqZTr)aC@&k:9Z@.Y4FQ8L8M1`T1V4_RYReO;))2_&U6dD((Y9focJ4hSU"Y""1r;!I8q/O!:F
%BY&f#?'IOi/I,Sl2LMut0M_hObrVg;8^T-`@@&/W#)1QdRG1t=A?IBA8YZ**]>9M$0oMn9Ji%_*#C-:<HEX4f;Q/!U0`0Q2F=2-@
%<b<kVS=U=+KFQCcl_Y>/WV=*lZ=/"2#A'47'iV:l%j-'/5MU8U(6:$lXBeiZcB`gC&s(S$*<.FXD,UPjf=S1c,A\SR$Y<d8Q``H`
%?8sY=eG1i*"kC4WSS&&2"=9L@n7chR]jS*h<(GVt8\`]p`)tth<G>o6m]g3%:N\<HRXu-_eZ9s-GO!]fmWR8]@]usaHhdr<4p"5k
%#o!a*RL^"L'+$-i&nu[o(?to`3N.TcpLc8=DS*NbG+*AR`B/:g?>M)8*Wo3dbjn,n_nJ:0EF\RUZsQdNq(T/(^1`_PB3'K=^G7LD
%9KMjV970I_f+X5@=7O86o8:#>+E>/Q<qlTn_2_q0dSPusWpHj^6)p(#4Z#\1$nD9U/g*5b"sjYBHPA(*[%PpC]+ZRFEq$o(Qm/=Q
%7ZA\5lS4PK>I?J72<Cs@RmZ9]OKIH&AS.#s9$ctq;/].aoZX%72Asd;k12JV*7&%TJ6?1gD.\PoOr<*")HR-[]eNKD%54&=[%YVB
%N+,2RYNnLI?F>nOMKW?jd<b.gIl\tCo9Z^l\#3)WeA4JcY8W?N$c4#:#-ha&\&>blK:Vg>Fk<sXdC8u]X'0r$iL;nhlkR_!nPosR
%Q&$?mD<%S/\QK6(!M6c"8apT?Q7\g@e97(?immPb<8gA=\ct6\Ug;:7ENbR+;)X+ho1:/S,bAuj9dVSiL)CS@X!+.Y\$W8V.<s2Y
%@>2M0:bCnC7EhIF0%`FbCfD:?UV&/4@"l;-#;]BG+#qehbWXU`iQ:EmP:J!#<-iTHpY@?00"YcGU<n*%GWR,;O$;]5`-'49&2#GD
%heFBT*#D,O>b]3a.gKItEWl=F!k`Ve7rE)I\'1stT/cI;V7X!4Fg.Y20r6a)5aJH4/C-N`,(`9#c0@="NOB*90hA^,jTq'oC$Rg2
%e9cUn&,K!,H(og]Etnm[f(,]Z<lWGYp/u5?!1+sLT$p51m9[mE"(JV9On)ls:R/m&Q#/gqCBd*\*@DQYc3uV]d_enZj5nbm'(R@i
%[e]=4Qi_,b'nKqkGK-:#9$LNuQ<f$sn<Df(/rQ^0qD7%DIo-m@6VmHCG)$9p[bYR*BTW%i5oNF;oSEZJFOi,_JBBs4j=qD)9<1&'
%"s"&7<E\(k!@U@s)usOT#GYtXqSM^pn<5oA\A!Ptk/iiH?)>FgLZkr[k[DQcZeCuF2CBa)-eGi:gDO`8Kq@,DYk_4MUIS:=+I/Ar
%rYS`*4Y#eZ4?XVU9Q;+/+Z]jW.>>9)_kF,6hb]fo_m;WKLNl1=4F=TAk8pY:'STN2)a`XeD-Ll7j"%n5?TAX]d>-Zej01%%\>RpV
%O_=Tm\3\bgdH`I<W8Sq3#5F)5(!/e%e*Bba$]!>#E7]"0<P0<G2XP0iYU!18Z<;d;=fSkLKrReo8k$B(="oCn-BJ44BV%h019'V<
%'h58PPoIW1AU%WCf<=Z4iM=uYdMqQt]b-X08aJ\K/H3XbIQdafDA6P=f`UOH^``GTg=Kpd6G,"Q+B'1pT.?'^-JRA]I6u`t;5di$
%g@rtUrcF1IkHAC9IRbQaB0XkRhchT=e_)l6.n*IKd%j!C8_QY?jDEoi7#?Oa;o6UB"V3"FPNX8XYJfdMHMf\Yhf1!VlkUV87E++#
%&ME/Z3hT:@D!e6RjXs[nYY"H3DfK]D+$)bcH6Z+J<nTT!Ogh@!^)_J6k'7R\gK"GccV(tAdIoAF98#)dRBnIu`TD7S_C+imhuP#3
%g62b_2@>Du)flOeXl1e!NG@$N(%d9.6-lY1^3aFi+Op:f1(Y5r98`TfI)s'Y%tm;.H/aRd3%e5f/0Q2A+i+`&@#iM[7ogMFaP.aX
%_5jo!&Z63oOVN3JkH-o(2PD#j$_P;)e.onZip3l;9g'G,,Iq:X/dI`ZBHphgb96N/*BrZje\iGW.@qP#XQ%7SmJpZ5kY;s44^9@r
%(T>C5+l-a3X=R$U,3MjV^`7DGNfO=XKE6hD'Ggg>WO#K@ef0e`[X(9p+<a6?^CW:f#d=<^QY*G_#>7./#m!NPpFhNJG&fY'4ri\9
%KGYbUaM5)4e/`7lYf=cWIFV`O?%X]R,;MSiYkZ$r7Qk27`"Vc3'4XV6J-dWaeVFD:)r!)#B";&]A'VHb+'t=&S6]HQg%>-noEABP
%cbdB``.f;dEIfgmT]AW^?AJm1s6:Bo]0hkNiuMKSn=Mm*-E&.kW+)VR\n;UTP=(!a)t.92Cu@V#'0S[8ksI`V!(#:BmDsV1+^@;1
%P?@aG,B,`sjE!?W:]p"O,!+Brd;&OckWQ?Gqu3EHGq7H6guC75d=[MU=7M.D=PZ8f8RcXKVtKOo;o,bKo.OWo_Gd\$HR=`6Ztkl-
%<DUg/\fj$8a]<T<>*.es[A.EC<NQ8r-;&L5(Nn.Ai'P%sMNkL5Of#Vq=M.cVS^tM?K%.oCG'/S$_H!8\5t3i@`-F7-4qUTI^ud_U
%=m0D3i>Z1LLo@fKWPT_I:(cic7,Ut=KL-B_j;?!;Nj7-;95grt)7Nc>X.5o>Y4lRMMXJ-<*?2_hl*]'_\G:l_1FiaHY#PlU5O?k_
%dC"o$dC_^iO:j/na#uqEj6O$WPCfQ4228h>lX$_m8HX\.e>Ik[-GaE4lSNl55-`Y4bHu2$^-fK7;bVC:pU<(;1a`s-*GA(N!k3.`
%S&J.ZTpWin'(,f=Vr\P&n-%/oR:rlqcJQnUS]lLWWB4+d:N`J^,>*J_"\@OeKQ=)KpNl6.Xg(F:R7dZ$R?U=u>b]8?Ic%mqnZ_=U
%4=AAiPo)X[OFIk/#\RtS?H.tJ+VuVl8F8fV6?0#$5Lnf8g:uL%g-lkJAXR^/6Bce#*np>),!):'&P26B>o4kSB)bUJd.`L]Wb5fL
%`h8\O\s#aXNhks+jn\:,l43p3*O^5,p;;ipgs]I4oHWn!ks-@#[/!(!W^,8J'IHid*LZC"WYA`6mM-K_TBQbYZaI)$Oo]k6oKHSV
%2-2385KFc])pt>4jpAHZD,gkJN/q$,a&V$kY)93T\5UMEl8;np,EMPbp4=3U^S4pj_".N*5n^lP/h9]#0nPlV9`lOjTj'7^L>YJo
%2CG5p*(L3[e25Jrggt^OM;Ra&3sn=G$9XoQ(.MT.(P(,E9g&8E4:FtT7)4+kL]>;_&8DVM"bTR,!rBf%5oW$\5>b;*?o^+Feo]l<
%`o%`.1<IVQ\eO`*NZ1n-2(%JkD?VKXl,DE'/Gm/.=eKZDrs9mA[]>h\n!X^&DH"G()L0K]G'Pi;,L9VC[3Wb\@f7Ns'*TUu4\K+E
%!:f:p<M5>kOg/qu9;#<%0-^dm5^Au='sUM*%P,@*>[D&Kq-50\I@Bmp+W+(VZZ*H$..XsM)gjI[P^0XQcu'pOK*]TNPi)rUntQSn
%JTj!`.dP?^.1(B4jaqejIoEYZ+fJgt@"`ui+%:=G%A5#NmHRR&Pm_orC4A.FkK_9'Z.Y]JI-@g-c#+KS8_)rICJ#u!W8*tm98:$E
%h]11,#CQ/L)cmPq,#tf@jLeF4=fM%1*g"[rG:feB-kjEu9[f\j2BrZt?QA;ui9K)BhJUO/`q:q_F&PA-E:c](Zm"'B^kE>]gg'.r
%^,q(M7&&T^k_&fj^cXZF8Rb!o%Zp"uLHZ)3Yhs93!oig-jRpa>n,$1`r]u:#q?PEohmoCUPt7;QY8+^D%ti'b1/l5QU_247T5d:k
%Q]k`"*raXMYIHERQ,4-)(+4G-2N5#fF&='j*A>5"\)`q(FUk8"a_^CoC+nFp7%-9!eAW?l9'cBZ^I'J!cag]MSjO/:&27u&OV$/l
%@@&iaET\<M+/ORNBut0-D`jLY\M4u$T]o;k3.5oW:#!ff&.*#XlKQ3OlaCj-9[Kr-+^/K0HX+1Z(NBi\I54*]@#i.BctK6PWkmP^
%IPVG3,9%eeJE#0+Es</e6U*,Z1(4dJ5QLqnc(0m!hbFj@U8D)T'5L]e[RKe69?Xe5r?JMqK--mXik2ET#t5(rG^:?Dc:iA'Mr3Cu
%6Iu3BMXI:^oK-/_elNJt9I]%T*>41<V]/RZ$-Mt\W5EJ?\`N@\'D1Opn%4o4HZS_GOI#b3P.4<[QgH];oA&F3ebBcU)!1<&RXl2V
%amR5!_=r0!SrR61YKK@42,9JQc&oO2Ar0TLM9R3);Vf8?\k3XU/?YX>[gIm9HAi#k1;+>-_NPrdL"(bmLlU4$a>eNhIujFkBt2]Q
%VLc'Y6Qb4D!]AYJZ!maE5VRoU![Vj2[i%Ui]XIjth#mNG<UAB%bd>jU_EmK,h<WF<2<)5h1O".^g;.@3jb>J&Dch2HE0)AIeJ/Nf
%.2M&DAAW*M/k<TPV`QKEgp4^>/#@5Wamm,:p$)'OG77JoP[e6Kn8+7Kj6?huK_s5ur.maD"I,lFO1eS,OPG^r)mgZhQKtl6E.#G/
%@aEEpB`o\rrnR,@AC:.BMaH7(rf)/.iAJ,Ls&jcAas0KuDX3n\_-lq`-!Nj>P<`k*\WN[K[Z1RN\[HZOq6Ue5/o\Kb]Kp1rJeL9u
%0l#R0#2?/=-jUY=$S3ItMShY6>2!M$W[N3_c8=N9TDeCF^VbCn%fjca`qX3B5&!"h;)VoZabsQC&Kos9\P<@YbQIA@jn30UI1dus
%QkV-hZMi;K\R%>k\#m[>IK.`_9ZD*Q*lbsko5e]B4:;!,JWf<BBu.o`Cp7M)N>*mFMN5_EMCr;uA&S2:(l\6aH)WAJ(\/I'S&C=b
%LpG*aft)L?=BE_'W,?]8H&"UZX.^U@it*c#j<UVsP1!SKWH1M8M#N/4e1,+XFk#!c>MSHF*F;F!>A/!V?6g-_'R^D$@mn__NLKsc
%j=I]A.f4O4D++TcUR&&*c)9X4T.g,VIpq>kP8+fC(U*it4mo5XXg[hA(.LfI?<Y4rMBGDWn,fj,DdW^b7FB1qn:Uu5JO+HpZ443P
%I139ZM[bO_Y[VfUK[:Kj2i6Kp?T>cNZ;eM=Fu5%MF5a,D+(ZsY=g.S!C!HpDFF82`3kN:b>D0HUX"-8ZA1,TINZGS\G$NS:`B[*A
%[Ku,cpQBW;Y[@Dh47<(!EHf/F!(Vs'Gp7_5eH_X.Fg@keOZlWU"%8%/aPm1EHHVYORBf#R8pc$26$NNA%k+iaf'RW[-*_^@FXts-
%aU<%>c^gs!Ln]Xl*90m$jjeMqI,=LbWT9/N]Y2"tE3JBCQ.%Kc1oqq4Zr1/Hk)C=H=lE,!g7Vc6)m^'[d;1Tr$*M&FG+K-Ll`&Fl
%+'>)FaLgt8S1b5OrFb63Kr'dA*<C;5+QpV,H`91G\t@Bq%@n`4]"*lm7=BfU_VcPfXW@0b0Yk>#[(/-+JW&k>@l(Vc;hd#ICSmoo
%OP#]OF<eLZf.103NBqP86-O^_kScu[+h>2##EqO$P2h9cN]S(IVF)$1V#[ZXE7LMdOK%N))ja5Ri29"&j/b0d+!MOp9!pn7eiKn_
%'5lSVmjs+jX+.W94,(!,kP+pJPF4cXG6tC4^Su2p8!/_p&Q:!bj-.7p%:1VYgBf+BqfJ@J4UP)E+m29a*SG<`LUBBh11W(`7lM_.
%Xi%0%Ru2W8+rW#GR?`#.)":X8AT=saAAtlPXH9o*Tf'"TBD"5l$%qtN3'bU)rU'?<8g2[#5]Od%pliU8@aDCK_JFE!/2tnrA;mWB
%O`>T^PZF+*iXe@/#(4_Y?RgFFSOh*;CXB!ji"u"o[WOLR>g8gm=uIt^_:$<>5^//.?haMMFYa1qH+0/J".Seu1]CD0+s;S6O/*?k
%e&<fEkU>-%[qhG((C_6.SN2QPO?7q`7mp+l61N?#+gK1)oM06o51jI8&aE[=%OnDacHko&$q.:6@%SK08mVK'/&ms?n22'@$UpCN
%Q?V1]+@+?9*Brg*eIR5)K/6N31c[C8OG.#3DePHG=Yd@BSOhRi6$7fTBA6Y;KU>[[auL3*7`^i`*G2^*>]kS*kXCNZK@g"lGt+F?
%Oh4g]WR=J*m[b<@ipYeBST\hOiVTbRQ:u!)%YYhQ##)'[@*iH%q-V/$4Q;Y0P3%:,n@T:OL:8qLRW9?@\G+hB24(k^&EFr;ScO%(
%6==$d(*M&VjmDI,N!L166)L0(PBB=)*!nL&&_'1JB<"*>jL$9sUE.m1kVNFr)\-F8lO-Wf'4p&`d&Z&A7dI]2Ch\!b\fKqcB]Uio
%g[bS;KO%`:^bAk)PY\I[^40]fG%R7>ri4SKP"-Vc0B*X2@&=a@0i@4FjYbUV`<7/HPZ6>bW-o_8^mr9I*UIhuSG_U*]"+Y+)@>j0
%"gC7")4u/Tl7(.#H0HS4*-3C/)S-co"`meE<A*ZaFtZLE'(#5eHcRKWLc#PJRSMVkKRF+r,2-0"huXm--Im8c3Gn<PS:`p1Eu21Z
%DTo75j:WnT\YdVMS&8%?i@+JV2R+SO[a!R--q(!m-HAAX5r3V>+qdf/`65:bXM.q#U0?XGdS8(64.#*jNP^ok'X&+Q`uak+m1knC
%7"^7%Wk1]2iDdYZT?nn'GpF7FLd"_a>"+3'#aYODB#ZkS0<<n9A>HidgVGq-&S*)M%J$_]#,fB9(1MKSU&H>=5#.*EknDmh_&,Hn
%q=Oal[DhZiGR4BB]Y;A@F`S3[*\rMq1Pd;UjJZ?DqJaQRB,f`-DTH-E#6GPVpNZb)&6-`DL5(<$*AIY&;@8#c-4h!sXuGjD,1qiT
%B$oRBcSal37^Vm'ANT8.RAJ?BB@_Lg]l'u=4t,*ngHNc:*Gqtj52oqg0>b_.?p"aTjQkO%e)P5n?%nMj*kK8&;m)iBA"C;k@Q"),
%d)JUrJ[I)/Jp:_"D)kY#KYY7)_X:AiALnOB0Y/EKKkF)\'?8A3RBM]Y;.%Yj+?!!glPriiH%(5RHUVWl3QH0.SY11X3+>^Z+`n$R
%)!JRAk#mY'=p"<;3h"sYk.\q:b^ifn3&f4jop"3QN4/l@CYkSsQBM=J?;j2bf_,5k51-:sA&ibr0dqB93]c0d*Yrq?>])brb`9Zm
%6_8'<\$0S/>W``8LMtp(X#?rgLc@/<_(IBp'8`rI^!%](,Lt1qopq=td/5\>g[@Qbh#IHKO4BW0Vm0JMS_rG`1:i]@e<,@Hjl/*]
%0s[PmR1#CKK/c`MHU>B*/p93+1o&c$?)G0^b]fFY5r@L5Pupn3ld>&1d,dV;!W*L13n7H`%q)7(:3[l]QejV+Kr7t$Iq3[C+Y:VW
%TO!!YZJ;3Nq\Sd_MSn<7`"-DcfFkBn]o_Ku<Z6FuK8)acfu0qfl!K.m'97>*/d9i[i[UY7Gsr8K@s.ldlXQN49r(1n5kbZ=E(p_>
%Fo5af'J'aKTEY:%35<-3o0oc]OV;l/^2,D,-Op9-neeW[C>+Zg-V#Ec3#'O"%mVT%fFHuk8aOps3ss(I/.dtTQU=,Oi.Q$$ScU]M
%gPr`Kpa0bP0L+?/VRdAYVOHQ_Kj^eFpitbD>kiaA_L.fo8N%.@Gu:'K6]_#op54r,SurUn!_(A2c8)@%mXJbg>Y/IXeJ=rMMZeRD
%fj?Qj(GBqKdOo7!i2om<6Et<qD(,/r@r@k(.Jck.W.SLH-0^<f&[-5J\^nrs'@K=.b0.rJ64/;+?es[YVe?2[#qLO4&,t$J)lof4
%L474rq]0l)=duZk'`j^5d=LqZ:rD%BTW9#f3XZ4]W:ueXF<PEH3f]PG0K&3"[d2$?44<K[Qt(^TC2!RNMBAEnqL/Cl\H'X81c/3,
%.5-gm8"]B+iu+7%%HhmWD"*Uik^iq.2N!gl2UG<tA>QSF>$BW*,l928$0bAZ<ghJab=?7/8[S&.iliTO.A:OnmC[!t+>7.[B621C
%RlJMJ"q$[7GQoEb""eTPncg1XN<7CLRc7_e\`d\"Ma=LunA!V&QRt4<Cch+oqB%]0dTSrqr>7$:_]DCMCT3%l3Og;+4])*,@m=Ah
%*Zej\7s\/=Dri7d":YP;quA_&]oa_fYY/TJ`4FdVEs@foV4.I!45!L(/[1lV:_kHi9-Iu%%S/JR_o35/_^dn[<:5mprG6Z)c[Ule
%ZJNYh`GEeJg`nBtE<7kWOg<fe1_W4-:Vf(l[M0s<PdJP2$G`8Z[&U!uLfS@+6eN7*%36Ia/eV_2nbpc+'&OCA0&Ipo)J>P/U-%JK
%7I;EKYoX_,r>a/;71hTt<1!0^(*'#=njF=3RA%\f6Q$@fLZ)f/;!"E<2ISG<RDVtBN=/N^,LB`<$J"&gk@m8onJm0(aC!Nm@ugMY
%^+X!)0&<BMA0@+a!S[OgaKML37UK=bkf\;3VjKg^0(Q2T%4*1tnIu28WqY%7<dSHKJ[V\C=n&ao@IlXgIYtCar1F2@_2XcE\qZ<Q
%YG8dB>J,(46oOUmV6><FB$[TM.E<@_9HejFA[/YL[bbsupQtcVSZ+;0D>P9)87^F7FbaQ2`1Z*Z>h^6s&BFlY8g/f*QNXn89n:\2
%[fc;`Y/&:CGu3"AgFdHr't:0C^(KV2.dh"r5_JIuI:(-eOXs0c?fWE`p/";.HQ0cHo:p<GA_bndj&5c>_.tNdkL`._XmeR2*dUUW
%*Y0$_@6=^Zj>g><n7u5hC6r"0.ds%P2,''HG3s*JJphVH)#6SQWb;]6)e,K&#Wjb*VdGtC1T(\D_Ms><O5oSt#ZpfLC7n*1'`Fm^
%c+?q;!^i/'e)84;KAB>nZs?WC.!&D:MuRnbS@&WJi$AcJY&#1JlRXAP>$DE'airsP"^7@Wmt&PQMe61f:91\7C8^8gX3dV\"Pn9N
%.8,^eJnP#0QFXjX'f3+DAE;A6,;1Wi/`h^7HPZY.UT==9=@L#aW<SR0p"3EH=;7ZW<f-^Ii_[Wk[d!nM;bWn0NC?C3@WH7$XQgh:
%Z*nuios1hrFACHqIR/)7X@SEJS^*:kK7%U=@e>h:$=1&]SI1PjppUoa1gY9sSDj1Pe\djrB_l5*)WdtIdLlt=Hn2b#0.TRN_)@4o
%ZK6_;)048]LDmRXXQX5!e(oXF&E%Sm)Y"fRkcsUTCj+4pr#R6(S`N1#T)jJLdgiZ$lUi$Us/4442Co>Le6n"gjMNc:k&+^,**Pff
%MCGf#)/Y3"Z3T5Y]IGAX144*"^i[eJ\):>n`.p6/^rVVU1EG_1jh@AIfb1&_kRnpBWPD8!AHDScd[*urJ4tLb\"pD5#BEah06+!9
%:Pa_(?n_"BFPuPlTPE[M-YU73`_(@,!U!^,S<k9rNI'LXV))`ql(mY-#g2G:qY$&F?dB8-CFB</CU(nF3N37E/b?/T)W@2D5(,'B
%d*\"qHTE.s<ggN"jfEl]?d$eB)3HYs3F,uAO;P\EZ@T4eb=.>G\MgblmalY$2%*OU$,P!^6Du8F]7KAWLcaEIq<f^eqVEXO'$7J$
%2o0P>dX5OITtgk^9I7`E6q!&e.`Dmn)rcGC'Tk&\SI[.%(rfs6lMAA,hne*TfXiqUHLD%<6S8@][@.Kn-=23I^)kAWS\?c85[W,&
%H)!l0l+;.A:me8h^?Glt3o-@%^7HA\IE-:YMg"5=2V2H^qalaA>8__93'p*Y0]sHk>90CX,J-d.*0Q-D.5)[P<D1W5lT3io\0SL#
%hJp[d;W<:!Wh^uGUQTY"eUM[OJKFnVqmO42o4*&JO6f=cA6m"-Z6APO8F@tp:LK!1i4koEhq^>.;eZM1c)>4W$E,S=R=PW0%>rQ+
%qR[S:F^;I^QS2$s.ZB5]^+bS96DZN!k-]@(prKZ%7tu!t6IF,d'Sn-qEW:g%NfZ5e9L9.\B()k]P.NE=fnHK]O!WmPeD_Z7Jo9th
%[<7V'_bN,G4D`]b#fUdP,'%M%$GRdn((p3'fVm7\0N`fU;u;l7)2GYfZu$d-6An#XVlcQIbjaS=]&%n7O3`mA7fu6_c(h0'!$iAW
%Cr.3![uY-)3I;Z/lS!,srVYh<PO6gN6i\[kaZdL=?t8cH61-,/AESp$h([jI%VY_R-[4U5e&%EAhVD'_(\p;64\=GFIqT'-F&UI!
%SS;!%&>@!AJl*Ui?TMEC]s/"5ia(O@d@2$QSSb.D=:5QPP_I2uY_@XnX2->qKPfE<fVQJ):gop%FXa1JmWu`$l:R4HAl07ojYi#<
%*VK*lW4[GT`tS%)=`=cK5qO9#a^)NQD[N4J$<8.ha;U0S_2;A+:5^&<1%&HAhQDTJ/ZH5I4.pmYEKdG1BR=)mHk^'t%*^5u1RXPO
%]qP;n8CLf@P++M%YHU4a?.#)g<3lHJ2cG)XII;a-&AhO)L'Y:^gHm>ElhIe\=d1ZV6pYU(aJn;U9WD?]pRP_&j]rQ\JB(gh@1MD%
%S[C#C-4ZjGLMe.OHJSCjdCIPrmflDF^SFTr7uX-(=`Q!(U#9*<6E?U,LB^G,D4_5>:nb(d-/"L6U3Al22CIj:ggD"^*7rVM>c8Vr
%DCZLFSNE9QCl$pjQ_;hfFsNte+o/`caNCs*E51)l:a[6?g$0PA28S\MG)E1lTnI`+!./O4%l'TI2<NVCcH#4@FVH6.7f.$/Ab@YX
%=t_RSC0*c/=pFEfLi:d7'Lp\l"8W?+U7ERh;-N+1k83WkMq`<S0i>ie^%R"c?dB7`I'%(tgt#9_cM^ri_eYkDl-"SPmqWI3YCHTC
%Dm-AEos`iXpAMc)n,MuDnZ9_."N&N\5K9m91/U0I[G^l640T+u5j@(DeuG&8N9/Z_1k?\gi-P\YlD(Ih-;/0h&A@lZl!o"dh<&52
%^+^GK]2fh$_$%KN,h<P'BWKghHe&>Z9uGp9df8)smU9V)D=&=Zq]"q8dM\:6U8E#S-/C/rAh;b.60i*-$tjYiN+!$42',esb3`LG
%!mW5+,-^C6CGtZ6M/#gg9$`ap8#GtT%'#ruA1'9&(B`aFq=!-iiik'PA8[3'h.YMu7'S%To^3`-`U>bqd1bh:HNUcm*3(2eqW@Q6
%ckiS#`n:VW'Xl5'H6ffYAQj;ID6G$cW>a':C"uhq+2<]/Y]gaCCJV4L1(&$lKsX2=emT<Q>4X@-MjG>d#.=+`15.LZjT*:9-gm%I
%"M$.*q`L6<!Jh@-XLs_86Wmh*7V(5lUaiMD^+\dTlDg[b2bOhf_p0"n^rW^W8(MP>=;0,Vrm;P1_`u3q@YFiI[Q"CI5YpYs35]>m
%$<`hRZAqUca0][j^G3;0XDVnU_dCYbo5-tu;"E]Q_aHMni64[X=#C4dS3er-!69i)\^'cKC_&QOY&M5(cZ,o"FMk^>5%oWr5a*`*
%&F9D&IXu<"JEOH7%qPj_,oB7gd7+P>']Tk&OB?T0b[%&k\(HFQ=VISAfrY4+E.bf(&Zo?.XU)$%^@Ou9;!X3Q#J9(JX=\;-Y\s1\
%QK:(4@/$FYVakXYLaP\^kIFI+>Nu1WSbUj`nOo?eS!$*G^eO&`[<b2j!$ie)G-s/lSHF;#aR+*p:o=C8DmbEEj!`K\auaZrXT8/3
%e08jVWLL8K'MHYA-W56W9#)5AlP,D<MU`@\B'r,4Zdlu4CSLO3/5Ts/.Gdef[&k,&M^LI$9XRQbaSaf_Dm:p#:*h5?'9qSBaJ[9U
%O*+(M9Q1b*^n_?5GTB>/9E[Uc#YM?ThumPq3ofkr0gGsE9`K>5^9l\W3?"_(F0GW;iIP?3%ue538,uV99kUT:%$l\HKWQ+ljGTX>
%s!1t,qX2]"Wu,^746!u1.S)LLL9VPh.-[mX?'Of?H`h0qM8%)FWlPtZQt#b7g9X<K],7*E@E5to8*r^&"p6I4M:m.8D3DkMVf;^#
%U??dSMpno6eV"fNQke;i'_TK5*$7)q</1gVK(KhX+M!qB+S7CqCl#a#1NFQjj`m=epu&=n$/>uDI1:LudDf%Qc<GDTeUs2lN_",c
%2oB9rcBcjn4__br8anUHXI8H*>YjY@3IO(Am\dhUM=%P^/6@Z1Z[VMh6mG"!bAWaLad>>HO!*[P1?LrA#JWs'@tUOe'.#NRV'uA6
%r%^t]EBU[]?Y5II%#qZ^?-GaPXa.O7ee+0hd8h61<H:sMYX\.bF'1,8\*dmRerD8:$NVb>1.MoggRac@Yd?7F`N<4Z\nt+Icf>8U
%7nlusfilZ$g*VpJ>#aFh';o=\pb![A?Rla2WC!cB5YRLtZh,T_kI\G]3<l9:/Ic^n&`r60,up!:r-EZsoZa5D+=Ea=jdpWg'i<9I
%(MWaOdI33Hn8nLOVHiN.eAGiRMbH-%G;bn7V,'F70ZMp83>ArZ:r7R:a/0+l]M>p0cnaE472=GaE^]PK]-QnYc%narePlS\m!`)U
%@NqT(?&lOV&0UfV"GkD;N-8esWj`Xhd#a1O=:g/@qLttCP%(6a%;@!dUKg\/CdXGLJJY[6rTeQ9*c/W+5,NRfm"<VpZpa^Kl]+pQ
%4dF*X9$*ef7AX"((=6@MQaCQuOtTf1CZgBt?l2'J#d<cR"-5Ta=+TDRJ^KljOb-4c`ME3,V6MhY^Kpd^qE9;sC])Tr>sbM0K%L*7
%AgS>p-No!&:aUn7l;U_I!Y>C/UST0M*^Z2M/!B+`\9!G)f[fBMq$^2<O_DkrC1=`,oYJI>JZ_J<%ABUo]kJ+=$Oqf0g7d=#h/C_p
%*%FEI$RrqPT9e#J1W/fB>p)N#`/XEK5M`o0#CH`=a^.I$i1DuPAWBXUM1cS(QZ].$VEB^3J^\L2>tgu[/LdpFCks>Ie-7O`C-^m:
%mrj.'q\kV$7j4r1&V0c"^ouo+7V=%p:^-ncpQSeSUPo&N=D3dW)-U<>1>gV!ifGS:jiD;g]OR<rb<87E&'XD-a2TT8HVkVgA!':h
%)iHuGOF5X.Tk/'*%W&5@?X,V)fLM[(6<ZtR<\$n6qhV)D;36;65p1e.Ob)@Z5l,Lc_h[WcZI-(B0mJ>RS]mbVZ3!nKC<oXON*h[S
%p(d6`]oadXefA.&g7D42H\MpmKd@n5#o.;F-?&HO@eDlms.<2fp$h-n5*P<15K=(U?cJ3RZlsq<nm6@"&@FuVV02Y/?s/tba3:>+
%imZDcV(_#3?\gWQ)VT#:pAklK--$4oTSuW_*c7:p6H9aD@aldTk,W&-CO9_7>m#9@ZE^/PUbo9e.A!uY@.]TV:$V\QHJc!-A0gFc
%P[2EDcFEQ!mBJTVG9-p&*l3IA?a7<e;b@IGCNC/DO2_rRA-1?.3XW.Gn,'gMQ#:FEA/<EE!SYp2GQ#Fs^7HC32\=diJU,gBJj=X(
%JU\:/$&<`+^'`eDoq&0H]9/Qj/\,S6TI/2@(A`?uG8aADj=9=Nn4mM&!J_>Ah2p6;?QcYTEB..==pM#A1#c??V,k@D?>^fF0ubPJ
%>7FI68Ka[%\=MNF$E^oAXk9R<Ziec#$]#&_&TLs@i.snZ)$iQP=?<g":5oO?kmP.c>Bq]/KM-1>InV>5Nmq7poqfI'XJ&?s%bu87
%Q4r9ETPUU<:F3>lGI8-b#>V5!psIG^L3,<0lhR7-\M\L>I67hRiitB?V]/%maN:3&M*X.>!84&Q>">+2ER6ZLdJL1*>rkfX+d,.4
%C))f&Vn]4kg&fjrAou)]Mi)]b?_2,l0R`])r>ANqMt\-kcPjDS?P)UhTt6#B!S@p>!CT3sZ&T$Y=_87OD"f_JT9hNobV`71rSg&t
%)V:ep&664F;H3A)[p2A3Pn(j2[Ydpr-@Fh]=aYjh&"k"AG&&crDCQ6)=]Af]]bTDLr_?f[/$aVg&HVB&&%h$M"2CEK(u,1,&1+o?
%SGYs3CQGXgY@88YqGk1:5f(&+Q(gQ`LGQIiLp7ODKI]EB=Dp9pReEm6hGpZLj\sW?;JT3??\B[f<7nd+'mF(?HoX)TYsCX*>O8!?
%9a/n4]r)\ml[j@J-WV:lL39n=$f=_IEJnL4"]'&Xf7\8fBMflp7g!6L;O,"urB##&cS'_&2=Ouolq^:9RQE*&>[fLC;@sZJf=`M/
%-IK&#9AQ1=R.\P0IR7Q.B>;A&.C\_4*%;9+9;fk%_I]o^9<[deqpX!=?4'`sTHK@5(G4HD:Lt:DHKBQ"e95X;qJk/4*;@-X58LZ'
%bS3&Oi-.[9eIEO5BITM\H/@FRmW8YA;Sj>K0d27'Q#BVJek%oW$Hc]+EK+B(fOb]cO!A4L/J8XE&SpMH$j]4P60GTeVbq8/"QWVd
%ZMNM1l:]@B2fmmL"^'no#EjaQ(gU!$qpR_anE\bYH05I5IYolQ3FH?X0(LZ)$Lt>0\n*&;hGL?WTOX>8LhMWF[tI"J+h](gl%o=D
%KU`eG:mm2PI."Zs?9k$@_2dW)fc4K92ca9Y1Y_I4lVuM!1ZO)Ja,iU?Xu#PF=c4;OJ@)hUi#,HAL:=Tf)H0j7hUG/0DoBZ2^-n.!
%-0M$HJ*JH.>0fs?kH,\)&]ctpV2sDdT!GN:&T'&(p<Sa',^TMBU=:.c\8pL&ASK@g<4$&-'CO=8L<G_mQ9^$_nV9J5&+/_YP=(P%
%p<]dYMEOHgHXr7'Ke;pt:`dmX$d*Zi$'TQT.ndq&lAJ!d#pQ\BU*aDDE-]qe":Ju,k%NFZ+X.=e<B9SA(99_(aJ(S71.Bjk\5W's
%KT4/DfrAL;5g/<JgF;Z+lUfd=*CN=_<:GZ)mI9N@cC7/AEl@BHFoq\cCFgpEb2idb,%sMjSM?5+$O*qn*Z/e:,mmufE.h>G9QECl
%Cr!;L`f>3>Lk08WfnT9DHDg4)X<^MG,EFZ3CK%Y"4u2Qll#G+[0#Ln/NO"9$CpupdpfF_S.!EU-g>),K<OoVcE,%%ZC905ed:s6D
%XO>DkYs#TI\>_MFDM(QQ\?/;F6ZajmG0XJZ_TTY;A;`?C1=N2n*hm[g</kqbWnR)FA4P%MEgF>1VVb/;n_1$<1fVn-o$sPqX!.q(
%W_Nss.;hfM6)Hm;Yi;"@@pSBMKa`/*je)&),:RI_&/udcEeX`!5To@sTW7ZFA@N/"mH69]IemiM&9X:&:comSQM%DL6:;<<&)ulC
%VVDYh;0Q8HIG?S^HSC<l$qZ;a=e&.6[V;W3Cr<(e(p?G06cno8B;+sXO7aurS^FB@@j_8^gs_e,/-S=t5aT:@&p;[Z:@P>b<3a!/
%S/W$Z`7']f=>>E^*,sp,q8,j-O5NiN&`?A;:/^1N?B?k,LB5#K:'H7$&RF`V!9Rj+/8Kkrm0qgUkPMD8,o1GUXj.Rokes4K?kj1_
%r-Eg"?9\W@.;L.j$16s(2?$%',+Q3]of?XZq!Q.4LpqoQ6HO.%Tkqu:H\2hPlX4@Vj!Mjq_k<(&U[)kf6c58ZQ>/<8IR_q%U_38:
%nOiFU&rbATT#fgRIW=]TRA@WIh=ZZXiV-8uZrF&e<2.4KK!(+r"gF:9[;q7g6l?mDW/&mZbmmjV5`F8?J](C+kIP[SaNQapOt%r\
%O/@&rcrWBh6:_MCp=KA%f\brkP1C^ATRsm'E\245Fi%a%U+]e3^";"+>87A)iTp<5d5_]CK_*-.NfNhc1B5g_U-E)r!Ilq%AXS][
%l+7jX]b,n^BHTIBGV<L@G%bpAC*]Vgp&H:^RfWe$F58OmCtIL#G40>f:6eU'JRV*85/;Oe`!XA*()%OFi.+]9AsOWF/f]^a0jUK)
%<-K!<D%8EIM"MrdSU[YZoJcsgrK<SG46d<pY/V[B^tB*iaQ-!GCMNgE'_4TaLiNk:#\'@hhchJ\\tiK:'UaIZ7aJ]l02!)>e6I@"
%+eNRRW-bk!B^"(>6g'L#MP7uZU[%+N"Da("nulL3JOF'/G8i5*HWR'+9^md2!'oMJ;mh\b;)TXA"Q.skothDaUfarL\n6S+_X,o5
%08H_HDCc\hfN=4LIRA1aTr;fhm3oYq+P"m\]32%>)"IWI2hbt(HI9t?59:e2=o3&,JpD!#&XQD>@QV^-f9e&!1n.)=V3I=VAp`-l
%*&hkBnU:b7(XKmL/<_$:4Jl53d!S/BOm_J-ci&4qd8,7P'@JKM("NT>6eq:qeS7JRJN1*2l[ZXS<)t;W4kE'n,4jsE#Yk`8C`5MN
%J$Z!K?CC'+0h'RXc;A[rUg;"tRHqk2l6a1n/an^F9Q-eb?k?lpR:%W39t(cuB+RMA0lX]-'p?!tTTohbpkh\mN[3PLRTS43%MIPC
%TA:'),jGC,?:/l8$O[ek54l>uqC8GCPq=p3`ZdrUm;o7$+@3^0$u@,N/#4g\n4?*XCQgq9o]u=Hd90^#!VOn"8bBJ&0(U`*&`J\>
%(QuJE[h[^&4I]3E_j9?s>d.L>Yufp3D@nPX'[a$c;-GQ;BY"`$@X_RJ8\!YD5H'q^>1tCU_tIKe4J.%3^2sSJR^]`7d*^:/l[:_*
%#Ha\gLlPYr\B"1`L_YC(^2?U=`o<>I;3'0Z<)5+AKO.039SkHC=MKs"<%=&(Z]Mbi2mW#&of:3,mEcq>m^p37Ti%u5UC%fKN*"N<
%<=03gkqmlLDVsJdj!pZ<(L7?#NNU>UIZBoVOk'E<9cu^X(^@M]_^'@D_F1D9I;MKZJoSgMk_mjJh!:oWGY1/iBS);d"A-=BTMnCp
%"rjH27.p,FC-5B)37CdZU;32mSLu'5[IeD6:(\SB<hOiNr'/DUn`>4?Ip_fFJO#5E?E42(Od6kdBMOd_Nkc5Zh"8g%\+N*p"_OYd
%\6\5YSX9!_]*LpXos1_Di$mCVq7t(Tk=8k<07[dR7m8H>iBO401Zbj7&4Y][oO/G,#bkQ06OEL?)eCHJ[K^1TgecIYBreLl.+ec:
%_6YHM\@5F7a.]%Y!OfPJ<"1Uc@`"gt/JVRLb.8@;WH-dg11'[?MT."rK/_=q$!dX&-C*I_nR;;BCk_a<]db6UM+,lA8EHZKr,qqB
%G5)'a7mP1(:UhC+OCRTh9pbjmp";L?!\FkYWe'i;BV>^"bO;%o=iScT?i0YXT:c#s^FSWf86c-"K'1Ugc6Oqa"q@\]+2.nLlGJp(
%]H/$=BPY;n++qpRBuQh'VDh5tMafIY"`FnrrJWothUkBP+uM_\cP#nJo!,Y,NfM_D/mJHUZ7hX%E\kVJYO*!iOZ[0)%.FG<L1"mY
%C^;*W369"?W*Ze^[XDU^lM&JJ*!*.ghWYI'V]\!V[SL%!T+B]>,=B5;*u^^!2Dc<(qpY97koCu!M28I<\Wnp`dV8p##`j)el_$[Q
%b.7,BUMr_QgY,nOa.BD>7INFWPH\D<9=o<3hT)XbitlqVo`-,-^2(C/YO?ls&T!<\gqf$\mp#Wlmq6mF?3nOJJ(P+NWHD^<MoZXb
%D%ooAc866ef@:J0O:EP3aUFV0*ls\tES!rOn%Iro6\r8/]H;]`OOL&-Hb(3*e%>O1OjbB(B$dMsdC!m=Xi#/O05([*-RB9A7&.i,
%,=OW6mspoWm6.-9/3sJap9aR3*Gt*q"5^Pp&ar\PK>s`r.C^TilI(:Tfs*VN4,&P7,k_-^<q/^AG()d@;uGVITiE`Q:)4q35[qD!
%qlIgk/K"k>oum::s,KQG,`#o1`=A9=?4)*89GgkY-IgD9Zo7&t`nE$l&[=?(QpAF2mrX7PPf*[R:uN(b?$RM0p@\'^H(_[AC?Yug
%<W=n2IX%,0Bp3E\-edA1M3.eWF:aL`]P%,/.k?df/]%^f9E!L<borXt8.8Z+`VXsCPpGL13o@T@'">d4:9:PWFp_BeU%5q&0Bbh1
%5[SJZ3S=.RQ"+P?U(f2elPiA.F[*j#c(UMJKh?h6IpcY1'7;QWAa?E(Y[eF&#@m!VK$eGN&@k8+_#5`!p?7+;.qrPA3-A'lnn/5t
%G91c'k86UJII62RLjo29S<.qiMo>3A*:f\(A@`Zcj%"Z:8RV`f?XX1]?OX3/XEHJ4pp5Da0.L./QZs<I)2t9s6F?5-g\1qM*"hL+
%-9]+0LipKFWHqR9bUTQ#s)Z6/]/l8/oiRXZU&caZr>bj?7T$;kEd_A2$F'kuP=CET*#b>.XD:-8iA:cT^Q"tB89(G:P'!DSG8=<b
%8I!b>5P5a1;tU5[^RcMcSYoq6!$nU@\Oldq)FZWX;j&b%*S<HSGA#7'2P8!_.=6gFS:c$>%d_jZ.;pKk`:a;WZWaA4L_n8N,!o2M
%ld8S<&/kSrY:lj.gSFN&G<4!%M;R_kWZSsHA`dg^T@!KB[hJ]:LP/PNDP$pBELPhBBQ4=$D89^X>$;OhY.M#nSUF,+&R,$Z6hK4/
%"kb5I8#`s!W2e-gp_sRrFVoB<'m78QE]urfgDi7/1A[/-'n+PU(3m^"AI\SM1FP[jQ9dX6j$M\',.$kN&#)JmXLK7;`04#tBOlg)
%o)an]FT!-K9<X?a&[G:P=Isj7<:)GXV;LuZ9NB[n!0mPK1"DD.a_8fme0^=gG$L1Q6u^*/r><(A\M')>Im:ug1N('u5Z8_;=`OY#
%ft'\CORQI!J7aCqOZ"!4C_tl[KV&kG"VK>aGc1-@*a)^B"#hC%qGEaL,6P]P*uLQ.<!!oKVe)V%#6djnA:CmPKtluV7<JtS"MqI>
%H,2jja:p4W#`4P%G[iH06QD:de;muigfQs`9Q@-/?#SF9X%-Z*0QW'I,H:r,$\0S'WXkRW=sG>(@FU^Hmn7@>2,kmIhTbLtH`/"]
%=S8d#cJV<j)&#]D#Ds3b@+IB?9.[*3I[qBUAAP^0B!9??kQrk%i$gKn5t&N%1`].f%aQWQh^>\_54l+PcQ)fGO)[Y?RC,N[$tIJ,
%B06EN<I>FgC8i*P-)()gL7_o5YD$!WDue:oA;`"5b7NWjEq\n)A""5f\O8O"/Y]n[n<dT\j%_'M[pRf/Kl>\[12M[E-eoG#Z^*9=
%e,)3O.&7W7Y8p1!-6RptWJr0D?UB^X=\9"PQ01V55TqLX*gXB0FmkmH0?a(,7Bd9p#o"Fg3*TbeaN1RJ8(Ijn<KU'4ofk_VI^ZG!
%kZY[ELphbV@nsTX\-Z'e"UD*%qab?k&QS,-+WC$FR\=EbM5_jj>`KT^g7b>\&KbN)3bmXpi;Gq_1plbEcm#*)e&gm8,,W-lbcT:[
%a"gRimq2<-WR(mS'DatN/PZ1qd)uehF/k%.41R>:GS?%$pLpL:6ROSF'?*"?dR-FqXt(V5=6ElqS8\l/9DAi(RgUqdhApbAJF-Wb
%C05RPc%&i/dl@;aJL::<,7#I#@UOlMeF#..YtT3Z)/oqV-&IHh7>I'9&SQtEX.7b2#"%9$7\2H%cr)eA@<'=uQ9Q-Tr2'KhM'XKB
%HpHN3K7NL.B-n:l18D\!Q6iWDD?TjOW5Wjm.I<'Ro/e$$WY&"&?H'=h5M`p;o*leQNe;laUs3.&Os7*9AR+dSZcUQo?U.YU84=HX
%`Xr6\ET??</guE\4kb4Bl"TU.IR+A^!'K0l7o`>']@?KU"2CEL(uQ[8iaFifInj>Ej(nS9fKWua+@ZV8ia'NTD!iJC(a/OKCVQg"
%'Y>S,!/*VTa0mbB[.(?Jdds?'c/)LS,bI&80AFVd$FpdEfO/;8nBBV>c1iJ.rnAC8Qjpn^5st!j7M.ZKh$bC6JC7K0&]MC7d2.RR
%bVr++o_8V)B.V_PWXJ2#-+Cr0fdUqj"'Z(oTE*n]<!\J>,'itD)Hig(47m:9CZsnV8s4PbHU",7o[D^XKYWpK5fqCM(3m@g"fMO*
%N>uQm$>-A2(J?QrjD_Oa)Nu=^PeWLm/phOeC[[5,()nq$aMB;uW&'B7?'63omD5t-&u*OWNEq=Zk']PM5Z6UTWKbQ;3M*X3k+!!B
%%P8CBMGCa]$%]'k=\t`CBLQ57]':nR-'WDu10okgHO-d9p[s6mTcn=_8"Spc7`U25))'9hQaWb8_PR.D07D%qJqXCK?E2Pf8EfT+
%?dFca-o@^m/@g"gcM$HOs!hX-'GMa"MV:19<\$@p40]:B&rIWcjEDIeao-P?@Lc-_1XjA6j\"&*2GW-MCU0=_ULQ*_%h%rG^>RFk
%kjH85l[B6hl1IuY-WIK;U%ei'RGjo,+jn8og8IDMLa-a2oVJa@OiOX1Oort(:2%H1a#(2U`+am+$A0jsE2*PKbriV">.BKDb#]nF
%Ud9tc`k.8S<WU)`%[pMr26q.*k?N+0?6SsV]49u>e?E)"M9t^PMQSMD,VTjgL7T%dH=UT:Beu[f+0J6q-IDC/223Ea3i@e2>E$:J
%o_Qes\:Qd+TGD-is/(fT8>s=FCZ=4uCo.kF4'N+e^](3iT)jp-Q<ddL`!)6O$g]Tu*8Rer<UKX;@SLbuL/R[B"!L3a=IBf[ME8TN
%3M&']BE0:7KkL)%j\N8'V5E"cWb_'\+OKQ?'MLPJH51r?68Rp]J?KSlpQEK8O/YP1H%Ykl/6j$d:"]E#[bUO]'*iD^7,^Eu)I$:q
%ocqAgSf]j,(gS(eX?@rpqY1-l.X"X.'e72.S$8qIf0hap,#3l'MEh?Lno.GB_6Hl&S!1"58m8a(OIFLd:kQoBC@O2t]dW'TCc=Y:
%0)NYcJr?6Qr!Qlh[2[d.iubsjmXmF:V!q*bBh'o)E^.7XN?IK@b[\0i4LAOeJOl;^m%!@>5F3#SAM2_+9^[=p/:\d[]VSF8i=fbP
%)o_L*g)u37Z*Fss"2gQ.Al4!qVpL'gq[&7TTDTbF/*nB6QGB_>mCV)*[Z3i!=mE09)SJdSF(1kW&;Ymkce3Cg8/jbc78++0W\,Ht
%-0gYMbm[e.!5WeDYsrRCE[e<VNfbT/<.:BhiS9Q`Fo8J2lKp_ZQ1F;Fce1O=V]b>ZYO(CjQ"A7r&k"45FI(S6_!Q7Y]WE%[Ttl:b
%N56GUD%oAp7IO-[i?Emd*-d0JPi?cheRpJqCO`8F3mWN60h82u%=*GNB[kY?UJgZ8<!lY]53MceG_(>Vj/3IF1[1EuAe)l'gg-D;
%$,OfNA<giDd=@63qF2q*ORXUdXi0:S4@c#qPmPcMBgEO92j_.Ai7jq<UQ-p)T-\M#F<lr^TUL7AEsgFVCpD9PRQ"@np;u+n+0p;+
%;]3fODFr%U<@9FrZG/fUQ;3O_eHdj`3;:E"lU[t-!En\^O"?!c%E:DR?%?Jd9rE]DO3Q>m68)3X)WZ&m0]Z*9Hf'0%lQCp'ZmY+^
%hHap\k(M4KN1K]5p0tnnq"heIeBh0VchaQ;6s1U=k[3$^C<PTV<GE4GXM1_e1\m6bg^r/h&r:d_HNZ?d\Y0"9<3'@Y9P@RRAh$eL
%aRdi3d!.]7]!/6IZ:OF#n-GRDr!%J>OVN^h8U[Qm\*0?'a&ZG0Y0>,UQM!K@bM<m4Xqa:h4r%XJ.YrtUb[r!1o`D'+!cbV_@O4EP
%2VcWahZAs(l&Wdad7/M]1GIjH%+J<[2Ni6Ccj'c(4[1Vk^.*(L/0UP_X:kBg<<e#t2HCGkc^QEW@>#6PAOG[>bJolHd^;#WI<J<h
%mV,04$:%("d@j"4]&$C)0jQnlGlLSP;W'!\4f(ej'9hHLX0G:^Y"NN2maLJHY6D9Al^sGU$[5Nse/ZWC/>^!Z^SaCb6)`:b5pSfR
%>Vo+,)+EiXQaX%#6$dIj3'\e:%36ra-t$B!Dnq1U\n6[\*2)d^*e7r#/BkU/553OZ69kE':.T_(5t?<?L)k-m!f*_s!jjX0K9j75
%^K'(mZrslb`[6NVE#VtIQIJr9I\S3-^AAHod`ulP1leLB,8P#O5eG8:nX"[2d87k<@Of*dJ445knV=*:mr"/8?f2'cQ)5X+;c06K
%MQLl/^lO2e]Ype$6DbM:1p1Nl"1]uk([f!nC4sC/]p<UDm.e^S!lopW1A'o.Tm6qne#MU`J(=o(oH#Ga:q\,ooZepa]FobnX=B(s
%5+,"^/N$)i;-`\H<pHtY3"`8\/_Vp/KgSM$d:.!(?G=/;o`YW_qLl:]L35;X"ejsq^*stiiHgo;NJ?k*8dsO"1]7+d$,q&P:WJ)+
%$=+6O8W'a:5fAqBUX.j>F[Kgq*@])J$2h6?`[^#_0CTT8kg&ESS3eUVGR7ke%n9HEGMj@!J]j&\SJW1_bF+C3)B)Do3;qGW&c.!,
%Zp5]1g0tCrrp0TnYL_p>r'10.EYsp(Kc_G*j,StUC$1\smnf6S27Y4M&:M13TJCQ_F+glFku-F<09S@k)D*E%Ua@`6.t/,q.5Dc)
%F/XCF&SupFB/!PF<D(1==tKhM>%hWVWoNG?j\;R'Q1CD*o%M$Knlf?/F^X7)+/1(U;j<*O^NTX3PB^@d[K!-Xs5h#!+9$cgqj2eZ
%IJp@arV!_hs6Y=9TDsb'Dgu7j0fe]nJS)).j)HN:Gp>gV@:IYUKG,^[\_)OLNP0dH+"BfT]UIe>^8J!-0E?m8pLu)eT_\lS%B#HN
%IS)1s.^[.Y9]G_$Gduhi<'81,OTY=9o\Za12m`DWiXqbu%=NEi,3=so(M'XT`t58!^[K6k<uVf1OAqNkC;`j`#3aCTQlQ4^<h3-C
%K+&s6jAMe5$,f#jaYB4sC^BomHCrn$C1+1a'!:3@n&'@LS7-*q6d`))(\V0\JnAK!*q_lr=uR%4[$8WjPP`I=EF[(B-*]-mA-n-`
%@K,$ODb/qb1:gfC?sVF;ZK]Dm/n2&;#&!l<'`_')dD?T/Hot>8ZQ(>dV68<4;)I*#<Itq=qlVRi=iPPt0(Cb[TIfr97V1Qpp5"<u
%*t6=#'a)A5Gs+B2cGba2r-A1=$\Mp!FRU&q="Jk$DBX48&ED5ts)dT(^W&M0IQ;?G^NVQn(;Q>s.s%N!%lU_P8DpB_Z]VSiMZET0
%>#K4kEH.=lPI3.0U_Ys%,cFK*YT3QjrDR_rijV'[Y<IMh\3<D8C?[j_E`TJ)>.0cd(X;R]1/da=^bTYPR()_T'S#Rn$gSLu^Fr(U
%H2_FLo4VnP#=*9`'QRoD%M=g0cKZ@qo-HPSN53X[J+WOpI,a'@,Chs:!:Dd.[T@XFTUQfsD-n5DkCX(\\i=:sd<(CI:K<Y9lIr2J
%V3mb2oj@!TIrQ5?js5)07i^hcmUl5MNAq1h.KR(<JACB0T6>apS&jGVNM/oger@3-#\;9t;Z1LI!MDc4*Jj%*[KEAVb;t1S4+P8(
%\"3CWbLY+Y/IStPn8=1#Hsg%rG1^9m4M"\,,=)t-kBQX['"ucic\)$@MZ8$mi-15ql:T^a`:(V+T'_\Z$1J*6,M2(h&i+&a>Fo+P
%KR60]W9'\\/qeJ,:l94(i)jmJW^IYTK7XELdG3I,*JH<kLD.7llD)^\(BIF2IrM";D.+MJ.@Elaa8Sb")4.gRr:Z?GUhD3D!m@D[
%cT"_]Zt>nYB&;q`!]0n8Dm30^o3U"<XOael&!XNR7"l4+l`?$t=*`PGktG#$b8"tT,s*7?TlFGcO37olO\:33T\/2K?2Cm5qOV@`
%@%mV`^HlE1D`mX[g8&02ndY@#^UnZ$qY![DVC\BdZWcq,,+oiim,_fNE<@Q7_Z^o=ZSa05O`5sc+pH"?/>bD7F1JX4ELkb4NDkm<
%eu5<37<,F?g%Jjdib11q]feesE6EWf8<A!th!GN"f33Qf>ZK9Y+B^<F6*UTU&l+ZZ:)1FE>:Yr4R+%siB%6iKk?@(GVX_,4ON[0W
%JV(:Y*/#8sQ1Xs?_nTErS,4,>1p(K;1?=B*@3L"/bm6"k8ak=HL=3_eO8'hC&N-G$Jp+PhH9K=)d;[G^j>.JM&Y7"`^ABcHKTt:J
%NlssRB4ss^g3,)dLf-#u)MTb5a)E8W]\@7CLXFo*b[o+JBK]:;8&^=!j*Q@ZFD"7nX*V)I_.Rr3=St&m]V-X9\6E3g6GM'"Ah2h'
%me8Y;gpaTF%,DAleB9)KT?;k^OlOfo!>4[j5c49^XB^f>eMVdH=P:GXG26_hHaRlW7]`<M[q1Q/6tCeIJ,Edg0&=[Yi:d#46Y$IE
%N0^u'Ro(eQaBk4/h`2nmW<Pq-hESp><tM"@[</X#lUHDXSGu((k]FP)l\)d1>2jM7K$C,-S@='h""PT1M,d/l/Lp*Ed(2<Y))OLn
%,=u1LFHE&a/_-dUF^3Kd82>"'#mR0mCe,Hu9`#`D+3/nBWDK?s+39q((1Ps-,3?FH]*oM^7_hJF9jlgh3ZMVXA6*LQ7n)2gL"o5o
%lh=UQhj>Qm/n8UlC)#,S>C724aU9!K$*2Mb@l@5PE6ndWLEZa*c@*>e%0*u!rm@&EZ':r\dR!YV+(RA",,f;ChJ%d#d$m9PB<%Jh
%cP3]be"2\Z'%1`-(`_4RrJ7W3Vji@.0so^f?VD5$KPO\]El5;>('ZYcV8sdRk67\1^AS<gbdS%R8HP=!LiQV2S`67cp5]qC!2\U4
%>uJLBRiQiaKe+-F[DA.PLK.(Z98.1:A2sAjLU;6p\']`N;(^;!@J**jfEld5mT1<9-"nR(*=^mObrCkV"$SO3pn4Hhi\k7HJt>^+
%M&_3dJH;k_]Ue&S,5)N[0l)(2bo2$e+(,g#k;9fF4^S=/U!Z5m.IW-6\<Yf<6c9"koX:LrG)Ja[L0IL0%mn]C\R6H%@<9[CQ#M3q
%Q-&49+f?S5hb'n33t_9X4ON@OO/t&0q/nL2ZO(VaQWWfF5KlC7oro_#Do]W+.o!WDY5j_%JKVH[/q;RS_UX_@LDQm8-W9"(ga5hP
%-NEmsGmJmPo+RJdUR<3RgHkN58(>+J^(O!^!W.;T#jf-"0Wr+RE'oOk=:bUKKX5V*NgSA<jJn]iaS:/SWhY7m]&V0d%Y3kHFg;E^
%O2r)\4?guM?%'@molc?C:GmCooNUiJ%n+G$84"J%A6*n"/:gd2!>oA'q?,Z%9EHnKqCD`j]6[O^()#:j3LT,MH;6cd\Zbi\)r\i<
%H\16.^k[KK,PA,ec2o*m\=cO^ls4`k&j;Q-!Ai/b'K\]*B<=]aC+B'oJe3YdOqoBK,3$LR)(cgP)^UNh#VYsI9,:i3BM^N/GpB9J
%*7Z'\mb7>_frCV$071VdEjXRM4ta-3LZY%_llf?"QQ_^t,+-u#BokuYE&l)I2+l?MoU2O)"b#b[Po.M;U(RHIXQ[o/S]B?kB48/2
%p:[(pWc*?:haPs@Mm=+\0t$IbjEW$XL2Dj#9r*%VEWI6.=F?4;\[b`,S"[X'3-I\54KsP-&-f:q?J_,6=p)mU;5^QWih?e3p^Joo
%8%`XTUHjd:HDe]%J!)2_'hkrfOMl>VHpj]i_VBZY9*!kL]2SWP+jTXiS[1jK=PpUkA;Obk7pU""[#qib1=kqGr\hjD##AT6;>uAl
%%J"ag'(sBP55A,Ko!oHQO:^EaisFX9Ttr2DYZ2b8@$Sb$nHb13bE&u;)[Th\@=n(gD).[frKq=S]8rN)3dU\NO+h"'Uq;-'D?6Zu
%I0>7mfj^j6j>-M;VtUfUFK%l`kT]<*RGUB+$^bC*=bd-@W,p5(RZtTFeKkYQ@jin;l!S&'(BL*R(K3,Og4UjDKKTRtFjEdODA7Tq
%!7fE%"SeZDr`o#@^&"YPi$skcX4hUL5c:QUeC%`h\EY8`b'Jt02)k!tKTHrk-YC)qFo!O#BX9Btb3R^9BUrqr"I&f8BXM<*W0+&!
%g^n=p_768(Se@q&^2r_?9)N]o^IRBFj\`76=B%YbMaMq6qE3bj.%&Rl>B[Y\BC3fYiWJH[/Wm8:*;$o(6&);kah3qn`5lEr1*l^T
%%?GoKH^dg8/K^J5V\Aha5LTqDBBf``)&;BOHd]9"HD(dHlB5-X"c5fOD6k]OPQlTpkj:\Z?KeiH3Xe#\d?9[]foa1g;SNX[,U$ee
%]BJY4&sJ&CPNR3i*OiN$W"s`*H1C"#Gk?<SMmj@I>kK3J!/1Fre!,hAI2$8,\[)'Lh;Y+5'eWU<SiQ3oSUn@<riIAUK68TBKZ1kp
%5d'E!4cAq!Yn-h=;LIcBmN>T;abP7`fn!.+C(rqQ)`oOhgQ`ZW")f5NH99?]13GPikCfF\?tDW,BP8:<0Eg=0XZ70q98t8EDo5fB
%eJ;gbhiJ2YqmF<W9hZSCB83@%5qp^`q>Ff'k$<DJ<9>HNYGF!E/'LElR8h'^;VRfNo6JFu)k>X5fHt=ik@.(_h!2:cMZbYQSYjdM
%@<!Vp8,1IUQiM8g()F@E0s[p*!@l:;@G'WN..k).A:$jL/'&6j?*B^E*S9Q1Nmh/kc-7\*A;^+9YH"\93IX6JaA:/@W(g.D!&VHt
%NENB#A/!+@C888GE%Y\jVn2DNhs$C"Y5*O$PN;V1`n'3MlH-Umi?]V^gG+6`T:ocKWSsc/`o5hD\SC&9mWUKC2uW#9i-)QX=Q?r#
%Hg]=pId$('rM$d-He;APDQLg9jfP:<[;2+HXA*A'(A5(hf@I@))3jE5j*TSdNq)<0R=F^'T2&."=8$jGii'^Y.DSkPoQ?q-ojDi2
%lNAJ^(oFUl%CXLeR<SU+gpZ23Sth"WD4>E%enO$[nYX;oK'VsZif;&\q6?tRpT*.Gn,lOM0u%P>rMYcH7=$Ce=Ape-mD[gTI+1Xb
%91MEg=8-pb<NlX\*QXV.MHi$e7RKhW>;!shUQ:*M8'>i!U.:(#qD"@Up&k1d="PE=*KS304NHbh0tI"(5^Ut_^M5uSI(*JSG'Y5B
%f5WA*]K9>I7pMCCR4dJkNVI*4'rUE5[^b1qmdGttJO)Qq(,S`g7u#fQZQW@T^HliF)"@f9&![0SBFAR2_!IQM(G).$;DJo]_*(#g
%0GE]qrMq$@JmYU&Q.`Wt%)\oPrPdYJGd=c]/3'I._Y+JUo?af8J9Lb^DspEas7pZ>dZD`C'#D3amp]gXX\qqh4ArLN.u4pn,iNlD
%05Ve@/?O;6YX+[m/pgiT$+TY>W>=DY!cYiJM?L)$-:!W$i$(Jm:ST2<9-!<'?X?>j>,4]mDL8f/`J35B=$")h*ZlKpp#M2A&E&Gg
%cK0<U)T[O=qp-fQqOr/(:pQGaVZX?\P>,KAIQ'`,q@noO,b0l$HEt.o*r&@]<%&iXS#Q]s2/!7g&8_^aj1jk630r2F*$+C=mD:)s
%[C6n:L?PQ_2&AI->)k!I?sZkqm-s]*hO2be2H@Ft[5;:_6(K4+:9[A7PKc"[5]SE(=TPGO!OdXbnt$1+-KGP4;ug%0>0?&2[WTM&
%R(<CP,\AVpOb/*R".]3Q1PG"Y"I&>P-]lcUn5S%cGshFW@*$s+6Rk^HE4tK;T<kL<>1e>eT),.&S5?F^M`Z5e[XQ3^*@]]Jl;S51
%GtU"tETmtsT_RrEe!<g_`I1buSEWC3o!mSM0)\dGoir6KTr4DP-dt/0r,R:,-HaUhOg`TkPZk1Qg#j5g\:"4`G:)t'Q9qHh-?sh>
%cPCM@V,Lqd0cH]MqB1^@Z4A1-<4-O@2:RMn0A$jEb+A[=7e[,gA!A=Kp:D[%`Q(W%;,ECJ)Kp3J0D'HMY-TQbCDGt!$b,CG,JK`i
%EJW*+@^S=07m45^T5$l5iAbgMOj/EF&oM!eK)1MboNlV[YZ-N>7^O,!W46LaiS-;:B*a^G1GNLr/?+GGMmDhR4)mT2,EWg#UAR&p
%[XMI[;XG$EZM#+$D!J"bqTL.OoB1UMDbc@!<$`;[6F4mo5C[ae]m!djCKnip\5umMd[TeQp<J86!)a0$/-M:>1-(%]]?XhS,H>]4
%1&mP6B-6ZsSPX-rA0-R$?/o`J*@("\n<12i4tu3dfg5EYMRa+FG0_<TrlFqbWZAMOj`bp98[r^,/APlnEYq3cL*.Qi-nG4r*[C**
%630Na8e8@Rn?TgA1Vb6`^/U:ql/[eZgbLkR:f!d>NqCI+>>RG`(Ea+**MQ.O/1234Wi>K(cg+*>MoI$T"EQ8KPN)r7.80qV$@sb+
%-e3.lpFO+j7h%sU>,a705;qTgaW]o$VQu/LU@K"mSqgD@;[N8cNt^-d>/Kt[U+h;kI`/@Q46c\5#m?L-g;qU^Of[VW:s%rO@do`Y
%L3Q,3f9nNE0u?.%k9Dfto';[F7*CN4&@c8(&Z0Rik"ZW(J/L5MIqK,EQsm_XZf'X#Q+@*h`JbT)%ug=1E_N&Uim.^WEK#B>qNd6#
%Q1T>nBkL_<-%3^>K=WGL"CdiuBESEj/2gaXV"03ug!6n!bQqb?5bf4YX44-m"<RH_SEGol1%spg?9`uFCON/sO3+%P'rJ\SI?qub
%(X6sqqJYgskpJQnhd;"D5@G$>Y,rM:q^L6o'XK+5^#Rl*:P)O0lWhTU_)jLma>YV9Y[S$.?mf3JrA#TQf4-!<QjWs=[Un@3D$5Ot
%:.:fo^?Ja3<5?4C@%rkfc0+$d?dB/eImBfmPaA6dT1!Mbi1g3,\'tpWj2@6u1J2OfZK*te0qQe&Nl]*1--SGTTIS[U`B/]-T=68:
%glZOPbBlT=VBc>>%3Z0N0oN!f,Vg/@$1!"2N3_g//QhaMnC:B$A0^`k_@dS;@1;oO5]N"K7\[Yf*l+upUikh;*sdoY+W0BJa4;S0
%jP-".r5$d6pA'gO?dB2&dj3=B#qD56,f7pK(A1V^)&A/Ensr0^>=G7K.tbkU[J!i?a_7gFiju/MHQE?8a:e'/d=XU%l_he>"!;+)
%bu+Qdj?',fb*)0E-LiV^q'n%,CK3I*W3\7OY$e^q"Cc&H,_lp+rSQJ$e71sk9::XW#uS?#O-!%#dHN57+\!3G?mu)1'DI6]4Uof7
%PluTb]!UJ.pYbW#m=k4H]$E'8N[B!d6$M](G[T*OanK(&p]_=5D91!*7_/9Cj(#fp*KsJgN?QLo7`_KDX%*s!;f/Nd)e\.\7rEg5
%LL"2Ggl1Z3TH/#l^^ppth+>kIM1'HL4_-PoF/>^-C)[=<WH8#<NtKMHNInQ)S0\"2@61SN<KI,;5sN5O[IaCPFC6HI4tkgnm@?7#
%kdUtq>2kYo.SnZQ+D2.``-Q);gJL/c<iVinYe!*?5l&_6<6)A#L*%.je>:ZrT;-?kC+3W\-AMo@_<WkU97kc>e:HqZhK=3;d4CQ&
%%,BrE2q8.&Hp'D4^oAc1p-C(YPMB0!Xm.:g<"b3)c72<IFXt_FCXGf4"l>'_1SZP4r^O!!.'p$e=4F)l`'Ws?*f<$f-1/:3L+H!<
%=K#WsZ0;=1L@+*t$>o[NC2cLKT6#6-3u,6FlC>huP?.2OhqjjPA(tbsRP%iuEQ)9kp#fIi%t&;Gf[',RpU[r]j8oI1#mj(kTub$2
%S#c\4[1,T3Ma4dpH$9j(0C'HPaYi?ETt2pIm^g,_jdjH2)I1d-_L$cS`7M=?1.MUprGVo2r-O_Spp#POA6V\.E[L$/?3_Xgn!Y2^
%Xc[Ld$0SN6<FRb$ZA6/(0>=Ye=k8N)N0"gA)W;&-GRR$T2*BIV>GG3ApXe]>+_9^C/,Egc-jQ<8W6`U9UF4m^D$]h%PTINA##c:I
%C^OD`]8\<?(I>gDQc\#GQekUpQVb+`Xpk(@?bhn&.p3TZCUD.6'n^V9[3/<#]L9^[\V[g:.;sd!*`K`?=l?;GEGJ.m*a7>?\]9JQ
%4ZOdo5*Sd'=Tn>lpuOjNqoQ:3`8edq(!80%)56JgJ/L;3#uSPN30B2R;Bi$8K4@K!+FInS"%c>1rM%Fg3!P/$!^LR82=LlMLRIe?
%0&$_i!9q"t6FSj6ao.,oc*4*?V";*#V.TSq^V)S(TBrWR:4gnLd!IK5PRA@>"9c?Pf*BU8c;j"lp+RJ-EY<_[J2r73X&5ESO<(e2
%.(Ub#qbE[F5gGK9..49jW(P42Vij5eh6@oR2-$<\_&cJ;o&9+Fc]'<t'!?E+H9UN#H>la]WG'sL'TP!2;/ns%>b[O44-*Ul8cfjI
%AT_8^Es!Ql.quN$I9D[Y85;3Q<_hCdJm7bVQ((QFU!LUtC(:C>FnkCJWn+T`Fi?l(omb[q6XUonWA\[,o[mI")tF\>nZP!PfT*g.
%SD;:C)!cD'-S!IMOi?7Z.]e9B]K^qe>V-UJ2,G&*'a(jTd?VqG5.e=kUlgLX!4af>FdpLMC91%Joe#k#BWn='A+K*4G5fIY(fcVL
%k9mm7,SMOXW1Ir%;&>RgHu@NEQm8KlJ%*-LD90q0Jd3,q3Es2\9Lc(7KVmW.iARUcjOWr2cUgX$)/A49R<@sCUl=%MfVBH-(D]s(
%"H-gCV.1b+9^'<0`)8jP)7_.7"D4_p%BPOY$?-E!G&\HSA$.<AiF&@OTX[@6PalTtb#P7[F9#I2H$VnKYrdAc'Er)GK^/iqBm3k!
%K3_UA;*`BDlfLQE^7H>Y?)'2kB_jp7TR(^&5MOJXR%3]I=5QLN8D#BBb&+<P0^+[W3urG>>,c[POBBuWMIfVr\q.@d:cqo6Fod?3
%2cj[-97p$b9*mMa4NEqK^PqYCWi"FX%phNarl-YNf7/-c8jD!8m6/d0&a=0?ap!MLEXAa6Lg1?u)A%<;p`SWiD=c4F>bb-6"q]:h
%JB5JmG&Cs#3?jsKEXj1n)!<uD_BA"V3sb&JDgT4"cU4G`qSj+dE6`3*`PY'WSfEphDBnD_auE=lZaCi[fmi/0qOrS4_';6<[":BE
%DEO*7a+h`V%HZ$tDTW/KHkLTTO(#Y'[,VdPOmTVN;)VED5,$GUB^=m5MWqRtE['iC0D9(D%0RN-2Gt&"255]?Ic'Wlr;:L%c07Nh
%W[3m^o5JP->W;U7ZIGg:iG_N@qt%)nk3,.]ggo2n["95?U.@?jiK%l[;C@k<G]31AJ5I.P(VC.q\QIH@OpYq3k'bk2k0f+<)&EZ_
%6;p'M\/ud`p$A&D;%,M,8Fs1UXp:<fZPcjXPS48PTimKsrqhG4fS,dK`LXR`Ur:?1@YX*JBNB90D\5g\KqFKe4?0\5l,#4([c>4Q
%JT,G91kJ.cHlE&\rj"CDHO\F._dn(VW^E=J<-IL]56'AaF*^M?<*e%tD0acNF]\eC,dE/CbO.WF(l,W3-4AXq\:WiIls1l)>3h:R
%gM$%62cjgOhZ6b6Ja[oJZK+a3QO\.Wiok(AnliKN%U_F^k3L\TYO^h^dcR..\K4r-:SnkuY.Gph*jbm/>J1-V2=B2qDTep2#UAFK
%NMOquQ_VQ/]Ag-PIn(53PD[c)CN+'CF!%/X1&ZD&\)Oj+8;P-p95qDb`HOnEe.tl?[B%XRp>2<gZE[=(;'+<3Rrks&gO-<7]Jr&>
%JTmT[L]/MQV._\*1-"9LCt1j!s"Y.X>*>1@@O5in<l.p;,ekn$&*W`UFF6Xh'1+Y[G>9Q-Eu$u&ip4,eQ/Wfad+\A<de#`/Yl@Z4
%iZF'!M#of:W)-gD!H9_'oS]_O0J@:#H1ig*X/kGNE(qi8]<k40>>$T'/P<4f^^p+h,'B4BAs:$CQ6*ViAgQmQ4P-Oil>-YYke9_0
%d2**Ck'.WTrnBLjH8LU1&Lm$8Bt;bseib)9`Os_,?_j:$C@r"t%'BV1pK5W(>*EM`g'A-JbF_W[:?uetOf<BiojfC(#al%PLeHOk
%N":pEH?N75';m+:#$DY4Q!++-qL5`.l_I!0^W,9O4'jd_h&1A1B%a`KfiX:,TMn4r1@<.6#g9`A8/On;i2A'H&KYQXP4fiiaW)pE
%CORiVag5\/<=%0bRi[8j-1EX*?,tRln_`2mdI2"VCZr2jPAHCi*H+>VDfBh<M$;?#]VahFrR"W[/kl/c__92r0dGHC\2:`pDgqZT
%S$1t(p"hn]p@#*#-P5XNB[kL%!P,,<r<IFA/#q8*g<3GE3Q4VHQ1;Jr]!`jD[6(m%Kj%bN7]`Z.(BlU$G<n/c;ebgkMk[C^GY@Y`
%Ot%:q@O,c_eS^b:lDeZLrjVXaoUou[\V=X^2i)Nc2Am'4)=glW=lisrf.^r![9/G3`JhD<kNr86r<otSY\=0)3Zsn+9/;Efd70#-
%-R*;B!#2^q/O4WTrp?k,XWUhPMnQ9,32hlFU^rF\H?rQM-No/QnqCuWO5CY4Xm]nDcV[;0Cp0Fn75=.\$#H.Q(8]?F[1NnS-Gk-A
%\^O^($m6ElA<*D$i&mpc=Jf'/U%BF.>"jKJ3%2uE&,R[XO=fjlldH^c<5%OU$Yee32sneoK>d]eDspEc6$SN\Ma2lbn-l&;it#\7
%XA9891RGXY`2RH>XEUN]"7.64BcOEc',Z8NLJHEA0tEO4B<f3lM9$aD1oT8nN]#gEa2/d\7R3FCfW&-bH[O&hP@H'W/1C%^!NuGO
%46s/:r<,(0]m)Y)kS+JcKhrZY]8J)s^;"@r#;E685WHq2mi8G?]#NR1+kD;QGkG$0+l9rtB]4K2k[lc6>*[EU]P="inRb$ECimu$
%=aoZ$e,?/Q1].6QgD,!qL^G2tB'Rs[7*QF+`N0!8qBn/Le`raI2kZ'ACBk++iE4rreE^gL(FF8@Et]Z10Lr[\(iM94GDt:4Frg;H
%WiHnqB[Jm[RC7P8.TRDBN5ucqG^S06f^\LPX)@+qa+,uC_]miQE&142[H97C8blL'9Y[OIhCS)_U4[4*\nofUlc._WjKm?1GIK<8
%;p=j]Z3@ELrQ1*X7%CI<FD3-MiOEc@0aR1;GRmA-Y=Cs4L%Y5<rQt)fIa?d%r@qFi-.cY*RJH,q-*+#Bi^0F9*1j#,&AiarmOXU*
%ND?tEpG\)F39=nR'TE:pP#d_h*\A/#>k\i?+*6N$l;^=^7m%8n2i>KNngXbElb":d/K:^=f?!cmX,m"UhTkYP+hdS>ko)(>NNQeM
%m`?/mdeHl[fpfrDiE6R=Uq7DqX%(:cJ-FW0Aau]&^)#BF.ZBk;U5laa<uik/OhGKljNOg=P/X3mp`d#aLE2F]ICrq[G)h&GA08h>
%Y"Sp^6oO2;-PQNEflpKkKZk(M:ShY>9]DhpG]8tH&kq=!;U:[F9+RD>Xrdb6]OMZKp4#)eHQA*Z`#Y9=H^97BDhhiGDt]K8akol7
%+72##S_HA4II5WGg'W;Tm47`TrG.>V6gF!M'[%N0T`hdW/nFO-ddN]LW'AB%I@sPHGXDM[j@\rp2`02LD;%efUKLY]BLCf842M1g
%2f5MXkVd9k\E';h.-ko`TabR:Wmt+sL>L2D+[1l=J!^<ec*99jSAYD?,JntFKU.nlkF0CTBgWtQ5sjG$KefCXme`JCj\/AEcZIp=
%\dO#Y\?tTI1YUnS*[A#Bj\8ecEDpFR2s0HFfNl3mL^nnPcRo$iXkS`\@om$/^$0FtpUKQV%UqOqYpEZXOA[V:*%A)YK%bI?X`\L(
%')1(J+e:[qh*J.K</N&oXhXm9^SXDZ<c-GRMqY(C9ih!&oq$sckj47"^N=C`)\FMs^[7eA1Ws[M:Sofo>9u0`bM$cAr,C-!./"%i
%J1TE@PaZ0hF<08D)m+b>+1pRq&SL>^8*j`<V[afI2cG,!qN%R5f`u;+8r6*=Tgqj7S(FXImMgZaIR,Xt<K[5.UD_O#ZCI]*?IQ3a
%7!Ac3AhR/*V,'EMg65:^LVEL]8au-$T:dhe\Qh/P2lt\G3]R!KP:OnO!u;P;"dh>?bJ)epj'JX+=NA_9%KMUFQB6Vt@Um*7`an!+
%`[/jZ:5B9)k6>td7^+c_WnCchMp`s'UQY<f9EBQ'^W4;10bBt^fd-1YR0?G[>=_5cI0o9:LiqNSe`QY:D'b+\(AuQjQ<W*8o!C6F
%PXVKXjob\AQ[_-(gg_#pK^uj,Uba]RA[?#e(dC>$)?\R\K.4Md[R=UILZG2-9Aj7*Tur]*W=f9Hk5"F[`A4N(QRa)pHlCok17m/"
%AmThkX'kcfY%a)\,%9!_+fn&iVq902\lJO[)*T25=@n(C/-?!A:uXbk=o$^%(33+]^i4lbGXk,T+N!:d"b7HP?)CsR&b9(dT$X+o
%E?4j336br,8o4lOPFOcf..P[9IO9pNacCBb8?n0X.iaXE#:X8*?#>\1+^6hh==0R^II/W>+`J/:"#7&D6er^s_iA-iDJG"L0ocW[
%ik]K`S.0h'G0^c>=]'<Em')qZ'MEP`MRAL;cL\O&:@UX?NXCZ+hN+Qh<Rg>>*9KY-D)I-dBV\hHZGWA'GHl*B;3dkULMDC+7\,:o
%(]M]X:?g7-L9CV(c;VeN+.CbngAl/@VGloBSbCXtJTk@[K@!!p/NWcb#Cs*LSSV$Q%Nj"`AqT5]Ibf1#0m5`r9>URWg2ZZ&l0WWI
%+H62.9/Zbu%$L+-(]Xe_=Ui?(\3941`0nBq:%1Ls@Q&p+FDac0X8t_`7sW'DmRoOTo4U_A6+%$bkfdKC?W,?qIcgdf8?QDYZ,o&U
%k=Jf`D]\9pZMrLp5*N(?2)kgh1T%;GEa_4Id1M.GL6<J0eopGE8E+*/k[*7oB!I%#`!ARSlG>_uc$+hX7-7#.o/R[!dT^J"W]PNn
%]<G;d#MPjV9Cbo(XJm#HEln0ZVc5DGG(pN!3%QicdHe`$2@HK4^ADIrU-KDjZ*l'bl;[j='%tC%V1#=S;7W'N=!\l&J]IW8V37kf
%j"qScXc@o'_>_fg5*rA.s%FdC5HcHD48A]BVD,,q43,f-O;,kXl_VSK>C0,SO1DLiGh#ee3k?>+3B>4!07m*jrT!G'o%U<cfJj1O
%6iQFJpT&2ppNVX.`Z57#fu+)P@8SG!?:'2e12PMf'No"U(A?Am)*NR&Tf]VGZ?J,S>FqUMTD5E^-*-L;m[;5(ia4Jc/G&g7A#N[*
%1SO[oLb0OOZDVq]fa3oukNg0M=1]JseKq^q$V1+h(">aKEiLdrK)TW+h'9MM,Po<\*]lRbGh)1$59dGq=Oi0q(=4lSOVNThk$kM)
%eFJ*+M7m6M'*_qVG"@C/eG#G4o2$W-e2VlF[X(lNKofP!&pa*$2l#l;JR3bL-_.E\8o]PP/fDH=dj(2b'tLRQaVu_/.kZ=.rQ$T@
%>D0nKr%3p:`pA?RAqCQZbqu*SrlDIg@kt?1CHLrBH==&YC$d-93QIH;V>n_[^$b&lMepsNGI2=6\q_I7N0YhO5T]dY:F408.t7b-
%Es2BY@+=W*pK[Rf718TX;]4Xojce?U]ArNf$D$Q<72H5hm`\7675U3"UMBSFHOn*9c[jf<PNh>r^>OIn*_(J*G7nQrf9e7Rk[]9&
%kMEtEh8]Z.HsD3>'MR[&i0oE)\/>BYf%RNr2,AXs+IE+mi60Q@W0AKhU`=KRhE^*lboXDLSVaV0/uheq6J=jF4`=[oX&^e\Fu^l;
%I*k!-e<9![(XF+C^38SZ.rIMSR&K6t8n:iu:<qK?QHSJ'e5:#Ab!UA;_*?qcRt&4d#:(Gflr)P$]66TY]qf9%rR53LEJN?V]<2GU
%<I-oi>>mFp$-m3O(>$2dI!t:Y=_Hks16<7-dC6O8%6<*c11nb)#<h:9Og3tb)ZVN?#m+4q]B5/SL,du_/mo=g<cmJY@i2fbHWjcj
%<W-gupCDE!Q"5YU.beAj\&6LL)"ZUkJ%Fs;n#gH<$l&g8"+VZ`.!N'c17b,o]6.AVM\O!_D3HN>c![F-bI2>]F`Qk?gQ5HX"R_:%
%ll<R`XC`BYa5E)ue+14eLGDVdIgm6jT$C3(e\7<JlhN\]!V21Jo&?mCm>I$3h=QJ1N/8*pAA1L%,!M0__i\7n,nnCXaHVf1Cru@;
%nlc(3')-4bZ\"*rI-mhphfkFeKG1N6*B/i:@"i:1$`agBoAlIthT)+SNU*#EC+GJ<,*.pag<-:Z!7FBN'%C4+e=7l)qL?4.3j>#>
%Q#ARVm8c\Nm4JR`Nk+3jjE+Tbl:r,f\)5L#O*I;sM"=bh?T=\DG!8ECT0Y@cWi35(%-B!armUcBK:hB:@;rQ;e,s%V8.4Zra"clP
%@>n=/Nln/:aWA]%$oo@bLs=JNNY[YaIE9%JS6o@$.[r$O(m-C32._9inX)Q>GgZ3Nrg4XCj@B/n2q:jm#W8IL7d3N),Q;fG*NONR
%jWNB1:>^:Ee?(crh059d!JcT;CS]q/b9L&Hl0dKQP]d*#G=NEiP39AF4#puR]49)IPrTN;ZX-6-kUmWGJG0VbeZ<j(Mt><\q<9(j
%Kom;'mrjEr-T8r7;r]*q(guo%Gtg\$&'SgXA`kq9S_')`KeU"$#"RsNM+p50&PdRAlElGaR-XK*NM4uh66e%N(2&<FpZ<5Q3bDbT
%a*ruOkH<MIDuQB(\_GM&d`ng/Q*6VPc=K,IC^5e\lftb8_tC%Aq>IR%X7gM;'tg*X@D"4V]I/mrht1QdeZl\u.TYoCNC^,FIbSHD
%@.)AE9U"[<4n4lLA_33eFT'\h$Hr3bUIuRY*7+SD7RLRB9+K>R64]P=N@ils\0E?@A,FIJU,UQuK4$5@9C%l&:r^d'h%O5&b.k<b
%hQH87_[4#k55p??CZo\02SeH\m0T/tGi725YQ;J2V$/rJl-Md*poZ5$^St]m(AHiDP%rdbl=f.4mc[-qG@7/U]F((ZW+``#kSAC7
%LL!'o2rF8tWnTQ5OgB:#'u$EDk?=&"!5QGnGLF1S^33eW>mR[[ain%T5+\SfTD5G4.,VM7qn$Jq?saql$UCopm`#raYoj.f!>ITG
%/d];p@HkK+B:8"Gg"uJ^$eIZ`&ejBM'`D2dSP[hJ*Z[giX3_nMdeH\Wg]S19eV()A6gha;+e=B-7F29@JPTr'akkA6]Zf)q[mq3-
%RC`O7:$WD1hCd9LWnnFpl_C,AO/aR@\sH-8d.=B_`]Os1-b7?FCR$qrNYUQnSX0#mD<g10SD"L%mjAb;ht\^M=4!-R#o+!+re^jD
%mq]17/LBl8%AC>1ot8cAkuje6AOKPc>U+qoc`1]A]?Sh+N_%$qgKAG4[,=#'3qB9"ap&em$;oNI70UZem[(YrQ?S0'd=;lBf%JK9
%Y5NO$+04tX\a2R:=5*?e9;Zb9"D,=unqO"RZD68RL>I6o+E#F"VinHtUMTQ6KRKFkNqh6CIj1:E*AITS]Q5`(h,t_;(SDc4BHW?*
%c!O[*(2*NT>2BR)9;8I_kq3Q1\4TsWU<O%?eB;iJd8_>6Eg`\PcFF=-kKmP7h.XJVmI9/iA9I5I^B+j).X!-,*f\=O'7A<I*&AbD
%/AZ?;#G]AOYR2ne#"bO9>(W-V[SdVBY,l/D]VK04(noF=S7W;^dgKKlB*#q6rk4psI]qB&e/<'cPYg*uK6&P)l^+c,UhKI%Z:,K%
%Jkf$3'p*TkZ^Mj)*95YAR;7pGF:jgE\6%BT*2K]'9*l)le1pTe2L".XCV/KjNiO*?.=L#_`3&hp^7!`N&tE')lH$EOF@"JbYlArr
%k,=p[72a<?YqMsOi;?k1c5`R`Xbq'f&k53aB^=/bSCoZI*:'Te%)M*BdQTLk:FGAH:NSqM:""](VieE\Erk@.9p33@kD%XK_&EQ&
%W9UCR@NX19DKWTHjrD;SVY=$C_^2-(n)/G0$ke=T)77:-@?67Ygb[29FZhK[UNh:A8?Q<IqS!J\#nm!e)1E!Z_ZsQ)p]3uPCA'"D
%\mC.G0P&n?(iN'Hf[SOuR^/bjE,Itka!@qm-5QJJG'FMf_8@Am\HM\lj=Yf(2`O2\g4t6rWLM=tL=5M&4UOKXLp\5aEfAbSZUP;?
%N?nNiSMp+4cLP_W[U02bhApssjlE]OM269,!\cL<;&IANo:%pcAu@[%,p"Wjh(!$*^74(G<(kMFDCsOh.-h?#XalR>D>,&C*0CF(
%<0C$,a[(%lLBV99).=7O;RS)cD"N\1a;GK:YZ!/,B.$@I'_n_lgc;gF=CH-A-)^.;2@'>r'YW?O`Soh20R2D7ViGlt&MBu()Olhb
%bAT,EC19;X[o7ZZabUbCNXmQV*B&G4$mqi;b7LQ&dP?pV9m97pHh769A3?r(`04RLi<!83@EH,r,S:2+feU_8&LLgE]C@;pk-81g
%m:2Jl&\dJ?ja_!TDUd!^rMkSe^)<%bH\9;<LTWl>,"FT`He9ZMC@;rdh&<'Kb,)]ai[^@5X:<$PO(>$6jBnWlVZprU:#n!.g=&C>
%^].<+:.jEFm0SL!p!Ui2qYm@S#;=mJ#IIA\F.62"dUJ8h$UKfnihZk&YI\K-LkckWo8tBE^N?G(EE1REU0BaS5O@[?UB:@<ea4@V
%8DnF)?);s51]dZK95(-oHu5/FS,T6O,Ia`N];k?]g6)Vj.6QL+)Ju-E?TX3+Ack=,SQcr+;q2f'b6E_^*c$2enE<kBb>m!;FX'fp
%Y$P[Pg!tlppY")P*KOLNaKKnOa,e;X\ZBOp<+]!"GnnV_fp9SUV#'gFA:Gnf]ij.J&_Xpm7@Z::G+4hkJlQ5lLnTne?JFsdCRjY+
%lJC)@pJ#P_f"3p6R_3W/BX4i\Le[VF56b@01koD!=P<-E447L&>"D*K<OpHCJZpZ"j<?5l'oq>7^V)FsT.ipO_riW*iEP_\g-cbJ
%A6<1??b3)1I`^ok-Z'LK])a_\&skHa\@lHEFLm-G2kV4k",k9B?W'L(V-?<h:]Hjp9tKdt8b]nL^lE'Yh'-m=%upF3H;raSatq6s
%OIsGGp=T6@1C9q--m`NMbco8^+R%ZdZ#@m+<p:\2!3R2]&`XGQg:F9(hHVL'OhM4HFD\27R],"d,("Cag!RPUriIN;Q)4PWGLu\6
%9hl^\NSV/dG65QI17^4jq>&q)S(!#.D$),.:eiMNfO5SQJ/oTp4h>Z+g/?S;Fqb^\(U:pp85,D;rDu7<#'b4%[a`A$X0q$k:C$sl
%X>LVB,%s5=qX]jO!2pGkH/#`g@V^C$%4IY%`,-S6oC_I;e0kPH"%a-pS=T?"dXF+:2Tj&HI4Ou]Cm80AL;pb3DisZDTAiVjYLRC4
%0$\$>q)9ZWjl5Z.A-[>->V]7IYBl"@U"i)i]#WI%BZS'hMj%'l[5IYe?8Cf%XbrDb6fl@<HZ)B7Cb%m]:c47p<qV:MZH>jUr"h)k
%hT*DP^5U&;A=?]1!?2T\!^Cc1;9\m[P)r/Zhrmo@rbKjS-K\^IaKVf)>ohQ9Oj&Na^>$&hb^\Fm"^/&Xb_:k&B[#)WA&=@02W4`n
%ae,oA*a78n[B6lbSB)]VAc"'!2;(\\2c:N6OVD<29+i]U>?Ws%Dh@Q<Mo).(CIr!E'dJOb!<EbZBSV50_#TdkadHY-d25P5HI;<q
%NNt1(k!;oWFGlS#_&r^E]brtV>EqbH#bi:!bAU-*8k_a6#feT@M&>,c!S/!:'khr0/L;.rPtOQ828P)P97dmG%KS*t=_LsJDaPHc
%HRk7eRc5?&d!9]a23&i9d6u9(KK?KN4u2EhfhiX5M9a\5!$ca*meY!3J#XNt7HMJ,2:?0I(DjO+W4T31)I#cPA?'LI.1"F0HD@%-
%7tMRbp6YMCGXUOITTrZ@(m?]$bccsf/c7T'Y!]>q@1W#4lK=Ne`74tc*U>Ad2W-kDM.#naD!Niu50q'+Q[1KrD?].NdZra\M!MLZ
%moV?g3nL0oe;\aPB-.u\p"YA7nVab1-J(ED)L6.-5F%IOnMkNL>X6_tE'q8ld1oJ'.-#,roRQ2tYBE&;-QWi(6JC',C>`IU)rVAX
%04+h)gcmFQ@jK2:)*aGNZi]M5AEu#&<%420O(T':U`?r<l_@g[KanFFS":orO[MI[4$q_XS3K-ulcCk!4W2Hh8c";CjTU'*a9b.F
%q4_C\oI]:?li]"V9F7smlSQ`ZOL\Cp'+A=&_De_sL](*7[P;4>ODDcM^8h*>i&eY\X;q:\Xl]6dBuqUH:8*8=$lptYN4"L#KJGaj
%gNtaQai<W?[pX*@-[ES"p(F]`5dX9ON=HFc?p;Ua96l2_USquNK"88<-0->lmSmS/LKV8(c@cU7/kCml[.I#s[=Q)A0U*'[YSJsj
%GIiBp^!66HV1Bh8jr<AKK>*ot'YfotkOk;F:Zj`"l`nG-BC;iCMTCXF`OmT+/$Q9!"e<i22>ahJ2Gfprb\HFX3`mfiL8M0T9o@pm
%9tp!Jmg\fSVA'$[c0QDkF!uS#0rMV<oinU_Q:.a]2!q!Z!5"(d9UW=>&tEY8NfFK$!#6NbH1^J-3t_b7VK*>'Za[_)rrU?5FV3,I
%qCZVt),TX,W/6f!LR\&@UV<<@<>HH\Gd<^#T-NY4/aoUK6nBN0,i.d@1(pM4_#e;iO'QP#:e/]!)4iD;Z/]g\b^G0Rnb,6?UQC=)
%B.>@g$.a+b.tipp)=4g=dFUE[fSgLKGCbZsViob$gr`JH(%].+DC>(Dc+WHaZ<jHIm%FEt4PGFMREA06Lf)BL*OSBpNjuPu)^+:[
%?g<<q!H.VB5'T4j<M84"not?=qV\6n(&:#&"#?C@q7^4^=ilW)@`!P3W/&E?4ZAs[r@BNel?IZ=l1)iPI]AsGL#PM5`?C1,ie_MW
%45&<?(e`W>H)B7PJ$Jj4efEn'QUB&/+FDMiDB"RtQsK8h_0cq6=l1nRb=pe-n\qLF%S:#*N`mKXLiGID;rTFTX[f&GAhjmCY*__X
%lqubG1p[E1K8P0^?e3[D`n"&Yf"'.oARQ6"&RQ_*kY^WN'FN9diD2lh;rgQH0bg&C@*-;E>*B0?bW;S1>rMc4*oD'e8T?=`5q2Jo
%84&qHL`RW+p"XfeFjd'oK3\5KeNV)Tp"5FVZE5Co33ea1Xsk4ld>IZr8GbkIh0H-3ZpI=(*dsrjp*7EeGG9i:gVX$u5kURhN$W`;
%3-Q@Gp\hs2WOJ)IqZg:^<^5uoiMi-<N1HU@mCbMC[\_Q93LZJSdhT,dM,uHX!:dhTU1BNWF@6aSE\YGB?V-.X5LWF?YkH!\QrFC/
%K-asb4E"uaqU-%i?@XCHkI?6RZ6Si7^'l&7Lg^I+.J>59rZe2PSfUmcf0c_!1nJ46Hsh@ef`mY1S4UgsBbs'?Wp*`d)f%"GEZ*!/
%X``j-5V\0L(jI[JmG_YH/5;It7I3a@^q,kK(T![";_$Hm_hBhQQSkB/=,hW\Z?GC7GAD;slpUN/ho&C\VY');"j10LcqX&r@`M@-
%s7V%j)7!\;\TF.6MA;@:fdR^UY7T3a:'KBf^b(NG:^L;;;GUtcL4+)9!i9*P2'i"\qjmt2.jRq*d$<T\YYX]W+^\"TGu[q2"_mJ%
%&EZ>1qoSPsjPrX]jhQ<kF2R_SY/KJPF>dXn@5H5'\bf=s`a\M.e\IJu3f40Poc8d$ir68&f]JE\<N#H'%qpe(87fhRbck;n$-m*'
%Cp6Subc#RC^eD"?n8:i_fiR^7P_tlP&R9C*_kn'4%m76QZ`djra/(<ZFTY:sh5mXp5e&J_Y/6m)E6k``/F,)7Nt_tb`HU.&`.EEF
%U`+Raq(epW]"lU<e$Hl@>//07GuS+FkiLh,^7H;U4_LJg.*35#SGVTfFo>rjWum5>R8gVB+1Ibe;[JO>_StG<!ERR``LP*U[GO`:
%[!p`ArGtC4AP#bnf<S<O^941Apm6jtS7aN\m%)/i;W%mDYfC#XdYlM@O+,AI]umj14/9hKX53gn[XR>bN4H&(2=X'<(A(]nq`[k%
%;/uL,F8$+1'8`2!Taug#C*galBZNs.m2`**.$hO;fJ8Uci4-rq;onEL*5kYQOqVrumGWMA\CZq^_$;iT2AGJAT6!^i[&0J^QBGXG
%fM3lMEjq\#(n2ot,o\c8.M71__<Eo_d>*-9FT$T_%V4C1cj@hdCE$?uVUBWcI3<MYUsnG22cIg;o>%W_dP`k4:ehUXDs_Eqh+m.L
%bsW*uJfKXC2'h_g"=QVs@+VQB+X7^1:?OgXdT6HuYmKjMdGL@^3TraOpkB&'^]lNOI0"M:;PTOFSX^`lR7=]>M6QI@7E-pN>)(.,
%Z9("ra+f"*5:lX<:'a^mnWZ/EO"Bj7gL6>4'5mK5qhDdY7qhV;H8\fG7)c9,6sJN7N/O]ujR!CWLDBVWW2HIaP[(TY-Ap9c`LIjs
%`'1B.E0;Vl5!.>$,EK32VqAJLhfb[JN4=-LnbM)!S't0A=aSJO>#asZJhi"STl1ZFM9(+)!NrtUKZ0dm,f!<SAd:e`UG>XQ#k[fo
%fjBS+o;kU&/R4KNX383s?lbqJYeWh\S?@"&"6k7Tflp_/i\3c#K[c8B]DWP,&,LTq:urpFH.eT_opl!Rkj&.'\(;.ej:#irgCQF5
%JrpgXh,"Wb[G:H2Xso0n.YF2d&M_E[lB'5bgS:+1D_UNIVZtZ_S2;s[XE0V:?8<Uchui))SBAT;@mamiB)FI3=ra17mCbMCAnSN9
%WhK7lf+@L:BIE0LUf53nBEtVIqA`cN)4.ibV%jaKEdV7'![(.H1V(M5GNe6^Z9E8SdmLVJ4=0bEimO%kn_NWFVM8LQ])?,1<DZr+
%[QZD/le+ScE4(0Lf;EJiLY)9a=^2T(1Ch:4lZ(kkr4]E_*50M2=c/ud_NTgUXDs'H?DjX5D+@&._G<++h`<`B"eqj=M^'GQYJ,pN
%N`TTYVBb]n?ad]36;s)C&QEH$BemO`<[#6WgNukF9MJL6e]VgsfPTkT"?\!Ug,GjR-sm*fb.:,q#Vc?lPa.<H/%Du-:@C`fp"kSC
%?%NNm/<<Pjd5O3q7Y!i:jbn!CMMSi]8$sBYo(D(*/F/Q/ADJDG50`Wsd(4Z][IA90?LN#<LL.X]#L?_4QKCo;>!g?N@<(Z`M]NAK
%>j/W&M@bCkp74/#ed;eWU1Wf%Dbrmd!o?g<DnHkEM[&\d.Z^;o=%8-rI/LHt-M3KRQ-t`!Z!Q94Q+bsbQ*$loESJ'=DfbVKYJhne
%Ad&oY6t:<GdF+&kW.5U3eRaYY?1-KLCPfcW=ojLf6o#'XVf02]Ug@<q].TL_7QIC1,D3_%*E9dS;mgBMcUhXCaR]<dGLqlZjb3C,
%6E,],DgUBj!WM?#]Jf@=LTJA4`ZkrQ8:_lrK,bgR\l:T1q`_g,]h=/RE3-*%/A2PSGR7L*qd.\tY(_n]S$HqGlfNq0eeNZ5\+f%W
%BKf@pJjHur>&KUk53I6pXm+X+KJ1d"dalaEZM42d>Koc0!pht$-3EUWC_WZ[,IOJ$N$c<s&):(PQkn<@gTC!s0jd_;\UM?TlMR18
%o85"==kc_qF.LecUJXF;m[CWaN$,'3'Lq_1(d7`+mA;8qi7>hmfiE0<[>XPDqB]On,TWrbgfSh"7c5N_PPlB0mU1!XWd38S[6fd2
%p8u+/gH.4frI&gJFk)i/cCdJU)BRT$\@;u]Q=`;LX<qS6^!VQ+<nm#J0C()XM??4rHJ3,hM>+a`pq9aM^V'4M9)Lbdn-NY%/3J(2
%5C,QB\mmS%nsi#0a_;Q^'":2Pb&qd:Kt=TrVq;uNgY0WLV3"Z?,jo3pP'4.3!D03F!=A!$(1Lq%*["1m9ea'_o;QkWc$Xp:[s'1k
%TM(;VXml5"8nN,[LT[#b3l!3^kjXu\OjY4T\GZKd$4=p_JACQebb5\hBeI<Qm()h\(fGcB/3P(:[]^@UG3m`V:>_Kpm#nJSo=CE4
%hr1@AN;@jH<2?1R(o;^:lhEIV`+/-1fj&Q^OqTIY@ZU$bQ\pV<S9&(>F4r%?#Ooc3Macs2n<%oq/kpN5PQ?H+-oqoo1*O<<Ei_SM
%!Ic9NY3J0+^r@9a?O8G6gSsHmk/1j;#(a7c?b9[ZrnBLjH4XheAeA-%k;rpTbm"2X%"LGq#[G-OM>;^Ac[&Y_JU0dXC?o7`H!stm
%W%Lrak0aoPn6k[+DCM2kTZD57f>iP*eF%Z!9FJmG$j2#D.<!2k","=Z*0eEROU3I.n1d_l=-'KN-b,r>"m#DlSIXeZ.)[\-fpGMZ
%JPu(9RmnRK'8Y9`hF+T0]b0;$jhP3WUj;hl;jC\&l=f.4Rg<Xck3@Qfj&Oj63X/!i`p_]T[3%HDr-6QT"?unZG/Z$YB@6lQD^aJR
%+MGTHd7f_&rcg$m.mq#+/FJp2K.10d(p+m/A@GEqQOPN!a(?%QfigQX2U_;Do2*W*?bPU5KnK?4nT>fU+;i>QRgQGab4U!sq/%)E
%f2!EZ]jLDTDLY>Vlbb]N0T$?3XTf`:]'SoXrE3B!^V6Al',o(lM.?&Mmr'+eP;0L\k1u$+4`Z@FQ7[5jF6Dr2C.RIWVX"GH\'N*V
%2P9VRi@CDa%N=lfJCfGta*6pkXt,G&Wk0/J1#U[_YeYu4:;#Rd=Hd`(Aj1ubl.;3QgXSG#Uar=Nb6M2B<MO&4998dp?B+5f09'0e
%Ggr'4O5ZIra(m=-QVH1]ePp-Q?Z'1Ia8aKBRj?*q1eFGiG^$(o'ZB0C>BP[m,$]1pbJ+!42,j+&a@ZFEKkrNtKLkhB^_m_JUq+*s
%WcK/,dM<);p&V;9er]8tT4[di7r*"/fc.!NR6'+RZdH4+E_l^T8Nj6E),-@18=!c@YUJ1lbe4g5mRKjV!nNp8C-!roLt>Q_0l<Ho
%^](p"Fl0]>Cjg!=Tm*t;lY]OHC,]sXl#q6r+g%N&52s&Y?C"WX:DAdLJ)%DFL*@4(P3Q4,ZqULAgDVJaF4@IE$G7EZ%JZc*92&"&
%='IF(YOs4;7>ne4>MC&EYM#l_f2HJGr6ijfISC8bT,7rbWWo8O)R-*u,PmE!^0B>*_V45ThWR9@`l_7TMrr&u8k*C>I'SGUrfVt(
%SLl[H/"PqTA.),)g"?tJR)@4eQ@39AS7%;\.&H%Fp#pXVc5'$Dg`p$:N:[ue%j?qRF.-p=2\WjBY4;)+A>.ZafqZq8!a8)#><is-
%3l;+0.fLb&]g`c@/(qKP,4cm8NLI@fH,mS>XB84JIH&hno<JnL4J+qt(DTnuC"K("\mjTWE]Xh_f0?)rke9E$n:T;I[@UPhkEg(!
%G[5KFnb;l7#(fS-J0\YsNKclnmb)Y@jWk:Dd1g*kXpbf3<.."JI+7-Oo25HJAQ!U4<K,q3k3Bd2QA)$B`nRMU+0cc.J>GP/5'h2U
%(F6=ip9F5F>9YcMD(Gk/=VR"=m,StngBeO`phR_W\\iM><c7&q0oZKCQ!+%0<IsDIRetcdm3iDN18`jj<[#FofaKZ+->*g]23g#p
%<[H4`&MF4ggB(ih<s*!"kqtrq[7X<ZKd+,6SY[-Xr,3;)jG=Z7=Eh\=V\[]A+MGET1q<q!R;<IUO4l!N0TA\!2A.c!'UFE9`>0Z=
%e3=W[D'DM@C?d)<d@rfF=.]WP1t7rq9S]HiZqB_Y0pXa#'o3W`IH`H'b?AZaGs'DPr5pJq5qgoa'QGTEUIE[AGLZL9BM6/J4]0eb
%%::f2M`?\qX_LI=H=RtjB\s5)N,_I?+%e#,D.69ekf4e0$q?kSNKtSS?ZZP]L_34A9;!Z3na)9QllL-s/Mk2k,Af1rS9UhWB#JRY
%jeu+"[A,OhXGL;2`,]VH;2uHY;<k:*N?Y5:5;mai\"(H8Bg9o4]YrQ&<['Ap6HnQJMT&^<'V`0X;8teG5XO<8E`A/BknX!(:TTit
%RO:r/(clif^SD]-O6np*67ITR6Ss`0@soO]^;':f>e/O,<CJBG<RI)$*JB@K`iqZE)`<LJps31),sQQMek&``%[Nl8h0'49`g4"e
%d`.GPq+GnEOZ!0'T@+unmBLmM+`?^*%2N_h,(4/X0$btk(AiQ@(ZdZ.&2VZkm]ou#3Bj7iN(kNK7FU2VOHuFRa/13X2JkD6W$la2
%`bO(q.*Y9oeO`e+8BNog1s7n>4#3(VOFpl-f<^>6k?mM5hH^Io(<G3P`OfanU60&]"if8"k]UcSf,-$N@6@gQiap,;VJCBR$Rt-[
%?cmAjWGbNj2\6!&@7c`U3h!"d.nQ:g^Y^.&W%mC<Zkg!ZHDDlEbp.Qs`N.&T-5']qio1"G;bpr\qN_Cc9WB&-"Vih!(1ZRYe>>=e
%njIL.e/9t`9L"gh26[i5Efh*TTt&Q`N0E!=M]1"bZ4/G2le/__pOBGH'[`/:2FH0-:]`ur!)lnb_\HXH4Ouuu74hLHFj:Du5s)Hl
%#2UhdCs<=YC56(t1s[m40:&(\QrD?737+?sMR/nM[])[/5sPfpZXKZK.[<3Bn+'d5_sZ,;2kAgImOdUW=dHR_L?NnPh`I"P*CSce
%@`C?"g/i)V'=FLQBbJmd;5"=$/N6E'm[N._[%;1Dh#:+t6smBGg&/c12iXQbQk5VP:-eePZrsNIP9OW'gHumRV@@7sfs`NAoY,<!
%R^PC:h7L2.Rl`"Y)Us(L%G\^?SDNqsbD[s?7G3YNc4S#2!Hk-CLNb"9b9]SsQh*B/\9DFVNDmq\chrFFpRdN3M59hDih!,/X-<tq
%?N%BJX=3<lW(KjFCt/ZNI#;b1S4XidHtkXoeb[^s76CFjlD@XXAQA351a["d<e&i?rmn=)@r(;o9?.qLP.Xiep0A84E-?("$h+n#
%N19=s@H#(Q]ti3?jFr5,:j44KUX:T*M?K*f.MI#jLgsM-KKP'U1R')scttP-91r^;M*\(-rR&i5^#V:fo&kZu.Ee,=!_OeSEp)!L
%EA"-PhAbQ;d#+BNG,J@VI%&ssH.>!b=Xo+<`Z%WoZ@[1gQ0(^\*g[fgZ7O(B)Ii6SBH&S6<HMjuD\E./gG4;'3&@!/n!i8mEg$B0
%%+<bIqb/2^mftfS\XB"Z*40RS%mPi)ilG.YH,jV1`],V7CtnLnYY`FoBN=MYZ0iH\RQZ4fm'+j@(3p%`$"C^<Yq[8j5VNRb1Jd2D
%KbrSZ73d_Qj5:g1>GWpNqY@$<?Bf.`1:AK'?^L#/FFKM>$rA14BsSYOB_[:_VjWa-3B^'(pfGZ2m14.[R$1%aS)`tT)a0]Mb$Y]L
%n/T\F>)kU*CFH>VA4q*e(iHq]`$5rVLl:?fT/m3?^--a\X+/Kd00FYECJ.1l,\J*;T$gIrW'6rp6o#95Fo-TYhIT2"oA.X(A?OLe
%3<D]o8"f_[h$oaX"a2b_?:Tn:fP`_,,racLmr[PC?fA?EQ8Tb.P'a<U:/&uIUGS,Wf3K/S/&`eFrcE=$\&<rZ)BGg*XZ@bOja4Bi
%Y,SA\$EK=mpgFXASG"1Rl@)sOo9;eQ&OnQ(1:*>cDS)IsYBU'%ngDtk3rns0#dU'ps'JLms#J8Ek&C4!B>sn[qsVQif83e[1=&Hb
%/R'X_FF>f'n[_'3e<rt+:Eo7loXnGd3I0\@%P>q^2U-o?HKnXTlS'X2`1n3nmF,4+;B,(Wou`/#Q:*f9i@ib^o4`(YpHV;kq!t*e
%bC!cX9*SmO7*p;)N!+ino+=GY(s*Z9JW2W0#%t.q41%=5><mUON&l!aL#t([lS3_0[/iL]7.1ok$l`)Q^eplZFQ9L!oTc<1gf^-Z
%'Y.HE@?>E!qlEel>u(^:[EGA,0(DjiTW9WdQ&j&-;Xb&?9S*U!?Lf>;Q+'J:5$ALY+V08@:U*,Xn`k+cXFf^<:@)D0PQ2e9k@LFs
%HW7.^B';g)]\bp>/*H]*hrtgYEH>9&oYb#['l$uY4CN#GoQUm=U;7LB8$'b/LaBJ+dV@/>h&Ga@UJ=k4pnsLc\okMo[dJmX10`AW
%q5)g`I`3m@QDZTIp1(Q`d1pObioXsJC5qJmm1qgcmMX!u';4:GUW-.Th5n_6=B":SX#N)9$&@=m<2!BhgG!SHWFj@O=gnhd^/O,)
%EE]sJoMD$S^+'e&g:Yad42<+CIDf-(:X)co;6&L&6op7D%l:kE=9Fjb%frK1Ho[[2"R+X,:$%.>lG]i"J<:7]'_r2<*`PsTD6Qe]
%cehn'1EMc[X>il'\<!+KNE_kWAQXj]XLUZp\RaA[?\g+aoCuEDf?=$?Y!m\Zf8DT]iB@qTe/593=ZpMXHVo/uHu(`dId2*:^K/Bd
%["?op\GC@QQ]`:81H;2fF^2Pd4];e'lRiM(j/.r_5JSu/S4fsPnDm5Zn>b$cpP,'t42p`1cluN653l]9&t<D*.1>D,ZTZ^ohEi=8
%H>3n;IH``/?c1&(nZ'6fYcg,6B95f@$")U'r_EpgEH-I<9ltl53/E8moKON@WBo9O.Pj>F5AhCApeT;rGt4pI'eKcC\6:"k$.OLi
%plo$Wp%YB6U)ig<eMrd=HhSgD\.AOP$f>1+ia]Too1QPK]Mr*fjTk6"6NgQ\Aeb#;MGOUA8o1eU5s@:@jA]eS@e\3u[L-uY#GJNj
%<+n(3'P0Ht[SMkIWFYnOgA^FeQJ\u.dR0A]d&",[L:1;P(aV'"*Asf`0o[a[/09ej]hdliqprt(r\?ki/5"-g%?lT#U*'(TXiX_u
%Pr:<.rS(eDT[8AA280nhTjXZN4#NI)eE_c;'0VRKiU[beMJGT[LMCeQc%7>8V--5HI.SYM#qiG7gW$0KaQlnmI=e\3$5Os!XTA"R
%<=`gI1N[NN"120da2m_7_*4D4Y>tV%#`ioFBVbSo![;?#6n:oZPD2c?Y6k:KlH8"OoH6fe80/J+.^*ogJMd^cZr/r8DT&Vi1_(Fc
%?!Z$+0em+DK&d%Vn#\ZB>`RZN%?p3Di&'bI.aR3]<'5&2ppFR#jG^$K:Jt(_,Aa]S;mLf?O^#1B+>4.a`NqWoUJ\:U;42X%>0Ht:
%UC=B/6DIj/&deTTLn@=pcO"N6JdL#?I^$*R)$qp)=l3$qPZJ1W<1K@FP_0]EW@XH5Tc--9`7`gf1.]g"V'hk/1G,SuJVb6Fe.aC4
%SjPG6_2+E:Le!>C^__i*c*Ao0I7EMA#nc]''>.Yp(pZYr`f(*d?7_E0bYNe_Za)H#cGSpg7VN%j)[kZ=jB8T72?L.20W?:45sX]m
%(Ro(*X/IU5"TRufLn@;&n,<Zl:?CcmFWGo\_g:J8g.XiNCgM48/0ku0j<nZ8TQMXu1gZ7JM3cr1N3T+;#q^uG3C$gFMbJQ!(.1NK
%Ah@jfFSL*!,_''nh6#bWQq<$LSHUd8(%^A4*3VEWJ/IWZT>B%m]np:dFWGd4>Smd"6YSIj"s1p'4h'p:ltD)P_?k(l(NO(i";".[
%>c-@KQlO955kj<]G-=X,M0?a3I^9\XrLCf,(uT)f;*WgX.n.i<Up2KR%iM,Rm)V#CQAP9kokF'p.a5-^\^Q\3.h/nX,$?f860*s;
%3"WtI[Nh#S_sS0+d49RmD@cI#XJs%S?P\3b=*ih$;u@768?M$fFi<<L+CT<jN>t5",=csEA,BJ9eCc-&Utnu.hb\lB#u3(la[oL`
%oLsKf+/EG>+70``nnJ%*>-C"6&H>V$`DmtmMB\Kj!_3anKkpru2E&0^Y'7>cP;?>de>W?NB?,u;/?<4DVNBs[Tl$X5imcTS*/Tp>
%?NIDsY?tr03C_t3Vpo<3Wf!Q'>']UOMLW*Y9r2%ClOdF97Q).6lY&X<4nG\C%uKuXB9_^YSRi)8)c,7SV*@3YU.8qfm%:;pMkbAR
%&g@uFUp2l[Keb$T=!Tg6bm<I-Ls:k#4Xh,*am0#8OrZ3!&sEJ\j5F-5bU%FW*$!M#*h@>Zb5m_K5*eoK3mR8q%YBXUhIh7BBB*&m
%OKK1s(c;R8Ok89cJD^T:gu&o[-fGtn.j.(V_9TRe&i#f]!qbO"L`\u[j9A(\*ptW6%i.gk)Ve+N4S?84Z+#)\r)2A7rj5&-!Yu"`
%J>'D)M3)Kcp$.SI^A.hqn+G2!Nd^,7I[C"\i/42ne<kr6%UbM\D@YSJf/u_rcdF3J\YJdh,:@U.4?Q7PeI<&`8q1bU:F*8jQhH+&
%=@R<&\rtlo>`G!Q=g$4nDF:-a<oV[s-UfF>miUiqm`<!nm2E>r[fF*]+DpZ<-)L;uFJpeXE/eWr[YDL[Fe%D,@OT2sZs4*7CitKC
%[G[o5Fc6PLkP\$u.(ba-Tcgi(7F`sJhRBK#VTNW4)/9/2WGYRD0A]'+MRSX\g=>.\X2QebpMHZo;npqN$qG6nTf_6Dj'%MGZ*-qD
%B))*iqr4c7)s"Xq'8E*)GuV$/?Ri&lJpmZO(+%O_&$3%76^-'!(q8XfYrDs4H.),\;Q@c<0?0e-&S?C!fLPAIaJf`0bB[Z"TN"_o
%XROFj)F$A(otW9u6T9,D5NlP^jL#f+-INPnI5aT187!F;6[uj0T-"VHNUJS?+).-M_h".WrdTg-/,%tbn+p&NU^.[Bf8AW;H2eVE
%@^,+X<uHnMPGO&'N6r$$1<Nsh$?Tbql>'8:-t(`a^0)2$8(OO^s!^FtP5e.@DeH]3bGtb=CI7g]0s#?G(A=ArYPPDHS1uoB,Z:Vq
%\Yi?&]nX<^)MlXF%7\G@,f:&#$&ZiK7V("4lujsj9>OQr@XR\hqkc^!V)FW3c)+VV.D.(BqQ<GM-=S]"iN*O@>-hr<]b($3a8UO+
%65Ne`L>e]CCq@"$du'Q)`+:^s+VJIPBddfb.,EjR&j\gc/M^(5;IWlkPT(I<E=!%Z%kG$RW"eWp>E#MIRijmGlJ-<Mh^eq9imN0*
%^u:MFK6um(QZ$NK<5$ZdJ\^n>b(DV&V1j=U8iW)r1Wi^:(a_X_>e<VEFm`ukA97[Gl!D))=cojU1%4`Y7XDcRZW`*'S]SC=OiSd;
%Uec>Y.R4-lD_!ca0.J6Kb]FglM6?K[Rb6WM2]2Ji]bt,/<"Q.4E.3oU,b[pWI8d%"^hS3,_odm,lj0F&pQC;t6%fA<=!7^aBZ#=K
%759?GWUBRR,2tYoYE2@W-f,7k%!0#[C(rO&`#f]Z*E=a(nh9_5G.uSB7A.$qr%VFAddfTPeoDWgEF$QE-1>j8*<`QdS;Ni9;5V0g
%!i:mqSdC%VVE(,B_k!2hQchD9bAL;I_]5D#HEpR0jfuZgZg///Hm>i\au$bZ33'2`6K)TXiJV,'r:`9O\oqGG#dD6K;VYKF<b%(p
%6`R*HJ2]8di^@]WF56&$Hn(*'.l:(^-DL^UWN_\k@:I/LqD>$"+h8&O9+E=0?GP\Unr2?`\=Gjt)N4G+A5Nn:C2l.LY:oPEG.L`a
%lPMF!2UD.#G1Terpo/G(Mol?UCD_LrXimb*k6FA[.a"SJLV''5ga[/#0Zp%5TNC94l.>pEf>SJecUaC(hbhmf>*R8c'P&MUE7;s9
%7gc"2LE4Jc,GpG74+P?J'n!lp)\_WZ)@R?ZCc7$RLEf%DoMdD:CH:HBI2tl07<S*t2bOEWGEt<-;I)lk;P.kTqm;i"Kft:,46hI$
%P&"k1<0HY^Eontl/'f=jGCn,]r:;WuB?fseOQH*^]ad3m3?M6OM`X0&+8<@V,3_PHMtmaD4s;\C3[D7-95.Qr<*ND;H6h@4iUK$-
%%U@@<PN-f,I$%.tks[T;iMMehD?NW&>]P;$a1$+QlH,2hF%ll9r1B<rQ];_W:2j08gfdbX:/>b3,I"+AZU,><.hb$M?)<s8)c3h3
%Vci<(F=-cc?sXIP?P@tF^t1`C#/1l5l.:^$j9"gU\N+=88XFFcI[!@X,B?)N$6FE/khki'km+i#J%c-gX^NIe_e\*\(WKA!:qJ3$
%pllB6V`XNqV1@O-.RPAfMHoimR5u`MDT^qb7J_pfZ,3/`UX$HPr!Y7\3QtoQ'MS,i];7bmPZ%]Y&?:V.B76K*\'r%M#HO09R#Uq%
%0tZc*qYl\jlap&8@WuNdRS#+N.Lc,qMtuWKJ`Z9iV]Gn`IkiQg3G2f)pMRjOdJW[:5ONt"R]7'hbqLZ#D.G&qRQJmV$ZIl^_m3EB
%M'UYGW:%mp",o]/bU^![j=dnVoo4rIk[s,9WuN,;UWl5d)/8UFBVm!CT0C$E&s!q+2XC5=qJ*3PVgHqrV?J3d8V#'4Ln%gUh5@hP
%-m9t64?MhW#ETPdOQ,%aLAM-_Fl]25P9&Oi`7<*hk8dH9G0rf3?j;TUTg9,$NjhQU4[$)`6MBW"#s/Ts1>G#)X"cj/*`E/Y@L'6g
%dD+S.dP\?M*#,nM'$t;KD:;0GKqe>h^HCXX;(.1p+DS_#"Q9ZlD/fo\"KZeB$h3-IaJl+;OYadG?KJ\qU.=IV1=Slt&%QgjrdTC'
%j![>eU5>&_P)8q"H@.g-UO)j_$qusmrfA.CAQ>@;5Ik0l0X;S>5ipDWDIiK%4AV_-2^iq(Mo?8I&qcVE%ur5fBB.KH,T0)!9YHCe
%6J!Jtp#mVqURC#L=h,_3X][1TT.`-fkeg);71Hcl@+A+hjt&&QBY36<hj`(`7oiHqW?.s,FjZ$k3n2f;e:h(i=kHI20#dpO*BQHj
%L-[RELGJiJn4aJ1d.H+H'^qi==(GD*&9mpT]W\Le&Hhi.q=NgMgd<:PU8EMR&?^-(NkWm%gW;(up!r\iJfW>_E_ThHfI,EU-6FTn
%<qZZ329384;HZZn/@UU>DX2*mn4=@unNlF$]9f9KY]"n18UkV]8]eH,Cc^<)#&p\OY@E8^l1<?/*D6r&J&.kud/^0n$Sl1d6[uj0
%T50prC;ltE/gg\m-?E_J!WiBVTUB1]b(ICMX!Zi;X.VprlpKh7fV%.@duueK`N5*niW+V@\4m!_,1GF9eM'.*CD<]>e#TZ.:27Qf
%,U9%hI<E*L\'pn:4-K):i@tqh0.cOTm48p6'0E6)<gIH9d]]`=3bfrRd9@_LHSea"j$Zu01^*L>L!K=V9lgmHQ9*CK!'?!;;Tr<W
%d1!Hi^Rk^=]E.oSbs`0c"LFNo>8juWIR,pNSG=M?H98+,G8?(62/1iTg4b!OWrMDhI\]5l5l"KC6&"<iKH^&Z=u`>e$c'ep5^!eH
%Wl+1D0;+R<]?l`Q'_##g-F&1kT%gr&9-.,U/S>^uS&mf"?g.1MFK__6)[p8Ch-K'9!h5P-pW<,q8]cgbJa(B8*Q^)Z2n13Ss09-3
%;0gYC?r,EXW.aT:X%l2:)lIj@2.P]J9(K(@>qm[AA5uo(YmqrH&LRLp$^jPWAcs2Z*9*reM@-@`-(]%9n\<tNe.;7S]T^5YAjp?d
%S7//nIF8IbbqG[B$YZR$]GJrq_m?T]ZbT<GjK;NV%g[T7[TTtM*-l:B-8=OrRT%*Z=GiRtdE3mkQZ=j+NggiYr[O^M)<2[Lhd>U7
%m9FT)j`m(;X6G&VX`\VTs2e".IF1$<hNg:uI75s(iY1Zh[r:nR`X7D8Y=dUj(W0O[E*P4].UuuYL8nn!ZpL[MVJu^O[&10)!=,0^
%f(<JmXle4HP-^I8_:s&7K&^aj34Et?G%i*'75(di%-,m>!?;1B..%KAnA3H#3".g&G?-;7A0R?r_lJ^m6qg/X:+nt[9Q?+p(?*D-
%<Tt3NS9<R+^kBAlU6tZ-C+?-$FRd6E6C2U<]@:5\*hCDfkoOnM?!>l.]<"[e:+1`@oQ7FA`)[a,5Le4?)olrY4Cp<=k,I<;V\5ks
%+I53^lk6TCXdP3igk'3)\FLG/8o<\u1@N:d\HV8?2^`$BkV+SUWtAO7k'XM9DPqSr=6[DsGY']r,'C-,<hXSs2&t]b"Pc@;03p1A
%b8P"b/`=l2+]F=j]r-uf7#uA+9u2@;\WCZ6U`8&l!<9%N(i][hkN7-[eng6ZASZiAJ^2*8p%rpHhdht1MM^"'c[(,\F`ih=D3q6/
%S8l/b@e+8VPNQPejNo-)#)Tn="l@\gI7"i,7:)iD2QX:!=m6!:)^;Z,9,P:AKOV'P8sh]2paf[Dp.%&MFdsj,YA,3bF]G9%L,%'<
%%OL-5hP>V)ce:P^Wr,</C4bOZ4#Dpc>p@96a$UPh%!Q4mE.ro=e3"YG!?hEM^tM-f23L1V7>TIP$FM88j;$BCh1W#*&7Z9p#8tZ_
%I<LA^7=,uN3lO:?%E?$u=$(dkf:a7J`f'tqn6n=p=','egfNBuN`2#dDO'k!6(6<_FEXf-biT'6V,L`ok=JS]?(d06X>0TFST`I=
%I4`WS`__Y_<CrldGpVc3X*GriTZ893\f"tcR`d[jgOOjjC,qPrr9sA,Fj\^%1Sl#_*DT?m_>T=`C+"OB0SU;6*_$<lLh;7rRRM-T
%TJ-_5"`QB@<R?T\-i_$=U1)Ed;c09_hSK8P!-UO'Ab&+4GMX(pa<55-$&GT[hS7S+gZ`$=>B+k\C;CFl]e6JWZe8Y3.q^@+?-R,7
%^AMq0$3OD((Vr!pl!B?VkfXM^PklQQO)!E@3NR48.U&NHiIP=o:HfQEAEsGNVDk*_W)U[Ms24Ll-9<UCN^^d9l`JXOA&iQHjW9b?
%Gb!&:"jtJt?B8)ta.b?"Wo:>f53]=W:Fm=Wa'[@FLN<[1r<45D\]?XiQ]Wt72n9PfkgkX!5a%4S$KdA)MMBke?O&?r1g@$S$s.W2
%c#pG;\$K@T-#?Cs9"@@j\+cP4F_tQZ9I2f(Y(nSoUdC'hH$4?:ZtEiYi7JG&1saU3>$b5q`,a/.:0(MPeK*;R?"J?;ddY\#9b5UB
%e+)b(,'%%)=c(t#gfKDdXW)ptk_grO<Spfs$2n75V=_GXXk0%YZe&]u):fRp3YZHQo(aDk!(MS\(6'0=CA98]j<g;nU8\hB1iMM$
%CcOd=J1nPGB]%doX03`-bifBY)b_A!>Z^fM456Ze0l:FnoFUKg=-iQPgfiSOOqSm]/V.-a0_E0,jVF6:@Yf]A"+FL9*]p5p*km*t
%-T&[rcG>YMJgE8Vde2n"d[:t7**\@Niu5J&"+DDIZbj?nA?FhAf\UK5Ok8!qhj`'E/>o;O"p]kDW3:<jQ!lB/)hmdH\lkhH<qS,O
%#E4o`)A^r#O2s*_X/%?W=IpO%f<(_ho_tmoDAl?4kE[]C7u,*N\pZZrm?W-)$tB$0RHR^QprVs,PPS\]#V9@M2IHCEc3Q84U)+E\
%FIO,*F`;1K(K3PU("^uSh6K/sJo?0O=/c#JBV,3fq!jM*r!)`c/g0+j1qR?nZ0%+:Q\0e&2l!!`Y<;kjNsXe:aRqkl&]uGBFdn\4
%[JdHHPlgiXQdCdh]lqf$*2HW-o,OU!Idlam#C#cFTDM&#^GG1'&EAt)I#8E5RX]:QCO?L2mBgVb3'Bhc%RO('UJ#\)4nj(3WEnic
%2=+`O2n16tJk46d;bMT,6nM-$?L0YL$h!L0<j?Z3B@C[;)cnlb@*MHd)q%%o3R6i_'.tI3%IhF#TPc#>mM>)L;l`SWp#l2"iQfjY
%.`RQrl^"))65#8_'VSEU*3XJ1+Q(Up@)f^#Bb*?-[0j'OYe"s/C:J]"L5c%op/701/?]]!l^bb\mM%n;1a!T::uNSPjmq\#Rk%6F
%j:'o=U]f</)p?@EVdkb3YepJZi;N!N(O8'N/B:^YVctXO(0tHOG:S,o6]\Tg#URF5*9P]!Y<bS?K[WVPSW<bNaA**`M(,g1)N'<*
%pN*m$4&Vb3CN_&BnRPT/L6"&q7M,r$9n]1]5`PK*RT:pFpp@4Yh_Y`f,*AW%V9TcbYS\h*NTA<6ZCuUPq$X,lOo%N-l->be4kn&-
%PqOA6)I:be9!<.\HaOctC&Vu2.=9!n]!f+EE'&K6OIpSX/R#&Ce1;_oYd@NS5s>d<flO_T_F`Qe_Itb\GcH`lekhn]D"edGEH[s`
%$[Zth@rI=uc7Q?,'_C+(a;0Qt9LMHTO0&`aQ]<m"'s'?(0Y`;6<iBI>lcm55>9g3VYh+AW^%pBRaXlXZn<nhRYT-oKEOh_nj=-G#
%(C3OKSmi)d=7qa34U*U2Z2`2%T\VVG2qrlSolBiQ5`3IQ4)JDM5,e/()Ya*VEI,ADWpMhRffY@XEC<c20r"4e7`^(kW1Kuielj'A
%\&Br5Yo9+08ga;g/-,+BpnH0q6C1m45??ao4a_"rU-8>Rl&?o&b-ZY5dN,t]S;q9q)jW^q7aCJX:@OUs?K5$oc"6<r[HHbi49dh+
%_\gGnV8BfNgG?[U5iku$MB=d:+Ycnm%n`>rC:'uP,R/%k`NeA`&U)`8TobUWI;60'O6]2Gj!)S)Vi"JbmWrE%,A@\.][pY/nEX#n
%3IX8#ldt5uWGAr[Q,*6bLpTYDT9e)T7:$"m`?a86??_ACZL/%c4$fBZHkP$CE]QClr$4p?=3FoT=6#GuIVL6c?>mJJlPe?#C,^6`
%l#qf2Za?UBQW=lg:1mr4/Zfhc[2KoU7WRV5-sDUY3nMu&bq_8m8b2f#O;Idqkf:`4<CuRA[;4/2.B[J<()#;KWd*+]lB*ZJ\Hi'+
%Z0Ls:lVkharfWOh=^GUpUVBlJIbD;L)ps.=?KX1kmAZ:EBT\?.9WQ,r$NDki58X9sjqCiVFJBr&Mtk]`7u,m<RE5Fu574TbdsNbD
%d32\`f*iPqkh)VFMgdKCKZ'I22!!dK!l6&V8G7J[O5A1PP.\O,1-nem:r519C(6+E.4\k8Wa^cA`XJBPiA^f#22\25=g1icfN[O@
%2l=\iGEE,D@,>q#>p2Rn+.IgJc,Z7Y->TlM)t'aqHfU*cZ*q[C<<&3^Uk^!1fbP)#>E>o&o2E,>]RJ]]QWMLd7'[r1rmLkR#fil(
%+YuV^_lh4)NX=Forj7pmY[j@skBJ'1e,&<rSkD11YNqU_[dm>I]R)kY)3g&#&d#aeF][:FRu9$Ee\u-fq@.qQ-Wpld<HK`4dh_$3
%4"F"dJN6?1Z[FGUQ_*P:KRbR7(E0"qN`8-/(%'S?,4BoNi"\OXDgWEkPu1@ZbsHLZ"09M]>Xba5So$,:9U&@=>!t+H>uOf>:$p?$
%Q:4,Mm?SXPTsN0ZnL7;hd3/19cJ=CGIO`1Jq`C=(hY#<@/pp/R)kJ2$(^XgY<gL@Ig,35(n!cMa9AKmBU%M;M%:CY)V63DR;L7A0
%65aVg"=4D7U7H=u&i!Wu85@Gf2ALFUjXtslnU2BiGZhHg]WAQ=4kF3NWWj7ONTf50'2g(POf5$"[:'CXO6##H+m!?IHQb6PHCi6(
%B[2.E"!fj\e)/;DG@ah$-i:Bfdi%5]'`d*q1fEco*em_PB)2nhFH^WZO1</qW+_M9R=a9u9dRP;@K/il[TN.,p]fbP]i9U33uE8c
%jJ#6&J4J7a-JVgo#g^GT(4S!&s5O6cld%j/NDpf7$,d;*/'9_*=pX!iW,7=B%,]RoVQ_FAc]GSpq&GeB7Z/35kXH#Fb(eLE.5&Ur
%&q"Dp:F3k*eRfZ(/nQ%^;U%>,(Ib%!2K`Qj:Ej8![M64I:es(,^KVQJ*0_W.O0KJ[=,?:3(7/KC8o5m@54b<OJZitNae5is&9rFO
%GpZH5'*cp]OE!!<c$_Og$Snb[T98InH+7oY>@hOB>b#>m"*%7A!<<;3JH:"AfqEhnd5BZg&QNOK<>Q)n.#hIF\J>9+B1?ai\O.<,
%<N/+Ad(V9;B9N$3r*$"g+&3^[B9sheQgQ]@<&X$3P[4#BAZo)6T[\#TNpJZ9V?_FQ@#ps1%@%^A"AiO;S9<B4O(sPoR"ZKS17_45
%2j"WO7h$$pi=5gRR0l\@(W1Xr4NE@!5m;EL3MtAjYpX-No<"8E/@#o<8HYjlnob_$hR3FRmPTVZf5?uk29Gm_*f)u.nrXqfp.I%a
%qY;04?"nZ0*k4&3BA3Qu^XO]UBcaAq@WAlG*>Qq'#[%f(Rn>#*%@O@]h*Y9id5BA>[Tk2jP2dh\9GE<"o02Va,tdlM2a,m6Mo>dl
%^=mUg`N_H<1RINo1g*jYUF0IdDqRqVZI0fQT/1%T##)(X(iNFtNJP43,pF:N"M:L"$E-ru95=bfS=TRFUY,WQN)eDd<,s39R3q2O
%IIM0i!\R46RDf.)DfnAQ;BuT2Dc0h*G2AUW?G/A!6E8.KGGm?6Mp$+ul*VRj?CA,`[9?2Y=OL8\D2^`_:FX9;TgrtiR%t7/4gkR0
%5'<CU`T&&tpHp5VaeU+t\=X6n;GHfAg-^U2"SpdfWtA?LlltEHro$h$;!<]VUU$L/eMBe`]sU"%QKIHl12[m^S2Y%1q#lNUo-dL/
%AFFZtB5R/qbX$IFH7W&WZ.GmSMtY4.=(BKKSQh_$M(H<?7r@4CCLHJ52>HjDiuB_p.hEl522t]!Fj=7sB.@/=>$4e)#k%^qH+dM<
%'Ba/T]^@Y#_Xgdfauaa?3`'LpJ@$%<&V1$^iT\@IC:QZ+)i#S819-Tt09k=&fc#7C$kFqu_K=oUS:?t&FfosI+C0>GP"-:'Shtm6
%03<P,cP&DoXCc2Jk=+4/]ssOW;,(`lr14tG'8(TL1=ZY<_?F'c[>WsN9+cViF#GsG`j`HfF+1&ZBBUgfI"3>H)XnE^o_kE?$p*S4
%L"_(-i^rcZp_BBG#^\^BT.JG#"?SqjXc'(Rh?G&o_b4<.,sm2.<s14OqU&SN41:eHX5bs(mN>TY'b&+\1fWkMdU#AtI3^s7-I<iH
%G?(BD.?1#DAH,:HSNq10,+VhYh?$>h7ALaQHh@X\UAqtsqVH.0VY8/bOQuXOoHniEAi(miYekJk/3*AGTcT:7<0gTPI<XC9Nmj-s
%#H.XTf&AS6r.FEpFp;,m&XjBHD?nadbRk=PcN*3Iof5d18@9C7XP#YYn"N]W7t.NqYV'je8QJCM$`*N0Pj+K%4!iFlI=XWYYtghT
%A=eA?0NW6nT6*M8Gem.FkSc1@LJkEjGg;Sl^N/V'74daWhmisn[s9-Bmb@n(Y%\u$W^<sM_$3^Vo^K&C/G3:c<,M8WpW8j)VEFN;
%,gGBI/h>Lik?U\epB+H,/Z9b1Q=55-"DuBofK%GD-[0hsVl9Oe"+L!23ht(^(NFurib#%MNi7tGBI'2$?YM1e7^suPL"sZU`Eh=O
%Zr20*_&o)f8_s1ZrPd!?Q-5s5j-U06\T-hUJp!9)/]0H\,Lu[ZrO1[?NYD=gr%\\PeT?rleQ7i,2FLL>(4jgq,-Wic7ThABG10On
%Lh0a`"mVMlDKh6X05,"A@!RP@F)AS9,fD@6A!dY%0fS:%<:1nCObK9!Bi)+F]<rgIP]H3ZaEUs!j<b$\i(G++;IT4?WT('3V]<mD
%enm!N1Y0\&U"6SUhL2I>^[+p2mecC0]PKgE?ZTM^oII*1T&"NP5.Rg&!u?Lc9[At3r:XCqi28V)=A7[M4lPFu0t3GcrZG6-lHDj@
%Nm+UW/rkd[NqHNIjDKE]f:kESbf:['Z$c"(`H9[:O8H$126\Ymed'Msh9PPjdU(tZ>?*;%!^T)XEs*-2C\Y%IHg"?"Z2[-\i9esa
%dB/<W$HRU=h4!J;.!<tc8hY2jq*rn7>W#j_Ym.pUP+k,Mc_72e,^;YJ`ZY%cE!9aunJGooH+-N>Uckd)\8FI!(O?PRZB(U6''WU^
%bjb'pOdacI=t;=RP*Df0aSd/!-e9e<*7L[Qf`1^;Uk&.OaG5^prK!F;3\#koE+_C$]9/2X(=1YT,on(;0hgI"4M4+0FI.kDeeu-C
%KqE*)[:>9Oim&,X(a%KAStETbj"D-kCNfBIlGJ$e[o%<W-A4k8!WAps\TUVmVAR>O\XHmqERVFNXoqc4ct)FenBMfaUaI0uHjk7G
%maZ8F@C>GX3`]a=3IGHGn*3YPh#6E2>*#eJf9agiq\;-9j0G>t6^]K(HIIaMNV4G!GM01ecbYJ+Y7?>lOGj*."=%PlM(T]Fq7(,`
%F*)S?'"I4g)([A?MFC_lA\\XiA,fL_qV9nnFtMp=YH9]MrE::pW\MN-41>&uj5d.^O0+Q99/lIS.b8XTC5&rR([1co0cD]$ak*r!
%#OL2Sb&.A<\OQ5R+tY9E?F/8go:U]&'>o,WO^@AMZXXeoC4XEU<j[=[Z&f)kX\LEaljG]mjKhqkG:*(<`fe^8kUW;J645$jcsRGM
%5t`A:D58lj&Y8!@a@\@Fhm+W(F!F*h/S,P[2'LsM)-&pKD2cU<:AU:!0[HX'?E\dV>",VP'qWP)X[jo[<kDTKk+U/M<02r0c[GEc
%6CNUHf/rOnNLW>9hL\cO>JWmk!C)uiW(t]'AU\re&76@F;i1,%hr(DA%2)B"596S%)JeRY7K@X/`kq=N<oHjdbfYSKq!n$#T6@2<
%aEe[SA'3)()77=s=rj<N[oD66$fAX(;(8!4QLriAN0eoQlRN#@eWao<pSUYYZ`5b.ahX^Lp3`=fQ`RX\hD+'6+ae>4?8FPP+Kr)3
%,EmnANtQF8'4Wa^)oO57C:+'df596;L/X,Rn+A*jimMM48r1erC`1<V:?W.i*_Pg9SHM#HGRsYa8YTU8YGu[I-;bHWa&;aJ@omrj
%6T*h'mu0G2M(`$AOLJEI*+(7fingHDf.4hrJ.OJf@#O`@"rm8;@^a]udDe&T_u7$1cP-5>co,s-ihY#/bWH/ed`[W?/9t3:r]mn2
%Q.hN*BlTm&(KoXc*NFNa'$d;*98TIj=p+:3TtNA<J#Cd3V\2P'j5RQmlVpgeJs;BI$Afrp-<V+*WsD.aO+](9UI89hEUmM>q$+cW
%N36(.jtHEod>fX4649"FWYmd08MSnV?o2qu*K=%ReHT2uEM2/N?Tua'ZAsk>)k%Sl.KYkN9s8%[ZIXX;8[U>Z))r>*&OQUrZKi$$
%%U$kLPRVE$(pU"I)sW(.FLnEudp1gFb\+i>&#u885.0PdpWl(T$/+d,hLO;=dPFqn=+sNu0<O<\3/Q*YVlTgY0@RO3,R/g/hP6pY
%s$?I;[&$MFX0:j.RRl\/&a2]B#*=fg!)X)>,[,82ntJ^_(VZcV#T.l2&s/:Ca?Io=H7TSW\I9%#YuoORMfi0"8n_7p,5UcPI9Mo5
%BO`&?-%2c=ZU$b&[l_*)E45IVM09bM%`KdJZ;!EFa!B2@*UcqKo\Em4Vc$e?ZN.Y9P>Y\GK3]!s6n.ZY0O2Di()/hdmFYe6LD\)b
%SOtY1Xr#f8aj!H]!2r[,,m:*l?s2_n@Pqj;Z-WCJJ:!@3W54J2*p"+,,l_7'/(<N+Q4Nq.MO.-3OP2@%d:J:$>-oGt[u-\me"WP+
%AVGE&2>oKNh7m'MhQQe_cUP/*"kmY^CkP7PW`]ilF."Q.!G$F7En-Ml"*S:rT^"3mS]MP"3[k"T>:)HSaTYcY3Oh;tMrLNd.F;EV
%$;F/f0Oe\6&t'>!X>WWFS[aI5gA3qD05)ZtSnl*8P[N(>P[mif&@F?k"Br"?@%r;G+p%;E;K>nhg&4sL>^@*MR-*PZ$VV2%R[jc:
%=`F<YO_U.ikBbMkpB#]SK9$V<B(r:T_B*t0YJrEM\_j?LQrdeja;4O7"koc"Cc<Sfl?83>O71lm3M*S0^mg+'aF4$sM*=SfB.mJW
%Q(6.0NbfWaXe#!D#kc;Z4eJhP_OaSp6['Ad:Yahd2F["`<F/^/BIgI1*+QXhjY:Pr0>&>F$cCaa[9>UikmrbPq'5X+de].pO/jI9
%5Hsh5)Z9H]EK5NUHmJFR@[a<s_M;jhBRU1W:5C>)nf0.o.InQ>NG?/#-$dS-WCdOuGi[Dj,I)MT)4qeKo]'RbbOC2_IH+j7`Ea6K
%l+M5Jq:0XUg-)m!m2nAam[oKr's#ZbdJU0fU]9N<o7,,]$p!g$3>7C,(-\g^,jU`k?Y[of>HAEY(5J,dXE:4oHFM\!@9*6Sdb%[q
%1pf]$S3R$<U?&<2GoF<&3rUs2Lk7$"-A7`%#]W[n8s`k+V,rfHUh+)6*p_J9mnN!N>Z>q2]h_I)MnN$uS`@djSM=cUN(jMVc9Sf2
%PEA'k!38S9VYP;K6R@(YKW-H1D1Ll*;"X:sf:"d>"M#U2*DnhjY'9YaY!YAD#:Wsf;"(Uf?'ac&C\ghI:jlD#:8lRFZ:'&X[._ti
%Y3B+D#)4lBZ'M``VePu%9fLY8KiG>^6D1bE_N!\k/W(Q?@^fTom2kA!`:aY9ZI\#;m\`7<m:c[5K+4=6onr76W"GMiO>N+Rn^EFL
%P.Q]5D*ql-<DWJ+fao0Tb;utc[pijU?Am>??tg@W=_-t94HQM\K.L%@YcMG2`.+W*gC4W\)+)/rM__tIq)Tudqkk6;9<OR`"fMC0
%$!'Gbp_S7(44g6uE#$P<N?e$\46jt_4r^Jj9#_038o%I.b`J8mFF6Qs)cN;<B%LT@c-'/D]VI+%'g<u_Vh&prl)#$s`2/lD8&8\K
%H10#Qs4"%!*TeC$S3NBj1<NA.[u;"6;,7Q%+n/7^1`cSm]fBBO;E1`9N7=M2\&8pKXhC`U=oI*LUs'F_jg)s7=L5YZJd4^8<VJ?j
%Yt.1dKE>B^J4n6@DkOKILPB)6Y:3\(m-?(p+ASG&DcVN-`.jC]7tD#<0C]Eu^7FX):9E[B=nse*^"4(pWA^*daA4`2fX5F2BG%"d
%4'+2b#^.jLE/EElYuuaZAEP+qaZ!:kA0%e)]4R"0]Z^Ph`nXg0o4:8_Tu-mVa?TUJ*;&Ei`_b0X^I1Yu<S&1Mk()F*hj`*&q[+=i
%lC'8WZ>LGe8P3>$iQgfs`QeHRkY7j1TbtSU&&LSF'tscLmCsh^Tt2!f6]9rNk,S8/ejKPKNV0tP%0.tn:T/f#pKfEp)3nNmj[(0.
%g0S.Mp?ct2p_bqj:GJs:A+$MC$iF!$bJiP?q^[SA>&Q't";DqeQRI)0j>]5i8L%RqOqQU-0q<W%2o]15YPiIEM_!eY&`k=!%b)["
%%*\i975]5@E%eO3\.T@T/<)]`l">en:E8Xu9/YeObZYK"O.[QInhN1Y!";QBHEG-l\6iI.i4PVQhg?0XeB#1sF1YXN5J,_2gW:N0
%c;1IniP3L:rh*KVd]u'%OLoJ%\O9o:N>t@%#Aau%9:GKH!rPH9da?u5jmnI'I;G_[OmDsE%p*;sC?"ECAK3#..WGPePo**D(hh72
%D)Q#Y.Cj$,-K-AQ6X6Zl3L`GLr:J]Y9$Fi5"kWgEJ7%X1m9Fj]Ql&.!N4rGE9=Khu$0f`f71KX7AX)UR1of7mAMGoVCrT$7J'_,#
%0!JBCK8_,EYTm:&5B8YHg-fh7;mfgZ673)np3dY5Y?d9fFfB?UWZWV68Lp)Z1qN-BN;`_3KRU.nqWEbi2\^DI.WouEU.FF=C4.G^
%m;j[jNa,4_bU8f\0m9K$(lYPb$4?(a$g]1%'LXCH%mqK_-b\`o-kF7N.UlDE0qn4iLD+dJgG`JLOcC>4jd&=&X(W"Tnh5+\G-XcC
%,IG*2f_]YNC0+\Gfme$LI9/a1lmlO[<^VQ80Yq\0gZdVej:W9kq",h9k>0+p4=a-a_p!G&IBHrSj'EPR<24u>3_d#]XRXe)U1**'
%ArL2L-8RQ+Y/BOrbS/d.0gh?EeQ%>/&9TuWULBZCgf5FS0TfJD!BMDX'o?XIC@Y<6IIFSbi3M!/04R\3FefuO@W-1_HF']_Y#g?i
%5<VQI0<OA8>o=?5'9_28!s5bOmgD-LkUA!'!2n,,aT*#peX-[aZsgo:(PYdg6-rOW"DBSUQhh^>:_?X"clDN%o:L4FPH.Q]?B9hb
%EpSZdbp?Wk.XPoZ?gO\3c'fCO@-VTkP#]Yk:1Pfu8U^[j7(.q;T"iAjC,^i5WXh8$@hVf8V(1=M1nrBE0e=Xt>h"s'oLTLhTR$WT
%frlWo?qg:lm<c#oBM'b%<!d2S1jeqBLMu?:e?Y^>fnM7HjL.0_,@+I"VqOTm'dl<sN)(R7ZYmd(%0t3t,-$A!crjOcBZt'AUAqgJ
%[AR^'=Nd/bhbaqu:>V#<`]ojo3i[HKVe6TA_rc_TQ#%Zs?R:5rVciMb7eRaPR(%X]hj_kZ[oB;0I4*'JZQ*RM.b9R@-mNURL6hVa
%9'oY%U/!0%2[@,;2Uq=!2@*kO>/)CoNZ(IUaC_h_"(]j8]a]ZU*R:?4%@-A1Rkf0fDIaaD5ZSn;2LhRL\$LM"P@_mVYT3>VGb_FC
%l]Z05PDp6iW5ZqCb=Gr>T!DG:=OM7Kr1a^8(E(a=;6Picp?pJic-O7Ar^GZie^u[fS\S<CO"#o<5$o]'G_'*e+'&a8+bj`'KqYhh
%=1uSA93^6JL#Kf(S("c>,sUP=8jm./KYTgsG)l';GAtN9OdcW^*"'3'F^IS99CSJq`eSS>e]&OZi#INhb<o/T;q;1I'AZc2#6=-g
%A@tSIrMDZ[NY)`*=KZcu`Sec48uHT?44Ui?$'&M"+*(:c?em*a>p^h0dUt^9FbTeQYG@2F(o^+3+'Aok"I6&d:K'$:G?.*MLC:W4
%U00bdOpu&KNc"tK9=-ThAp:/m0kaDan#D[`AtR%i5tGVIYRCOU<pGp]W;g9i=)TVYiFieI4@@4uoT7B.D-rM@R5Xgnj,<g;)2=j3
%iF^dWN1"",L>YpKJT,Vs,h'2*I4UCP"+.%:J9O>YTnYuNk2UflBn1OAr8:EK'WT_HDHH^^44TtcF&]^TOQc86T]Ch"I'S`B6?2"R
%C=1LIBCoE.H^MM$,r-f#OT[Jf:+fT+MMf)".@)_JIgk2?BKN7;Xe1s0aME%$<f0q*hu..uaR/SS(D_#B`5MT@am+mH=HJbn/Sj_A
%GNSLLN>1hl*MLX.3)>f4/0qQg6(A1@O;o:N=2/m"$iG>UkU[Y*;M()EEPYJ,\s<.hAJTPt5Y9/DC#*<2&5CaqWZYFJc4<;N's7E*
%RiT"oj/"4*Ja7_klLO=YQap;u((@0#*ok2Q]!D@sT)-0KSB4ArAJ[B!3.GArm.<?[g"\lde4$TW7V,a4@f!a0=paV^W!3M=@q/h>
%oK[nFWWI30kV0S`S&!&%"XUVn;epDd%*10skFhBIo%8s%rSF?Qh,1kBcDc#P./d2qVZ1G2<'X`\^1VeL",Mc(:2J<rK3fF,.(^!@
%b,Bbt\[IKYGXd#7AsVn#<%(/P:jefGA;\`FDdIf+I2eSeE_<3rXglr0fU$r444g52(0#o]#4CuRHg8J:51qf)EcL*-dc/g;NlmY-
%Ae)7)Bu`3K5g+=p70[H=1^MqM2&@`i?GniU!>g9mI:^^bjD*Vo/81K_;O,GK44,j:W\JkmDu.1@<#(noeo)MmG"ri4PSWWFm$oU:
%2=71VG!=?%HO=01J8]0*@\OMp]T&k@J!gjuQOj1WM$8.#/,9`M9Y5n-^<CF/;)*mL_31&N1Z*U<JH/0"/@j:gD#2bMqg:K]B1@/o
%1F,T3[<[]gF_u8nD0)\8SFN7bkB$kA_T*gN)-A#!4E\4EjLcqS@&?H7jmJgECG\l\];e;+neWNVL?gKfhd(OJl'>8(Ecn*4(En?R
%JkgDFa0!fuO/^"%iRL=!@`gV,pNpuX_<,M,>c,G3,2bCX.9?3h_RaQ(ZQe4#N9ZLtR\o5-MN3j%k[Zh#,PG,UGJ+/h7?/B(Ut9#_
%U3Qh4!)E$l_eG41S/3mDDI77S=n,r0:p0[8m\mYPl.ald'idMOK$es?&(t+;QM-s+=PoC);nsXMSnlUOX!^CW@ipR8<f+>e%#>j3
%?;>rd!?6\Egt6<R"lkS[)EVJi:FRjU@28VgQ)p8inH[kf]t;1u1FQjU=+;p*,u"PK_gfE[Vi)=V==dHdRM.CbJ5@!IT%$)#3EU?m
%<Y6YKX_rgS-C2$!W)lJd*]*R'C1nO#0<s)"QYPn]D%95PHHeehrT"DuH([@rhRaej6\lirghL(3T3pmXm<l[KVGOg(.cUb>?C07<
%fo.KrPnV/<X3AZ7Ms&!O+BVY^6Si@@#rI^%oJnG7480Bq45LE37I4L,:(\crfst88@-ZlIs-&KQ]tH\#c:WL?LG`QtqnlFH=Qs`L
%P(cDn6d6AKcIpm:0`:ZlF1S4e>4'hE!:9A\!S1iW"r26]Wj>f*e3Hj%W'?$>eO:'NFeU=ZD$P][V,\rJO87IK1'%2E7T+=5PgAg@
%RMfBF$K]"4;rLB?^7F[k>u%(rZDlDp4_AnD>MUZ*%8YU-j[c:<"4`qIKaW%(WL6nX4?X]@V)i2qD_S;%=O&qHJ;mB*F5<&I)KgqI
%C1mbXnr*3jo6j"[Bm4._)TF[<e)GHW_e]D(Wl/cHn+W^OK>!Pup[YG(d`.;MA"n-68EEH.k2RVV'QN3T(!nh'm1m5T#6Otn)JVVG
%iFJ:dju/ZKfE^=HTr3l>2oDP;>Kd<L)oY>LSjHXiXR"]VSaP&K`bMm^4/Y<coX_KHs5a1U^7:^4Cij<M"Sq"s^fuC&<3]nMN0YG=
%YdE\(@Nm1S[Ua_S<tU__;=1:'6juq0<_^r6VP4YX]tMQ@8B&bf<[Qa\\Ns&[>TKHV6^Y]@+6uu$GF[.4,UQdnY;bailVW/"OEI\i
%4mIj'WZa-.W`mq0Z5P=$;bju;"s[lfD,#O(Wqh1aU4BGQJ)o)[]_1ZMWM8sq@!d$pLWqt$?g.(J>aP<a"_)d.cf;nuaY,75P?hKB
%28]]cD]\qXHua"9:eTU_Tt9HcS*X1gk8N$p1prM2HNrlfmDrcHd>B2"Gdog,MdK_.?dP^UDR8OlPJnsS7p?_o3uF.T47i:D[SkH_
%?RFu'aWUM5lZuQ^89K4.%E%tJVT&_X5c:IqctH?WXjl\,Be^<[_ZJ-Nn3?g7[i^!D[g)G4f?4'BGQRD!M8hA!X.,C7S,S(!]14t&
%Z#C`2I)\L#VW=mA<$6LmCLAWa&h+\YpYbGddn4cmh32-$T[Zp2A>*,]T:eJQdg6oJ8q]ksmVtD4>2MgLIW%gprH.<1_1=M7;E0h<
%4*1j^i4'8i9gl*LY9b)5W+A2HN7?9WUh-7X(qZtcN_YM$L8a1-RJ3UGLh^`4UIKe#FVHu7lK:*571Zgn693E)XNB\MJ@OJ!gW;XE
%`i3aD6.GAn\-e(nMu.>I3gGjA]1_c6U-g(=O1T2dNRRp/<Tu.UYQo.>dqDrFM-(r)"[V.Ed:-YhlP[c>:0r36I\2WG+VpT%QK^kp
%b?=!CX>Ou+Mk2.A-+VDMP\opYpL\LZ9;FnXesbP=q7CQpWe)kd5O'*dl7.Q#eAL@+7Qkt'Mui\S&l2c=a@R'X8V$*FMSuZ,5.7SY
%3c#*^YZ&KFO*gZqc)Rc#1=m_nVEQP0_lib/G-XUGphFUh+`[HX"aq1'p'In$cgpUI-Dj5?'FBAV4jX;*kI,uQCo!)!-,QID)o/F.
%[)u@W(.V2:n`DRL=C,A*#56*h]IbU!kk6%,?rPm*`te_`E`DA0h/rFkgBi<0Yq<_<$*d2uiKo8N-<?V>>2BJThZdo?k;4bFUd6mF
%)=#;5rO?RC1YNAABf\j3B]ThHXj8`1('hsArT:@Clcl>.MtZq4"6ct/)#!jp;_q;'<fbton>nf-5.2Cm5BT'.^J.>N7CYpgPE`1`
%o_;W]cNn6n34rFSW:BntBl##_V4*::XqDM^32oCglW@pI*?Q2BhL&tDBQnnFHD>)%m_/h[KV9"O`tlD1;=,E/,@@'(:@N1dd*_S#
%>5E6lF>UaDoGi!Z,i,*Hn/jTKTaf0j)5Nm1/-7QW>mk4uqX!XT)@<+X0C;rM_fYsc0o'Ks0%IJi'\rB&(8AI&g%S;0L<_I.cL>bb
%lt&f$bFU-`9FWRCZ1D0j:Z6>RbX.go89^%d84iZk`,AZJm\LWVYqh?#[7"9oor6KI8a3BtaVI+KPJ:*b]U.'c7aB%tKBK.MkP3A\
%.AkMQD_\pRVC]^jLMC+?HE31d%#R\U9U##Sfhkr,>$P_Zd5:V8=>nUd;nEh4OY=!Pd[]XHmSh(<C0-I4q29^j`9Ve6[`XM\-NP:O
%ps4OtlSNuGjYn%R8MQ3MOpkaGH6Ns24#\a*4m/bj>#0CK'2r>0ee>3ijr)uMlUdP<*NeKqc?R!sojle%Nn.-s0J)^#b`.nrOoP0_
%Sis;uSBMagAJ#c[kNrC*alpo$Z$JGFku<m2jWah#Vt(E/-c-g53WI@h\JG)OmM&Nb2(8$8Cs.h"3K;OVMNVHud>Z.\$dZk0hur@#
%TKQ2upn_8Sp;[tNA$[<XmSgg<IdBp9r*V,<plpi0+1dls'o>r*,V%2]%a55.dk`OM5JqGebg<5PVN$Bc+2XGk`r`]jl=[.G+lGen
%R;edT#X=>?i90-H.f$``]I/@i9I<l?s4]if-6pO0'#@QuQ1a(X<!;3"!XqI5-p=U>I?['7S2d#rKrMkO^<tW(7i[B0?6N.d+52'a
%]('3a]P%ol]]FGCi@Nf[>'[!;T;62k>(biD0*nX6;);%F\]mUeKX,#C),4M!b3b`$,?pnVN&9Vb6oikTaH#Xq_6S*L5*;';l':!o
%O[0UX.'us\L+kSt=2MA"kV3>2[Ga<5AH1k;pmHd;R;A%t=R:\MY,isS@Dg7'c/6)][cU"I!p8.7Y`uUP,Lp.rZ4K;BR4SW#N9G#P
%-'qn+L7j^P0GoUq!9PpFr96cD2:-"U:A(UNT[Y-22mVhict-1KT;Hl/9NHO(Sf3>5)[b&>&;2nL#a:kP+q'KKq62Km\m3:^r(L:H
%&^)<gE=>);UV'gq)tYgF&N-9YDl8B&1ppuM#Bt[!1O+>3YhHLG\.k+i:92+5O'L%PF^'o7p\N*@?Fr:i^Rcac\a[S(LF8fPg83Jm
%Y005]aGjF2s5(9mLR%=\eX<kY5/U$inkSGu/A3lbK2DT_S`+-QYNO.R@8Nn'9cfBMVh\i/)2]epl:R3+W$1.(*aV?L$)&dF7@!G6
%Rt\N:6Cs0sPfPAW<MEJW5YJXChPV"K_oeV@rf0Yk:S]SSpNImgN%6!H7B8s.TE)srCQB03-/kX9\%@u80Ws``VeILWg\kNjX?^\X
%Y&MH"nLQNO;M?n\^"+qGciP/Ah'k+eD2:S5F`Fk$1i,)j-[>S$a(aJ3hcQ>TBn_DiPYIY7dkV%p.TJL`Zu"Di<r\_RLc3ROQEQ1o
%*LVGU)M=&O1msQJGQ:EXGmqmZ[E1Rsm,.]Vc?M]=(SDp]h0&DSk+?WPBW;A-2c?7^;isNop'Zr3Be[S=6QqW[aLtMt6Dm*@#)*.`
%:-2XBME.X@H)B2H&:MVQNO1U+0)1db'66n-B;#nLpt-i3hf4\.*?oeV2A3e\lR8.H!W(f7TifHtBPHkg!6M\liuJm;[$TR9VUc,q
%fsPWL(-937Ver4`GNZn.LEtmS)"$G=gn%.):O5jQb=d.@>lB\._CIfoSsMJ,"AM>q%]>(dHIYa5A<<6A(CI;NT%TMo\?!5>=+$*W
%bA1>(LPTE;&2lut4fF_Jo%g\nkO@o%nHhYG[?I2eTDe,Z.P&V'+A*079M.s$gM"0XAAC/n:-qpfi1L*rPspC3gdSZr(5t&]:o.]*
%Y[U]Cmd7S$VtX-KQ,as;(FSr^o)AIZ3[+E4'$43<aWEI$at[d6"?^+69I>fVd\,)*f0%3idDFGmn>T^:k.BJ-Wdj4$.9.]*4_fn1
%*dqG^Yr-cTl?82SFe)dD]=BsT,:u/pA\%,;_i7ea?!/<i_<s%=d)\3hVL&o=gdu;[Oq6iJ?$\thIm0s3'%sn?H`$M\CLPB0$_h`#
%b(Zi.Uo7+9((YOo(W5E</Y5c&U$D;Qb</el9=kDqO702?7FaSLM.!6n%^h"r^;e.4G!kGjDJ/`;,+JI@O[WUU:1Q_^S5&N>eVE7t
%rS'aVbBlQd(C+>cY"`PA]j46aL/VAi/'4;dR7?RsB+B\3JJa\&bHcSA.@<4jjB]])2Nom$7^oL?#"E2FmK8l0U?>!Xg9U(F)lV$/
%IWM3W;(<5&O&N^TqF3W!q-Jj6@#bLsW&Qd#1.-@$":'JM&-Zdh)(RVth"6R_BL>6dp,1>:7N$nga;gV53a-^8p\:t7N_9J'-L(NG
%%rjqSlWAVGZ:'):"uYUF#+FdXIAQZ_AkHX46WjrKY\N0#EaK&crCXQjW#"rIBO%%qBi+5Jq3`522RtV0UI2(IfUXjuGjHgkd(2W7
%cp6FOk:'^PnN;21o30iH9-Trg7=<aW,3#Js6c9pl9?u>n8*b("s6f>pVU2=Va]0@3/@<Q:H3c3.aJ!0G_(3'dL'a?Ye@?P5,SiY9
%6T*2H*^]-?/?JBDNI`(>B'uA\/EBW?Tt/eR&5*F)%O1PEl]ABB<gSq?DY?3V&m$I=k8F8f>Hl^dnI&sW'dljDgb">)27HuP;JW/(
%)'&7LJ)n(CnG>H&M.;!.qTLk/%G[_M!E)"?SaLqmVd:.NhfD-Md_>C"qZ3a3,W!!NPDO9^kn[6O0YTInh1E$=,-hWg"mHC\ch-sk
%YZ4uJl#+>J$K>bd%N5ht)?.<U_'mnUh1>hn$b%7LJefdc]+THq?b`.`O*:qCMm2DB$tK`)0oIFHpM:1f7Lo*r5ei#>Ku[M#5Xm9N
%bq$lX[d89>Gtb4`ln9T*n*bO2^DF14T%A70!n[pb%mYfu246_#.hueSc#`3OgR!][?$-O`VCi>5S8stCR:dYV(<[$?P#fTGW2&$g
%2I`kaiItiU7Zkb]MXk2<`BJfMJa\TNLp?@K=nS^W8:S0*g?4XVc`;PM+XmYfTQpXW9!7W?/CI>V&U6&;h^K.7c]q/0MR\s?q57+@
%/D]%%WRjl+lC!:31d`N<:Q)=@lZmei-`l[O<PCj7,4.SU@!'F,??^JbjY`UDjQ4ZP>;7ci:WJic_%4>SC0XdmH5NP(o=o_/huBt,
%n.(4"/RE;(CFkl?'kTLsab[)rUX0e&FfkO1UHkOPYWfHuZq%j?)I'Pbf(C=`GWp5J/RIl'j5OR\Yr?9j*,#%^hSR[DHOFWDHOF!G
%ZR/W:A+I21:O!8f#t%Xl2Z+iW]S2ge3U,SQMIa%9km(b=?nnXSb1f"!TqV_7'qWZ[Qdi;;oZYmj>Ud#,MCaIQ)S$C,k*@n^!\ZS_
%F1K:*8T\\C3d+S-=m^F'i'3;jAH`Ao;HdQ;Q,0qd&;<gTTt)s[[?f]!<#8H2/EH\;fE#][d]>oretI1Tojr+%1bqed3OT_"4G'C;
%Y/cVKhY(=12/%L-A+<#X<d%j8Tca/!K=aa'<;t5_2nsDq]t^a%nQrnq9Yq-gZ5irFm<Yu-AVl8hIg&:=\7s1,cis48AV!5b#s&^"
%[eN"Vqn_Pi>J,oeg9kUTT&Jai[8T:pT5'Cm[sHO>YFb98XiK#Nq5N+/rdA@78iXH$["iXkL;?^cVoA:-=lTJYhSQMg"]FtW&;dY\
%'\0hgERSS]c""dO(A6Q84k-%A'4fk08#GG4m(T`?d%:$`C*`fEqG*<j*'7ZR?T(<4B_U-t1d?+E\*LG0ICcIX=[pXOW_8ls<GI6h
%:.s!77oG_n^1k-P>E1#W;=9Bg>WP_N+/^@]FBD<bd!(iNVrr!u<\p:J>+G9%`]h)791rb!W*PfZ0oIW09eLe;YlppI7-`Be('_tl
%3BnoKb`m1jq3Vstd55<0`?Vf`JH:-bP#tiMEEN%3[RAGElJG&W^nc8KqR840q_OK+gDO<.Vf_P&f^[^THEL1t[$'"&?RFb?=pmP=
%:uSd/f#2aM'TH9Z6@MqfS-->]Upu\t[E>4^Ru]pm\ME++'Blk!5F(<ppjC""qQRuh#WL,4j9g]/9X^=#\\l`^KL?!rnFV`55$/hW
%`QUp.(0`hq$j$?T__gZ+cV1C/bSqLA=#`]<@IeO'_2>Yp`$cN+Llc#J]C!c8Hoo<j*]BgDdq`G"#/t6]U7nAQ<_:EQ)c<@e@X8'5
%6"UZJS$@NpehFO:DFVc"(:F!Z;_G1,4>L#%3ncUog51-q9;?nb=h_6=-NomC@\=OEj9"->+[o>4Uf`\R-"``j[=,3BW2gmME@N/J
%0d.bt770fj$Ot*QR\.F>M3)uiVb!JuNDcf5;f=YmGBDRKK-RJ%rY@P_hup.1(tXeS];u\k(/HoCid@CMd\Y:!6SRN(Wm4HV75]<m
%Y4S;'0:j142`RAWcnD5)jC#q=nZ+qu5=gYbNV;VTGV/im':F'Z-3d:sUWXf*(Qc+<U)4<sVkUbf($!t7*Xt+dbQR3WrW5d#GZmft
%cJUIHCE(CQX4?H'd]fWiEe5ipE<keY8Jb%CdtO0d*KY??S\M.cpSp'1rA_d^-h8a(N\!FE+g6F!$:_8:XGC=c%H,FR7ZNG_Gc&L%
%RSX[Z_XADCN\qV'GKk.HfWqeV\Jg@phd;+bD/)ioqDZ1?M%)^N1t(K+"4U:5W@jVNbt]'1dEY1@-O[Z]-_miFWF!1Gd'oc7ACV5P
%BX,Y`2a$,")G?p>>CL;`2Fqe`OZM;2]hea%mX#/F]6u2^HVEV_l$m\B?9X,^?9Z>Z1:qYoDXLWh4r-L;O9s&Y%(]rZ;+@(,h!W[o
%`?m-ZN/Qhl#fuLV=>_?`4oM1t,U7m'n564YQ17&/0X%>QW>JE`JMm763I(o804@>Z*hq,HS4tlfnC'5Kc-H/JQAl^_R6%rp0]SY5
%pn=d)o$?g$:O0.Pm-Y2[GbG/L1+]pU-;7)[ocmMQmRm)PBiXo*P=r`%=0:RD^WVBlE7K4beG=<qHGiF`)Ls!.<bkTdW7=&c&uSD^
%V;gD1<i\Her_K@ncFu$]B#f>(d44f*TPR,)+Y=P3"'qfV`5F0-5eb.Inns</K;?oUN^\TW[cS9DN9.<@q*X=DoJ\EM)=T@WeQ.h[
%5Kb9SUb1X/Y.-1]<4B4335I93,bC,;=gdg#SKpoe$UlMDX94"(h5HRFC6r$SKi[h+Pe>mGaU`j'1EJb.5$,J7O.4.^C`r5K'deVa
%HD-44-DRWM\C9)=):r@,/$Db9>-pf6\/Le3Zp%IrQ+&f]#']hWDB+":2faB1G(S?+g0r\!%ZRg*JrsETG6Q1#W-CXnq$)Y\KiaSO
%W+53S't*KOn"Tg<\=QH%DjL-qnd7?13m4l9jl<5CHbnVkNVC(3c=*^H/_"K-\:%&rVS)rYY!m]uMlRH(gR$`oi&>I`h]l>fK;0D.
%gC9aH\t.lbKiS&t^(=<o46hU"VLZpgqOmDs*7Fl`Yf`A$G+^16Ve=jqJ?)PL3p:XZos*dSQ!.kF]*<#S/`&TH!fKk*G?0WFa7n4g
%%E)lQ-2QD?rG>lNh5Jn7CZOe[[hJ[s`&abqT6X\-fKRbZ@]d4M>,nV4l7qSo^K=qUbPMs0r?&B`_+sln#)bsZg6.>H<,.hD*%ZSb
%5-d#5Wc2$ncfmQK))PS=:8kRekC]r(FAgL!3na?rAb9J02?SEp%h=6I^?Q)*^Vul>bNdpG1r112qn5#gJBR3fQakE`^E-OI_h#1?
%ecMbG-pU9plmta8:d[NBR"2(J^U5fG8=Ztfdkdt'2jdeG![atq5gtHn!Hqr%R`3Tk^5ABNXb(aU:3ie:/c""bqKtBZVr!'&)*k]X
%Kc\/FGA1Xg8M7(4b/Xh+F&nS`9ct_0n6AI=j#QL2*99"lJ_k,8X(W9g]4i!'l-CL,UDAIY)^J`K;>AV@?4s7"].l0a&.PHO,jT<5
%WMH,'93LPGMJfTVBoYVPWmnl"hj`"^MRW[6B`.Y@E5:FITT%Q;baP'/Wp^$<:b6$tN](o2MM,G365Yhc$cG!J)>JfW&9=Z`UX2rG
%=D<)Nki^*\#d4kCn34V_>*QBlQ8Xa-IX(FkIA+inP?mIqg!i5(9b2WuT";5/cUJGCZ>m`;.@5_Z!(GVIdn<lEr?/,A9TkDc7A%"F
%3ZV2AI5h+`BeS*adC')M@KU[PZTTTn=Wb;1;P@<40VG5PTRSX+CX.RhO";).3qB)\P3DMbiP49>e!3Y(Y\Z^QQdaF=imV_rXPlVo
%PKQt_%I?pjdL@ddMH'W_[<rN9JJilO(#Du*#fX#Q)mM(^AP@F-PeQC11C=0dE05QpX\Qj`&q^]mhoRI"]t_%?rTtdK>1`_G*Hc3n
%T5%04BUlT0H?[Cn??H4G<A+F9Tpmu?V,QiA5`\dJ'j'7"mO2@h*/RY@5e!D(<Fh?9FnI,Q3qd^,\dSuerDia+fYc+?.B7RA;Y2iL
%;uL@#3\4,6R:`+EJ%mq;CY)OB?qUr`F)GtEEtG?e?H[nH8k>&*53-;e>nci;DQ/GTKEsdbV,;Mt^P$>j`S`;%q,Y^,C5[ZW89\&Q
%V@G&mH`YZMSTd^DL:\$bYGTcgB76c>\'l@5\>Q[g08V%PLb3dqOe6BD\Yu$;%M11:Ir!.9.?90m3.)/H$cG^N%>$[<jH]^#bh];l
%h<SR#h!<pV_ugRMdb]P4M-kg:K2skYjM[Xd0^l?+21Q**B>q#g*k\44<@PSqV)/osF4>)Pr@m)qn"Hg6b)0K2k(g[ZdZN=T5/6l]
%E5EfC:MpM"@qb7WV8p&d4do#IX]Jn<5Kq]h[&QnJi[u/t/eN,bmXkqu]q!Vu`Muu$=pr]*rhP\6kV17=2QC2fDI<;$?5H[R*0kfB
%]Dnmi&*0t:W@1gt4D`Y\>/]9E[T]Ne=&-0_-^ShWJ;_>T!%Xnl08b_3IKm?N(q`C4Fl)lY4hdKQ;(]DWXqsA'b1Z?X(NL=P'1*c)
%?WHf&b4q>dTPNq:QrI\T0T_5lLcTB(UU[)#%QET!RA4fIAkuGM?-o6_L7\m,^@:`/]?A68=U':n<3?hh;)Z%'TkYWRffok-$c@J/
%1Sl2[WW)_ib7,KrNUi+HoPMTKUDfb$puY,gSeITo-e,]%66E691'1jH]dh*prX?Jk&-cr'XfuWG9_33O&J6p$Bim#+7L"j/-j?7"
%PQ-;=aa].!MCP"!*TUSknEj21$A]Va,;[&la)%`5X85V0Wp`R#M+sh7<%=hXXDhNYdR/(PN01_8eSmDDae3%82:.=g]`AD9DBJc9
%?4YYPUC[lZ7lG(d@Q461>#I#DZ(O>W-G)bX\6R(`SdDig_*-EC'F.^@P&]N-j\?um8*=_kiA"0$'niPPi2V0IW'g(:`Rb_(W0r25
%2A@an]YG>1HTTguEs;6N-uf#G8@U<)k>U1QP_g':]eED4P)O*WX7<!SHK%Lj*f=\hm&Du^7gb4DdJ^e8S_bV\qGTSQc>6>)LK7e/
%V+g'WnRA]'l(^#a1G=@t8u2c[qF!"GYl9VI"?QDRHW.Lf=c3btAPl%=W'>`lSpDUo+[:AX'baPdJFn^A%_F4kH@oA6!p$$(p*-D"
%=3O^D2op,:LkjXH>E-(V##a`]4S:a5Z;AU/H`ojh@I5`m'jh?S+Q(d4HoorR?K_Sm#h#49.,XKY'n*+,jAKtANJS5S.$HG>,J#lg
%I+)b$[g8B*#cA"&N8,"c!%t0bX3"<r/H?=s8[P[5SmU\SJ(dgY7and!b_=42TGJ%3O5*FXCLe(,\a/2P(#$$r]c;kXWM=sX2l2F]
%W_esc:/4]0SMZ**<TfWp[je`hYX"Z@TiPa%?E+-'%TFNLpfcY1e3\p,[AZq.>QC'hD0^0_c1IG90[0##oSCZlq/aRm>6'&+S0Br2
%78_/B9DLo0Ds'077uQ)E0FYG2GbqPol'#s3'8mOYBiVs%`Bc39+lVNn'QsT.gU+m<Mm)_[*a_6Fe%=5)1\T5'H4lf=Y:`bP&+6@F
%q,fRB)Yq*uSM;*VD\h:uO:FGfpFsc17&dQgUu$B4r9sA,F_sLfYA)OH%Y5YqB3$52M!AQ^25A\SG<*?Jh`"R_6nHj7O@1$kLEf-X
%PNI#N)F,?u7F=Z.h:U6dRb(^ibRP5*Z//Cbjj'n^kAQ4_*=?7[NU`5dFo$9i;uOBB9;rZ2n3J\aCWlTcqober9\->$fJVU^iIs:K
%(WBe-\)(=iLQbHemNm+JV9r!"AYpVA939HD:lD_hX4!2t7\HM"0r`u"Ju]Jir'?rqje\sGp:?Y19nVLem,TPMa%L@6FS3?d_n=4@
%HpfC@=4L[X5RueT#rU<(7K*n73EG?o92Njj%1C=t/^((-[GU<^&IBN7mV]H)YcZt+0OLU=@N`]X5ka^$.i;+uI9]1P_s\Q/Hb7k^
%gR6@:D3Hh3iuu%ul7,!N*\pSP&N<R?Cb%LQ/#fgCMKEOfb)*K_c;_Mm5tA1o]Y&;<Q&e25NTBRtNmF/2%jgu]GXqEbm.]'-9u$.u
%nmW24^S=DtV]kT0FThue`uKDuDSpt=2l@baTm.sX8?D<`"uGh1R@b<9fIWa4X_V5Z$EX<",.de&.p"kJeA8l!P#f2L:hikn,_mQ/
%KI&(`?'Vgd+8`J(9STH@9Q@Uti+2WTjq%t3=MudZ/[b;Vj;7Z?456Z<D9=:4>H/k&i$%jD[AEgLGLlKlj@jGpMI->D+j'Fpq"7#e
%QHQ5<Ddla_Bl,p26goIej\#3)N]9%Lgt=f2=P)"O3ZYQT?e9SV.=*0+-WtNA:5$E-:ns4;eC'b3&9e0$pNr+8G!F+!AeFLQ8pu=@
%Ng<EtjC"A[.tWC2Nc0%q5<4UU$R.1513,fT)ONbJI"r(]&pggo7QW*KBLE:25GMI@'A!KY#&[dqQ+PnOG@L]XK,ZdWkje%FO8:(q
%L-SUBqk2-t_NI+9?"IJb6Ji_gF1mY)O%qo)%)(#LnS9@O'$]der_iGJ^Ec.RX"%4JBpsrer=s*4%0MF;K<o-iXV6WBCMc"YYI]`3
%#NMl80QF+fRK>r-hJB+E.:(_(\p&.7P)DDiL4Z3+*3sU8G?G!OVhhc7pF;!0)N/*:eu6BG,<n-B`mD^^_d-3^-5I>oIgW#l9o>cp
%7^1Ym%Aor(2;n5c"MZukqjr?.'?up@@]+-W42m]6JaB)?4N<c"[^sen[o>iB377of5nlWDj!KOA"H.2ApB=#5Mt%P`gb/>$bEKLX
%:-[q`X=%[N[`*Xu4D"DL%9FDl*d)mi?GAJ0f4'X"[pLD%F*;=:_/UJLo(RL[q8'd[pY;V9(Y"6GbP$phD?5uh$Bfc]^'o'd7PDfm
%6`!9mYjrPRTLRFB?u$X+6\_^AT\m+CnSXref`S;mH*J.c_p@l;bnebePS(P.AO%l9QJFoJ\]_IG?(-gGJ#?iRb!U@%[<;Eq2q3&*
%is\])@&;ac"[BCS.$$ll>0`_"Asu#0<"\1K:mQr&dbN=-;>s,4qXh(HB#O&5ij/u5'iQH(V-*.1p9EfZ:`JA5$YqE"8hlO&@l@CQ
%pX?Zd;9>52Zi7n&N/c;Jq57Bs:f"]Xrk[k0atMd\E&N\1'NGM0+%<Al'U^LW6s9n%6,`8)<2dC+Z:8_q"`q"Z"5\=4,Ea0q/eT9s
%V`OOjDVr``$hmHX\Q,p$&%\eoXmiZ"<[K4B'Z&eaNc6q)3,$7OH\_=!r+L5sNFkgI%EtVNalU-cXsfcdd[rbY@6'3V:?sh:P>?J`
%:rq0N:L610#.<]Ai$_!$X3g%Z+#sB[_cUaLC.@V0rqi68?./nX=R'#Yom/1bl?NB[6;4ju0caNI#p^h#L/g1_i!DCe4(0$HOOb3^
%X%QEl@e6QD>])V+@8FFPj6(Uk18mY:O@CP^SFR"f?1.@PFJl.]CCS0T`qB.p]le17T1fbX=]!_b/Naf=H7K'`BWj4Z93l<?/3oI@
%=G8VV>.WWMeoX>E&LaTg3Rr\Zm(-SuF/k7Hr4FB3F)/`,*B,]Wece^.E$nBOS1L+T*WGr,.K*XiV=_G8X.)efA"o?hf\Pa4Np1b.
%Fbk,^mZVY1^tBh7J$5<[$02148^A8Kc;>GDlC]sYOm5q1!%1(Fo<-0(4G<(r0X*UE\jH1GDVn35X829_;rP&CV&ltVXtB--\\5^1
%-R\iZR`_q??0H41_aCUZ>EX@CRC@o^71<fP#2i`kfaYW<QHbiHY*g9nQKtAmKu;-iLTrN>^Lmc[)kLOo*5r:eBI=uiFtc%RnsnSQ
%mLk9SIW%t_1R=3oP8n\2f;%m\B.NQ6jcha)LSgrB^.$R/3)o!]^d=HhA^Q4s9Sgq'-VXXF@uF@J?ue5t5.ug6L^%H/O[#YM2KrYY
%V:2o;Sa(.Wjn;l0pTX#S9?[3CpX`!e&;iGU+3Uc&UR:McarDD[TX-n2q$^I5lf(_VEnsBR!@T\,D'LJH#'UloAYl0Ag6e1/AQ5"2
%Lhq&tT+^l7H&@:&Rt_`lG-;ATrUYts^:+gPdFThUTl:nrEl$frDe^$PqO2oQ%Kr&1<3>E/oG/>S+W-!>nV9O:./(dU1mPXN?[hnO
%QZihAqs^eHrnXu,!pMn*pY-<<RM!CdLa[6udqo`N,;+G&B#rG3Rq3>4kI3q7,(0s]f?mg>/s+err)RF99S05Z:W*[:/P!\;:gDpQ
%F($!s?:O@N_q<l8:$A<a:43mmSJ0^97$@P'D?19<efcnMi1q1Bh9d'-)+DuC9#I/i^kSnpC=kqmU6.Mu`bKg^@W-%I&O8W;;L&IU
%f.\"*^%iRt(P;S6(iqRK8&gZDp\B!<:M%UGZSBYLQQG.Wqo[VVRtjamjM]VIG[3C6F7Q=:.sTi3cG1$%(mI9,+SmX#$QX5*Badgr
%Le9?B`+]f1jO(B#4$KP$7<dc[<tP1q-N+5BHNT/TlNgs3I8_$O4/=6/e<@TUs8CfE/u",#kOr^[:_."3;cRp"r?kb'`T.*XDd$hT
%@VR,b%W9;oWDq$0Na.fbFRdK/d'=k3EemUh36[hWklIOp\WJg(2E5(%3%^mCKnO/KQTKRVfqDk&Q"b.)*$2Pn/hZH'gej]?j6*dE
%Mn(8Lr<fniN7k#g<7j(J7]Wg".R*p%2sZ+Jgd7U)('</1RZrg!41c9qcIm0L0fQtVXY5e?EnB3gq7%BoH>JS2T=UTOY<`W+0*&Jh
%riuWD@qsM^9g[tAIiGobYe2?r@,6>8Z?_a"DAndi7IBA.(.PDQdWC&ODkRHudF7V?XZkQhC=f1CroN&ufm27\IbB.L3(2<^OY&tC
%jhTGWC[gXg[r_HnTq1.'m2.7c2k_8aEl=uV,oKg@ru7?.s%9!(nt%9hLnq+Po_=K:7SW$s,n<<`>Nje0l*OW!p)9VqemlD'DW.3k
%/_ZsAR+=em<hl99&6a^7=TdR>M#<sKSET)+[([Z\->3V<R'4YHKLW]:["*@Ne(DqC5:reRjZSg9?O1S0_V1'?[a^4HEHR&uO'WVl
%Hni(>m*(XeNt"lD=eFEUTYkn!Z`Wk;U:S'</I]AZ:g4p0549F$A*9b-B)#"YY$Y'3ir3JZ"<5j*;B&Q,s)!TU0(0\=Pt9b`-*b'?
%MHTOkWL^u5hKLWX8?3d,p_YHHGJ_*uQGi4FQC+d-/Q#anDA'Q#(E_CkSY*K]i@dgijYJgE??[#D]WfC'o35[bbBlQb'gUEQU:Jgn
%H_Z`Z'#A+I\qTUQ+J_lC(.urPqaUO$8i_96f:kE+AliL-XMj;"MBu6gH=Y3+mOY9[Y/f,Of;FXMr$B;^3&+Kg[dDJJ7nq%G7/&\=
%B4^eH\gRDqA+5$'PDp3bC.C1^75,MMD^;qFd8<1gZI.njL*R]i+A_MggD&nno9'@A)D.P8]!t3Am-k:>EK/ODX;BK%7>c^>`oJ$Y
%Ja!K!C\0U(lRXfiP(!D_BN\<0RbH,R;MnGKoJRUS.+47SDlV2HMgkrQ.[.6J'p4Z?S&Unq23^XRc&rnZm*;e=(:OnFhe1V,er<[I
%pShGVp;e%O@rLFK=e?Vp^Y8@Z/NeX:^t*"2nD/ZSO)qrZcnE[AQT(B1f_`jZi)sap$pd/:%\?Dt*!3CRi];3tbCh/+NPl.*e;'0O
%T,?1$8a4F?OQ%[krPc@.fg6aSOr7-H>V?gFNrgeNkXqZIb7F!_(q/sgem1G.V\?P^QqAcbq8KC)6fLHa[YD;'QLe,iE&96no#2Ah
%_:CU40^b>7+5):?LC%8u8o/QJm9&icT`Jf'[$2gd!/["G$a9uMl)%!>DjG6'1@j!:rY\S>&ooefU4MeVJ7N]E7^B(_n2c?QGf;e*
%'_g=#T1P8soK/Qc2p-!Wc"$3UB9@!q$@\_9J"bZ96@s'?P*MRZJc&MBJV*=UA`f,n(IW6Eg)%FgERP.rE;-tib>;EZ9=;:h&mW:2
%%RgPs-d"bK2Gai5lVghBE'(rj*kT[SVo%YUXGu3pAZ97q=#on@H8VA,NaV+:R<^@sRSX-(,`6ga[Zn*Q(I39>rcSLWMj&K7iBM[L
%,PiC**A>Q('jQqCilWQJE`<-`C&237M8-^#QU->f23++*BLb57fXIZ!<2R0'P.4q4ncW2b*FHs7o?'Tf_]FX`"nsGNWYtUo4o[LT
%Mha8I9CS8\JtF&S0N-"hr0;e7]09sjW@7&;5/DbYLWD$$iA+bp-(6'1.fs:(.LdOc8AF@T`)j.F1i(V:;-M%pnNN-Rs57NLi?E.\
%Rr(/ZpCT>#h1^mX$SJ`!SmIRLTG2:F.%5U;IO'i17T-<9]Vi369]HQg:4-tlC-Xr7;^0>DH/Igg%QoOP13>YReqiT=HAIQe3U9nQ
%ah4n!$!og3NAQ*`cb(\%k>#NX-t=%o!Br1](-=s2(^*2s`bd?3(V=]fY9r,GCckIcFe(V5`AT?J4Q[?m1::a-rkje=7O+Pt0IXW)
%UE2MeEXY&AXZ-mk"MtUd)T<\FZmq$+)2aPf&j=:KDVkI'7<)*JDn\:4Yq>Q=%WfBIZrf\V\4)aU?"%I)'"?JOM4)\HjEdW,^7F0u
%'c%SAKYb:Vi(Xe(*(X9<9*mB+Xa8C@DOJ.W9r)=b9'@LeFqEbqimKU<VjND2PaoqU0\V0?r6if\:XIE9.qA(%D(%\h0GICm<[7'a
%CSH.[%NWf>;Ya>OV5Q:JP?uOrRJ6kb<[^Zi/ST`hn<:E$_k-/eQR/";Ak@Ps-up8nU>lQhM2koQI[r`E]R6=/A`"P*B^O#7[![C?
%oZBcCb8-RZaN:D/>7K;&Q1M1&n[^As'S&OT!r`6Z?'"\!E]$hKL%b9@ZZd]gEZ7[B=*U6.drJfuh>\TRSTXA\qu6t`n43Q072"ge
%Om7pNOiSeu>UhKb<d0]/R[*F;TBt1lp08gAn`Ms,dH&Aj$I(hc^M.6?!(m`'&l8dbKCl_<hd)2Sm]ERt);c"Ul+'iQp?09_<F4%0
%q#]0GjF$4hrq,Z/Go]<!a+r6]f8#CX],lo^.`ZKoc)ab+bPro[LdIF;\.EkFnb.5^B#6^Cr.6YX&36)eh"2-*a+$7NV\7RmMgM<p
%D$1mj:n$9[)J`q+RiL?c2JOK6DPE]#/Y7@CdPsEkX-Yg!VfjZG,@=]84a2P%>b;pSP[fd.6:kMdj(#^;o2E,>r/A^o[Aop*(0R:7
%DB`jejZ8me1Anb<p9;1WKJn*:Rc`X.B[`U[;5HP+pN1,V1cABW(%XD3U2cjcdEoL_?>tZ&W<NZ!88N"SQ_G:=H%-d.VbsOPjE5e'
%Q#a\sP,>/K-fPpZ/dG@C8B1PE"KsgSU=]Rk/jTr,hS[`7WaI7!c!85^,`Mj"FdU3'!p!P,RtacBe5.R?W),4AZ.[A*.$h8RqQXo>
%mX(,[4Mi+ZA\cV;eG"EC1[ppb*G$N+(MPU=gA^ddAtYRXC"PE`Z<M(HrltrqSb;R&4=LJ05p7'COY@]PeE;a$JZh03kCQe\(rgO5
%C@rRXj2H((XjfcDm\T^-n8<.,G?(A)gT>,bMF7Q7MA!%)P`TQ^M'C?;j@Ujt2UpUsrUC[`;fss,gq7n(FbIL'gK@8VcXam==$&mY
%V=ir]euSpiXEDtO4m^-m=;%5h5cBV*#tBVp"MnN86,qT'<AQF*Fq-clFYY'(.?JFaFSFiNR!5(ZVgNj@J3W5ORg/j?K;Up7Y.[EY
%T(?M2BJiJ>Id1nOmFhC3':h+tql"rPLZmp1;IH[nJPdfdr,-f4add\7V%^C#4BTO$/.ZZ:nJ9RpB5g'n<.;QX+<gUOdHn+Zl+@k4
%=><d3Mi'W]9a.7<dp&TA`5&sq\3J:-Dg(KlDN6lJ[<qV%48+QVFD^W@j&nUeDpR8DcQ9kpR!oW1SHKq)T$U.@MXE##>#/iPX$gO?
%XY,TaeZj)[%E<-F2CZ*h[Il7t?:04I0G%0r;MrD(`@r-N:sCeui*,k1Q]^'g8<L'/$3&W'b*s8TdnpO9g[(>na3Z9=aMZHaZt5TV
%s$Vnd/S(&M1!hsj\1@Q]GHR9F!ut[=B>]op2#"b/S=ksn_]4#bU2jhPcQpUsq\@Cq,3@ktoMnj*;YB%3l)FHbki?>3(YNX7Ln_du
%cY@>s.?u.3XOC]]J`=d(\YYOFaeMtp1V`^`1f(`W`]uhcR!-tMHa/.NF>$.T!ghSW5d[Z2$pW^\:<O<>^?2q[S'E#*W@u;7FN8Nu
%LU=W%N&1IBkPDdQHN/>_U)dj%7+I(eS&V9gO"pR*/f%ZJR<jXsGWMkf=KTVYRg2Z8f:kF>'A=DA&b,2W.42"]HJI\gY(<];ehq]$
%l?81pEs7lqY!ApcHgc+9Cgu6*p"L4kQM6&1,!4.I?a"qs/#'25J1A'knreNuApSE4gG@?3HXpl+cDGa1_M43uZ/ZKR4=XS<Y':3'
%<9CR.>)dDNG16&(F^l$0n3sHL=N\B%m^^YA\b&)0n7mPS@TH?*3$cbm@GTMt&u6Km]`kX;##11/dhAP@D9@:nU:\/RUjhqlSFE8o
%I04`pUd.N>79PVp9'Cd?33@lI=T')]4*dmPnZmLXNct#neY54t`RUpd^Vcs]lf6Wm[^[8&h`eIQ^HQe1j4ES.9"S?cKs]ZY-l93R
%Wn$[A62`G*>0D8i,%`M@8\)LkD]5Sd!+*em2J/+0'?eqcpUZ^Lo<F<jU;NmP/_ZsI3dIL^p$KJh/6@T:[DcF+D;TRT]79')_lmK`
%Uj?0S;r6+O,#W`SN"5,[/[EFYrABtirUo+l(=LT[6p;6hMjTJ_Og+k7dqGBlBmeMdO9lA:Q-p/l79^mOBfIucm]hll:g9Pq/_VFV
%A><2[lomfqWEk!iiG0FaH>F%]+1e$#B7r@Me^'Po=pPrO.2'=&!]s2oKgu,2>)o(ocdKjg`$$IFR6DL#S-'Jq;:>F/EBU.C*u=WQ
%-ZWArg=<Va75ch81JfNXL3gXT`1eb"Lphh?Kb@AJndYp%D<C=q,&C\)Th)$52Lum%%^u^l6Ca-BA=Cc05k7<hC#lZ#A]#3.fW**"
%VHICeKtQl3M=be:QUNfU<Qk"feKWgXR*VlR_1M;A`FSiejhMhNUlXFXVp(%OedYJ0-Ilj-/5q_^K?5`_^9J)Z6oCQkl,?`Dqg>^9
%/,r6[/fQT<EtN#=ZlPD['hIiMQ;%oeoeqFEJr)K).Be>B:k%EmRRq,@a`(c`MjbDN2b&cN-*dH,7nUQNM\enRRdjf<FbXD*X:E*Q
%+'QO>@=#Mc;P\f0hY!%O:meP'=Y6CHXV*,4:,603W1W1!'BL/n/gEI&+D]!Y[%3NQ0l'b!MPCBPmS4rp_.L2>mcpKq:so'7iBEMH
%hc]smdQAm[%[>aQ`OVGGV+2P&]^]+MfoEZ'nf8])'I5sY0+H&QWca0l)jO0E')6qGpI&P!7@2tKMaK6)?jS/`JYjFNd9[fu(,_&X
%,I-Wn-^\Rp1+A"\<JYJ[*TqWHSn#&UI$Nc$m%JUHFYiNK4Z@mpWU/fCoZWbC'BBHiYR3.CgMn4ZXr`3PjeT>]:!OJU+/1;n*U2%p
%n65E^B/,HM-2c\0>_8/E<=2$mY$"e*."GMp)b#2dWhe1oN_i5tE,M\QJCn@&^HbF>7t"q%4W7t8NB\UH+VVE^<:I<P4B:FUeJ8`t
%(LTZPf+$2umAn4rBs*R/F1crG8'`09h,+gr[AjAN^tbVsbEeDP`2Z.H`/\OkL#/o87?_7>;b7A?Tj+mmCu2F@gSX52]Ag)<\C[VO
%FJ=9VA"D6P,<A3bQtld4`gmhU>%Na@>2>.)]#D$Xg3m]Ti0P2#-</S4s17I(bZq9)n]LU;1V=H$T:<n_>7:N@qn\]-Q)BMo-3["k
%dI[oR1F&*)Ve8q)NYB'QIcEb7NOhQ5P0F;:9g]Z-5]$%"9NiZ_W#oleRKrgD1#!pBUZ/AZ$6]%5+#(5IWK?b^5;%rldX[rbR+L'l
%;N.MYjN1[:7T(IJc%BdMlTbhCYc&:)ZO7'pW-P)[^8mOM>G_u\GHW%#(']OWfm&B)6QHWK\Hm<Mj;h(6\P$PC(6,S&-5Ek_dbIY6
%/9;b5Pa,BDXm(kURGd0_*"Yt0(/,K-X&\mgX%oft8(4J4YsY+A.p@ITs/f:N>lPIdNbf]?[,^#F0dTWYD<g=uQHip4iktr-Z0&J*
%Ago#P7]0nE*+^]V_-^[RB^(*1h]u;*g-up+*?'AP[V/o#!G$`dGDpO4k'g2Yf;DAU:jZ)!aiEXo67$?[S8E^D-&DV5=-]Sh8<j=3
%/Z+\qABP^XgFCFre[E58OrsU*B:O?Z])M(Xaf[?&eZFtDeQi?Nf$Xr>I+mS/ioUYWp=M'^^>5]1/_VFV>`BZhgjKNC;#C7an*]70
%]K<.\co#WgjE>^5'pA!9=6MrZY$Y&<G-9_)_$%/W/@?NqTgP0RN&7p.o:XZfZAeecQh1g.olRKc>hp(YZR1ErWnan\c`9ph?o?>Q
%o)p4:.F]c8>77RDSpEL_[W(cgVcJ`Lk[n3HEO+/LlokSkiLrVSi+j=`p(0a.qp'25?]&PnAtiRiTkm93LnP5PLA<Cc'`E6r:lYq]
%9:5tZ8+im^b2[WrBI2,Ad01?(a#@RT<W%t0,,'D20c'/]Bd_a);nJ@["YEq'3P'C+U8r._j5taD%;bbU#JWHF43'"/rmGqoSRi''
%=@8didJYPHDuAKE[`8RNL"QA0/]uA&JBm@L(9K6No7GID(=?6=^K`XRK86e7OsaJWB&>-RdL6b)>*Z4'J,$a6D3.s%%%;\"@s+eY
%C*Fd6B;PDl\pC7RTKf.u,?E;&7<MfODHJ4XNa2Tm@IoY>lbe[16@s?8KA;9G?]KN[iB[-"CI'hHk`J@jm0q&IA1l%N;F5g5i]>H;
%^5nt:?S$tApZ6q6BgdlSFlG1YWqcJT@XWZLogLs]:)-.Q@+i=fopJ!Nch==J`/tN.:eBOc`%ZCLC&^aGX<.ej)4T*]*EC%WG)&VJ
%J<:hES2O:]e^ddg@uq6SJY`%b@P[!O'k:/k8E<8mR]5$.8H+fK-&o&M?p5pngtDB46CQ\2Lilgd3RR>uN:/%`8A^3Cni$?RHW.Ms
%/iSk0O'a!S,+Ph4hjfZ.:$fiuFUcE(D7s\M<TCfVPIM,7KdJqq19)+`I\FJ%l!hSnN)jj>#>,k_>;JgNQWQ=K*1T@9(LIMA%,k-E
%UF.T-pXIam?I/:Wd3[<^#snB[rH)U>T8clH`SuiF29RW1k\=/E*lPNuVcnhAY7Is.CNPW5W%`.s@1?hKfqAMi[XpB`'?G@me"4]2
%)#^X<]u(XfV^H3fj(^uWdJpf/^P^\%hf-&<E;igqrU&HpY&'tg+5%2S,>.g_2a+;0+KLD=rqe]b2oA#^J:aK#/6BV@b(DA<T`T?6
%Uk,o`7Vh66Rd8,s"IbGd)_HJ-D6n'<;$2maqOJGG1g<o^*aC_QfG[!)kNgebnR;he1[[Q`lIsrUe])VA3H7hT]'o]_Q+KLU@b=M.
%dVqS76%\Gqf;RmIgdIQ@eSo5cDR5e*P*8a-2^C<[8XGI&C3K90mQ,-<Vu-cQ8qu;+`/5;$cJAP40XGFr8,d[E2V2gpZ(MLTY`R-?
%0f9rO?0dFM.+]-^dO:GLD`ASa,j7Z.T`aEJ"^qXdE4c0*g5<h[$sBoe:eIIR"jfkBm]*.']CK@MT/+.NnPpQ'.!Lj5@O^AGijS\W
%\$)^A7?AnD@hDOupjeoXH%DT&A%A!)Eas5Z8j;*6%Eopd%GIXVG:h1Trj9_#Vs%aNKBR/OrDpbdrj^S!'lhjT+'L]s'+"`g);l(8
%7'S*9I@>a5)nq5B@qIDA$Y!CLo"S]ma$mAnrmYWJQo/kmV9g6K>h3\U;cEOW1ITLmke4Ioaa#NT,N&pjG!t%^<0@&OLTdU:e@;4r
%Y"/&Y4Qc4E[&?bHi[u-^mZ%j&Ndgg7S7Gs$=I,H=Sq!Qfr(.Dd.a7a+AP`U^Fo0f5pNj=niC*jho<T'i8:FHf)iE4#Of3jp_QXGo
%E2cb6eFIgMn.nD@&Wp#:jj'>>j&o&m3TF]hZIU=#`ijU^HEp1*;Y50)k-t0<9=]u$0;TXK1+p<bAX@EL<\p.*1EskQ<+B[Jhhhh'
%c$Zj>OEJ`Xmm\fRHE2En]s;+5`0B(D`h`C4pg*UhDP,7]0+V1lhP]q_6R`r/<_>*CRZqHhl0.$m:$F%[WdhY]EslN-!+:>RCMuZ3
%Rd?V76cSWRRcl3AadQB%*)Ug;;H%)QC>T#ULFg5s_@t18;G)eG.tUY%Cb)b-!(\G?6e$WJi%8hR'Y?GoXT8A6R8j1^9TQA)H\<Vo
%aOUZhfD):MF`C^eaaNhLq)GX_Eh`f>,u3o&_&pq)&+s.7M<><@R(@&3A5Fu-co7[*R"1SXlIZ$Ff>TTN8blsL4i`_5,&rl*RhtmN
%+lJ+t1(r!Z7Ce/f%Wa3mV1Z%B5tum:%2#67\-8Xk;7AO,k^"\T*-DE<$ZPd5=X!X%YJ&!_J5/!&2'H0`gG+/f\(=Ql=W3j&*Jq8M
%A#0"ME^&$E6('\Ug?M26HBU2aaq1&"EODC*#\kdIaBjo!\*#S+bF<]F0(]`kIU.s^nmgsU*]q"jjO^:umU$nVmZJf"V(-h$7.pO[
%%in\lroR+edD+M,dP]KWoRJq1a<bQ3:!kf,OAlt8:ENI0%6"VF<02Gqm\Hjln5;)SDg\TnmslnifgA-YU,X"O-lu5?Ji45/!PPep
%^@`[s7rAJQG=Me2JCA-ml"Y.?-[O5KTqQ[X,TkH%2U[kuI&_&Eno2I]?sj$bT4-F"h%T%9jUE[$N^X,`jko/k7r8?CeJgmAQ#RPV
%mfhpDH[RuH^=0XVjeKWG<4t:%ILG"&m\.$5oAib/]duG7a`P-j:[5sPhsO5&U4Z(>HrU;]<PM,kL)E&%CF,mYSDq$\CAnF-7mdea
%pJaJ^+:)JG82q$<(IWG/^7.FJUb!Ol&$34A_3L8KnuWSTS?c]oQB6;p5/&M!1;B!RSU@6EF6YQP^7O^K,<Rs9,oH:0HAlM%b/up$
%ShfOiiKkbA$*Ktf]]aPaa$jZ/Ze2q/b_dS@pDFf?dE:3&Y;X]h%@N_AXKDcDYWb471<B/K;mUE8jFM\(<mdC:/+`d=Ak&Gr\;_t@
%DI)O&*/VMHh4)g"9i]`m$)cjS7-/K!,qX5W2(ZmJZm:<26aQD=h,i_JS;9U-3RJ&J)doFq)4XQ\(JR^8e#aedFkXj8-!U6C9/"gf
%UcuL#F=*OtK$J?.RWn%<h7fKK<\s&'Zi,NnX?FSjHYnJ/Ck%kGSCh0l:Nos,\aD"dS\\M&1:[E"0Zqm#C58qdSY_k,(4rVe,^?<0
%%>;#k)FJXZ]>tD/:d.n^5p55XS:51s_"=fKRGjVj$hUbC>93C4FW:85]bt+h["a.(`b8,A<6SESoV<lmSJB\mdY7T&5_,QT#?OBc
%0P`H!9GqG\Mtgg;3.YTC-l/Nl)\F$i`M$.U-t<V-=?jIn@YTu72/p'm/&WEH(]/PBf:V2I1d.NF%/*3UJ!UrCaYo>S`JLi!U+2XP
%7K'!X^-L4(#C^j;PAG@\)t\MF8ilX[@WX;[1+OSbpcb`a<JmnR"Yb-]m6k0cDe1l%jL7m5=3XJFR\@[Z8o("B*/X".*5E(pJ%IM/
%TBr@u-hU$ka4MbdA'KVU'e<aA6rl8I%DR*lOeO)<AD:*soSDS=(X:o,_'mY>!:63U[]AJ^d7PJ0@u3$5]r71Y!Z>THZr2e[cC5jI
%*AZ5-R_fam2Yi1^?dEmE^L##sM2<pGn=V;sg<0DYHg8ZBE@*QFV#2Ak8I4&s^C;;/e-R'eO$_1)]E$ecX`sM7\@$+M>skIGo%9(l
%YaLtbLG:sM"#,.0;DeUGeEej*=(,@]1Cq-KBVj25cKX%'-!Ff_3stt/S>FI<j4(SPhknp2i^Absh'),cZ<B:$c`RH<3)MI/_kUoE
%,iY,P3Z(gp%1raiR/Ze7iKlp?f$.t`@^$gEAjdM7&$thU]%5R#REd@k=(12(>c8/>nR#PC-bGjA)GV],,'LErrXKs;hDL`r8ks0l
%rCe643Trq;M)-s83M?p,/Q&W,N,`\hGG`X#_bu%UTpj6i)ViIB5S\qEfTN4dlaEO1f+nqH[Y8V^F)_Seirk,`O[,,0,:-HO[V26q
%"i=Jf3NrsU_+J.tS-?m%=<\uLY*g]B`2t/_VIK3,,Gi3[WFeRf<6BgHU1f^rV8(g").b8U*q(:jn/+I*5M,#_fe2gWN22G/m3/(m
%b=h_K]1N7fK^694l*/#N]R.dV&])ttTU/S)(.+Moq\![fCatjNHM1l2VCM)!-lg'_V#bKX2\pt]jG/b<cunat5(&@KUfpobY"X^R
%.,icQ0pb($90)pZHZT&*c>**$V+#A/;Qq]Z&1t&p8VFa5SqZqnbif'%*k3K[Sf"^he%h&UpAu?N#8H`HNC5a04blcQJ0O.KCBH=D
%;N<G.6%7^H=63WbhLKDS6dA5<0(,4=gun"V4r&gFCK4:iUA0L[XD9?`:[Y8*MT7/Z&f+.-J4U"VUHD:51Nh4KBT4q!FR"_dM3:OS
%7%ED)/%M$]23Ojk!%PJ2SgoT=/$"P*rUYM80+;]+7d*cn6*/%>#t,/GEXl/3pTqDD7^\Hprue$=6iBj1O?BE*ri#*Pij)uiFO7B?
%PfV748i`W#6bV5^_hPdr=*82u&kt=`-EhJJ'[2Y*YlL;;)=VN$NdIt<C2r&6ZR.FHm?>5tT'fU$P.8QpIa!4_BmlVuRPHTX;dW>b
%*$[$D9m)[@>hO/G=c3l8BWZmRR=r4YqC$U7FlRtg;-B*oiDJJY?_W`nR[:/r>(Pfi2I9cnjZd"Bo3<EY_d$X13!^s4SQ&ocs)r$E
%fCV<YO#kj:]c;sCH61K<jR$&6-c.H2+kIdT,.(Yk<Fg2AY\?kE^Fd_87D!VR<VTPu1*Fe:NY's#=%@sBL<9Y:dgsj$<0o[p4l,?T
%#sK7%b[YhI[DdPL:%36.h8]HKatEJ4Eb2?g:naaf46LAP<@mdNCTW1MhVtd,etJXJ4F"(A62cYC#W?uX'FN,L:ImGj;US.aiaAC5
%LoYUgm"f@-WUDjQhsO5'-X/*t+!jtDjG+c)_aM\6q;>(6VVSqaZ-lT>7k83I1]u0g)d)'De`aBBhiX!f#G@STnGC;-I:0CWHgf*'
%Y+X[NXHL8YRk',`kk4UjYEli'?<pDo_aC_50/)cY\\!;A,pus`>494f>hlgVOtB:n>uOqhUfU\H*qTkli1kQuG93Qm*#R'SW7k@f
%4hs+rr?Z&34W%TShHV*?$e&nVnm&]:fa@W!?o2'38:qX%Od-FVmG=A9-7RojJ%8E]?B1J4*3I;C(O8/YL8psKfLT"!i!*d$-((,Y
%BIsF'cH69e=b"MU7V.2hmPq]AL\H<NVsIe8HQ@XVR4aHa*PS-1:k-)N$oQSk+-nI,Bj%(pg,c2D,5I/[4qb2fs2*/D'!]HnAEf-&
%d9HT"'grc1]-c*`)p04]lBRfoa+%N?<Vr%oF@Uak!M=$K.iGd>.]()V`LZ/,eHRX\9tMMGgRT5\H;c9.UG#S7I?WFqMVpcX:TFM<
%I@D#LUts7lbtP=4Tf$5fV@O3\=GqTI4\f#F`.q]Lo&8E([JTAn-3*C*4FqID`:PAA2:2@nF3d.-e%rgB#o0HW/`m<pUHM%9j%#dF
%1Ki2"]394-,D*4h6!;8S'3Xr!qWpo&>rS?!+<;oVTfLMSTdp01TFda2d(s[]/a@r8gim_-d7%tY6p_&P1Jf0]QI).Ldpa;&'B,Bk
%,Bg?_0J5"/MO&[S_/q7^W*_u7D]2l57Fsq14"]c.YcJ+eEZI@+;..DA4)_hY*2*fX74^a56M.M0ofc_Yp5.:>e%ZML6loA/EHQ,j
%bpTDUEaisDG2jsN=$U0RY^e?pEsBSndlc@fm)Yc7^i0l?639tgZt@B1TnHlt.r3Q1*eK'`W'LlsMNXGo"1S-e,:Aq/\`?jSR[C'Y
%][@*.9<rD;Hg]Y`hsO5(,"bDNKsebQ#r]9mX)9Q1^O/*e8P0D75cUYK's.-4nm2<?.,Ho2#'":nhd!8pJdC69_/e@8WC*[sg+NG%
%Og>(RdPifp5_J'K2+FB/<bc#Dqg1KZT>kn=Z[ERMPk:>kF`C9Ni/[X^)o!_:>.dOk(g![$,+=MB4M9Q.0!*l.3eMU@`_W#&8$U#F
%drHPNa(?Y"m/#4Hd2r,CC/!+5j-N"M4SlcZ[dZG?C\QI"]79')_p9I4/S_@a4sFG7&tuG)4ZQF_nMm!D(n?(96JGq":S\fJI6LZT
%Zi]4bV@a^1k.*FV,U[Lu(r3FHG8uZY[-,)O$n+(amQ\*pd2j=teJi.5egNb:;aN2G=-%0+NuZg?Yr2=LWT+u5-FUU:!a$"r58W&m
%E]GbFK&6GAgMMMfAAuct_hilXBcNgK\n%AlLn[%))QSFp(P[""#DP7Ydc\eJMg"7gjrbeTJsPc;7%TKGIs^=>26,JB*;TH\m0(1W
%iB$f_Gjo+#mq"BtQd6:>rm`cN>i7CeqghR1)6V-VS&RFTCmE(*K9TA!iMrMh@j+mR_e&kp+Nj$HMDo3UI*:9o"a9Z79rT0qdh[_5
%GG8c#C(5K;kr?/uM!J0Dfrg6K9mNWSBJf<7RuE@)0,N6X!hTaW.@g*/>^)1TOWRKV$0!H+h+;CgZM=Ac_^[$X?WetM]^?[eB"K]n
%'R0Lm!kZIZ*a5=F+$*0bC\!qKFa6ue`$MUA[b3PGOl,_UZbU2R<!M<V'a"1/cj43e'&D0D9<n^O$jCP2Xi3`-CN]LA0ffouVcF1P
%jGU'98V)&W.TTT[l]EcKd;_?@-csDP1ZG<MkP-p:TNi;fdV@GQ@"Sb-oGh:=^&?^)p(C^m+F^CQDT=<>@&k'LBXIn5Mu8bpNon6N
%>-rZY8?K"a2B.*q`AkskWdu7MEB:RBp3an$[jYNSMd*Q5''c&m']-;rH.Eao_%e$F,T".^iH<uoLk0PM)A'`_=HI8E/hfOT22-G-
%W3!C@KZ;6Pho)6R>Pg3HE8X<C!5\P,>NsW4'sgJUFoir^A?QaiUp\u?2+ekc0C;qH>0=j"UYp#3)IBna]$hE9^M?erCc?B`l"5C2
%,l*r$d/e(1O0sclA#RCT4_0?%p>^-sBAP?UjNqqZ=Y5Tl;5`fbL\4p3q<_-h;8X=eXYMfoJ`-N'O6IBk9PNdV*a2#_b8dOseldF=
%%(_N&7@tjWMpmdnj;\'Z3RH;Z^rU:FdNmekaEF57gmJ.#h"FJU;`nQu-gMA/KJrPB@.J;p(W93ScE[\kb/X3e)+i'cC=BO&/#Fi=
%=XGARb*G4(;@h7??=G]u%'-n\.@]iF=gDcg,cH^,[G;fTEB`Zd]enGU''5b`#eq)BN-pbYe)&Ks)YLA"UIF`1'3-os7/;a`p._$Q
%[+-"pE>[GYJbD_of[t2%"-5h&MdmE!VKenEn+AptGf/^G,X[e`FQk;dBe)['@@@IiaD92mip@FEGNo6&7'GH4\`gr-AVPegBc5C(
%m1gBIBU'goLrdPA$V#UbF3#'b;/@[adu'OX3H9L!e_J-S4d56)5K8U/#;$KO"aVKdQ=]A^Fl:t&:=S`?H%15&0/)>P4D<"<MX"RC
%$F`Q>MpBhZZ.DN]G=nZE2W96AVco,OA7rGf:/2/#%>sY6G)/6#kgJo1o=K1!a(^eL.+Kh14lAh,feB3F.ld[f*oo`7Qna`\&"EsU
%D-3pH$[o*Arl3\UAQ=j[Q:k&\l&s,;2_Aone?+f$YjfVsnNN-Zs5[fPi>@TC<'i2/'n_F)lVL:-\q0YA5tGpAG9&!u,AGD`9?Y'h
%nc;3s=#MTq.Z/d#n\rJnVI!]SF5=[fWrkBQ@aY(h,B/pNZr*7&)kDY`g,P/b]6o2\4oAR=o-%Zm`_C$(7G5dO6u"RhS=M!D[1%(!
%-Mp-2_[+M\=B>]B!r$mZ+eCg;`?LE$jY<:!f-^5cnpgG.c8[ro7:[OGb/')?]q7HLI%fU]kt@D>@q]16f%71.)+H+GQ"dFN]]PfE
%^U%IVUFWduo$hXj8s5phH(fSq,<sG9;PWjCc".)YB.YSY!`+HW,?_'c-hp90V);TGP`&/<"3<jTEfUC6%sfqP4W!f3Jh#Q]$^%]P
%2aqC2i@3kd\WW[&F1[cYb)H6?m$0E]@tag?jIT0":I1Y,i;SSCd@O%oO,?=o3[e+KP6^cH;5pb^^1)PL'/pjP9d_q;;W^m<%7/<*
%mCNd``#rERh.c'BT].dP"!jX'?t=9^C'#/b@rA13O93"<H.2-h00An`W1<P=^_NVb;6$*P9HH!B:*'P+Jdk>ZY,3YA:5^l?2Brm.
%_NspLML*]HV3W!AC@hp7*#O2&nU>=ecR&'&J#a72heR:gEF%@AX0Hu1_JHUS8nO5UEpe!cEA8Lk("Zq`kZOP3[:kUO<hA-,="H8D
%4uI^8XWFn30/&7A^kNLfXhjU-[r]2'O9*$,irt6=CVbls^/R#KJ<MM)R&<>15eS:4R>ZL[R^;pO!LWr>]1n'i:BNH/K66\uj*E2K
%]t;'-.b7M!r(.KdID9LG$3X@q';\&PFVG='O>0g@4<(V'X6*p@:e#Z$g9kUTIp)I;C1KC!mSh$p0isFiid/6JCd#32^HQe1j4D6#
%Wr+N-D9N6im@4Yr:/*)8>ASKkI):[RnTI^51P)inDl6_H1$WK5-n!&9\5Wk]PVUb"gOa-AC>7sCVl84c%d%Da>n/T77hh5B>`""Y
%URn>0HZWt_\tp7gki'NTZk#SN1L5`joPoU%SKrnH>C(cRpDA(\`oYG/?p%j'ed^#IN?DuS.W8jj9iH:,$s$LZ(H2bRJ0I&tk$)r4
%Oe4@R3L^BKUYI(q#5h.mII@t3+k*dH,#h<2c_t2]bg*:IR=!LT1<5(M^?L!no`-[X*bsl9,C9M]Xg+^ca<S)qr?*GSjpq-lB7d5t
%Q?,#B9f9EmpVc-9J=)JpAEOSLNVtiSb;,W3.pBY0dpY!o%SO'(V@uD0/s9/m1+I&;Dit%o".Ug[)@Y2^k+!G-L,;+9H'he,_N$p+
%CWI2(\\s4a,)BL,d2\&Jno.C%TAo<u9rRO,1QBi>rF_-+RZ_u#mHPbW%:lt\;l(]H1@l>EfA=OSI`g?1e!HSQ,o:e!0s2kH'0;\4
%<bI.\CX6FCDs4[:mk`6Qq4UP3e2]6m4a->;=p1duj>H+pmo&>)c&V<k=!D9+9.q@Soe>`sq44KXMIE\R+4MsNb+*D#8fqL-dGR91
%npCtK@helf;Oa8W09&FZ,-QtcL]cIXXG=U6n&,)&Am\n'glS7!p@S#\5VOA,`B(9B-0_D"omH]2oj.+\%52rXn0MlniftZ+T&Tep
%+bt/se;(C-qU-kP.ttVA>#T8M)]l"PiTQaAnLqp=Tp*)L-:&QAee0CkEI&'Z:.s>Cb[Y^epHgB]/\FVlVftj4kmGh:knnqUZ,8q3
%-m8cjaC*/IrCnVq\>sFH3P^CuA)F3*[7bp!L#L+?6Eh.c\VB<3)<uP"flpb2)7n@NoT]g%I3puRfro@L+fS<]CN3b&AdD'[9,@1#
%B!qqN@_&HPg"2qYaO!;K?G*$"A?Go2%-&ri\R%3PBS3`5==$u2IdVp(m>r3F<,9kh&5o51]J]<8(&.+':1Dl9'Yi_N:1*O%O"oIS
%bn%`4U3j0jl[;),Sp/pb7GiUlZ@DdfSLK;5Mc05'pR=Y;d2F-!4Jt?Ndlc>_rM4=kpq.[6Ad@]e[;4/2\H>m-ZA\+bUs,rr%^j8S
%?@6#DYr-_)dW(#6E=&cdc<AY=QQXTBbpD#j36juBB)^mE_8?>H;7oEi_m_4_,YuG0'<>F3el!Nb3RGQPp`OkW7F^F$H"L-!>1_m[
%au7pNR,M-#(eaBo9UW&Crbp@9d._AA.Ba176S68=GjO<;$\m-3(?;@i35Nq<9o2'M_k7nalY"\Dk^r'A*>^8DWd<A5D%'3OC_*T8
%qL=V`Fo2\DpeaX@F:<<b]cYuC7`B+QRT4MK)%R?[NF%VsoS:B5pJ7bq0C?N]CXN.VhJ-"CbPk-ZeoL+Q>MP4t_ci,saSDO!l$]\Z
%McD.VJ2V#o%c];M`3Uecft+ra]X@u-;]AXc&%TCtp8pe6!d+lkj>mV]/U%Y1SQJ#(=M=.2V"sDNH*!;`)._>i30)gm\tcNWLYCZ=
%6Qam*C(6_@\t.dr@5^;HS=%;+ZCk;B7VCb$Ui@l`n,KZ>*Z+V'+@l/BLkAe88H086aa$Mh<PjLbRmr)38'?d!([uS0>b!<s/J'mU
%>[k5bbK[G3qp_c;HfU*cZ%M5un>W*Id!^u/ns9f.$a8;p]>=);[r_J+Lj/k&B!,*rgCbeeDfNc8jhZaFH-oZ[-C#!u)]/%Glob0u
%[*]q^mIAA.4f*fRf(W7d11l\NSJU+*BP_do=nl3)C1ZOsSg#Wk/+QQt-FJu(c5dc^B[J5a3JZQ+an34`[Q&>fd-.jGWW5RW2"_Y1
%BLkRW%XT;YU@I<A%,t=YW>XGP`ZDeD+F)(<MW]]E%/`q%QPG]KY%l>)ppi03"o,Z.M:2\ScGS"2djjNh&0nTYc"3Hh1]ZSbHUqLX
%\X=N_%GVr7\t44-+.'cbBt-qagct`XIOX:HHQ,%Z_n3>LP'2&W;F#JmW.rj!JUEeQCZk]&f>7fbhkA7+Z<.Oh9]T`W6/ss@d:Ver
%)O%(BCCr)R)[p"Qj]V^U@rC_'AplZD@I,^Tm>0HV<<Z76I@/kkksd,6raG#9B/-o6cE(Oa:@t>1"4:<>Jm@S<:`u5D/p@n;YGe09
%jd&oo!n_58&kEmBYsg!g3NMlr;u(ZT\5+L(++AbS'($V&9ItM6ahT0]=0A"mZP"6JBJG)JqO*JM+7^&L0V)_hL#8!_k%$cXm%Pei
%j<V0N08)a;Y08I34ZkomkSP"5$Nui.!4qpQb+c=QM2g\E#+7^d'>1DY7%F0-bd3d@=N#fZ:Uj>"!+=?LUN@4;j<`%.ps`u7S3#1%
%dnR8.c;"*>X[L0D`p-sUm303SbJS`P@D6%D;s/1D^;NkG?l%#)3N&SlGhk0t%#kakmW^6F1G1;>WA4(K2.^AqaGT.ZH;Z(?WSIfZ
%[;dF*7-uV`bH?0D@@b2>k"I&T>qfJk(/u[)DU6FuhadS;EJgA\#&.&#q0tWd%'(7@iu+kKGpD6D&:+V))20<Ed<QL3==,6&-s?dm
%d1TrW?]9Z[%k4*p"aOJZn$T\hQ-euLV@t.<L^g+L1F6AG]5B6M't5%8F+HqR#\g-H!mk_Lgu7ekVN,H>)Im>2Lui`O,nkb?%Wkd@
%j2/O]A.X,<3_;$45huR6Q+\W+l93/R0<.YR'C*McYcP^r.=S^/4mkGDQ66EZ@R<0,Rf3o:pte97kA#/4_FCd4ZH<\/&$'ZNF\J9;
%NN5nCET*-4_gO`-rO(;;jB\@Z?mPiA)4TagMrp^8iG[TQa@R:u43_L*`TbH<6%oaZc[iY8%V)nr-5-Al:Wl,1co223,Ll>rSu6F0
%TI>8s%FsDTEnOmj+L)&$:<7$=;]hl]?&^I9im[u.Jf7nrJJL9Z:O.'")\"Yc#;`&Tb)BakrDo]^quXVICRf^eKo@;[db(&P`??F_
%Q5NgKcn_G=S[06tVf_(cO<:.+7>jMV=Ah7"]W@cQA.a8"pR.!.cB^p,)+?^;Dl6?&_7Vep_B<8QU>ho#PkJ)Fh`f?TF8AE&P5`k2
%()Qg;?i!98rM.h/j$Y7uAc,d4pl,4Blg/D0KgiR'-A+#L`_idnRo597Kbc,[ZgJHcggf^?Z@!'(F>"H>:[M>m8&#(nUIIO!G+Sh#
%D4^VGg#DG6bT_f7=RoXKor6skY8`O&F(=,q*H:H%3eKd]3.j`13f93D!ANBlURi^=aQYN/JU//PoSI!>Q*B+Nh\017M91sJo2;&Z
%URo;:O"WOO"`ZBjX)9MrgI?>p"b1>c's196QKH^%qaNS=bqr^u6=SfF_r8>Eh6?gN2=gF2irhT/HfRs%_1_i(6'WI6[#BarNOBJ>
%bQ!F7rq?Oq%]aqC>E57HDbmN:ll+E+;^F%aY65s#[,pQsN>A+NShIdKlD_b_QW?ad[b@m(jC-3@In?2GL]6)RFr8eVC^kf@kr?Sa
%K`RS\In=+m%R""FS@YTXb:nFd!V[!"$_dM0>*QuR-NgHV^dOZp'XM*a=Gs0Fbksp7;k.8F)1/\:;SH;hK?,*)E=6<N<>BWp1sMY?
%b&ZPiOe6W*:A$Piq7I;V_th[D?(:IiPtn(N0^0EZYn8#RgV!plKIQ3s4h7gG^Dt@gQcZF9d'FK!5YB'eU2?jh$&#l)G(<io&QP+=
%ldfWL_^[8FZRLA(UE?G?7M@Wa5k-L)FCu`de;pfI<9uq_P7+&)7?H&5kcT.+HF?cN&W1Qe<M[l'LkkEHdf,GP=[*U^1U^ntNc8'o
%Dl^=ZF&a7#aWO9BoiK>U2&&A,DGA=4^7&2erjndtj#>L&NC?moNMU2'b%!JrI6UI^&'mM$7gt#to``_J[<S6h394H_)OUsnr3q#o
%]#[/r,"lfp1qZ<V0-C^T2^rt&'YVFI8PP3K;3khS`f_hZSiq>l[0.#YWmVH@YH(7.aNinc;.?45^b#Rf*"lQsR!SFZj,5QZm=2Ct
%,DpF$D"h4X[E$m_4mGVm1]WZ*<VVqEF_+FBNIahNj+O"h'&bGZLfuEhX(?B6"QdX4/2=%lm=bl(>4D;V>;jlhUlpr#co$8OV:bRl
%4s)8LXPgH`F_NhGD^`8uJ9Bjk;"HR\kOOdkmBmR*grB>:DaIP!'>hM7Lsr^DH84L=1iKsO1N5^;2;4&1<W4+M:s8FZKU.2Vr0"jW
%/GE^D;L2>Q6KC+:4$@m9;6n1dN4<1h$^e@UUNANB^`E:AeVXLPU7A22"XLM9-bFdih(=Yq=WEnH)WYBdf<l?BWpSo"EoP*%?,Es0
%\EVg23ZFV?MVt.)W+`YqTatVm'IIR;0FW#PeK0Z-<>L?BptUfO251<Q:HEaE%j]b/bGOCC`F^'qLDnd(AW#=s?DZeHmDE?eZW5AL
%j+"["WG>R9M234GrfVE:c-RA*/WCuV0#O92I447*\$"fDU"*G#m_ED,.+9%X02#d9&`=>R,bRbK%i!=3M4kliJLOCUX`mo`^bO_l
%Z\ZoXTJ=F4UHouCK70KGf<`/j9pnZs<.s-6Cp2$_qc(2NA`SLl[T?6<>F-.LNg";bL4W&Je.;Xcc:oKQRA9!oo<PNFAc:=)pU[jY
%lPV"NQBE)K"]iE_LNnnH94.`jo.kRS?5g'_0j/0H.(g@QM*pTE;:gKZ;@Db02*I1n;b8I(ICg\RLu;>b'9SIWiC,d"71.H4pBJMH
%o(Ips?I/:Vf=f10P/[kOFF.7rd&.Lp(Q/rn7iO"QgB%i+a<+Fsb7`6n#njHfJ(!!]B^s$78]47:j4F:?f>SKp7`tK_QG(V$2pfZG
%i24Xk&cE2k,=3-5(EpdL,MGjQ0_r^8QLhF_oMG,!(Ic(",R&Pm/6J]%Q\]#9nb$.J)D?pc0aG2c_p"2A?5[t?3$I<mW?MEZANX.5
%>:%o]%/<L!Q(C)hTuf2e:7&UEqIX-Dh3'0$kf&o3j<>*)!F#-VQ09KmhEKi@F2GVQHk]`sTbkhD;Pl=H\pnJ`g[O+gc06UFWdh\Y
%EWat1Mc-+P/3`2:\5.d82FjK_UF1;h!$#V*9(]Lt)dJte(D++^&0a+j:s*/_Hs@m"pqWaVD-5f`9*>cQSZppfhNWMY!"TjG]1)N/
%<(G\D=*o<Xfctqo\><1].PX'PlF=@,s5_2rTmWB_==FL00mV'0(`IHR!Nq_&!DS]%RMD6[IkiPl(cF9m$Q(;6o:,9X5ONZ69fGsf
%RMU[4do-`)kW%\(VZ"SA'SGcNmg*i\la['MO!tYIFYUtTe4WP[hffr`_0J0&BF6OS^FOB9Sfi"CWUEH[?P&-uW0%PLcC6J-YbTD3
%D%$^GCiirgmd]s\O(re@;F`2dc@_qjd]u'ej[%QZ+l[X\['[2<pf@[I85rhQ(k"L67>Dci3GZV;09=o0Ei;!QMZ%$3>r=GH?642U
%.G%cgUe'tIWp\Q<1H'Q3M8X1/T[:`jo.skJDtg,Nc*S7?@-Z:);DOQU^>Rp;,35Y_-l7Y#"`=;pAqsY2);pc6(bI10V"/jc8-&jf
%Ki*SIO`,!&)JIPAMag!qaS/M'8-Dh/?@8_mN,%?[N,]c-.0TP^4hdNR;*FVI6Slh\,p'CdY,pkdD't[.'DmUu$RC=e+:2NBHpqQ,
%R5kK:A;P(>R48$sOFGiJR]083WqOrT4L&&7#^sP>^hB11N2pC4b!s@#jE@h$5(K<S0@aNNmk?\/??t<]p:#A^]'-("+Ls0c?E7?d
%KT)V].lgm4Z>STgEgLsm:K07fC)GGUJpRtN^)&?JR-L(['AS,D)N$>/M(A1a\Udrb=N%\8*[\[go>`d?S:>c,Jm>RGAFf\u5$q+Z
%WQm)JAPiJXP`P+P_EQY=1>t4OTji9\ER_Oq1e)%oenTQ3%DP8p%N1/AbWE,N2_Rg:i3DET^6RB@SWOp64mjcP3Tf]d4B;?o='6\9
%qM0E]#pc;@_7#J/6`-[Dg(Hm/`rC4#;V/@Br0g!PF)buqqT]''@>W^DA*%rsj#kIidAso?;p2n]@V]@DO5OIT0M=Y;#fm2icrJDA
%nE.[-HTQ:aeH0\JH*bCe"\+slDouplgi%5=<7J%QSb7h'?VgB0DF^S4WC$(sp[>N/IBq[?13+]T[jA5!bNm$&@B^)&9Ij8p3Ee"<
%[$GUt)T5i8_\sq9Aq'N.[Ac/DUY0-uHLrsr&5IWWQ;!SaOh3(M4u\g5<"A%rD(@?^M/dN:MUkV4iP43<e($Mf@6omURF;G%DcQi1
%J"eB?Rh_BUCg6^.YjdZu%QXT:@,f6b%H%<;Zg$5M0;_d-Ll1PQ8pYGbA$lSp#H4oSa=;5A5.p\8,**kCl%&&X2qPn=/mhCtWD4]@
%h3CLgXa=$so"qt%frd*h33fMRj^k5IhX:qjie.]1d?6OQE@b3O5,D"u5g1_uYG@5f>I<f&#NW*)NFDG$l395q^2%>eI\.Pn<(qdd
%ku&WSZK&_O1X"EnZs9Eq#6/jb7R,R)nP46?lBp+XmRCo\ba&_G";/I#gSK,!oOTh:O^G5BA3k3)Uc43,eM9l+\H5%nN9$7-K%ART
%UIN`j63KpLX+J!.lj_A:7*Qcs?L5`Pm%P)TOI*f+:\=F.ZH%oNZ'f<+1(t55?8Qe=?2r#@ojd5GPIm.0Y);*m!P3>\[_SBS=dN`.
%h6]N]D8(o&I0@EB\!$-KPT=2AhEVe`YGr282>5noA#"=H%1#76?#>N5b-R%ml*Wp=pb*$>I`o.0S^Y!Y$Mbuk=,@*RLT,h7>.2rm
%NHD0B7$#hg3Y&d%Wl8s3.>22!R+6lR3Fse1%#uN4@1:hLJg2Ju7X^]0)+4:V2j(R`Da^l!jmhK<UT6PlT'T=F;5XAin+0u5^C)Rg
%A=&NP`JI6&<EJQTs'dUd;D6<eMh['A<7XGV8DFjjfbT$&"D0qqUoA&WCU=1!@q.9*5j\P72.;]JZ8T&TRX(l]WESDW4gFD;_CX&6
%i4F0\m;suKUkj%mS=,S&\YbZ,@l$MF92AuP#f'(jJn>%/Yq0QjTJIdC'j2=g+!hq/Y3*?YjVs?=*#p*R:f0BQhd/o!qrbXOPHoSW
%q4/]4d6aV#m.BseVchEL<;#R"4sXS(o&;jf[Sd\tED%_qJ5n.s'om.i#!7K31R\TDpHWB^ZeXZcOI;Cqf"@([]XuQJ5I$*$D^qki
%eK6f,aEU805/o*&QcTTUbTuNhSORUF>($[gZ+o+acqcQ#]B;.B8SnHJM5gB,:11mP&SpJ-7YDLa<elnk6_'a*P!KBH!mS9F5#tlh
%>_<VY<-8Q%Y$UNOH+=[R",%VrIs^F*6Bpc+2s'cFPtXpo3H^eX'"TQqGPZWo;q9<uar2-tiur+H=4d/<gf?WRO>DtE_]euO=Z^4e
%ns]6:L+qhi@*&DSI2ld.X;Feh\hCUq>-h-']!ADW3\^^bS'clCM?Q;IZp\4%A%6NZe=SN..O]PO9JO)?C/O`#J%IY9M`+R.8LZTm
%'CBE&'hgIgi.gP8!@':laTa+3W>Dapohq5*4HEn%LR8I8<gf)K:D^%#Sk)__h3C9CY<,,c23GCfkM;0F^Dp5_`s.EQBj,qbhq.Ju
%ig7kOY/5u*$!ghCj(C0P9N4c#KM/L`+?b-s4Gi@U%J4Z7fU5rCLq'1.#i/:u2]46?@-R6>Q\&^'Uh7S3!?h#anhK_IG'@j=B\cW6
%MsiF"GD#<QqUK*Lnqkl_p6qP&DE@^)HZQcq(0X_gYr$8ag<nWYSjtS0n5sl.!XmJ/89,(\;'.YS8[IPg[CCFeBHNNG>[ql^B?f=b
%[p2Z?YqTeiq!Mf9kIi_5K!T5Qg+W3rHFclSYSdRa#NG_M[aqj_I57YgFP35A1KOEVjq\c9473X#CA0:F7fRX,F'$oMVH0a@3jR7$
%'m[Ei3["9(/S%scWG)j7ce+?7=.8,c(FG>/'`Z,b-s-r2SKps#s)r<Q5M9-fr?qp:-C*qb8L=dg[uBQ]L*"3''ubtQk,E-^IRFXV
%#!]FVgT2Z.<goIljd9Z4LW'R,3^a?X4WiQu0q1reMQiiW\?@=3okn,4GKYf=ZQ_MHHX0k5Ir]o7=A2KF>dL],7Nl0piLW1&g'LHn
%4A)g`k'd^O/*dO$R*o?00-f,@a>M\TWp-ls,W%TR).f38Sodd;:pC?\9S.Z:c?Np%$UB['iN.grpttL6l=qXZmeiCjh<!as]M-Cm
%8TKk5'uZ/ZR]9P4WER3`9Nd9^X&A00kfOQk>_q75[GQ<eBh!]qV(>NQ\h3MfI&>BEPFYlT0oIe%cg"pfk*MD.aY'f]WaRYTTS<EN
%]G_8&;j^K?!ctmSPP0`<@)]1dOm11Q8u:Fm/Rgn5kTnpVd_Z+"^]G65:"HRc=Uu/jUO6?TS\HtE14"rWc-*B,h4)cp2j]+_qEi.Z
%,/O[5ElBk^#V)i,0P4qDX#`*HDqNS3)A9))=NS\DBsA_;I<.Qc&sH(<qXl5.hQ=Z_b?pP6];tH)!e(ouRd/'u\_X$BSumu\!)+?\
%ng$?/TB4/Zn[)BDlo*p(,sGs9K9iF<Zr\pJ%`qB3r>sV5F)ZebZ)Yh!Jf2CpLSDeT2>4KiZao:o;a;!9AYT_"$KON3!'9%$6nhfd
%FkkHT?;!+a8S1,Y:`YZ=ird-Z#p#e:hBJ/6oAF`u_CuEF@FZ':@?_o/,"bRI?@5<f):!Yh@^W-NM`D:a4+'3C+YqF+B/?a#i`SD-
%L:FgrcfUp"q)GXOWp;Z&H(d.&H-P[!WhU1FZht9p,C4Mn6V#p2)MHWJUWQK#BF*;I?rsn<7a[)ld3rT^TT\(9lT/*";)Atf]f@Xe
%6)J54X4Vd8#.AM+UpMnGNg%&1/Q/9@CCP82j)WfOYKAl@H&G6uS"dr:8WTiY:"0p&rt]1?j,sUjX1BOoE&X"k/Z1CcMMSJOBn/5V
%kKuq[aDrg`IXJI[<)q"t"h"UJ'MJQ)7$k))]@>Q?faM:W9-tae].P`''AQ>)-03Y\:lF?_&g%Lo2nULliV,]DG+$?72C#F>KpmZQ
%7PM]F"h$>DnZe6We_5G//_6WEj`m7m=7<j+!#3K5F@Hp\iJS]-H>GM^Id1O"T)^*8Eb2OmIDjJ0-+Fno7lG=q6Jpjm%9Vfne_"au
%l[-K>B6d<3N/74t`p+EBMHanuO3@T#GKafA]]*)VnM((jmln-_Zq#n0ou?E+(Oh0ZiOf)r`A(_J=R34LoR?CUn*LJq4$Na9fQ,hA
%Ccp!3[E%/;]<1Oi'Ub)SVD4C%,3+YTNim.;W/iUQD2mb]()OVK-P%<:SJ9*C;nEh4d8*DRUueiXe<heZ?Ti-3HX$YWO0-7%:EAWn
%(!p%=`#"j6g.l6iX$.E<j!_>(^KP=FbBkS0^Q:6I&M`0])O7AIcDkKSfh@NAn$0p8`<D(__g8=YB!SKkXVU;C*R8Ip7XF*%!eD3;
%+k[rA*5'#5!ah"jTs$*iBD;X]7If2VJSbXC,uXQ-N8h\OQ<16W)2+;4b)O(%)C]5hI<dn?>h-V[EE+9BK=o4L*2b*dX(<rfX)U]K
%5IDbV=+@jhXH./ke/EXR\u4Qs^N.-0q$En5kisV#H)BV,I`q&+FjH__Zq>4Uq!?jU)YK?OiLFH,1+QCqCPQSCnZd.UpD@WUNh9K,
%g*9s8,OCM0cLL:4SuqI.ABS?J/n\!p4iY>,5'<CU=!X*JO_^oL@B[[k]<Ba(F8XSp[adMaZ*B$(-+P77H\r_u8)\YE4*k(?]IR<m
%Zrd]N+X8P+8!0J5:lLr?o8Q4N;3+2B#hdghbRQm8/E'mYUNKI@pWTDM3JOhl;5iDf$P1nM"OE",3G$$!Xabj9q_dY9"Og_:1J,LO
%5V(DHJlE]Zb1e3!l>Ph4+8u7Q:>s:*:V]uDhm=[?7oD#-$m0X^>I;5mdE68k4pBP&URM,)Y,0'J=fo,9Qoi!qe7qd7rj77Te`.li
%bj.'?R9_h!)5>XYqWu7k*bI3(:caLG,iG_UW7SjN>N^:+V_*-h]+:Hk-1PtMK3o/TM.H4"+>Ki*V'=DI8G+rFlkuqZ1Ms)5bh>D:
%Ko8cqMqYDT)n&SKi$+S6&BSdP@WW;siBf"NO404H=^di6[K0.R0\Ud8.mTH9fU.A_]Y[BB?Ye'cSe!WiX:IuVY0f>3PX0U^.fp3(
%Ek1XFq?7bI0r,9k(n"+iJ-\,RaeTbo[62:R\ea_TD,rb`UjB=M.$(+?]f+ZDP2a*g^kl_G!<hY\GOVrWgOG>IVs[;WkMIrn%-k$\
%0a6^k`]uFfX[UhW-XY0kb&4#bW1K"@[c_7p+"8saOGI,UHsA[JUsODXGUDGNoFK[b@!heEEIsfFBpi3b8_do8mBRA_NRY6`\Uk3n
%jE"L;DD?CfR!Z!Smj@=!`\_PBM^/!JWUkbAkcRVGWT=$MWLXsRj+<F+=,Y2sS0q228tg.E0Jk>CZ$YUd0B;_04'-cFNg1YYPM9hI
%8DiXr7jBY!(+l!n7rbCE%R,X3HpVu'75L@-==huVg71=M2>Z>A01e-Pnu5b[@.h]od>2?56Df".NKq*ZKe2-?)O!N"7;@85-1,\?
%;Cf-n9MnMEB$30%.<G,5E`FXJFWRB!>SupN$1Z(/58.BsFBOk?<jY3\=ZtnN[h&PIikda6T%nIVgD2$7e.cAt\?8php/Hp58Z[W2
%_O=TH8B"J6'^f8Aj@=H9QJM!.><2"MCnsP(h+6V?aN<o@SC=s.o=K<X)q,l@9:6b-)SgbrNp3AD`hr$t*Eel6D<c-VdBSlH+iY<s
%##_>l]NjHa/<sN_q!57jXRD=pA'XLXF*fOUhu?NNHlK`:.nF>ZpWc1#07t0[lI;N65t<70)QQ!P:&/\Edi!HS+h@KiU&u6n8Uj,p
%;8i%FEP(9dH&T)IC.`kr-,+6!j4kE:;6p@/b?e3tmc45J*oV+)_BU=(@7e[/U\(;C*jQruOPK*F:5+g#2J,mSqp^AjkDJsilq92m
%qdon.!q#B>r>$BNR.("Z3_p[]6%XT'EmH',++C@KJ1,t=G<pNE]/S/a967[WJjB`T4?)^tgPf&A]m3MT!e+@nK88=Kn.rS=EaL!%
%lJ1RAJbKp3\=T#??Zj2>+gQ23\c`b);MXZsd4AG3S`(r]oU'kEo)E;Vike!%PA,3X8p93;eq[S;R<orF"o@BFB)8>:H=kEff5bC9
%d/EourO'a1Qcu(#e\NrrGM;`e9r$QXfcBc%H=Qr8gqRuIEIlA6`7JM$Z,Cd5C:.`9.i?Q$Fk@ZtV$q[**jt)_06lEjemiLblVkha
%?9RNfVok#0:pdk7fA1:_:Q,me4EhXDa,7B+RFYJ(^ao\&5>J&RPP['aq(G82>S?mQC!RKg3<j.'D3[u%`\be?'I/T31;p"aP<\I*
%.k,IcUc(\Qejic!p;PWa@u]$&2]^X3jEg/e>?lUN+n;hnYkb9QfmQFgk>af:QLQ<#.1nG@Hhs!0*<$`''<u@uj0FG$2Xo%a4eKd&
%Kp=23Q]4QWla;TbP>c_5i_Ft--.u;t5sI&M-J<M,?B%0M12tMi?Kn;J/CB[Q2%F%m='U;_kOI2lX!89H4/6T%EU:^p?BA3h,+qp%
%h?Q)t=XL7r9KO(EJ@QDH"gJVk)l(8[/um6R"4g"M^-<K+2enK[A0.\s1Dtdukl.Au%%.H-l033(QRehZ-IMhWmr/Jgdn)54apC4.
%^9-%/V*nr,`\_:RVaM6Pf%0Yq8"Ma(=G'[2Maj(R<",hbaOAj8YV-2T!N8dAljQ:o;iE%<q@jrD3c0nEm-'2B#T,::CIG2e`u/1u
%nTJhb4o>"Q,$r0MnS[3H3cf6`2b-'?\<E,Rn@01.s(X"_d8+a+>15SfUL$,RCKb83nDZIoF*]`L2a<"$'s*5r`%N\u_XD&d=H^V.
%OM+\?5HMhhm5VT9U.PY_Y,qX<Kpn>pBCV_J2jTS-EX5N#OVus]R,gh[lKe=,`Qri0HN0H.Y?*db$mSrHJ+W[CidNA9L(:QN;[FM[
%SUYj5V\@"lTt8PeY,HQjQ1lcB3h0iN8hI$hi4WN/>]Yd-Bc]ZO<?-;e?=lZ^E]n)okLa@qg%*)o>m7_:>'Ihbo5!8+p?Cp:?(r!e
%aKjH&oUBN*h8^C>G5hRWNW,_M^?5I]$>TYA+86?EJ+!=-$F*!FkmGq#hsS7[m_@f.FiMd%?6ND!.]Af$:rMW%1-@/brsV-"3&2<:
%]s-QPVX!tT/&K2@OrEk_,$fW^>4gg=aZ*"lA\%HbCsW9?!KCr/\RLbIUVtGWm4l610eB7acL5i2^L2A2+@V0-ABX_]%9Who1_bjC
%$].qg<!ZH36;WCXrBk:*^'ub]Ya_U)#eU<@N''X`\MW+)'&dog]]?%68AuDrH#N3]V-H+`5IpKN:!ro9pn9>)>Rr-ZJ8FdmV-1I-
%m3L-9J1KA2,pF@ri<A.GC>sA,b.Hk+#0kO39(Q3hVGNPD]Oa=J^Y*N7GFa%6o'FjS)emR8J>(MTWaB?%SFlgS>@3\<_VqG*n:&in
%1uo63T\,EAaKmU)U+MsU]';m+$hofcr:*^tQEm<62(@P5iBo+%FnN4><*dCFO0,,I;oe]>Fp%j`aLtU8ZH#!G4P!i4j/J!AlMnPH
%^uNS/;5=F;E$119*j#]CHM;$7O=->p9fhNr_iodZQ589n1EaG'E?#M-)O%-F,;>uIUKcGBT7n?*`YY-1,K4=9E):n)<nl-tPRljV
%kh-OR@])S15J=+<>(L"r1n5:Ks%F>1V9RXBWa(1R6$6d*eS2am;O@Wa^=V7F:`l#'N%;ijYA?D3pR=W(0Juo;).S"Ls2$<uf>:H_
%e\BpMahc0OQZat7Tt=.6Z+@h`IB$GH_61he$50deXf'asq5)g`I\f.WI0O6_YV+hAK#4#-.tCIm?(^6%H`!+*pp&CO*pRK5N<QQ*
%056,MZFWrr3,=Eg'_8s1e<m'R^U.28<en3=j8^B^%R7nYc)s-FEJL0IC-B!p^:n]VhfWXe29H)&LuPK+>2!:h;a!lFO]MM,dX&74
%^W%J/^H`dW!\4$W;^OP263DeUpRB/\R5%Ze@E-ZibJ:dng>E9)$[?/6?t)0$q5%B?=HU^2j35EIZa59R[^bXb%;oD(Y]`gEU%:pd
%1]32VB4$/3N\5168V'TPa;0uo7h!fX!-8@@_<PIikQOYRbBButV3KD;_KehWm(#tVV/Yl>pOjmKkQ=l_SXOM?G0sV(1H-(Db+,p$
%eR.YfX@/hF]RI:aLB<j-15e4@5Qr$/>sr,"bA2-gmQsjuU=e"k+k[uhNSQ7h]T:RS]pMEb'&CZs)/AEn50WN-\E;`e3ePsZi!3.%
%"8Pj,;'a)2l;O?-+m9,>Dn2#<7<c,ebag*3.+/+cVbhnWYKCl[c:(hAq]>grpD?cA2W,sIlC6\hQX\d[N9CW+e[m\b+Kek=7n<AP
%g11:;4ZH;aEh.H*_36'YI,i,l:TF"#%ItN>/S";Eg0FQBRa*`tHuL/bHS)&)98i\j`jrsRFOYG7XqcGhIJZ"?chZ=Qnu7;`W[s7G
%l2P>`b"9c[-`s<_h.SenRN)[P7!VfqMa*1>3^/itNe/kNE"YK61-S=l\2`QIP3%m6ZmI.9;^WQ`\&jcV'/E_D'_#P;*H]s?bW;t-
%mAqnA&!s,!R"nOsM."OiIp'!2:q96UeD_@96OqUVfbu<<luoS/>sq%#1`SV]lfp,_b4HP$kVnq\ek0h#428r^55"T[!"UTUBBZ(:
%&k<UDQii%t>qYOT9Xq[UmjrG85\`RbCmaa5VsE<5B$\`q*,3W."]2l)./CP5io^s3rT^"9Jsl)&N[c*dRS]meB2o`ppeFpX+UaCG
%RB6#<(d1bQD-M:2f+dAY\_3>u";]8(X1qIsW"qk2+&ToU+R19u68?3p-GT@!]?fiE5@sfDI:I`>N\YCa39Rc3'>,g9WPC`0_9Z^.
%h:Zl;/Z"42[pi*t-o6_Nmj#d]Z>s"s`2Z1`2eXbKBYd;Nm:(gnfZ;g;8OskbIqrW_eQG&+^u,&^-P#V56/=Pk2kW0h+^Di/,t]Do
%+]h@1(BR#YmV\u#OdXiX7DfSH5piTqa?UiVXM&%bK/h8d3iaIjJ/He9L4^>Ro<J@94b^U<T$.=sQ<T*1$tIkte%;c,^`OO6j(6>T
%20DlY>ne%6k)h/VFD)RE]Dap6@O5Mc]2S`/R8KNq["q6VZOdj+'Ep]jJ%di!kE=eFVtFL5h?/8IXe^;''N&mn@^-BN9$JV^a6uDE
%Rj8hc0rnr\;9<3\KijFja)to.Vj]i\3OPNHQh:4\fZ3E+=AHYCNC#SSa's)sN(V^DEJAtH``tfSA/]NHdl$:@WA/&^.6Z-[3OO?P
%b\*bRc7=h/dN3aJj'^0=@LhU9Rb>";c29QOle\u>Rl:P'>q40s4[rE()/70O\s5q1Bg?<$R\&G,.VU2&[(PTj2[46=rOhjA3#eor
%50oN3NLoo)`D:.dX4#FP^-AN4^r^KJL*es>[LlH4\j;/0k1D[mber?'``7.ks"g5:hiWBojX'B92@[p0RqscFXA!gfWh$]>g>^uH
%g5f%KaCC`Ig9nk!cE_60O[W6'RW3>F1&GI=Hgc\f-.ue_aSDO!l!:_4]AlIZ%e`(lfuQ7IDQM*Mi$mobQ/S#f%hu<8aXF[]&Slk1
%Rb`ft4e85eQhH(i=?F]#PS!ckVNI5u*Jqp6oMaSg.X>g'U:Q/6q3]fMPNd2ee?25eFL073B<("HmSc*P<E30bZA!`:%W(ml)E^6,
%43(,b7`L=]p>2s,7f!=9.p>bSX62b5oc^/3s1OPWj5QXZ_ObkS%cCC#h__?uAs$V=Rd.1UQ.UXsZt824nQK1YV*H&1I;60'O.KJ4
%NH6f7a%r**D:db;W9o?$&+)hM*Oalc_9^3g=A*BWG8K=?U$]9bT#Ep;CH%>lo'[@H_s74f@/kipUWTS$O0pB'Et8DST.APq,;&_'
%CkJ`8lhT)\roaQZqIYcGBp]ad;RLNO5fB5IU(1J*V4'(dW\t@]T@1X)XmYEa)b)I@3DYcT#kuX_pfH9LQSJ9EO7W/R,Lme]n.UK+
%-pA;iPhg@IBUqG?Ka]r;Y_C7Y!?rX5O?J.]<``e0qf7Se<1J%h<4FPL/M8dijS=7LYngLB+R660a!.HSI/&O>?VgB/!<T>R-n<94
%GiGnYlT[s1og@[t@:#ht<$MrlR[9J,E<s[>(7Z-p:b0Z@Ld/9[P<18GBmaAiiNqS]<Bs#"HG`&H-Qc:K\9kV_6aX/Ra,o9O#9DS(
%;c^"9<fPnS3";nh1f7b#_gf9WVi*ZU"1oT(;:/bac)6*M-CDlC,2C<IJ;U>W/"Dj1q5+L%"]UK^3T:\(V9;\O.\K;,J4CB.kRB<C
%7$b<K;-<#r4/b).r:m-/7rh4YX]Kg&?n1TElWq5rm*Yr(>5AfF(F0>PAm\hIfOs5h;s?9:@'SR9er:ieGa_MSG[>'Z[U^P!pA-;l
%?mRnRY#aI0277GI(JEL`MYJ[@.k,Xuh;5k9U7796W*8:+)+do4$'foaW3A$T>s[0WM+<EM^O;X!PoYQ&g-#$eNl23;)V/=W'T-]p
%#oFG1P3iZMaPt3SW"hMK(K;;3\Aj`<g3%A;9,Gtqj2pF/##CML`Kl*3$Jqg"3AJ6D&Z<6Z#/fOR%7SH]O>ubdID2<@Zf61Lj/r"[
%mAW`Oqc%pbjl=9Z<?)ac-Wg;Incfq&[AILYS28BmU,8RT>HID"=`)%qb9XZr\TGAnL*LqECJggb5J=:FYd%4i.s!FtAEMPBWhO*,
%X_bMARZPXGL-Pb[L6Xe\ppYT+\opr9=NF<8#[tt/XFQAkS<X+F&VXq,j1R`9%F)@_7]l*oYn+:sq@08C<bs:=l,4EH)/&t5]?C[F
%$]#0*.T$NT)&.*hI!@F_;30WU7X_GFn^u.`7$k))]/3?-(0E)WoRdF!Y:f6AD(_0<1[m\Y-+loq[a+6uf4$)OC-_#FG=^'0'M7)Y
%erG7DO#nGu,3GV`,fJQtQZ'i0P77"a#n4Tg7Vnf3-5i:D$rfP(:Ef8AS%p=Ie@V.ZabZZg7@m5;-$fmC&7-G3"i4]rVJ6=e8\4ZU
%L`lPX3L:mZ]'OH;a?J/9lcCak1Rnfp!IFA5&DGs`/,N9ImdbAWp8D"O^CM\KC!=2NPo5`AFAVc3-QNVSjshgXl!Jepr?(bp\0C%5
%]8';R=Xcjk?<."^:hV++;1kPd3FQImJ.t<fBh[E\I"JaI1,goE4)YVmT<Qc)9\2<jMYSXrHp-5^SgrP)O'*Q:Gl/B$\P(##,TZ$R
%6_ra]3R=6;dh]M@.M<U/%]F1rPSA`&i#8;`5sNdSrPtS<^_.4.M`Cd)e(p\cM)=4X'@G0'bo*sm!Hj?8O3p+$bePB1.TA;Qr92ej
%mS2mmql5.Yrc3YYU_Mf^E3X(ZcuW3_/rPH8Q["-)$-jflJk"Kr&_Xk'2IK?7TT"=c,$tG9HH[C3d'=STk>6"!pT3d4/XOm;d2I-)
%p>NuBX&Q(Qi?3%chk00%oiuuc@Og8cHH;1Hqj7h8D,L>T%J<*933f/T9m2>l=7"`GSh.Us//_S,\><dVW["bF-_l3%R*@js^pG:5
%Ao(iOj'EPR'Vl;0UA;krWF:\*qYR9!Bk$/q)H!^g#:lJ6D<%[IK.TO@KejPoi'd^P1gK"ljdHW6ERi_Oft\\?:>daFL_>r='Lf6j
%a62U0(8E$faJC:8S`g4U7$"N!HW7%]%$PZgc6":kQ^7<DmL4um$.Yt5@^4/8$$+QU!O^=jhV_h<43<NXiam<@4S36j''_mf5Ip^?
%W7J9gI/lHq!L4?,*Eog##T7j9VcGj@+rm$J2gMne>KW'Vb'=s%gV)iVZ`7Tl>#CML!K5jKDtkn.%AFr#A>_!97>sToit6\qeZL?j
%8eM6>"rEh>pO_H;p"r1pq`/ME?mFlIb!iSW+OEPME9kP'gQ;"J=>(-6$U@&:DS"Wble*nu`^bO&BJ.tnm%u;6qG_g`"lmO5M@0c/
%bQVNI:nd"J7G2JFqrf.G0(]bV@+?33`uBG.%5^d>:"6URCf>JY5FEd3N%6;:?sZg)oIVSG&@YVJBiebH61Zr5?l8j(!mfB9khkf&
%l(XXse/=YrWd,\GKcu9.6\gbY63@c#n7Pq(h(i<A\d;%2YSFN98BqP^$@3VAap.i/=V%8FO=*GAe1FZ8/d-<QZ,H`\p;;6O.cK%&
%nq55dA:3Mm]&)E3\IOl.$rWY9[+">,m\su[qIFrqAE-')TL8.J95n<,(2g*D/u2K*VEmWC42jh\'[4ZX0-KG9bY<qcpg6a2k*D07
%`#_hq5f9se*YkeVh..AIZfZ9OJpE<6o)RE6ZYk]!VdTF@GNO!a:W[Os.RhkQ(egZimq+A!+ppn/.bWhF]umB3Z/EEFJdjF@:t99m
%Y>("%k1XE*aOZf*q'o^\3dsN$8'8!S%)lI("06G=m`Ujd)aT6t8M$"mH"=Og51Ai`l!?5m^,0lOis:$sp\3D<52#oj3B=@ZC>Xde
%hn@I8nV.sbIjJ:fnlsfO6J/5O][(MtP;LcoZ.uCG*Y6"c)L1Z)1^XH8J9%>q+,c8j;=3q$F+<jJZ`6"9G%]KV1<U&5JZNJ=Ju6"U
%\pA!<('BGh/Q?$>0rk*%?KsJSikUj3duhD%=LM&])cm4l>$jO7#'*hu3XmL$&HVfCf!rR>g(I+@irDNFGqLhE=E<2BZQuZSYM[:l
%2m43lES%gM4kZZDH5$foV=+r+[k9?#PAMf`NtX5_Fg`027pUWoV:/.tN-L8J\;`mU*uJlX#:k>;H#LZb/Efn).MUc6gM!G&l1`a9
%9P\Up=9E8C<<.aQiRLKK8<`R#A;_j<7Q_'C(/KRCs6\[=I^66<S[9Z)+tmnN/73@,=*&kL,qg&Y`[k:o8%`ciX[kh)"g`EM%)5-@
%_L!L,BrK`)[Tj,mgVCgl08YpoIgh`VWM4k'pgTc+H)c0]$cA6r]6c]mSMAc3fhI\M1-Fj1]""X;jKA?aCn+("lP.MWWiS`RF/"Ct
%"];,CmL<2CLHEXY2<5+k].DZlHg%gHE$.m,/gc9T@0gNnB"P%o>=Xf"@mG!Sd_La&GG_BoBMiaJh6'(*!bicXG0S9rY$G)AM5H!a
%3EYfMCo\C*TLc,3)j!W4WFDLLft-'@>!e!h4>QJ6^b.RqD*3^@e,uf5eB#FMC[OEg#4N.]Lc<C05J5V+(.H$ETK#(M^SWXWp3Nl#
%c1b4783-T'P7>6T79s*B-bH'G-;Gt<aYE:/;?,-.6d1C9'O\`9r[d`kJlo'cC>6uel)R?Gs#%B7qC3CUq3e-=;ra:6".?AkFd9*D
%=8_@Q&:'3-==Xd_Bg/"0,0b5b8iK\[\<UM/">ZG,"feGm'P5Js8H+Th-$QC.lN8T]Lq#FqGalN9RR>3[e3:A$e=+OUYurVPY<cg-
%*JH$W\AdR27\4"fG@#+u4A4+PQ0YFnD-V;8B0(H(h'l[<^em!Opd')Reb+@!rM>*dii5m?S-=rBI`Q;:OO!8DG8\WAgEgHmSCcsD
%X;(NUMd\XMJ=G"*#VRA\=A-W7XVP]HIm%\\*b.qQo-5*WBA6]YKpmL*KP8`k^YPC.:NfjPk=$tWPFI/8!QS#\EKpg''4YPW4%"<b
%Re"nj\JPon()4'*q\Vc*aSA//Y*FG=8&PTi%peP0G!!3@A3$l:7+-#2'P1#,)5OElP_7U>d;*a4a4HM<)U>@O^_'@)as2.R@K4H?
%og8a?&X=B1&9\3HCr[aQ?ufqk;FRp4JbHe*JWX_Ti?D"S[CVo;)Hn,f[!E'P!t7l6cK5Vl<ECZ"iudo.`'>E?=jNZ,ip&'h*=8aX
%Oh]_Ac:+e6,r,YC6pA6LkGpAO"Lt198?2KD?J=T+<n^u*<QYn5H#P$B-8D/BW]IjdSWb1M<*PK+hJ?]@#W2pK#LW&A'8P\]I2/*,
%S/C:UCo")<9=1icdHTuM:/+/cH)R-C&%]5&Y4&^M==,J0C@>H7l6("pGP$^PYU5'GFbSi3!%+MEMr*[qK+\#n?n4sZO)Aeo1W*15
%We4nsfFD+"B.-:\k*!fN2jr[8rS\))?&jqsW??S3P;/+hMkASahsO5'RV$6p<%l:lY[^O4"R;eGl5XU,P*l#p3.(`fMZPm`)lk0&
%6105m$.-Tl$OTfI6+5#q-LQ.-G-I_[o$hPaI2Q%f(SKD,;<9@Vh;VP'qg:Q]k:Tau)$8'8p=?(*I56NGFLb\Uh,,rN(*/E1(7@ap
%+;YRWQ<]u(bWY@D;ra,9-ITV;iO'<6i("7"hBIi>!F?d1?F,EA%@"r:b%Wm]o*-&D<Zd6PB^"++mS2mm].0X!j^>dWUlrD2F3.s0
%[4"CSGg+OPqq1ElhuH2G))->GK%Vc'@Ur[TX`Leppb\&)/-l;916PLrYDs"ep<AqoJm:A3Vc]1MUf&GMhWO4H4tXN2R^FHBoWTJ.
%e]%J72qO,0jFkFajQKu*IF[-g%6(<)4kLrsY(b/JXN/<pmlZm`+cl!hN+a]5H3@4g_3rIJLhJ*i-t6a13Z$-0!2:\YmO9_mh.WA!
%][2=6rE%+TVSdnq2lE_09M$D5%XQ;qD<V`-#84(t>2bBRBWY0"Wu;u#*JFbu[(7iHU%L<:ff"<a@()Q%=hrQMn%Uls.lX7TJsB-Z
%Sai+S?dJHr59eYHr#gL/jlLor]Bc7f#Z".Tq2a:mK/4_aM+e5g:&9_8V#b,W'&guSFfZ#J#5]MsH=:^_M@p`G4G88R\AubJXF=6^
%h1m:Y/4<iU09UBa)!i+5DV^<OmG=(V]t*j(D&nQsJ@l9>o0f^&g^fefWKu,BVG7NrUKc^R*62]!\fAp8\$i2/QTOfpf,oKd2u2jA
%?^1@JC[_I)I27IHHIZTjmPu*oc!k'4rVJp-e&\/I_E3',/oRW!Ar"?(ZQ8:pOcJ#"DMW"e"Y2haD!g^2+r'i#HK;)!kQ5_G_,5$C
%V@Btn&.;ut]/-(;rjYMK]>:3Y;G*'c(c^-G,+&1(L5DX!+E=TrUR8k/L1>B8;.O!p%g#Wu!)]f_*t(sKo/n3.7.l"b:kheJRBU(L
%8br-rdG9`q4Q&XNiL3'.:NZGZ[Sq]&-l!G4Rgs5s1&&SneU9?BSBAnZ*4.Ono%ES93+sU_7+C#9W/9`8I1b$4[FHF<JKn2:M<SqR
%K5Ms/o=Mk)U[gr3Ioptq"+:R+fZ(O>LHli4iE.<&HZm_BXb=+_^*C+[]b_#q"*OBWpZ?Q08u-&DX`$mW7Np7W+(Ato7L'XXeo,"F
%.,B#djf<T"3.B7DOg>=V?e(52>qSl8%47`2UTR-UG-LA9!)jd13[/\:gZA"reP`t=mmY^Bc'l3o?_?QTok^gt#c:QqJDVphasFX-
%\kd9<I2%fNo/&$KVFVg\Yga*QD^m?Tqk5`oT8I:c>GOuJmqOQB,[,GK/Inal(kCqW`<Wt<[:9Km*r4f1N95@jT)o5ZM#/7H6=`e#
%D"lSN;0;R$EK6YVESF=p)&Mlj6DcZUD('9F,Yl?N0gkqaK=Dp<pOlJUKPW*K*Vk3R2iXiaX+T"j/X^DX=X3bAG=kZ?puqD[X0:,f
%FtMDehcl'bPF$ZF8Pb4lGM:u"Y!+0r[2V'>F?@1>@:Zfk=^$/98F)^;jd=&_31'V;`V$aPB9Hc!_h]n1O'Q6+Us9E[moY\*ResHq
%>jrAeZLsS_qsM2*CDghr-sqt?<&1*oLQ*cOKj]sXTu_sJpJ:12c7e#!n7rXuXqKSW,MN>ZV0#s)9/lYuYeIV[Jp*`SWt*>IS&R.L
%DH3bT%Jd]/cIMi76OO&n\^P__AIfc^:[M>m7mEKV0rJOpb>3]^/'NF&D#)8X!iPtia4B2EWS9F^%G6qZnJ;\gR1>!gm`3EtT'a9s
%Ae1qh_PsKSiDF32N>+3g-2)u8Y%$>&bT`5$O-8>tKNlm>=uMN!2(gnYZ0t,$=+%YPll+ICYr-WPl#qf2Zc%_ZT6:hd=Xh*67".eq
%7>Z^30=&q5TU"t)NIuN6,:=sIR7VjMoXVA+J<ZDgn5qN&qY$c9T`+Dok\bUh\(H*8CsdOp4(J_+jLEcNCZt(_[kms:("kZ\=*:\Y
%a7ShdfP?@\o9-XI@jlkQ-jZUWL&X/Y`4qJNNd9M$@q`=c/uu;Fjr%5O!K1b,pM&,t9,ZG8X4.3=Ug6sB)9X&)pJqL`7N'ng@*d-N
%1msZPe!cMp[kkZbVXa&s"A%4GfKf9P&daYoOrU80>.(>lB_=;qk[ho`(jW>cA6$;"2!3Z:qA/>09oTlKV3#"N>Bp,NVa]TTnq2&T
%eFHPMQF^0RG)Z]eZ29\>Orla7(-cbd>^U?HG5K_T%'N=-imYhgP_k\\lC7hfDVmnbUlO4_4CIL!ZRmI]LR*;Ki3NrGOG"-(@"1>>
%s%\t5WDU%FL9VNMb@ts73FWqKUPd+`Ou"?"@ea`0c3LdRTG"OQ</DKP<gEs>S9[sMp(Eo!CtSLZ@#'.UPI4.C5uBn;.&Kp:F-#ZA
%:Dtq&_##h%b8NXiH*23GR-,3>[iS;(a[i]h-F/7;OM:g4P"&f41de',T?B6Por-#`lqaa*$O0/#l.ioW>'_0hgnjO)Q1uEPr^=\B
%cEd&X41&-65':-#\^2m^0G?,7;B'*O)i]qkXJm[RQnHqdUdK7Xn$QneB&/h7>A's*FDSf3BhpB]cK#6fl=4C\/b6h0Z]W;=O9/!L
%if>n.+NRYVK^bB_-au'2g.\MlJ6q3lqJ^-d<qdc##UPr@!]tKCJ1<B,V;Wn'^ul86^cU'gV'a`X5Y:4t9eU^-@a?=ppOB5"d!hSc
%ZU+I3Cs4]a64:RsU-G\X_Hta6&uZP-5k4hqSk_*&[(bE-q[[E*H\KD*2/rHuo5%rMN=IcO>G[u'#RK<dg_e3DWO?Z,qq[Q-J"5Cb
%l(?em+;Ht7TZf2\gH^Nr@0H3cLlDgUZqa0POTGl^ZBt"&Q)<cb8;g+nBt604/!n`>9S`K#/']t%lnM\bV;XV->lW_`3"p/hh,qQq
%gKOmHL2ul@RE<oZiRbH6,>fCS]==82)X]:O%-eV.,WQ8;QA^+2!%H)-2ibLA3!t0YfIf_>?L3l'kB_2Ghi<\61XWfP?gD6kedRTM
%;nOO8?u$9Xd5YEehIl(dQF&0F@W1R0Qn$UkYu@QU4c[0TWu/%XT]n6L(s#8d\MAT)d]NNS_^QmsL[^%)Rb+l_J=GH\Pe2Rnc&R!n
%WY_kDBH`b#X2RWl7A'rD$M1I/dXgRtNFY4H-AQ_*B30\#*0a-]h/"])p8Hb,HE]2$YLRLpU[hr`i"&nELhd4cU.MC/1C5`Mjusk6
%paLPEPKk:+Br2O0!&DrsN2P[@msu2^-L2l#lIM''dk1]aRV_)ufh<AF)Ru+Krq2e[k5\tILZgFYVY*WWIb+3<jFXNg\;2.),Xid@
%P<:.b[nb2W)N7%%,l1)O#'nFP3N&hhSqMc&ntd6DY6Z3.7D?!dk<Yb3mO)fqC@+/>H7*m5e!i<#2%#)Nd7Tma]s"'6,/W(`?4q2o
%C@D8XJWZ4Q4Fj`V:-cEbK:_gf%0PmRGs"R]!+Ls&G1#Z6.DgTO2O,GLZq>/p_Qp7LknR)8jR5:c0?rgnV#B?BF@)g$'m]V1hesEk
%V+outN?0r(@2<Q5f]"*Fo@Q9n*T^p^C=fb:Uj%g#0aD6;Wr"\X4_b@O>Q\2kXhh2:*TqZ1pbJV"#=^F-.#W&DAFqF9!J;A2&L&+G
%dW-f-o$:^Qq8V&[kWAk9F>$OkVp=oJU3g?K:F37>(ACKk>+eB[U=AZ1VGRpB<(ies$mc-W36TOuLphQ6AZ(ota%E+ha\V;-Zq%j?
%)OYZ[qc$@d*dcBP=5SF6Hu(`dId2*:T97d3(,]E`f\1Kd)5<3$c@pI>'uTTL0!Y;m4X%)*-2.mf23a#2PKH;M>fJc,4"?H+UZ(=-
%gs%FLd#A1=B?u4"PqAbU*6#7:!G1>kE5S_&6ZY23acsEsL[LIT'Ki1YBl;3M3%V"U+(oh$IE$D6%1Y:sV\hu?ju@6"N>inFRn,j`
%Ysr5]TZ@VNLc%el&BD_YZSll]Lq;%K;&`GSEqo2R8'%Os5*[hj=8iX!AdLTC^k(alnJhG4-X9+fPA(fEd9I;IXO"24h4C/71,'I"
%Ye1\qXg+]KJd^S9o^b,Je:ku8,1iSl86p5+<3Aab]&9eLN8gIj/1GHn6<=s&EJAtT&<"V!$F)nC5_c$9]iV(=PIed71k,o',pD[\
%An]INa'e-9iFUk+"r1eDZ4(6*D/s)^2W/@n^Hus=f7f!ZracNtZqMO$3HmYM%q*_s>L,FmFNr@$3E"YYgq%^>E%Y@*9kC'";;H@:
%B6_sXa.(s+6g4t"]W!cMnDL/,*k^XonS71'E^E^Pb.g)a(Hm"%5LbP]3t5p@RgMJm'1<%LZ\Ref74b>5p(\oJBcY'$^Fm[mVs$"+
%8Xm7!H]PPWck61-_W)@5,?J:7ainiB,Qb`u*HNeaNMh)!Slj:;3Z_i<Nq^1\mdG5RjcD='/SgVGhF1mCUA(g;e^n@$WLZZ`q<bl-
%jLr`CY?J;nbjE6d&s=puBg/T<i$4NCjN]i0]X`1I0'q(CDqs^C(6rGXd:'6.1\d;hOmpXE3>8_EFcWc5bbW2>q^/IbNZR$=0B>s[
%-XaCh[Aq+YcO76'E6&Tp5Ab+pZ'ul7:^ggcZm?qaFt^@(PsKkfP%I#knA\$ff)V(1;bKTWmJu(^[cCo]:cITJ'U:2dI3Mhnq9O#7
%!3+E:>fp:hrGi-"qV$gPUZHl6\l?m4`?+p#r%pQn=UC0dfAoeNnkp0[n1NDengD>3.ld?,mF3SaW]M0>YikZ/ZsF`2j1!%d:3H;#
%08.>+bjZ;6l1t\[1mZDAe$Zc63mp0.Z!?L&e]SfP.CoHFT)R.+FG=8WNQ6nbRJ32j;Me,3)%=ec.3E<Y*SR*'3o.,TNtikrX:K.W
%g)XPl[cZ=UIA]0Qb3D`+]FZ7+j&9aKr6k!)^?"IXB!koaoV#)mF7^?X'';OD;=3UFjk0V+N]sQ4)'q?\5B"5s"kelQ'F$l2&uE)T
%n;Z\GFL&kci0oUq<uWZ@!#2<dZkMFgaoUC6mu=.uLWOq-@enBm9+:#\2O"7-,+A@(>sp<qZ"a*4CNCSO9',q(`N';A`q>2<S&'^W
%&0Y+2MH0eC1=$+sJEeWc.]rn&Rq^]6D1<ourTI<BiBN0A=>cbkB&@MF/a3?KNPX%D8ZU=123'9\As=@bnM.rQgHO\JfA><I_R:4_
%>.$QC:$^L*VCh3tnNl]Mh739[gZa-g8ul2KhC_>B=N>EL_'`1$2Q#A3>&/9,e.jn,[0>V=ml-5!=Vra&WPUud(2<C=07.'3*4aHR
%q'u=ECs.7;P0Yg;dog<)^\=Ai#`f*bX;1h[NDu?aS$?>equGeUOdWJcCQ%*5rT:)hZMseqX$o,BXJNZ%oihC(s&,=[CgI!RMgGbY
%=O",%f?j>igDTu1S4gV%]3QFF:F11g&p?u=P?WKMM*8$0kFb6;f8"u\Ldh=Wq++,L8bX6'-/NPY.gc^4dYiJAOF<nVT[ZK=i@fO2
%%o<#jVc'C5DLH6,BSUtT2(DP?iDU)7Z0uX_E9r@fSm"Kg?TQL%\lG^*D:DpE<oGAo18b0>CU&R`/AP)?D@%L7@;KRr.NNZL3Y*n5
%"Q8X!1l9PuoMfjZB3d_`LJumCKUTsTcGhoYO:&Nb#oY,g(Zo(T!3A;k5[^^YGBp),GGMT65B-mW.&G%m-s9c;b/B3Q'_D0J(?\n'
%HJ8R5/r+]9F?h3ul\OUB1s2!Nqbt<Pb+\W>MH<5Hh/Tlt;:XW7M+42&/<s57;saG18K^6JHIgh3OBYRL$EgpA&dnd%#k"^gb"nj&
%0j)t$p\i1r&k^Iid$Ft7F>A:B!Bq7_#*/d\<Oa(,XYC?`,M/_=R)TU0)4\K>*l/^:W=#Q;(!('A%kX7$DF'>\%CN^p!ArkbYD)5g
%G!8s^#?^Yk,_4Eu1N&ii"s/!__)$XN7TMMr`99G2mq_%BE.gRaU,2eSVRh6jq_T,u[qm1-'!P-9N&jPDdSgQT#;-@IqXmac)Nb32
%cs580oc_;^f15aD;Z,oU\0NN[X]J$cjH:If6Xibh)CAG;qU(+<L5POEV&Tqor=so?p7RLH-#Skk;?J+V&WnDoct!Rc)EYhkE.[Cc
%Ta]NcJo.*N]%="X.Gc'C[$YQe(,A8nZB'L&ioS&p_+_jL]>Y]Dh![A\(fVGOjC3_7-"`Zg6\`s^9/:7BVo`k5+PP9E8[O:uC'faL
%(i?<IVc&>A7nN9J&O2U-J,BaN*QVd!<`gQ'FcEI4[k_/-d>:/&jXG_]coBL%-'b`MntqD8B-Aj\+d7Y/Y76<h`kgs1"=baI9;,J8
%,%`t%I5I+R!#AM$^P%+=ANH\re`iCqLLEs8Cme1MSDVj6@*@tgeZ;24;i66)mNsF$Eq9sIll!WHL^])MRtsi"(6[4K`#sp[r]nnj
%L:hSb!5cPtBC8M3=oX2UgFMlA,0Bl$06KVTogH5b6WlqUMGe49^WKmRS>&FI/7')u>;%VKE"#Y@eJ,r!9:_n06$uRPY8rulojei9
%_#LCf82Xobj1mre'6_=6k/P1\j<Xt92R_LR7QEJK@V*_kNn<e7O<NVaC4&RkOs'lEdfY5P15>m>2)W*;KM_`?ME5p=fh)iDRtV^?
%[2$kLbp@r57p!,Z>=*[=']n&!T1H8;n/Ha)fh(`.9k'OF+`5J^@N1OI[#A8`>Q_5'Z5\<Rpt]nrA#WWtTK46:Tt.YF--"Y,N[DJ"
%RV2=iHV[CsZG.Nf&Zk4f"+AIfJ9A)-d9`l6[!28rBhlb:%0'0f]2acRLn:/s6<%jYM?5!LZWj61W!OJV_:4884FR`&)i%g(#2D;0
%*$_\'E`%G^b>Sj!l$ChhLY[j[+K)NAjVOc&9umEGoZe*B;V>T_0jbW3O^[Jd-f:C'=?Fck;$L0C_n#k&4<DP3Wekf0FFS&Xc*<ns
%<FquO[(G<Kq=naJLo=f_7clO=KN\>LN3lt#j5G@;"M[s!/#p[Ghs$B+D`I8nDTgSnN?+ugl;I5bE",18XHr82mNTr3B/GBnm_?)D
%dI-q&+3TL25@XA=!%gh4hY;$`np,r)HDnFK_XH:*mWuB3o8:&LW]on-^Cc$Vjo1fL"?`l(NS3UL5TIfuGLBYQZ%X87CADs>:F)i&
%=P"39o.#l;C%L5a7Ql.L2U;bjG':@4impEu:.%m6a(">S06r3D\*Q:3jrWXl=Pkh9RXKD6_Y;W[emhq'Q[e9[_<\?>Kk:6Ulm*l\
%0GZ`9-%J^C)24+Q(Aj04:(HUdWLtH!fo&5p(?Jb[eaDJqh%=;-=N<7+-4^grF&'hB_KLtdUT3!qC"LcQj*'=Y9YZ?Yl.pLGdCjGp
%ENQ.id.sNm).&V.5cjg>[Yp=&pOZRe(/BYVb6mNS=[*MJs.MkqFC=*hiZSTm]um"G=0&kUPR@eq5pIEqcDth.f<^VH2g%Vk*ZdH^
%h^>E$,00rfjAT'dl=i3plLo"YA?d?r?PNcR()dIt-bXS0=b#8_HoWsSg$%X[PPH/tW]RlO`a=*=@91ii@pt\>9r"ULnlrkZGC!e2
%@d>$7#;6[jdfZ&E9IXb9Ahk)n(.B8g9kXO(%+q&":g7<7I!i?EX/\Fm8Q\4J^g6F$olR+se9#5=7D*pT&)=SCrAV9eIOHEgCroM1
%Ni+jBgf:E)G0XXD[FRl9SVMR$#@XC8&tI]K/g:-&h;d/jOVZue<gX`lX#u"l-HjG[o9q5F8p/.%Q)d!Mb;>,m:1!V"'oS)f7`QGI
%gV$0a,_?tkSch-VEN0Lp6B%nFBdH;/Vd\m+\'8a'\Om`q0Z">':_M.1(;L/E,Qo5)&-kpf7Y7P2m^ft*J1W54V3peGA;q\g/>4"T
%;lKk5>Jmr$oe'TIG%k@p]q(>fA3FO7?!>lnj+((m329_=4j#6h7q8Po&^#3YKgIp:hH+ick5N>6b_E>Wc26<iZ$[>D3.Mr`7_]>_
%@>o@GdO0\FE*)muO8B12WZ3gP.R'ldV^kNe#-g;g3r6=4;nB98&q8tW:o[4L&/!LB<@n2q[(DhQ<ld:1-Rug/;]tW8*+dPK^#>"d
%J9EU')*Kh]dcAl#cPK]bfN6.tYrb=uCH8lhrDuEr6?/1@6\`De.K<k\YNL7$p*Mp2aRjc%f"/6":URT87*`;,-eGIe.rtr/U?d8e
%aTt`d9tVfGlE6!)ip'9EWd[UK&\8`CWnVo7_LgQ@7IKh54]+lF`D5:bX[=A1QFq+:8;c@@Pq$+%Te+'\pGpa)%fbqQS?C[M,o/iq
%?E!pa[CKmW8(:L.&Vb#l%)"*:CTGW`)2ROl@#(fEoK>n;9d%iVp8/`nZKMBkTE&C:gFEaF6UEpKkshs!cEn,N`[j0Yk(%!='$ZUZ
%lmpo+T'hoA,q6(86ce<&ZG]PHa]qkAggAMrW4)R25qjX,)::?q\M8Lu5sr.b(2!N8]MB:IZ[V;&HX0m=H+ceW:,/VXNc,+qOai*m
%7o%kP>;2$6?5ctWSI7L[W!LNZJ@NOn5l;NRFuUhnKNl:qY"$siMO5Gf-M12jQ'gBQ;%skXC;DNoNJ6#AYcmcqHF?>')/9^;+[>fH
%N:E7dor4bBV;oKoU4r-XQpQLh&\#Q@-)`Q+7T!ChUt)(X6qGN#PB'"VI/&3Hlf*ed(E@1E7/o+n0*'CM=s!d`&'MLPrK-AGXmFVt
%c+2T0-Kb\HgX9"4S%Kk>o&H3V(r!Q9OT:,=f#S[(Hp-5^Sh/D;^#0_&jX&_/jFj<fX-ABV4I;k)8]R*IC*IOlaWdR,kUQJtb#5]"
%m<nSqWL[D-3H%OA_lK7q6T\WbY>.0ojl?(_DG4p[V$^)6pIQC)bXcqF@%939hR;shh4)pOm&g9W-Hn'7F;U9gj:$m2B<HJBEaEBU
%RcQ_OTQfVjIgi5OpK#34j`5hO+9DP?7>Y_WO6'6h@tZ/m(@2g-;**3t2/rXmR+c#f.kBD1(JBX[%*E>8=tP#'GLdRVHp-.-*!BH[
%$NHM,-U)-L?!Gp1F'nlB3_o%B&Rsl<,4:f[`_Y>jRVRrfcMgp[Z2sr8:llR?[5OI),Al?7j'DuB[%s@.:&oRG['XM]8@0jPOf_r"
%ZD&)]U.*+am:Ht@(I1:FF&H=g.,+_AbP9jD/ZBh$-n1HBk[^0OT=D_K"<C9qaKmMn?Bs>]!!V)i;Qp#k`D0c9GA?;uB'gdHWojW/
%q5)&YWp>9=E^IoAFq7FeIX*cjq!>dXe8sCI_o&Vjn=D>]6>d^5g-[CT.JI"9O8>Tl(>/]#4+LaL`d0c.8KW&T`$Eg*A[:SDG$K)I
%qDXkF0`9ce9]qkLh%E>gTGAe9ek.lJ&GU,e%&,2hBGoHA1)T^1GEbc;=_ZdsT5r`$!/DPnWY)IYb/+kS,-,ki/19"A/cd6j34\WG
%SlYdaC'3H2&c`jn;r%fU;P1.*qpa%;N=&&uTmXq)]!AJ7[@(8V:1Q,^-q6SXQJ9uaHTFVS=ft4$Y_%\0U%/otP,O9^[[&HiR?U3:
%h3l_YTNXKRn$#9\Orh9`^/'>6-s:9'>Y(*X0bheiQ=JME`QZ\5#a.7J[sO=MkeRV)fJGQc%C?4ijCP0q_+uXYMl:A>7?_fM$>-QW
%.XV=!O>m8&")Kas;A(8]fihL>&uNoZR>\;MoEGZlc&0LCXE;#?Dr5pCg6(Nca!i+X>VX=poc@I9p5#=s8,\EeD*@$=]"Y7A[]`@c
%:@'LYETq&O;940^\VB6s/Y8[!=,B8k^_:9eVco`I4l!k?JSMu/k)3bC9AR'WZ>p*M0'VQ"<sCtDpk,=Yb\<Ind^$P+]Ms&.F)cH4
%)2A07DbeomQ2I#e!;/U*B'IZCT4=/tN49.p(AYJ=9YCW1_7%R9'ue0nQW$P=M?p^2Q(oTCf!&DMP^WDG]O[bp%tihg!EC1WNUlVi
%Qe@g)Vht<h2Os09bC.*rmaD5Va_8AmlQ5."^:(IG[^f($cD9>Y*f.f^hn:Y?d8e3%UrMMu#_rGBPbQcL2I70DW0]&7RB3p)G=G=3
%b)'gTjds`2TCC.YpR,BhU^Gm^KOLlm]kZt\/G'][mQ1ZY&$"L3kj"-2A5E-Kc%=WMS3\G'[/X%=N;ujh<'AF>1oJ!rpL"'p%jm/R
%,`l1i=sj#!,>.Ir2cG4:CmkoD=TW1iatOIn#h+S'8q=L29%>Bf!E=dF*F/%$oi-F0#%F[:KK"<U'_BbA51tZGaZ'l@)9&#?ZU7f)
%K?ZO^k@KPCEM[J',t+rpP[f\V@';[,VntnkYPi=X"o9U1/TY<?S8!0b'#>#W4YANoUC%8KLgFd*#!N)S.:QK1%:S([`u4j#L5L11
%QGb9AKNr:^Ki=P*fNd@_Tq(Giqim";$ob!:NJ6"3G"PY"8$%+u"i6!p+K6T<S.[>M"09E6OM[:r1I_QXDmNO]=V%dl(ZB6s6#ULH
%>#phU0<]TpHEKX59VIi?65]qJF%oqFeUMX=rE),+jKnO<<).kP.UjRT&*:9<J2!b.K=S>V<"fQ8Sr/Z%kunNh!7>A!98M`npJdS4
%`bqQuPNRlT"$o!);q'3XN>M^dT>Ptg(:<0O:c[>eDf-qFmA?':.M6k-\cGQ)f'=\H<!SL?jgXtO2%DtRj$hM(H.BW)SHfd1;H;jQ
%!%@(<Kr^\s?EGLI=TjDu7+/)Aip#<haCA0$apLG<bqH+No_EgA:IH<6F?:A!n7+)P92#.mpQ`k@#mE#LH+UD5&5@,<iFRb(jK&Xg
%g9>Zer$]3-B'<2Qb]APSeR8-:50ln(&cBW^Zk<g^R;*om^9J@]_jl@\q.cUMg.f!l>Ago!D7=St\?R6>UD0kY)Hh*d'X(>b(*4Z"
%3!,,mbfW,$Af`h5P77sJKB<;YGXR[1R1*)jBGDk[7E^.%=mF^E$I8Pn%hHTJa1XD^W"b?:=VFRfh-FCOo_!U0n6Rs2>f)Km+9Urp
%nike4;`QkuA05.SNHAE$`NDrV<9OV>'R*1`dFbL3rjos)=15!_:TE\kbr:RkMq3hZKDl87J,3(o7?'@^kn[7kO)Ddf,Vs`jj?mHX
%E%fEIT;8O=iP43<e)+uGG0cdaXEY_,!.)?l'\>Z&0`e:1N/7e8V$@\<+hbnN(M.2h6N[$BG50dS8k8Y?q^h$IN^fmUK&03JPXPY\
%(#3n2M;jYEIJ^$XDdkF%`sV<>E[EN?m44aAT']JX$I$pmaHq@?F7AJ[rgV[.LJi-sb/?<*'V4$Q9UZ3b49Hd$#-h9>d(T`38]9`X
%7Y))693HZIh!@>)4-0W6,Lf>^"/A;c<(X7&"DF$L:sEf5SET-L)aCOc'Pbg17j*QdG&L+l/ZtC1#8V<9CG*>nZr:fF!(_q9Y;SZ^
%lX14L65:kX6Kb1LFu+%9Up)Id?K>;G'r,E)SN=_0))3>p#KMG[ADikJG@!uU=e7$PKV>Sc%SRi?6EdS*HTh.]U?Cu.iXWT1_TuhD
%RB2q*&m#+=ibH1hb(SBp]D#N*)3$d:YLP2JL);p=pM/bT-\gK+&ZK3?j[7lVSJo$ngnfQtF_VaaBAM*$Pc^C1EAHO6=:&]LQK`?*
%3r6=4;nAhO=rl2;Z(1/_9d[WiQj.TfhULi0mo.,O07]'30No$<8>si`./M=N'5M0KOVHR<JpVj=gb.]gGY7YHX"OS9#_6M'`D%74
%o8LE1kNgebec4.LR?ctJH-G-V['EK)*1j7\;`#3*q]IP$`JiW#Ys^30Zl#*uH,0aWlEgW0STJ"U`1"Z,ogbFI!S/..;@C,(]+TA%
%.G1]+A(KdH$H4R/.g]Me^]YU=@c>6!ZKfIbn@*bNq3rt$dZ8FT?>`Zb?B.$XZERdU%+&Z.PP:`"-.JMt/`qY4_Y4KSW)QFA8tN63
%?obZ\*%=/0Jr2H9Ep)L+]7'9>8OL,H?DUluJmkd^?+uos;DnEA8;_q$a9QR^X%W>.m].E;aU'nRO7[:)I,EcLNPp@+:M%uc<R_D=
%\k&5lN>%"t>s,9$*^1E9c$i^Kq"/<sc8m4;d,Dhc9O0(7Ks/b##Z:Ak2rpcDdTPF.8COC[J%IY1X1:s()Y2l_><+/`?,TOa!g1Er
%2Y^a==WUPd\iT7I]p_U-)J3;N$dCQhLpW[<3-121MAmUlfA0LiQ<m=SfX8`>*?&;Mp@WgBeT>S,#h-\SA$<$(P?h?>Q,0Ig%X-'W
%=?_$f$r@.08mnBWZ@;3T@JcpU`PRVa\Ku$PVW4^5R!Yl(\umlZ6Mh-a2p<[3TKbdhM)Uc!G\]@8,Oj$FpKNuZJ%IY9chH$4d]K9`
%!U-\p?jS^_Kg6eU\H1iA@`'OI/^c5.1$A)cQS.I,4?hcu399\lQX>7?jk]iYhu--W^U"DG+PA-YXeX'0c#(!%;Ickj;%LQ<0?r<^
%KY)-0321ok.gL5SEs&Aq4@>#Q#d7M)Fj#?D>G2_h4dGAM"J5RB#X%X[HX]k/aMXQdr_kGD(_$E2hMa)`k$hCug,N1mj(uc0>O4]e
%Z3h"RGR8^KEZmpgFMC5n>O/gM[jk8peQo'6iAF@nFYdu$=EcO9)QrgfM!=Z6[QbUoJ-kc)9i61q8@p@bDd+Y%f=QDnfqkEJ=P,eT
%54`9eLheO<CgK,eNt^9J[_a55;#5-8[H]/Nk&#"n3t!No"9SKAVS]>8Rq5/K"KTsO+1W/q'Z2.mFD^FqdX%Tb1YKf<AeKdZic/>5
%a:OVg!pJM/StZT/`IX=@8,maN8f,lF.[4XAeRY2Ae?m%g1<-e#A$@p/dbN(@:CXCj$@l\5VCG7CJuJcRN3G*tIURWMh+G!&g9YW2
%,N+dH`IZ/;+=_eaZfEQZVC9r6#0RaSqK9Ktf<]m?S2[M3-lMfu6T3N'V1!q'lD&`S:A;+4SKbnV1:T?o8sH<_`Tb<!/Qu4C`3,fH
%_b_:`DCpm^(32H"7[i/hVcJ_!kY+"^R&F-Y]2'Rb]'h_f#/8)cD%@*P^"6m,ZhjeN+o"#3P&-L=kqpak3?Z!aUIDW^<#\Tt^Fmsh
%@9HAc\OoVm?u.?CHaVBb/86Gj68$7&U_uOKB*1S7-;"E566^<=q_.>?g(#%PgGImcn>0!/3V93Y"F4:J>#28_o1M%6].Tlu3S%1R
%D0m-Pa$jbdOSEreFMFbeC(-uGOQX16)lp64!@s)o2$V"L#27&U`bXl[mA'=6@kBdiPC72tU-8@(k`)$^IJD=MH`P'',I/9>i&K?0
%q467Hrldr[(#9T_bnAJDDO.DM+jI2>VMA_GPHI,jjUF4O[MBgge&^H8idEIU0n67plI$H'HgeN6+3R^.Ykupb@?9^gG)#;()E*%:
%&'VELOY%&:T3FHB[Uum1Fe%JfM<_a"lfZ0fcgn_@bsf\E>?5lPcaX8p<PV=0=(C)8O.q2TlsuC3^.2=+Qi5ktf4gT$]/I2klIND>
%Mr32Zi$pA9"Ef]=4gpgi5BT'(Io9,/rp$\lhG!">TO&8\B">ebO"PYMC?pl#E/`7V/#tKCZt:`I!u4p3II81-L+0e4e?3A!MWS[&
%5B^B8;b&A8%b^E>qn*e2>*#ejY>60Np_2$Bfkg!GJm.Hunu(A#>C\f),NopZeGZtM5p_pu.i3mfHs9A9m1c9<3Pi""Luu'Z^"^O5
%5_+#5La)Z7n_Kp$j-]JPB+S(eCl:^P0dWpL&a2GpV3(*_6s%&P)+9lRV_.$F\s_A#+oV,@`($Oc"G(6,!n!_B2]rZS,)8M;e_^M(
%f8,F?A?C%3SZgn98ol6h\m\/QMNhdD_R7A/aioo`5,N!8FoSFH9AWM[H!:`j/cA%;Y-RLl>Pra=@BIT$d-XIbo=N6:,.Dd%'bk?f
%`=K3Z:tLG-=SoRYi!,$D9#)V<LFQPt5'gi.jSf_Tr+n>g-&]g/4<]oX(p,R<C8!b,XI0(Nb]6UKF)@jeQf@Y(T?GM55"mc"*eteF
%fHD+:O(lR5G<2'kSDMF\?^u",j44F:[KpH]>VAQm"Z19u^E8m$*0#U@G(u@&1*KJJT3g[./ZU$/4f]9p//VHU2WsjPMTRBb-k?_@
%%HZ_<*h_-&Zs*)n=BLlK*]ju<;=m^TiN3h3@>2knTYpH^J=fW3Dgm@8jgl[P.5.%!j-Ftn?:_sLHe*#%lgV\oRjDuF.`G)DK1qW6
%PXYa3c3AW,nsS]!D0$BWR+Z!5VHgoMZ#LX?(\@jYVJ(iM?Q>3m;;!_,TPmY&Oi*!fchf.tODC?tA`^[l<rCHAK-Ao^OWuAMLX^iX
%>VrP[D.HKg23"6+E!0Ic2hes6L(lP1ZdH_(1oj4_c%m\qcHh!/9^^?ASk8_Gs&(4>p"jp#QEnnEoGV#482mUu4a*o>CWWY'ejo`1
%nm#q@=s'NRK?5%6!\@Kt/>nu1DOu_'SS6jm4E`.8eB!b(24VN3:@D!nB2:Tt4`g))%]J1?cL@S#'@T]ETK-.uEJ$iD94)^^7mIfT
%o*:5G+s01*qKk[LPjJIU.')U4/U*NMV%/S,SF:JmZAL5HGG<.Q-r9<>nNNFQhu+;8K[BusflQ!=`DDt7V^Og[/.IjEI`c),<AU`-
%MZB=;(e'lURLE@D3t;m`ke_T-F?LNGo6df:*loXSVK1Um%/CG5iK9XJXDOXf-V:Li'$nP=(rZX$h`f?U]Qfn_3-fq(]kZ/r;T2It
%j`+b_!Fr%Xb(F@LEnuUBe_P]u'-(l[bVUe\=U,&`'#e(8I[f[L,HnCrS3,e#FA"(o@19h+Yp\65J,b_'nqJjY'EheRnt!j?M<2,I
%Z]G\P9qFo+[mQ&@eu5'j6BU**r0BCVC,e[G_.s-d)p<)25CF\WVH==-@jdIH1YitWkN,ueL#gQs)&gakj>(S._t:+D6hE?M7a.6C
%>\[.l&oL2I;#)RTJ2(U,_%dp"l_99JS>PG6DF&.`X4M2PVc'C!NU;t8.3bCXbs"PVYKcBi7/hea7&s51RbrL@0d]ti,CRb'"OXIh
%pO,H=@7sp8\";Ah&j>!$/L`F/,.Xk=\%qQ(;ek'dCoj/Wl)0AS;uo.h1`uuH'T:/3_s`QJFO9p\?.Is5aFjHR_G4qn.'ff7<Pj+6
%RMZu(5UHO>4ee\Z!S+u[fs,2%PbYmoPq`:00q\mdHEIWj3WJ@(rR/'E8_!5.:+*CgGIOR"rI/PbNNrF/Od^<2KY!?A.qsp"Dt]CO
%*t'/S'b27e^j(&l^GCAV5@jh>]+36H_+#N45P3nj\"-e3`5JCL'IN6f,@/</f)V1h0S`1d18b_<4EL_c<tH_&80W8%pD^WZ@heO\
%8+fP2H<eu6<FsE(eM9aThesDH$>3A&c?.A5pfq%/A#O+bb*lkP,9KRuS?_t@Y!m^8b=\O2A$H*[h5?PG^3\9Ep:(=8*a=8(T/t9f
%$SpGM,,8Y?H4aZX8^NN_>L(!lN1N3u6]URRp50X<.)RiX$PU]#gPb4#?:@7ca1,[`=*cK>+'*.kVsC[g=b[J"FVUIHpku+K7$Yt`
%m7,\nPh/GPD7Z"blf*CpZUtD,=&W*cUBa)#r'!mGWg-[[CMZ]sNa5aK'uo73?J:#;c&#F=Xn5LB<Yf+AFDD9;B\J!,Dc&VOLnb1h
%;rV=(]lkld9$Xq)i$X]Q^\]2"?u.aIVF7#c-b\^0OVu#),l6/n+"&@Zc6`D;IL6_i8P<k/;Oo<*BYbrV1`ChLUa=tSO=>,lGig^4
%')WqErZ^VIh"+D`F`X"@AHq<R2mAJ"$%?$mb=[@D&EBr#GjU0RDArC2!G<8`,3FOu/WKJA_N4IDi-0[,1Z_OZ8t/oNh&CX8`fMd*
%Oq"KC>Gd-Ed0e&X-An&OD(qjZm*J8lJ!7Mr3(6Q<_5=A"G=Q:XNMuTt4R#gs9<&+l8outk1XM=K-L[6u=m*a:4M(2LcLA-70+ko@
%_kTf4&c>j?p%4MGEhoUOA:")!*IWWhE?Vrtoi0AfD`?R1+7+s7*Lc:1ZRhs-E?As)4PUm01Ugtqo#\0'2!N)(k>$ed1/](21'oJM
%3&7/`Sf!g?dDJ!ODC&WIl9\(fem&X46*Gr4S$81)2AKsAnj_6<*;>^c5L/bjo_"WV")6Z2^FB.+SUJ/h@V`=^nlb_\DdVCI?QVW&
%>[c/.*31?3XkB)%-:4OO6lL!%Il1%s0V*h[]3$O?mn%LoW=rbbnH)NWU;'ejN+<fOfui3s,R>IVM=,VfX2j'FcUnIZ`^OM`?gVYi
%bjhu.PNjL[YVPi84Aq-k;$K!l%-I7'EWsS)lgF!>aseLfjKHk5\4Cu?^\YEQRA-u@j1JarKEPX#mLoormE2&15k7G_d[o=/Om7%Y
%e%B-^Kk-&L^!Roo4q-,HDSiMe:7a'aROIL,lJ)]E=$mj!*,O1t$5Q-,.(tgtWHEDUO6%\VPK.Y$HX\i/O\[a!is`-&Xdaqqoroa7
%I)U"e+Z8DkSoe2+Y>qs/@IALeRU\;VG$86n>(?=4:,*7)9f[I5Bj:FT$qq^9WNd)O]cGhdEgYXqiK)O/o9u<*[@fn$\(VU3dJ=K>
%=*G\QF'R>,[T$?N4$RjD_gfl\(jG'DYQ>>6..L/Io`*f46(j8.A.'e!IeW`rbEkPjQb%oB99CeVii!h7e:\&u(';]N;iMYed&\gO
%IJ9h-T)H'gr9R,-+:>$e:i\)))ebh!Pr=t:Sh,Ol5$QL/R;j091B$2l_eTKu1=hCo7Li^U?d"CsKpbejG#*]Gdh8G,dQ7A@I$gr(
%T?`AkdB@N+>uHWB'K4kdmOhY%>%_>V0SHUU'Ih:*/Tkje@5qIDqkpGoc0W0OCXEVT$eu]ol90NPNkMP^D4nLO%;S,7L<_I.cL@`^
%0_2UYY#s\,"IGAY>W<>gqYe8G>l/Y,;[V!@e:T$)pRAUU._TgPRGSE&A5R[LoKipNXqCWPl`h"A3IY_Nj=U7B[?XFa^@e=k=I$KZ
%e/%caqRG*dC[C@cLDg("(e28pL(Th=7R?FPq`Hj,pa]Da*gZJ?S>#gq_]^QBUAp'LA,ng@GZ-!Nqb:QB8G88oRdQfsE[eBfk,!`p
%d1N%Z2:k:qYn@lV?CtCQg*9s8A#4N_qc'E0I-ZnHI$"M8O0-7%:Yj=dZ<2aum/WaZ7uYWQ>!i`MDA1WC71=8jAO?COKuS09GF2*Y
%`pcCmn:U@gcU[YUZ@-!4cd#qo/\P>'K#E?%3i_e++Z>mdUWF848lRigGQ'+RSdXk[95Ypm+"a3D(tbLI^n<!o7E$)A4n\Irn/V_.
%5GqpT<m0f1OmBnq26RJj^fRTlEEG#\MB[Y/jhp^C)f"1rZ%/mp@9:]ZeN<nGIKpb0a:Wrhn<YF$?0;qsOenPEJjrW5=bJO[F<<)q
%M-:UH.2'3V!l<e\L\%A45+OMPfDecXc:2hhZ/]88N*3Eck"^/`6K-_@&.5ecXsPt_dMl2t#i2Q0V6Q-k3YTZ*JR2m.)3785fg+:;
%*6co_?f$(R'QP-EXZDM>RDh6mL$AGLkX[k6U:00=$%B!-4OLI%'FODB_iGqP7Fl7i6n/p4I&pYa=CpZadl;Lq"-/WYl%GdMRo`<Z
%0_cbAK.dZ.\]"9-;aPrd)CLTKd]89YbH7gV+e`HRAO0b2b"-0:KiY9OPY*.I8F=3[b"AdIa%Ng%P6us`]*';$`;p[QRE,/fNlX<m
%s,dsPMbL3?m'4k&&rWc"50g?hJD%sL?9X64")DO8[),-4eLYl?<[bf&6I%EA[KPLIW*u&m\fA0d5N7SU)CA*S)IpWcOLjE7jl2O5
%e`nk2--4\-r*4jOnOGQ[+QlF'nkQbT1es2[-7o5ARXXGt^F2^-j:>l-!3Q<u/2l[(6N@0M'T5m^d0HJD4%lPRId;@/QlCNKNSFOl
%3>6Ph%p!(ug@g%]T)I&j9\a`TF/.^1A'm3qEJ@O^H*'R$Que9s*+^X,:mj#TUjVrETqM.9lT8&>+uO=9@[JPoU_R2JGDXI#."#Hp
%AiOU3>sb+[5@/hdBj+:Xq`jkP:.RSU"edme7hL`;)8u]j:F^_13A6-Dqh[kj)lfSgjV%K'7HG;L?&GlKU#?T+]BJ^QL_,0Xat(Eq
%G,7W9(fg:;DAV&`6="b]/JfJdC.[^+LU6"h#5a2O?,udaFGI#tV(uSFMSRHI@!NT/,Xd?EdDcU"533i%:=7WkV2MhGa;8&S<i2/$
%.&jZ<eXE`Nk[>q>f>d\U6N)P/i)?Q0r'$V[[h$g]TAO4>H2e+$p6^kS$+43/;()C2gTaQ/Y9d'JjHRkTS<]M<$MgjEVUOMDkmi^Z
%9qC0[A/?)8nIt>PYf1\u;1q)IM3k6h<c'es[6uC#\X[U$ps5tnE_`oT4J;Dp'Q%B(6d_JR=]#.DJu:rVrjSVM<ma[.L:N8QGAF9T
%eYgo3HJ\3d2GB3TgnJJ=3>.d$92A+iebfmI3_d;j-6efbgtKsT@*X9^YAS;;o;NJ^*#d@kL/):Y>h`.e_OqE8abt;/A,9]H%;t?Q
%=WtlsEeG)LpTH(mGpn9NW$DWcX%JO,f-ngl)r3;[mG`T;DtdH^q4$:,Pe56pn^tkPpN^6K"fVk&o'fZn:JDc##'Ue4H/a-@%eEFf
%8q(F)U>>X5mu;?JgX48!<F_6Fou@j*DXN?fO0+Q9;n!FQ%eN/mY:aO&2r87CLY2ER!VD#o-d'(M(gDAA"!o+31:4_P#P[36koYoM
%M$3MWX8Am3QLBZDEm!kMIVe?4'g]penH)1`1s8eP>,]pDSEKDs3L[te;nEh4cj`9V7'J@ngO4pkGe4I=6>m4O[3"q5qhK'dG<M,;
%^3r/+ZE&W&/WR+qB5*q7b(5fUdXE[DEi<!tE6V:Z<pU_>MB6NeoKZ#WbCTfE(7pTqeB8nc3kb0JgBR'602odA=BWePI>M:>?&+mk
%DE"`S@iY@5;o]dT<7LC1>l@&m_0"1M_OCA[<-AB?Q"BWm[%@V>0X;ZX_>5c6619K^Y]aIjUq4po2^W'(I*a[mWb&djEmmQF1EpsF
%F$5AHPYmF5hLTAd$\.`P`lI/GSE@RE8@o?YoVB-!(kt(:RXAr"Gb<@i%]ej)D</,7s6\*rre?^'%f<`?'Ha<?EG=gMQA6lGh_R`B
%A?gU*l?V]g(.9@@niVnd,`@K*OIDq0&Cq2YBl#B@$5u`^N!-[(A4d;\h7a6m1[$S7ad7_JS6tRPok]uWdO1)KL,&TC]!lHJqesn\
%rD5aS=I=@h-!--8>*oR?*$RCo$>u?LY23pDK?XJ5Dl,fK)PQR/V-V4\N>ePI=?uoI@o^:p$(.Lum;Bk9$@)CP*T8I#1#J'JY@GgV
%WDSjmr^',l7R(hcAos1&9e"PCks?9kZ/7_a,FOL;Ut.-=.[GY*V9$-8T^ef<ah3t_HeUtB)'Ih+6,QREr&Dj3L1lumX-$4"&#-Kj
%7Hp,'qs\3S6["5)7^@<RpZZ4,?g7.SA=%Vr,u#@TG"b)3=']"^BB+;:kr>ADeQJD,2l3?X7G#^K\u.-J%L'fO0t!i4l@G,l2k$m=
%'@=tl!"k9ufR@OR1B)!K%J/D_9eFM?,h>4MqLeSo<hE\)*iKr.[&4Z/#n?<Lf$V7gS'mR-"]jff32R94<0-c1A3[I(R`n_^RN]9\
%26jE1K5,#s=)C55+`Kg/b*E"h*Xm'p%N,ETdP*to\SI]PgIh&U;hKn$g+JAsYCcNa.@$_5o7fQP^XhZ8kt^au.l+KSj"VM=db6n8
%`c;)?EEgu1ii`q#8<:aVOdRhZg8a\@b)CoaD8A*U<qd0NaZ":gd/2HIgoiV-2"e!jj"K1I5qffE!*JV@=a,b]p4qOmN3$o:WoOJE
%ah46%]![F#^YPC+[ED1,==Yta8@I.-hNA%U@7T\N.$?9D"0skIFb^DJ,"D((^1dHn9Rat-<A/e/3GK!X']NfXLQ2pM.h5Nb"6;Cp
%+h'F':HlKCMV`Q2"O3\sfDMhUpA0*H=8`_(ne0XFOPTSp-%;j7k-B$Ek=R(TrRI1'V%1o&87ABI./+93au$u]CA<IN(ch3]V*FBr
%ree@$5Z]@e6=d>p+s1m5]%f2o.+3]9P^@+TN1tK]6*CPO#7bi1,%e`I%Z2E+9ZrFEK<C"3W,boQ^e-G[MDst:-V%o?fG\_aMVCeS
%luITZkPEqbLBsNj7p.q*f(>r;gEkmurR'VDrQ6>lG^JeO=-f^afRi>RT/?-IF2CO_g"!<4^u19#?!NM2<5;4fC49$sErao(/11Qh
%Q""%BGhXX!fpu=ECqJ3aO.pkgYTcK.A0pZV.*%g5G#oPOQF)SFjUPWnG)5acC[tlMmWt,fnK/Ne(QK/s4R0[_kq-*dO56_!!;1;r
%"bpY;%M<i]&']]>(=o=_/;J+(&p$%EqD@SSL6%=s19F_8S%e[lq6;:$L7Y\1(j@Y:DJ2V4.2@_*Vu*C?.+6MXh4)jMCo[L)l4^:H
%BQ1F5?@lu2JngJl&#m`1(L((Gpb)S:'Y@f\nKOBD!&jR?!=0>;Mo5_1-jFnF\4@tMPAC^']6-oC!)RKIfc*Xa\F7(4O;@uG(?8J^
%1=0%pKcXSsp5%U?)@/#.cg%8VO)+(XDsjVI9#lco--&#i:oYSkCBe6F]tOg=>>2mq\4,WNb(6%#FIFF#d0dq7rj^Fn29cEcFf[V!
%$/jXjo;ub^QYbS4He`Y9H`k77@-A"OE&lhbT;YOc="WWk,$p$kSH2bL#<d(TO84Ahb-hXPs#AptC*-ddb"p'?.[RIYb@S1>pi;_)
%B=kN5><P74%trUX,N>%*p8RHh$HEJ/BLFm-AtLTQ+4OPmY:lH3l,h<_Cd9eBZ'jL^2B%YL!WPa:".B(q0pDg,[tYk3[*!G^Sg=83
%V5f/JIWi1GQA2]b75Zeq^rFaYm`jp`Be?*I\2+a1rU@]<b:9KW,!UF2dI?Ud9I5lAdJ)*<(_lt*5]2!9MP!GGI'i3>LrEJi:K6?;
%I``tSGD+e&#YGR)j-snQ1[/+2YQQRXm\e66^7O^i$]0VT=[hq+4CgZ^=k9M)9eI;r!\4aq3kRj-_%frC0&W\0Y.I556lJ:2qrOWK
%mklrns,pWcj2\EdUT>QN^X9@aRM^h8,\4`iVWi(N'k>o^FZ%>TH<e"age>%6:OQT>kqJTbDCRAkok0;8PJV.'WX0^IL!f`D:MYQV
%LgVa@UE7JD-\Q`%"utZp(S(l(3lG&2bG_ibbl)EKgO[UK25XOgASc@\b$ogEo**Nr!kKa9CN(>XIC[,EPPr<N<J%Bef^JDd(Xr%7
%IBq+.U2e%#<>0RF!9?3t!K4R<PAM<l?.HP30OlnbcMnYR.=mdQYFVgc7g#?ZB&?@/0^WdhB#]S`AN;!I2lh17Nd:bCq_FdD)4^0u
%['gGAmG;Z^m3_U%XWji?-_<1&E\hao/.uN$cM$++3I2.-#B!R?(+h%@/T/hIJDsbjaHX*U8f]e*Kk-t-JpDM6V?,UdRGpm+/YUC)
%IXLlYC^X.'"AsjeK*t$FKhbuNGA<hNlBqNq4Nu]0D0;IeA!rRO8[3Eo.KQ!+f2QF7<=NZ2]op$+9t#kc.(ltE;hup<H1c27I4e]6
%*tGYlGlm7RTI3H,P-iVZFub%h,AC:EGLo0*.*V!oZdUe)E:VY3U[Em:G&L,W0<6h-AV+-V]$OGf%#eT\*FV><g6@*/JHDciHJmkd
%WD6eTbLIC.4qdHA3YJ*j+q18VN@GTW`(9;eUX4QK9pE2:ZUAiT,7eB/\jmjtoe'TIG%ihIKAM4PYW1a@Kmg7TA`@]=?\Lu06gskq
%LF^KLr[!K9Wuoj`56g$2@&QLK_r"S9A7W\SJLD):DMBhgj%@]=e69hUCp.F>O6Pg`I=+YVq1fb2Yujbf=te/j9ee'0+)X/lA*E.6
%mS2qa[T0u(O!OFDBAK&g.KX4Vk:7S0WI:8L^eZDV*#QG-)`(X1(F0*rJ2X.%;H6S)KK>HsoRePY*k"K%fYY([,t6o-quqTPX:;-D
%2fH]Rr)RhJ+c!-R7X;PZf9?0lB8Rk#@llLoniWQ`lIr9;S%It+dW)-*.cjr0dGt7jM.4X+UmG"1T(kXMEZm'Nk+giLDGCObmg)NY
%0RhkZ]`g:uVOcg7,:Z$lVIcU9anhP$=Gm$j_;K&D![CEDB$K_5Y$G,'(^7UU]Gu_rE*CL35Bd3Q9(52*%M706GAW6B%#i)?a[U=M
%(GT(^27Vb*>oa=@7^3TMof#Pp6ARD5O+6?;Q7YI)K;)agUMp$UQ`k&6e<#=J,ftER&%SepXm;0V<[Je6/ut:#"`3S+k_iS8X/WN:
%eZ*)mM]1hX;MljY'%-J/RlMbdnhMcrApQME"lt/H4?hR7&m82$;dS\iUTJpRBnMe(V2!.:CcG$n>J<#Gm?B5@W[R&.@3?/-4HUp-
%:]raoALoQH+O'u-UlS=ak&4QB)d7eeWVMr#%0e#FImV?p.uKEMfkun+mVH[4^)&3s1-)22*r"Nno6WdY<:mY524;%f^=Mc=q0q;>
%(kp?1LsA3*e@N66caM(t>g>=])spTV=*hX'EXmqF+13k5*gMWppJ(CpB2k^S<bNQ:nB6-)5p^5=!:>jLDDYDQ2M9N.@4_!U?XrRs
%5nS:>W*3HBgWMm&`!/ukpttL6l>JRa]B;g=Od$TH'au[*Mm#OEH,hUN0[9`f<[Qq%qD-u/(f8X9:_UXZ$VGUkWg3qq*s=I\(8D&9
%C@.+0GU"\Hb\gd88J$")KZ!muC[@I<N2mu5T'K3-$(AkFP:cZA2V-DYrAXK$&#J:pE_.JZP,Pr2E_23KE@M,AgStJir*ZU,*O@BE
%=:)[U-4=;%&@7Z,KPN&kTiCkGOHaa`ZHR8hE*J;A]U78J/:rM9%)+(/GMWQ(G&Khd9s'^Zc$"Lm4'8g2YZ$Ma+FK(ZU;h^'/:ENg
%gf:Nd:<?VMT[G_<:4Pj[H6MFEl/QM7p?jBnh6p@CMQV\%TNF(>B&7eliQfk.qGQ65MhO(@=1WfCh5r_r*!SXGLUl<G0(H8N?7%3N
%F@9kH`U[8>7i\KKrSMSe>0tA!0g5&1D_q5GPft@$;SQA`U>@25:d^NIN8etHZH-(Qcc`3ES=Qf-2Pt!9@9Ik$2QLB9JK^=N';]2g
%]/QF!)PU55]c;sKN\t;((`[:?*m="[p1pZlZ?.#?3e5=FE/W=SQ&`)l[MY<cY38*Y\L)8F[%[OiPsS@']_O<d;V/lH=TP$5[<YU7
%C6u+O]2Z8'&Z]G%+Wb*9?!c,1;[?1NhC7EQQ@W"eheS2'iB<I\5r0Z?0<RUM[j0F<H,F[K'j=bAlOh=\2TsD4P08q:@Opj@nLBlc
%q_I1'\63s@`r`F`9R\RG]Yur,[sKq-Rn]0rO&E5hDDK@@N[\PF\4AcQZF,b(H:T"]RM&R\]U^2Fa;QN@HR>.0C<-[:Oa$C/M@?2+
%"PT:-aT)^<+'s=Lk"ertaPO-h=N7bOFng9g6N`Vm7-TK=j$B1"lE^DYqs)3'Eh`PN-3natI6$2u5!b%*FN;m'.F3qqa6EXnaKXjI
%l@Jq!p%FfYj;K2O'Y(PQaj[?N>]6Z(h4l,/)XHj<UV/$6*c(bp._t)&/T#_jDg,f824"VNr/Ik"<)rdbd/_.Gb2A2XALUP0lc$_/
%&Y=$lXd#_Vdu0,)/.IBA3AU[52"1]kiphY&`MP<-=;_hdOKONqFo-L!gMH+,atM[qIuhZ(^Tt^PG&<dL"[rS;lZ1Z`n=(5HSo.?a
%,>t+F]X!u1<:cr=74'TDF6:U<k]p&8R7n8f:)_t/LdXGaMs&7&kdQj%^=fX=/Z_'I-_bqQA&!.HqR;M!qL!5KU"_VcE0=+)R;s\/
%;(&AA")0W4!]dAse&(hBHE3b?naQ%+S2Sc/7esRYE2UGJqVs6tB#"62:WiU+Fa*te5)WlUaA1XU=N*O`GAVZGlZ>Nbn9049]Od0(
%V!\Pm4VH(?USGoX8&UJ_7Vl;KCGq"[Nlg$&F3#(fJUW7"]MH%$%3iWPo"]1C5Glm4lL<^!c0:ra:9?"A'!a\*@?7W`!/K>l8=ICp
%L\t/HTjBLC1aZs^?][%5@>o_Zf#eL7NRPK%_-1n*+uJ-hZ)SZjVfW6b>Q+*:1:<c8I]IuTk](o.l$Au*BDY[#MAD/646FR/(0t8$
%B621oKU`$/$T1d>;(TY#M$6g!CGI<F1foumZ'H;,g;6A8>9`<DRoY/SXTSYG(/*iAP5T,j"\gYu\r5jY.*j1EETqGsM'-8.&HbNH
%>;crq%0#YNN%Ui^<+saLV9/5>;:O9KO9%.P%#2=G'O)SD.k4qD[&=/%\i*^?kR+gB:e]&IM-qUr!te/_=(-]b=+kF47(C9m(I`P5
%21n4945a#SFQMh7Q`oS`eF7A,+!>u]8Gq]:U-?E\oMIA-fhdeR=CAG&c@EX7?rn9r%t[(SCQ!HLJu9!]`F799nY,<>lg$p=-#FL?
%X"C5_)G"jgd27q8Ba\9PA)_"1EUuOVZb$Y!L6N2rFM!:[-@b/@@U&2ha9^(YrVlj'o=oq1G$*E2Y2UM'AIWCFqYNusn&^ZsWtEil
%ZNrB:J@16f5T&$RgYjTsiRGC;d]Q##FMLsr<!J-6Vht^d]L+T]6Omo+e/J2[dW("K&Cgr8B4*;mcil9f^1=Xkl8+hJ;>S7cFhb@t
%8defQh\I..qb:RmeV'Ru@[Jh@lkCj2g>YZlTcY<`.*bH^:[M>m7mA+:Z:9IV]2+P0ACok504YN.pD=.Mqp]VG?U/Mr^8=u*>7k>I
%H[2/U3=Tk;[9jj^o<>T7'(uQ]9q@#\hmThd(1B"_&Q*W/1o+g\bHnFo3NsQ_NDRRZ;ldlO8G?uB%/P/B;U%Vk?6*bg?X2VpO0,[j
%:E='B;mJG;lN-[of/T,tO;8Go_jF!po>5gj$q(G*S4@#D[8FfVk82-E$Ib_uh..82ZY:CjF`t?2[cB\lfu`MoUO_aG6m:@^gI-0C
%WqFj[q>/NJIfI-\C744&8\HaUg"]4M?!rhD5;Y^soC@!U/'1hhAtJ5C[hd+]l/Up2*3#R4:U-b_#]4dF.C+htT)sg:C\o1+_A>5:
%p"4.Or7(*RYA:7cTo<bHrYd,,3acEXb,I(i;#NAgYe2%/p4U(j#<1;!LP"TXWhps937"g+LZXRbEDISnUP$*[fdsBh/4S=K/]YHR
%NB=LlWR?eg1j>Z30(.(_W-N:9U"N)a(O%:u&*"+Ek])3@K_=(qZPl.$IPLE?=ikC]cpD;$MG0,&d2AI'Z\MkE]BJd[5Af+bG;X7<
%RZ/,&*gMTaBjJ)s#@D5>+.im[`8d1bMg!/X=/.O/+$QO9ke9E$n<;FY`M[lHkEg(!Ga[/0!g-+l&T1Y4bmC>&*[OUW&/_qZWg@F2
%E5Q8:PPH@`6u+6A7.A%N7"3?'qt[1^8iDaRHKKUW]SNoSbf]J0>lHhgQP'haC8i0#d`L4;#uH,R_qMXCr*W:Ko74sMP+8&Qj[B4!
%U0!)S^<,Ap`=(6nn\h%85$-osWMC+ZKBV^!cm,#qA1IV.HC*_L_<ZdsJ'Qmqj&lRG*1`p@P%7CBE/Y'M<]U0b0PC$HnOf2Z"E5Y0
%lC.YZ6jl]n73+q&eL/.hpBP[NI::(?-dT7d_hkm.b?RS\_`NaD'eKD=[p"<oOI8H"RT2j3Uf+4r'Jq/Cit),aX^q%].L[4go&sPR
%4,0KPZj\ram'0l2@[EU$#XkkIl7q!^3ptKhTbtI5*>IRLbV-G(]HGsT6DUm3MRni+m'j5`Ubq'\2PWYg<tbgHkf2r3_cTKtJ.ITC
%.0+2?9$0Ob2aid;&0\Uli7IkHl/]!@lBu2_rm,[Um4]lrJrGVpe;d#;F5]p#Y,W<OP?B?q^!^QK`/>lQDhb]mbR7iLIj:s^/kduQ
%@p*P>8Y:^F@;ue]p%2cKEqW114jLSn;g9D&l,P!OQ/`Q3b5O4F"R=>rhIFA."m8dNr-dRVkRoX&ggE)f;*e=<dR@UeQHC.M&'Tlg
%2,D(S=X"<ZOh"paT-@5s,M-!dqeU;$pEqp6EU.LRJa'uqDM.!ul9_]h<Qa>G+>e<F[$3^R@NEXmV1I"X&RAo;6jp2W]$qJ59?C1L
%<[3c.)&lTfGO7$u-]=!8Al;S$D3?J,[sJm9kmY'B-?rk$RH5FdC6s"$2l>TT;j6$XTgLLP74P]=(5?EQURZV/g-E&F@I$$8,:F[7
%mj;onZGQu9?h'+skBdch4-bSkn!E206lY*KTBqe\KUHkT5q_rm_D9X_Lit=n*W<UhJO>3NH)nhY>s_LG:"ZIcH1KDm!8Rcrnspk`
%Bm;3T<qQ[n4F56ThWpC:j<V?PZuR:^"e.q8P",n,qY"?Hf0(?*[l]rg4Y0Th75e&Pb<o"8OJ7q-PVfrp,NY5Ns1E'k,D88S9]LK\
%_#"g+?KZu*M^I1",P5("ogCQbg3Eb@s5qm[>6$(2@>GhS].t5N."O8:+d.F3cb>d;H^tBX$aLlPdV+T=<;5>$;7@g-P4lKoBjOR1
%(c#SUP@#6\$VU<co,jt&2P91YPL3TX1VB[(A2iMBdbmsU=oTJYg`M4V7q%H4Imc:.6Pu2jl\H'?%j!DUpVA*2b%ajP1c/Lf^b)XV
%iBMe0?^fS&M>R7Dl@ed72tpJnMuREI&jfUjA@`ChTQF)Xe-=6gnCiEc<),UE^U*pASZS"L^;B:,+^+JekY<'Z%-`E(;nHK09=M7>
%)PGcQXHB=\._#?qGi:Ld<l?/LF.SM^gj<<XcsdZCR1E6COZZ)hs*RMd,bi=*4]?D;(jf8qqtHT")MVg+p70o$0eFEEVDPcJQ"J/)
%M=jt]%J0FZ2e[\gc.cdpPKV4c1Q4/9f:BA>]euh_fGaS^e8^(IONoKb-ZJW7iCqXsi7-D!4t=eThiuE-_PsaGH&IO+5YT.X78jg5
%7%\+$aqRqOB<.FcBrRM%Hcpdf2m5ZT''4hR>86&M1QM:58SEWD6F?!q7Pc_c;ZjJ"CfFFr^)tR]iK\/nC:EfHC*-K_k.pBG@G#DI
%+^@)'?O"oC1W+:.7u@l#TjBuh3<PC$9l,U+N.D()kXc!)#M_kWNL6,?XD5MQ,.QYS,fQ+iqa;(q[m.eK]Zj"]C_SPuNF].CL>Z];
%maY1JngKpZZ-IQKDtO1e_8jL,G91ckCSjMP#mId!Ml@37e3p/\'/5>P9=glrF3KTQG)"QqmVlSYINZXhbThQu`QL$^lA123Inu/s
%59]&CA-t?44A<gDJ_in5oGgkD)hlQ3>K20j6_#U*MNrb[7F4oU$<S?39Ch$*X@:,I4r]H`-m19.%:Zq*)edMbcSl:db%btF#Wht?
%&"T'oXhI#@U8Q"pb^4Gi<.0=hp>POa;JDm!AE;";pMl4[,EiuL)8/IXb'_mYVl7c#;2FZ!/!V0i*#p!PNFa@Br:]Vc$X_ci<[W"U
%iD,-a>f.UP<a<(JOB1&/[G_>Ph`SZ[DlRjM0Y'N=,:)4#9?L:M5lu?ACC_c3MJ#Mo]2SN&>Zc&^<'0eOGF.,ZS'o6&P<%l.miseX
%c*3o1kP#KJp."96fUM<]C[TjHlEE*Im?#V-/&**O<ucS&-YY-?__LELA*(hTZTK(uP.%U/Uef]l3JF<'pZ12F0c7/5KY&_)?d^$:
%Gn'_kg>"48]NW:\V5"u]L>#JJGNTmgi)*66H2J_rP$miR`u0=t^,7Nts7kDgqP'ng5`4Z1\MJM`%,rBuiDHRFbk>+tmQEo[?iVP\
%,oCop?i;^jb-gd=(Bl`8)2%/U@5/cS^7\@Ra\jpUj]iE1Ir>ZW'[4gS)_0+t?;']?Yq-RX^?c!N]m3AU:&`8ua\sl4=iW7cQZ/4l
%WZ\V$O#@':6[<U@@Jo-g07'FPk?0p_,7T(E4OU@A:?!nj:2$lZ$Z4qp0;p/rBoho,TB]+,96/jtkCqm')Q=o*W54cD2l_RFapQJX
%PoLEWmeb$I[!qr,VfjZG,NXD4.O409;_+>[osde1>m";lXhh2:*U!3YGlEG/5e-"'2"'06<0ViYr]XC6j:LqR]fKH$k`n?i<2b^U
%5Bg$K&sL?roFYF#+jts8K7MmtrQC'@X=]:O[W:uLc<U/?g?JS,E-R9c;8Hd:;8J;uBcc^,F0F8_eWQla*+sN`GYZ),Hh)sR#"+ek
%@`VX!SjnR\HA^i+6/#6Z9RAP;4_4'la%Qc"nr!@3o:CF'/"F]RQo,KtTT>B)Yo:%<=^;Q,_$>mhePUIh5dJB#ZjlnXpK5RX*l#'c
%p*nUoYtqQ9iKk6Zjj9^0\4;4i>#28_qhL4'q^G@#I'%!2:(1kX_4hun:*aJ4W'<mKrbpA(*S0pXNM1\B``?O3B;KAI1PE:tUQ?^g
%FpU]GSEbq9>?6o&`TpI'"oW^QP.*/9DtbQ?YB]D1>MSK+j5OS'd.sNuoR<eUp*+klM@901C=I<l#9B<7LAlngoXM9#aQ`a#dHYZV
%di\L[qkRl\0)#%/`_riDbNQUZQ/'Dfmp(H[?\O&!s4TW%)mM0LVcJ`LkU3hu/nnR_lB?2eX%.$cMec^JCcD.O`K/&"?E][Z.t_h0
%_p?[43m&%PkZUj!+Bqd)g^[W622X5#RUleL`T:rXTeWZ:HAlg8(t;IjpYEeO&Oop;0kFMW)OOCW)+K_.S;Rb0mq.W6,=U&b[SZq!
%)Oo8/Vrgr,Sb\b85miP*jY^V$4pK#'e?guM4:T?(pa36ACNtF9;cCr!CuX/!,Ms_X.u?:3mqSAs1qK\2g`LXa:Lh3jL11Aj4aj+]
%7"UTO3=R'OJ@Jft:eZIFL74c7$$()T"q$j)5DjKO==7oIo9`!l<$h=IiBEB?J+?6[.cVZK)=A3AXEBZFi'g\s0`9YsEfii097gd7
%ReJl3m_$[FlTn17i;c@$!T6NK"2^LSYt$I;af=6AB2+'PVIKT=1;/95B%Bg=fQA/PqZcZ&K7=_Qp?`:'<ZdnN7`\m:BXUj(s3;Tl
%cW.O9_%keT.M"0WNU2&Td2]dh"o-a_*"5:1IK(@`X'_g:GYlZE[1PWc8>#T'K6YG!DP=.0G%5[mo8u`I(.3;I.[?[?aojIjT&SO:
%^F/3iRO3#H[;%fhlMLXY4(/^8L4V)@iB9(+Df!6)j'g\R\M\\T>fF,tfI8jD>#P'g?qZj#S`=:B)OrZXLhjCsNea,F)Q6h)oH%"B
%LlHNkB@[OP!7[Yg]!4"M1@Y;d_m:^3&1U*aThH!%or\i#\R]s"ph,WGT)8pK0$,]MHt4-.AcphCA&d3-PD5;:q^PWH1f[$$<$sJ*
%kIH4&ck]\Q7W;S:+pEfDp1ig%X\IeVGLCTZ>"LGH4indTle+tbjL@\=cOjR`AqF+'f\A[Q)9s;]*DGlESS\RgCUF^8kc##ff8FGa
%F=X:*l<:N]ISskqlb$f@4$rVUH\lC!oH..IHYm4f-gg4Y3[*l@Ei*Dp'R.eJZM9.9B8EXSV1rNUh,O_uIE'b-!Nke<*Xp8<GY(mg
%_%bsQqTcIAfo4KfZQ@+6RhBF-;]N5c=<_)1k$QQ^at**(CgZa:5RO+&#&e/LV$M8'ku[,Ic0"D,nC+g[-gh7r#if*`%UFk1VYZ)a
%nrjSXeS@VEPAT=EoSiTN4o#s1qU0&L97"p@D6b\Ej=tJ((7n?=0]<<p_`X_"?*e'9a$Ca^-3?1eaZHOEL.9'U2%_&I=?N#k-Gh7!
%@eFuS1OQY8jPt,'D<Z9FVf9kl0\hFS[6@(jr]%lH<`u"@YG*QqbIruj9I6Q00YUZ;3/XIo4U.\Df2.cQ\2cqh/?sCW%YfGEAIS\/
%Mapo-Q<>3*`PDs'@K<P?g3!atWsJY3R)@j8@"C%jVo9)PN3(>u2(n=U.&P=iMoChQQ065Llfeh0#,?])RECB_5<dB_\s<r_cY47[
%'][<873r:E7dJPZ/4fs[5kJfoF6;=t/`Y,pFNT#%\,LL8E7`Y[rCNild'O[;H-q`QC2iW[APsM?>-tR#9=pK-(SK5$QX.frMsDn=
%O`p]._7b&`N3hh!NdQ9>Aq$'u_cGRG+*5,<29T%TH$)QDLN'FZ:cYK/MPK7.\9n+,"8p7#4j?2.e'j0;c,uVSLW:ArN/[M#7\6Me
%A(Prri.k1k3H,@j6WDCR'6ZO)MWY?BVcLuqb->_mErPK*IACuO;-WhT)VB@P%=W`j36*\*7V;Y^hKpc^^(_JOhXWT9NRXBj2CSZS
%Id,M+EHTT(@a4*oSdY70[8lCa.\:]g*;D$AQUS8@QA,3^"&hHdJI0)uCM>l#,B)n%+[>u<M1'R'\bk_IWqG!_q>/NJIU<]=Z7Tb(
%0!=jiXpc/Tl<]uN"[;pddX#$N:SdZ5BJEh`lCM?"7V0(F4?]?L_1uU82qKoQbM%nu3^jY%2fnnsRg:9b8^4E;^+K8p,;nmb51G0A
%f%KCL-<j/6NZrc(.^J&N&C]PolM!br2l(9X#s"UC2YOV,'D`ZVWB6@$7R):]:f_XN,>gpR,qsPt%6=(h0Z?lXoHL=NW_l"2BN5kD
%VkfTi;c+c^o#NOCZHl?%<ffu[Fl(>(YLZ$H3mjn@2`Ng_E9\sE^7Oal*NHdjI%^Ub5)./Gg?S[,]Mh%ZOV@G"ljdF-W-%?+a,RY;
%("Z43G63FT9-[Ft6j1N>Z`*lG(?oRf%YFdL$i!'![HQ`9T(?*U%(TOAP$>!ZjBTCIN*K6&SKg(_&PCpg8,maN8f*oN#'*#f_hdF]
%)t]+,k?(+5C$Ps?g;FVW[tn"p8ZW+A&\_3e8BHu>/U7D34/.g+V^c=R;_McBH>VJA"2M)gZ'AsPc1^Zr3H2dLg:tHO=&L9$mT4^^
%4kHH_/TeOejY/f/;dESXBB+#2ff5a;3L4MhXJ<0UqukH"em<OMhPRpSR0bkB2d3GLh@`6jJBVeSTb>0d=o1uARMKe,Btt3?5W&/7
%PBM%Jm82oj`ntQL%Jt?kUB%'=q`(9"qal\[P]S_(_.ebT7YkX&]HBN-I11dJ`(Z-'Mk+//?k'5h\e0VA2(',:#`'PBUW:;\=";&;
%UZ!97Ne/:3KSLAKl&\E!n%TbLcb$PTGc/<jh!=;%?E5e?BW_HqNut^3/hQNjm44Nc'6huY"Y%>\8*addNi"EFkR$$"3RS^)$e]]C
%NP1a\-HC!leAYhi;"q-e7^lL?TCh?sDO4@]L#0sM9Z(Y]GOWeuPe:91W\t+;RJ*4A]@Z9(mS2s">pX6%:t\b0XT&(?-o)RALd8VC
%h0n#2oEOl4\ILa,[T)>a^*!_&Y$97CMm7jeeA?8PRHFtdT[;KH??%7O(P$a9A7*V8,fG(T2qD@k^5U)ODih0qqKf_Sr>c=V!I+a\
%4^rnhAVm$oO1D?^_4Yb[PjS/oL(S9RfOTgEN<LrW%)T-p^$9/i0)`p'duXHIYD4VP%p8cKeO,t15VeI<)-"cREC>d+YlVL+bc>&R
%Z2,d3B0aD^;csTT;(k1@4/X-eJ@dDWPji]mE9*I><[t+S7EpF46.Xe[(J"Cp;7N0TS@5(bTn;ul/mhCtM=o,nQ7#>.Hd#3)D.T>3
%b[!EX>U9j`0m>'[1"#7C#$n\]OL#O[ObS0_VAmHA<h'oY`D_9Al/7G\)j:3u#pCD5I#^"lWN"\\#)Z+1BYgeDI:h>E+B*G$+%:#Q
%,bLREh7b9bYX2MYaP6&k'Cr20^7O^IX)G2@OR!qab6tl(`sEn2_:bJ^iI4/\O@`f*?GVlpg%6R"EN6(_TMq9_X_?K#,AcYbFooib
%3=thG"sc+/Hi@:+.SfC.Rd,Mn/MTi,5K4fp<U53;8n=r)c=@P@_+@T[rjR6<qO=&+5Mh"&@Id#3mT#M)Jj1%NQ#!FE\]Y]fZ-3/u
%e<7uXcimRTZPNba_-QR4)_NU&pddpeehnT]G.4eF\(4N#&(r&,TdmM.H*\o=I;IeO#FSSd>O+q1^7O[)mMWn7AqMCVbhfq>[f>LH
%qOrS4fNU-81F[A;eBe-MA%cu#%G2FC_%jI;Ikpma<82tq0F&*Dm9>(qlen5#'YqJ\.62^uQ,pn2W_!gY[OuckdD0u%][9U'5:kXM
%<0Y9?pq7dkN9Y8O\Qd%rE+!a';"nCp*he8&DN8`kJGJ9d].Kb$l+TX#(TY0'0DG9g\kb-$eAt5bIX-a6?Wu0]\j.Yb-Y.TL(2HYl
%,aUo><c#[5L""V:-KhVF4tPt]n6"qk4hes7.J65i0#49"G2Ti5BQ"D@Y%akrRj@42Ej^:!Bh#[g];(<t9>"(fSi-;PHS`6FDRY:G
%8V&&X?pf[I>(TqF00ai@i.MYm!&Z`LNM>kjd3fOEJCbMsr/9R>,@Cm7H;qZoTV+'VUl$4&Rjo4b"+YS>(Qk[8kJpXmBDGk!>Mn@A
%LS'?Kl?])+BDYY0J(#CU89feXm&;KCqc#Z"A`HIo`BtIWTXSfF3sm4'_lP)f-t9H_]TOIY7cAok?WImkBNCr@A7K5bJf5bZP<4P0
%Z_r*nBdY$"W+sG^cV5.P6^/A<^RA))N+UhGoeNu7^YPC.73>R/dqc'"d%ZX7'4+Ze'Cq7K0+lT5\Nj]_>Fmj@2lVfl&H4'm`TbBT
%-6!rX9nE)CQ/;(jo*=$M:4R)2'J?iH0t6`4:!oH9"eYkT.Ygp+IJ&:H?VbjE[JEn>We)Bs4ih\eD.0&QA!q_7n6>#52)`M_k/L$2
%'2)hFEiTR%.I@J&3#3Ci'RfRno0U.8'3SK[[Nfbrq8QT\AX5`EHH+lCCo+YZ$e0qiMFm6J_MiB;AZT;jB#j,mmS2s"^67C%&0<'s
%#S\^W_q8](!MD<mi?HiBQ]ZG'B$iS@O8u[<@2D>fq&SAYTW:oij;&"cd2;t&Ehf+6=Hn3s5`!k_"sK1inDW2i=lI;NBc!#s[T_nV
%/%rZgmaXq6$R&[pkSLtA]MGuL9MEb$8p]P=Th4[Td/tt?9+hM_V%Ku]9:QAQC)ZYh1\6BD)AOriW_/5d>:cE_M+1CJ`0uE1n&`o=
%b"GD(jkc.FPgr%e/um.2%;(5YS+6'R'ir#9cdaO](f(e8Atc(93g$HA'C^AoN/4M!.CtECHboMQpRGJ,AuCH`7ZB$$)(>XUU#^)l
%Gr/8jXH7+$Q6QAL:`rNPJH$WrZeIE3*-/p;RjI98;qsN[^!##k?!:C]0Gf?#)E]F:H"gi^CepIHS:S-6d=G'`ii?>RNWeNtPFi-P
%_+Hepdka6*9[%epgD9TU\m]V(Vr#q1asN"R-OQNj8\`j;Wa`o=!#+o\TMGLFeOn"hS!YMigr-MGm*\L;_5>:MhsO5(Dg#0oPI2Yo
%H7q[J@"C]#_#gC/q:h-$g`j?nM!["`.c_-s+'><laCs1AIDAVeg`n$^ULl?o)kB05>-PEq;dr5=?1O0,*0@iE0;_"]46UZV?>Q=Z
%lQ*^2ld49R[GD%(ZH'JgY:o4V\ZpT7*bUA-_?-J#.p[6oVJ0.7YGX3_4_-!USugc!BWb]EM,(^\C%tsd&!B@pFMKO\"&27f>jt(X
%kj7kM=]p=OoHRqj<`kHAh0:6RN-T<9J%IY9CH#:4R[K+%g_d<@&r=\</AHB*2B\5H<ok7IS6($MjnODC"7B;GbTYb?CP!!M`-h%n
%]\!gjR]8@N7H#[)Y3RMe5OQ4@n4JFM<iX!Rd-#hja4HM<,04CLO$kep+kP8@AUUl=b%0Oc#$AG]a6XE@[)-%dR9hg`ZW`1dWd_Lq
%/r*5Coa@F(VJ`b-DU*&Q,,Hbu6@gI]k`n''.<dmKU#"hk3oE?8;4"h.KcAcH28cN)Qu;WIm?B6k.Fje"p1P?J&26!2?R1BbW"fD)
%cMZA_$LK(:mF]'l(9(Kj4OuqgUS:s94\7jMj.o2<g$MW\D6+O=I%p:&Nbr<\`k/F_,f^ZU5&-UBbcRB#9AR=RmhU/cVE&/hn9L+\
%F`i\9D3Ls'S@H(n:"Dq+d]3"P+uHraFMk67gJKcqRS'e(7@a,-d2L7I(_-Hn3mf`;Cd\`.(IQ]jC&Y,=k]3kT;uV#]p"mCYVDE).
%$QBlH:$>?MJ`4B"S($9]Z?FQt>-.3N"\Thq"<b0u913WIQmX[l%'>:QBNB1aZj9Q_(Bpe)gDTE$M[e5!,gJEs=]],8jr^Z6KH5"Z
%e:]sa=['JIWZ.J%,)pRfjQ:'c0J<+pHEp%6:t/u,>(Y:7[aru_rASrO%gD#.FpYu))Kq!JQOK1tYK0`7.W:Ui+=kNA6_`IF>3*SQ
%L#,O<bHpa@l^eJ-HcA[mE.OGN_9,I)=n8WIcI+Z8P+8W)/<e!:bn?-Wa/O]@]/QLCQ<$Z#aDN42)pQ@r,M%+%^^h>N;H#j+(g3ML
%*$q\0'?_=4OglkZF9&T?Rc3bt)?Xp6R(K8r(Y`1L6=5>?7jJ]*Q&i+@5Mlok=*>0RkSao5YOq[;[T@O\')QntT^o&)lf&79S(VAY
%Ei*ll71TO3Jln5o)Ddl75ZnpTOO)@$-$e"bKYgQs1MSC_.8?VjlFApLAK*(3+Pdnm<(hXr#*G/[fMK>;Ut%\7dj$5IFqDnq*9#8N
%NT@#,fTn%Dq[$P,&$>irj]FuqX<NQfWl.JU;ko,HX4@k*2Gl1HKHj<=!YjGT>_-.=YjJMHTb5E7:kL5@JoUDEbG\]!&,:JiU:Y]R
%Yh%>W?VbjEnOM'^jT;In8M[liXA>]'ShA<`a/pKMHGtc4WaeMe2Nnk;j;e=6M[R.pc,kNKnTl$SKlGn**qg*%7%.A<"JoboN(h!V
%"P85CbO%-!F3%SWbt"sSB[&G6EWQRgqqK0Ur69CWksp#%0/r-,0?<uG=]Z3]JXcG%]SG2m5enQ_+r<B;I>k<A,XtU$(0XTi*K-+W
%o*r-s^:+,>gGfP%$V1'gl:Vm+CFZ61bYqiF]C%2?^7O`A@&lj>&E[KNR_H)?s5qo/Z(RWV^+[R/QJ3UL(c+3n7^-18daVb%b8)d,
%SeU%nh\=U5B'XZ,W[e%MDE!*(H7_uBN+k/DT9CG&g'L7+]C'LI1F!!gC2RgL?75;0@sO2srpAR,Y%BU=KhjmG.n=/>cA?4Cf:t50
%/#$"hi+mIMopgst&#r]3q:;(AW*.-'\MKn6BrrATp!^GNW[M]rM<D*0?msEjnYL,1cZ`U0L1&ksRHENZ/?Z)DPMKLlQ,*eY;%gS%
%_RXf#&7>^]h$u,Rl/M2S1\@KW7+]AYd\U(YJ8QAX5ju=`YuZQUol'KdQc-Or%""MY$jC_(:#21ahNRP+3D:<70ZX3:Dc34rYW_&I
%7gXh1,e0;@DG"2B[I@qb:Meb'YXuE7^4gr^pnc0uChu`0EGBQ-^ARif0CS&<qsI6Prge1V!nfaDI@;>lHPN0FmXs<Zlm>GT1DcBl
%B>\P2NU!T+:eue9XLQVL;rkeN3)rZs="\=`ACsA)'?;mJTeHF3AAl!;b(SP=C7B$4Ff..EdD+M,dRCp@VKaM+3`2J?8#8V[!=9dV
%WiUMF"=Z)Bc9b.0+>WYb<<r4&8iH3O"TU"&UErA=T\Sg$&Oe:79+o666!1ODI'GpQK)`/$(Ug$_kcZX^pj055]pQBCo-_^MI`r7@
%D,m4Q-)\%g@SaC,!R.mRntb+_'qlSn#f07P%#>nuF6nKKXA2[l5g-]NZ.b+@F^GR#"ENjk&Ze$mf4nN)Q1I_go!tU.nU86,Wh^l,
%9QD5++Pntp;sEf/m`ju?p.3FtB[OD4fTQ$a:bi6Z*eS`0g?cd$BW6Q*Gmc?&\>9oI,_D@*Bs*K9X0iqd.\jVd[qo9&@8s<]UOs'q
%]#j??V219;9E?F$+ILM\!W,3eY@i44@PTr-F`T")bX4;?[FK\W)sX2SHqs4==I^QY[,B>*<Y[j7G5Ha;fE3X]B<qg(.lJg"g:%iQ
%@`pVM+%q6#@/d"QT`$m:YrBrpF>SG<QJ;25=,1VNM]C@:Yr21HWT+E%!<0E:)D\ME($rF"D1d:QeY,E9kD88=(8l"d:\^)gm5q>f
%pR=WPjt5I5=pl2U$>].`5ZlTF!L<>Ba@`,#T3p<[lj4n<,>mBBT@0fnI>?P733YTJp!aoVqU0A<5:<W,1:/A>nok/I/RID'qC`=Z
%G[0&\#r7?TRoL$2CFbBYPc9j^8K$n(%tb;Pg>[_IFQ\$F_+`kf;nJ>Vf"o#Q'[upJ-&%gQFL[Hhm)HFS>@ZioDJ&Zb=Kqb0^qqh>
%$*=$`QDlZhEH+.Em?q?f0Ljg-:02?ORD@1(=U&h",.o]7`tk!]X&[n;(9EI/pSHF"HjHcErYX&$M]XDaa4^.+(<<Xt2c"QOQ`^kd
%VY3s/C2TB[**^WK.@k$h*f4=e(*CNNnK4%Fj6E6*,Eb0''@^;$jU8o(OnUW@$A+>59'"s%W:h0mn+0"Bqi,DDn7%:4Y4QrPdP[]R
%@uCJIT/t9a)<>m>ErMBR0?>Tc-ieRYk:2el7Wff?le-R*-^4?u%Xi,4q5L&/+1&iZh3Yc?qr;JK2OG8i5,2QH6Z:]LQi"Z\W:ed]
%\:<a&]q;q7gBZ_i:W,-[kFf=3nfa9gBQM%<s/!^-\@O&XDo!Y9)hD\YE8I*M1m[>J$H5;>>q9._U(*&e/>mOjd?'cd[Ko89hT"h#
%2?M:I4G)],hF_3h8HR1Gg3IT(#t2+$8M("kcmM+:SNug,_b3B:hgV"Ze/Yt@&FIc"1o:qB&eRda)D&Ma2hC0rp+s3ZOgf?4?GcS6
%A'Bq:09ZO2b3s1mdrj9Z__5!?"n=;tB%VNGCXE'Z(jK7V9R0duWEuj@]$hF<[mmbH>9dLI3_o1UkX#ardj'mmBN8RRfi"Q%:>'74
%1HC@Afm,"K)/.D]H7J+b=MYM/>sBF]Io.IgV9J#:J:p<T:)uQ/`O9FA+daI'C7-m&H=TJCjbL0@\tj6,@Z4hoe?H#/bRWg">N]rD
%d<WQ!J<6<*XRc99fNV4u:OgX4AR_+p0%81:_b\b!"M],K#)+-,R&C`lYusOOOeSnuf-5%H3$3Q!P\JK6+e5ia`Ngt)dTJd=j;QlT
%"L>H=OiNuh(J"C1Phka6(\FgkPaNc6.DEQ'l-2Qt(7f.L`CHJ`_Gk<Db%h'gShX:#At^3&'^V3#fi`)+2V0]<*E+3K:MZa77sYSN
%;oi>%:3L;:TjT'R18i[iln0fk&TmS+;t1O%(^.N^6gZKG6R:1V,3;uNZQ5+YW7<_\0SQZd5,,=#6ua:/YNXZiD*[pqe)YQ$k4M\?
%If,2NkRN4hZf1UX8$XNa+/l7Qd"@ch(+&/"1N%+k=(2[#C_eUhkBWkA@`p:Z.ij=8].FZ3CnpMU<?&Tr]E?#+$e<V/e./A?N9T[a
%Q+FkAK'27O<jE@F&Z&&Ooi<loqOjLS.[gDkX!To0eB&EepP+nJieetSfFf$I8qgYZU9UcKV^OSTF0hm1i8f[(D_I(CM$3YRih+%u
%M+gQ5Yc?QnOfC](i@7lDU%e@.\$D/DBaZJp^V!rn0W&T1EQDC^2!O7C\YuT;`t,`U')h7#HqGDoqU5qXb)+D!jr/=_aYsF[q(6^7
%\XQ9(5KrSj1afM:"rbK%)-0^&&%OQ-dma`5%:&*3)gQ6LEj(4eOEj5`'UD[)Nb"qb>%o!,%eFaSGUVMDHO)q$Q"`CNjF@*$cD]NL
%<H=qV^<hiq_1$DL.a_odA)s^<&OU"671=;Za=ETQF`2nN+Fp8jXgVaN8&-^^>].[P"l9r-AWB4uU63`_)Rc]AHVIk<_gH?C&=g$9
%;gFBZ]R#f\&eSaK[B8*bfe7_GJLS_1$Qq"!RDIu?EY$0)``%;?Ar98rU`Pfgg/KdB'/!)3%_(]jRbgg-Jh0u6HcRhL1p:QH"[E"*
%c9Ru2Foka<,G&EQ@]\WCfn++;Il:ON2c2`T[Q.(goqU]Th'di!Peg@<R.$X?&6RqUla4^tL`Ws9Zq`@Elt13/8:ktuj/c48S.iIV
%"lmK/05lS#ltWYD;s0_DhQhQsAVnq++kiP#qi'$u2+6=)9f+QY5p7,fNlYC'AOeS<^bgqf]q*Gi76g2i\2:DPgB>"#e-R^?0ZQ4!
%8b)c3('g+_jePqI3\/pP@r$(dUs=".9MNXHVcJ_!\DlFXkK,`3Wqnn_4_fn1(k#fX0d$;hdU@aZK.f$`BN@d/(XN[/79LKk"m6Hc
%aHD8_`<76\/\=hf%'21bAaJ4C&(98u+4V$]li"dc;gB.(74'->]\bQcb-L6N5dNc\BW@k,SnlNlW2/+V*[CX6mRsTL462=#&Jt>R
%_l&`WlHl<7\?=`SnYnD<oqg[WInF%JdP5&@fKEqjO:-kC=kC^3BR'RKnljB/)+'FPe/h\j,g79q:Y$3*7-KS+Vhm]`eQ>jb@rWQ3
%5c<#sVo]uOWD$IDS2YLmD]-?91+(G,_mqfV7\\/l</*9S?0\>oY?N,I",+=W'B;6rq-=P5]jmPnV($DsECM<+8rngbbBBXHBcc3@
%/4^p%@dV(=(bW9T[qokuE"L_4hI^W\dBT``Y0)$+Mj%$*q&hu;1uN#0l$L1\)<f=:mBT4-/r%hb?aEL@9_+jC?ntcha)%g6r7M?q
%b]RR5;/@d%[d8j`V7'*+$2W'J!SC>P."dckcG\Qh>rdf/l>E%c(JO:g+P+Y)i;*/g).&PAj@!o:R_CE',oAh5Ht8V^6tEl/&!"tL
%\ZKuakELc5;^VLm14B$-S11@V$jLiBd3$eOF>mR3:r=d=+R^l._*%PqZ=[9N.W=#XM$hh&=$fCi2D#.?I"S"_<!gR2+s.bp0i's:
%/??^k`4BE>K[3']NjY+R\3I*8kf4QIFp8l`4FKocCAjSW&D?X:%?/EBJW8O%A?Hm%]l\*&)Z/n1]]9L6rLlt+kWLj0mhq%*\Ms7+
%GgZ;dimTTkT%u96EL55W)hY&:c9QWs6'mDYjD'SlGKT]\0.+Rm<@Q50F;ZfDkmX*3DGjo#'6;Zj;T+KjF^?4ViT6UC*!^dS`LlZ)
%[cL_n?Zu]TKA7mb4?M[6XPKFu`?p^Z@u97pB6V11BAh\I?tTmA_kP<i$ZlKWGuFWN%imd[7jhSX$C3KMKploI<R4lEWA4P9a)GR+
%MB)J&F#<`O*e^!;C7=pq/WEtCA1HaLnES`PFQXn-ULn777WH-.35LMWTqj\r%0:?S:9q^d2C:tJ^rO[@b/raUR,98H&kG\;5b6p(
%3(.ls!RnBi:c0;h]VMgf3DAgeN*^RB^s=@Y]>["RQK1g'Y[G,=@s<T7\h@J_U#Mkr6-)6J^C8G@2PQuK/9+jsp<V-1ZKWFDOZ`*Y
%j/C4&QUqE@fQ\;#8aAfcpVE$6Sug1]BVm`c0X[s:H*["?7sM@]FDl@"i6?.u_+q/CqEKIVZ`fnY++C1Fgr+i-E`F=?D]1M"D@mN$
%9OaekL!4XRD=K_gkK;gpA]'koVfjZG,@=]8V(`b$5.+9i=-*4ef/9ca&_735:Yj=d.iuR5S?D\!904+ug9GWQF?A`SIVfn[@<GAE
%*,YNm%8;e+f)SiT*u0JbBT<S_&6<XmpC(%%EYN/u_c3maWeQTRokt's6iMe?hpo(5&tS"H'jmPGdn/$V)0T+F7k9V`^.X2c!`DcX
%:@[V3?(.0jb!u":R8kAH[`g5J+>U:GdSj^=GCh'8ei`3e0r5'*7f,RtrI`WbiD6F_R&m1M"^S`0`RMAKQt.d:c>$bK8R%+NFB]l8
%4bd3\8j5JICXF2KR]aZSPj\4@@f"BQ6Z$guMN;O9[`7`B3mR6XC:]@7n4F!r4;;nhicE4u@sXO'rqC3>l7)FWmVq=R=an,">\ZUK
%DUCnI*%i-?D=MDSo:T?LXcUm*e8![B5^&.*f%>DN(omG88,^>RLH_s8fGa\ae8^L5LRKsWAXRCX0=,HiB\7(:bqCZTa4:,.W9F6W
%E"EDrk^WI/Ob(gK<E@,Ph_`J1-?><WTTt'I%EU"e6erY'Db3^P3o^,fe00(>[XDlAU)igDe^u*R>bC:H38/ST%=d%rf<Eh)CZt]E
%m0kW_g8Mhbc-B-++\.kBYa8,+:mp5iT8Jl"VUsJ]3`'0Ld>gRo$Cca%$`8\=0MW,DWC6WfY+H`P#lk]6]2RV&]/:4n%US%g.iXAp
%U(e8pR\Rpm)!Z`Y0nS7IY)%fpS;'hE\'a2<ITh-b&o-oY!Pq#!*NKi$<OUu.4M48;Rga<GqCO#qOZJiIS5b,pq(TGHoe^M459d+)
%:kVuWKi-"\59LFID&3O@cjltNV_>jE/qsZu&n_YS:i:c]#<HVQ>#LYuf$.Wl%hdeNj*`CK^AA:c.adL-)RPI^e1leTq^d_Fq"IB/
%;SgF'Idbg49Y>7$J]>MNg)W-idLoH$dQOChLkRr!SR]?1+%bP3?;^D1S[4P(DR:**T.D$q:N80)F%/J<VA#t",S:+V0YoCWgic:W
%2fD*WEE7VT>R+@I#/UgYCBjOJe_-&GMA*J[VWjn]oq>6N"P-VE</XGtD4s'AF6V+\T1Xd_q2Ra<<g^Lr9T,.g5'L]XBW/qbaNS<4
%j%-UKNV$)&HE&4kdV'W=\.MfrC2D7[!g0Q/!=koFQ.q2aBTL8P`tN/$qiprQ[0>c0IrTZI^CC%DJ[O1ARfM7@EJe+eg.M&d#-tAV
%'hR@iUC!]PmO8pIS7TM]i%9k\Agb'()e1t"Z=S#(VE"4B8e/F=2FcX1M!_%dr\rps/P:Pt`&:%jqT@JA%I8BE6G/2mTRX%#*djVd
%@;*8edXG*ggNj/*<eJ8,7lhVfFsQ.c6k:UCU@-B*`\%^OjI8cQ6\0*<3_.]j@#2&7cW-9rhp1VhC7BfA(2?;I=U//DLtBqUBR(K2
%D4N7S"1fGVLi.p27&g`i$F#2>M1SDaI7KpWU)nhSd]lPC85TMRJ$^KqqUD*0e3Eq7-fhuO:MOrp)h]\0(ZCrZo\?-EQ/<TKgu=?K
%R[S&+bWN+_\>5f'>$AlZfg;bCO!18M40>SmJKt@,qquUIZr:e86L]0k$rd!Mks(E@9W-o)F]La,@=m)Gk@IdHitB;^lH,%(3<[OS
%K*t-I#AF%7g2/IS[^bgZZ.L>%p1>r42F)Nfi>2qRfg/I;f6#qKH^*63A\:ebd<C%i:F-pl+s&?=,Q#)1C@FIl;n]mO[Js22.P8;e
%naH;Z8cu%aCQ>F+&eb-NZSpNu`=Y5u>VDD_F?HBT6V@q5m<8c-PMA"f!qiq<GuB-F:+&l4/Xu%C">@A:@-IWTnm%(<cGNWE)5oS@
%V-M8QYEr>Pl'L"mpT+:m!9]>t>YVDGCL$+oMHQWcm@92(Mt#3pXK?4!j]i'4"P/)kWZ/O:5)'hA>;1P^q_Gr_Oq/HeP][>)iRK6n
%W-*#J=I2:URH`5BR+%`u*r8f6O$CkY$T^j`f3J2%SHKE@eObl&7&@g=VF;p?\d*5o2$a'tB+sQZ.j[FT[8+:'8.l6LpA;*he(I^)
%*Bg3@*mUa0nn'8JPFgD02cu+iV:b37],'e\&-':Q4/[#/:K?G?h)_nIhf%>]Ad<a0*&p0(1V;tn2la\YHC>F;hd!a5BahmEV52;:
%"7C@DU(kjb407+[+F_drEBTkWY(cgR5,5ptR=78t@dG#6!Z/WfYLB7`K8*L^J0(],f&3b9I&M=iMgr_cZnjZ<]Q,7L9C"+Ac[>)[
%GJ=Q0,N<4F;;7FTkOoDj6>CQ2e3HRc/H.;LDiuA)Ou//)-("WY.6\9sbWG;cX_Z0mhuB+5WB#LM+:0=RX,:f#7Cl':"7RJXh/--Q
%c(Wp$Ij-$``)FdZGiSn4le>./g2#'`@\Li9#-,K,lE,N',?]T<Va&ZM]c$,tX/.gGfY4Uh^Kr![YM#U2pS/`5`Q*-([kHQ4n"5fj
%g@l4p?L?Q"F>SImoVW>u+1*FZ%X_O3_f8up#\QMG"Z"OW<!Rh[bBkb*R;okio#\M_.dBu?n1ZsC&B)S^B%QfUON@87+#>PR\<+"A
%9k.m,,Hj;2Y8da"ncgWVF$[;X],E,1)fZZ$H+u;7+)k*5iVYmU?TkG<H4@-`>Q/@lOMN-!OJ_%0U2%!W7mSsZZ5SL"Q]3X)GdSZg
%)KHoIK[O1:O)j#j+jKPrf30N6lseAa,q4h!P4.mTLMu?:eEDf:5Jt5bg=$!YH1ej.rAQ1(^+1'KFD']peFTW7[A2F]LBn=Z]V`6p
%Ots>ZQYg,dJBH-VmtP4WlaAM^WuO2np4..2C*<%"5%]%Nbm4r)o,&ZN"Y4cd*S'_b+AYn.</e7A!iUKfjpP^M>fZknDc.DIh1kfr
%JKq!@WW)hK#fu([R/j<.5b`"l;=/uO,1J(f@_=2>2Y'^BDBMFSb%[!B$C"#\<<eTX0Zleg'k'O_86YB"0+&\GI.+HW&3A#)JpYEI
%H#,uVmI0FAIi:pp)P`:LEqQ+(FCdV-NR:ISie06fnMjU7OP[oU?.f$.%uTpnRG-*600$"&#s6,93Xm8Aok$[pJfuO$F\U\8'/7:+
%Tro5sl;29L\V&sVqT<?4mcdQFbTm))Z_%r!(#"Lk%s@[9pZ?R/2edZe@Q#sh+5VfrDR`AZP_';KR2PfhrZ[M%b5uCud98gsLmZ]-
%aZiCPkea0/-\l.Q@n@BK_UtkEE"'e1l_o.$pQ$sC&6+O)+BQ`?U2P&u?LI@NA<0rZ!l:nd*jr&OXm8pQ.i46[:<o-`<a2MO:!Mlc
%pqjD9?r87]!*FjgON@u)\bNT?bt+kHf"T&sYe6.u-$O7,ii5Q@FI1Ms(h#hcn12X\\m=5ce2\oVD%&iZ\!&N>pNmRbG"%Zu'];kV
%a84Opi]Ji/,r)>O4fP&SjK4>4"D@Vc;b8Mj3>Gj89$$4:`AF&67BJ(`G>8.$Stp*)n?D>]"tXCl8A2id/D]*.=7JrFp5f;FNK,t-
%r+GkS45[7@OE=r"4S0JVheR$*<;Xibjb+.P-*h@]eul<!!!?8]Q0qc[d(d(j8om'A8*2O\[(AfAhWs0Y`+'0T"5AY\/CJ>Ib;$95
%=oc+W;@jm?q5'EY1k\K'XHW^4*ore!lqQP)BM_]h%AmCKbiBi?`DtQ+m9aIl]D,BJI+d"'dV`BU;]jXHi9ZOu,j4<EcK,Pnc?6'H
%6!%,o[#!^omZ:)"qG\[,U2f0";'kBB-9uttBu(3u=VE'ES`k*e%hirYdWB(2R$SOV"P^E"hWs*WJ898P5[$Aui,TTFQ+,FggS;b,
%;>`'?EMDK::uGsP'QA"Tb<?Yddoqn-nO8RZpc(Z;RUXbcB$fG-lLF7PO)!*#4XcI:0)bJfm_Ws1`06t"c;@UHnEeC&RQg:C>`Z-@
%Kd<ijZa2a;$Tc=S$"g\+.)bW#0WYTW-WrAha"6LKk&L?I%J7>"#NOB;S#QHG?'QUD>sTYQF*QdA]FFl=hMcofVu"HW0=P<hpCU8,
%icR4%">4\)!JrS8q%n(.MtM`OSu"'tmK?5'X+GH8mamOjL"e$bBI6gn<_PBOJAnZ@>uhHZB<P2)'1L7Dn>7&Za\pu*K*sc.MY)`H
%hbNkN:I%kE03O1uK/V9!Fo=8.eT^-8`3p!]gSU'6phn2lcKYrK<e.)"8IeF?\ji1Of.n`]Qk=2rm;$(toPdM^$IQ/,jbMG$Xt]CB
%11`uJn:7-Z8@L`,E@V:+3'a^)?1eR!)[n%&XHSN9e/C=^)rJpJS?!,MYfq4^oM/As^tX;/iiA$_o_5%3,T6]Ukj[tELR.t?Fg?%?
%"'O\N&q4OlTBb.'A=O5"<EA!h-uN6>*M4We1']02->ReeNfQs0d?(!SYDo&T_IQ3/&^EjlYmN7OH#;WI%.fTElZoBk\On_B>7QaF
%joJf!2:8c7#P6Bk^YbO/2="FFJSF$l5Usa6h[KfU@H?q,7fX^JS'jZ`^k7[&:U>p-WX!c8D(Ieo82,a`"!pR`,<;cn*=0ePTJ;^j
%6Q(CT6d4GHPQ1?q=8B#?@K9_shV^D76XB-Mm9G_INEXpP$TTWYI$D8.b*kNEG&k,Q'2n?CKbC6/QHk%!dI[GU%oR^u:e?R>,6GS2
%IBP4kF$loaJdXc-BH!4`/cT9$kg7Oc3$BgVXb>!:(DJ*52i2h%Ct)53P[f-@j$^Ai/+#CkpNmRbkc<,O'#V^hQ+J!TKBCP^>Q?dV
%GUgJ8+sq8G:=5Jk&/_8K%!Br/kGWnC(?mD:[DqIAkLGG]bl''TE=E$LU/7pFqnoIW$nHRiF/#=j?E2?Dq0'2BGdfL;,0`B'l\B_`
%Y,puRm4"6Z'74Ht9XL7G3@Za/07,::X"%?'mIFY)Ps!l4Km[S%WarP4"n,aGh^)mcPEe1W;luF"p5^d4`X1IUI][`;N>?ADca'R#
%Vep:q:0GJa^Gi'+gIcq=dF8>9:/FeXlqc-D,:Xg&gr5BSP%0_4<TFhoI7AGT.U!Jo@/7.'1e=EK9F%tdEt)FJe8C3d\g#Na@^!2T
%@1Qn:?K@"2joMu;<>8aqntHNrC"=%`r'[/qVu+scCJ8A-'YX!%Y2=#1qdb&s7-);C;K+N)4o0<_aBu8..6AHg=1*CqPVZJu/"7i5
%nYC]4fHX3:.MY++Pl/Lu#/:=9h*17LRR9L+/,dVS]2T(G21L!-O)Y6V=#]#o[e(=55Kr<UD'e1OiC\/*,m$tK8L)YaB%<m$(\n<a
%>=,#"/qsDH8>'>k7SrO$J;?GnOH1Fb!C]R<D`RJA<XIp.#`]g#`J,?r879#SnJ)?b%='>l',5LVRMYC4O)O3-[*#=\rdruKkCgIQ
%W)'jk9JT@2;FG7?)5R's[9t9p(Ir!/UNgZYZ'`4,`2mXtSkmhrLFn?%7D3odL?9)IgjQi7H=jE$bp7SK<n;O3hb\:4d);B,^^F[u
%7;i!9XS1:9s*eTM5M/d%:*,QhO<L<@_^.rf6!JK"H3LocS&Ud'T9V]MD"SQ2DYR95^?',/B(Zca\XS@T8nh1p4"ojOI[,hhj'mM'
%"&MY_n%@=7K$R"&_+<A5^H^K9gY"dPL*Kbc6jh[9gi->]p>=Y+h\VA1APPC878mGt$Ea0\a`$$,]gerd]#Mn+bt4$sakJi;JqZ#R
%R)I=f>H2c`A2Q'15W0c#:+6+SVA@\K0P/\J@a3C1Q!"BaBX?-%DC9PnT'@mF_I#^,&SJ*%_HLgl&5B%dT/]^,\sEegDXAKt3LOC*
%UBD/>3J-0\"1<usr^3k^):hne;#NDg]MA.A6`%MBmkkTP-\:Fs[sauPqeCn)k;q+"Lj'Oknq4*D$g[V!2jDG&$%6_OVU.NX^NS%]
%[Eor1;P0rD6"l\:9:T0j[mO\>7if'bBefEe]aW+^97[?i]d,+DC9,\f)8b0%MplVR#;U>h"58!g-QR+`e*WYXDC3Wa_3mlVn77DJ
%0`VSp?<t"Ha8t'pEit52<eo?6+Ks524oi4e'up4q(in"40JtMQag[^dfMQ%Q#Aqn)J]kZ-]"j([@fn@(MgX/r`ZX<6lLO=aQguKH
%EKTc**jVt%0C?+5//=6[G>rPeRfXaX13Fq.;GW7"NoVt?'#0N!3&o*IVC('72HHGRYWG,";!@aKeTY'Y$p2^+8%hg7/N&U'^XNP#
%,[.r+1+4i.Nm!Q"`lr9=rqjAhrEs9GHS/742k\_`&e_'Z@2(`HOms@sBI4WM@Q:?tO.nI=n@W4Q5j.cC;'S/&B8B^hQNQI'P@ok*
%In;K/"sr38>C''Dpo;>ri/ipA")T3mO5bJXDeJssSWt+WGE>/dOI^N2C&cG;oj.AQ"Zo%H?NY,(_iAtM\d,$Wo)$P/"-DC"BMSW,
%GDULI&0l$`F=6:l6A[dFISt+X488)T+^R%*BBiRp18Z;CFF,Km<A[:k[8`M'Vk\aV2l2FE<D,miDBhuCe29)mk?t;=!-6&]l2P^)
%p,O7AA_"%Uf[h>7XWn2qRTUNJ$6qV&U]j=mD0A[A?.FLI,uTaC:[R6"].M_4"8>$sKVE&NM-f)bpSrMPoEAf*0g+[V]!T2tAmCak
%S>i0BPr4uVHsJ$,oMNu??&d?:6]$=/e$9/;*ef%e5EUhHpRT327m/X5l[nEmYBMss/.l(mf@=Z!,+XFtqnBXVk>6*b/JJZLEGq4"
%(;8iJ_gfE[Ve[cUPtrE9^g<'j?ud^s-V!NU@ptp!pf%A#\=s'roDgcU>0NrBU?[=a'IQNVd5La1qKn=J@BO\0%t&VGe7ts`;>D)E
%>$'>;:>\fjWbL-pR]Qa2jN$VhCMWfX3oT<)]@c@iWrO,EdGXAA_ML&(h:b21\UgULXd3D+i`u.Q<>*N,`GR<)hfG(0J6a(.;Y'hQ
%Le.7#)_5dWjeNs?%Gtc/bsN=r)uTTH)?!rQV=_HsX..nLA*TG[gE"rWjX)8aV)/W\33ZU6*'Wq[g2"RQ>c4+-<Wt0-MkhOh1efFc
%5\rcQRMZoL10d*ehe`B>Ts15C4Kcb:gfpE7p?ct2RP8Ze\T4murfDH<b7"5dDQiNPaU*HDX$f<m&5,(>=kUKh\<B"/I_a&L"k=4o
%74rbMm66D52Q\f/99kLUHjf$0Z/f=o)I9@`g=>;q(!n8kE$(Js;[W5ppLRe:Gp.U\j^#q%hsX;)CAq*d`9)^Cnp8eljD`A`HZdgJ
%<DBNNMAku%&-a^c[ANh#K5&3$6OXaOlGtH+j1Go`d,V#&n7G"h*Prd?J&@9Yo4WNGcaT*dC??F5DfU>0e_S3@IBq&^UgBFN']s?U
%nY8;nd(s%cMgh,=EFmK5OZlje$;h]m-_bo^6rPbAQP.8H0F\@eV7daf>;^G53\sD$c";46fuTi1Rc:9UDf+_,GGb!'?)=bI^.Jti
%D5.FHStK'Ea<r%DbU^+n3.?e>%@rpD5GQ?81h(ZRGQp,oS'K]YAerg_&&8)$_d%_8q!P>CrS<``!m*V62'!"/W-n:1+_[UDb"W?s
%L2c:S*kR-C6RGa#U(oB.<D4QW+rCc7lp1BC.>3;0Q07F`V*t'.'6SHud*mb(_?$88ogUhf!duieO$eE32kQ"g\_)n$8dqWVJFfSU
%lk]0-.30,,7Pr+k$dr<_R&tTPWWoj[k5Gb:2W2)5[RZ#hK&n-EHo:LgUI`P\$TR?I^b&XNa#@@(XN$qQ@gQB=cmQDP44tqHpn3Yt
%`2\^8>S1%=p=Xh7.O$86<@g7kbB*a7*NhBXc-[am$d:ta0IdN$Nju:T,[NoX()mYdJfkCNE5bs\5n^uqkt1Egn8IFBI9QlPU=4+4
%35!/#d:8O_diHSgB\cGI,'le612SFuO[&a:VeY=6lHc2N$8OGr+Ysb;4[p7iYIN5,A7*jcN_#]O<ZWurenU%-5.W`a?t=cr:c:h,
%9jm_^n\pZjG`'IPbAMXXjo4,^ok13pHJbVpc[,Z=e[7hoK"L9BD#Bf?Bb;g`ia1.E<'Y>o[#>u?bZ9I-W55$U4#8C"G,jc9+G41S
%"<r=$bVWo2'lRJeI*:9'_de)uFg)?iP)1'P/Hj&ZZu+AmCEcN!F.Co2d+QjjB@,=DBmXs15s'H@VmXNXIW'>:FAB)m.GL8:.lXMU
%\5oBUPZh,[0O\e*)_tdeZ"u!+R64,*5$"f`@!ueAU-8(deYimLLJQ#8=-#LZ$R&X(_"cQ"nGLf'*'YUDolFRL'&$&R*EG9`GIEOo
%pD25(<_Q*48PJks2iVj;EGZrLq%j$Sc7IIJ`1<!uk%'>J=>)ZT5IF\%7m@X";0)sQTB`c,@uo?\(Y?ItfP^3VeEn7U5r!4f0;dD=
%NcaPIRQk8-NgFXF9LI4(^>1W#;'ul"RY5'%\)2Y=<\hTf9N1.ts&e),]_JI3MtZATYW!p/2:na.n\"0b>Q4>K5GmINC[h8Om2Z/:
%90\`P(Xmi>E!t"XpD)/@Q[T-$HFXX:>pEoR90/,3\uMSb.7J\:o:OTDAM>ie$2ePkUib4u6u.3cM;RT<PL=;QHtkT^Id)$1s.#1f
%6+#*7a',tE7n>9?Bc;tWgrq8jDefbLG#MjQ<N!-6d'YUoC7rL=bB(p4db](5b4B,PQFZ$8R^A<r+I@e1W-hILO'QsG@=K9HmP,3!
%qpKJ1s4D0Q^^mkFBFXdIBKDU>>=)-Bp;t]Ip7.Z]D/+'6Nl\L.EcrdV=uF(6fr<Z?9Ik82c5o*IgCeM#&d2G6YqGaf>+G/8Pb!4J
%O8:d[Y)D_UhC(H!0GU!ojcl;DnnCsE*p7`=6soq3.6HMQT2+MFLU-O5A/lnJk0SSNK&GCmS&QEb\1<1aUL\A/Cb0.uKu[])jF6)u
%&2=tFchLj!g7r$RhH49sZCCM9rB1ZSC5X185-X_4)E^6,43&j\X'SBglDZ_S</V<?;2cljaPY3Qb.aI)c&/NT<V%P#DT"')(;ciJ
%WKd0;hLM5Xl)=gXm`M+]@M:CmP\'XslhE0&DlPC[lRV-%kqh@A@")aG9ci!-=_T8D.#]:MCu=Zs\mF-cD/%;dfeWq9<iJ^oMLdoX
%F1EhgN<CFb\kqRoE9'OuX_7pbLDaD0<ifrYN)#41U6K/$9H'ls`h0+dfND6X$nn)^jAtA;OmY_UT[/n*bAs!/EN`>PVDnu_CtZ$k
%ZVjN`*4Q01(T73-aa7m3cQq1.qAE&4$e<M>mau'8/3#@1;ZrON$tgqp[7Jd!Zr[T=7Y'68>`*'b*o'K<g'Sm[N?q,2PI8#!8UNVT
%Qni&h;'6e9c1<,t!TuCYRd@9MHJE4mjddH)GPN)9F`]i!@cfC]33pC#*=\&8q)bq$AdHg0%HP=uV=`?+'SeQc&.RqXL=E:-1R1k4
%Bb[6sRio^kMTG;'`,F8ip.ThkrXX0=)i9un&o')iGkWEU4BZ[3MDT>u!&$.Vq2F'Q`+L`[OA)Ca\L("j6lc,f6Mn>,e#$p-_2UQD
%P>c&=Q6<r6@>CR;H_q$HeKR#KX5a?OVg$h4"8\[[G_#NTUK*3S>Rr#6:thA8)/Z\C:!lF9mRnLiBr"b1RV;NNaZq_!/G,K4=2b0_
%nfZcLdVtgNPRf9o#(L3q_E57%)6:u#mi0QCQk+9O9SU$>KB&q)rp<^<_7`mgo'A32`=?Bj1lQl#ml4unEg=+6H]bl#KW%tME2;3`
%5Wg)O)l/7f_]0mdE3k;75fI_tf?\F:_=1Rb4UKB`'LF,JBUti2Yq9Z2'f9(/if-[?%^")?X*d]D_W4p#mF5t/3=tU0K9PBO.38g)
%grGrE=/P[jJq*703hr?lqR('\%:,sE).0]YT8]!:H?K\$*lJ%4:Kgq.OSm)&l;Gjus!BZm/Q]Q#["bUL/3f\4)Ip'Hf.iA%Qo9V?
%cLi6l^VtOMZ;kTuGXcmPVQq:VGhib%kFo5n-3pA&%g0`OR;9lX'=D#NWnJ8@MWiYl4VB/WTHW$)1re5t\mQ\FGjLDK+%[8t0(M#Q
%MYnVAIr0(!-1e%j-F.nGd&=Bm#*V_XaU6^ib3!C_Xt>IBq4cTC*bC7>k=`)W_=MT(U)Yc_p*SkL&V,bVHM-VpH6H<pEOtX#epD_2
%fMt3+YJnS!14PhM<BVXNF[RY>DmIhfOg'--;)_IBONf-70(H#467u[$.U,Qjd(FY.]2/Mp!qJNP<+9o"[$[spoUe>,02CrG"TIHM
%F[F-jPnDo:g59XK7SOT$+or38%l/l`QL/>n<>Fcjn/-/OG@0(3BSS)Vc:2s@*'RA(@,61b/,2<2p!am@^N;QTb;rDT9V7oUEgKsq
%HVTe+dEmtU.KAR%5R'N_Op>Rpb]+HR0!.qdlV+K\a8LWio+U/1.ZqEV^h69_3\+JMQh&m*@lC!M\m`p\67fV0;/%k3#%_fC[m*kK
%EME6)?&NmI(UqC%ab8uPWf9$/hOui(f[mA&e:'UTV:umeP0fAKoV0_#3H@dYA/YrgDPR%Q[+bYS&DC+>Knf('Km%#r:oaSm+Cfeu
%*6PODJn\*SPTnG*%OPh&WPlrH]0YZs,OY1Dj#OcLd>cN4Z'gn%7F0.Y7Yi\'-$Yr"2F?h$*lgl9ol5R"h;*V!Ur0V0"tPlULO%'n
%/qlLk/]IX>JA%,u$o"+rGkG@u&?ViL03'VY=Ps0tK2bk?$edN)V)u#1I9?"$b'9OMZ@D@"S:T9s]]AK2WF&p%XjN&H.m5,Y\n[!"
%U@K,\3a%<;</f#PE7C*C%1G=]96$iSdCR(p!duB$<hB(-Z<(7!pQHhim<gH:d!<]?&^]"^F'+WOFUf(t.c"Zb>h8l^dZ#Ga9"2J^
%MdR:',2KdcBtegX.%hRZ8GDk-L,65:@r>VfDr*s['fRDE5Gk>t'!8XHe0%!jdPDIKnW?/-q.3'Y;N/Cr>q!P,mr/b_K\SAJE[>FZ
%ngU^Dlqk!dmQsBpMF1R5mYN0p\tLu4KQNU@F]T^D6/9):J&N.)%5g@n>)-iI7X#$!kZsn6FKdp#'(%od_!h;*-Vem)7lG4YYN*;4
%Z;f>l;q$H#(sZ3(RVScE\`-k>lR'MX"k(Y7LLDr<;\Pqu7C^D5U.?\lVUFi.D7D(Om97T+hkp*+PfPR0/+DO?Olf^aX?\ekn=Oh,
%2YR=aG6Ff)#UKGV,82P]i#b2A_u5,.ZXZKZ@"[:49R2,ZK0,,AI!"5k&ZBsWf@)=a_=s,?^/RN/2>J;j/1\-ME\R?:L$p`j%pOuh
%5YCpL6Y\a+;k'i*3bXnW8A0K6%VjDXL\Y4u"?+Gn"P1UI&W#!,G_;-J9`"p^ef>aeTMlF)%QQ4_7I+HDg"8-6BPg_l6`+K.@-gk9
%1D:T=+I4(E\6KsAF,BCA+5dR\OdC+Lg/d]`&I'ZgKr*n[c)_$YGABGPl\tu4je9M]fS[&6APg3)9Q_'Z/oIs-mH\P'BX4kI6;SW$
%@IrgHa:qI>%[[cD!`cNicL=n?g\KG`gE$IkOJR93.m;Xp=m9CdmSq?h?O1!;06t!%+lr8ff:2%4hej?R*?Hi,`Q45\@S`4pD=OFQ
%kbV2V=EBKIIVRK/4n?SB=>S,6eu+nt]'F@.%D)hQZ=2ACq5N+/I`>%5QKND!b?dN2RVbed]<X,[lC$c4[s&H+f(Xh11)qnqK&c<h
%Ws(&=;ZEfns/MF'L[9?UmMY<'l4_N60\7`h?AKYD:Y)8I9P4"+V4j(n[5c&>q!Q5cW30K+8OqO,ED8MN?HpoNC-:cnaAVUi9^uK2
%S=7:b"-GUoM0,-o$RXGnBRo/9a,r]grlL_BPWP/#UCB4s-+h3.29Mc:HC6lIs0YO(p=+$66N;c9pi_^0,J2ZXC=gmW`EK=I>B"6L
%.InqSHIN`)R/"JJ@r(T";o^nIU<KYi8cIhGDOj8P7e:tnH*q^&RWn`;Vc_]]nZE\-b?bNS/Dj!N-*,!X=%CO4a5GjMF*hU1X(@Xp
%Z._h1kLZ%7lh&Pt[^\EG;c<Rn2=gF:_u0ME6Gsc8&m>TFgKNCk4oX"6HE%Hp%ls8(a6iCbM1q5(CFh&!*[1.2oCQ.8F'<=:LBFkq
%,2$ICA#%t[FtMFC#ACcTV.l!m:P%<nfV>mbLVjA**a=9[Vf([B]uCFk,h0CPrNj&CV*<HHOG$d`RFY;jjH>u>n:k1e].1%?WRN[E
%k)];jR%?odn#l!`I5V:EIs\s#Oqm+&=!K%LZ"'qTn".1^Fq@g(6Z=Hb2_C#?P9-+(O^5hgBC%OL38MP1(U4@3[Pdqhha?OoK5GFX
%0Z<%6"33].#to?,iH],p,<SrS">`/i1iI*%(HSKo6OhRJ6u^*+_Bf>aTY[V1kXha)2&Tj6W0=[?aDr,.0Y/'aOa>7XJ!>e5@D#A]
%gHYTVc62X(c[+g*22F<k6EbPAQfPrUJSCRRmRdQm?Gu'+m_*u3@<HB0YA7D2ZIZM[St;1X0o!BnK4enb@[2AJH,-V#3S=B>1^0_^
%S977-djV)-+!u54^;9"G/GZrkY\lReAX)]IbjpRqUIPbl3gSM>SoDRIZ1>jHiukUu=I.@uId9tedPt_IDAB[jjZs&'Q\YH[P5X>U
%3$Hbg;iQ,B9;kAD;*-<CJPn)>s-R#A!&^tJ.0f/HG8J;@04s3(&"RHJg>Lh!KlqI+0/61=`5);!0,Rg!>OiLiai[X8<Z=CJ@\-Gh
%NXUt&nc*cef;%037U2Ic-J.GfQ/X#*cG1jd*5F]l6uA#IY#^m$;1P.,drLT)dF1Pm7`gog[J=R>V6*"4Qo&.fm1TftmD>JVR@S=3
%E.aBa9n9GmQ@8oF'Us%uX7^O8>'16@"O3gu?_k?[X5&e1*[1EO)AgE;.YQ47I>bQo<L'=%eO21[Kt@J=%0frUgq-F1n](ofFI_4L
%J@55pW#[ZNd&dc]QOoD0)!10d.V_?UH7!,FNP)6a4D5Wj)e-4Rm9TaXC.R"YkGcHMWqJY`G^F.::F5E*hrmb@,BlrD/.;>b+hl>i
%:or$r1_ZdrM,\gZZ."V5l5Y.b#>H-^Z:Z(>/UXa_]#9#CY+;9d6UtQnef;Wo>[HGno5\BO/fod>9olAjl2:9aG+Zt&-r`kJs0,=O
%(g`rfaOW#cfW!839c)&s65bkGDKG)hg5CDjj]\Xkbg9m,*2gs1nK;uN_K_\KEdo^J9s^Wh('@h[dafD=ZRX:;'7H3uLGgqeHk+4=
%/&fQ:'5)D)R5UZCkY6qqEkFBuVir\i\*-'e^6a9oOh*=(=,uQ<2'nSmEt!e/d,ZmuX/[tiVLJUUi@h1U.9Y(&#jdP(4N`2OWQp^n
%XGi4O%R;E:UH7<0"jYVVG?4lSY^+K<EZ[SUXLJe]0*l(WKOnn?WGSKfVrm*5+ZWhk,ICFidhWO:m<Rf![,A;A1GYZ7n0T2:11/oN
%CrY*?4Zn@8=qWP5D!`Zt[?"8aSDmCp7I^AHN[Z$W]&o,:234+V5t.q!^GAV$MuV0eDLSB[*^0g#`p*?eVQk9TS8p1KTjT$OFneaL
%EW<6F/FtTX8hn)@TA$\dO+.(TUW0VNT:-5m]m?21]]_5Wp"12\qUBMFT7FOfSd-C1r8<]lf!BGt-J5_Fa*>B\`O<"jjo6<lcf_W3
%W56M9V8"sjV\7Rml['uH=*Us,nZlTbH(uFsC4US`h6Ol1k)C-B>H#<F6"P:(2B8`+I;60'O)F-+@nYn+>+]P>e74QniqP>oYk?We
%r;+o_Nn<;>F!8-f;:<EC$Ad0?5Y<AjgR:c`=?XfV@2S*<@8EiETaa4%SaUFIaI54(>\Zp#S[pS));=*GpMTQt;_@[30<LPB#]SD:
%>/BT!l:!f,kC0hVYh!<"kj(m^)1Edn2la(GA1H>fTO15O@4cA/oX'VApQa=!Q2QQHrWb$pNe8lmg/\@e@a@>`2Xm+O*Dml%j/S+i
%Ohhm5ZUgn@5KVX<`Vu\QJkVEh<g/@FDLYP\a^[asJaTT_aHK07?*8o"8TmHn7bMQlDPg/j%,VP!JH6Z0qtn&5rIBIa%d1;5'>GUa
%Q,A/ZH.Glqk4(uJNCgr]G_L:k^^pgL8B$XXEjQ`-?P$r"H)it:!ijYZbT4&lZ,_BVHi*<pCFtN=-;#bN^T2BAIA4ooP?lm<_ON-a
%E#qF6G%k7^9b+2l9#hfIT*=lkn1X4/1>PJo`0_]5*[7e=M#W0&C`3rIT'E_H&`1<gig2]]0mtPA,57=(QM+GJ,d%W2HWCk$mO:jK
%d8!&P_Og&?pu8(Z*n\O.hsX;),.$#(*irA.(t,A^DpH?femNK/&Q)qj[9fO[1E.$9Rin;L74eNI63+AqOOt[VVQk8qml29V>sZ'.
%1?u<&,=Mf6HUYnWr:&]].FkT.3-tMN4*T4&H@.g+UFLsdK,!QCGp$>NPsp*Z?8n..'C&SV/5";DU8q@ZT'A5$*#1SO,0*$HKk5tB
%Mr&0aL1Z"*ioKL%-]<Ha>X,$9T:(Z."FOr<Y3>M46L^7s/)tdaadqdXN,QXhjl#%bc03<);MrP0)"!:F"JBGBY2CHi#BE@We@R1U
%FU)^&WXB)$K*AFjJDP:gmk@D@@e\a!AGE7&9%IFtEZ5gB<_q#al[W?SK9G]`X/2:$).VogrhIEETBl1;FK\j`j]S$[V0UGM]!fCM
%[Cog?c7gV?##>WXd!_XKg"/m'?kMiOj9ZA"D+=M0W&=)S<XdN/Qk4#!AGoIt$!Qp0`]t3=(;#H-m<0^d<64rrj]^LVT^pmmmPon\
%HK?$!s*el]f5@Z&MoKgI+Up^n(iCH^iP_!QpLFgcj/"]&6NUVJgFE@/l7]?84(YqMQ$V&p8g9][YgC;_lt&lkfV&+7/eM?Q^#?an
%cQ?Ln6tnZ`+s7lt'AQodl1F@RVtpcr;[4'(oDtHIo&;j`hJs2g",0afRVZ88AX>nF#WJ&3oVHjN[tq'*VDV*V#oqB-^>A27MPMKc
%NVSAb22bj#M[3HbZcPKs732=^:hVEc!>6]AF'87o`5m6.>qk&E0I)=dhI)'QWhFkFA%*qUFd3n4ld\GULV`]S760rOA!W8%U1PTl
%Zg/XGSa4WXT@Ht7jP5++rGcOOT1[%-2U5PLKt.FmKHYhJ#1$\;=(,:nQu\Pm72s"i]rK,q:)Ds"^>A26MM)eJe=*"qE)A6P4'bO2
%#npMq5"3Sp4je*dLX-@jJdM3;5_ARX:m6&!U'NaA4NmLti5)+??g[@M>_eXCTnuHP/-7-W[hj!"N=uB-l@1[(gYHD6R=VL<hWcF,
%RSH\=WkfNnMIf[dP_%8Y-Vfp8,AE06&7r>4]04=X:6WCq11ddIg;EY"@$Z-aL2L9B-TB;h1XR+^g(m5aNrT(7UjfPIqT%>$E3P'*
%>?Ohl2>Y**J67W@22?d(<Op(I&8_SW-eh[A5^UgF8OAksVHEQGK$%gnZ9OUAAGp">Q&b(5bkj9["G[b50Q1<HNFeQ27!'QA)msWp
%?1%4MCmRc7;1iRQ3J</n*>_fNhqVGnQ&tSk(tJWF)!6glhdf_3OburB:rQc_%Lcr'/?fOls79`-n+CWo58&=^85#$Z$6tifAX*C6
%U50'4l[T#MB/t`i#FeArFbC<46/`GaRNbK-_%DqcVG(?'[N-BM4fZ5sg]3WmS^sc_:%cD^Y;-AnTc#ZG$LMp@?gdFN>_hHD06VUh
%"i>m[r6h<'e`B*=3.p,Tb^Km4_7O38"kQ;QFct.Mbt0+D`DI'Q9\pcs!b3Dbk+"Em<mN,K=qAK^6Z"3aM+/E-L;'E`FjJNmZdTl;
%jQkBa+M,qBFnkG"k&ekV(6-,XbYg3h_I@e[,&'$njL5@HS%;Npr$6L<Ltkg*pA9Afc\1'sjQ=6:#@e1V"KY'MJq@`f$6!Er#urf+
%ha7D\i0:j!n[6AIJ^,*PR\L_9G1>Uphp1nnpUb=@'^MN3N%5;4<1D!`i_4=1_\J&)lIL'O8#U^ublVip['1HsOeq6el;#uHfVYnO
%2#hlLad/,o/Xc#[As-bcU,Pm88+fRKoR@`C\'s>O+c@bc/^AWSKQF(EE/5?is8CfM0"S'IP!dPnoqER4Vs/$_^QRiTNn<4g=qO-3
%2B"NX+pe^%eLM,RR+%cMM8G(E4J5#T1e<Y`81h;j5J;qDK^:[D??BAUk(&,/qdpl)Qk/?/*F]W!cZJu+[S(:IEeE;S_Q!SKj<7j0
%/*m%B]?4[EKTAa9*:,^9.n-[%onnJc1nh%V%R@pCKVJ22gZ"\P2:fsh&KJV6nhrgs%6%;PKdpD@&U/Ab"Z\K)41A6.R%\1mbN@@k
%,53DHgss6Uhj`$$/QLaL;Xa'r0LbjPKHJ?I2ao<4U>pi2\;Tbc*m'ZW3!"D3&Eo5/+XDkIa,I>aJNkKMU_[^JaH5"j<==b7k\n-7
%,,F+CFgNU`"il-%7PoeJh#D`7f=05BlH^29i]U0$q&fq3[InsRh.:&9-36';`:i#Xebao*)Po8Ar?4"@fp.eqHMH;hQUbIhP/Wh8
%'Y4J+N1k)f-_m35e%k^'fkCmJ[hjtW/?Si#&[/>Vh17$DLAu^@:04VMUdSs>c+HN&<<uV)kb>#3#\P^0Mu4fe_o+YBU6ZQpaC9iR
%(dW>@\A<k3B!U]%iZqUcs2!i4EBp:id)a.c=0MJfS$2+>JVsr1=Z`5!F`>%?\!)5DL1rK',)lRb.VsB=@@q@?R<4rb4>+TM8BO8&
%;+5AhFpj7O&f.I1`^9-h;\a+!*o@k\RJJc\QD>D<,o<K:>0R=2WY^PCrNC:+@eY<DRO&a6%qjFTS(P(.#F!sGrGUEMqn5T"?sgl7
%.8"&FFL@pV_3ZH(W.U?L,rrblG&C;_4UbIFpm<t`q?BGM0F,DD"!;WM*s:6-Jl?,Q\t:ge:`GX7W-.bo%-1(^)WS_n8<*_b6623X
%aFA]FbI=f`b):Rm^r4Al-Q[;<?!Gs2F(9W*4AO:=f%Y![r-cCbo^3#%N69(0&un?aMp5gqSX^WO$Nd$(HS%UKkCoaTX4h5Di_2hm
%YG$K77TT9SllO8*X,,?=SV=.u<k%V6hj`-')lpG9C^\hU7mk'f/9:kTi%-uljkQ3G\+@JZ)=$T>nENCiOLd1IWY"7M*/Fc]4mrE3
%#E9i0jdD#[Y7ppp]UL!LI#S6.)mE@AlrM2CpXS@XhbJ?/Q+q'(V_9a3+*:^m=O\_1X@t=n=BMiXRk7WA9!_RfR;Ltt7Y0,c$$<ok
%'X$qg:dc4%2@Q=j=f`Po*O&,Z*fu#9<uN6I@cP2L&mSaC0f:VT8h:s+50mg8"ZQ@f%<Xb/M]4,M7JVtc3)N!t'h.`lJ[s/?fbbn;
%n61[f!?e2XH<HJW#IRL-,0dd;MjCs)Y0-!+m$aOfHddo\Co_6W"E:#0q-]\9?]>?/+g_knja]&g.K<q^Dl7rI$OcG4WX00^Gs00c
%]!f?![_#L2:2qO3%-J[5b&qbnKM:=a3k`2]>Rk>_Yua*5'1<;S[lP@c*3S^Pf5t2606u/ul/%hSZEVXHCV6keF(.'JG19SM+'>o"
%LrBIlj+"g&W?:K1G0cdaU1)SSE\IK><eMb#QUI'A*%EYMKC[cmk&/!LO<G"6Cr5N2MSM#'_h&0VW9X0r7[KmV+7^4h%(;2(QE-or
%Uj:I:mioiKkRfQ1?iWW;%=Y&+\'s05)laF\\dE8WL[;3[lhbU<YO;h?.I<5Y0qc$A=F4[`mL!&VSMMc&O9.h8&^EA&lC<)J"TnD&
%7L8m/1f"NP0mhou]W&L_S[f9a_GB<JE"no'UGBt>!"t@(%K?=_N%UQ%/K#a3KO(9Aps`5"9f3F=QgBM:.If`sW$"_P*C4KRM/=I+
%18D#2g)S8b.'m0XJV<Qq"<KR0/G,Bn=UhkSA:[d8L:Ztob6B(:8qPTPd+J1o^Mi<4<KAjhmI\VLcinT,NM"JV1/U'*+"e#'!^ao;
%-QC[D2j3U7p8;*iJ6"Z%@DA/gB$m#$]?5NM+'ie=0n*55LJ1T,1Zg7>QmQ6@6S`.Um\B+U@V/V<W.@2NJQ.+^&V=K>iooU`mnN&8
%IV?]$a,7.RA'%j!UDYTVYnTud9K3jL&dTMD-IaUu#TV!Qlo@HYbC*S<F21/(mK$MpcLoT5q!dRI`:o-L'6@jk[P%:LG.(1Vd3<Zl
%i_PWg=P$UIaY^oa`HWU\b)]N1Gd.@n-$&)]6G&1m-;Y&+nQf*T/DhGl0'0Ojpi.1;\#3YBf*c)r%E%biom,V>c]sd&8;<B?:mKFk
%4f`%TYb[#aNW/n5P^]j?;Yj^'ekL>@0tBubmf#Yk.$&(h#VniI;ijg1+JTiB,+/3mA-u$mP(q:)eu<A<*?IHg^kf)nk,WmmeJ@(c
%#Gt)V=PC&q)a;[:gZ`UXeuOn\5\ZE(ZG3Oon@uNK^+UjHpeY^FR)Q=UiSE*K)M,T%HgR]ZB02%a<h(*[H$p8r,bR[^cU-T]]l8c6
%YI-*+Ig,rT%(HdmD9_$"j-hENX0T5?4qP8:p^K*(f&'n&=*'jMh7qgF/[%[X78?nEf#nYIe.&CO2-81[`Ja'bU1HdV6Xk4lAsm>T
%+L8?c_<N6HYiOhk@ZURNH"(R*<Cdr(Vg<_Pe`/8<\X9H_/DpBR_EQYdF]':anctpj$3B_6UQLpO<#I8+MrJIugDnToN9\K2eM0g1
%DtIKbj=.[V2((&dkuG"=&PgB$ae7-sg7^h3Ji(O^RO5^!gp8!sqn;h'HrhaFUp!^56PK+-`oB*d=+@reYMoa!)G4UrPC-bMHM,?:
%43V,ZGZHY,JlVAMWc9CMqt>ZgmcM9uqPur4G86]7Y0TF7-RQ9f*kOKEkeVuR:NM(9AXYWu#`#(KJZFmUo3Y/]CfeSQ!6\MdB6]8;
%r[X67k.bLf?>3'kkFqo`9S]cEM>4,/GYj^FV9t'uj+"g&WJeL$fSu[A=q+I7_nue<0-(%-(<+?-@h"IV/t:Xdm1rQNhP//S*$n-I
%D)H(X[kr':l'_aUpS^R#W"Gl-@5h&;j;G%Fs7k_,a>K7Z2p.$<6sr:EEfY,dHUL?7Q$-^ag-%"ciTe9DRq#2>jM]p/=?2K-_7es?
%fCV"s9Hl58cTj^&UXI&^!@2QbQD\<)<hdBb:ojXg;uX>6/;2M8AsG;RW?;G-)bXVjb\<.Eb8,mFg]OMU(+$*nrr(]40&hgh`O4*(
%9sT5'm8$a(jkPVT,"Dh-2eBVaPc/t0&VR6)3b$i&6pKeYdZEN0`9<0FHc57c`<H,gFiF/D\2B-:0nTPtgq6eJ@=bF]@pjl/hk06*
%m;/+-j0d>f)8t`K[arEoI=c8"UP)kpFc&T0WW8JAXX4$SqV.]@IY=02SN*1?cCcUpFcbNV>Fb+.Gc8q1PQ1@TVcF1PjGU'98YUF$
%_F;ETA6@((BQ;hQac49[Fu/-UDWgd$4Mn%TW^(*?>fJ#D(s.:u=H7G/\c'ejD`:=9_D%ms&_VV;HJI(b.6C'\(tR,oe,idKBl5L4
%=5;?EhE<4^DE<5]CI+"6GM]8uVM@sl;Y..`D/n30+4tmU%=W`j36,A-d$uOl'Neo1D?=$8n[WU,m1cMhs/N^Q=8#=B9QTJQ,V4GW
%BiM_eNA3#L*s^RJ1^RA+1k*kP?B6OZ_;S=n7=4*RX&0K,&"cbVO@,'JPK7WLl`i>Bor6skIna6b\U;3d_ZAMPF/dO9rWk'Ap.SY>
%A=?Ik/#-mfKu,VrPC[oNC($W2qA7iU\#4!6H$l\R]q0^f25%R(.^L]]1ro&!X74ba`th1I[o)N6>6FUQ*G5%]Or>rO4LRC0E>cK0
%9VdMp"Edr%1VUfTo2/>.D1U4bc1'q_"Kkqd]q?"Ej<1Cpe>&\>L7P!?2A<:eSL&j!dc4%uf;NkRXb$A9%^Z$i%..B)WW7>4"LViK
%37_:5&_,XZSe0D)13BjR`i>9t[_Z4$>UgI\^a^6jgo+G892=#:L>?@QpMouVC7'.KCTn8rr3H2nd3@%fDf"BJ*7XC2NdH3<0XkCE
%X[]p[So'^./uC)Kj0E)]^Tj.I=8!&3$(5!5TBHd*C(Z>`l1k9R.,&]cideSe"F-l0KVB>-@d9)8R/EYiCO?_O!e+V)-b;[!,+g8g
%Brj#Do80p?9^0hM3_OHJF[FLCkBC61c/2^I,.$)"(I-#u'G`&oEDE='O9UVtXC`q2J(R0(qZE@>[q`9q19.Ikh)(uqDRpREM9QEY
%p]qd_&ro@P/UIcf;N.RD41c9qc8>`C/8">=^8*.dL]4["O'WpYH>JRgIHif./#P$FOcYL2&[1j++u7dcdV``%f(A;b"Jded`H^<u
%'RS^2)SV6k;((d-L\4%ZH6I)qYWDUI:m:=fCgief%7rpbI[C5<S3q1C%]1Ns@%cIma[7^:8>;ON#/9Lc@;W9h/;j%"!tj/m$$?uQ
%c(8>R8KMjlc6LaRTV31hd)kK\$.e'TJsS=r-/u=Z9=?r3#jp\N4HKPcQoEgDkb2eQB#l.A6=VOBW?#WOK#dLsOLK9F*nuBR3R]KY
%98jC$_Hn8L;i1#"jo;;J"3ucQ:[3LTTX.6J+nSNS8#n<JrY)L/SFWNY;o5Pi9h1-nbd6ZSCum/O(RXH#X^r_6Ei`e_)HE&qH."SQ
%F(K%gXXqb0c)+>u:W!D%)G$;4/j.GJF,+RP7#59QT#"##V$BkqVA5,A2U_01rP5N]A5-eI3>dB=5ac)T>\EW'kJ;Em0&f)j3-T4W
%:F5QZ:MkcJBJ/DW.E>o8;\:l$j0GqAVb&"N%7IC4gkKl8,m/#6>$i==H$\U5ok1+8F<)V?&@lta/dojmg3?c11AV:6A,[XW'cN9#
%SD09SrTt"H8N@8DPQ;YK?Ol56A]]D*6eCVp7/<+;4:Pe7+/j-6%QOm/?7U8g-\':`Lr)UZK0l4Els.q9e&*AB<sJP,')Zb>ca\3I
%0>?f>86$O19m/<[50Q:/h9L,o(21T7-CdTCMJL4gOl9!lU1b9@D,Xc*6\6Ig9m&COj6'L_]>bht6Ve!n/suskgg;PR$c?Q$-`VPe
%+!u7*a>Q)o\>dLRZr3Y!24YHO0M'C.JPPO-.jn.oC$AkTQ$4`0=B1p4,Va7rA1^`Ys)U[hZL1Y:$s2Z#aZZ!Omsh<8h@1""_8GSH
%hBTN=1=9'SR+l!WRYTR]hGfd[XqjWACmcO]q5D1)b1_bQ2^]T%<YW)3cgMkPi#hSt-!oa"XV?Us<1Qi0,gYq&%&DqEY+FKiQG`lY
%;@d'SmW?US0jB4gG+u\hTNj-XYHpP_Q[0O,!bKRJ;OPj9;]o/E*$1;/cCG*;\Xd5X(9,V8VY1k+^GrdeP55\Rf,<A-2VgXEb5o;n
%&s]K>8G#m"iT3GS*WA4*5Vi$/a>g4UgY)!;7ce[:+Tp-<m*:NAqlGBFQ5W;,hTh:!V,peLO#*HTa=ZEtcm4adS_b_/oMubFoe*R+
%<p0O;FFZ`\#Z5?'^dfu9=5cHVP"?C'@FQSdM22jDE^au<;HY&fb$U[nF34;^%=Qgi?K&+'`-J*tl3uY]WYiiKG3YCWY:Z@<&BWM-
%*igg>kFYp0g>`Nbf3MtBiDZ0oHK\41ge[,9j(#^;o2E,>]R%^&oYF:^AA2F3L:`?Q&8Ep897n/(I-s'Ckg[[AcWEg[9Ee"Q-*q@.
%4A$Lkq7*"h7W0+;9R.M*D(RmGG&0gZPA`R.`-IO?/N+-fTuD(#h(2flQ0.lUri+GB*V.2"=Q6^1Z1Y)*XAleQ[Dc-i*uH*S`m-6n
%9^iidPrrWEA9I>#JoQn7DTsHirid*Fs)M90-dqPNQI2;>Qpte,0tLSJl2n3L.#6n\O+fqWDPYL9&\Vuu0M!Cc0-Zl"b"kP0jOBK[
%-\J7HYBt;:<)OD[:U1:t4%R62?YdRDF;)"2'QMHhl]^f?LC%:K<if^\1nI1@ZjAHZ)H%k\5,nX^Qr>OQ^)ga&;iZ..)+=-;U>UOc
%-*>7sW"R@&Bee.IQZWZrGD6PGTbh?`]k?tm`Eb)*pmFPILHi`qfZcgfK`\c/,(,B*41K0qm%kJ<T1:B,'pSfK-3lS#=S%Q)mHKks
%fu1UXaGBWTMs<Dd:Xl>*Yb%%$9#TKf>W_\8Q2nN9-@%H('B.\f;mHY_O2j7eQ1LGlEU-e45Ft(ek/B/U&b@!%?qKZj:!>+8>Gnfd
%NlS+9s4($HSKHib@9'):VG9<95t[um((F(Kam^@b.AVJ4ST\,VRpS/[!e,h[aJL`WWrN<gg%o.G%.r1qTFY-&J`_-Lf]U(*X;XQN
%%sj\"qn!RKhe'e.gs!RqEJgC[rNQS(ZbAYSYF4^[7<e]1])H)Wg&-S;X8pcFO6c75Y!;`U:)rZdGVsnY//eMVA_H&K7]P6K8"S"b
%lomN[Eiq:+Qmfp_:Gl3)7>C3NDNhYh8jD5!m`/7$=bU#CSf;.aNTLZ)nEf90U'B'="H:mTY1\Qe0%nXFpJ\`k!*%B;o-f=_CE>`<
%7d'ju!`)Oa2"pt_f/#MU3ar)=*.V*2JB+;JN4Bh'LZA!+nf.#L%Mff_7KR'b@6p!"loXp;gYgqc&!2Znk1A)A-]_4re,].SPgMT<
%cfI-kDBq4RfPhUb]f0O_d5[]a0K"*Un=I1]iTH_]6(*$*IiX(5a+Op_BJ_.K-_b8X&_S1"3\F<p]DL,0?UaSnpU$W1.a!i@oo^3d
%W7TOOPaG+]I4c[,ldb<]'UMk*h_#F&7?X](9*e+S0DEUOe-R.o8ZFJFDls>K0dZ'Vl'1Qe8#.&aWHl#U^#"S`>K*kO@e/Tm]L@[5
%^U/(@p$OcVi7O)hHp[:E9N23J^ZpmSqYrh+*UcHtK5\f=V'BnY;40sClNGfT(HR:Jp_81m3VQn7[:k&So$p:VagkdhgJ)UU>@ogm
%opCf0T/fU4\g+G+W!b$m=$;*@lIY/)S;`bobZqF.Is4]H@<p1tdXDnqH0;4"n=#G"l*G&@5WXeYdVSRoC(cFB/'MD$7$#eq@0pPs
%K8]>+.X51^*EE:F`k/PJD]>F$-StjZcrFfCcXW@C<+ulucgFQOr=lG-XQ%<I1=#fO9IM#a=t3JZ`d=ZKf9QiqU+KG!Go*gcP77+m
%rD32VC(-+:OB5o4C90!@SMXD`+c%44iO=<c5=%(VDb,Ao9XXPe?&SF>RG?ZO;e7#XJ'-c1X1LR)U)+o75I*bl^2fb!YE]]SI^)'E
%8Rh#X/]ABLa(u_n3G&-eY81dlQhF)nU$&s8]?.OO`fqo[EemSnD2!A.A,EamgJ2k!*pRm,j+gZnp?,"@X)Z_eEqg?:gK&h#Dg2$Q
%T[lKbD#?Z@q-=e;*8J9&mAdD-qVQr`Z,4NHc4-]<\!>L5Q+_])oH/f!X%+P1&q.B+e;0XK<Rp](#NID`X7d$+5rXk`Z[MkMX^M<Y
%g"Lai/B.2K&?C'-h,mjuDH,r,20+02G(Q?Jh7:Zc]6_g*4=;a.E[*p\YhH`%Ja\=MD:TDYm[:P?pC+1uj()>-&!>^iUO#E*4g+3K
%cWV`]NfJ^nq2MQ7m]"7pFqW>lIb3;UV%cEi=Y@%dX."0oYqgQ_C>k$g8t"XSS-UXkFA,#;gNEj\3g82s/NKPL9"PWr9fYX(2ck'4
%&2E;=no995"]g3)bmg9HGo0+!bj^k-(1\\rbrPoqnR[A6/ZmAfGDM:+bc[EU5/UHuc"a->-IHafE`7&OnXjkhS0>SX1>XAmlC2/=
%Va<NUo%%7kbQEPc+8c]$kf)?"7ECZMJLjM8q7pH)i9/Q_;VGkB-r?nOBFI[?<aLKWL@Dn<0ecXL]GMDYO:!?h3pGPXWZA"&[$Vdb
%g.4ZX4oJ('8oJ>:3G07nm*t%"^f[[M`G&k!Zja0%&Wm]aTmomkBPeT<TI:/t.'OojTcmkob[Lr?1@kfogHJ0#\2`EEP2qfJZ2oQ"
%+uGY7?$<7r6HlGeIKM^3L=[?&?Upp&3OK.`Sg[4n;ui2-1D,Rsm)'E)M70e4K/Lt$].#KX33CUsIaL0(CT-AM<Us,O]jt\8MC^6l
%eB'E*EYtrE9PZX`n8\XbLV+nbNjYHAp2&_2pWXZ[RnOkDAWWUUo%V&U7$epgU$FcPs1t\%j?M=0QQ+a1'0GeO&q"E/cR$@'[6Jd8
%=5MMnq%qL20KVk,Z%5V6&=#0*,eZ8=YNrN)o4Bk^]]p%TC;#8THZGC76==BbG<(tW-8u;mAa'd18"pdP%Pn0/6\'BH*O\Au78Q\1
%GoMR5+0/R=2`&)r`X1K`7Q-`."i,mEfO`ZUTeB+-k*h^f2c:@kNlaRF>0\OKJPqVgl6c),D@$iQUZ;WCa`RG0lGc%l21'UP:FG]l
%^XJ&2H\nUh^j(>&^`j=f)%Hm2B**`YE1)^l1P\W-k\PAhq<^hUcJ.3C<4\aT[A;W"0N-s(?ngem6WB,gG"a"'$T1%)16ANYbJ8(h
%#KRLV@`N.doJjbS\d(&i$fNl!A_0!&`hQMdUF;[qS_NLo1JsLq'+koDKY`5SF_+3j<I'S"H;loQK-6d"pG30KL#G4^#bO2]Z^>4d
%(;(<.JE0q6%)[e@.Sf7/nouDcL*#Re@ucUEc^N25Kr@dFbp>h;P`aFQ9"YX,Ab/_bdR_Zf`TD@>H,[\\$SWnqRShL@BEuQqrkfXq
%nUQ@9Sm5jXBF!I,=:3qH,=h]CU>-i]q>[d"18VW>aM(fP,0H:%>3uUFoH+epb9k,@l7'uSY%j(u=++ELU(<]0Kn\0-dTtRM"bS>$
%a5+!N$^e=V+09Ur2<'qrVV04kbH"du9f]]'W8ASmp^)(Q,uPU^pF"LNArk8s4$_=*A9F9N&Z/i2b?4$-T8)V*T27N@^XO\;*eXA(
%C%gG%)S;i=2$?[R=APeeoLc(#[VDnDe%;d'E/;toa%u)+Zq!@QXUucC'sj<%Yq^u#O)/eXhFMYdfGa\aeEn5/gPj4&niGcXlZ*c9
%D"$/5dZ9Q"MS'pgA&A?u)1:2/$FT.1*edjC@T6,NY;^6D_D83QOjO^urH?Yg#I3"?X!#!O:4oT`%FeHJ76*IfN0AV_V-Q_u?llpL
%EhMhaeYd"JD]NQp4WJ6>l_ua`Id)$1^D8$Xm;e#YD6W_C'$r`$F3u00M3+gX4]QJb*G[;"XlA%@YcLG-C'M"nCF!;)%JuHF;0;\;
%W!lh1:TYE"d5*/_Z1mJ3D>]WEdLJFODs]6_p"12\qUBMF^DPLj=%0RKS\uH*Qd3QA.-!ZmIf:]_G5O2Ik<EW7ef->=8(lGZd2S53
%'FpG.ZRkrf5pnh4N(HXT\*rGl-A9V<'"--ulsS(_nk,6k"2.ZomO&sZR+!5oaXf@G(b-lHEX85)JAjuc[s&a6g5gRK,'/ffm-jZq
%oE0QA4(R1q8?&G(3TEDLImZi!7%"9HfdkF=O9UN,/F!9"^8=r'bDKsbUWsqQMFO-EL=h&,fo1(gDVi)6]l_%VDNcE(Or8_GbI<[@
%W^hOeUh(/X=VUT0CJsGE/,O7j979l*:=u%.P,1Y^@OJNACZMVD(ep@SJ3m"Ak(2a'R=B0gE*lbYGI)5H(JQWH[LH37J+4tgphjG.
%$Y1L.Q!4M&+C@-b7\)Wk6DN-7iYqMEh]T7d[)_of;nC')#5o7N1NY)dXe_!"`[iI7K]Z-h:)dQ/CiddYj0h8\=b_l:3JTBrfSAPi
%TK93DN#*_CD<;Wi>#7#@A/n>&d)sBf9>m<?J<^mIAlF(]?17@OA="3TX6P5"/nJBQBNnbGfOs5\;s?98B5*X+3G]I=YWA=Lh'RHs
%o_a`d"I&)(Z0I-nV]"f2ielCtW@*47q\!KZc9tB3l"[-!3oQg>\q@/HXLX>PMq%QrW=efu40:qo+CbiZrQ^)!CoN*F=FkU)ADoN]
%!:\GV8:jAL0\-XM@`7,_opV8`dPko4,1$A,23<>@A[LbX::gJ-D?t1p_mYf(PRSArn7;U[nD9'pA5!Ih35.`p4i3!d5LJTIkq5%M
%&:2UDUFrQ>lhXRBb(\lo4ghTX25>j!Pesr2KJs*(7EJq4JDln=OteP9<,:m8Ve4Bc#Q@=Vj#+_QD^pjgroH.C_3DtX/[/eOJ#Fu`
%F277DaRh*G7^YMur\/TVm_j/dr;4/F?+Zt+/-acWIklM(9H6V+4;#N4;+*]LUF+S^LH:_4m]h2*6ru]l<`6>-mM>jLGPqTgr+#d/
%h3ODaAo+P.1@B7s.;+]2<Be,HA&<@61X9K6:rKfnB6ntfgT0;#2ogmirVSqa^/nD2WHOYeb)%mI<]t'TG?3I;@[5VH7Ca$/;KX\]
%P6He'%:B?r4+4^o^>A,4MS,]XYSn]JS>Z,kR._/N6'.$T7pHFV:tSE.mR4(E?A<i%d;WQKI4d*??@himVMa(Ekb)?bLMWq:m&q^d
%ZWdq/181,mIBs0CR_FTC?oX`N0>$$$gY"1kEXZ\D7cOo%bVaEXBqJ#?>sM0?,76AW$o*Rg?c+L\AJo/&a+A")78#jFAg1?O6eaB<
%oP7h&F`BjsXYtWW>0qVN!r30IChW7b&fYXBd7?[]WTHArPEG)9a93=OM3?ZG$I"5;n%IBf6dc-CVjjK3U<g<TIDWk-dZnKKqnKh?
%]7c]qh@UEZ^+l9Z;UTWb-J+]PVpU,<c#-@jDU!%!aUF2iH?u%R,LVRKfoS4`k,[)j5RV8ZG8g1_'n/9ta4E1&N-.NMCs;()F430D
%L/-.`-s^>4^Ghi.m&U-U(<d6U-RB!N$UZ:DKfUJGk0glsjXnSkhpq#qH>_P?&X@o$$%Q@/RsM>;LEK)]W[kY%7$eZp&_#0F-+Z]H
%m3.<c'l[E*GdA5@7X>[.oSZa(l*gF^QZ"7`KM*F%>tWe`!7-#9Y.D'Is5pK\Y'cbl<H7*>%2>gtr2f6+S@UC8EWcT\q6!*p2LdJ%
%d?_+9*<fT)6,O]%a1gEriL6>P,,eo1]2_Wdr9T_!A#X56"4W\hpSm<_DgC:&U$0iO^ru5nTrLIO>JT\:<%^-YA6s=H5<^jk%QQre
%nbH01<K*X!5JGj'*$E$m8+/DE<6.;QjkJH@<EDo[qi@JYVFTG_QWEgZXq"(E#ouTT6@,ZKE)V*QVLA.R/35@%T%^6mreMKScp2?+
%^KVBu[F?Yu38>)f."`<9:qRW];9,;tl&@E]T(f3%e?-%>09'6$'DC@.&!dKte;6BcpH(1BAnm7fb[L>>HENN.r0F;ZJ"e@0BXf'<
%J-]kJ^8#_grl/:h]KNG-]E%FjaD=^5Q?1lJ7rN"q;0"d&.`SN:!*(E>j/];+6WRr)MpKt?]&)W)ffh96QIKW"!8aJ5_H.NHWA^!a
%`eb_D+r:5?FPAjZoF%B6M`MjPEPo48E</$(IBgnEfUAWsk+mH?oC2);J$F=3>?g*q#_%d8"-;2.mMao((8Q'3ck0BL0\f*N@DC]f
%b!iKKnsq?hDQ3W;1Vmq,E=]5Dcu=CWEo5fBeK>D=2*hq,He=E1/XM1T9c4hV)*l/u6kUIIXVq`s2H.Sh+N*_L<Y,On@\VYlq3lUe
%)CY+>I&WbbKk,\-bI<[@._-I4Rh@ho>,V?:B@XDDIBr6Nno5jL:l[+Kk:QF^B]Cr+HL5KW>8pnE'3PE$)iN%2n"s.P1*Qu5+>2G5
%6'W`TP6a5b3m.]*#a[4U*$Jt+\Ff6Ug7!h**ghW%I"Z)KVebejpL\Ma>KKZ$%'6]nXkV@<Q#%cX.RI\`"U't9Ffti9fOe]*&O[cS
%0o?b)7SRo@'MUF/1K^Yq-9Xo-8>>s3!J&NYJp:ar1ghrmH1c;<jX-2k.l9+E9FJJhkM,5b%DHQo%#\^A4N\+\D/Gn]CRL-OfNPYp
%Z"KRaY;oD,2"r4gIS[R1GV82kKdAb#[AC]'#L>lY1/RWe,^WDS!pE[SL?M^PEiu/]Ab*"0SV:F?`fou7*e7S))VQSL3)CXmqn3;A
%]s*6Sg-ps$$YANVW[saF0-cEh0S&^IR,"CF2bl!_JA`16L/f$mRo""af-gt0O:`>r2Ku*1Wr4);(LRZ.reC?Hr:*5O+$8lN0\ZG6
%TBYn5A<0cg)pN#gGT@;%?!^^d-ehQH*@E$]`S!cs4mAF<PXJ"n$&#(T?>J%P)'unqIs!L\T4&;#ZauV60+m[X[2mN\.lg[J5E8([
%M`=i"WJL[`]h6E:.iO6[\l1NZ0lI=9FS,%rVY#LH(%3CqM%C79YcGA[^tEMrB]f1em:CH$;`,(Z9K(-6/"Xd&1ZBabaIA[g+MpR%
%BG2Sp3p$RnVFJ=qSC?+l=fcZqi[]+30kc(ZIIj3#-!@[26X6c@L+TTQpi`f-AZ@>N+U.&aHrS2Xij/QQgZn[qE@,mHOBZEf/3A`5
%#_XoLI*^'^)Ir:&n;H/u.<)qFRZ2UU!.'d=m68Mek%-F(YiE(PC#:j4*ae5^?$33D2EsX75fQK(m5gZ%^ob)OCi1SAmAfG'"f(Uo
%U*r@IUQdU.^)M<t1&-SD#?9[MrbWVfk(am(r'K&A^l'105_du1"9?Z6<XniZ>^o\j(H]0BAQle=@KVQ9/C99;PLeO&ID*\1P<Gp4
%TiZ]Ko\RXD<0rpDaY#',N>'I,,#[9n!&,>0ZsGP&86EXT0LH.Qj#>R);1#"20h@ojNE3/a0bj61e9e,ABCBFT'eaKr-sEGG=%7CP
%@(++U,FHs:"(2aGes<n8d`!f7N6BTH'?MP`0cS;X'jq]c^bKB<^gQ6t&S)ZN/nFo'emR(EAs`[e4JH^mFT@GD+RWpAPcEKXlC*Bl
%[$j2/HgfOE4;o)(<T`pirjYbtqf]\\5ZH$:d$J2R4Nt[R]#r@-b>__A>[)4Pdt<sq'&Vu]a\#p8pJtj6m\n5IFOBgdZI_3#1eoNH
%fp'<XK)5U4oH\c<0[N3l$/Y@AE+>A!:lF*\,?5<n:g`2NH\2SDF&cRm3o01^I^%#L4WeDn*:jjq1H6#;^d9O`VI0gBiW3cX!PSSF
%;k!HT<qphL-e5$9MG2QP0Tb'L?(I_nASkI=Y>2p6=:k$AR%@/4oAN-cg)ABNjObGC=YDqcF`Fh,[rWSTY-MC`1+`0]?$19is34:2
%?0O>$<DpCuI7j-J#Bb536<&(eH:-s5`ZgTZ&p!/m(X]dkHsCjL"A=UVj34;SfYQgh9Sm)u^@Dms$>"NOGGTR&<m]XP^H'BfU*@tC
%^YbO073`0p*+K.CUijt3^.u'Gi,t/<6EL5*1q3XH0&+T$=JKha8"aA/R0aKHiu&C;/<dt``*@TA'YD#PW'`H-,pF-=r"SD@].(VY
%N^T12-6*#>`n"e6I668e+W8WsX1/oU]"0LHn["Wg-7idZoGsu.bNZ`$b(O+@k4PmsQ_t>+Q<Dp<GQY>gahlBAJtWhM>)F*]78&?(
%mk6k:>I877Z\`Qf`N8k"RU0RqrM1Y%N(]qm)6^U,C\7)iVK>O$Zne]6A$sso=A3<24r:c@O(EQFSS/WmdNGX`!dJUmo#7>#kFO4p
%M[\rdnD(J(KPqhg:kAmRO]m52lKdZ\q@QG<ZG!,J6[tiV\$LKtl?:V(>N?niChm<[fI'T(:KHF3;o5UM1up5Rbe'l:78ljqlgi+C
%d$EGB4W2db=AAg'EC9Bb4lo[_SM2F,<"%#9+)TVE$50hu%.mcJ**L,kRHDnV9s)>*cJ.jGn'1)%q^SH2j^Z!\Um8V7o?(S`ZeMU.
%9\I>+b@.I.JYY=YS21NDdTYkV,#":pZ7?l/'fIFEI<!?:;8UQgDn`4b4lEo3KeWr>[BB6!G.(0K,q2;1n0k3SB,:7!ggAqTP7oSD
%*$!".HJ3RSLiF_K+=#F-%$@>sFZRSUGTeNh]8H&bM%Xm6c8AS9[Mmpg9R^ipY:[dYSQj<?CikG"$3nTdM#U$0Y[S3`2>[&o;nAFI
%K_ta<EB3;9IA4@SQh=33<3b[kRK+?;?L(Zm[#EsC'WjcFe5U\X"Fre*@fs#j@!+e6dAV7reIl;8:$$V$E`0J+51T&Tl#)Vlm'&$P
%4K:C0g&aLlrH2!im!+VZ2t60^E+p00-7U7M]aRRF$*]@"Vr#QoaGT.>jj%V8R&i_T`kCSL;L+4hf2)p5?PA^ZI2\#hDWYc1R)-0q
%d+d:JFe3U^s8CfEI_NSj!,ilS"J@X\eFc9ANb&=P:IFn[',rhaClrU61S0`riR]\p1F`R_p:+gYVnW*&r@dX%^\dFP$N?T=GQQ8V
%$X4&V^AdWH.9j`pO&U+`dTVY*Q$I+af_It8q,ZH%o3YR0d,5j!=KA`7+0hsG=(]3J3o9]YlF9s#`>o9-:h2YF85Cb(W0LmHK%k;b
%rVO8W?$+F^JA23LOnCI8JqQSX#MfPkB].#Rni)*F6l'ab;;Gm8'K\%d)NI,a%VGY>jAEbSJRb+(-':=s2Bq>q\.p_Y#*u+BGuoG%
%$PHEEf!;;'51/]Nl!@4P6-Q]H@IhHD("_%2fc5,a,ptCq6t1u^%-rQM'Y-XkeV@S?f0\CXU45l2q(SDYZD<qP5p;2?]->-WX3&WB
%l31:V<"/7$ES50?[tRBa+*]`YEYr+'($@8K"0mQNnfnh2HW#XJn\<tNe4%H@RLRoSF_AlS'";8q(uo2W(qsZH:n+*sK&PjBX@4S-
%@C!07/t:)l#7;5AP<O--K]9ApV(kX-::)3U?B:.c(1`)B3+#O3*J$sZ4m[KeD^YE]e0QW`O21:3bf76&YYT46I?]a"j@tbe=dh?B
%qF2;Gh[YW:,AO)\,n&QPQ5<-;481<:]iOdnff`puU$G>jD5d0kA2nDS.^n/WMWL\<cLfusmS%2-3_Y2K\XhG%0]'h/EU/p3Fp6n8
%:AY4c(.7H/M1j7tL"?30$M&@Fh%Tdk1s(u\<(Gh`)Drm:/a?J5#*gAu!s)ujin3"lgcVHA?+Wo">-pdiN:k2]rQe7kr9r12[Li4V
%%?-A8#1$*$cLKM*$*PRfV?;unpXLdb6Rq?p(>6UbSk52M.&;!<.UJ)c@]R;h\,kN**\>\S$=<Pt=:.f-k+>g/g7oaThUpf[3.,JZ
%>)ka\$X]D_O6m.t:Yj=df1t"=q34=%h^5Y8q=8gj.D46H[E'CjpIt)%@7VV"k\iD>/$V8C^W9<[g9FH\?`>WATQ0R*77B]$IqmT0
%4n?SBQoZO8I4?$gJZKp#Kr8bdnCSXA5BT'.?^"XQ)n7)uH0dr-(M:^5Zp0-Ik`<ff`BE0^>`=H-aR0rqB-"qLGqY)f]&6:n@3ij?
%P\a'e4%TBdfgL#8\E%ISMR'bXE>.$]^t*"2nGLf'*1oK,FY<KNaF6lpB-kYDm*'C'[d;4*^c^!IER^r[8agem>79O?I<[<1Iq/4%
%[TJ<4DekiYA$jHN8!;*!5AT1mrUuq%1B*i^oR9Y>b>hsSWUD19*ds6?'Fs@df4'f!Hc"C*]a0&,/uk$^<BZ=IFBBij7JqcM&^90^
%0kV;VqojKL7P>)Kg#Rg]8h[2N]LBZa(>#9#4H.>ind`%dlEAZpVSihpNF$]D5a*7m7P?5Yomr63oO`uIpblH-Pq6W1]4btTQ';th
%3/Kg<D-iou&*+87kXBgF;#'(;ZjH29b_g\?REkF>,mQJmI6=tS?L`*4\UU[un+5sG],'e]FTZQXW9ujG5O"k3D=PNp#KFf-KBK.M
%kBL9YXVej71@3?7nbXP[%[X_>2D'2_?"cbiZ-ssE"n(I0b;P([SZb7"e:4Am+sY(F#da%7[4kT*GoD+$,Tb0'6XDd;RP"3AT?^1N
%;0]ZP2tnnD(_j?+T(]m<IL^k/C1bZY$>p%+113#k&sVOA%"_]\HKBkEds^-tRQqqWGPV4CMNFI1j<E*,`F)[og+8s/*)XWE+/q[Z
%kjkI:)7+<?VkQF&qR:8E=e[/r0Il[gRq4dBJF;EIT1XVEX+)<eVtI7i3u<eq+N6*60i/F*^#.S??>G?So1Q>,0;tf:OI_[PV-7[A
%PfFKkdKcb2)V*R+A;CdfQ<)"-Cu8pBWXc'io6KE:;>#kgf$5()+N<_i^Ha^?kKODg#VssC=m+"qe)U]rBZhO^MI,fr9TtbjVctGG
%fuO=i'I/[og.PGWnVE&Sqb$s)M2?F#]g[t2&`PgCf0`^)/ktZ"AH)Q=FU$kZ-[3t8Kb57KZ&f6IckV/VNc<_BSp@#*r9YfD?>WM0
%$)blJHIA^"Z%=PZ*Ft25O#0)-H["t!a+uH%]K6?'Sf-@2*7K$>V+"I][ci+4<9TB!]I<]Aq$H1E!)H@p*:72qg2"s>k.5!WT`,mX
%a8f8`bcAs`MYq"JiF\<f=L)0W[qP.\>H1dW9S`^bn7.]ECZBh$dD#W:S8\RC&j@!pWm_?GLHD[@ToE?F'6@6%+?5dT=*VM3O^^ZU
%7%1aQL_?\P`g5hgc?`:;ROkq#%$!?p@A.B0l6br:\\uK31_#_X<2*3Y$^`cHfM2QD43[/fChn;9QSVB<TBucdj3Q(H9kg`_$N13%
%Ho,JYC!ns`c/Pa8MH*JBR:9G-P-2c8\hZ(6U':FD-FBa7KO+5u`1B^"DgnW@RX$%L=)EAVlE[[?4HF=HJf#n"\OAT*PZ^aM)X&8*
%AP4AEUj>ZB#K$-?;t@Q#WqNFQ3^#THd;K>3<[:_J.l4,8Se;5oU$2LL>/TR*7^Nq0CE=$4O4&$*T<]5`lts5FU%ie*>=P:kC(fSC
%PgL"%T1(6XdUGUnXY(uUTI:L_==kRdF_W&c7WY&sP^J@$o`"q04H9%GEPFE:B+jsF`[>fJH)fk!E'P+5:!3p$A/&*m/O7i)]lYa7
%*c.VMUq,!@j1m03lSe-fTP#hYqp8.&c3o.aWbn(jD2iuYG;/`V2LWW2P[RmePajQV2CFOA:%+6ej2+)BP+<CYpl+TQk?iPgr]ji[
%dM^iZa8qmTOBp9ZZSJ;7Tl,?WIrq1-(:[@VgQp43lKaKmf.Tka\`E\KcZDLEkq5]q)#e^-Qn.]&CF/RPZDs??IrXWU>$QG\aS6U(
%e#^mSVfjY].sfgG%\1G7>2U5uO4qGlf>,sIC[gXga#RIe\mXi-?pJL9TjlWa*,l1!%)B!==;QKVJ0o4=>rks]&c5TsO](hn`(S/H
%$/%HrWi)$4];p:Q*%a0qBSjV_1KRd=g*i&O]&HRMH#ceCd2#N_bU"8O;gi0MWEi/Rlb1iGOhel$'M7K7TshK)mc3;:]<Us+2`(Aj
%^rEdXVO1[%=@A90JTZ"m55Q8HUCoE`>6X`)\gIV]Gp:HigfFAapHlhenA#Z"Dg)iBclI@V8)c'I#S/`O5q#r,&.AEZdL_ihYc--I
%b?>:g1ul#C#A5&(Us9@1Vt6[92j',h)C'*%5*[]LGrr^_MR+3uC+W=c@s%W[]7"8O6];6parYOhZ)o'k.:X9$F3L1Il@aLj6\dfY
%PtK8<\hm8Hp`Kg_V9qJl+Rdq\K`"kpYf4%+iVU2tH.+"_cs9=g+HFhhm!NUum4M0to!-uL#S.$"`XtQcS/*(7`R<t&?3$V23!`Hj
%%23K"!9l2(Q_c`3kN(kWRP\$&cC3_j"TJZ$2*)-OE9T!k3P#K[OE;YLFO]s\&`G5a//IMY\U)8X^r!'1Br4<lO<%B,O-X/pZ6=#!
%Cq8Xt!sqn8Wb-I8b3Z*r[F;m]>d%gP-+#7#$KmJ-OWM']-4uNU8l;Xl4B&$&b>A[9)Y;qTTmjS61]/QF?2=`V?(qaM=Jt;mRt\#W
%C6"VF8CQ"-.colTkO,rHe;;X9[cm"l_G<pXb!oAtEh&hCVqr;)J(nN>nISGO:oPM)A!&_"]4=3MBdk)Sm(R'%(-sL2"]-6M[7hff
%B(JtkDRsUF*kUb+8WP<;A2GC*pJ6,&Ai+UNq,*#pm?0Qu;DtA^H6RMqQWs4)B6VI1#C:;<*NL.q>SQ!-S;.8FPRG^,$I5k:m"^GR
%1H9nn7q#&YEKu67T,hN+'\@eTfM">MmP/PgqhrL9[`h\.[CJ</r$<2/E^+!=TpEV^.5-jR.@ump=%7/B.N7/fZW_[^9FP1t.Mid4
%X,Fh`5?"/.XZ_2MT_L(V[?Gs[J3UmZ5kR;>XXW1m:,`e"65.3WUTIc?n.Q-#:O\3X'M+hYW0\-fdu-mJ3V`&6T(:j]M]XE0Zo#m)
%Fd7ENJ!k251;#Lc7l[]*C2&X>'1r`Mk_uXUH-"?F)2q<kKVmF4T*s]%=YLcgj<CllcLDPhl:3h4bAp:Ch-\Z!h#ie&b:G`IjrY-,
%71]&+#PEgtUO'he@pABF&5A#ZH>--+("QNs(/HiZ93:(^A[muZVfjZG+^\K6[ID0..Aia*HJE/4Y(<]c<ZaE<F>La?oC\Aog"3^`
%@`r86)7XN&clYd8>1td4[Y)1B?O6=e0^+&6,UiNY][f;8._i-[i#+#Zd4*tJ1'"9hc(##-Y0iPX9Z&OIb'"rJ?ln!Kg6usF%V8!C
%kds>ig\*O)MO:\DB8r&qI[oBIgo#%Y-t!p;$Lk_,D"<dDaYim.XQ6;=a\TmA]=Ou83FI?BT>(1iSFN@&FsG?7TV$\FBk30K\@IsN
%SY=`8<dMt*qDHENa&:"Gpo2f<4n?SBBJk"G055.ZTgN\UHh6C)h:V*f[kmri)Qe%nDYjDk0PfiV3:'\dT-CDnlCOt'*%P>M<tXe6
%UaFGW>p<NuEkK)SHe_g&6=4/>Ir+4dXA<]$*Fl5g=(<,DkZsg\2>:UAg>[f=5-X_4)Z9H]EK7egNm[#iR8%rSZE="/34nP,T"hDK
%*Z+PP)UX$W!HL/tiTPQP>/dY,;*SXii>iGG'eQiF['chpKeN8>@kleeaW%TO^?0:TR!8>N#jQ$TFf-g=DqmI`)`^-*42G8;?Sh[6
%Li8f+J)o1derIQs-sqJbGHL:/O'Jp7'7(Usp6=03k](,#E>8;EG[c([!LiGuNIK?7R'kmUqD_V%8l+YY;!0O(=f"!5e]nsuX+l0A
%pk-HAdXMcpb9qCN7B-s=4Kd',1cKP4@LMQTAYSP[B6RW`iAmT3O]5?n8S.D9gpIoY&?2V%RpdcN_h@:8Wp^cB-sm`>N'[IZA\tNs
%a]^I#F'PN486:(q'OMdI'?]q:#Pb8XCZ1%i?8198C_^ul$;m>h9e=dn.Wgtn<SiNp4/m6U'5P&@1$d!9JP$#l/+RQ`">`)J7G]0&
%EDM1O])mMPeVsCL\ePlkOZ+dpG2DMR$3%8"hP5F_GI>"Mog;![;QtZaWZ1f[M=RRcqrM@5"@K)o'b>V'K7)2oXp0g_Z$N3t/W>O%
%"uBA@Sro23]EUiEcqFS1b>A_H;N!=$6@@ZGhV+W89T2(IqV8,i%Ak[*^9e5qN@X%!ZDs`=-OCtXfi<gLQMh5qqMZXS6sYE3;![bV
%>0K#-Dde[BAC=<ZJk8,;r:Zd_3I#Qq*c_!OJDGtpCn_k`ArEelG34E&psO\b97HVNJ*$`KcB*k?4ATA4!h>^j>!<L3[#7jk0=G5X
%R]abEB-es5bbp0CH#daQY/QcR+:c1on@_Y4d3qGOZE-.b@R.f#Ek#5B(H@2no&Ii'BT4I<\W:mnYt?+g@>\+i3G!?oC/TRZD2S/.
%+IQN]#*OnGU&hc:\:.dQ2&?kER$bQ1HVb$oYg#"<**[3u,a*H`_jlg`d!IcKAqE4RT_@*XSkeWjI]4!tT42r%K"Qb$H?l-WD_!!m
%9#!/@!Jj\lR2[1J!W+kJlqR1>m6GoRhUFY\!&*>G*?:e0H+jQKl"k[Nnn+g+-egH!5eZJ9;i57Zg/uIoP:H2#M843p_,"W]=?tUQ
%"mfhkA_AIH-,$&8N#3;lg,3QnaKdY7cF=.f-Qs)!6<EJ&3\#Q,=PEA3d6<lsT/s3q7*D/Q?7StHdHFF<"iNgP!ZEaM!4JFK-[M`?
%P(Qug6tXg?0VYIs.b]jZSABJoJ\/enk&gSsX%!E8V6Pl,n.WI%lg8U0kjSRS_;QpSAIrXs=9q)an/k]!RgCNck2n/"-JLgtVF_bc
%n*AUI#3#(kkfc$=`m,_(ArXJ[Ip<[h49''TnZ&eqLSM3la3jr*C%5BoDU,CiRD;i<Zs?j5pJRpWZ+,SuNr@gb^SEQ<2lf9"K*OO1
%aGoU@QD</aOeBt">pqLdZgk<K?9Z[)'AA1BRJikgd>)KVS_D)bY&2NY[.4Sdl43f,)csG,r@`:[qE8akW?f5!g\Rl2<RSsU).o<c
%(QC%V[CGPSMu*3NfN`n'e?25%oE3thX6$bU5#mS+Dq?4<gj<+:Ie#38qteac">:^Q?%#5ST()p^U0(rQQ`^sG2HMlV[YR"qY`ae1
%rp0th#`ktg4>Ek6PLZ/14csS)(D4V_:6LlZiJi-j+"O3LF\o;=D_5;BpYi@og,sh![:kVmVW!Nq(#")9>=`_b@peIk]7KLWh;J+.
%gH#7:BOkA'\"3EC89\:g*L&U^5G=4I\j)H_j[Z'!J?$5"2iVRPTg`i9Vo1l;6oAIM5sl#;<Oq)3nZeNFd8E3:Dp]X%ibDG;Nl.dE
%PBQ/0XRa9b_!J?)i9aGbk4jkn]ZV0,D%FaI>))uTPVh`f`3-NHM8]Au/]NU12^D&@iMAK$@#<G)H-Mj4VLN@%agbW@Pc,UYUPhQ-
%L,#t`>,Ppr%&;bZl]?BPA3m*s.s`J_FTWu;<uXW4:69>O&_J;OW$AfYJiT4,n\<tNe.9'emdPZE61L(K=`_qJRUt`1)DTBs^\Urb
%e!6^Fm,eCtS-`Fm6eT7em?Z:e':0ubi8dg8p?DYLCnAFYT&\k3eLJbj9:O$1eWkOI1O[!.mF+ZZ21mt.QK)J"h6*mI^WA_5>mWN$
%FLj3[@W]#)HME,DRV\tol:;sIgBqMZ"k]>?Xa5/)Z]?PYclf7Z"SN3@X@I!EVCX*]jc]=.YI(ml\[,hc8OdVtEleFJ8ut+unstf[
%M]UdE9^*b#)q7jbbWs=hq9%L<Ct)s8E/`<CQNUrJlP8ObPF>iegZG.a?IdJQbn,%l9MXag8QhL,L@cY$?M@G)UbM]q;5C5d>X,r*
%68]-<c7VtGCA2Rf^!!mK>oN1:!XqMpY<HJu?!>ln,BZrL32(-L<kVs'\Z-t(bVl5u%TYi1)GR,!;dAjD0D:sVCl>aN'Mo;AT"Efn
%@4#kAYl!r/WnBLpb)Ba8(mUoI_9.LVMEc]<cLu%d(<A2,LCo/g^GDQ6>:SSjSd$t$c"Ye,g94ZX2bctBnDK+'1JmTnOu[8sV(-#+
%Jq,mc/6F/[V_99iO97)=$d>N5U92IFKSL]b6\KgtA1<IaDarMAZ?lqSXkTuJ\LudbG)8.nU$&L>C.hi9fVdG$/fc>-.HT#YFU:<s
%mMnqpI2S>j03:Ol9FR;)=lc6%DSDUPVNbKdUL!igYY/H091_uds.WT8d+"jGg99+,0r;4ls8UWQ9=fF3+Q^"G_dIkt1XC.3n+UF9
%m@Gd>Kbis2%nn0\jtBCHj,#IC,&jr$BghX]%C1kIO):sD\rp<Y\3WM=Q9Cn:T_\ghBTY0*2'J2g7t%Db>_>t^,!b^f!k;Dgj,`Y$
%mk!IQes>UFgg$K9p?ct2)DJ.NgP^`t#OJY?XRT6V0c-,hfon.MH+^QuOEK>M=IFMt]`hTl?hTk/7rN.m$jaD**-f$kolJTu'oC6Z
%0i5Vt9L_71aLW@n=qXYf@UTMBHg@LC,8jXa)<`&/aV!8QlChNNdqlmhb_?Z0F7Q+->?Y%5!q0iLGqC'7iUP3?XXM`c9.n?O:R>O6
%[DTIp*C:q5RKj2.?Js-nj:8`/W_Xr!/fQ/jOVsP!YQYn@aB!Mi/5)r.$tKBJkV!kN+aQI@mSq(rh7iUU?5H[Rgn8$:Ve$jCmLVB=
%K:;?ma&Y#=Ch/`,`U]^(="Er;aJ%K9qGgpKVfD1M-7>:[Pa-(U:,2c:T5SB>e;0i6[F+bVIsXb2$2LQrbLmLjO<lBk96q\rj>pkL
%29'+:;*cX_@BXd":SB<'0hZ$'Y+J)ml;9e'iVQ160f')T1$`U*0,r81h/7`OMAZ&#`V16I-o/e4)YGkO^5`*ihLp?^YPQ9I&EG3+
%mEAF0_JWA0;%42gJ=o0IBND_B%r*I$DaedBU.jUNn1TC6qA!sl-)s,,JTk\Jn@<=kJ8VCo=!uq.;?_=GR&"WW/1Hr^X4D+^s15<r
%e)f?+/rdA;1BWfVk<3EY?!H!3F'!ck5#1IE<bLCr$?ZHHUE_fY,(iD'7B?^B5d(u4AZN]r-HC&ef=p,-igPlA^o;qL6e*Ea6tYRb
%C8Dab?*n)UDY09e/(fOWD\"N,Jd54Lo%Z)O%AsA)$&"/Y+CIHEU7I%S<Q`j+1SGo6pAL.n#Md$r<SrFM3(C[qnacHKQZ"7`<&HN]
%9PQEaa^_.Ed_\2ueNr.R+lfiH%H`Na8+sm.h?&m)ZR6%sk>YcuCMJauiole*ih?q;N7tsSia(KGjMfM9ZMd,<Ce]lF-"g&^)U6A3
%RJ0[IVlDQ$P+%02_n%i<'=qdf2_e^.:p7oCZ'pf:'`1:Ip(F-/2TYqe\DrCZT9.*`EJ3KlABM)"WDSuf($%o1Q,Vs4fR9j:H+KWR
%=9&YIUXu"@1t)6j<S98YH`A_N,85I+%<]A1\$LK4+T0`F'eYnEq6$kOlr3:!Q]2YJa,4'-ZkAkVg/-o?#5&gQnJF-BJ>].m$d94O
%(-ZY8pHZ&I7kr<NBPln,;VLl[Qq1BtM+Po&lqG[Q(b,3CQLl,3,,-YWPu_q6s.?t`=dIfEQ:6:W_`M#.m$m6Chf*.&@uWM(s8Tq\
%4;'nZOTZHCUs^!=g"@WL!4&TFb\5h7`kZ<L;fSG[@4i@%<_.GCi-<cRP3-F]6g]1[>34ug/U$$5O^&j-)d!/6/HhXHR;PIg!m;kC
%%8's2%_8(W3)K:-]i7E`[C9ZIE>I*:pYJ=)9d>MD!_68PqJq)SkPBhW\KR_DIXeEfG`mjIg602&:,9pNiLePE6bA(np[[0'G@:tU
%CFbFa4!X(*S`4uS%qn@Phug<HR2U'J-?/-'WY3.6XH-KsJ:,$cDgT@M8ACHqDqmJEC?eWd:4p(_@`$-%kT>lJF)="h<V9ASA0I7i
%0U\nm>0n+:"4Om;V4_m\_p/V1U)XG!BOmikM9?^FYaPogB0`g]K!UMAC]UW7H@Kr0-hp*dOQJ$*((@jF=5W'a"*C3+*MMHS%qaC?
%U<iS?I;7EWkh*3BOZgnZHYmV,Ch&llS10r2]R0pHL]!/>PuVH$rL3fO8&*]8AuZA7@R7LMnrg4\?4B=AGZ6IY<cnO5pD@\*K0@5C
%3VbdU.)2AUPt-gEl4tjUc8gOEo`^DR"93U&S#a$J(^@.s/5Aq'6rXLZeX%L")8V%f/,qrYE%(.+959BC3>+C"Lu2#K-/XPe_'=:u
%[0td\-7o/R:rk=FN!QfDEq`lH#ajNP\7,eTQ(R:/rEOi,\(`L07]X+l'WA[OVD#BG9JT?Grth?5QFhWf0TtR+,f..g/^p.3Wk=j5
%eJ1:C!3#B!Hle^ZHuH87_I?R_i-D9ieM_4cMW/8ol`K\+=nLt;J%<K;A>7^>PleFZCf)_M;#+;4s*-Au+)IqO+;[VFBU---[P)hQ
%/'uMpS_=mB[VU4r@\m)bMe2`G_J]la9bi@D6^N\OV%h%1b3U?G1'4RM,u4I>[-T<4;tDU*"'nt"p.\8JL.AU>(ppt48pS+jpQIc"
%MC[)<C/?Y`S9sP\_Z#`\lh^a(-<[GsYLQt\b&o0*1$fr!`D)cMm,CoelHqUhS.^0/jBt8"gOQ\em.XI3r2"2#pAGc>1:(nc<=QdT
%,_A1F(L.?SG!al&BKdJ2kh8b]>>ib\(p"@-9FB0lU5%IZ6[j2C<(6;@>D57X3@8KAf@rQ9$K@9r[trpnRGc=d`CqG89N;a)U'&[;
%%7#Q:!RB_`F[5loQYb2/FD5+Nnbm!ZWc;\V7^A98k?M&SQM&5b.[,i*MI3EC<iulH4Tn_XOZ$!ggH:dG)3*Cs@]"52?,:N@%*\dk
%W^AoXc&/0]<($;gMUFsMNATD7Hlpd'RqfB3SWk^i#E[#R;_N]&p1?tR9^1Q&&p)B8.Y(Et5H:0P+rZiK.R9[/I^"F2Id&)-9kd+<
%0/d7e0IWYVLi))[_[4;eDg#a%6mF"P[r%s*AY`f_\4BKqrnuTf9eha!"QYN$8YD^?p&09Anh/n+(%V$3QIXM#I^L2nU2n,AY.)'/
%/CfH-_pi;VL![1FR<Z39dUf=iAYuNYiHeUuKGGN[PX3_snF!%&6As=_'^_^/WHkN=1"91V.^L"Y\CQCA8&g7P!R+cWiI<tYdgu.S
%HfR'ggDC80K4P*S_@]m(,pG5R+B1HG/Npl_$-4Uf>G.K\<O4Nt8cUOpPUiN==`ZX93?7D0M.U0r,WTX*2:gQAcKOE0[oAIS"Gb[O
%#us(T[(+iKqmd31$0l4B)23F[Y.D3As5^'RY&'Uo-LnapN\"@(-?8l_L8;snB-<S@RnK5Q:XuTtQf`&Z?*fJe(r=*PlCpbOoUf$K
%\#V-R?*,D.&dg3AckCY![poNj`6H^><=F$IAK1QfUD[>oYZa@#PFed+&WE0VX"giO^f:jMec4a$l#P)g!B.JGC@>Pl!=3,aKW5V8
%SmQf;;q1pb3+n-)=tq5k'%mSsg`#-eGAj>a^)CD8'h!%^oL.'L4hdQTd?8h_je:TI:V*\]0'oX,==,5)b4&]5dZV.ZN[6uSkN1T]
%7LEH29])ifkR),V>W&%?!5lTH'S4]bmD>mmlM\iFEjfr;!eTfjM:RPX6'\Z3HAA9W+_f5hQV\t!8<uXlY-$dRG#HqV6E?o.3u3Ji
%lbR+L1's&\*,FqPHuT;&4[f688JH-uYkuCo;-8A$*MgGQN8/TBR\4'#8K#<+-mH0Lokj=%BFhU+.U_gg@d*)tTC6FieDtH;$7A4W
%T<u'[Xm:o0JZ%i#=E-TN4En&+0>90tVdt$i(1+;+7V;o5)Vc?7'.\SWb886*/qsDBNbN3]^l'aqfZZP*W22g1dWL\aP@!Bb:_e+4
%q,o8WXa7-])udmQ3W3>iV=_HsX1+SRZ+"66Qn7^mG*a9Ao!%[-,(r$#Bp#*fWlRV^k;/'-QAam4*@c\PSWG(LB[QnD?B,P&I1nKs
%/'pQC!Y_Ub!?6b:XNR0KTC(.d7tOlIcgkRnApOEu*VOnI3T55OA"e'lG'B$p3I&L^bO/tF3,gl553uBkE%KCtYUf'Pc;U\nAdt#,
%=4.qTWJ-WU'eDl+JlHa?h:97&LXi$.HU-4,_FfVG,b'ibF1RgRKKK3'Grb.BZLahsfLMK/j[KnR<CP@L#,k_Q.+k2-c-4Vlb(LHg
%j/c'^Ai[6d:!B8l^@Q)n*fM*A?>!RkTC)@NI('taKT<@hT9U7<D1u?`%QgX/B"pKd\c;)F)2UUKZENK&0[r50F>[X7\!9S(G^VC?
%"l1G6=Gu<rHXTd@FDtbs7?b\.>+J>g7OePr;[^oL(0qH@P;V]Le8=h"O/DR@rO%E$lbFH1EH8mWTEoEf?/@'O9IJ=3k;@'^fHT-`
%erS.kFZGqR3>/g!9r0rEiV2eiGW5NUB7EeD+0<<eaRr\\C<(h*/Q[-=aM3!#(PaA^Y,^mn'8't.>2%(L=2i:fSCVM8aK<!)K]q=9
%EimQ+Xi'YT;r\mkV4\Oa"j9Xd-<7qIK.AK,/NsR`rl:co?1c9.+9;PjYrPg[JNS^*@1PB>6nm`TPtSJc^s#2IC!4'A2&?VmcD=[S
%6D(bZO_pOJ4I''M-4(LiVkIB1E+oDD3ossmp@kbV5)n$uB#$R*'i=`pVse7[<MCkA91]m:J'KokD09414/XiS@WV2Z*#m&2E>_I(
%3L`kW5n%PgHW54b0RuPf&W6rF.'6p8J;WS!C6,_IJCPC@C4mE'23U=m`>,ZpQZl2b<gl6o(lSc^:i*sarjpM`.AEU;GVl7TQm+C,
%G[k6H1NEiS+4+NY?jIOC(?Me$JflYleRC)lYh2d>re<CQmRYlr,oY_S*M6U>UYK!#[:i)8+&cr#qV@Ve6f;?`8'mnp(T%O_^!HG:
%I;2)He2g3tBg(Q!]"5+!E(SkY`s$4T86@EB">_Js7")Y[_aYcq2cHc'e-dSWIkig$hr=EGGE9ip'p"tr$[[!,)fO4OoA-=ef4ENN
%s5luQk)hNfoo\;$5(Vh(j(ms^WL8nr<.?'Y)uNO&#^uMWZtEffs%CbpNiRLNeY%-4cNQ*$\!oi=n?p4!5f1@W*)D8#>:mcte^2P.
%0u2lB[/\XY7=0,i=DuurJ,^5-Q!KI)_B.=EemiLblVkharYkcD]8StA%s29O$b@Z@:jVf,QJ(<`SgcX<l9kf9s)ul4C,KP6ZbBg5
%D9&1;f&EEJo9e=?SYmSp[;4/2q;Q/U,uWCo;^9k6lqpt8Zha$o20aT8G)j=\c<dB`9;%I%A9PE(a`-#ENpH_PbT9j[9J6A7RhSKe
%\!tAhQbKeh9@[tr"@m(S(.qE7HRs9uR&s/d(@BK[BQ$S8U:3=O$i(W@O4rU'ollJ!_66WTkP/gJ447,sX`7,u3b%/\W#J,Yrqr)8
%[CSSH/Dc1uhM[`QhigePMBJo1BhN?,R_3$:pR$=O*C$r82G)^^;S71FU'U15ga%#$0Ktfs?cfJtT=ZQMQHuW&q6`1P*)+OoLUQPk
%6J:XhXTFJ2ho>90#+(djVg*6`0;\%e6%=9#CR`.MZ4%Sh<d3BQ^]1$<r:nKb.e]:"ao.s)Q*8>Fg=oc(NHplsr-lC,Ffk$;8L5Lr
%iX:J7R%Y,_Ku1ao`$Rqj>.+iiNA._aY3Cs$1^00UOYO4\0(Y&W[#3G&*VZ+0!\ojkJ;g0mF(;r=`YaRI9@@[?0bilMFO-((oJ"*S
%*#`15Q2F2Cmu71C=\LOo)iEuPFct[V35aWl_U&Z&R;=teqTGa1G#r0S$kl>uG$WIF$e!YC`+a)H=h-kIl`!u(*9!6-/_V@T>`BHI
%h5Bl]h05e,Ia%Ympsa3Fr6js@Y7%N[qYM]W7<Op`K!'YqSiRk`/U>`KBKOA'UkjR[p9G.d8LNiMa7Shba;(u,g%]9MR#d@l6b[[e
%iFF8QDq#WFMP>W7&BW3c14@G)*"SK`_9-_q/\NeEcWL.N3ipt*F1=rqJq:?^MWW@P3kj^)VfCf(4f^1rKkMZUSDrYB5AI>BcW-,9
%+rO]#A=[:.U`YtsL<M\V"4YGq@V/*K8d7"IT<&GL))U\NVs(H*9&(uQ?tDN]<:8b%?V63:l[OMlW)1T'/V!qi3D6'W>P's0Kf\TD
%VoGqJ0'K2#I&15O$<r,(,]WU)@@Kr&%j(A^WuO7U(1XUoHHu.H.5d?%a%u]_Wh*(a#fR+i%>>Qi##20-L[OO<YD[GN$jJk+$gB[(
%;?=i\-72U8[MZ*EFJ'PQ5[Ckj[K6QJE!&um[.D]TN$T3X+e-n9=X+j2H*s59.!KB+0.?/c".b#-$T-'B*l<&V6,"(r=ZcS&A85ML
%8h^J\@"!\X_4mGML!4E\0LrUL@JNX:+Cn'ckXnBcB"Hh>4ktrX9_$E,6fEs=;<;)GSTN_ubqlW3pF?)\L)6X+.lf3W+@4U6g9ZrB
%-AlAB,;%4O68dqVis^Y!E'OV8:M*q@,;iJO\QHfnc36jn6]&0]o9hN?lDg%D50Kh82V_@Hl0nWZ-QKcLUK.+7^3Lr'!0+Ig5LPDG
%;Qtm8=IQ&9'-<>CeNIB,_:k<V-+%,X&rVE$Dsrt:S>7p]Yh8gqs&\[O&WN'E;-giY=p2dg1Wcs`$;^5](f*0;n=k",`&Vd*!Kfth
%eIE0Qq@'.KZrQ0sKD9heLaVp.2[pZAM:l%#)^K?SS(n]m,F+9[:ZT+5I#?hIs-V`Ane@869+uZ[*H:mKST/QVQQB#9rF@!a"l$='
%2Kc7,,.D5h\nIG[%VB%M372HmR%0c!@I0uMK2@.O)Fn)I33P"DA=;YQb#_NJ0kf!c$+b3D_UmA0Rtu6^<WHo.FY]c1*'\!^QKi\-
%U%+R0NEV@i'8jV;<TL<@+r=sm0R;63%GhEuNLH4MXVa/%hit5'DXQ`]G#$t:8>A=:i3,lAPm%)fh3kqJ%7YXb$g#;?d'CQI'\@NM
%KN29>L?.p0eLX]6nA-5Sj#rO%K0(n>V&;OQIS.3oMd%ZWP&%<3@B@qr<NQQ"\^KM/.s76>AJ%+-kJ9=,mui(YP-8g[l^7e750/DD
%[A5J1+6ZBlQY@f7a8mp9OBpG"p2-)C"X#hk0C":0I<&%`'L/t2$N'E)pIk+(/Q':_SPI7SE[4.t$%KR$b`7SmOrr(P3!6N$pM6FU
%&mV<G!<"XKY1nA>f<RE1GE$A!*^8*U?X,a/MoQEX@!lcLG^eq$Nn8n8^tl>I^rV7+"!cLTD[9ta!3)Y=(H=gu*,n=eKs;l5:G<8U
%i;.FKB2A.5Z?p%[0.!k6=8,D1=`m/UGQOa$AKu]A`S,Q9=3lroZja@]djP;m6$j#/9Q5GtTA$agL2$?u2,r^TqNkrhn^sPDYer?$
%op?8<I;(pZcNn;kbF.Nn@;TM4%&.Jh*G6Q`H<(74^K"AHX*_^&,d.tG_JNkj`Qhka.1u[/53`QA'S.c)54@a'8+gQ8ZtcD%n[",J
%@nQ0g?FamWq-c=PVR\+e=D/#Go4$bEAEV?blqEOtG&X:tQ99DV*G9V"Fk4D<o7YJRMN4TNQ`j(mM#C_TS.R,JgZgM[11k/fF#KBm
%\@4On$On'K:d)j[aH$K.Jktrk>T3*)M=Z2\cbO<kVOKMDd<O5h=Z7q5Bq$2^-/2Rg>B8ruZ/r.#;"^1b#$M$ad4u[Yg7d4Jc6+1>
%.ibh04&b-AWGkSCD:3B"kcd)N\WM#JOU[t\;>N@)K9$]DS.M#o&7Pd4.)aMEfKpgfZoM9jlkh5n`B1hGGdm5k.\p7C,?RMS=<Ssl
%^f6lX(`_efF*/g^L(<,[Q:ieKW/3EUnkJ73Da^[t^@&dMTR-8nC<a+p.rGL/@c5)P-39=aE7[^\*lT9H-=Uu:Z8l*bs'$LepG;^n
%(Z,&n(ES<@0"fooKguY[l&70>9H6g@h]BF;nDKj663)AVi!E4e^3P/h6S,X4QFGX[WoY*0^O,UQ*K$ln2P-.RdO(ahFI_?d6$9O[
%7cP5:S1h&'Tg#[T.B][aSe4`mlCL&4TY&XYn6-H)Pree33-.$n^XII`ne?0%ok;X_A-XQRGE"(U@W$<OQWX":GB_/Q#IG(=ZLuAl
%@$RR3M@U)no\^I*QGK8*WD"B%F]jAT-$ST.`_o:s-r4e.U[J&3rh;LMQo0X>`WJ8+dV46L]%o>?JtYQ$^T]S!"!4_VS)e1=f8W+.
%ij4lh@J!^4i)LgH*o-m-EZ!,eTkZjo!-5nDXHSH_E^L9Dqoo,\c/[\bCt/=8R%>rhSsAtrD87eNa:EcQ;]J8Ur:[AI\#Tb;;^WQS
%R"CP3a&9RNe1_k$3f-kje\r;]>G6a)oSs6J=71/ecq6I11P;.@ZT`,7giL"n:^HKs!I^YC3L*%q(*jFPm1cb9V-A"bkGQ#A0jlp%
%N&Fj;qhocsHQ^(_r,(W;r9]c`k*=g'9P52pUZX'n;ttObW&GHd*-=JB`XW@._,lPmQZai'HjnFalMa_o(@@69^D`AflgUm=Qb%Lu
%&lWuV>E>o&Y>62%phP=B"n0(akGq*;?b'<'*RepkhcehL9#uU"O'jO7juNMnP%$<W??Kj9,t"KNlc1cPTrQl\0@6Y65#@ia=?tQ-
%[:QN%PIZqL')Aqo)GfCr>?9aV3gt5Q:^>*rGq6F[7NIs>R+)o@d=-gOe"6o[P$m$"o>WPB5*u<!/:SE!:Lu<[M7NJW1pq3$N=*XA
%2dCi)A\dEt^63=4i-.0>4u"WH>AE$(@iN>7`GI`!ZEWJE<Q/dJ%qIs(h*%&U'lWiG?&Nmi?5IPH`A/[hQUW0SdcsY5gjA&@>*&L+
%m6`h]qmD$Weufd!_8>^%(^8SV&Y^km3V^31CG"tBg;2pK(G;(n2iUc>ZCPhodgI%W$ta12<tF.M#(A0h*F8>?/_Ztt/9t_CjN:c#
%;MMABO4rSg_Rmk>i;'A,3W9rb`OIJ)-u7I'Fthrl9dVqfkC6NEO/mU.CZp6ZJS@51W^N.FKjrZTE8NMO"I"aS*;)$"+P>/-!N\0q
%4M*a7[R+_XC=f1Co#9/3F#/c`or/PQ[Bf*q>Q1q%Y(<^qf&6A'gH#7j#`iXk0YmPY_U:f<9-`8N0Ne82r`p]V#+NM@PY(C:3lB96
%p!P%cX8B552oCrS^88C6hq2&p5@F'P[(96N]l#FTY4862G=uP[H\3o:Iiqif7,QWF`R06dPNVKI$]c1cK`.]$P13Bf&.mB,L'jp&
%0ElVheg`*:*_)_FF0HB^k^J-H"dYE@NB1S9UN1(6!tqN%Kd$^G';e,b;>NSoDKI6NbR#fB[GY(q-Hu,KdI?]=NG;Jq,A&m4>KWC)
%GT*m2Q1;SME<#!cpo0@QYF_l_jk`!10%!<\'JhP39hs&5DMu3)D:JYhZ$/\:Ec]M2A65GC>n3pf4(h2FeX`DQhDp(.=.U/@B&F@[
%:Dr:HJ3i8[?ED5!\ts+Il^R-eY1U@RNNl*RXh`:UVoA6,g68o!'ml:(d(RtUG6Uq8!*u8KH8f'J'm=FbKRH`mil(r5O>NShOsh@H
%@dRRu4"Co%*I3H8TjdT=UJpd51)Pi]3DJUKF[6WBg`D@U%LU:_eH8doM:NH?HA$"H7"-cBK4GVI4?#iqS^EV62?gW&HuE"?.FL:I
%g/E1KXD'9,).%G4a.s!d']EMmekX79"_%lP#]M?3l:6OOW8"UN0LA:cg_+W5#6$2W+UbTOFQ@D"1MI"So3!8bBu$nu_>D29FoJt.
%+q44j)C'A5@t;FYm*TWZ\lMt3_lO<I[i)hdY4KNRQ$3dC<\oaOLCb<<#QDo2)KP3&7k?!8Oa,AJ-@uHAe%mS?ZM19ld`/eflpM54
%"HF)i*;:,Z.`]&E):Zrq[p6D2Wh>q6e3hB]*A[AGQrsSHBUWhm2:[&I;e/8F(R&ahH(8F;ZfpIb@=33h9F6,^=m`VR]puJ,:NYUG
%??,=l**f)hI5&uB!Oc"Z&j=M%07_QTI,r+?8;:'p+oYHp_\T$58F+Jl8P.7G%#!S-@h."T26eg<&9$*YVrAeC,HN.>8;Y_'87UcT
%=u=&"]6$!LcQRC4<k^p-'G?uro+`D0I`/0mek:/R@cj*D/8I$*95^VWLn%r7kpk8m92'_rk'UUEY9gcXKGH!(/\=[!;tPh[^oHbO
%BXV-:bd=^G+826iUW5@]1?Bc]OVr6[jA7;#?'/a]QF*Q_.su?%7?QtKISHm203O(Z"52At&nDQA.=n57R)^Fu72NK=DJ/`'X3&>B
%[t0AMW?t[M[0IsT[Y`+_9j!VS*71,RLn5TpJ=2j6oO7CW-o&-`!E`S!_BWI@n'BEclB8tDMEBk0al!6ZW^S(EVEk]ZT>Mmo;iY]B
%KF[YHp!-?-r9d1acq$hL,$i5KX)"O5:S3@=1*g%\`Qn8='X'#(Z2LDOOd.*s)FcYhXOJhY#T<n^?K#YhbZq8is/f^7e1gY:ST<FQ
%ca>.Wo"MAiC/-&9F#==VRTlm_-[;-kRuF],<=F@.'KRbqVcJ`Lkf:=n<_I8^I0rMgiQrfRI#B;Kf@.dK_>C.uk'5Q9"Mk-QD@,%%
%F6J@%E9Jc7B3UL5Z-:'O#YtV$C/1V8Se[hs!-hsP0.3_XCO<qtbO.^DXP[qTNI(B"Q!Kf\?u/MO=7K&8(94<CAL2Q#W![+Nqp_c;
%HZVp+)iZUds/E.e_0qC#o9&_K>E>o&o2E,>r3a>]]G_S8]8BUn!bV,9lk\Q(>f7HQVu#n)66m?$ICj2m"&3pHmLd".@1h_@H#,(^
%:[>=Qr%YmE%\HoVg*9s0NP-i%h<n5,0g#"e<nZGL@!lcLG^eq$NkZFRb?%.+Qp+Ap._Z,W=g@1?^VGl%,23#,/P:5N'u.gAUm0[7
%:lH\imT3sr0I'mC1r,mlfGI);],75_p2KISVH#W@h:<KPk,_0*Q'H%-)#!#)[$X6</dD,TQI#QH;=m6dq8!/XeZ0OM*o(ilUi#lK
%O66':?E"0ohF9YUjA4@nZ].4QqOV<R*f6lROplhl%otuE74E^b2eCJ,!nUJ>A>[/qa'b_3DmH=7XV6]$KHRl]5'XKt@>T8H:/cA$
%=R%\j^7XdkD_hL@60P=4Kq/#1gA[;k;W!b$1PTKbP`%;u;t$=*'ig=9UcN@2.7T%QZBZINJkrPV$l$BmN,ADGr2,q;N0Xdg(N(ga
%`[\5t$g-Ern=Yp:9d?RU-qYfAVm=7Wg`=W.T-,dg4#>7jUHO&gRaX^J2JB)bTom-G"4k,*@&ZXoVqAYfDnCh1r(R;-p&n<_h__3n
%Q%-J)E0*[b0.9"])VAb%hEj(L@J'lic5Ntg1'm\l#/KQ\CF(l`lK/mC\e*C@^8nF2pO8u(4Z]oH+DO74F#MOE'n%sB2AM,`?H;<G
%)8.A@3[u/Wl.QL*4$D@#?)CPean0fg<53h-N%M]i'Sc^`?(Ce:-JM9d//c8t:H=EY<S4ngn5CVF[5>>OUS*&_6Zc>016JF.8?6#q
%[kkV$R1au0Boo:Ld\B*gMVh`gcQ[.3H6:$sn`9oB?Ul]N:SB*T/jAsc7jSjK1i%JO$r-:hT9qng2^8UIG1':LL,W?5Wb02E=&ZGg
%:0CC$#=-9ng$AP"?L_e#YR)]gT!PaU/al@"/=2J42cX5K9L,"fQY<1!?;<rLIBA^?lrJps4VN($e69J&Xkng2K&+-0\MR7R-C?Id
%oQ70J<tt_8X[@-H.h&<4<2SSjE@=O>YRNQC^_@gR&qg4/1o"j\</JR\7hM=5rUDK".O<!ANpshR^hCp>Lc"f0AkjH`dp+=:+>7Z%
%rr[TTW_M!<\b6_h*@/I!LV#i_@s<d`.aj8[-\X9P5r'Lo)b[RG5IpGuPCsd`^HU-6qrr"kBCp;CK_j[Um'"a:nOr7((R>^uK";fT
%H$`us6mf8h%>N#G@tg5K@=R!@MA]qc@kfJ"*I^.)TplOp8:1WiE\-LR2iNqgS=O?dP"=LCK*++d+sn>1dYOm6C).$%&)Vo^N9VZK
%i'@U)85^7>PXuW:d+bbCN2i?^Z:_i2`>FJnhX!d+6D[Up)Td-plk=f]TC(*JS#>ObGs9L:\[Jq"-0?g'-a&VdoWn]?U=YhgNb/$M
%K@r(0K)(T7IkJr3YTsJ;A:=@-+-1`X,3T7,1-[AS0m&N^#bBTN;"MY(CT;ZhRO[na9?s.-'ab*bFaba?(SU/'j@=.^B(^?ZFO>**
%$i27IHp?BKB&q&]]%k1&GsQW\3K^hXB[oK6.o2Ndhorsd."W`XJ/=q`^1E63fChZtG-Te9N\jO]KYF2u&KO&sjQ:l*DViuGpjG3F
%r$F\S>A&3)b4))]);&3%N-F)Hma9MBIls1K&%5NR^BemZ!!HP$`KRMX!+Z[L&]*?$1k$1e.H"tkL:$N+HCl?2pQe*E)(5D=HIb"[
%89]2F.-70W@Tp@L6uXMqS[[+3WJu+?(+:e&PR>fu#fc\l-bFajfd2"Jb)WE<1SbmPB4G4Ofme$PI9/U-Cb2h.l'i<6e&-[Kcj\!-
%N+>$8ZitshIkq$e9^XgX:Ws.RR('9tnYh@]\e5(5=Ea2DWDRHG8Mo'70fFRINIm/hV.[&`41\6;cZ%")h-6qo#"cs.lP8Xc[^peX
%$tKc6UX:ZF2U1XYQK!uh)Z'E5/\ld7^=3E\/GUqKjIbZ+rG7OpXk$m_/1oV)Nf[UOf9a'2-lXO%4?-(Cn?$qX//l=\K#O_\n15XB
%RXuU24]<61J6,8,FRU(;gc!bjV59'(bH%C@fioaQp-'/dTNsts"Z#CXj0nB7\R[?1%-un49^%qQh,9i^o&hSSBZY09.0th/lm5-=
%C4^(hKR6,E:3)`FWIV`OXc>a5+g0Q*f`.mCd;AJ*?Cl$]\P0b],brQ?!4XGT_sMeFc;H'^9eLrk6hbnFmjEJ2CYdok`"Z(_MeDCO
%/'I`d]>u;XKWVLg(+lZ$VEA-heKKn$TLonsdVhjjXU>g:_&#CECn]<M1E5;jj=Z%F71Rm5)4S*N]mWW1$Scn;^IS_+OJ/I*5ab\Z
%(t28iV8!A4rcg,\Mr#p@M`!7r21)YiK%<b^?B.s0>,u;s>\PD7EWXUb6!Q>QQ-#G&%HB>`n<RPd(aYP\crL`Q;(Ai)W]K1%c6pdO
%5ef0phpVrYc6S:S]Ho]gPNp?i]q=UDV_1&2Y;*07Ga<:5g5<Vs2DW*.iL*ksKcRB\b[/[0mM4p3KXS6[E$FV]-iNG=q(<k/HA-N*
%l#<_A!/9LgW"52S=U'D*I<b<u>V<-b(YEXEgq(>8^VS?8AIN&frPtZ^?/&3H>7Q6XcUhqA_c\qq"pLVR!!&m?Z,jaY#B*o1NX?Md
%'5o!S7'[U[[&WXUOj0t@J).t\\gCm[RI:r*UfCnD^^_0//Yr8fhknJ`;H>./"spCcYHIWrI_&V*&1W;PL6KdA1L.]Hf([/WQc[@;
%r*)ts*_7CDHcdM4'i.Bh!+UdMJQ\e.DO!#6\&@:+Q9MJq8VN0k3_a"2Cle!?#"2k)NQC\#i4srSWr/S`-$i9)o=j?4!50R,koTKN
%B-$rkUFBK^Y`QhU+1e^4L45kss2<_EVaE;F=nrjHb!U/=_._A.LLjM/!-dPCN/3$d>E?cjeWr8P"C6pZhua?hV>T8j,/scrnH/1l
%5\\V=E4*ITPPqKLVKP<^deNd)ig#iGou4A(M8kB&X$fJ>K-5Va5S=UP)igtt+J#%e"I,5tZZRq@S1>#?kmHaE]#=/7K0#Q)<]87S
%CAqlE]$[iNNKh'@&$JRq]$XPp&9Tb3?J15/Y+((Mf?o(1RaM_T<.'dk,W9m+Hb$2$!q8@kD(p1C>hu`QD#1.KC"6$o4bm=L^>K>k
%)FB49,AJ&NSr81?pFU`!Y93,2*4=K88M5Oj**OG/o4F4+*e7Lp"]j,TXR^[umjEJ#S"amJF\A\!oJr8g`J+7<2qI^,j@n!j=6o=l
%P`'n#O(!7SFt%t#<q!&bQn?oX7,"?H-DmJBUqdO;"gYSo<InATk%W^kM4)S_Dn"7``Z<4QL@ER4T4&(&+H;uUf\B6cg.g*:@cW&2
%[u*pY."JZX!"-Ae)=k-2R2Ui8X72i]TFMFNbO3AWZ>g`-*0>#S(H9fZ$aQ/Df;B]VHkMj6[6/]=.3&X<73,.7kr7/S%c:'*M"KR_
%/52k=\Bh^b/hQ@H>uW-g-SDF`C_/+0D-Gok$;6jg6ds2@0@>q"8.%nJo.+:sfg*.GnMO>C.'sPCM)F@RW5a(cl<<\Y!Yd)(42jhW
%Q3lm`D1S.dfmHU-dr!Oec'0huW$pi+RTB3<\tuFk.<)EJOHj<"L5`&IMLrf@X@NWOM!_6PO<Z@r$Z9uM:=nal[TXNpAX6LXfs]D!
%2hQTH\3GP,I3Pb6s"<4m!OO(E';6/.W.2,1p[e@Ch4/1e+Vj'0#1h=)I^NIYic<&2hO,%SGR9sUD$ccPaC+Dd+r]:9FPe[%$KW(u
%J1'&B,F^TiJ03nZA>BNY1%EOE6V.MK^Rf1hN&7Bm_'jq-.ETb>PmeI8rPj.<*W=$R.K*YD[7:_V@[5[s=C,ql(4cWf+t/gg(_[EN
%9+R]$!CE&s0QKSjqFrbW`5G(?j[A)GZ8_F2Bd,.&oA#2b=Kg@=?s%]4<R&ilmbSYc9i_Ca2/tnBh3IJd0&KHJW?*JJ@RX&dGh1HW
%]!D@scMF\sS:W++gdFuo*1itR``[jAr]%l3FgZrIGaUSmdCh4]cr)bG"7Unb9+2PXHDuOrPfEU$P^VL:ne0+;XX+TINRK#$P!M$r
%3`q3Oiulr7r/X?h\nGg"M,=`$%%=A3g\W.0$nPeYPCl12!P(J,>e.k-9ob4)"qiH&r<rW;n?JGX_/d_eDGIH]$BL^ojNn1)&R9]-
%C.&WEHSn5W?m(rQLiTH8Eb96<VUtRK]ir^b"4)\a\2$7S_QRQnRB2o4\sAe]`H8703\ATsIb2^?U\O[hg>FrWD+1b'8k^a..8bM<
%c&d.rU>`.;q,j/a4"dI7>t"W0E%:ihl5m"p-ah&9U>K[<Ea[U"fbFVG:?n:BBJih/a&90PV&5TX#>X'D.Qg-q8t+()'D;RG:I?/2
%"fVH'O#"3d)D\eh2.7c2CS:a2'I[9HDnZ\AXFZ`c[8MPk`nTfoL[QTP1a&6$Q^92!:YJp;(A5Y2_UIUj2(X%lfet?Cm$NCPTHmRC
%52<c)\O)\$8O!ED]tj3g&6[CWC:6OC%.IcY$&pUE=bt\DcJf#gf@0.sRYR73"DdQ(KoQ_MlD_nA_(kMA8(7:MG"V"Ga]EC>3Fm'K
%,ViM*0a[J14m(or=:d1A!:L1i)o1tmLk#d)BS;A*AX\Q.GUYNcJ-fkULtmm(.MLF6Pabb3&G5?!-X0!IKN`_PIBM&nZ^mP+\/>-m
%0)93_f%&m\-TBZO"m(DI@hG7[%#fPkZf>Q"(lo0)@Ve">1M4(`V@:"._78DRabnVdE`9RGN@!:f-#THR8El,Qno(W4jGan@o5Fj(
%YCoMqY6>UeL2Yb"s7'bt=4<O72)*"?dW3i?\d[">lD%8PVYV1[AC8`a+fcQ!Xg_%WX!F`fWj2%5!Y0lD2NYe8?r'[<l2LJ./B05d
%V_c1+FDH9(g\:<q16eX^6dI7']=,F,G'TY0#j60lAN9DO4;s'\7p:%KNkLaHn&i.Y6@d%m[<(gB":UmiOV7$[dM-]P)6pnKm]Xj(
%82CA@CFEYhiPj=/@Ql<c>mq2`2:I$SEr7#?-M@!/[E#cAW)3OGKe8]QiX#![6!9<GIU^2AL+UiU[a<\&[YNbYAjo1cSd]ud&pj,l
%n)+09DZ79:rhAI<=GI]Sm?8ZjLl9pshf<im_W]9T?Q>J]*Ri](PaTOd[@YTd<=hL?DT/00bu&,_7r2D@C\GnM3o3>K#Y@l%>aATS
%^86W?;G(oN$<E[om[P76rPtZ^?1cH3Cf5eLYs]q#Zq3P)"#0V6)IT;i.tD7VMmlR&UEm%al-@(AGlu`5e%4TiJtZlMc!C.qgkU2S
%^k,Vujr=(P60A"$h1C8X%*1)2=f_8=i6iu6I6ZO:ZI$^VSLqbV3EO2-jaB!&SI3IF\?so#T;lVAV56qnL48<mAI/t>,COG+BG*7*
%9\l3?"*&Ka*/7LMM--EgdU>Vh-&sJ7CjWWjpDq%0oERmKK-r>b9nn?m`H%FXe-^0t4#p(#,0EI$)SHQ=REm%p0C'/0_oP,oi+<(U
%:+q-Q8.4Ci&!X(=8"3UAD<-`DJuEr[>1jRI<DZ3TMV?Vg:i$.G1/NaYlf7E`;R4qo:p+;H?b;Z1I\tHcZ[HT4<t/0j0=CSFI<BC<
%?f76](QSr?:!oW>Pf&7+VubT*h[YW:N,5@p--MgD(0o=#IV:nP>9%^dotGp7kL&]rX+`\tq2I=j*"c8TEP&$Xmn`sX%*dkt]R487
%Kcdjrh'_^J(5LY#,_!CXmoHDUBbWU]Gaq;Am9/Z.s&+NZj6E5?+@=:!FNSImmA<a=i74]BoRaHiK[474Ci"*im9/05Z!8^PlVjiQ
%HZZc"DqoU<po+Gk]mA0D^:4BU9UdnaqpaFAIgqUGhVl3J'LjmD9kHbnrA^4-b-P1js.qJt>hq3$#i1';lfM/MNE3QD?rLOgf>?<L
%'R>,K:ThucljkOmaPfLe7Jl\OdMiq+l0tYaCYAH[s5n*4;!Xf4nF`L8r-n$l]o8Z<;qa4)B@Mf-SP&B+V.Xe'rCc8F\@Q<.qce9a
%jKcETX3m*qop?pY91T1a*CMO1"q$Hd4rg.DF7-fMDp]'Hg!%Ic.=(5X\WE9-44K#"r%d37m&Bs1m7VXZr&'>=bk*D5m!s.qSZoFU
%>:sP1;uMaj3$)/qN*e=54+[(5-*II@E_4dW6n\9J=H00%H$h1!#_'>seu`Wmf_WZ%_U[7E<nEGa@m92NV8Lf3;,[9k8Sr`s[K[sR
%g.g\<U`NV3%),=\hDC1BDhkd6OUHl:rX-S&QijMEXK0=Z-dI0gXL:._T3<ht+lD&.i1AYNWPHC-pLaqgNp!A=U&ANg4#bXc]?f#6
%pZLgTo/IEZrbl5YE3.(H$JocW'$Y0RL;p@8Q)()l"*TEpNAWO--c)@L:ojdU,\\Z3G8.9@1c/@dNbWTe/-?5T@lXWZMMdrr72p"j
%ZMU-51g*3+7Xd_Ud$knZin*trla3@*Oq4Nr=C$2>@BY5@F>3NoH4CR.H@HSPI5r==8X"9S-#M)B)KTEu8Ea=:jOaYfp1B4)RBBPm
%a3sKN>D)Y4H@^,YA0R5>n*'4ckY>@[W9sJSr@i8@l?7d2Kbr/!NM@O4a((q=F[E'^T,_j1jQ&h-pTj>*,UH$id6$f7H4FB8\P`;e
%78eRqar7Ee5>V`khW1*rKgCaCUglD-r4EDqOjf/T(Z/j5afEF=*Q*22C.n"7P@o)Uk$_?b@WPSC/V:UfLe;_[7YRS7_KpBIMp1:L
%pIlcloD@<_$B@7(X'r.>FDVeeT7HR;7E-nlJP><6"V#FdXZ3!Gehrd<p>P5TPFJMi5^)Df'Z]Me#5iD(guKTt"aS`.]WAD5lb)mW
%muc>%&Qtp53N.mI"$G_*Y*Y$GXbCL7$SR&j2oo9(?'1\+SVio&)Tc;I6f;,'SAMp9pCMCl/ctRm9mB;R=`&5>+[]H$VKc6dNCj8f
%;jDJs@2dgH\!3I4MW,K$Te+;NFt=2kr-XdS?PFYCM?%8skb_h%SmiX:@p8D_G`ICO\_M4,VY*hrIf+mp*7VMRC/dZ+E3HhCJ1Y3^
%Go'-FPFBL;?n.@(ns>^.;T13JH"4[cSEFStE-tQ_<`V[k3J(0Cp$PZ9l(D_qK2/jf`hN6cPP)f;36_JpktFaQZl`q*?JKBHJbZ'S
%>_sD8F#&3s63b<&B.q=K`^&TjcGK\X'/^7nlLX5-?n$,=7$^1K`=kW&[9"].0j>aTB$YM[?5i5>8b7.TJ2<lT\,&`k$P#Dnl4kp&
%^)2e9,UT9ef,1km_P7F/hk2SE%;L&A,c=,=l-N!!RCDoW$Qe=Nc!ot0.FFR%="E50X&CdSGLSG;;#=ePnGl0*K&:R"(M,YdSNm9[
%+o\Htg4J(A(H7mAb!CgTb^kYB%%)RA.>M@Yi$^B_o*UjkVD]f_Zn+jL$PZC-jJW/RjXDSQQ"dq#m,.h>V`YjH9Igb=*PX\Hf3m[V
%]O#e"ZtKfd.^dat0qQV,DZWYQ[>J17/uZ^@<PlWb.HI&[N@%jPeO2&Y-E='8%[gWM1%Wi-;s'",#cogsI`PTg6orQ^lB1L'eKV/B
%V!.(^h_"D-mGbTBa')?k!L=AGikYM`B/K$'*plm?9,./Y^qQP]9Il=qEja<k0$Z7XcCO>%8#b?8Hd4gb1pL-:#iGU&c;:8=3oclX
%/jPZ*<+dD;3&(X/VUOI'TMk4J[^mG,K42R(ZJur3U,G7(_@#e7?,Z,c+,%^^[;duJYK<n3F^9l%Eo'@<]/q`hFlM3:r3#JlhQ@S@
%37Ss/aat^s#1ss4n0uB@W$-snIfk(b+o<VM'c)_M'M\],-+%F<l"m3N@$?d-Q-dfoJgXk/QR;EXS)EG<3[+IuluEnl]4oJ!UCa>M
%B!f9!#:n;1/M>*)N_<]4di<tX^9hf]ronj+\om^RC4RU3rFsG^?M;0CXiK#>m7VXZ]H2k0<ZbfT\8\+,\$DNE@T\[/@HPbR!F,2=
%32[e$@oEmWZ0<*+:8-jOO"!;O3r6dn?:\P?Zasf7dMfN/'HV\7C!0*dKj"t1!N+!Zar*\+>#qZ"HTM'Z0alJ0;nJ>.f6aR#L?c=?
%c8j]n4EdYTPk6gc5.2Cl5BSd"cNrm[aoW=-7=h#'mKBt[gPu8?3i$EMC&V<?p9;+U"L\Kb\0u_J-+9sY$UFo:@r+rOTQ]EfaGAK)
%S37+onCEhlcunDA!pCASBR[`,!3.d)17?<'S4q'T10*[C*3"0fSpE5`iu4UG90M:^XSKg/'>,HlC3D=0Xn;.Lns20((F"FJ![De2
%(pb-KSChF)Au".id#Ar"jppR?iq\;]b^1Q!2i"supslZsP5F=WE*l20+0GM[ABn1=KrUV\?9d=0,fcB][(YFI.Q\edcQ;No>HW=H
%<\*@24[ooJJ>WueH=6tP<9a!C9ut^O8,ccTAd\4,1;5r+3akf'9u1V4H/=i^TkL"Y`5alEQ0>JWde%g92NoK)i0l:F]t-H>Q9"-r
%S8dRm#P5]6TT>"\VRid(OHe8RRl<*b,L4<u9'W!92]62.'U%D"3HZtgkV%$*Y@MKYXIZNbm#"@*X>r,KU.eai9KTDa8\Cln:_r_l
%o<kE)'Eaau.PI:Sms]jiI=^$kRu8_u=SX=lJP%Ns?XTJn$uG>?oZ1kroUo)ns)nTQE<b:u;C;rqiu-B'H(cc>RC&O?QIHu(E+^q%
%j?=uMRSW!*EA%7FA]'bYOY6'tEVQ>'6S@NU*O(_*)sa;#N)F_\E7jpHiCeHq6HMN/h*2ua[b_f]oPSi=4Wi_gL.eL!QVs6di!+!C
%F:Ou`@pT5RRCN?.-iJ.]A#Z'CdJN;74RnW+fEp5&O1`IJD1PHl0UZLE')+jh_22?@@]?SWChL?60/L$Mgo>JWE`qD7Go5?uAFd)R
%jmD`kXD+dT,k;*(S_llH36^pFaD]e"O^cqfm0#Y=+r(NJ,</h`EMl&0&=m2Wlhpf-Jf8VS,+"prn4*e+rJb\QeD\?/JCRusQVK*5
%k9r'O#5^`Mm-B'(s/IjtU\>@KGBJ00I<Pm6W[WkTql]!I&UHQ:<TR?KSVe5O(6T=)9V"@ok-[,<(bV5sYR>r?,^GB7W@8S$jBc(F
%QI!nQ0tIVLNRdTCL0%1?CjJRlm2''[AI])TQ=pRH0gKk;f6*s?51\k?@QGgR^KoIKs/Aaa^Ht:?[Gfk7UL$cPJ;D50))Kqa>Sr*K
%F8W$$=bZ07X$o*l&%":H_ACh%<a)PJ\7N)9L:*UV6XO1]cL@/?JPG)oY'I2IhJpfX`2B=SqX"JlCO8P$cGfBC`mV967cQ?HZfutg
%=[Kt2nYlBN1K8frVGX7J=/n^$-RAfdd?#Z\.ii\Fl)D;$DIi?`QU(m9\=61rc#J*K[;DGUG.\!aUQe(%H#it^_\B9qf@9kf&\dPr
%]`)._PsHR.-Ik_a8h6$]b<!]+Jc2-1ojI_o3)>,,ib(!iH?/2jC1QZlP4C7N0-`3L<>3!t6>)$85*(a>-IJt,H%U;'l/-=CAUHLc
%AgCukXPU>'>pgU*T@sb/5'/ls?S(0I=M`N"E:NOD`^"1bRRsR?G6um0\7^\,)BnH&Y*<i`NP,!1XRi\QV)75<m970ZE%/j,=ET76
%;`'es2s,F+23u'`^%J@.W@tFr[Db:^4to1/)a$?-43(]\bI@sF!#!O&Z!hkuYg5c0?2i:cHX,>6#Y"dfHY^S$XU"kRU/HNAj5KJs
%;OW#DWj5NC;p.s8]W`,3BGhcW^U?DsUp7nna3#7Zpo2f<4n?SB=??/sr_o8PGNdF1oaV)aA%TSK;n$h\jNl2BH"sXhg)d74UXFrR
%Q"ND)?P@JqoTZ[Vj3+-hQg#tMI+Pp:lAOg?m-SMdfdB8^;Nh#eD1?^c(Sq'6:OR'4j]*i?%pO/Qa`Et)_3GZ"jTE\_"sNTJ\Rh(!
%M]=mOFO;PRbBFBXVTWat^'PW_qNFsW`@@XHMVUs$m6ir>,G:BmBbC`l5*G)Gf.ZkS]IL#qY!-U=J0h\_$%m<aO9"Bp<h';K7MoKf
%T!h,f="8)5*6TeHD5fs5/Qn3e=>Dnk+;`(FL$A+I!PU>EQ]pL<mQZoo)U7Qq;_g-^$,DpVjW#ED;NY#If09B=/_/=M2;/!_HZ<"g
%Bbll7^o[3j[%>-JC"6uBR9p)O\)]RN$G@siVY`PC]5!$;ch#4c$:[mK]JXPrBlI#PLkbX;r+(@<A''\9`FrB=-j9TV\:HRI&E"!O
%-[:2e/1FeS\EJ5c[P;MZ'Q>:31$cb?dhMr_XSVF%,CV3V4t!sNo/X/pmJN5=;XufZ(>*%VEt'IpDcN6AE.7:2>a1a1=-""0k"[:Z
%<\C.9W@mP5AMRn@K</1s^&FTLH5;";?aqrE-idl)pYtg;1N:G$I#;R;WFC66_s8V._9cP^]1j&RQ#,Dfnj<RIdAAOJOiLNk\)k>A
%`MaqbPk,l<'ZQeIO.O<HCLAjh.X/L!1fBR'`o:.,HtgMP--?aJKi=mipZn9(SpIh&Y8"'][`('C?VXC.8:U/sGG1gd?0[ojb%`UF
%_]Anh@7@c4BB`>\W1#0Q^pL]8Pae)t[#)X=Zn/_$`<PF^,3<>D=%*rNAY@?\7.4`4e`V[u8s[j^:W2Y!8VY)Bl8nN9Cs4+/-WY-&
%&lV7&+9=Bq#Iu^E?dIo2V!mlLTq(N[1fFM!^.ri,RCe)>m;K2b]elu1g'9k<btdV\ORb":a8HRJ*?-sHjF"L-.ttPC&!*rX]M'hG
%hf_@Q.$1$2.m?7W(WIs*"(1D$jInuaq#98>S2Pn\Sb7VCA<7[)*>o-"laVj#\nYdIDL.o^E`^G0#`aFO"cOk?*27DF&p];U$9WB2
%Y?Rtg8UDp$XjZ=6;kY"kQZl7I_i#8$L)"l?ZnE]FB2oVM^k2/<_+Utt+]qk<4u??\(5bqiI^S:--sA?hgbN\`W%#tK$qN,XF:^rW
%6[)9]/1h$+e3/\SL8kU]RAh0'p'7kRG=X`u4+5lA1t8E=ZN`0JmcO7&/(I2T1o7cA=/qH^KdD9BgOa*=K&1H(5/lR[T@'[VE%KY]
%,4c_]4AS@Cob@)[j(op5V^Ni8DCu,h_iOFDV!@MOp`Y?_0t0Y$rnaB"2FLemU',[@keFNA5`aH[QGE7:>bNm1*F<c`[-b-ql!7:O
%@eNdEZ8/hLF8IJ68,IkodEN,!\DMERs407akoJ[Ya\FkkOos<i^)VN)d@YaHi(2m*!sBb^hqmqTiniY8%Dp0*7S_,[m96ka^:5)@
%rI"XEWIQ8k*joQ>pu_+G20=<3G(u>(I%Zk(bLE8j43'!(I5].7O?4MLinWI4YTrCm7OfflNj3qc$$[PamZ.;'W*W#2+0Ou;-+QKH
%Cb*Vdp5OALX7O5oLT%EZC5Y)!;5NbI-QU,Zj(#=Y>2=[Cf:kD\j3Q+n)U6e).Dr=ApS]\1E=H_I[KaK1Fe%J>_C*=SZs8W_CaH>A
%I'%S@RFGNenUETGZ<Q#r)KHdD/>d>ENG>\s*`ncQXQf\\,1B`E(7pYfgci/EPh)a5bCXok2];nFr_r*'47q`C\AQ,5@r(T";o^ot
%]tln.9CKeVE@.Aq"8Yedl\/Hus3RKN4*=%BXapeYa)/*hf$Nm8UaOuljlt^eZ<G0>FWdgR_r;_p["`trL4"A/e=aBV"%$=DngQ(?
%R>-[(B4Y+d(s,q*=KULrYWV(u+/:p%,bD?25)Y`V]\4Zo>jH9&5G5E1^a3m*a%,R[[r<I.QN%cW*&VV(7VjdB`e^_mMK2@8iD%#R
%)*a(3>0>f=?<q+n"PSZOMdck*Mt^7o[O<uFGuO&6\L`tmZXA_]CA!DnhbSEo^PZ%=-*'+W%ThGnAc3uJXhH;*B8k.&8I.kjkH7F:
%``kqO,[(I)L<>EhngrCu;>X@hMK;k8j_h]*+[&hK<AY!H%S(X6D&!KG<#WY2'rOP7"]g``EEgNjX:`tGB)Hs8]2em2DpWb\0`I,'
%PIegN2_8TKUQugE[\#c'V3tS/,E?Y\+[Aef*R63L:uIW`+*dtMb>a?dp")H0E>8mfOV7:[l0@mc>Fa[p!jXR=A?+\qYEhKP=LnEA
%h.#u8FhQ,qZ[M+ag60k..n7p-[aq:OI5SSqQ&d_I<aMW2/M92e]#S%&(Y$Jr4"sQ4B^YNsFQEa%fKp'oXdOjtO&9_k73m'UBoe5j
%8`1GRa\pnW=U2,\1q)V0QIQ1:W^ff!AIgB3X)o[k\aQD;ARF\nB/Lolm[>@/>@ljmdX)h>@n5nAR#G/_f$kKG@B\rNO/U_jLtCJu
%9\Ff)dFL_%=g54t%$"0#>DdsP8%%?/<sqp1jLhK`/8;c&52#9!l!En['m4$pO?[Ar?!?*Og060S-Z1LNHI\M)Q@KMnK0i0gX"AnH
%ntk&WTr?)U'TA"@&+e@'P3WEt+gk$r(?opN)?,gpSYSJNf;+Q_]+1kYd,Y_olZin5H+:8BaUiD_4!:Vc7h`IWA!I<YPJTG`A?EjB
%^#C4\`!lAe"AX,_D\,r[<k0k_OZ)&13tB:E1,?FiZ#k7$7mo:_6J&#/]=+MZH(\VV9[NEH,l@"8;#lP`?M&:#<S7$A9XjJg]2aL3
%$H8ik:s2%2H[TLc?YYM0Yaf[KC9lI]qSN6rmNuf5k:]Rl!dnSIPTIGL!kEZC2:)-$59=rd7H?8uUAC"HB%E\'N.I[3Fn0QV&$ZV_
%er\j5Uo4\i9?<G_"+hJ1^][`/E6YB2M@3\+N4pol/k#,,9,k*=j^`X8F0i7Z0,?u[7fqHg$QId)YBTekZ:hn*Xb8A_BDs@SaL.:]
%.4KK:3,t(V[H&BB5V>i8+YL>;(:``[Ee"'[X5@^[LP;"ePi\H7s,TZU>`j*FNgZN+o,'ePTgMlE)tMspXM'L'_o/f@K&Zm.-0?s!
%Gn8-WWlEi.-UsfGMMo!<OuP*D^Y7ZD\ILK)dad2J?RqMIs78#6Z>i4NlX7S2o]S[CqNI>u!VWtUo7Ig'@5_]^_fR4&:pf[oX5(qF
%U0b/[NJBWoQJB2U!!'@oC\=mc\)=[W`_^Ie<M.KZB/p/SW_U;r.NX2Zi'/8VkQ`',hd:lD+['!$Xl?2<(A1PZ"Jc*>F\aa%!&0Oe
%&opFu:gsSnmnd[#W7`%FeES@^e/%J`b,SZ>?E4R[^/#lK!h+fk\F9rf#OdNb08bVqX6!ps!Sg\Ikk4mrYP>Ya^b,QqH*biM>1_@"
%TA3W-Q')ebX'*0N#V<?07fGkJQA!@*IeZ*Zg#WO>d=3o:BXqb"rpV264^lG*r7W6R]""UaL"NX+@V.CZB"nXsG*%+f^VIT3Os/Pg
%CeR^TJE01$<Z_KYbHdP:*pL'JSB)r<Y"@;cm<+n29^X"J!QDQ.b>YCeleDB=EjEla6l9^%faU!-51/EffcJZPS+I8-2W/Xer6hmb
%eEoQL3$I5fUnV&(j#uE&Np\Md::NoqUFRf;T.3]p3Qu5toDY\`]$+eM[]$`;X+B=(;/=C_dWmK*&*7-$MSmQJ'l6IT_or1aE7(XO
%(**thU]5QqV/*NJB]^!&8(&@a\5N\NTJ.kdbA0C(ghOo0#%\f.O">W"^c2$]!po.j.`k+SEST'D-U>X`H#t1Zc*gU'Ud#I\gaaS=
%rVfg]okS=5Ru!4QdPe%cIAY?bZ[HQlL>ElsP09K'Vlm,e9C4,DN>%WN$=YCjQWr#N\4alH.(m+W6\o\\=iF#kCifG`PC[X+-6S$M
%G0@**>TInqX(Hq&>ZnblS(A!tIYO=A<;OsrEnWb\)q.AO4k\PIC39@qO!]"sJYg%p)7ZAX2$`)<(o7M;'1F\0]N_@@%XOR(@-'`[
%"QCL@+q*lF"B48R2",>R2"19`_@`f.iJo]%YTL,:HU>^8c&6KhJHi-'M*nthdfPH"kj\OULN%J1WGAOL-M(@mX)"d4@b]%Yj2ACK
%SmnhLB5Xd"*E?3%NT#'O;VTd"[=h<8?D7B_]G@%]IG%uP4HZ`m)FuUZ[ORg`Mh*kOpBQ+RA\#D#i[KSNf=%u'G=56W]t>OH)#hRN
%3F1B>nm`0I*%N9A$^:ClC&rkj%;,mm$G5*T!+3h&<ks$6ZiUV6[^HgBl.MTFOD)'JFZI7V?88'k;E@N3WnK_DE#A>Q^5Z!kS1Ms:
%RLP/NB0(H*gSqb-7lJe6NGCc%+ae-L?Yk(WPak=eomA?N97HKT*1-B@Gl2C%,+Yf[PFp?W0Q\O-:C=%$fqOL\QIl9-3A%&Zm(2M>
%eNpMF4&uI+2Rp<Yp0pcL'Q2`!P8RhXo&@m;KA9q9[hH?!A&3'1lu@qoZSGJ<Uuaijn/qo*]ZS!.BnkVbKHY"*KUG^FTT.i*RLOX9
%"QV/\#^i<;QmbmiGnK$9!$K3bcK_At7(9?8>VdSt7B@fKYj"NbhW=Xf0%HLlb^lG?+]!u*?<Z"ugJoRB-[&Jq_bj!'p*>1ucD:$h
%>"$83$>6&WYF5qO4<I$J2a`?IO0^SWgHg^Sa"&YUHcV*/nF9KA@0$;h+'uh&JTX3\l,D49@C+Uh>5=UJp5_]WqSB=l%oOoiZ5?p3
%lF.&@$%_=DQ^_3fG(s`o^7YJW-Gd:)&7\TS(JKJ_[45crq'pTCl"+V.kR)J#.d1%<53B=",0#T+Rl;iQODnZ;<rq@)!gqS$Hp?:-
%I_%9Pe'V(MkM0&RfCbck<8SFO1HB<3a8H?NiZ=!46Ae[$L@2$#KC7p`jf"Zl,4_(%QUN4+`ajh'.V4'1"hH72AF>"e+D$_tY*pm4
%#'m7apW_ZATY*Q\Ft-85]XaN[[EGSZU]_,=EH)tpAd1MD;3`HI_+6g.[1bD-j)a0b-.ZbZ^u\+%]YK#o@,Du<9m1MQR?bm,q)7[k
%Qkf,0.>gfKoVMn!L7]g89%K7)Wk.'Iqq3#J[\p:(`(TMI=4O-iIBf9aK]C!F<V!fU<14I6S7F2aF(osBCeQ2%Mu-Y@C&FE-5$LCE
%f'6GF-/g72/JAFgR(Uca?$pd>^&]^(s):\mN=G[4g<u:47C00X2t*'YFuuU[]./Er6p[!W-(.<pN<2bC[Bh)&,Vh4-jUT="Z(O6j
%U;_5[<qK/,q*S5(DQR%?$gF+KU4+d&>Kfie>=@PAJqT.SmrftP'cC_"8;iL?@XYQ>p[e@+]58#[#:`9)H'4S<Fd6<NT;f>j\@bFQ
%*o.`9R0,7=JN$IYT!:!&%1cVq*+q6d-eK)&XfT2Sg'<(s:c2Y8m/H$7ZT=Rf_0d1*lW$p_UN<Y#1fVrpF=Y,a\2oa5#/(j7qN"-F
%qS>(*O1_L3ONLM+UgZcgZ"Qd(:n'k0!o^-bC(DbW(g=TiV*V;2.k'=@;P;*Yl<-JAU'FZJd6qlsK;tU-l5e(X)NY506rZ&G3q2Rf
%2fKZa7Xj\e(it=T0s5`sI^W1USEbfsiH)0+:TWtK\\#R+-)^6+W0NW1<\hT5%\MI-(H2c+1FRm%K0.)BVaCTFWTuFm==i>S2](8Y
%bS(&L*cJ==O*-kZ4n/b7aQg<Yn;_/dL?Hr%_E1p`\Q"@anRt\L9J/=gWc?lAK6.CPcWR#b!JaM\.H%l&.")uhMNq<4Q=96uY7Ln5
%N3B2c")5hbB%B#DRA?n3bifZg1H5@PMC)*9-%#B$.`LNSh`D&/RA8@qI6ZPere`!8+^-\5T6,Qg>i->R^._AKp^(6RJjSX8ic$MV
%/[eTJM/!B*bcJp)4^%>C96P<R'%1VYeZ,Psc."qa.&5:aI#RmUat08.NT-P2bl(P+UQ<^<1'g,*BUql@OC4\`!g4#lj2$DOl%iAo
%ol_l544]Q`Z2@I9+m8j07M"iW(;#:0c([V>_ab9M*B+Ek!a?bKpX#HWIt?&W##mpZBd30Bk1-r$,u$X`XEnG648O8imq98^&>U2P
%a\Z*3[&pJ_m#*<HkGn.sQc[?UJT\Ih`aj6JT7\Ise%O+RP,Va#.Nk%8/lCBPLb:LkUW%,lRiP-Lbfo`QR44N(85Ic(DC[HCrMgi\
%<N7"cngc%m/Pc)@_uFs<V]T`VPeNKXolcO4p3+Y:_t";J78^@98EGbUfHs/#XJ$I=9$XBjS%5:j`r^^)*$SkKMJb%,R=Lh8%BVQW
%qHu>@^A4'U+GFC#6E:;E_V!Gi0&OuuBgKsRGLjpWIDY-X]!hY"pA2LfS>asWdohjO>[DZ!%N'XY=rb>\bt`BDc5*s1g@?`;_(*+G
%/$!<@m4YSei;UlI;D%MjM,C5-+`>8&]`f%OS.^QKj!ZmT"bZ61f?o(1R*jG(Vkb_\#F4DLZ1JnYeE2.R&1ZgnZKS<32N-\gM,rE2
%A!P@30[%[T`^ceQ%>8m<Pd(_EO&b&m^H.<8(l:hP[7$YSp&09A830McUsW&eorS)_.gu8aQe+6W&G^JjI8'_1]^oen>$/u%l(c4-
%5-4`eY)]o%5@KqqOS$-GGVo$!H4<bhesKpBGJA;jbf5Cm:uZRl;#9QpE6-t]1;ANfVW7]$1o[*cYWW1qO%D6XMd/#J'Z%P`$f&*U
%X6h8mCgu$A]jt/K*$0Qm1EdrZ[VV"OY0r.[^OQ:,]D:p0qhpX;?l`Q=[a/Di4(,6=>WO'DGBh.d%$ADtEMX14;7dJM:l1bSCJIp+
%Z8@3L+Q<juN`!64fPHU_9MkVe9WhCVIEM+_H*(,ZO+K+sMEk(imuHH]_Rg+[oZkFY6ud3'a*KPqbg7pG+t$LoHqKNB[o\Zn`3SZl
%`4XQL%5R($W^`gcolcVU/Mj2=Bo9Mj#\[=C.ud"V%ab)sja&akX4g/<cM5g8H@8$6.t4X8TIpPdq+kuP>[H;ho?O>"SFFf9>_b3_
%pQd!MRFf"(h@cU''J.-*!JLC/Y,TW55a^-XUtm43B^)X&=d!62F*#<^XAOn/p%-F*'G(bPGL"9K@7[pZY4;XpS`'4"]Ko'fnRtN2
%Th$YtC<bOE]\X2Bm13aGN8c*XU669'asGZW>"PYCH';6C+;93^H=u3]RA'`(-%[1\M^s&J?Uo\ERjadp>.o9hA7D7Y=tJEcC=jmp
%I6ZJc(7#i/=b7+U,b1KBMu*SMe@gN?@"sOCVkm?PR:LGgBCg@XFk;-`1$$u&KBcKVE^&Z*!%;'^I>j+F]2,OEmEmq9]Wi!91[@uW
%.A+8jYq\GE@JN9+jQenJ$2t89>Y.uYErcBG/8?s`l""/3fXDIk#(bggT(%5DVMuc[TJZQ#9k-LNU70SaGUa;aDjitrqmV3!)f,(l
%80l/VC=e5a/_ZiWaEh?qrQF.m.^H\So\]"QNG1P_`pMYDcL+aZ[9Z6P<.^qmWML1G3mDM,^BKlqH_q("k+j3GIlk*8aqB9d4rjmk
%Ar`9:/86&GpWu15ao4)#KD+EiiZa:cP!#7AUnhL5g-R5o6X#QHW;39ZWVmG0CqM6n#cDT-$G>s4J;>!5rMQK6^U@caF<qbXNi)2n
%]4l)6\Qm\5LU3DM<f[m9f&EtK#d^iY$[oJDVcJ`L\5$Kkc;9p,m%70Wl_-gcq9)Q_%W";:#/<?ESDu!X[=2FgG6$CUHXqh+Y+tcJ
%rnHF908M,@G<OHN\F(<*_f<Xnl;8$o&:>2DO_Zs@eo0W`a#d/c2q#)tZ6XD^[01V:,^X>lD#;`<m/CT_2-,#>eA/%#&*n."]dfs<
%o0BAG>^sA"<4^EsbXo5]$1gl4`O3[=LF8]WL#8_f])0pi76@<HY!ti_fRHKa.1Z;jb?sZFkHNNICZt(W`u4l>;0?#D@no*o"mS2*
%qTenCro6!-o:!&[b!L`?JTM-37IZK0FZ:N.@N^ZP"/?e9Bm02?&s,R5U9Hu=6ndBgMMjng$IVCE&K(U`>j+A0Il'6M`1DH8[,D6D
%LDcLi6itfkq-B060>G_re8ca7;E#AX(`SWRPUhUW&'=.8Iaa?a$Gf]kQKh7/2o0(##R%t.)+r!dS%"o%*fSh4Ve)aJBoh5U0.h'K
%g)AV9CBWL]<ctEjaaVQAJ(EP5XA^&46YeINS\+,l5@]htX62_l@?@bnBnTXM@ap@``0Z%<:;_]B(slS$:[f$@.,"g%_4:a`krC-X
%:WN*2P'OgFB?jT.*3!I#/l@;_L:MpPQ_?_gl10/kI8@gN/+uDE=Q^-7k^^-SQQ?QW<C_&s98a?mN_.0?PgWu;\I`;2cu3r$iXGPT
%9(i-Nd[B'kfSCgK3mR5PUoM>G!5f_U4/\U*"K*rTMG077:e03FmE:am@&9t-.>J6Yn$P![@n`>rd:;R0)<PA5dUqI$OY]HMI%PNA
%?6&K.$229/iC'?ApGnQ:h-nX($$K,#ib0m[b')TV-nioW.BpJ,;k3Kf2TGJXUn>:fU'GRNDQ#VtAVYid[UF@V&m=E0%:tnl;bl"S
%FUH)VP.PgtTYOF6'>,mKWV+@Jm78_Ylr-9.LrO@OJdIh_+L]YNlB*"U[T5\8Y0H0C@NKr"[8SWR=&@*m1-'02h=7!6<fXaAo6NRQ
%^\t"S@/`/2kDlBYl+4\]85KD!/]a57@.98eB.1]l%W[.i;T2AN3n)kV-Dg/J+'i`'JskVIKEZj#4WQj%GL*M6)Oq5d-oumr\_)8.
%nfO`R?#eF`,)nu5\mXj*R;LU@Ef8iqDIQYg2ZKdH2W[*PS;FA=9WCuC[1O9kd"*qbOjZ)tmlB+CV:!#A'VA<m2&2XE(6BO(+ga`<
%!@KA@^%77ck[Skjh1[]fXZbc3N:+tCUf<<F.#c9HR[dBl"58Xep+SY0&]fpS"pM`m%_\;iiS,DBCWp&+(kp5TWKZ>.qtXM/=q0oP
%nVWJ1GGSrQ0?p)5P:Sd<DCTG%(@;kNYK;+P^+%L\.`.Ajf+96-pe\*\oJ.njQk$Wt;lfp/<#K'Z53:S619XcBp`KE=VgKQ8!#'`b
%Y*8VEA@^2'>NX$F^uf7*I]Nk)dQjD#5k(H6Qrs6IqMfe3bJ@Kfah`#FZ$KKPh:9S=cLDb9C<K@g'^30[;F9P(U62M'U)!ihn]Uk>
%0CApA;2/ZDQsNFO*oIF,[VM$MlSH>CP2N\g3DK&Hfac(,?6H(5kk\6.'TDtn=hYk;'B"d7F.Ctbi%&Zjf`7B$okHSHp4k[t0?nQ\
%_^Z/Y@Sl=UftA5^kC%!uWY_N[%!\p;"BWb&]:t,lX?`2AaVXLMo*3k16hFQ+Rgl"4</a_M-`+Ff/:hD]Bfrb#'p6pVPW]8`GftPr
%QhC'>Atq7D7]0BZF>p7]`a0&XmjL7[=Gl$uriPsWi\0lXbRZY:RWra=bOnXW4%Mg7*PNX3rmhJ8d_oH`rZD/@-WD55a0c#)X?la'
%5[O(pa9j-3d8^QQRG$S?>XCV<QGW/ZrpRA<9=HhPm-Ho'DRWniD#)8T*dD+pa4@cPViK6<Gk1$df7=R"=&P/=gd_V#W#!!FaGX.C
%Q[F_9aE8B@nf/i41NP$WDBjIfY'shZY9^31f(Md'Rd&cja;.;7E8>nF]r,Pm`I6>_>#%mOA-',`Nb'4'pfJI&iq?0Q`B*(,X%b%&
%G$eG,qWa.oY2pIG_Ui:553l.&).""XW*nA3`f%^&k1jN\-?V*.9Gl>aL`HFd@D,t$1K74gQ5)+4Z)Z>A4#LJ,1+8r[XFn2FSuZmd
%Y"[j69#Dp6f*Y'38pPN6TC+4h\42N'-77IsOJk0("te(3>bfSmjWI\G&V<SfhDeYV&;YCPR,3*[2=!lVbMd"!`I/t=c@Kl[guCO\
%A2d\_`mlM*7J98qS;eLDM>],sC/M[A6H(?_E%jeJ)6F7d-V3d(!Pa^]5Q1u7^iH=:mY9D"UdOXM9P/0iWpY`_A0T?jn4/!?n`.)<
%qjH$Q.i:?4ha/JE6Lchg)4%TS'+ec,I^5K9&5RJtOrm2^VqjFu.)CdoX@%3p8=nA]LZ8fH8p*%/0be/Lr0ga*^Hf%^\8$hBShAU.
%RhtVYZP)I$j[+Ci$_/ZL$@rs2-qh:"@niGBcdFmU+t2d/M=HZ:RY\\6<jS@[9jN%!`61[SEcSO`\hQ4oQ=o8hZg&AaG71lSoSWHE
%bG]kV#&YVbjgY;RB&d1E)i;?@;nT&0+S4Z^?GPnkL#Pim\cA9gH[*bNSdS'fp&P*QV`LSULDBb/X6s\45KFcSnkiX4VWQW=A"H?X
%8-VkCT?g:&/YQ>#n^(/?l(Ig;HnW"I,A*r8X)p#rhal)m_2)"WlWdN<=?Qg<$]7%^U.dK>Zb*;>\"-GHIGXj&o->dM1f4+=$jR(Q
%1K7>\]\[,fk7j3=hS8OY:aa21(7+UbPklm(o6Rc0Lo+$3:#F<%a&d>AB+m-]n$9R=C\1^>F00'Bp8+AXcEZRd3db3=X+l?%l5VFm
%KA`FZk#L!,FE-G[,]3BobSo]1"c(,9IO](ML+*/k)DciG+B'2!(#$>W,4Km?`_AX,kbc4QD-osmY5jnF_!PG7mZK`.!.)q3FI6k(
%I3g?AE]S*K^_m^mG#_cV7a%O(eYX3TVT(TFdVT#@J\[PUag6<Sm-L&T2>mY00(UQVm^VSS?Ku?:,mT2/M=_dN=[jQ)]\4L1oKIK'
%&%[1!T&-cFiidX0>Pc"a]"g+1?>BpQL(TDo+dH:L%;:XrX*Zgud`$]_XafhESY@NMT#TP$7Ib+t3j_4Xg(@!lDl,4t(/J/:bWf?n
%20XE3QZ`hlTDP86QB:dNq[W4"\)%V:XrPoVm(.pghmo64<JA-+SZf%uF]sQQ)pmnq&ef@3AEc>E#/"6q'.QK?IK>';n=*e\4K6/Z
%5sHkUpR;<dQ`c6Zb.@0*&E<4s+ubTTj_@;^^?sH!ZYWt6:d&u?$:RQuo5#B,JFB&jBk_9g9sA8f)KS1km:Z0;-:LYo&m2@$Bi.>\
%-$O]P2W>?18)2S"gt2SPk=$h[$hH09Aa)sPe]?bc:(bD9Z"$^R;WFp6#Mt9=*$8\89AVZj]L=o(B8SX"RUu4>Pi.`rM]K+B>p?9:
%TA#:[5'/m$?`Ml3>j=snYkt`n7Y%o"R8+=Phu$7dD!dP^9\IV3E%?@e'<j30&m)BVV5UMl'rHG!3gtaL*9FbY9U4o5jetFhA:0`X
%Z!trFo](/<P2,,gE+j3W?dA'.d$i/Sc>e$B,,]]k(=Z0(Jnjs]Qj?Q);*aVT:jm21N]-NSFZ>$X7J&g#7WV2c@Pn2DDAj7O72e]e
%ih7-%=[ajpU2hUT:^HrSN3ju?p%G4f_cDDoCF#;!mRp:'nTOjg@W^s,jU\J5o/jG1].2ADT_DcN=R#KU0cFD2b&GGF)(YDq26Ipb
%_oTAqGEpuAF<r!T8aJq<U]Qnsj*E_R?46YZF17#Ul1>OcA,4-aiI&\7mjr7D:^CTpVY&MXF!@fnWbtsX(<P""Y]$4Nje5(8knGX2
%&,;l>l(E%iA<2F@Le3poKe5%RF6UTj.&WChNi%)CF^o8C^Ydi]YLgBcXd%Ee$;]LH<YcDZT05lsJ:lFH_HA6Rm\;;!r5,Q$4ed0l
%kn6$^BQ1/K&lD;.U7t*@_?S_ZD<.VFEEsLP9*t7.hr(DaSO$Y.$d>(L;3Wt#`#-'3De@R?!Pk=JVL6B5BBcHq(&'m#DD="\!?$5#
%YSIJ-S/YEl^)$kb5&/GC1k@'j'/`aA8K5]##_MH_X9OgCcO,81_)IXm`'u'7G)Dotg'ljp`*id/KPXE!BEm2lZC-I`\&!&L.`tV@
%)edVc+YlHFZ\_p3[&Ga8`PX_4k#:o197qXA+[0VE+U_p;ba%-b.s<ulFd1as+psFR4.NTJ7p[%(e"bR;^K-UH7`@>H\>YRB./[uU
%P;b%lXWEF%\3Yr7W3.g&gd).\QBOJC_3U)/<?&cdVaCurjJj!6^7F5\KXR:Y'M"E0B')BEDO4VNab\eb.g=,%19#+>^nn/qN0:8o
%ATeViTjTR6@)kS(!Wt$#G`LE_)t(I>DMth+bbaO_`,_S$PG;rQLaim\N'anN=4CVHf"`ZYM^27Hbn\r"3Ri>,JNc/h<#P\pE:Am]
%k_$9f_Hf#T#;)p:2L+1t5YB.iUH#\3a`dUA.A"8/$!pYT;8,RO@p0aX[??Z&"D]Nif#%s]ZnmJNRa['9!=@G%#a%l9fmm@CA7i)G
%'<'\c^bJ:?\.k+`r1-9_f4Xe\np^UCSIkcaknHtFFUJ.f%"76r<6;0k\'sin(IaN'$iOYJG:Lg'<h3>M>'E:].hPr#Ldq+g68V`/
%aGPl)oJ)&S0i@uj!E5,\dGJol`52UZ_%^uTc&"Z:3o4aeGWgjA6_sQ:Phc`dWPuBK&1(FI$0(8L(;mq,qO$)HAR0q[X`Z,OS_QcA
%rQT732R/5WBnho,g=+9]/#.MAM12u65F(Kl0EiYiamHrRKh!V^9oZMWLV"#$fm@9cX+$mE^b#,Vl3qbSoZm$\i<En`bph<d(5/1o
%VG[Z*3^rdb3ga?1@Z%mV_H;PkC)a$JlfRM&iM.un$@OkNb9qUd"nrBsF9+*TQ"WPHDDa@fdH3CS?Sf)%AQerW/(+6*5N1=PbZI[L
%NLl-f/?`&0*H9jFY>L`le@I_[F(3[T1l?&1_-JY5CWP+"gLJscRIsQBj^/p!$,/p(]stR[L*>X.YCd8t*1),E>7P]X>q(j+=h'IX
%7_+rG-ZkMoc*^nU8RToF8ck4&<"^JQR8+A0?O&\iIY!HaM&!d*P/ff;.Bd&t-LmX.cPr?cB#8n\?2M'&n?sQ^M.n!Jh1HbrX<SN<
%mQ\*pd2mQAY=;5ghL2DMD><CY/ah2rJZZt9KBK.MkBQt'cM`ms)-YeWj:qis>Q1Tpqs:_lC-^JJ.JUb7b?IP#TC71,hRHlf<deCP
%.*h6m-nAkYCZDC_Og4%?ApP##kFc;mD7K#3l?^ZiXk&iOTeLnDhko=)L[Sp(ae?=HL9_oOHHZW.^3#auh\[=^)pV_(NV-lrH6<(q
%Ngu2,;-\rB5r.i05n,a&5!;f,7PU11L/>>p*eZ\^8npNO'SbpHhGF.kDeO.C/*eG@mG@Nt^9ke>emgo/oqcM3J"KgemrT5dR=,8\
%0RAV*qu=6(rXUSQEWb3"n`VWdgi(c2)CnDh3YnU)-N)S[(o,qch.WNI/Bqd/Q2]Rt_5L.SlEBb++,]>jSh.1"a153!Wt3Xc+VKq)
%iZ>(dPG8j^2hjV9(6h%kD;64o-M%<hWUVDaC9_Ue)AKUJ845&YW#<`$N6PVKm2V%(4**DkZfT8!WW\C45_''Qpc"l=_"W<PhHL_+
%d^!9DL^%i!8uLtq^7X^f]p:)aK2doXj*&2EVZ.oqe9<5!N3,(:;];O@QSbRUEL1,EZr3@s<77TBg/@@>T`TUDpnS$E+jk@s=JAO'
%e_O+:8C!O5RW%#e+d(D39c$hX#e/;S_mU6km-kgg?#Z!-K*Pc$s*-AuMsP6^@$16[ZR)@orSO-)5>5*dM@dp2Q7bS4<=-.G=+t).
%8s;0o>qpVicnW^67nl[9VJuuM\mW1+?)d9X`Jchk?k0WW2r@5X$VQd4NY5pjRrQu-U<E:p?.qTBLLrBSb9u\W/'Id(]PK&:B@J;i
%"th1eNZqT*c,F^c@]HTK%+>O"*,\AL;@SNBR%6<\<ca]`-b(&eaIi/C'ATY)SuG483-IBVM#Uks8SgJR?<_G\KJQa\<Ug'tNrJ(T
%N3;LqSCU4bd.ei6fK`bf;a7QKZ:.-CM0DU;OhZ!"FqtAQ;#YU"&uE'+XAq0q)k6tnk<_"!g1JBi&g!p'7%O&5D.N-&A&[lm6r+!U
%TJ7ZXS/:Ydofh9Zp5(^1islAUk>0f4f@KYl2O99BM;'L*[mL.:9(u)VT<X_jQU31TU-5b3AM38>-])1BLZQfRM8Z*.qq,5Bk#WP.
%2dHH#cH;')_'kOj=:L)&0.YN=1uuS?D5?2k0hYIjN!p*[kW^+_l.T\P2J7.u(;a$0$d^#HVM2VS9:&drJaSl]^mg=bJ*/Tn^ik(R
%+9nW3Z\5?-W0NOqBe)h2eL`H`?!I&(RpRZc>]3n8AN;o"\"mmQ(GR%RI['*/lSJLRTC,bi`\GS@,q@o<\9b>1nOm^Q(R1P0YQf$f
%c-7Q(V_SY#?t!KM1nm*ljHR9!BCAs&[G4?m9m_9TNs@gQ&U1$N<+EXuW4Kd*cn(J]/0ZRqS>`7m0D*\[(LbISBJi?;6>d?("i<C(
%I?6s2[e,-p4>V]\K;@,I&<mefCO)Y!,N$92(+1rEKT&6Lp7#f?[DVa&*Ek9r2-_8mj3?al+dWu;V$,RBj/2rb]UjKm+95FqOWpmR
%?*bb=Ena:%&c\RIIe&qiF0';PqW#utYK/Y[OCt&TQLBFD+GebXJ.>#E]nSRpDJ@HN9?IdQmp*YT"1(<EiG/W2aR+m0hah)e_d'lG
%Fd)9p*PS03:sTbATo$PokeH667H9&K(WTHSYS,*f.#4]!U`:te9@%;%@1:jR>IG#F-L+e!+_(tnkl:ED[.:n-)lh!4UHotQl_$?9
%r9jG\DL^O_3DhG.Cfo5DWXheh8?mXG'Adj/+-.cAK2'nbY<H?Q>BCY3P%B>Xri*mbOSn9<E#b9j:E`oe";WtkGSU2X8-Q@m7*>sW
%8V,2QSmN_.ml9h(g*fZ*D1LK`*,m*TH2HH&N3\#G$j;hndW7@"rd'(_Vu"l*_59+q10BSbmAZ"ZqG6OZn&iY,>t)t2O]0;'5u-sG
%dje/Vrp!1KbX6415FKk^PBk<n-l0UX<@r9@m>jbC>Z6R_'Eq41W@[5^5GI,oF>9nL.H0j(!9V6#`m"tJ#KHUp`-^!u_G,q%'"f`K
%6p^m4e<.S8V`q/7Y$l%qd/b.^Dr5o*MtCdRb*@>qp$qYT?g[7Z<,\*"2Q_"$o:2BthNugbV6146`<k5cM%1ZQ_W$QKcq\>gL27ph
%lki^(8$`7`B*Cj[1&6f+B?lb884Y/hWYTT1\U.;PQ.0K/dfnMh;<FNGH$N^,9W(IB:siaM$TP4;V\]6N3)8b-<@s*D1jkNuV==PJ
%JE!5Im.g+G_A.k.!Vcbbf<F!2=a+.@-)YsgO@$J#;&g7#Mq\]=5jgRPe>[XlK.9HQr@/agoR56B`k2!%8dC<,-iigf?^25pY>9<8
%I]>I]o?"T7Ei+P'.:?5Co;2/DMo5o,eV[0;BMiY4&)%0YrDptb.*cPW6ra_u=@(4\]rpo^(%j<(IulhF2">1FmhbmuJ(eD<(!Ih+
%4_^i)=0!OQYN<!Q9bjRCi/q*Wf1`7aaE8I$a.kY#oMC7A-$O?4*F<5"nPH][FPisO[PA`BfXo[eW.,-u)!!`+CFJ1pOFs,/hSKl?
%6%d_7XCFq/)6(jKgZ2^,>CGfD2%*6hDI77$TaZH-_@m<-0/I<+dH18Y/oaI=guDHBjs#25=6dr6^=]#4d5^*KMI%&:S<g=GEaZ_C
%BcBUL=S8[j>[>k(H=VH2Q@)>f=05X?+$U-O'ZLcrV=NtrBp!QHhe.tMimc>CPqmd#]p6Tc>ePqN=n_,cq(*B_a+HBXgJ[TH,1/bA
%0o;@<5L#"E^l@[<JlP^"0%ZlGMWq:$Lr*@]@T6pF<R"cW+V@"6[O*kCRYQ`.b-rkF'?I%h]`C;r7/6c;#m_eU.`lqaf*j-%h-$B8
%pAK*B)PQG)#=.o,TC90&I^'>oJoW2Pf$dk]meG&-C:rsb9WDFJp.;K%L:["/as%2OLY!Df%mpQ]>Z<7=9oOXAJ2U8qh+X_TVNYa;
%AgKm!3I,2D`hXO'@WXD+-LT1+X_KsZdHVK(]q*R$.r-\RB+%]UEu7pUUW^rR,,ei\M3*385]WP3%M:j`9#tKjdm,*re]9Hh*QFC>
%&Qd:1G*ZCVaCgl:a<Cskk3[M6a_I84SJPcWQrTD8\?#SATBabf'D8Y_Q2<[blH4^mfOcn<3,r.[(APs=P2B<RZ!r=9NgpoGP<6d#
%4MRn5YD>LGhH$\;R?%BR;Y><K-o(U92-Mc;0N]oVF#R8kO^%G3W^R[Z/!u\.@iTrl),GT8-GDA:NsBb&_/>,@E[GD`C-3^_(VdZ:
%d%MnN=H^LW'o=o)-nS^=,:fm*KMn,\S7+#!Ts9hG1k(,-0.gt11'PsFJjrJ<WhPM?\MA2#7SRptAdJWB;AEJVOAt2B:NlP_Z:eGA
%_mhe'TeAOiP.J*+s5^?ZY&p1*;laaO9(\RL&a>GY/W$nq0LVCm[o=WlP%FsgQ4d-+ls4Z&',@O$%;%M:.AJ7U>uYJ9=WlW;i.$#B
%ai-](`,'&@jjAHSAK+\7@5n%D7oR!B8'->!.d55MGbG(P=]M2*I@1kT`JGLg3U=q`4V`fHXphR-JV7Sc[h3<aU`NQOE7Mh`\Q"?m
%g]IYdSo6DQ7a$h\]u:%&EP8(n%ZEl,p=8Tf:N^:n#'4E-a6o-DW!f[%@eZ'X`/4@?A6o>l:6NW:IFA:Vr*jV5J]-!e=IFlHYhcr0
%C2:7r7arCri-Cd3U:0"u1teVREaG&Jg7INu"Q)J-)L%>HZZYQ&4`RrF!h8J-Y3Ts%k]T9/pJD@ALDeQO3N20fAmGNbqt:_Y6/M;I
%.KE88js7;G/HXWRGi95ANJRg_V%:iC#O8rKpqUJNk!"hkL'1:>aTEDbn_pOF)`<00D9.JjS*#pJ^7Xgn?Hnbbj*GN)a-+$B^9=uS
%<(]oqdT^?6RKc\RR6!@TdKkuEP^<iP!=MdNK%np_"J'k1<P`GK!BkoeqTdN`;Z2kZEki55-(qW2?M%.o%ZH&U8^6QCHSs,VR+)7]
%kT>lJo7O0q*k=t0bnMd$e+Q/b@OMi^8*^c`08sU*"UoF2:5Y&5=D2,+[]9/J+\0`OY?@okk>s1=Cf\Sm^;#[Z%7DJRQ43i&s7X^'
%MeU:RCS8t'^@]bDq0obJ4ViCQ>jC&6;f\k@Y3\B`VnOZ&V_CSB?&5!OLD[#\&;q_omB/4;C]J_o3h?_$M6,.I][VlQ>'<n\aYS?;
%VqXM\dLWaJRN1i&e\a((eVA:5eT6CI%7JN^j@G7/j2$\W=]8e#J9;L8/9[V:D&gU]<#Yi#2=e^$q><mXUB;mU\N(t<l:FVU,*CDo
%:t=MV2Ku6FdaL4RAN"2bF1S^K[#Crm&j_tG,52?2_TSSmbCH]Giig]&qgQ7d<DLVHV1S3446t<5^R/SDP&eFFC@ma!44:8U-8iHi
%e[ts<3E=2_$u\S1D$4G;_a%,,5RtQ$g73IoG.!;j:cFb3Vei,OB2-EJ,qYMN8c[*5iG'D1<#-b^s7(2&V6R#b_s_C1+8>B;V@6YQ
%e?SN/m9'27`O7SFpL?(OKoUak+*iGH$+cC<L9Bf/6YT:':.s9!@`R9hW97lF#*P+!:Bo;g\*m)M1E_c"A]BJn\HT&epA06L=7n-+
%@F40A/c5RSpEj*bj%.Y_X(Zc;WIoKKAj4+>kL@)o\a9(*DXQX0)&\UY<4".OP8;u;:a@cK"7X_)+oCQYniiHoGe1+3q]2Ns9IgbB
%"j!eXF2`^h7OsLUdKik*lS<MA0e.L72:2V%f^)4OFYMGY>qCtXID&gkP'0mr'YBJ5*P9B,4?ad5X6JR"m`jrWHRkq2V-;\cN#`SO
%3h4qC83J<Y+aPEs8&<m96';4Fbo*ok!VmajQ+'#IRO-OQ7Q;(sm)t<'%TksWcE"8=L,BlZLrTGV0rsWR^7O`B0L;H$XasBDa6]pD
%X8?i'X`"Th#q*^u@0b$9?M<Bgh'U.d3%S(X6gYp.VH/MrLOq[K\e7bsC0ng+U?s5Ff&H+LB?Sdk9;')>`F,l=UNge'6)Jj,-[17,
%*IfCKQlnJlA+[(WgIY\q=i,=]Ehg%T*7Yfb=gLsS+&t\Yck$14%BXC==H/Wp.E>`#o(<\0oeTPQC*$aePDR:k20Zc_Hr2F@,6aFM
%7Uloe5K5(^Hp-)Xrd_PB2^pqlEqSG752!nt;B]TMKU*teZK$QNUCLL:/X8$CO1/i*5X"d2Coj$OF(8m`dmZ6RB962U)e67o'#D\a
%$K&p08[@)f8L2EHgqY[-i8Sjd*<+^+3W42<.F<jR'pPD&Ba)>\]rM&E?/oPM24PQpP$q;<)ecV0/I8t<=;8>U?X-B*Tf_l)f5H.`
%[fX21riGVH?&9qjn$CZpM&"8QUaYjYd%K"U?,IA#Zb-sXGJTU1.XQWFH(0r@>)h^+]W]l,I6>8%:X<s]`"oJoiVCBSB>qSDI4u3_
%[DY51\/o4&)uSI()-q@.`L]W=m9IJiCtYLd^nW-j3Anttm4];r/7)um6_m("8nlA0'r>#cL"rDWAjF#ZUF.'M9-:/?()[*F7ujUI
%hS/_.lE:%5ZIbjVIiqqg,_sP`^7OUdi@.)Pg^n--&%X*jY3N>Rk#=H<m&JhX^J)<oceO*amtM@>/O=lAiZ[T)$Y,)4&NYRN+<@pQ
%8\['$.gCGc<Z7+6V_9$,0d#Z-$ZUISEaYMZE"n4XUD_7"7O<'/LAuF8:)B$[.TC.7&akdrr:[&Rk&Tlci!rOWd"EW)3F>Y0EpQ3h
%Nb*,FHr$?aZ8u\0QHQ%Q_;mHU#hqtQ'pRdq[h_Vl/b8GVOf@8BPoGom5L\ZYaW<=>>DDsca+H,fXtT,T>YlO(j2X8TMb5E2n>^b1
%-QB_Gqb<i?UTH#U=l?FeoA5.,qJ'u6[$csc0eI[!B@im63E(nrNblMJlU0rX4`mSR7'p3Oia]TOgQufUpBbB=r8f`UCam>_.TC5e
%4?8>2S,Mf8c'H\T=GW1UUSl<)jhBV/)F%I_]Po/'F:17p(q19<N*I&UO7h#giCg4;qfB8JD_-NLJb>jSW#WDZ[H/L>m*jpuh9bts
%gDTuO+]\<B-)<QAj"tj7It[Gn+T[J!9t,!jn\ptg[Fsp/<u&O@Y)?5$BT(&;UcQ73)dXYk5.+S:FrG[j!gt#le-rEjf:TM@`AOai
%fGaV_e:)k]:-aA^YR+torA]Z)0Ij:+gYuANqRrY9qtmWmO#B.Ud^5=Z$kTPbKe3uT.^H\,`;D1`:[M>m_fb[YEAktmdYWU',GH"*
%BT(oh-`2[hZ#/k*d`hpph.n'q(q\K$&^_798s#",N:%UNO=g`U9&D,Qh$Y[[@b].;Xd3u)e8!ZiFP"#jMkA]ph^T>s$Rl=h*nq-q
%T=UTR^FQ23Coop2H;.(9E1;hbo)5Gj$q>N2!]*-!)T2.*7d$J</M8ldVu:,26G4@&[;4/2q;Q/=9\.+ZQnH#:;-X$>2`CuM*a=9[
%Vf(\m$fS29fYgb5s28VF<o8UPbZk+&`UkFuHEk=IeKG`-Vnu+>%knYf0Z8EJl3&)*FUW_3lHH3'@$[]hFY;sO7FaD'ZeR9X1.c+5
%F_9,8e%9EiSZjm9OZcPhJ1l/5E^-\-!>9P3cL@!YIebFec9.'VE2K;,:JmEOF,o?g)4@/FOYt(,Qo`iNT/g-Y'tr8jP1nG'&d'#R
%2dWT%P=i^+KkFpS%"d;FNU.8Tdak)i\H^u&)&Ck3hr0X,l]*QGZM&_,@H@@9m0'TuXnj=%pr6Gj-Rk&XEd)bgTt"nC!*LKn@u*9$
%cfIUf<c]*lR8[73Ie'mVS5YiQ+*G<sG[+#jU3DptbUK$6?'K)Nq^J#ZI53#\%6=l)e:uP?j=G!g/tU=$Kk!(m1CrZkUlAEPV>SUo
%*Dh$PQ,C_0>DV?R$,]oaLSZ\c8ujG\\qjpq@gn)_bfF12hXZ%54Ces9]HFDt0?knF9[VN8;+hJ%8ce/dO:pnLL:'FI)9D(k-t+,.
%RBWWuAkbr(:QSEV.7-f1:EACC.Tjo2'!@"*RF#H(hJ:#W-Gf]<n*i[F:I#3K&Xm"@#t1m&A+-9(BW8[+3K\N_)FFop23nkF$jKZ?
%A;Y-_&PW8dCo.%F171_SB+4E4e8,al3m)9gZ)U;&_J4hbhH/3uEskFse4Ns@5/EJ%kBQerNkk#>WF6@DTeMB0+]uX,0_#1""b=7J
%bVBgBY)CE9U<6M8KZe<an,Qj7$N/i#e*Q_7+CFu3PJ1=kg,!T!]0Fl',@9V$oJjr;q[oG.rDkZE8?\5/-C0;=HYn+_W^UaG=m9Y.
%jl%XWZ[:[ldJO_,``8E^S^XK>?>U+(H(fhkk1k97G=p*_T.Mp'l;M;Xe$8t6o=Ji)ot7g\%/&,M`'_UH3ZcG1Tn#E7dE,po#)=!i
%\Cb6NDXJ\&.lfQK4I#/VHH&uo$!Ba5o0GF[Q17&'-m)LhK_K[IY+G"6lL&#V8ebM7FBbVQRL;Mb*UVAr>$MZHDTQtQIM7]U)T4@E
%kcMgP@AkqmPW(EpPfq!.)SnkUZ"C"X>*4]=j<:ls@Ym4(HSi=3g^W!I`u/2J_f6O'ju8T8D+\6r1M'Ksqm;l>>[IJJhCI:,OQ]Rl
%h2f]PNB=K%\MWGSl%ONQ$kENkKT@;E]Jd0q')d/Af-tp"dj)s(\=ea#<B_/_NhR"[<O]J>q:_e4bd"_*VNo=k.42ZD$I*^BHADr+
%)<=gOS'R+<UmOF0=q7\2l0lh+h3jUleFek=%8LO[WjEmXEnHWPjl6KIHUIEfCa=+6Y#4DIj=ZdG-l0rHU*Rk#mAof]oVfmSZC2L&
%?A`I<@L3(RbSVjTcc+:-3V!)5m$K&mp_^F#g=2]djA1(tJF:=U*5KmY_8LnMZl$s@),ten?-Y$VYq/qul53k"(mlZ_UM&LYa)P5[
%_&Dp_3k7<1aUM#)Wjjn>?Y8PH?IqeTXPDLuK9V/E3?N>=no9+[<L&6k-PHD*46(mc@L(%t"3KJ=MB%9tAAL8^ide_52M!LbHq'2E
%/J:mj8h"uU>9j1%VR_EhO6A5]jY'Bs\O?GWmr^trCMJ=<PXS?])?YdaXDG[25Ynfh83"X*(Zb!"Ag`X\DJin:VfjY]o6T#ehOWK#
%TYRqGmu]4%GWeDHa2cchq5N+/?<20dJohf1#6qilS@#S,FX;n<$Rl!Z+WJeE2carqZ-VVT7+#p^bfAC)/K]D"G5gN14dF+F?/@C!
%AmYG11^NP/NEVaNb&aX`6qT-c[8^Do5g.<Gm.'if.m\?N=tSGQ?X/R7?^?>d:DHAU>s5L4[JK)*]03SA4?msMa.EuJf.jE6mEY).
%V0lK3+&p@3KQ^SV1K7+EobX?Td52Kk0"mt[nB#7-3X"cTi7`'cAIX!j0/fk=A/2k!)!uir&R!d8R<']'DiFl0#h.JD.<TN6Y(1lr
%>3ef*-^8Q;S4g6LlumOgS_g(\d-EajqJrOd@d`:?JBA;`bqER#d$[L=,6ZY+F&P!FJ<f]"<UB5A"99@F%RfrM<,EC\<i9ks&'O(E
%1uN!Zm-ji`B4*XXo"^M:h968D<D7OC#/B?]YTkGPkC_*SY9Q%L$K/P$$Y\`dOK[CeDLbJ?Q?Xpj!#cZ2B,Wm$8%7p)Hsp!gD/)_I
%c/\PL=Ol5;d=Zn7irlOmGTOT%H*(l^)$-Xf6j.lO([r7ji/uN_.fl<[_>6[;^\L6e.'Fi<.p[YnhAGG<m*ceE98rK'_YE.b?;3/@
%GCmI.@$)SZP%)W!VZJApRo'aD7HadDi2X=Bf>C"PZ)X^h-)f>'3=QkVBs(h\Jl7H$B3.U^`sMa840[>/nHYpOA#)>n\N_c&W[!7X
%#;(QE]I4fk+-5@+GQdmmYY%no9W=tkn7bS-"ESBAdiGMFqY@hdH.Jg9.oh,uIaq3Z=^=1_dF;f73rK[6s7F9=p:*QRK@L7L1=*W]
%"CtaW6><$.!ZV4:"Daj!3?-45XX!g)`F&!H[,e0;kR"qSL84gQT\C<CiM]2doZ&KW=K`i<^6on9ouiA.dQM))-Rt3p0Z;fLop[_F
%W][caddTB"@8acOY9lot&u.QT/2('se9c(^FZ0p\_jBp=&FdV_/$O`untl!&1tNVDc*YS:Kb:1NWK%Y)l5"2$1pG_56+PO6B,J;d
%eJl)2XGeg-Nb4!<6OV%`=B6bVE2o`<b#+rfoKa$<R2A58`peY#6lR5D_d")HF%PlAeN^s'e6$Q.&94V30:C7H9`)Pep)1HCN7$E]
%LhKePMmJb.DBFJ,W@a.6YCc$S;iMYqYn=,dGhkut$s>,@<LLBQ$Wl:"D2>cO-q-qS5KrT-PIiK?l23O`GGI,Z.G4-0VeSE`d@6,F
%Yn*d+oT,(1ZB'A4F.K!A-8pWo$h)+oC=.j$n0":qn*I3p3F!3)(j5k;;Ks1qZ<FUgG>W]s:>NcDr"=)[7o&^A]Tguod5;bfBH&eC
%F#1.pEtMT)p,*X0dKqiK@EsXr."q.5&)g^J1YT5uU.5Zn,'GaaCGK`M=n[@%Hm-Ui;)T4HZ>cniU?'[i^$n7dN]_:\\]$Lo%qSKS
%O"o!Kdqa&B5%UaemX<#0Hr1J#m8tTghJCDKS;*SU42ZOkE=*t!9Ur,S3)qL8)+JQJL?Um(+9VU7S@XkCQ+&6[#]R$BRmogJZ'lR'
%9qa&6RKGlZE)mAF*Plb!f4-L]`o0k.(@@5;Y/\so!PqQC"8pjFa;/ua<$p(sa4B2EWS9H4_V4E<f9':4+joU4G,+lHMnREf,W^!L
%6rhV2Tb1?gYLo/-q*>3(Jt96eCD%Se!#GDP6Y5R^FVd/-O.P7iN@D2UOe4rc-ga"&#'U1'YdT><FSME]$3%Mf7'JX&)%GD#D6%=>
%@Pkj/N1MLir.!U-(j<W$M>lPF5$[$)R,\!;@kqsZDW'XN/`ohA27%0PmO<4-`q<H*N$n0p],'e],E1JM+MZa1C+8c,UUI\E_["3%
%G(\tUDWc8X&e#Zc<AG-t.g=]r#h2q]IHT4@j?0QT8d[RH[/Q6[#5s^+bf@ihQl[O*-V!c.Jphig:M@D!pLN_gf"=aN@N5$QMr*U%
%2]*6)SdlRs-FBqSAu!Y&-:_XUek@Ws<ZFL_DAaQ<DB*7kFjTccV%7dX&Lq$!YUQsI^sI*=*IB-n6uA(COi%mZbH.,o_$KKsL*)d`
%Dfeq&<6:irHRR+@S#@:-"qW.#AM==KQ"lj1QT1#*BPjGS*2AV[d46#\36"Lkk6bhH=`G5^r']QCh-].MJ8\luLSg>7e*+KT82l/8
%BX-Vm:c,K0B]!T1gIiStncHj,]t#j3Y#XO`+i]M7Bc^S&mdR3u$XjcZKFBbT851H$i*tFRWT0ch[r<6hF(YfeO5gqX$99;l(6HsS
%cU*-;U<Jo[)EPRU*VJ,/$3\i<."O?c<pWpTB!J,`U6`q5APn`L+N]?hDEq0^=,i!6bEn"]FMe"8(HCAQ%S"uI$nL$\+Bri#.jhNJ
%fu`HZ6h^Sh<WmY,]F\=/)!6D#rK?TY1-iQG@8JG_beqZ+$kTMpYFD%SMe_aWPG>2j$2>^8Q,H!EFL2WrmPqQ=O`5:'\JS,.mMc"Q
%TiY?B#Eso\[AXBub\r=m=?%mt,LgIjnCFkp!1+6YRDfq`IRbR#K>dQ5E1][[DjUIIZ0WH.)AM5:gtF%M>:$EF8=g.;MAMp>2h0tT
%qOaW(D2AN!eV.ZO@*/61b",W0ji5f"g5)R]2DFKZY0]#9?WpZVmrLB"EEe!G;?LpRZrK8pTAS`q2HI.]8*6FmX;QOD9(lnra_EGJ
%BcCfq>Cn)PYLSZkO\D:?fS>p7+Z9H^gB'$,*:@0?RsT!i:F5Q.TBT#d,W3W-=YM#*oY%F/mKaTCVTapVb4Ie"4C$NZ?<N_arY[k5
%@QLkEdm;^i$#.D-XV/b4L6i#VMcP-3</\c[$h,VA-5hR!==b5(T:_(%lt?('X:6C<$HCp=Z:2an[K`*S&hjk3$cC&F?(V<n4[$q:
%Rm(+]ZKr#<H;?HH>*uRH['N9%dhdc9Huf*oM$;Rta+n_D(.R2tHIcb46XYDuDLA_OGg,Fb^@J+QVgV$HC(+,F19Rq+r)$W7#7./`
%>f/C^EbQMXIH6cuOB5P`7\[282(qm*q]NA`$EP61G?nu:eCi@<rY_h`=t!L[k*gO(pLm0?UA&<Ihl)Zp5<ADLoflAS?JKdXWTKSB
%e"Ms$oL^KcdaE5Z9T#_<b.@0fYsM(=rg%KI6]e:?X.00HEHA\E<^<j#GHab:YJpmC)?/1.2!="rA$NX#2qSF#=g-FiRpS?SnT/G8
%q)Pim7TV\B;EL&B*DGX^1Ra('^t&F_*M61j:1/W0b>P_-\>SHJo1!5,;,<XMBn=.Ve(>R>:7Q5;HO:0rT"l537(QR/6Ouq=UQu9-
%4uHi1LCU_#3VYS8p!aoVqU0A<T>8;]M/LcsEr"XY%di3S*SkOAO(lYIY:lF%lsQ@n2)'FX^YkIX`jhU4<pq[1RGd!Q29f^O#/)TK
%jC`=9=.8`d\]32e@r4'61=fsaI1kjEWs'Lr,L<iPQ%JD;<'BTW3iosOi#:3nClNjkl7g-AOd,*jIY[p4'M!_$EWo@(iBL^&_df,G
%.u=/]%&=kDpOo92*%4.Sp>0^+P9Gs[qCaYQB?iK8b%6>^iHb7Poa62M4*L5le8!\%"F#iZH-PYJl:=!YkcV>2\CP/*m/EjA%"Bo#
%f@kA(XW_TqS#oe62]EdfD_87R$iC+#r=<(j9h,ori^o>Bl,9P4$#EQBK@@UPFa56.Gpl-Ofk[/((ffr=+!O@Hc'?#OW;aABDV`)'
%QuZWX@qo5HkKfeWJCTmJ;tDJ4Y0t>/5tg'Kl+58T<KDmenDEY-krZ7Pj'.2V01T@2AaX>sS_+=um?Eh4aEe:Xi?X$O!k2X<"!gBR
%.a)[acjj?BS1;&W!?_QsWW=:snD_-;E1qpqH*t,b^;s?^KX`EpYq;=4_-QO%ok^PkrTW,N+>rrk+B#^BC\r#_=++"6c<-RRh/pnM
%&g4?4!6mjZZ[?9UDd/rL[7h"sX4`XJK!L%T!MBF>"6@"4pqBW3"_F()"Q(nDf4p$K\!<D:lFn<5V4O)4A6K[j">IaOhsSbQ+s5T*
%ANG9fN)pNn9)pipZ6lGMc5k!jo1SDr7g:J]'5A%SR"@SQb2?>WH8X*$8(GSW`i@(Z*Tc:_Lh%mSG:iV@JuCWs]k#e,#r!s+J>[@*
%5@*XBoi,S(50dd,MMC]uR%8>10qXF+:*nnYIT6\.VD1KjY6ndreacO6?Kg&hPJ#>^3$SV#)i`L=/U12@R=hg5Uh8$G^KEEPMUB]_
%*k#tu$WZgKgIfo(r8+=:GGeW!B7gNNWq<LR^YPC.Q)t/n:a"Y2(('pUc)PhP<^-f6ME)jfgH+tm/s9&So$N*p\o$P:+0pV5f1ON\
%aXn']70<=EFrr)rGo1mU!]Ad6KrCR[oA6NraGfW=QkP'E7caHG:1$e@MH:J7\,4&KY-0GF;f+.ROY\geSZ[5<<%jn=8&&aG0?GVc
%.o?/gAJ@Vl5,sOIh/MQsIOKNua\SoORO!nHk5%C3Spbs]DI:Pbg%J(]DosXkeUh^)_IAeP_D<50gV!o!];/';"c<q#;JH9;==jO_
%V.+4a3G(ZCjn>"N2&n??o5i((19QWE,luG#HSErXi3.9(Jf+20b,39bqU-^8917S3<*#6'n(j/<H'?/`985+Ec1S&r?VbmI[U`r\
%XhoBI@#&#ojJU^>/h1LkR:iT[\!LnP#<6FWfRX5q":\&S"n%Th=FT-ZTRbJi]_g>gpNj=nnJP146NE1h!\1/e=,.O75^/X9PUi62
%QW>Ls1=rIE#aLc:oZWYmM$aP/"1'bWS[_,SPTrW-YDZ'r]XogK:H6PgLDO;AndtDSP;X5:AOGB>dGO9#rp7Lo<p?>8fakY\0!4A:
%$+NXJR2[D(pn#3.G_YFEWA9lLadh=L(`qfGh]7DEM:BQ?[D2-PECI_r!^&\#iN5P42umX7[P(L7F/io<b`uCG>TL@n0&da/S18Om
%$,.M<'H*6A3iRckJ-`]A?g[@UA;>K(=FNgsm\J`HaB^c##e@#X,?W$EG9J'GN!,QOV5n>,Q`;g6FtefEDWL+(3\AU%V-R/D^1K/N
%;_WB=bu^f#h_Q"D@(5Xno50N49/aleXsFX6\/@7Y-P77<:<)MTmS2q-S#UtNrGk9\p-mZS$fa@;J#WqbPQD_4[:7[X:t^jcJ(n##
%.8'fj`1`B*j;gLAg<<J3"<?^[<[<8T"1tS?#eJV7"3D^=@A\Ku;oUd3`ZV]$lqjs8Fh,QEP<CCV7jH;5$<nU[XY)6m^U^V`.3Rfi
%0rb9D43VuN-GYSeA_Ch?**MjQhi%ih,0;!tfTRA,TDIm1pTH#9Eedd)_mJ]]@Mi%ZpHm#jfN1@=nKGXRptoW&1)2!!A]#%7SZVSD
%E*^Xk"(t(Y%pmca7lQr!XV,GT?uFNB;#jg=hg<INefr71`^nGoh$\V<]@U!;=XNO?\mY414\3(9/a--h)3g"7fZq_jf[<C=?V*UH
%W_AHh(\bF0L7&thADS/V\mq`rN[l[a<;?dp3Nij;T5Zh&g0u?p+7q#.1K>Dbo)LRFWE?iM'+Ji7M=Gb%9%QaP;$3[=lmH;4.,Aq+
%'`S<NHrOJT;',e\-^O,'gHsu7/*[iVX>?$TAb["G![J7,,+PjQU/OZ^UHt.Z+]+mFN<jtq\1s$4]p'S>Aka!=+I?InHhr&<YG_4Q
%0Z%RO.HH7i'N`lWWHOHJ`/1V'iY*5eFW5X##ER&_Dik6&2AdHNW5)kK4s0skH^0MqX7iBO^:@"B5\u`265OTXWd]e:*U*'Ojog6A
%jZ?%4n[(po;/2\7?*dTI1f*__khkf&l(XY>mP7cH!7%D%.0K`Qhj'/3.B5guZ_eJ.#n<>i-o)+,Jqc4G3V``fZdBnlEu:Ou"Kn.f
%',`LdqJB=Q&YPJ^:sguf`to\4'3#6qeIc2XR"=da/mlqJWD5&:UdPSi5/o="AQbXA9:9I`E(d>0V)#J2-'sA<cOrXC-W\0m;B;OD
%\l25&+)WP'Kc.k"RMe'nRT?VihL.m/A(lH27_5Hs-):!,qQj@aT#4/g1IA1o3gd'P_J\j]pL\Ma8'+OeZs_:4YK:E)-Ge&F<gd:?
%@Ld)B<3Muu7KbZ8kc5gbNUT!&G"eL.-q2_9\`r?8ORq`R[M^nT<<QZG],*Ju+StoZX3th+mP8%c%R]o;FhQDYe%M3VYnPaqWlB[=
%^=Us1a`a#-adKNj=Zd(8UI^1e*XJ]a?8>/Q'=ggnX"5h)_s*Xl.o.s;C7E.%[Z'inO\H`^IBY7sIE;9`QDjE<P'hVQaK[1ejT.MN
%#oX8'RgD>@rjR6<\p@pr9H$qf57t[<<V=s.AD1DOnc2usr$)/+lp8(iGmcZ`f#4qX6UhOnHi`J>J>S:Y.(Y<O,ZQq8Yd[d99KkQ?
%,=Vf,k/TDf5l*Gl=p]b\diH\7H[J!0UT4'PpgM0Jr1I0RKggEq4_9drL3@)[plVr1.V<n'qHW7*G=mQqM1AK,*3-)"]Wh7.2;Gbe
%SIX"p=c9R!o>VuACP>&J;"r75*6hmkbKH-_NmrVd2@I]Q]B*(/+`5,H]/QYVCoMY,IpsaI6j8Zsj2X)/g+^er^a%r+&6VJ"ILi1l
%Y,E_Nc\U:e;5rW>Km"6:':Kt_,nQbf3E4K:f..4M?&\SJe5tEGn`-+E26<gY+^eI:UA.ucY:'4cS(Z5rPJJV/jLVq2[/]:.qPJY1
%in>rq)LYB^Lm6f<Wi3nb:g5/KfQ:lsjetFal(Gb!J?dcYC\:97#3/uHX@uG/1Pqlo*edQi&JCO6]YNI(#Zb%>P#i,>6G.ufCN[h(
%\Xh3W]*`6uG#sM,T]`;j'jHh9apk7;[W&7d+mN.p]W,MM7,<8gcK:-Pj%q3bA5jm+:!],;XXf&[,P>l2ct:hiAcP2CrV5B1>T^JI
%7CS>H&=YHDWp<s)T'OhAGcF[eNV@DnUC4.!A9X;1`Yl4Y*cJM%&mnaB=H0<omKlt$/CttS57E#OjB;70OXDf_83m2PZ=V_m%#F-L
%D,q^KC"V$XEgdbg_-R'[ABE7=Ba5g+e2@D,MXtFUh+m7pSl,an*1g^$:8Xd#%8d=7_EET]H$=[i$>L'SOUWn;#$kcP"aDaZ4?CSY
%OfM@*%FKbE<RV@OCoiFH%<b7(h%S?$\FXI_j?Bh5:a8qU?[]6/f@-;M<=97J@ukqpI<BCPT5AqSOIW%>>d[0Sj.Kt0ifpJ<JFotS
%+F9S<s,i%:4X"o&6Gt)%nQ#,.e/apFDltghD(a*02:"<6b4T8WYjuc&R[KOo?(>?F+ZK,QO`,FjoUVQ'mQ".&UA(QnWPHn(#qVqd
%;aCV,"JPulCq2\<&VZ7'Oum[rO?&=\K`%[TY*XZ4f4lr$=5u2+C5-!Sjq$gt,1S=eZ+5CJM%?euS?7ZR'PmM8VGd,e?=-M&\q<Zl
%9b@'U6T3N'ebqH$eMfqX'M&PP9oA+c,3L(0J7L#m;]LR-!Fu]2T$a>cQg*GM$=k6ZSnK-,`=3.\j1:]&Ei?9C`.l%jg6aGa>/3DZ
%1P^)<BVrc(%K>b?KW^_EEd0!%F\I7':BUDhlKHU6J-#:r6+->FOFUXQ1eC:Ag#P\K7O8`MZ`.).AI_,37-7f/4D<e!h-,(JG=::9
%;01[dh08CH*pW%"(sBko9Xh4g]>]i`-K38Y'2TciBjFp$-Sr)&:<rV;?)LRBVsB"rjg0?j]hAgml=FX_%DaYF<T@)bLQahXe/@Iq
%WK)J1TM(j1$ebnS?$(-1Q\^+d"pOoXfB`P@>LDbdLn@QM\Sa_N@iPC$]d[79#d'-P=:DV=l^2eW!>p1Jj&g"C=,6qEgZdVG#;3Kq
%*&I0=C?ZkiB]XAjRX6^K2?IB5eq"6>')M+c%+23q\Zucbc[K_:mdp*nT,MW!_/:jDFaVEY]!f%CV@K3#[%#NAZB5%!_Sb3'OPS,`
%g!oY7k8&81%Eg'LD.<_sBl2u?JU:H^l2"d<Aq<B0h0bQ("Z\N-.PJBH-WBPIFDlkSfe]%HUOTm7V=3cPPeNE1Fd#199Hb'L)i8HQ
%R3$G@&6>eR@!D_/^1QS!d!od=<&EsgX<'W]B4apDc'Tr6"+fuo>+M;uNHs\m=Z&j$Ln_Z+!6.nD5LJlal#&(lg!&4Yq-j0dg&h;D
%qs3!WEhWUg"P2':E14?']`l`sTPhORb$ldgLL@BQ8%Kcc(,+t`k"/OjB\d`#Uu`)eM,CHOR__gggYWT,Ad)L7N;BuQXQhGKY60a"
%:=d?_$Q]3#]d[73ATAXN^#nm+<*eR$72!:-m&1nmP#`Kd1oqi7Xgo.J@9Fh;pUc`=BQdcQ":b_M9jOplcAV7)dG?'`XqnsIY(PSi
%:\=I/Z;8XiVG`4tc%kDG?Wu23]=^n=L"+!_LjG2"c3srMalJ&3//T[d*aIL5]p.!^26n-FHPITi1%nA-AD:=nAL9Mso8L%_#Q]mS
%-os/a1YEDt(\ruA:6laFId;%LDtiDdj3=D;OM4a-p[-Rek\+($9+1[46%DJsWF7X$VP][kT[V.`4Zkkp.e_!W\0iYpq"!`p^:[[&
%h1pJ\r9pf-'1hn$E9^!?>:O3XSW5m))Giu0g`7s"$5\f^iuU:HGV\qL2kj5TRU>\<V/"P[/+_<7\tRSV]tLbsDA!sNos%Dp8[Lg,
%g8G&b)4I?!Pt`>^cKM!X/p:__N2$i^$R>a0i41#[(MbZ],<b<G)0.97K[^`"&.tLki+Rk/;*ua@4>u:kLd7gq'+r&@X[,RI;:CYi
%h0SP/(E&TogL<S6V'f&h\D$'1aY**^d?I<olL:J$ip+rURu:$QjFiGo\\8_g@=;qA_A%dj[,`Of(*UUdnN:m4OLV\TeNk^E,(m:D
%\JqW+,-Gs)NNW8"U))tU"-Y#\+rtdR<CVF),3;o#qUJb/MT*3#UOTm7V2MQ%23S?WFYY.rm8)9Z!QeQ)<`\Xn@`2iTM2BN6..mrX
%L5tR<;/>hsbRb5(2PVhWb,.f=#).T_<)KROB9U<!CGMfKY7<tSO9AHRTRHLZ-i89SgS]e\<DO/h&+qZ<fj#?Fp'L/dO!=.)^8FEa
%'T%g'j@E0cBW1S%VNFac:h$^nU<:^PLDe7ci]q9*NoOWGOjeW)C:.`9:6=Lq8f)pNe7_U1j?75c?X*]nA%TSK;n$iG";YFm79."5
%rXhBdLY-L#%W'd8-.LssZp=W"`cessi%s$k<\0I9[PF2Ifc-,f#Ll/HMOD-<Xk0hc3!ORNCZp)'!6MiKXVU<OiF9L*3!&:?Ph$ou
%HIS71h"(2ViK(+WY>62%piBn+564?3>i&1k,I)pQFB"b-,IZ>.T.*A$@NEFRJ%o\k-/($01A15B]M1ob`]jg`$Zl>E7m=um4'R@2
%jp*6f=?a4k:,PGIeX?E+SZNL+LXrEULQ7Sq)9>n9`>>NFl<[Y^jeG&!N@FhBI,1+_9JEZ6NP$Lpj8Gj[REH59%"fq\0]A:T5-G.q
%KF]4H*ZBlK<pMiJ7Cub/Z\)R%a3F$F9!<3t:L!VR)V'.MNI60>35M5Kf3.tujL)D/]X%0C9h%E8s2_5omhmcg$ggDiGE%inC(%Y1
%ii3AMaK$0.o,t6Z!Ip3_eZtOne[U9KI>NQclYi!=h5Jn7CZNCtSW4B]RIet]3%b7HO$,aJDE!LJ7pZ_LHNnD"ZM$u*GOIJMjH3P8
%-eZ:/b`V:=+^-9Zl_IdHbsFj9I;60'O*kq)Js#Zo,u'.ZFJpekGWm4i[2rO^pFdP"pbMup36=UiCJUg3kfdCTWO4sLGk?Jk?tFUZ
%#](L6)7JkR8R:gdU`!1)O,*a,1J4/#82FG]_nd'#2s(:cBJcJqa.]eP7R:bH<CXu98*Uu8,d@$-?O70gRaEj[B\e4g@N%@u-i(W>
%;`l_<k*C_Y>lOjMp1F\qS1c<PbG\J(J2!rV4YV/idN=Y"Dliu,;n+NZ3WLPgrQpAe?,e3+JlcmN>Wqa@jK6B3dkUFm1#t$c\c:/o
%@?4A-<b#TpL0qgDbO_5EZGfVubb34,Ce`!cFI_<T;j^ETc*blH_!/*^o<]^"OW'a<@i`4m.?^5D]H[RAP-<j10HPB+rch[D,c)<o
%Mm5%n5e3onXA+D_cGCND@4VX.-N\PBfVMdMj!QcY8/G:i@_]%%EUSuO^_0nDOVr!`\LFA4<9oVecC3+)rhG&#JJ#q5hCIK8!TI^l
%q>!"dbIYO>=rY/h$E=W`QE<D3fGWh#Ho]kMeGtb+CF$iEOESIGRqgFSRd&5dW0Ob:ge96B?X!]C$Inm5U\<DTT1Xq.rW">*HGgGL
%X$/)_,EW(CS'eJ_6_T'C8QWm80rW,j0RI[a5.U3WRCdm<N6;c,3bLBA<`OTk;c4uWd?eO,5T!;gFb,^K/rh6sK@6;k8J.C(lUU'#
%p>U(DT0-hUD)Y&DB'&HdlVK^$MNKB4EJYHUo.q0fS_!2jSf'#BjVX6J8t8?p*otdtc4=N_]/$^j')9qRFs;'%"Hn`0&qMo>Tb>;I
%F=N[e8])rbStS@.(0tF%<1".8)dPt,T/Ztj/tlcV5phla4@gj5T['Nu,PT?[UQI[S(R\T-/?Gl#ENlF=gE.be8\jkK:ZQ+<[9jE&
%7jRsb,_rjLfdms8!),*O,YC,ucY$S$/si!BXG'[U^E8]kcs[>]-!\0MdHKNK3W?ur143NCcR$FMfDgL33&>ho"0P$r1aQZZ6LJa&
%E?KL'YO9B"Fc2NEjpk_G=iB_h5T^CaGLd:[(`2MidU&.OhD/<+rQ**(]D6JU1=kOi<kL_8*2Fb&T$T!>@bUTcMH>jTA,IQt.2-;n
%q:VV-QsNs(hPso9Oj)M4VCu$/IHa>Ubj'g=ORuadNs,_5HXfLu.MhsPi>kN>WBB>4^,EObP5Y>4Fir%hKaD=a>0?ZXFAML/i*9pS
%_41YEX"dLjLn!\c,6PWJZYV$$oSO(_1S-$M=Aa5Uk_4n:.&8O8JZ![]PJF#t`@#K$J)#afG`<[t5'dZ:,mMh,MHA-o#`p<0Zr1U0
%bXe4fP&)G?EWO:ihCO!X-$RF0R7m0NlW/K@em*W#`b4R]MOCfRQ2-@>H!'545Jn`?+MkfN[HA2#%mSV_W0C!"aj@N>o9$!t:O57f
%+N0J\_O(R\oGMD6H5Ne^PoeTl1-?Nh#G]:!:sKln-lRqZU*O%@-0GM//0^&%[3:&BH/'`c5P.4^'dnoO%Fa_B5,k?u`7'ft#1E_9
%j9*UDC'DDUN1r_U0"AQL?A:Vq9Ahh11_8lU%_^P$[]2Er)W]Klp"(Pb>S;N];f;joD5U"n$bah(i?<@Wn)?'39">e*I;<h:D>iV%
%2Z#I_M(S)@ZRWUbSMe#T6).6Q%^!RBN90iYR`tWPEI([spmco7Tk=RSMqeR(N]),/`)r=@985>U"LR/@[DAMCEL0KMe8$*+q7@/8
%a+$(Kk7Z($97*NiNOL!-d,0%A3/bnG;l8_H:.'eu,;j?j/&efTj(!6*j-SE6hY>rBPZ,a]3*g>0pL&-b(>%<a/B>fJc%j0@\'GHH
%]IK^k7qjRt@U37L[$621*rZc"'=$m.Hl/H!EXV\_g5VG,V^&9ZJ^K[<+A92LTiZRVEU`Ig;=*uc6NE6Rql/`M])8g$2>?0COP+Z/
%(Vc1I.'(S2mQ,Dp-gK??WrigRd&eT>kIWt&nUe8[),Y!XpH?1TArj=]@I7GB!Tm/`(<&TO%L`LVV&XJ#\G)<80?oB#*V_a-2en)[
%Ho[DT$L"):@Ku?3go'd(2oq6b5Eg>ApSTtQd+MRpL\'Q^X6E^XR;e[i;l*41bB#1RATOkUc?j`e,cCOBD3:/T*mpB('lD\HeT!'"
%M7mr,d\&9g\ui!!.H=KR#>B>*;8\T3^fY(TR0ESFq-=a*G&LYLnb?$,?D\<5MMV"i9Z.TIGsoRWIMs34D1os+GlCK3ppY^/1W<E:
%O-qtJhn:`u!Q_7c7ZO&Na6XnQgeHtY;GR'4#fN&Me-O@gC+[+YGCV3iIB5DS);Hn1#;gW4klbL.,2Xkl<4AMJGn__P&V,$cp(hfm
%^5l4jSBnD5TC_mOl97GMN)lRC]DQ-tMKTooJ\^Dt>^i#FIf2\&.&[^_[0_M=?-W)l3#Ro?NZ&\gOpt.UrojS+Ff?N9Ot97T8pdX8
%k(V#m*c*1V6,:N%fS=*S-tnm[(PoXrLPBn13<W&ikDO&;@>@[cd&Z@_.4Gm5i\8?p5!PuAF<cM1F&'Ig/QO<Q/bJnif'2iHaVLgS
%3p&<!muQ)hU=\l/F.LZoA6)CeKX9=s!!aOn4QVj+O*,cb20_LQb/R'?VI/`Yp[cJOn;WT%)BLCrpa\h`EObV]RjILqf5/BUVSG"X
%C5/r-_c0qmK1%^Udn9'#(EOt!3PSp7(B5UpMU>u?\V<QYH![H7(]u9q>R=7nK=(=gf\-+fd_(5Pe!$>:KF.4L+p^A'M7GIukE=eF
%I_=rK+2o_thn:aC(nCS6jm#Y<okmDee4%pOdp@a'/JTUSeD`&i-]Y5eC>#Z]H.>=-SBS&lnN*HOPUuQ0cf'>bB"H>?KPGJcnDjFq
%Z*tY&\iMP9lr5AP)9tifQ%Z2j<ka:krckLD)cFD3EE"Z;^M+)\!i<^CSr@jW,9E#V##@,L16V=[nN6'og6oRCW<oEhi/,s`R<Rq%
%*OA[)TR@Gg4FZO<DO8%eo#iXe<OqIr%L6'X,6!$6fm&`SlSnM=*gcSR(*+(WGi_;;pFAD5^17l0*WB(XL%NgD^flmZo;4r<M[UIn
%\mp"r]<JXgds.BCDeaB/$oK<A6X'.^.O0+eHKglGg@TQbKsIJ44iZ\."J*:#_\B:HX!3QX")!>55Ec+*#m&Lib*a,DFHqYZ3siSS
%2Xft(r21(+J&3'io.(cep\RZ0`=)>jeMtT^AjqT'ZWE&t@Ac<`O&^rj>G'WWBTMRMn]'WR'7L;8!-R^VA;be%&lWGp@r(T3eEn6*
%VFW4c!b7nBIFU5Bo7tF)V#$]-/M?L[HC"!`%6NPL2QeRF.\uWI/g4HI$a'"m,T<81m13pNhr-A-fdC_))Im3`_=/FH`OXju`tg=?
%#rbY^afI-9VfuEMO^H05SbY(/(is&l:&Y7.a4?o4CN7$jh]G2uh-V97@c8(#a'f)j9s;$kOLc@lVdP\8!lCn,7S70n^:(QI[;\(k
%0ebp+VMh)#[?SCjbcXEh#!744c'j\VC5XHspqYHjC[gXga#ST<_R'7D<m?E"#o=l7$q=s[-o4?n#[37Z`@u?/Nj^)GeJ^dH\Mu*7
%IoQBiM,?F4GjcICKM&>1jSJ`tUOXh6$gt/Df%%d,ifWdmS_PaA\cfHf*N_,`.<LeDr[daKF,D#l;)caP[<L.o<<-f1,,NXWhUai1
%WWBW6!pYmSF^n0mZ3)Dd7j`3qVg)KT'sZT-orNm76D&QC8>Ot!1I5"1OZdi+JFP_p<%,Ce6`YO+8$T(qS-nKFdAgS`:%#ikc_X.K
%cMbC,?Q8GIMY54in0>J]@EXF$!'#D9`YFUl0p\,qR=/IZb5c?24A4D$Ho>,o6JU&k?R8m3K*#3j:pNX8,!T9$7F2^F`Jo_C!bj*c
%E\!i$%P=CJ?$>!f2H3.&l*>*@F_p-:iE#t4`Qu*OMWQi&TFn.:+IOSo[[J2EXEDtFlJC"\9JebU'<Sg6XAgO,C+S1T=9Y.P:cG3l
%''SLEHH3uJ5F"'tFJqo:@=gTlM<R)@.03plrR7!j>E,OK&Yi?t/ODr0N3^t1Yd61&#H%(Ian6^5MS6*[!OS%OJ^U#-.Wi%.;Ri`@
%NH_<E*l,9Ei)@>0khsq?(q1glj@Lp@1r=K!`QRd8p&2H9&$)aD(o)FM7h^`H"6G;D0(>Hl6/@6>()A,a=iOoB)k+[*b`6#9Xm"b)
%5Nt<p-,Q"gqcjcH?i*db0St;<Z/RJh2]XR=W;;2Rnt]%6K'F/6F[h"!%TH6%f9ZT@3g6SPn@#Di,:CB<,GoH+HA@9dmHd>ZqUDmj
%+s^krj#Y@D(jNG8B!=Wkn(4,*M+b?F-Fn,k+tqctn>[>'U8W#L#Arb..bXF]/\d)%[piBp11nVD,=R8CLT;1BKb9:lX#?_tCcNEk
%$u0UID8G5r<EaJ59?V+ScKj^_roSDcEIs6FbuEY3G_2.0E+'Br@]jUrAYZ%8?'q(gkWLQ6U)H!b42]cEc">i\8(ECu8/SrY^>W>j
%61Z\K=%ag@(-Bkp1]pPQ^?r:*$MT;V8]uKbFac=q]/i^V](uHrE+HnRQ.ORY;N]S)"me["-IK>rE4"tXoZWk-INOD3@9qD6M#3RA
%fL/6h`MB@*O&;^V%J[K0pmgUMcElZPG]CQKH"D3)^k3V_SN39Y13'IVrMdLTaG`7-9Y<C5S*aisSjc"!.8T:>I^V,2Si06*6[].h
%Dn,sn!BiEch*^@;Bjq]]SBN*eNn!IoI^.U#Et<#,/l\=81)</mB(\6RK`Qu@s/=3*AJ^e6g0&"UelX,uOJZ@=+h&[0U.Z[9pc;)i
%nT<i07,9=RXg"lg-0DWNK$;M,CTb[gTf"cD[VZH!G%5o\=G_h^14`Cj5l@im8$VT3%ZoU;3^#=nI65DDkSpSVdO;mqV/O:K?/MSM
%+IJ9_DYaPNUKT+\L!LWdJ(0HrrCj-eGa$`8b"^`2)I$](H;6S`CF8&V%!C1]R7:]A4;KGc!.J\71?)>K\/K!-j"*DpXZUp],?oQ%
%V0I6$2gBf:G)hn@`pVatP_Ql,=*E]N_](>ub"N5+G;0hPe!iE+<T-(_f5AP#.#>JKUO"t@4YH+.X0>#.TE)jOc,/"Epb&eaUK;fX
%@PhSqeZFPJl=(U=a.R',h&N+tFtMFCRs3^k#Mg*[;f0n\?Ti-3r>TN[l`i<lqp^B]INhNB<bSmFK&hVN8I[cRAl1Y<jCG2V+Z\u"
%NftG!pImkrU?SPDg\X^?g1hC-p55\C*'9"7X0sQ1,MI5)Z/hM?or6K94aO,^2l^ZWn1"%**I;hRg0nB:Cc?Tfl?82[&_XEieM-Hp
%Lb.!R2j$gS*%+[IK(=93lsY$d+LD)6Mim33H,XWs<0o\72:6I+)NLAUoSNLrVLQIpCZZ9efPHdP/O>H7,sP+L''i^0($0S/k2$!*
%O&`mAVjMkf:2`0T\tr't`F8CN*XS-\&,<Ui9gm_+b\H;8hsO5(4.K=2;p<jl9bXdrq:mZ2bB+E'g0UHO2c@>5K[Z]:h*tZ_E#%*n
%6%*;1]V9<o]"j5+).-kXEUE.o'ks#m-5*.FQ8Og#qD3Q6T'au.#K9TZMYam`q<p(GhcnibPHsJC&otkO,U%&n/\8pS14seg+RUS.
%G#"\I9LWZTYoC62N8h'1^n2P<>6G9mIT!9q=#)bN.fX@HOTH43]"QO=?&`#_<gI98j(gIGZDtmLCA:Q$G78ON_ECF;Sdtefj,>Tg
%_$pPH;*,L%4OKZ-.!GYm=]=,1DWM!V\mk:Zgf5LbSJDN-$)M%X,-hIX)sG^@buM\ec+34lgDRH#^jq2jfSdr`qJlQ1B#--N>jA&o
%\RB?TlWq5rlr(70X="s3[EG?=e>7kI2AS9;NYB!)W:&DpPM4.>m>cbC*R0id"*r[)WnY0K$O0b5cGs-\FkuYn&5c!#kV]9WOeh"`
%\9g*G?VO.$brPngj=X^u.&Qa6V%V'u'bH:Pe[NB0h4)fW9pP2u:]6\+@78$ReT4_r)[I]3^ai^3"@hb6MLcOl0G58ba9U(OT)D$I
%,%,a.##.0QpJHBK<&8#c6%HNd:bT(hh9in4-A5]9^@Yr-3QA5sR6FtRpGq<$RQFI91#)!AdQZ3iEqq\7;n:")*)UHaV70$A)\s;c
%1"]3pTR=6o=I<2BMYb>mM(n='b*ip;+FZF#Pt^4V0DqB<5Lrs'qq6'*\E^t62cV&?WUrb&0G)XC-TXG(%(l&EI@S`nX/a*IFi*\s
%+c0@nQo"sh+pU;h,Y[gmp,54/dsPfe]Vp/GbAf%i%[(V0(q0T*d!-UDelZ5pN?Htu'h,m<^ta6uD^CX?`fI=G#cWpM2:>F_f(qe4
%Y@fr)7/lG$Vd^H*L_fdNqEEI'E^;^<]b:#D5@(M"nUBE(13P5tOQSfi]8`sfK)n;))fp8sCOb1+iekNaJ1J[7:A\'CC<6aC(!@`X
%-5UG_-;aTfj_U2Te72QODEd:O03V/3h_@D4'd7otb>&fdg;*b'=@nda8j'MJVSk^lj,53qK*P3V(#*)<Zd8:=HEKd28gfU:8&M?P
%bT1_@?(Xa3>rk_c,.2MoYrpAeOlj'0Askg(0\)[;fmhK#[rNR$($%\]XR(NEJ)0GMMNm/1T?9Om3@RJb5,la8!")7ie4=9RFL751
%^aIRp7@iqt\X9E2mA1QjeD,<_@Af>&mkVi-.-I5doCZXdG-Xdt68[itgIo+NaGC=sQ1V6Y(eT)\9H96he++?4,);g8P9a(%VF&P!
%S"'+Ds/Z@k;7?h2LaMS)`1q&#G:UjeBqP>#dCqhRk0[n?R3nq&F_\n>c`&=@[u7*njoalChsO5(4+"#X]Er.eE'Y]@NVP4C8.1m%
%&-:L=6Q>i7nI%HPjBTa^P*lbI%`,\^'O8)^P6LCIR(F]s+^7oA"$eo)or:)(#).PW'es+[6"RTPZa;1hT^7_#5e6;Aa<u:]4kV'm
%Rpu.%FdS#ndiYs#Y-%$)\Z`^r*@LP\Z=F>VRtS^F&puK:Q$K`II9R^=p.B/l2a`6IROqmK*`^F@R(%#4Fg$F5>#G>tK-ogG&Q^/l
%p'hM4bPKhX/4eSS>;$6<*lp@)>>JNj!Odm`V2=%05HF&uE$k+h"'h4o8?!ii%NaH%/rfG\`E&-=3c`m(,jK($1&dRN?dEk.l#XGA
%d4h:9,N"h'or5)'$H<DN8/W^1?A3KLhARP`p:GmnM2XLMR.:E]%co!_H=Jb\67;m@4Ar#Ff(Rc->")0V:l?)^X,ee#n/oV*NqS?q
%-QVk:.m:b'mOP3<R#s;7NrSM'UokTh/S-Lu''70^0)C>!+u1=!656[,0IU\SA/Rl/%95L2mI;"?-7;RZ)&;`O]SQW9C+'dS[N5T`
%9tI+XR$)5')kmPd;q6r4p,EMfXHc8rkC5\KkNgeb[7\M\=G#A\&(sub(A=^cQ-71(?*tjmEaNanF]lg)7'16]R=3POKE,h'IO/.r
%2qFE:rC$O_[F2V.%;q!6blAseAgXKsZN*jZ):qKB@Dr40qj,AJ1J=]fkA:qhc1[P&QbJIXmG<LK\un@Gr?fZ6TR!kq`!W^[A<j(!
%/2+ej`CKuJ.ubOZ8JGk4V.k$kIK@0Zjq]0;Y;MOO)VT?%$2"h];f\#CMSOii$@Y;rA,PiYMl?RYUE7IGL5cTBs$W3W-bE@/0EcRI
%R!+-GaCfX4@@q@;R=(Mq)GH_hXe*C`.bT&<6omtCAl^ImW3s-h-&\Eco8TS<E-<]X1=p+"ZRV1Y2ccQ9Nu?2ZgJUtinDIk:@K=Sm
%c/sdVV0HQ)dro:Eent>'pEk$"B?@>;XI?Cff#gaips!FGT]7FM'd2/i.d]*$oW1b@=(+J#6ACHsFj2atD(N"M1gh)flMV0*&TnE'
%4Tl<9NI8gFZ_FVY^AB*u$0]XpI$;s.p_'>#R6FtRpSiF*h2165%R/#]Hu4"uCk%k;S4Uk_.iasYEP8G7n#5SF==pV'n+72*DlP9W
%mMh(N%;cpY9MNlI=,qS2_G"hkKh=SF1fj8M7OU`JTF5^cp$?D']bA7HZ;c<ccW[OLiP43<e('@lBNeM;#%#q/F<FT^B,<!;!OW1u
%EL)(X0mc6,kFA%Y;luU\>#D%`/:Z'8,H@#B2+Gol(dK:Mr."c\=a<3.J6P0dI'^ltUc>>"JeG#+pW["4o(?O[RK?rtD$`'S&(1V7
%Y3_?h/<c,.TpD"8ppZTDZQa-"D4+6P5p459l<kak?muL@6Cm&RKbMhAN1gmejt0bU3l9jkMebb_7E)O8jh_G;fR*?0:$^;$Vf=gU
%\^m-i0<-2#Nh,2ra8^=$;W$/1nP3i<FEG@U=R+h#YiZB2X+'>"+6@%t@8t+H=b;!%oa>Z?VJ6j(UbpJ4lAA[V75KH(m&LQ]apoP<
%q)5mGa=9?e=1[r7Vi"Am==4m&]\;-+\_a[n0.J#^r#-X9ZFIW?s5o(4VHB?;S-ftO/Ts-*6'$&e2i3@&kJVIXWI:C'5TfUab@si?
%V@n=1>3)TR*Y"R'[Ag85<]f7Keuo+pL)*f@]J"WSk*f2b5o\E\.13]G^YPC.[@=0Te@bnp^oF19B5#\XJ>-5P#(n"q;&3WLmMD/>
%g*&qH%5%UOa:X<&#pji;ke,'-S07HF_jn^+3Pf8_5/)e;3=tSsPX>=qo/l5HDm/>MdfSF&HYL]-+*9SM>0SG,S4k2'BRSR-oCmM1
%aXb-<@E8&E(4g'9J0C!fcUH4bGq&C8R$QlFRDJ*i)@/NrB<P%,Iqh`ceecorg0ANuoX2UHXj13hl,eoJ3_U;Qe$bNZVfZo/`B](n
%d(u]6Wg[s[5S[$rd=S)4o\H`A\lb@)1?JSuD.4k;<2t$\=j;!iI'1Te5#UF@5V4k6q?2%2;_8Dlk.#b&]K1og4'tD-7=nIDHfK1\
%^7Oa-$(@.CZ!('(+M6q($:!8\;c,Pp?0Rrc'Yq*@I$sC2&<US@+]5'!0rTdb9Hhd(6l:W)XE===PZ:HNO36?[o0g+/>&A@YFU"I=
%TsgtIN'7gsU_)1.md?b[lsq]sd2Xk<[sN2mc5pcqr2;l_6K(VBr8:-B:(+<p#[IjK#317!+i358NID7Gb=5LQ1eUD-fg*)58qK)g
%Zf>bXUl,ke*^MdQOC\85I=Ulc2##`@?R#Du+@M)3VQY-<9!?4a*a__:B],sq1EEU5s"QV$lFQta)sa!aE=0+,c9G%_FOUqYe7lqg
%XHkBceZ=itcFfU6g(XGU)HQj1Q^@<A-Y&X#1-_*LW'n+@HPm^cXpfC"+UH+XiVj\h&[\!H+g,sbaWu(*kj[Ktc0:[&eIl#>@NlUp
%p*4a\>l\eb'G7OW'R^J<%@'E+.Z%JaZ5r_U5m*FhA7j,j!ci*X7%5OY'Q6iSJmj1]:nESBiMoboqVbH-!MVa!W^JRsYVg*%IA53B
%e")r)d[]s'4=j5!l2j2<WF_6569SQ\Q6M7#44Zf>$krbNatI1\T+[&b\HA%k#E!q/\0:\e7fl%g1YXo:oga-n%fDel)4Fr'_2J+7
%1grj<L-tMb=7\P0aK[NYH>JpN1tSO>f"MUnmG=A9l%`;Qol@,M4-kdn?rc3n]d^on1(?W/?Z7hfPD-NdMED*R@Cnu&8.D_1%,5#r
%]Y`0OEgIHLK?EuYk)8RVN)5hG_23qP.LTiomIKpdQb+O>A8jC:g0'cnouU1Mdq*bcqQRVj&2UUk-OCZ:V85OaS\F^'UYoSViaSdI
%`VSrVK)MQm$+``BQq'D!8nn>(C&qYP0Qbq"FZE0;A-N'$1P:NX^$iu@G&L:9fiKVN.j=6?-EldtQrk^$41gpUa,E0o&!G6TPa*_J
%&Br/tqn:*kS?;QKe7q$a"61YM(\0"s!&"pg-u1ibmAhn?Si(mQ-4O6T.YcP:I6H>ajaCdbg?Yk)/6I:BH2l,@p2*)UiH?k+4"+TG
%oWiLXGesRIGr@S`=1oEEH(c.4=%72rda<Y45(^Ghp)HtA]mqN!#&+B#Q&=T/T@)iI\eSJB`&;;9YS:ZuON=p:FmO&@-?M,K.1l\s
%Vmm`>()^jD#je<mpnBfQ[,Q`O&^Nh'WFId7[(7^?\[[7m?rWHJK\B2*>\/-uV"NTF9rTT&0,[WH)VqIaWGZ'=GDcUa=Il4a4YGXi
%apLAd%<bW(7+NT:;=C#ZVafc2+bga_!HM^>>r8BPGr%TU4!K0ibZIm1flks]PJMGZ0bU`'#S3m_^6Ui28ga#1iHZ2n"0;fg`$MI=
%<&Q<V[RU:?Db<7N?[J0LNkd%C*WpPu&[R[*a;GY3:&BbVRi&S)[kN0/a+n$5SBP>Uf/d8&DCXJA0>Du5bIdT=^AF+7IqKdn5dJ_q
%<tCnN)8tY/,KrE"?0MUEK!-f_8AAf^4G,ejY9[5fe#R)r,7-8OVMhK?H4k%*ZI'X[..sX8LQrfb>tc'q;pLE^@lRuI8[UPQ[sKpB
%kam\dWr_q8MA\0JOg,a+:L3$ZbUD.u]b\/A@p)5lW&_*BG+]t\,':#\CGSq4I)sH@>&Kd^AJ$64"ONqt@atLa0\q"UZrK1OCDfU!
%b,Eb]:1$e@MVF!GM@f1KVujVIX8?]c3gGg@fP**c1))dhV/Dd5q4&1ICmt)`Tg&Or5EbIP,3XQqTPGGfh%/.*FYkW7<aJSQ,\d4R
%(+K@8<^/h4S/>gYd,i)#$;KL/m6.Kt\OQbF%N[:S_8"fqd7)!9$B85qUDTX7L92L*).S%+'.m<uLD]BVH:Bd".:Ko*r\<n,6;?`"
%'CA3uM^V*F9XZ4h,D+Ta8j/)qi`FA0'#Bn\$fg9:W.%[2#rt\:!Obf.qa@?c-TfkSYeh*1#)oC6CohDfqZN887fiE?cdSV/MF>_+
%jW;O?Lm!;_S&Q5TV6:X:8'YJ,^X#_1>MiU(JB]bMf40_AFF@oUU-1OtN].G@=PnN6'F)T![Dc!*I:2BG20aT8G)i2FI+o5C)4U4T
%3[aer'_8BM8OoZjp1,[Pq5kgtNiRND]3KBaFBt\E^#-2r:9R]@-FJ,@o2t@X['`_\\j]89O&`)ZkGNJTftgp;D1rp<I7P#5%fL)L
%6"&<Kpt0KJp8+8Sr>_bJMq8OJb9jA[.+G5<%V\%_Z0?a;>`Yq4V?2=K\$L^'9d0q1U(V2d=^GTAk6OJ-dMA00kK<Cobe:N7C"H6R
%eT#8=JHT6WV&kG7]_^(mb3Bl\+'Sj1GE-bA3Ct5mH1F@$dm6n/E?\S4nOHL/lCQ,Z\*VmdL&CBuNP.%7W`Vu!2YB^qV3?\'[f#1]
%>!2fZ=S'>EqUDZ:Hh8Q9)j*,MAbW05"]r;Wfg9s9?7`Q,>D)+:DWge9pod)P^Ru"b\`7iaj*(7JeGm3np9;+U4GqC@lLm!FC[;NF
%TbNMK@9dB[H^WECd<$)i?B;tLIrFnhR[/d",>/Gh--2R_Xs*0R>JoU$DJ/^EV%mG.Sa%,AiCG<q7p7Q<lN@=n`@u0P`N-8f6=dT,
%W,Bjpoi$a+Z!&PAR?G%NMWRLfI;-*&LO="tp?W>(0%Rrl>29XCjk^Hh*nlUCT=LNLY?"rhf]0e0VB4P](fPbe1%bLM\6`*>k>j7F
%(e,8!MYogeb([a$OQr-93]G^VNF3I8&Dbb[(_'jL,R"DZ7cD3/#1Q*r)@U)r,+-JWCig[LK$geKTItgnFiF[<#:u[WB,CM#]h;lT
%?[eFj.3%q?BTaqB$oCPu>+7p8XX)cp_N7"KU)2KO,Ep@rPcXUh>KGX"'e:rm3%*1S>ME?Z]F;1?q,fQfhL0.jU)d,f=H,>G7t-=[
%kcRFapfUg9h`nQ/SR8sri-!_,*5o?^1"!0p74'gJUdrSVG+G2+<RdAL]NA=4P<c.EduMpD4QpV[nYlFG-*gKNR;7c.%o^Y<a<'W<
%J<Mir0h0JgW7?Cp]P'AC4UYCYVhM*%<Og`Xef)B">>:%LY]n)a>%1T<MgA+MOr`c"&b/6%<W6IsN*&`WS-I37)StnVoe=G0$:%!1
%h+uU0^/dL/l1*8jJL&:e9IYHc!!H(2JVUu)BSK'8SuXllC&H4)U\4_2.A:D/41,Y5?B3`p*NPOHqc"be>l,V_kG$?i0!Dn)S+T?3
%47D`&(c+G*P=G&#-S&CU3,ePYLRl7-0M+mY't)"o&17gA#,;I1D":]]T>M?m*.SMl;a$3n5FE=kRONUU]W(+g^=gVj'_,[]SDXQ2
%`^59AQT9)oqdGsc9TSOgr3njp=@>SE,-u)c\T^VBb&b%+ck:>scrDrZ;&#Sco$'bgRH^F0o@L=q?(9J&ao21ql3t7rVu.g],u=(G
%)$jgs@<e0F(pT$f<N0i]\.ohDSP=ZocUr=t#Ca`Q)<j5jKS19eAgGO=Ji^)pL0\$=d@pEVOctYdia-onGfK5Nl&ScU\,cTqX;4=2
%,6]q=bg/2k+]]E\LC]Omqbd!7d$DgQ"#Yc>_p1sf.oFOP9$)^]&A8h'QV4WmSPuY4$#2ZVA!E*Kj*`i=rl39'_@^#t'1n<Wq<i+$
%[LFR#a@,(i4D&!NJq5FKOF)M$<;..s`c27^_Qsi%M;T*#-u!sX2]B=4B\d@I.29MiQRL^:G>ROiGuMANB>9YX6E>r-bjV9F,>oPl
%S8l+]^!FgJe7_oiK96.pU^Y.N;lTAEVD%"DN6?5g(g)1j.g%0_eX(STSibYWs,kGk#Y$IAm+K>Wk(c!mTa)sR6_1'K+a\W+C;FrR
%;AegmB]`eC_]92[Y2e2#gXKuFdlFP?7]()R77sFnbfr/grY.+ZXfOd;EfN9IH6s%o$"I*@$e1,W8PWl(gg>8qhPX&e9R_W8/=B,3
%"%Yh@Lk4Tln%h9;.I(UW-$PSpP;&#)Dn"ag([$GnJU88p]5s.,KC&Vn8G]`>4d2\6[6ML-bQZS/.*"OqW4gcOR"JkXk$'Arh<1G3
%SN"ka)._-^dE>k&bAn#^pB/s5.0!KH%uEi>WHu-Co6\)>o;2(S-s!1>Ec#H6UO0V<TmC9VJ"5LE$&>4/%:nW*@*9]/Kbo6GRl'>S
%%t"YY(kSq$pO@+MQYY#Uk/;CpF&E$]eBo%j&j;(Sm19u,mu3?8IB[(If5jO\a5?-75,4A'b<,WNdhmlEf1,IAnMJX[jj%(glPJsX
%e>b:t&+(8nBCr?(]f=c%TVl`:YrfDlj(/_rk-6f5oqg^HY/ag[oZ.%'>D(lPcj>JB9ekS4Q'7&(A1Q?.\AtaUnJ?pc64K3$TfJpI
%!KYXJ:Q4S<K_=3]SgctKmZ%97iqlG[W+6oM$47M9AFjK[A1M/*n^P_.ipj9/.<td?Y!m]uMlY7(("\dk/GHmIO=_/gNb^ed)nUO_
%G(uWOf<U]!?BnUAVf)'?3-nbU7njp_lG'g@mMGU+.Fd.n<@G%]h->7ogUtL!b>%D\<_-'5+Pn:Lh'uhp"+0;:hdQ#k?0upQ8GT/9
%:lEdJ%d-g:b[Fg1Pdh4bT(cspH;#.GR`71@;K/#[A[NDbCc)LNX9N$*"C,ih_f2@eGXo_8(pQOifS@X#+@q]M#8:j*n>>R5"chE,
%^mAhVf(f0A0__sU5F!YcQi7EGAl"Al`kJb:2aZY9fkQDAXt=+,I50#?Egi7s[M--5JtP$a]Se5[6qYXe!&GaMkfQE?(Df+ZYrn-P
%n!$Au7*Ed+k7Zbmo,]+\@NES*[aOgZ'E%MY$mjM9\2Ta_+QAas0="M(mWi&Hd;L5G#^*YX2^FQ,TWpH<<t^R<%^3SpN?lb'RF9F_
%SP3BWZGSG9.%#mZXC"RKZc+FO>$k=a9RBj4q8MTY9*VRT/KSFL?lLUt@jO).BSDYL1$K?H\rSY[lF(3FNd69*kP]S#Qs1:re!<Ki
%VLgA9PqA`A.Sf+WVj-('DS'id:a]$,SDl,A7WU8IZB^28&&'IWPJZrj&<S'q>&RoLE>mU=@$IQNpU\&I.%"KOlgS5JGR?a>E%6^D
%kZ3"c"5[gEb@mrs3?4]cPN"T^jC+Qd(?KOj^Wptg6e"62=B`0-6u_K[U/ms[=P#:<]fYL.h;aRbmZR%AH$Lk>.a!on:%GZt]M]%U
%9OCh@!M`bno5;?$jq_-nM_?CEN:-]2=K.fPg/S+VPJ:1u6n"IbBq;=B-`j*PW\BsH3In9+j:QU=E7b5.)!8]FS`+i#[t>.lBRecW
%*+Lon:n\_ZX_CEt`Z3A]!(F/aKJZN)O/:e";8BWu2"X0*AG'l8%MB_/T,.,;IHAUbT1G3]s!sT_5@U4ZEc0>b%F(!+[_+B]R=a4N
%m<`'^Tb).qPF'IsGTXidg%d&3!7Q.Dlh+")H;5J&';a&=(\Cb;8CFc%//9fW847l&F?,hO]0(*_?Tu^''<^Tr!8$l,,LSGTgbYMb
%R>ur6?=j_\R=?4*(EM!%?g/!JE90fdZ8:b4)Ik&_C%a6"E/OHFgaNiYQ>W.Y4jD$Y6f"h>m96kepG%#)p)UJ'<LdN0or'I6]A`os
%O0-7i;n$iG.;*!FoBhFE0DE/(\jp*kqN+ZZqr@'JX*[/L8ZhfV>F-t*$I-KFgnEFb4jPT4T`*;%h,d<drG#1sq,h%`5Oe`ISM[A$
%_:A1b3W('o:Es/tX1CQ%b(_@\l2j(777?i\>T1AVg;T7QWi7hql!;P]ZA9T#D?`mgP(+\I.JL)&TBaRHo#)p3EYYfAS#>pThUAr_
%KG-P632mcGB[ciQUGC5#GtTnjURA0n<CdnG(:l>;d!Uo1@q8KmI;60'O*kq)&qta^.Y"j:\(.00\-p91`J=.3\*n^3i6N-OQ-0os
%@)uPbEK)FC<$KA)/en:h'PNb1),"CaZ4M7VhJX=![\2QKAuRWL8qsVi]H/r[I!@'AKRa$IC=2JEhJ+<B`qg<W2GEOQ::$fL?K<lT
%Y/(_$f?!cegBmj!G"]ST!/iU`-*Y?*R!+\@]U%GY@#qAc@g&P'lbc">GbY4oHkb\dA.$/[_g((9q!;\Yh6d@(f9;L]RJE^3s4E7K
%]mo?&\`i)D;l_3!gLK-,-W6`6?SZZJI>?On(Y?1J@r(Gs;hl5s[g@-:op.XU_G,hS9,IZA(9M8g+sM\&Hij#f"DW2ulr5;a,Fq>E
%jK_:PD#A6C:F4P8QM!b'E7nC<\He%B@rg$A>r#C(JcrX;GM\%*lsA$9YJee>G^7$&\hVR;3%D&1)_IfuLa=VR?YL;s;&0$i48mLF
%Ba]2jA22a@[9GPfIS@4:s6>Hmb4baAITOKfh/Kfm;)R<A@2%4sKYV?P.5lY>TJdC'@0#,b[riIqU1OF2Ej6ljSFkCD.]Do"U&JA2
%)!IP?ZTUp8Y7:9k"T%lqr(rt4d!Rr1K9.!bN:ca3n5l?\`KW<d5`:H2;a*+>'k*#&>A4Df)@!Tb=(bZdT^kUR_d@1*HE:C,Vuf:-
%gcmCCHdO>b23I,F)lR#4%MOWGfn.(3cW/NVO:O/F>i@X,[ikt'Bms2Zh7q/jJ6",ZQOQ\.!nJ_CmUMjMScI7=U'r\Th7fj:Ket+l
%*,f)ESfUk'G\t7B-,s<;`(A*.2j\+S[,Rf15;M3$E0-e?#<k$Ig]nDQ`)9aIqGj+-:M<op7bB[0'R*V_H6B6pppVZa3RH$tEj3U$
%#Yob.D>Wrd]hG8JLCS<mPqN[>=nVg;2u[6?QOdTQ#r/mB/]ckIIco\0@+pD\(9gcC6faaVQ8(WbY.u\InJ1)7n&fdUNe4&`g:F;J
%a],j@+!nso#5h_Hr:)-oFWNV<#!dtme?puOhl:H8e;]6<(58.6;_QDKonrj,qgG2m[)dgbO!2EN%*N7g>;R[V0i.'<XVAK/(b`-B
%?3*M(YMV&nWK*7fMQ1ngb1WDa/Us;Le_jfXmWd9H7E\Ve`(BAD/AlKd'(0Stc:pi\8/SRdr<bOWZq_nOlsGGGU;8Eo_#7l9Ta$X%
%(#nI[pB-=jY>"8=7/n2je-Y)8p":MtH(F.L3h8aIT4QO7l3S;L+iB!?]d`X>19C+4-N(]Eh4@ka!="^q']O/`ANoNS;H1]SVdefA
%VPM;E*B*ULf<.PK._jkX]?/u8Ffr["QGX]GUF'A=ql1P8;R%L'5`0Y[9P_e6.&sRuc12dI^ELFt\rPU.d"KH/fR]?b=(SQSS3kUI
%(1#SW]Ej>54\3Q+1u9Smlu2e)58<Gk/n=Wd6pmn%TSY;h&3t5b6"71d`_%WZj0-l*e!&[k`cWg5C/4^<bpbYMQ)j$odmRcJ/GI/'
%5'DW`^h\Mb#eV4IW?.p\1WL5_#gpg-^fQ&;#3JtlXZc\<_dBNWDeeuNC3FVTRi\6],rtpbQ@2r[*_*cJ/@]m^\u2uM<Y5hr^ger2
%[C^D110lqaqN"9VH21;dD5BPd>./+=*a2h&1o66$+mWO>;T$C=21M"RU;lIl)f;/,_fbth.W-8>TDmKA?Tq6SW]j<ng0JccJG_ue
%UefT4VX#Ij$43Y@eN;frqZ?TmUQA_X83ZrLB=rYAn"YQn]mZrdW2HbIc!D!R]`g.GXi6jL%^a0pON_([mRt.rm>p_<7YQmfHtbjt
%5BJlNp:hQuH>F%]T=UTPopACX0V>L^a>],n\</[&n=7Kojp=Y^DMY&tK\MpYJ0+-G^-AD@'%UtPlj<')eOlg8r-m+nVm+n>/&cdm
%kn[FY>%l"=5^8^iR-pWbVcJ`L\1Bm80GpR73IIk!dZ-J*$X[-@>E>o&Y>62%GWgoc8:o/W;7:^-U*uECnUcN$JW'JfL/AHHqEnD&
%"q"s[LuRC-eYYeU>3)?P`5/9\qCnHTEI$!4+Xle#;b#aEQaVWBLtc4!!f8!_UY`FHDsi*:$u.r6#0p$#9^f9O_SPW?fe,m2h[=/3
%R7>K:Z&B`*o`m8K+1*G7:'%@Kbq_H9Vui%&86Rs]">'Ffgn%u]g%dTo1"J\![bo;99PEP(:l=I0_.rh$`U<`f@ma8_@<=Np"e;,?
%Yt0QIM_9cM*\>24K4cA]>Hh=ir%DsJJ%IY=muUM.DikkYR@)MGg8LBM.WY$r0mKM(IS!nc2?FU4WdXDM"S),7i]Q<2KpiLK2)?om
%MQS4).AFNYjD?XZphSl[GADhr.e!)`!,+B_s6Y-1YGXJ44-&rOL6MV_,O"$f/agAF;tWis3FQ9haN+jhaK0'?f]dLedJRiuP(u(@
%DIUEo1;7O<3&d2?lo,;jf8.5#nQo#,hf3Fgd;%1_@nuptkgB1_8k[XBQ3,KJQ_p5^jJ4Q@Pg"GR5MmCWgV"J1Ujj?9`pdA(K2s6#
%?8dPDVBmB+Bisn`*&BR&B(M!^Yg5bV`DBLQ_QU@t?nKNn=lZd7dg"bQb-nE!,Rq;VEKFl1_i(@AQq^m8,GAMbpXIam?;L9-+cg*>
%DZd/`a)%\IC\hkSD^lT:1b4VsH?D='C>VsAU;`fBWoEoUb!JdU5u)2T$pud:9X-i6Y@UuuW:nX;,`f?B>Ecc=,`'nc;hK"d[UDX&
%]giir(Y!4d6.o84@IS2Z-?NfX-2baugPJVeJ;'\BebFW1p"for3.X%04/d+VHcT%lB?\f&S5ib1'TcrOh\eT1#r#mO9KPlKnu8jg
%&2R8IcIa?OZMSQl2D9M.X]l8H"T4I3^7Ob6(hA^HF\!<pbc\Oa[SO<3>X2'>;K?8$O:#jK]qCW#r*'#MaK/RSg,!srCGZgago(:k
%GA2&q-798.@UP.jB`+5@aKP=srAUT&2M,RZ4k?eC24o=n\U(`:;l+ij-8^(S3m+Oas6\[=Y$G#4.1N4Ur\X(l@qi)Kee)Wc;5?Lb
%?pL.P2Oe7g]<*gq&5E3/4lQ?+Y%H0;J$%Q)SRCO/A#^K>0QpMcBk3<ps!<@O64P:#O7.tF"&'O,M)00f5qZn6lndJ3T'k1Rb!K8G
%!4"gsMg]2sT5'k+Yai59k$0TSh;,3.dOeEa%%t1>+JLrX2=?_5=Kc<1H7M#T1;<G5SaTntp^E*;X](1_GLc%+PD4[4b<DtIbQ53T
%WL4cK\Kdslk;A@KTJOiMUbL23AFmWE.RmgLN,*',h,PScW-/B12@^:!",!B*HZ;eZc>q1&^!@YXp#Rf5:NgHG_l*d#g*Mfj8Zo2^
%;ouPma-iu=n@7=a$Ic$2<qONi/t$"?R8&1[l-PgG?o@taON!djri^ZS>`j)#R@g+<o--5SC@hOpZETU`3i1cA.+IYG:2JZkFZJms
%L9@gfKQQD%&qX[TkK:<@$i9N[?VgBp-VMqp$2PP$O/0C@S<3B7R/F#8R8fVeU6jCQ2.=Q:1UCYPc1Eds<g>6Z[g!<=?F%,i\tX3'
%a"GBu*g'SmbJ%,)A@$<OrPu>$J_NO*6++bul;=9mU*,5k<(5M.3qg%0'Dg"gl6#I[AF'a_3!Zu\U1Kc`b<D,B]D"LKNNLD(al-Hk
%K./aXU4g3F<QcQuU;+(geXRX[dom?,[7&M^"c$^FGGB\65oG(N%./g/$Z`PLo@gO0,2$,uW?,DBp'AE`H48;1#,I7!CoV7YqepAP
%Di2Sl9f4]d(3;Hm!9P?I"BQj:?!r$'C8_)D/21YXIB9e'+tXZ1fO+B!\>CPU7<AU"LS^k:qamM^l,p^Ub=$FVGd=r4Rg7dj=i6,&
%cg`oJ*p@*/c)@#+-&$YulZIA3jhstNa)J6'-&(0FZ=T>LI((D(g2`e73%V7:jnr&j^7OcCcB_q6?8AUSLPYf'jaF/pK-G>&cqC9\
%.(?pb0$TMB$VV\.eqF\#pIPX^/R@S_!p!^X]O`pi,._eNm!WRsda?s"/Bpk0IE#d6oKg<6q@Ut51=r`@@p/fV[&)f4]/Q^)-?i*R
%j+);\_"oIU<b"t:-02Ng0cJ%8fTM32K3PD-Os<`]RKNI[>$a,FE1KR_3tUQ+qO4uUZ<m17"pp3V;fM!V^*r-K\WU-Q7bkpfFh,EA
%Euf!!;:]5.)?o4i2Un!<IB)\q;K4&1ik^NU$8"3>o?+U7QFbQIX&'WslsM!4;[Z,ZDiD52eNgOR)>H#P_J3+;:=jGubnMp-$WV>\
%FtXEZ67n*EZ.l/!h3eq'p[SF,Oi6J@mS2r?""VlTX/eO0I,\_6[3;STT$FXW6];A7ZnCo=6Ut+3:bDAQ-X>]QQ\@LMaiF]08RstV
%@Dkd##I0s&a>bq-$;p@A&foGV2d[1u>^dC_0T%3mDY28QH@.m/,CW@u&4M/i4n^"re[9OJZ>F14E?[hJ<fO@!&A<$e`Q=K9%2uA8
%`qsWC'm$%(J`;s)E`0Vs!ID.Z'uMGA790f4aQ^/80$1+/j>!a0I@bYSZ9S?-Tg_ajkp^[(ZT>!<gTEM6R?%:6hNY0[/,:cPESZrF
%=j^9GA(D0Lkm4X3F(+\Z:`8.GpJmH'1c<2bKHc$39>r<9WNIa!/($>']suTA$tCMOT]X0&1GEQ#n`JYoR:S;kQn/8ug.G6B9WtXt
%HaWVfiK9(bqE[=(C[:k.qoe']`;Zd.C9E-0GH]A%ra<d'VLGbkXHsM:"A.-\HKa1'?J3P<95]'Vnf3D\#Meb&h,9El:U^@\B^GU!
%2H/sODQq.*@kc$W:5*M2@PHHEegRu:lKt+EhHQr#`\6.!Ra!T+QuoP56m]^7A.smSd:(i]PoBT,ZXm)[-P4.hC*G*M!VEEHP^X/n
%E&'`2bZIjJLKsF9140[\&I\*u7Bp\<,9#)B>!>\?_W;87cZQ1DI\#VRQ7Hi:.[kWs<M+)+R;ACLZT+``YWptb_Sg0.3\+fGG(+Tb
%ZNI60",<P:<7_8bPnd:c)OKHK^ssnss(8iR@lB>C;t^$13oI\fQG:(%M>.ad0d"%hhF`]i,pOZZ_<Bc?:?Xe:.GdXtOGuuSa_#WS
%eL?@"%A):?g#Y?HCn<6qXi4E`1c_?'l9u9j@*a5FE&:&s8L/%Z26,nOLfIk>jWI'W`q**nE;\b2hn7JJJi)#<_#>kn?=)saojh^3
%3b58G>oh.A&%S;b0'C![PJ/I\B?HuYfWnF<0;(C'Ad_X^[,>>,W7I^8PQrQ>OpHuX,[rJJN#%0HU06nA^R]D*G$sV,<n67r!D']X
%m5-s4\U&,3FBf>NF0jdSe^B_%F#0Y.QW%fflN^6O,;?TtU.J-X<8\5]h>J%I@b-*1Oa!"Z2jOn2-Z3XoYU$%<"`TJ?AP96A=e.WZ
%a\3,.Bct9\kIN0]hs:Z7@Nt1W?N2bXHMU%%Y@m`#oYF-<OoYhQk(^ISZqkj2R=(OOqXSS6r%/LGq23G]ef2jOh@6';R?h0H;t7J.
%Anpa6U$]3h2;&-jiLF?]JVZJ<\!-VNWo#pBB'UpR801rGXk+b;d:>2R<$Gu=g/L!E]""`6*1hm]5-7^%`.IcjBT[)G0ckm4X;J-J
%]#ZB-e!l]FL).T`Xf2;fMPsF'o?f50e>tt<%Vo8^KL0NcTdC#`iA!V-;hV+\Y6#m^R5V<>,d#P0q-:,,VgHC`+W@GUE]cM+W4KRW
%caLSf<)-\&\eS1Q>.%fii>J:4/b@h>G,%aWS3j/Q5F]C)HHimj7.Vq+LDV4=1EI":/]R!tNfJ!Po,9``\h2P1Js!$X_*,"FR(,,n
%kQ]W%hsO5'4'SfBF.sFCj@[7/KHnl`/[?!$_?!eS0S[It"8SAdBOY9UPl"GTWb)"bRS+Yre0)UiMjF&Qa1&5Z\>dchMXi#17894Y
%oC4]KACM6S!KPf0@Gg=Q\D#j+WW!Tq5V:]'W"tHI;cf=XhqV,e'TFp,-!o?/eSrauOe9H]?j<qXOsd7Ub=kde._W/RH/uhYM550)
%+YcM@OML0r[P9ld84gV`cAM-oCY>CJr^DN\mQ`&I^Yo<O$72B;(Pt=?*W=a+.:'9\=op.OSuH6$bC6lp2%5SI,DWuO!*N!H3KP(^
%S9tXBi2'X%ZX3Qu%V"Kl<AZ<1)=R\X71iBu@"=FGb)s=YA``tbr:"ID>59`0PSjNt]R#%joj2!$pU]r$jfdKGqiA7p0!=]-)-\F;
%B?KbX6<NL*h]5V3M_s85*D0tH:a1ij)9e-i\2ic_-q93F*7GH(@^>QuMV'0p(WA/rR^#T(DdgqGC<ldm>eb@8X5^NQoMX1<RB"<P
%Uk=0/2kt/7Tp8`n*%T!gKjsW=,MbXTFKE?;i,7"#BK>p/KKsetgIA?3;A9olHT>muGFn6)3"g1(@I;.076%-5='nG:Q&U,YN6JI;
%EF;8?/p@&:[S)TML1W.,)P_Z'[^riI:SnGiXM4k^NWZLb:UB7eECVZ7`/0k/XL6u:/++"ip#:G12Am8g?*-.n%Tlt@%oe%NStF/n
%WF'jN+;Abg?\IFhG(ck'Pt2b&Rj&\RDVO+,m`jrWHRbk1j^GjXUm&J3o>tN_B=AkuA#>j!HNP:d89mO8%L$fDbZF'8aWc&T95bTY
%_nKk^$Xhu9X%B/tCm(8(?ZH]F#Ll;c?NEBLLTW9'pNiu,e`r,H"&FT*"bj._lG'm3^+CES>jTV^VQpPJ(O*/\Jpsjh4QWkH+V0SH
%mc9ac,GI^ZglK!"Ju(W<1$fOAW'g<2+k@PDC^sM]!U2E^72J$@Bm='lp2?eB(')u)`7W]CfY$%0dadETUeo2=?0/#boJnc045T1Q
%03$+=eZu@SR4)-X.9FFBTQ7;67g<UnjY25l-mK*WK1ITNIC1D!e:Ahj>>+(=/rWSKqg,hXA/+3=E5d\Yn>PF=.kCO.pXVoAE/=5-
%:hqVUIILV]*BcM%9Ysa!RU+&dWg:-meOnk>aoiV;6;_<tDl^mVo%GRQ:Ai<]n_(rTT<3s0/JCOWAR8n:CVK1B%fYkPN./FQp&JtN
%q5"C:W4H:A2aef)#bjnJBtU<#Cg,I6?.WV_G^T4]bK9+pNI2_oH1&SRhu<+_p:JZMUsS"%KdRGtZS9r_*U5.od*p*aShpa-iUH"V
%&D+KRk<3QBRH5@I@"rl&Wm-KDXn1\2I:]tOkZP&V%p%+$9+:C`L)"'&n4UPg#ju24HL.ZDe'YqdS'j`,>QfC6kegOCj35N:>G+?D
%YmS9ZP[MS2;+n^!m?]6ABF#N8)$u<:FcgAEG`C14HK:s/^8-8`9Q,cd*+n+<fCV/4UMjMA!F?C!:.,CW818`ll$Au*BDYX6$Ob2%
%rD=WB>;!,HZ[(V26;HmK3h6g:]*a:0j3B?oL9`AIPUjZI!.]F_D2T79!_Jt2PXULr\>#?t."BWkJ0d`sn*49ALEm4'@tFh-^"cen
%d-dMP'C[2>pCoBDI:H^,Y(PQUkp!W.Kgr0nR>f7OJi4GY`qV;#`6it32LCR-+sg=,ROE[,lpK3pHCs;S:diC'/>lMr;9Z?39%do?
%.k$/Ir:2U8^r\f)^0*_PL[;&Y1Ya7I4nP.;?dEnq7:hGoNZ+W&fim"Yp'GW9Nrnl^AuA)S'T%qUHCJM'G+.mmIa^h@G&oT/hOr;3
%,U8hf36#.)jnMq'n)=,+2e[[N<6R8F4$%b%U`PTQBa`g&UKW_\OfqP$-hn#/6'*cLqUdL"dV27][ZR"*`T-)C)MaOU$S\"K/"gd8
%ANf#>.Y^re^ZJL][qdjufI]sTjb_YEK/>Y4P;#d:-o[mV[/FK"bb:9j;nEh4d?1rP;)>9aT;o0(@uo@'OKLdOp"10F5BT'.l]ShV
%@U5;L]qC[?S469L'P-b6;*j$AlBqbl0=k#"q"L8t3#Q7'GI4d]Jl.-SGAD2DMp@^JO1",m`Cr3Bg7t:!hP`8lLJO2'd]l;ZTqJQ>
%nZgp.q5N+/rlgLN(!IE?eKq4Q&4M(C,\_)_[h[H2\t05O`G4";Y6uT0S(),V;e['l1pD!O'KUIRCQ$A1B`"]H0Tp7@?eVnIe]4ga
%9GhXUIY[dmY.%R)U;L2f>*#e:Y:o9UpJWh.YF_WUE1DsK1j\sBU0Q7_hEpnJm6u-K7)8pcg-J&,;=@@Kec0b'AC9T3;:ns.Ms.<X
%$.eqaKl>T#-DT=oel-ABr6fS.^J[Jcrl2.HVW06,M!,QcD4NN.$H;Xde%"]!)64?tWWYYR(pbVp-oK/:G^(c-15;u.XVU;d0<W;q
%6Mkfu'X<L<4`4LD]7I*)f&5/XNcY+)q"AOTom'CdFma2G3IN+$Z#fc4Q.*X^SrhKjM"/6bL'!mfl+<KD1t:[XHEr:f\dH((#5mqK
%!L7%eZT9V=Z\Bs#WC83OCM4Rb5C;j^-+D,U%<&(%d!]k-!7U?nHp5S\O#;=Zs!'9D6*e(4OfeKInfpj[#ptL%-%NWtOJ^3'6fD_u
%9MRIr:j&+e%W]l6b50].)N'3r6KOjQ[Gs6a99T/BdsOWq3M2FB5:`@ges(b6L>G5:Gl18THB$:MA_(IKh)WYJ"D]G!oZ(RA%7N$o
%m99t%ojJ0nlS7IKKsq$2C130NEA^4BQ5[h?nJC$Sa;.!Qh,1g+>;P9:DWc84eRdUuad*P*[)J(^\73&qW8$^9_\#BgQ[-QWNFNsr
%c-#Q<ord=B4lCS`]CA"K6lq]cbc0m5e@[?=)u$GV=%p'$h=rA'6(2R^QX.JW?[bE;"48Krs."bnZ4?r/mPJ7K>]Th0+jTID)M@,A
%(+iTIH3cr*%K&(5Zc#fbLlug;6=ther%8@g6I6(Sq\Y<OKg@.M6OJ[X:i+GIAV<6`L\)kFZCt>[N)ZjL9#*D2GFTAdHjQWk&s\3q
%nE2nD+$qX[Kcr[Q5i;JJ58*:^WW'8+@+%)FRF'h_R$i6aG93qF:cqa?1lYN3U.lDCD7>ll'#kdM"$n?.KjKEh2RtGXmg3]bP)HEh
%DiH\+0[&*14,S$TP\e`5qAKbmnC%Ln#WBt`Z4c0$?[1e3cM6b1+Hf`u6YN@B;\`!@l]m$Ti?91F,V$$-m9lG1=G$%,F(*>+<3ENl
%qYnA@EgPq]9X90JQTCmY%,uj>203INh<?^?FUL&8lqh?<1aDSbN*CEu^Bg*5M.tV(G-_r.o^bW*$kQK<.Wp`@W?<bUEba`EI!45_
%bncPn4U]4MlB12F<:OniG>\&?@lFQVS0kkXh5"\[0=^j);!L(PT5:a&4_];I3M0RE#um"4^?6hs38#^h_"li&+kK5-g?Q4W*p'$(
%2W/3]m(5L")/,?"H2ocVH@BY0<*0>r.s'ot)Ri2a:GO^n2/p60N,71;=:B1].QZB\HF118%-T9jO8+Ts5g*(P9WMV#Tu6*6dekPA
%=/89FT"FB\`O)Rf`TJ\A(N5K=VleSGL>A7q9uM*TLP_i6oUSGj$u2oj]6<W&k&(Sm$Q?qH4>BJa9<F'd/kYl*:e8]W!QDu;GJo,@
%23irYKO1,"'5`H<s2e"r71o]9!$uZqj%:$^(oY1_]*Q+TJe.`rkfr?.qrXYeL*b1e_%N&!ZnDT,>+g%bF5PA`&Y(YOH\hm+B1l^r
%?p^!g+8(W5B3ob9=!m_CNq9mN'%-<<aY?tC)?PV;hF1]Onh;O-JDSOdab,!iR[Ouu1eV0_c$5iCJRqqK*>MmC"_p3$f46;9%h\YR
%o6MUS^Yh&uXCO-L2kOHQjuX3lH%oiNrs8A"UEb+YbUXSuoPV05Ju;k`'&B=l"NpHkY.X%(@j%H*U>Uuj\MZ#F>-*5mEZM*_j>A6L
%:b:Vh\3/T&.:-$8rS5;]k42h/)q-Fc&l(7q1%(l%%nm)QUq"UT"&4/H(=OLm+;"+8,=!AoNepa[oDbAHpW"<FQfds7idUWW3hbj2
%^`mXg,C_d3_N.A'Ej71_$stt+iN/K'/Zs@)mF1_FEY=G*@a!VL]k^SCcgF`YpPFQ)]RECU4Sn:+j6Ns-U\1VH*3TQZ,)RRLm,Q*p
%N0@&!%LWYW$:V61.I<bY*1,hBKb;l]l=T9C84ijOW1HR[O/mT(ilpZ:'Jnb'Tb0m`2qYMf9HaK=XsQ`K])KAU.I!DnB0pX8`BV6U
%p;Zi-@n_9/?W%enZ0RDZY/?0mqta6,1@%TRl$Yi[jX]?Dj">3dA+V3H3YCu]V5<eU#o[=j@,V,)gn(:H+S.7(oArH+5Xp]&mRoZ`
%VtWN9ZAi+Nl<inC*/(WW@r9nd;lfYu`br4/'bOqj2DOgtng;s,.($(&k2?Ffj3:WrpM#4\/]D1FUPN(o]*NU1N6"l4Zj.29S,ECV
%=hko-C9tXaeac[j%FYk^S#/6"(@Zj.'dIdg`JL;IdX7,n?Q/AH8bCp=%VH>1LM'C,@GLJ3`Kf!-IDtG^di'">eFXP]?Lg"^Bb-^]
%'C[-W^rc1!:k2^')r_M"R(5!gB'6N\fHTV_+C9f4F'PgEe7(crkSoqd_`:.tINGB]AI1"?&_;Jj^F8(1igGH93gHUr(SQKeScXqi
%2BM#Fq]Csh_ln$VQATh-lIGdoD;?FaR3@hf2msE]!]K0k.[hoZ%HKt(DpD"u6;n$#S<9f4Sb(/phpT[0s"dG3$.4>*2%LoO20WG8
%)(%bq/B7U^A$=/EVf"eq_[J2Fq?Tk%pK)LP;/%P4IbE7Q681UR'G:Egeb6<LHP26uKr)u7\Idk@=5Sklm)3lsR0RgHGC@Yhq\U7q
%Nor$f0IGr<Vs7F+FWJ3FI&?*6l!R_.jAWtrg/>mqhl[4/7Lr3C/RGDOcb,bfi_e$2pgHgFo'<,6(:.MbAeEm!LDg)DhEFXi:iG6!
%[Gj=#]=Ig-;@$]7UUtf5Is_&6md1*S#rCUAO`4f.]]cF.XG#-2A5h40Y%HT,/d\`3Zg*0uEg!&"?.`&##H0<'?gK?.;n<ClABeD?
%e5TU`ii-gf<FHW0JNZ%%Z-na4*HO<_b6gtDS#CtS-J1dG[@g]Nqk]>j/D</^BDs+^`kgHGm#PjT0JFOZW9<&7&?ABto4mU,@Zj5q
%l'I/%6iqbJnu$/^P,E)3,a9Pab"eA\/-j+8)4&\+e9r1T><>f<2G]Wj"WQ[I)f]]bl$b_7V[q?_FrZ4'`HnS;.)PQl?iBZY)+\@(
%+M?0o^muYEj8?(VXMn&(>1f!6^?2d\D>q8uHC30-0!4U)E%2t!\'t3N^XO.$iK_;3.j/PCcm,tQ#g_X.6u.*1f])_,e\aBG=<2iu
%[r?"hLE>aN`^NqH:TY&V[eX"uM6>8%-anD)cA,c<RG^<l&klN4CSF,"S&.9l+-l0g^[2[;'%rr2#Dr6<=$CEnKo/1aM<.`Ol*Ph'
%>SA0p:Ze<r6J[e0VlVlC]4Z6G,'=X3HEoplL6oC=f@7?HasIj^JY>rW-olPA`sLoRX($B`2>D0?f?WMhKGhh3*;TfQQ6%o@Vaj%)
%R3!ZuNY8&#?A9[Oe;&nNIlTUUHb[H9T1P\$CCK7X9qu%Mjtu<l&3I1]<k"C'(/O,uTAJujA:cVBMP&V1BTMRun]$fo\Qej.m(U0`
%,?rr=;Q5&Ia4B2EWS9H4'J)_f<m_Z2^-7jJ6a9K1Ms42?r-u,GCVQl^C(J?W),"3$Tf;[?;Y7Ouq?QNuZZmhS!Y%E7;3&];6DhQ#
%:T]p7\RRK4MluD1<@j0?l]Ede(bElt?&s!p]2'I1pbT,km2@THA1AHC[H6Na@7YO2;hk<BAbE:15K4bU^G[(K![db.<#MJj+r"gt
%iO;1<5r$Z7,A^ak-AZAe-T,hV[^BeR@@XC]aERWN1,A5\[;/paNVg_qK"1iF3f4D1C<KsBco!L@[YE'<*G9T0S>M9>Ve9dW]>;L+
%ko"G#aKVUBT:6+6*,R_#Pg7'U\lOKYCa)QP;Vp9NaRk<d4dB"(?/6Tga^j$:r-^l9o$&(_MpB:Qi[S9*V//\[>jKqHauiFuPN4Ph
%)D2.pSL9AaL5_G<qUo3@H82>_9_ZWH^i*tZZjK=)NBu)O]JuASQkfdreUM!kNJnLpaNSO7G[4d"ifa#2VL)<(FEPLd"3kk]kC2aM
%;cPl']-EJC9m$9F5!!s<H8A/+@&55<k)C)^iju\c)Lcp1nF5.^T2;Nu^VC@kH4*P_gANsG>C9S<i49)X<A(-Y0Wf/_,LTjSAc<7R
%d`nMeD6%$N,jF!F6?JUk@\nopljO1=jC<%2.:gGLKo`DHPCgQ*0YH04-kO0bj/Ot-rT2K:^K)[f'GrnS48+q_Oo@B8d6)%B1HCeM
%$HVS8OanFuLfKQa?^5:d"h3NNANP%8&?938Wd6e#T*J@N?6&N78b+mfnbd*"iW\'D$cQagC^cQQ$d^071+Olj%R_7*,Rf#&ncqU?
%j]qDX!/jisc=CUGKi6eh@7QSnN%anKPg9i(#.2nHOR[bOMnr\8J4?p_X*R98kQ-+*o4\nF9c3[g_or%cXC5$7EORn5_\hH^LKoip
%&.+OYYO7.l;;Gb"9Ha1\N3u\-`hR5g@iDIMS$AhnkSghKM=@>B5F2NA(]V].S6=U?4t[1_G61Ym-^cPdJgV9&?sZ6ul5Wm9.P@Pm
%(/U]ocq)W+>I<J8]+]";HqtJiq[l7=WhE@rcr`bkmQatQ\r!\,;S$ktjT*-"2=iOj76XH8WZ7qlh->u+C/O21mnCA:O_k<r70V"!
%_IF2BfS^#;:hsGI\+:TdEYZ^<E&=lM_S\]k&9JN,3S;W4QJZ#;f@,TSc0oa@n?_/k80RC;)QP*^.g[iHY#55?TZL+-F^e4E*;n!%
%n`IWB@,+"70&/dJDhJm%9NCO1h^^.;N[bSL>R=D0Jtkpl^0,^Q2rA>,8'ML;4BAt-1(/AS2T\2/n4Qn&Q>R;ma&CrqVNfBJG29T<
%l:b.:K#SsopsDTL7W!m!#STn0G,=bpiEn7HNh'l&b&d(i-2Q>?T1b'fS_/#IDY>MZ2^&iLkG_WA;upH;Y7W_M:"XQAor<><].mDj
%qD<4Jj!I_T$sM,X<[8?D#gK%Y:o:rY=s5Xc1`Gt>\HUu^Som(j<0jl*AW_RP9l[UWpO]J9?L,K3s(T/LL?m*-5XTH2NI#Y`6ks@&
%GQe)sDnYtJn7JS-UK'cR`oo6H2!#CKWDgtUPEK`Bq'm&f)_$G-dQU\o>A>O=R)+6F-$6`N,-/=gA'$:7<ONK^S[^>`O(?:R&AC,W
%\JdH1%>hWI7aM@Zbb;m=pSTHh6/cdq[@^>V1<X-Be'(H5*3E,tW'W.2?r!G29tqF'M[IN(G<4j'bH=h=ihF1+79!\j7[%\8Fgm[b
%_QLj@^bm2T"2D2'rMOfjg*7-deS&V?gSZO=+^:"DE@7=eCd#3G4?msMa3-q^F*E,@XPpj>2p'pi)r\K/c#`kMQ+;H*cJ@<:1VnV&
%;:Sbr7eLl_H<f/G8ukYWcH1ooAG#8d0tY[cg+"LNcS=dg>m$ABdN,C6T1WuLXtQmmmEc;)Dq$ni_l'SlA_3V'C*&,KVfkGjQYpI2
%Kc!B'0CHgJojWkJoo(Il'(]9h?@5KOoZP6FNiW%EM+)]LF6[?YY?RL$_aAM2"A$b*Cogepoi>oQI&K,tq%Nn,j7&mNMtY3c<hh^1
%p0VQ(]!^kMrG%*rXiGhMr6W^\^*9Zu1>DSG\Gf$&TnI=3Rc;RkPfELMQI`t=r]jZe%kUD6"&E!0c@Ym-^0+raM0`coRDsV4VH.H'
%ig,fu3fI@H,*8u03)",1FZ=9X0[K0Zp6\7]bK!ff%$8'ubg/#Y<bBs5fJ#c$k.fI[,5"A=3pK2_^n#L6N,AJ7pEoPl9N:t;m)2DO
%AZYH_@sM6e+Kh@.3Drqn!nAsKeTaMc/i*E5dp&Df!D%#_LgtR!kUF>TMD6-cVPmb=?t`3S7)@bu?`f<LBItZC8M_]nYOqX>[SOT\
%6FVn,%BMdKjR([TrgQkdhj'9:.X04Xfgd=ahO8'p[GjpnQ7<[%cC%>.9]E:`!<`%(aq''$Rpj4rg<IE#9*OUrT6tHgg]ZF(boDJ]
%UXt&m_l]3p+<0>pLS<97=N"JcNRQO%^Pe-Oj5-"QEkHMtr!`g-%p8EWTU6OL*V4W+C<f(>MD*E-SNk%O<lbQ&b>e"_[.F^Fklt,r
%UoAk\X8k\K2Kd8[d=$]O5rdt4j+p`!q<?.UX9"i/"V@Sk'^]8lnbm!Z(,jU@:H50@UGgZ!AUQI_2jK@YC/u;q:[Df[=UpH;?,MG*
%&nYuh/'Y.m)'o4JaO0u@UG@R=@@a8THXO`2RbEFGOh;TX-A*8C"5?Rl;/5V8$o-m41j\^!eUF<q0F"^GD;#X!DYtUN-?Wm$-2c,I
%=;pAmBfX\??Y/nG^dU+<fP\+;4gm7-G]C?<c5tZro@T\eqGdDZ'WN4:=.F<N,tY`W/;`r)@UBkGYQKE(%KTrOn_T`Bi]J#ug;*;]
%R)0(Ws&u&`BD]W:,OZ&Oa6]m#9D_[MbN7c>4%lhoW(D,0P/<]Ul+gs\[FL2Pk]eTpaNXrmP<!6>a-mr?CG,9j["OeH(^E,Q/!:MD
%Uf5;H9q/DU>)/5^o%8bJpmmgH&QH8UNSZXg6dodZW.n&.TYpf>2lCHCe\(p`LcclZ?@RE4,bAD`oB_93(dOiW[r%<XXsn0P&4p"P
%?;Y0_0*)\tW7,_nEiWg).;9tA5cG^-[pfm;/47(&1cs5P]c*eOU-'_N$\"Qpgg+:No_iU()V.L5!?k$gqX^D9bNo%)43RliLH@%)
%V=jBHb0JgIr,*sqQ>,"*:<Dd#UtXJGF3qnp(4>M1HX0kgGQ`XL^%Odk@toN8";_=Fo6Ll.AXt2p1#RO]ck<j]ELNY7"p%Me&ufRs
%D]c@q;g"RSVPio5H%hS!A:(M3^fHG=hCP@'Tp+3$6GqtZ?+urt;F?=II3-df301UAXtB$>$+^McM5qoAkdjf%=Zr4,Z6EIa=ji_<
%AIj:=pWuK'D)H4`+V+7H?i/ki(KUaqd$Vk?"he+\r04cfF#sT)O]-Ei%tdb`R'<Bj(G=nR=>I&]eS!%Wk;Q$NSp(3f01D6"0D,'h
%Z;3Vg["pE)?fm[kF;L#PK"b.>LP4V%rfCaFP7$cUhQt_UIZTr@T/LP1e"T=TincJ&2,UgOW&nNL)Gr;r;gQcW#N%(mCu8lA9FF8!
%6[E.<RO+UV;KAO>0`nS;.YA9nrf;DiqO=V;52V&sE)nHh\5uXAMZB`9JsrlgC6(;FlGs>(P_CTj>:TbZ"rTLYDo3mn$5[)MQV0fZ
%hu("%N1s]Ed!5iY@RP;u+\cC<[/]:-;T[QgRt4)q[e`=?n)sP"G=FTHiAOV_pG&0&g7nS9S*IV[EFMkO.!1>\m47lXM&V1uXc=XE
%jLZO3M!cq8=B(tie]tV[pnE6)O*b/;;j.8,fUAOEEK"SG$"3[nC,UQm)O!UhS%@kB7oB@Xee+-iG_D<ejV@PC5h2EG'Qc!PGG/)g
%!`;CTWla!\_Y.b;R\Q<9]d]A^lSYXdeW01'o_<m@8'@T)V)0*^emi7gd]u'e]g:%*+lQRkWF&N3`+u-2cpVn^mUouCUKLoP"fW58
%iSY%$XjMjjisI!I/C@<$Wl78KCM;:i]".qRrt<d5>CnqHjW1`cbR`LoM?RUud2fGo8,mRI9%PV28Qi*T;G)8<'nTO6773KXI#/G!
%na_85Ypnj!qM)"EV%fa/3,`/$iZPK$Vkej&$-PUUR#8PeA33D9SuAB0<B&H5n5!uJ9@L]8U`b#Bri7\pq0oVB/I8WrQ=,MG&(si^
%QM%48PY9#Q:s02QPVP/G3`Pjo7[)UBHl5O!#7m%BG"hL<rW"#K^Ip9DULmA=olo$4")*ZFmM4<g-Q9BX9D.MbgF#]Q^igEb^R2.&
%a?gYi@827REU)D)&f;Yga1XK=FC#+N)d+MeU4N`Q8?<(I6<OVhW1^I1.>ZdeD4H9Z#t,@.Z9B!0'G>,++X$0,_*g/]B%'('F'Qt*
%A=d(W4pA=^>L.A.[r9"+cb7.\)lJYs0R"3#0D,$gZ:?3,;Z]3HN"bPD:9/0rqIKKG`8cNoW]>gK\dDT<XuDRK5FUs`&$:M"H#Mi`
%/I#kZiRR),cU?p"ACf69$rUuCC%[jo\+El!mHt!RO'g0UM#4#=[OgqiR%gWMZ'q:X(U4JKj5,0dmA]nKG,o1*_b"O$Q/#%SoG^.I
%n<'&_W7Le081[GbRh.=+=3//IXTQm=$O!?`C.Vj\jbKtc[,\0sK2]s3lJ7n]&6)3XH1c<U.IUHQ3XnR2ST\4cV:51FSSF15ai$85
%FB1N@*IM^HT58;2Pao7hk2YmGb,_JTV!RacY("?-g:;fZR>T!7.g='Q.[QnneY@"$7T@kb!$9NPq,jG69ds`Ao82TA'EMNC3I"/6
%CR,)c)G;t'lX"d5g^jGFhOL`T=^CV9,Apth.>=oL@q#R\n(cs-\>RJ+rtXAtFA@/Dk&E-*cH/Y83e`L-))As2MHYt`<*EM%6)P]a
%:t>3!Z+h`Hd\f$^6(F:.Bp'T+]XUo.HC+(J]@7g^U61bp%6P%0MITsrfdGNV-6FW'X;&;]BHCK/B2&c^'6fARk'Kn,$O/];,]nbY
%;5$csY\!7;!VJcN?#)=j0W)o*JZo<Z6Z;\+&Xc$'OU_;F(G<8A4(L]RRGu2:.1!XgOZ9$s`rC$s;Lc$Zigo.fOc4?)1gudS;1e$:
%T*$*NSuaqIqkSpP%=FD^mF)]"N`D</$YF:pH\eBfAAI=^R!,RMd+DD[JGpo?UF\:tfh`r5HuCKd*Qcp49#E7+!9VhghTtklS@qY@
%c&JQIb[#@263#1Moj,*fPK;=LHjX*g#6keKZip]GU/kC)J:o6[n><3gK^O_,2\kq/l[1Dt^Sr]($5tG!o_d3W5ur5+bno#DU2**]
%G&1-qZP*V1Z6e;]:?^CpeHB64B36.MeI1L@Yl<a\c_'#(ds8sb+jI3i0MbaXcND(42@PiJ7\b[g(dNq$"psKuoT"gXDui/>CY!Gj
%q=IiX&hX_EF0l!o?;MG"HU$&K-3KahYJ].Dbft6D/YDB=14_E)0m1BIhJ]1B=BW8<8-.k981]uor*ORuC/q9fq1UMiP,?%mW*>O#
%.G>[/#u%SNFFCj9PeIPU>"Ys>Aat`o48f[Q0o]pR<%V-;,WR4#[ZPI*FE&PE5\ufUY]2X6ZkbN4iAC+VA&pp$"mSXJjs=gUnTrl6
%g;5S'po*=gB!od@,uppgc,`l*PIW5@8^3kkVAu</%i73+VVHI)%Du/)Et:P[B%FebH@8$6.pbrgPgrt&#ME'X=8:IWR#9#mcaqRU
%.tGLG6`r5\6c<a>VbK`i5qRQ!XOqg?0&2oYXdXur5=+s5_=gu^%a@/&P'T1m42ekJ$FEgVUM!jpf%QMc]j3rJfYJIGk!Y")EG%mn
%Zbtjqq\1]YC*m&#E"$k*<J_9t30df40O%^GAH=9Bc"#-GdPdeV!E0BW,=!rFXK/3H3,X[26o9N]SU`[ni#[38?1b*2ch?*0?`,La
%%oe%8;q"0%:SkP[@YaD"4&gk7KD(1'ec2"BF`g^abt[k:kr=5oK$^41G,d*p[%.(U:i>%4@U18_8CqZGm#-=4d@76s=/3Ta/6_pJ
%RqF_qF6r2:e\uPU<pf!f59O3d*l9*08R!TY<eCdiK!H?oa1Wp-1T)Ll9O(@nYu<OWkrR<4JH%WaUg!e'M)IES3^k$3FfI9q=I"]i
%Arnp>c`7&3gK^]-cBR=;^n=+raFB5\CPBjmpY[&B;\a\J=tnrYSeZR^a7lo'lH_uV_<eE3h,bCop;nj9'9P(Nq6![3jH*7c*,Jin
%D;/1Ce.D:P1aYV7lp?"J;@+*]kuir\>ro%O!,"_j"b?c@iR3T]7qKhca3j[;.sCP!-AT[dSb]-WH$Wn8AL<o3i'6YSkaFtSPuY$.
%!jQ6`=9KrscIeW?];.;DH?mR36mZA$<hq7)U3TkV27@O-GoOJuOSGn3g=MQ&EZQXjq_ql/:*d[hA4'm2=P(045MP9P@6PPac%G`?
%V0.2A-1H$4*AG`EXSamCK#%j?eIa7WOd9&j`I.&=U[_[Fi&*irnojS=Cb7j$_!c6o3^?j8oGf=I^L"aoZQ'b0!:VM%WL(gC.)oAf
%I[*6tL5u8nhN\"O=/GQ&bcB?b"L?Wh#2*8;GpoU_J'?)oRT-F)E:YDG:dLj>Yh''VF;E'KgbT=m&+]gZEdNFtEgh_'H._6MX06g^
%!T.u;]qCL^-@!5IpTn-\[6*^2C@[bQ]WWmS^U_%l0.&(E(lM"uc;SL=fLKpdggGFolm,2)VJ_A#e)<Jk4I2CJ?%Q3S;AFaL:dg_"
%CUK9ULr(\\S<@G"-=cilCK#1j>*3,q+CUh>#*k2_*Vd[gfj)d,8d_&1crZ7mb#E(PN]<m2W!C&:=r'DO%(-LP4+rb80QF(!22h3g
%0^N+IQ8Qim6>Dk,S8brACA?sn4)3^9\n7aS0dQ\IDVrca$f/EV"*K#k?Jr4+I^6$?Ucqnr!`&B#>W0&$$q$j\nH6IB,;ZU(2mFrt
%62'H@=K1ouB#^WGG>W2[7K$OrA4VNlA+"HopV91:KY$B^-qpN]fImlrL;Wep_;1T(n0T7OVY&pI[>/d<Ljpc5\Mkh<CR0T*0DO.?
%:&B3YRhrM(ZP%G\a+n$V4I2PeQ]IUgGO!B?huE7brk%XuUtjj1LF82MZQRfKq<LHb89JY7cK];P8!e,_$sIY`j4g?=PA.0E1RtH\
%4&YZSTp2QFXu'4GVog+`Dt1H6GsNn;H.)eS#s+_HY8WcF%P]/ml0pq*c0:r]:5RL%l,]S9KKI%[qa5O*6\0i$I'd)>N?$+k4,VMZ
%Y'T#LAFrj>kk0!P6A;I-U=QI!M?%P<Jk&oVJGLY'QBbh8e#RGXWCBjP;2f)8?g@7]CnJ5.L.#O<.OYsVbVaBWD4f&tV\4#ZC\>]1
%\?p3+Z#)TA=q"b&Fp:tVj?l&]J3bDtXB:Wc"(sEBVA33c\IAaX/\&&pLb'II@MflL*N`[!RmV'c&$HJ$)hH"hTN!L2gQCK8@3,<e
%]d[5T(9*^LbYEY(Cio@U#1@8qQGG:MFT_\BE\4@M9elq$8&2A0\Z\Q+;I$<A@M=Cj"rV2d<Q;D5kG\Jf^F*7f0n+SZ82S?R3%aI,
%r-_"r^<l3Cfj6Q7.u4qD$36>4ZF@!=mM"AST1.h]*);Eh.2!g4H&pL=**_^Yc(3B5+=pQ_7)\).26_V@=^[%;NjWKOJ@ij",KKZW
%e8!APq;Q/UR[(Vee0lmjHdihF\-BsnG(\tUDWgcuI((,oOKfU,@r/HCjHYZu4r<e!+c#KPL3G^3mZ0M=\nm1pI,"Y"Wk9WM#P&Fp
%=e%AWFDW2XC:8r^m]kt$U?baY-#YcFX3JfNG9>8gNC/3LiqTZ?/3]AD+3FCTIKCn'>m2:&rj`>Io&UJs;W?HGZsXs+p.PZaFSN(/
%pT\MX_OO0fS*uHHF,P$RED]@3H/`>]'#Jjbg9hXcD]BZA'Q[!N:UNG1jOL$6YfAW*p"12\qUBMF5:<[)b&p9b@m<L8lS4pZ?)oH(
%MsOX'1Ej>+mJQ6g8Ue9cCk[.7_2?LC.9onh'&(o'#uVc<_da)hXAA4e[)[;1MmG]*:Q1nI"^$TX*n`m,pu#.kHu(`dId2*:56pZ2
%XqN_9?=q*D%!<FFmsf2B4fn&h2kl%+%PkY3C_$K<7#F'7>fFF(R@Q9WbjG1-G+S:Ori9Uofj3VN1k'0eN2sU9PM%gtp"40Or7(*R
%InjT/")+$eG:IAGbaKfHaD[K[?/7;=.]H8^j+]t7)TsO^!)A1#f;Otkl69F?7;l#.q3:#,\,DY:/_VB*>E(3J5f1:cF#eEq*I)oi
%.">oiS"I6^hES0`DM7'Ncu)%2a<A[#BV,7)dX"KI/R(Bn7N\YW<>Lm'oV&MuO7!f>ff:n^7N[Mt-4@[^+"GRO^$%gLm(f(DNBU=#
%ID]N\a\\br10X=DF\=OHkX4<g]qGsJ;;n5[]q+./16%Wmk!;=O3dHgAo,pK`UeO!S`d?ND=+Bgs?K+8&q*H^:f[CJjeJN=Jp;C?/
%h2&tc,_7=t2XneP(<?D'(rg*fjd1-Bg7bPPhPg3O]2.r5h)])!T=3.L)1QB1SR8t!iH=Bb#b&8`ZFT^U*<UD\o$UGX#2Ebp/COC<
%7fP7*ZSBe=K\[alFMRm#<<#CT"Q!L[(a1obZ.*6U6dm78#X:*TX[-oQ`p#7A;d,EFJq_.884Id8bU2Cu8Mm(sDYod`2*2:DC<$(4
%4*rM)fs.+^H!q>q"._!?\]b;%R-EbuSW(e5.:1R+@a8I(XXG/!p-h-:KZQaUg_qV9P7G+[BqYI1Xb)s)"[rsQSDu;\k*1uHJc_1`
%8-9M=mt-34NsD5VQcAo%&q!s]'BDT)`1=g%!R*B>N.aF-c9l3NTSp4>#:j#p2ham&9\L<bAZsdL9V0/5eI)\Vl<G0;cp2X\_A_Zu
%(ma:"Uaq^4ac"8'75dUGo@6NCO!,I?o5T62`>F%3T!=]2oB6qhYB:YEW?*5)BV'D=_Bo"+O'A#EV1B$ZJ6JVMh>'3T.MQ@_-"JMC
%rMS?1Y0H8=`SH$=1WmXT$;Jkq]/%bNok!okGXShSDN`ZpD0pps5o4Nmc:jcO7Fr0(=kSt;B:$:I;@/Fi,EXbtG'S5Uf2R#;CJcd(
%$AHO-b`Bms-9?4H-X7[iGX:>oP_PV^XUIHW(^h6i;]mB@+iNppT^"gRVKpjk!AJ`_QT^%2aQaK=W%`^)H_0`@k/9.<FlP1-92;CR
%BJ*udf4.d@9>c0)RJr[_iIh:m1n&7%q4dmJFOoX[PI:VD!P/G(0ZS'f_iB,KaO,o-Dcq8q7>>Ud*Pr.&X"CmZ7S,+d]6N]m+d\59
%p=WPAW%6o2@#%I>mhO/gGE1**82[uNhaQ4Y7a.^QIU-2ohC%5p'""^>_,u-Kih7^#D[LT(`l"ddW@CrV>NsI5Vc+rUPa>CigtTpq
%4VVRH%j;@p1pL[,s-k+qN/L'YRfP=)l$L7I.$B[9Tm;rHYdc:7A7et[jFO4FN0T8_jfkq57OE1nCF&WUkj`]6q-L#=%Y(m*FBFZ+
%<Y!O!nbU]6(If96OOEX*6[IsVe,,;ZR)rD@R1E5Q@/u-t]!HCu[pY$T'_OIiX[\]@B'L9ako*?!<P/SlSoQ'L2BpN2,^nNm>ok3S
%fB2a"P()!9KG_9f!nC'VBbEL=\^j6*7!;Rsns>>Z+^7:5a4Mjd,l.\F=^XF-Lb+<pjS2TYcqih2WU3YXFFa&*Ch^h[NI.,jM&,#$
%D22m&no)iYk<LVE42ji*%_E.*o6+MPP>b;-f`>bID9u>A4s6C-1bcH>gU&,=UpQK9Z!D?EcD03ecbU+>,aoUF;lk(<WmU?4+7,?V
%oj#rEq0+kCqFV@4*5^TN)FHH/@Wj+#DSrb8aG7SIQf&kKnM*XX+ASF7pi8R%-?[r,^&]7.]8'[sjY&9"TSJ5^m0:g2h9PD6P\!5n
%"S>@l!t/Y=85*N7>3jiIG<.u%"7hs2lVXqZ<gY0McZq;0'cRfE`^<_q';Kk'8\MaI-g9F,E9@<c_r#>M6VUSlXcQm>L!]6&R50c7
%[B('7(KQ#:cqCm_j:0fb?h60KUL'S/M;6h!2n$6=hKq@K[Kc/,3_o,oi`aob?C'1-,qLOJMNW^np][J(keFR5mMGUcFrR,d_lbJP
%,aqAU5YZsB+7<]A?rRQlPG1uKoY<aKroKZ::P+PL\He1\Cq7:!1YZYQ(2[/!ak;]L&DSCelU4L#ns_2c37$g(6C4&D5mVY?]<!Wc
%fjm:-XEHS=&^;mY*cC;G9Y!Q;7uu;F&4?k@=-+7."/]t;Cgg9p:=11m(TZ+*d>J8qAGmXSa/&f$PoT7ZrX<aXDY/V$[dr3Do\`@3
%20R"1BlC[%I3i0;V3Z8Tk3.c__Q7prLhI0;,,0-L"*SKsLNK2b/R6Tso@pH0]RG3Q(Y`%I*#d.$,/;@tF:tQ-ec'08?PDGi'1,r\
%+$IZ`;MlpA\[`8!EgJiecJrr$r[27O`#/tK']q7uB@]?&k]F`t$)9<]@u;u$eXEE7`0Jm%"1=#?BNYE>GWi;;<dBdnqp#;nIIG!N
%01i&\/eo-fXV/QOV0gj,JQ8Q_D5]VJbrPN4Jj8:t)di?jQ!sdtb\.Y@Z45kD=cWIA'dWtX<kk2J?Zt"kYj%ljj-qeX(+h:]9$137
%/]4?1i+LSM>2khRjSEaho[OhH#saS8+#E+U#TK=T9V/[12MaEu'3A;s_,<K5(ImFC1JaP%:#Bq!L.8c:?CD+;K"ZE!i]l_4;ojNh
%aXO&Er,m1/_d>q,N'>SkJ'MtVh4reKafA5#;;B?H:(;=OO7>hhWb/]H@O_T27C#d>\Rj?tSc=!G=Ep[P]<2K@$r<?_`ZALROhm58
%\:958p)?IH7MW8uT!55o1cVqS^D!Vb)(oq_aDm*hD*^>M/;LJLLR*ca-Q7sql0+m4j#<S[`unK8$9S%IMt+g*T`?0rpSi.:'&:.<
%]\"t-;SF3IUKe](;[N!MjZgXc<*?E,*/!n$2.;#SFJh?_Kt50^d(Hj,)Hq8?4TE-;$U58p/N]4#>1-/H]qgL(_"4:/rDH;VUnCLE
%G0eV>LD[^EAIup+VeWrT<`W7#+h6'2L-O^LrYYqt'9>I0TD[#o7?Ls4S<gqGcX1fZT.3Q<fJP*rgioeR7TNEG5asMg1V=D4cG[#b
%O:EUmXN--&Zhr6ed2r,CC<VCMp?PYr\PZCgg>[ei4to1/)a$?-43*t7lh,YYY?,qE.A;rpCdj:^2uE!o>H<*?]?\f"gq'lYc6Tp^
%`M\A+c3@K_\o-Cg6R@$7B1r]<":V6R*b7r2mCL^*&X*%b!mj'o'MQFgoWeMj*c$NoVtC=<(;LS8%Gt.Ni?i@-0;%EO3P?kf@LWj"
%6?L=&AN)VB+n7:=AiH!pm&!*gJ5fg,K4":qHII(eKbFr[H!Juo.Mq`dS&T_8RCf1o%DIBnXdXfZ*,fYds'hGsA,fMJp;?R"?&Nmi
%Xqkq$LAL`\WW^JI5Pqq%9.FG9rlc;TqTNr*5?E"SQg:e2l.M-W)P+%cW*&ZUE;)"_G9s-oY8#1-dO<712I2<l!m7!&?!&qFN3(5A
%r$%JiFq;E$]MTuf6+c]@UulrIeRHm0*g*.fYKke[/jVK]["cd8h9P@7+]tm>C4V^_8S[KM*iG`(/&/He*`r*V5XP4sLP&\W6iT[T
%[oO$*m$(st</6g_g/qh6*Bois$>o<Zm6MJ04]X>s/_6h#MtZ?mSMr%4pu,0#MJC0Q[Dhm'%ucS:#1$*$cLJ1p=I\%_am*6r&\mC?
%g)rOO1/EBqeK#;Mh=Ig-0BpapfA_XN!/sF5B:Tmi;b?_S[69]mRWqk)M7`=[GM*3"j>Bb"A[)S)&!WZSABCn32s](S#R(?q9U=-G
%9?Vo3fVhi(\b5,.oqD$',Fe1`d6<7///Sk@=?U-G:<C_"C%OkVm(od7itS\S.fr1FdE#::r<%L#4]%#9REffrZPE\m'`j/U%#*=:
%\'9%H`L%u=lh&$DBF]Z/`rmbnbH.Mdks%cZ^,"WEPNh*<E2%$(@$L.np#nhK.t"&@f*6lK()73';00&'2@VnbYdP^[OIcgfk%O@P
%(C$6qm['4[R]*tI02aXq7>E7H6a1NSH]s/]lQ5FO:O5(!'l>!D+Z&nqm_[:+r)uC1;M)dt#,QpJ-unM[F"aiKYnt>-U#`NIYi^W2
%D[h-@+2n.Z"8!S3)^ABfgfb^q(f90%.Qk@'jQD]eQa7un2*(oM;tL@D*ZQK>=lg^DEZTs&F!O!j865.,.Cq?1D3-jc3KV:i&ZIoO
%^8O_FG4s&kqc0.J\2bfi4OU<K"[no?KZijU430/?HP<Nc7>[_5a]l%<m0kY?a6H1$LoP#!+oGs74pt6PL'7fn<tn:qJi_QA.\&1F
%b#/GsJ*&_$0LF1mbjX%<s&@UXHP/tuLuS>d&O2U-J,U$T*QjZ.f-mZuAjWp+qg/]oZE5AYl-\uVC?4V,0e=c3K;P*SAnWs=W7t7:
%?,=IkL&tO3_WAnA73l&@g6+2Q`7PC.d4<=fa4=T<SbTgkLb"!]O%p#pbKK&dSel/h2cL"a(o%mW,>4:3XD6o>R5Gq8^j/*L!,g/Z
%=fE_GDF%QO?kLq@eVKmDY_q.P4K\2:..dW'AcHj<mBp([Om%;XLH6UV177"!T[d@</r[bL;gH>uk?U?I>"De#OMBba"s2?rL<0IQ
%A*Sj/W/uLjN#etKU]NBgD@#Aq"2hekf`6r9W[l88"o;2)>3Cg\_XRg&4qC?A&B?e;0.$((q=9H?,%Zss?tja,=O)YUe'.69E9$)k
%X-7ctdkihYQ%YG(*.kps7)gI[5TR8:A=aCYNfp^Rl.MECqa?&7SY+gK$>AfZYpF`Pa3']\^*r7nHJRlsfbE%\nukq>)F"U?DKKJ@
%Bs"%sSWu&[8o`u>M$ro2Z0#W9_\N846fgj)SEb5FeLPP_q0?%a@5du;gF<->\os+:C,9S8Ou6gNg*q=3%*<djoS8fm^PJmq%G#Y>
%EX\<hUK!Z>lq#?s\2Rsjj*=k%N`-3@[8]Rb80Uqo^Udr1?ZE6U3B+T]Umc9V1j:(/5spmE"urK;*QuU?an%Vu[W](RXNi4_*n6<[
%+icTLek0u9?$<dWKN8_e<]2G<[H]'W!4e3>8@Ft$55II/;f98*MTOcR<i<T[IZ:hur*+"i3s=R6!'="UNXi0*g[a<_*pWa0r78aD
%93]<N;=LIJn-eP<6s\O><d+_VCJ_X`3:QU?S*=4>_pALelP\d';[r<B]h_bZ!4L,:P/.Ms:N[/HnG^Rmoa\Yu%*dhNW1HO`^U(L9
%Ph'H#/#G%^mPa-@/D1JU=_00O@niKZVtdM)%uT.)juRR'-]9osIsfMqk1fFfn=<V/Z+&k'Uq8?=3lomVq469n?&u"1[_S5].N:?2
%Jh"&bBZUVT.gK)J97)E$ZkoWmcO4At2(i34bm2aaOGHGh(sUDCcYmk52a0-b<,k!>ON:h;BTL@B?&^ECdm*e0l?PJ`ke=RE^t*"2
%nEX#n3W;tdnFgDkJ[bb5>'AnoQUsKd5Y(GsMsFegIitqGj>_akK=lmckbLa9a-YAad`sf2_%<sKO-p,,%u`daW;]g+jf#pgob1+1
%_B'007K/KH%0bK'%M@8KD:aSSVmcF,]as6.WQoJc-\XX[>HsJ04i35qJ)$O@h[iZXmnjc@H'U=AD'N5UHHJLUWSA%e^LjFT!5"N*
%=P?a9?aY2gT(DPDR3qE"dQ7nN@IabNVaOLjAa]+Kh^jVeM,1>+"uUnU^SOV=hnQnXkPNprc/DfaB_R'OT\%cghrLL-Y(W<"1K3t0
%W3P9I>3m<Xl)&9MOY%!*$eZ2/mH0;W)OM&a,V3Z)\IWU\6sa$ROFou^2prm/j6Y9dD!pRHSDUFd!@!]Z=Qh]G<;-b2b7tHXgZZ^C
%mS2jg]j$8,%dT/sDWZXbiu\r:%%2`;XBM&n>7PZ06qM@[]RjB,Vo,Q]RMs8qk*a_80uTH:S)LpCVG`N,\Q5mG\VnO=q"//q#LQei
%12s)^7@SP8bP.3+l=$S*r^c(oO!7<2['%_Em&%X>7_eMM&4/%Q?5<2gRX-1M,]p3u&QSmRJ:r?<%2i'P/^P-rM3DBJ$9U3*[(>)+
%2KdK(8gHZo<WiB\'b!cbBe6%$Sjq0;Va%pV!3;.Xj3DJDCo;q.=JM.$Ssea**gX"3(4aU\hknoJUB7+:Z*cS*dZDcS>t%Dn&o\!4
%108@eW8AKaXsfDEJmo*c$Mep$5GV8n``DKR])*t)n^HWkGEH<A5eb"clhgKa/#k]P^h$jKO4dO"QM7A%Q-77*CMJtsQfa,0ZdJ#A
%H4C',DU%lK1;]Dn2%*%+$R1670:^YKAQlgM)hu6Y)RF9ZgDFJ&#.U;:r1!\MpA9PQ?`R[Hq5&DHMc4a"I^dV6s&!#'`:-"Zc0<qf
%<FR\1&hR,1T:b5UAmn3j<D<q/NN"L(.;^h*!@i6FeIf<39!o/)3ImkJ\ime^/X/dG$^#87[uM$s/+rrM^%j!=2GZb00L!03(Yu$(
%&o<^hXW[&9YB9Yj\m,+VgWIVZ&(tAu=lZF6AM,NHpmeYe;V1#1&`@(oX%/(%BYD-Z@SZAuc/Q%5!97R;ft@+6+8<@V,4lbqSJElu
%7*IKN0I'L.^Wt=6H^ogY_V%-7!#KHTbgneO,-'s^WRJYC(]k,5!+dqi-<MP!O_>'0Wb=Xj/2D,G!Is!g4)`D3j"4C@l*Nm://@O[
%ID2??dfPBFWb"".rg<$4g=e`UUq;;M\5/n)f=4j&>ERk6.1p0#$<s0;s%0C]O7_Lk'^B9/"3uu+EMnF>@U>;aI!f5D1Wc()^lD`P
%%gPF;eFaP,dVOG5U4!8?0:26]b#Cp%5e[*nAr4>rpb[a=R=-^LQb.W0fqf]?_/0"%)!3J)j=VN%14*K9=B,W2@S\W,r)IIXAX443
%AL_XTX;\HZJ<rI+WMl6-A1='O,gjZ$OmUP1VRYSsg?6<@=7[C?0Q,6QQ6OTNg9TsWo-toW]81aW<+0"Ks0sk]^Y)ZTo.;rBgl9UQ
%1U/ZHb84,."ke@_4e*kF]^=JO%ind)<Y6c!E*tt7dutdFR:n-p)W+_S0UJTDA?uNT"V(B<7bqkF_!HTZrTVjXn/03me-OsSe;S3R
%IAt]iZ^p+-)I4N%i/KCNg03*/pYXb0hj'<;>:UHNVPOG1e"G-VFhmPq?!n=p/U=)f/*Ca;<i>F9Z@2&"HQ?A?P7VV];62]>jehle
%Vju<*cC:ocQu"!+N)G4Hko;<u^c)B9Bk4?GlP:Y'M"f/lj;U,^/'V>:XXhudCJ(h@5.rf_J2]cU\Y`bb9QUYLmHsjGDjGCD#X)S!
%D=Sgk^9jD+F_=MrcJ[DVk'a8sb<'3;ktXa>,#qYsc6JHZi=i45nB0)t-'`PIM._CCA[&!hnLHtA1@nX"=h-T7bYb!9Ph=GaVaK+I
%$R=+Ik<5'<_1170d5<FY'H@,L5gmQo5m*;8..`3I0cJD-$UA;h%1W&/01_]?s1k!\i[a.HD:JC+VOU4[N?O_1"_u;(,:Og9%.f0X
%VW]NKl0YN'!\]!t=\:D(")b!Z?+uru;TjlT7OOYjiupMLb-F4]IWEOiZ(Y4NU1V.gi$e.I-Dgi)W;^aR+B>W<p]lg3S[$#2<J7qf
%E#rCA#8J8ra\r(Jm^D-NeuYlK!deg`W<]_NACsh_X?9V!2k!6=0_UQS'>!D8$3Y=<B;l*dKrLQj3`aLA4uAU8/h^URUqk7eRPqri
%KC8RCk8VRu6,A6PmK>@2H?GV`/d?ZZ/QFlW$UIuR'mo"$:9hN]o/5Wi;e5Sc!im"Xi*Y^=rFD7PFI^n+(#TIHa;oDO@@q@;R=(ND
%<9a?i2j-ST%4m3U2m$_)![]pl8"sm`B"9sM5?9pnjJchL@*-CU.7*J;pD"g3m&As9catSSrEH*E:B<,6>M3f@RP8;mYi]"Ws)DsL
%fCfr,W<W0&N5dbL)c;4gB(;NP3?l_oK!fG6gFr`2g'fAgTQGeYST+SD$D1?[mQE7a)U)D$g1OSiYHHg5dT],Vm->W[eP`bMYJ*bs
%peA;N6OCQE2*q77TC6FiADG>l[.D2J^t702anD%BaGIU,`*t56l%D`_R"",R!.eip-EQb(5t+GTCGaU9K=r5).:W/mlgFh,2fhKO
%<p<TLN8'HK[i2HWILI8$DD'p5BQCY#_3S2,2[m.!R)4=l90LSblD6?CC>%P]^*ZGuU-?s(k;EQs1Seq_eR`%nl:@^4%Z)hW%\./E
%auC%a=tN1<8[\tC8Q*)gdm@,)Y]ma1+FWU40#Z(SQI9/*]hEdkaL^Vq]ADTFaW=UOlRmh^YR'BfKmg7TA`@\6OYD#O*C@&,"Z8DA
%aKU&9)Q(p'=/I#P/*<qg<cdqDVN3>6_ols&5TrVnq'R8j%0P25@#9\F`"gJ'X^YbVr2>m24Mua=F!gs5n=isBro;k"raoBR3scW(
%+KnrV-\acdST3;PhbuZYD'#`<cGRDN?EMq<.I=/^7-K2DNYM]U]c\\=$k^CLX('8L2@h]G%Og9>iVNIqB;P@IM_M+E]Y=f6'"[)*
%p\0-B5GRMBQ>326M3#3K/hZG(\Ym.l)eZJ.C>J!QGZmB''_ffqWG,);Ak8FP'!<s3_!e9G6ANN6</g#^4W'oB=#E#nKM_IjdZW&>
%>FJXHH+I3%(<8t";50AI._LJ@NW.tpPce:l9n:fuQiR?Q[KADOJVpO^5(@fA;!0jBQ!X*%:Lb#.bV10uc$9Jn%!%"$!'*ga]=`2,
%FtEgB=)Y+<hZ]D4Y8P%l"B7S"fG_&#k67%3)4l(kI&Y<`ZX%>,+^3ep.;0cD<F&e\-bH?O3_k7`[G)\0ZCs<0S<XsMZ:b;HQ9rp+
%k-"M+d?<a;bdL!kC:"*n"f5_7%8&^,Id4Cg@H!n(<<(p'ge*gs2@)aB[XApJW7:O^+!:6SFE(A2aHOIc)-:W>PqN&(OqH!nd?"Tb
%i#!XgXTq!C`+rq:'MVkaf*FWcEtEtK7u5i#Q,MGbG#^'SWO^R")a"5+0ko\`e,&uW#KSu_GA9B^0$t^7V-`%TpPN%I=Jh'gL4ULT
%@pNC!BA6lF.VJ\GcJ,>n$4@?/(RKG^m,B3^>*"=X/V3^Rat6*g`iqKm1!C7tiseZs72crN(e\nginH@"g-tiqL7Z8$#TQK5KlATg
%UM=GB*p7>:+87,T2k*M/3E4sb6.&B1/E'-M>RRl+cqqd0OTLNC\BP[Vo:G3`VungS$9loG5Fl>dPB,pt"!8lIP8NJB\cr0?T]e9V
%3sXick;Q`[WLTGn*\LY[_tEHS:Nj4BFH&PFW=R]a<u:PegfE;IN`0%,FJMRT)jZ>]K9fXoD-1enWk]m9,)ju#1^V-h]Je<6e:8Fa
%c*a-?E(+o2KOFEIC6b6h\O;TI)8<)]&94hq+AQ*[9G1ijdLrCfNW.tpPci\AOqL'Vi(_UpHTtkmRKkf2V@f_<^q@85k\V@N`=%Au
%15Q$Q+.R3TFP9md_J'fYo*T.qCFTG'dhK28ak%ANS'N:=nEJbC8V&rT]hIOKj=4bXIAP]me(s:"l$:qXHU$f`]"#aUAosHFS>j\U
%"\[meh]-$U&AH?VSH^*flH1oKCKaXW2=pHNd%N;*9hFKhQo6Hfp98Z2A<bA9f1=;^7<mQ(<S8Isk0[4#p9AB.moD&ElqZ(6UG_t1
%HZQcq+'Pesl`k!e=>:"M8]Q+';iQQ)K;@UG$:GA(X!L#Mc7>b0(*lQlH?M?lG'&5YO.lm_,mlY@"Ye&f='p;pj(\M"!0W9^e[jJt
%qq4.j8nlBJanQYo['qZim#rlPVebg#)bq@*a,1Ui@hssDY6+<t9M330+\&2,4a?da=_BFopq')%T2ZCV>U:p`7($cNpN^;WeeK`2
%X=2MM@s)_b9iVJJ?Tn?la8U's6@Z>B;Yj]Pf'?%&g$:AjCp*.^$<0qbVX,IW5XAs;l?-(KA'Go=.\dVQM(D2,+9L1u;Lhb-([;b%
%RIb`VrdFD#Wtt3_QqK.Wc+U<Rf$uD1:NgHTi]rA'j@haN?X6skIrfCR?V!qVjg!<)AY3&TW`WrRHjQLqId&)>@:qQ1;9?_"em*[=
%G_T?g$?;lA8FTU2ioN>RM6V#0-$O(qm"K_%/.<g'cjQmg!JZFuq!.?550rG-=qbfM)i`sXYd?+o&-W(sl@c@@SLNJ5['SKZ0@Mu,
%Pq#gqVG_&:<YRe\18q%'O@W$h*I:o#s6:^KA;3lNP.NNaeF!//DWT-J4AecNW&4)rlhb5Eek(9$Kr<Fk'EdE[0>eoClGhO<3qN8A
%*RkWdna)]H@JZ.U#.eXQD_blZno>t[XIBh>I;V>5@5_`4[g$8A#D#b8:Z.b`D81-Pp5aP6qXNFr,J#c-S"X-l.X5?V-;bOJgPD`D
%8TgL:[R\en'm\YkLL489$_m=(4`5#iW@u#9s3&%Mn%S[_;L`="Sj9I)_HT+22p+#B4]&Y2[1"$]<268O%Eer6*IHKTHntZ.<C2Bg
%gc2SmQ,q03iN[=cYLV*/K8%r8p!OJ-lG=Df_`JUZ_<nUG1jr%.Yi'2VFh&"m;nD1UMr<(b_B[67SE2^eMgETWCs&T./a#qr`m+p/
%J923!8&#+7TNF6)S1ILoVn!;!HE9[*9QS^VK#NobFor#dCXP!*HKWfsLFl%K!^Ilh-[h]7pTo8tR`3W(!^=2NBOI1Yp=]@a.Np1T
%dAC=*6(FWDZ<Y8ObNWVV>=oJn58mF%GHiB1/9i^Q[)T%"V22Xsi'W=$'FEtWg/nGSbrYH[o\B@sK.)l?fqm%'f3S=f@ZBd-V7hW]
%G"NR57OiLo:"*WtT!Yl@+>N^cY>KiQlAI(O3l3T#^BAqc<Kg<*&uZC4/\n09dodF6nJ7(gX;NUMmAl=VF(G%LO;?G3]iZO`_BZ'0
%bV)?>l["odkIT1<DMp&TQ11GPF_tEVi-tMR*'`(TOiUW."XqCUW&<erDAj=gZ/u@,Zqa/rAGJRCi7Md!*?WGSaeBS0Ea9ZFI3Zi'
%7YSn<I0h,)H/B]J*0i=7_dg<@o2E+3]F<p,Y6P*KqDBh53.TJ`Yh\LTT1L65jqRJq)9_EOZmQj6NU1ntCi3`@PtVOug7=;07)Rj*
%SHREqih5$(jsajq4a^tOe?\ik=.:*Qq[YCeZg1@jptcq>HHZW.5.$s;(PHn(iYdWs'u[quO[!I"J^KTTg;3V>imRk*N:'d@9PM=^
%[2K&8hej?*jmTCOfm<UDBgKmgLi!s<9K*D&"20"2qbQT_Zq$^HX&0;"B(r8O6kEZfDCd!DJZZuDi7FleF8Q*.C\'Es$KmiZdO9>!
%g3rMT.BXj*UQ,7+b3O%acU?ff"5X$ErS(',b*-QtnH?1G7$rt1D(V!D>\cJd(.ZKe:TYE"d1><SC<RO#_oWSR9`N_I8%(B4I:Y"p
%HAmL6IHif4T9@fG=^H1&bNi?Eg,Phr9BuSu[66k[SP$PWf3KVT$me,`08HU`G;$*)Nn*/g_'$R;+'L7c['%Cp@fE2MKtHp89iugC
%];IXXh1q$^qhJaj*6qU58En[r>?3E#Wh=<s1'\)kD`<YRl,P,o8[^Z;K7r"Ym@k93bsT%#Gl5p'dJiq#C@'24Xo+>kT^TJ@J+Kd"
%-9edUG:.q=EH]rVf"@*b2&q*C$TOeiG@.dT3260r*pEX"U`S.]KVW3M3S;f<=t"YI>#@"JG)P+=_2eGN7p=;Bl%*I&/<KX/cG3[E
%\E8SZ][;TpY>m%kQr")?F^MeUTi(X@Ldbl*4t!V6-7%7<(U<1DNgJi"jep4\J?<<t8($m,@gs_ueS-&''8F(&BE%d&/:&c9U-'n$
%C\LPP=5sLd3LGU88u8-;e^`Bj__7!sHn&+XqlMNR(@BK!K"<Yh8QFq\WgWZnX$:Isb7gL./3^K]3kobu_omE\Z)X41#AnH9SIjt+
%HHF(/]".qU'IK.IC+&&InUn8_K4`%QR#ROU`guY[0g1e4*Z+Ln$/8S_)0/L<KH3/XK?)o51GYjrkk#is-DO./J,+BW=^=:1ZkR&3
%qA#TGb?RrH@V9p7c9`6O+"87YXHrdF_C)4=BFY/PXIdra$h+,TPXp+rI@fJ1),7(&L'W_mY7&@X%$*A/IFTJ?i"X,?%t`&U$>)3o
%Dm,OB3EIF0SU]aP4&Si$n7!m![P[,_.(oJ1%but0IQk$Nr>eW9kX6gelA0)'Xp$br;mel72(Zc6V3T,,Oe!+X=^u2.FPU][XbA"r
%R%X[K85j/7TeHD>g4qO8Tn=g!NhrgW.0`Jl*"M(dVW*_R2Ha(:)l&'-[_n95_VEH,Jop<MOnq*pl8ja-hoY_V_R$8tF;3ge<'i73
%R9mZR=lK2W*fLqS^pL2QC`X6QgR?,;9FW'5'N`LgM<:tbl'Z)^ri^DJb:b]`Efggq]#PpXdDDXuD4U$Of-TjVq9/)J8WT5@=UlGV
%fi2i7TMq2[TeCb0l0<j-Z3.\Kpks!_nV=V,K_^7GIS+"U<oRU^m6AncU>ujV6VQgFHFV!^'T1I!:J9"V[024u:\C^2,<e:%aY_k#
%Oen,W2N6u\8.3H8*4"j?L0YM8);O!f>]MmE[<P0FYDi5/"T.VJE!FN4d+Hc%1jXq(,dV=2?4Z)Yh-qa*NNiXuSFgc;j6>n]@Em?m
%4tJhO&q.6'kq!+-;QZ=A)l[ma4)SND]&]Hj![![th5WHDBen:]%o,,*`,ji1'0Ir%9Qgnp\"g1[Y"Yg'C"Z]_F9k@A8EI;6Pe."$
%_FSX"46hSDD3d:AhsN@iqOIt[3sh+]:k3cXJ.JJMjo$>-r2"[%d73oI:Nf3_07FT;n(&)5)md8b7+4/*Vf<E,K9qt:!;']kf0l`o
%NCd048<'4<!6?QXU!YkYIe5t_4@s(CDt_gmbkA$8QTMHuMsHmOFO\f8DF_qW>;<J1o=OE60tH*@L?N?N69KrHA^l8YZgF!YMaF&I
%kqWj"X3/)PTi*d5k@b[4!`CK#c:NGU\u\"`lEAFtM1kl8%g?dl0"3f[(g39,,Qe`4\4_JI6U=gQ*X\0F'jZmD\LCW_*DtW[QNeDa
%OdBI\qO-/1'FN8-M``m%pkmFt&eaZ*!jW;;J=8/EhM%oLh3fO@-]B-ZGYsODDT>1Wb+Z>O+F<;Rqnk,H0Po-Wfm7Na'i+(V%u#dd
%`$NM]?<*@lk2Ob(PcJ`pdr`tJ4QJ0?l^?i4r_IZ'r1b3Yl<!t.dhp-09S64+OH.]le<NaFEB3_bJb>CN-6GFZ=uK1MY#4"<LJQGC
%rRdmRr8iVC*#KdP%A'3'S`A7^c/*Q%/0,#Yr;h9,)[tgW'T(cbMq)A28$,lfkfb2QF3pUC7Rd@ITUn_QO)''="te;JVfe-ZDAo(Y
%[L#std"<VMe]OXT><M)Sco\`Y"%_>.9<1AUj*Rg]gFp,7;JE3k>9.I:C[jTkp"12ZqUBM>?]`SeLaQH\90?^AKi=Z3THj8t`UfUA
%@NRD@/FN'bP@*0G(8)17>n6g0DhM*49j"FbMDle<^l!AR9'KqL&p5!VPIrZ-PoWn2*/RQF_[3(h_ZE.oLW>\hb-7A4ip0j,#@!,l
%mWNbTmDPI<=Wk5tc2>k!,u2Wgs%b$!Eb;OnWfo<&TrA.T=lV^\g::M[0Z8JB?_d_r%Dt;cSO"_nlFl\[!8$Hi6@<L_:F+;:qb*Hq
%hb:\M.m+`A..?--@_f==eBQGr='"3**boh/BBDsr$Rs%98o?Jo6!$UWg]D42n\rHDHQ%'N@M2+f#Y]Qif'Z'Imc>[BNTV?QTf]Ff
%Aj7C#G$2CZ,p>8,4]ut+KQQsnUq85C*Y`LK:=;m,;Ag!<;?!a,p\c2n9S$2P\o:oe*FrS:+'u2p1d-=Z)CUmdU_p"q'pP#f@G8Lj
%'nX2&>p+lLP[-rtk-Ss=5L2Bj9VWiL)#WUQ.CitULUfjRhE]EeE+RIb2DLo`RKT\/N`3S1SBUIGdTogUq?[\)\:`*iaOBo7Pn(OP
%Qn3MLMZHiXp@)@G?f(c]-WKD<MJ(eUmis?2bR,QHO[FnX@7:7HJ"LoF)R=!?`L%(-GBaa!9LQ+,T4,m6iKk*8n?BNQ?!.9SV,9o:
%c,#/aRmp^'ZVI=e`?$&jX4](ESDHKnfGd\!4D$%]G_K?Wgk>L68tJgdE6o"QVks<7ls4VtBi*r';;/V7fT.C?cp_!b33od,kV!LV
%)4MLFrS0$]@l@!fN&e3J\?*kfkV%)iW/"B__TgO6c+h\M:6S\!j_6'\<:Ne+g>=28'E"#8CKM!ppr./Tik59lGg=(KbJfW'82:Zu
%'V:P(7,-U6FOqB[o=I>L@2jBB&:9A1Ec&Jh7BruW!B+L31j@"mqOe[_BAV+niBb1ReK0V7-<W60ej?;"IM+*d69A!Idd*TsH92Qs
%Z<%B5*op[s5B<TuH&L0?pPLLo$@aX/B->r)n=i"UGb2lAgsP$P7X$X"7N`A)Q4*]c7UP[TJ,Z9>&Ic;.RhmEsC=<S#$YZV44Q4mi
%gUDE6WmnprOP%/Edais:./D_!4R7':AnA<OhY,X(CJa?%2=U:<_t<p?5G&-KGCD_nau'80jL:WIKVf`@=78.l(@H?!&ILo<;R@An
%Ei6(16f'snV'("3?r;B?A3_.N98nU<X>Zj]075(K.lYf+ZU@-AgNgH5dBTX[Y4bOr*A/DSkiMTq_r(mZp3DPIcK0>7GQ,R%K4-ku
%+lk-[:EA&P,s7m>bS$Km0Vc$V]&9nB&'2Z$ec4`YVsjQk-ZV==B>#BR".nPX)O7>Yl<]?>F3J+8c]T^Hg-WPB8M'17O!WbClVjiQ
%HZU']2jR(._"s:n`-QoUGsU#SprFBIqT*Z"56Ze(YLRH?I:sE%XJ"=PBs;&+B6dT6_1/b&l`dg1WXB&kHA*F:G13rXJrs-Z94Doe
%Y<4XdFeNFepd9<ebP2rnd*=`kM/Cq'\os\pKh3,^1Mq+jT+?d>m=rk]h9PGdl<l:*[_V(9,h;h;e_l7#5l#UAlrr*b#jVHehWf%c
%_]Sfk.2q-L%h,(D3qBbL7O(BhY`U)C7P\.J>g[VW!@fsFWr6G67GR,mNqH]$<c,Ha<86F%.F"SNoVa?kfhaVn-@]h@hELUHNn6_3
%/P)&*n/:i$2'56@(QU9q`>\Z>Ac&^?5<=HDDR!]rZN%qalst<k5P]me<?t_SjQL,%o;Z0gg>a?7IukC?Zf%j?CPWDo7F-&sf"'`J
%_dJhh84E2G).ce4KWrA14.M:g&8Be,i`h;c/IcU"cVqJmXPrr^'odsa?E47/BGHkMd=hc7X:FU6WF8Q6FC$:G;K.cb?`ehoWgtI8
%pPP;D[<P+XUp-jo8>Fh(NtLGg"+E;!55kOH'PW5pR38bL_.R7//=s;E&BS-:[FLTL_BZ_E="Uqt2k0L\b/1/F$W,ldQQ8*IWWbnf
%QPWgW\A5DV&SPLYBHdZdlM5K<6s+/Hcn-rDmZsPIJq'6J5?nL9/Y.CZ._l0k,rjP-Zk>K%>?lTsHml`[_9[IfEQ&'TZ7?mS2f!6H
%[%NQ?ZCQ'5=FuqXc?[L;&Df2M,M@[sP>!k:"R8sX;,4-P21;_HT"Z5ZZG\r<T4)\[FJ0Be'VZ^mU[3g!fO5K^+b?ObG#:P>8B^le
%_oq3tS0<%sJ<4$tU75k(C$?Fs4<]HP.$ob[pDUWJS%'kBK;FtX@ZH(GXN955Bpi/(h:AuE&rtp?I?Z!a)t@u@o&h+Re=kY+juHrf
%f]pSuaKHq:WE;5eZZMJE[&%&ca4+_].Pe)u6:$N"/+b8IKV!BIE.$"-H:L<?DDib-.mdjQhS=FDP%/iTrUibm@]N[`S6,9-.n.><
%).(QRP3Pfo0bbZJ;W8GD%$m$&F'd989VRtCe\MpGPpaA'JV-k=JEfnQ'Osng$4Z1+Ku=6j7uD(V.&6[[.r6k5l\T0P429:%6[]ZG
%OXcq[%s?.:;B[rpGKO6lSg:=[IfbG4QU3Dl+\E"&QYWAEgK>?F@NrrRC://!iDS`p\WA401S`=F1-sVGk7S`UZt1ZBA')LH5TUI?
%J]H\Qj<:\:c_'?E*T3^%Z<"B3lSb5Ci4?-8Z%Ym67dXf4bY&u[dr,\u88?kX!iWmg'S?4RA$WDpBknhA;<O@;lic*o&(7g<%JYc*
%q`DR/&"Rs_1*'&!4_oAV3B*hs9TQ.i;ACO;nc8,ngeN<%JI2RRa&5]Ff)lu8>$<g70S]hM`9^;W3`r=8`^nI$e[@hQRC]T*,R4Vp
%<b\:SFJO&:r(LkV)YU_4i'4;YB0.T:CC^YU;MJt;/leAY=NkL"oS8fm^PJnL_iN6BL)bU`D(l]'7Pk(\id"Qqpqq)UTT2qVLX>R!
%:q*dMM=qXH<Z><D:jQrlkLn,$3DrpOiPuZs89m"mQD9%U>Llq0SH]'B9_;LB:3ShOjQ5t90<6AO+cUF\(b!TE<Kd02.4)iY\l9*;
%!b%U:Mn64*m54jFP[%*YDL\]cY!8M#a:nMqdl(dZNo71t^ED6.JR/)?BQ:e,:1a/::@mbpjSGj($Tdo9h`6c,H"$SJ[2ejFLMZMJ
%(._rPa4AnpVf$*k*R9K_?sQZ'g"H1SOWqO6#pWG8.fiB,91IbQ4k2P<?=1*#[rcEc5=>mo2lJ*efC(9Y#nsU&5DPBjp$JW]\7_W4
%%?@s4).m4F=8^R%s.m^6A$GK6m(]oCd12Kla@7EJg4--Mq6`8""@D"*b+Dhs?Cs5QmgB06Q_+P`1`'.$WlX%i/K7^MY8UBn0C9(:
%GW5i>QL'%3Be0H01DRC]0bm>B)A%J.[IAjnD'`ic0p\a(5.+S$8%uJORh`m05,Fj[6]^Yn3t,pg[KaK1Fe%Jf`;jgPefTP-`WLIg
%RhUnAUEfW#`V$ID5EOK)6oo:@M6m1)5!^8ZV;_e\$QAi\4/h56H>H`YS?fUS2j?R[e"Wj[fl0kf@+!r_S3i)'^d%WsdDoiD/7nK_
%B/+-ONUct`0f4mlR>>Ie2s)q-!,1;fTDEZe#6/[]7Xmd&e\=UXHt6R7jL'tn\Hcq"prAGkeuos[0'`B<DFmZ%a/Ls@`@WPi(Y!SQ
%92/^`"">_Q33#7*>QBQN>36(E5hb_pX0lFR`pqL*gkB,f<g'Jdo_EsE:NLdGV)CaBp`tnDJ%N.ts!COlG9u='Sh5q`7rp,S/)$a%
%O6C]72@*WbJEJ9A4jl?g#;Z$S1*3FW5!1NK(1SCa&5_dH/c8Y4\Db`P@\9:--T>'3@X>HPc&!(e1$TE/;'l(!jPW8jc0-AG>E9\2
%M4%+V6S-I7.*;YrWm[uiAm0kDit$2!-KGTP'*8)L`'n92l_(;:@#o+dC=Fuq/@/Bd'c%/YoK(=a.I-t8\UC`]962^6P+?`A\uWQl
%j86q>osh?Xh.Z!4A+nEKAUQK%2jK@9)O@[5XO&1LXR:oek/nX*rWMdB%YnUI<pTWK_mPWq]qo>1^s\s-;&kO4(]Hhogsf%E'%_q)
%e,'C!=M/ZP[<sfU,#(^6mlj"L],URd^$/eT:C08Ud,,]939oig"tfGu+D7QG_4.@A4Q?7nhU@!(?Jl[#!6&Ei-41^^-gHcc1BYTZ
%(0kMWE@V6!JK6ULE%8h*_PW#@:DuJ=hg*b>,NYc/@`@aHn?7!2I_&Ijg3N)K*l`hUeYU65Wa4^!EoNhYR7S>)9BlFPYD)='f_Wm-
%1T*LS7Bg87K;$^b&.1Y!3?R"gd(@E6-F9I9o4@pn$nc]!2jV0nO()Is,BUPuQ@cRV<!?')"R3/!$s*Kbrf;Di\oq/?=Ft+$'p_A,
%V5sUcAq5AP\oC?[0QP/[i9^^\\!trIc`/,KX]'S8f.`AJWWn6UOV14cC*_W[#)MX]4-$-;!J_SX!#5&#<GVbgTr.Sccj4K<IA,-a
%e",dMR"V;lEBIc]I:[u%C6,p$r,@\t5CkT$DD(:Jbd`2c:TEYW(`OO;%/eQq90t1K[DFanEnS,#g)p(#\0CG\dBTWa"0fNs%V0kg
%'G^O,;ci>u[jE)`e+gfIR]<E$3J-W!W_Pe^mhOU.&@CUHRt@&i$D1o(o'B6h1o0-K#PBRX"S^cCj*U)#-d(Ytos6;nq0oVBM^+)t
%4W4`YbZ/\#AY2T?>s;$=,pO[ZFDk;uOe-u\@p':RB+*_+J(!3"R?9)?F]FF&Dh3O*mW<D:a8pTD1q`WQ+jWDTJA_K4#`R&7MmVX.
%2cUUhEh-QJ'K8>i.b39a)@T%j-U5:I5jP")cj_MPL&>tXmjG`S@th#PlL=c6L"teM6s<Au#V(KZX/CtiG'4dIph58<.S#d0S8lfB
%?*=iHg@]SV;jWlu.<!ae,JZ@&S(mTSK/U>*%t:,k:'#$Gg)$Gs?]j-Cb)lgbNZ"KSG#3(!)udmK.K.N"C7jr[i1ML+"#dQ@-*q.j
%WdTK!Yh%M^BY-2&1Ik84GnL.]$hoq'.fp5'^_rl_fTF+p&5XKOWBm98QFuXAd&Um;k6%CVq###lDG3IfT&kX<r4fu"lhfpQi>WoE
%CRUS_H.:uf[_De(k5)6FSCh((E0mA,P)&p(Tr#RtWbTN#g&bRM:IYLLNV])H"JQ7oqV!%c]""Ud+m/cu29^BpQ"[ph<h]\tr2%r2
%Cbn!ugmVqIpMcOU[CLqpdZ)e&MkEPXqrUh?:b-s86:jrnO@7/gQl7rs*V%UJ;?R<_q5#DXkIJ*Dpi;Ga-[W5U>>p\7nkL5Nig3^=
%WNHb(`X)\?`%l>R3p?N;pX;GaUUGDd=djVi`N)emU$(Mlb-3rme&AXMA2WoZW(m3\(no;O\"mU6krrf^C2%CKMAW++@Ia!<@`^Zh
%.8'pGEG%Vi/8[s]6!Vjf%.o<nba_UCAcD$B7_i>pQ[*f#UDG(tDPga%7?<TFR/a@Wau!+*e:j]D+Pe99,Uq*bA8k8iVD>kE_YF%D
%9=QnC&LmsG7*.C:jW<=*p8I(A#'q0sh=;`Dl,p"ieRij<3"olncpc3.?,/!uBc!'H<%6Or<E$4]VPmPrIUN"^Zdl.5l#=FE1u9mj
%+6QFHW`[-q<7D9LaY`$>Ff_mW'3W82#"U?4ZEdo,Mk"gdgXnaY:$A>3.TFUHS-Q$Jf7aO$5eV[P0cpacB.#k#ec<+Gd);=SX9_8.
%_>smFYl_al%Z:l[*P4uNQhdUk##=RW)lT6QSXLl6kIL/mDn[QodXg%-!`oe^#Pn?cO7+HC`#US7%W&'DJ(R-VVsE[FA=L`[j+OnA
%4)/jF"Nu@+2mE(Sp$<QIX=`n4qHCNK5]<N\<KtcbZ0;eJ47cVZ"]3uS,4mLSiErMQYE;`Z\/+PC3o"QsH[T'2AhH+aRL]>WhMeW)
%WqfR3Y\l"Hk,W/N)Rrh[#Ed[V;TT]YD)D;T:TWP,,%j!,oq$.!^_S#L.[bf.,UTRK<go?*X##"ScmXK4gnOkT[)UFq^5e"H!?s.,
%Z'&E!qH#_+5MN/+Xp/;Oo0\ZB^9G+C[^Sq$cD9?`jN4B8V$1B73`Vn?bs&Tt2H6VdC["_j\'XDr&(Y#)]e72!)Xh$hJ^s8!Bc+g"
%D<e^acaV3B2O%hCb"ALU<Lh\_*1^&YUT8taXK:h,9YI"GeN406q3iUI&aVjA;:U0)\^,Wdd;TNW^OQS$ML4HHrLuTsGp\A/KR71"
%7[%Y"g:bngfZ)\gQ5Y;B6/J@$H6@(9IBrpm)'LQ@TSM%`?FfB-^7XbT-,5G"KClArk,">kZAiGdET5DeS=<^(K;5XtD4c:s2W/qY
%[Bu]f+atOsq3;\K7^8[f5SY7C6\.T_/le"3.09]j_lnlYQX0/!-BR2#+H9P67&*e[K/\$0XCd,VBKH!N4#?`&>nuh(<(sorj`"[b
%=#KF8Ju9%"b@h'i..cdq/Wg(b0o`l3'\,rM7H;0+AJX&)@u(t+CUZpRC*#"oWi=5eBb12t"Dq>C)K4K6d!?;eX\-^Sf]Df*hG<j#
%HS0M:G(h_c4=&bFqQg*iHg85kEMc^X)-$?=bN>%#`eKGQW=U;bojXm$,;BL-dg(,#Btf82.u$?"'_gq0&G=4=WRk*6'W.dR/\'s$
%o!6[`2!]3b5bj;+Ppa449Ch?^carp/Ve_W!PGE>Gd0kY1+/do6!D].KIsF7UA%.=K]"4#&.<$E*Ld:Ajrdg7=PC,n;iUpKN*CjLS
%2GZ8&bgguo'-ZF`0B*[!37&9DHY*#`YBTek[S%&qA92dXR,WbdW_3`sA65$fa,-j3!UF[Y.KIkdH2@k7R;LDsf`8%#%6D!db/LQ@
%q9,49BPH).^?E!r3)#`Z,EZ2I=;WFjQJrDD%<>Cd\l.Wl?)T^f[`tO`WoQ(j[]+.WFE(5.ert\2%:_t)7L9cjBS<^8IX=h(1]tp=
%4m7G??83CpJ;hUu2K<^=s.6GbLts=44*.]do`Q74F0,ru_B;+46Gqm]]m"f^U`KNmQto9;f@TkI5Mn-lgd^+]hZPh!%l1MpY4Apd
%1)6-3NqP6@NbaR%1ASJJX2ZbFcR;US544p*l-OSE+HTnLbi>64M'5HI61Ai_Ys)5["f&t+4/sN[TX)JY=I(Fg;K4[<?a\oo)K.8L
%s2VfErQRfqHVW+#X:Zm`[W!KW\]%\qpdnuZ,8fK@RthFCT7r;a3e6ts$<MA(ZVIA!L;`3sQ6Oo:8nI^nZIc%%YXZQsOhOtn1*2ZU
%Dn\[dPsGG0?-i::-cX[HhbSE/=9TV9NIVD?&)(/fQhB7k=PjjS;m7V)UHj*AXR6QVb;2uLQDR\j8jnSrf`jF+>bE%b4pe8JYJ$aM
%.Y=+mm+FZbd:#7SgQu7kAYH?8!AVaVW,9HCA)_HP&u?1-)Fe:MW/gl;hNY1r>*>$\&&]`:Z=Z=0LDgIQ25_Io`^$,-_<;?;W##o@
%.6!RU1ZsQ6k'8AjM1Z/pSu&\1>'Q%NRt`Q4d#BCA'g<h?h#5O1F1Nc+T-HUpO&>tGdIicBhbSHsg.HQ5Xu[WdJ\Se9:M+p@YadD\
%QC=YTh/<c]+\n1js*$'e'4reSQ90=lFpC^@3]+F[Q"4cbA.B'ApM#P36N6%U<^%dP*32HEm[L5J?90o4Uqr/b@gY:3]Y_&.X]crZ
%"$6@@HZQcq-!K-Tl`kj(=?VCRNK3W(VD8Z.#AN&F8C\<3hSCe(F;4K\U9-qCFR\pa9Ke@+BX/PUf9G<'bjacFf,f]uPpVo2PA$3G
%Y:oSEI^W$p4W+8g1486imB'#3qdaI#l+0!2VUW`gcqCQuZ/ZXXa`"2=[o[8Ra$RF,Xab:+SXF.F[Hr+Z;=#Z15R^^$#;nrPR+Qh9
%ILJ*?[(]0,kZMFjM`A?i\9l_NiORl-plBbXqO;>ede=B\?>oDX?B5D)F)e*`TW6EpK+E51MD,DJ>KoV<7%T-kb,@^0RV'4'.Z,X)
%XYo9o>S>g84XCesPYZ44MOd$q`@63+hQJ!U]%Z9CaY(hLS;]U)nM),mZ*#_H^U^hf0-ho-)_&',:;u,(n1M)MfVO`eWSoqg?jdqf
%YV_S,Q;aIn^O&F_Z)k!\_/j+=Qhm?tP?9TFGgras9.L^&/\B3I6>eRR0XNg4YE&VBhNY2*2rV3[d9;Q&9,dsSc?VYpotje\d,:s(
%%1U^("H6eG,/U<kogn;h0kc=DU"Ie`k,mL%6s&:^^&OfDoLR8+q@L97;r^NA^7XdL=gbObL#l2)jOY1AamQ9p$DAfi&Cpi3+J7F,
%L*qTTM<:Mm=?Hi>p6P+f&(qG)0r:HY)QUNn1fo::7rrJ!F]JR]d)5E0WgOKAB1-ah@,e51_F,<3^tQ:<r5ZJgrHMuBn_G,=c;7C@
%<P1=&&m2hVZn:D<XLcX`S"o5e3r;-*r7XJ>EH+0[MVP0a^OQ:,]D:p0qibK=B-!R/Yg7o,-TVV8QGjPVKj[j6^p$;+TcT_S+rg*[
%VOss<:DG(@s/[hN%LD.2VB0CNTiu^&^p:gC#*FMZ.7DC.$?@Y'=XQn]Xj5"hBk7'E3r^?ms)D[@(VOi$"<0UQACZW;<eY.jO*Q[Y
%Yr$jY3Rha;!=UH#oj#.=rJG0_U':bsH^3#:OO1W]]io*cU.P]>_h%Uj8=P2\PgAen1Ca@7^!nehNo!iBkmP2=TC,^q/Z]KrM<b[L
%_CdM1Zh``_85>hSj\.NZ6_i`!\oBX':kCVmjBe<?;;#DL9J7d2n_?uAPDcH9"?5p"E,4RbXHZrB]"hm=4WoH2PHMGYZ9&L&*HBd*
%0-Tu?@Va?,J)$O@7F[G,D-@T2S`c<oi.d<??[@^J:p!+tfYRMWoh3($=>`6!,*Nr8e:MGaq-AUUSI69hJZpOq%P*b$q1<g*T(PA.
%O.Y:!!rk1YPa<4S6[h@BmH](jmjJ"^88keYD3XO_?$1!mTAYJ#/0-t-<09^SJ06'MUfL*8]4iNT680GbNS-muSWUp,E3(q[an(:@
%gl2[kfc.:SkK@js7rXFR4p*QqOS><NKqOhRP!?As[XIGiln0Npm:kL]!P?=%A?,n#<fQ#M1F\"[C;2TFfjSTEm,31E-:O@/p<SmH
%lQ2#'-3Fq<`)TEc>71V3(hCq[Z.)6,IVQ:?Z35$Pc(?i-*59AdbH=3Lq9*XMIX!F3^Cp:s>SYEcMJ!JQ<r`KcNd4]HBH2KV`q)hr
%jaLde'GXTa]IQ2D\!ojHjQcSbAoTCbmF(_7gFd1bhE2S&.*#,c(@BMq6>mRWVqHR"$2mApa,NJt2mDu-)Z9H]EK4B+F585O0;?"S
%OO?F"R5(N&]8]?&`@U_TPh4sLSk7EjW%ZLHa&Q9N)HVNTL7e/"Z96'5=CJ8LV'iWjHq_XGG+[KrBTMI-VM?ORlu;MjE]QhLpW+*o
%`H,GQYr2=LWS9H4Pe<%"nk/7hb3N6D7[0SYId():\@-%C<uNa7]tCMf-*KHQj`Qjamc?<@Z.@m5A:S("0<LO7>Z]r\`_(&;0jJ;/
%HYMTGG)pY,].Y1;p^^#53Lm7IE@NR=QIbBMRZ(oK"\eJ:K3sU9]hmPC9=!*H)'W<*>77:*$%mEe0aTT&5IG:S*r4f1m*,X6r6hrE
%qQWD)q9'f8*#B^ONP,upr]%g]RVQ7!iu3]fW!aT<ZF_bqiZ/0jbqCWMa0e&RXmY`8W'u8=ji!aUTrmJ@D2VS^*/f/Yd>Um/h/Pb^
%J<g\hU0qm^f>bf]R_;UuCktF#X.ht#DUFuRJF9s:=62HQ7?LcrndKPshTYJPYeL#lh%=,27X#Ou58AQ98P;eZD`&@@E"\`!e=tQn
%7<<*&Z[2,Uh)'#bRUh`mV,C7]dV<XXJQYV`a2`3CmOGuYCXEXfibDFXVSf<HAfB@f;-Wss?*&7,&S)tE^N;QTbD\*ZWhjX3CiMq8
%&Ee.]ai!VZHEKg5@7hDR`/JGW5@o2M4\nme*R)FR1O_H`Vio9aU7OAO$`b@:c=riQQ"OLo^ftqVk*-.C?7RO:2"Trb5HM24<"'Pm
%3cT0j4RSNSe<$Qr*&#4/VudPVLIW>b-N.`)'2q:Un%iB'!)"lUr9(W:D%[^!5L/f)N$_ql5m.CT//ZJa4Q>QE<eL=&o9SjdUt>E<
%_9@Z6mF<sDk@V)Wo<2U+F!G6_0=<iWVCcfUR^)CU"8Cf:T22P,Itn[\\IlB6l@!kEZg*j#WYXE.7U)"gX:jc7I8aR"QSY6SRVl[V
%4#PJh`K1-DUSTc6co2$$'!6/,@\41!`R/*^)ZkS,MNL<58"iDGi&7Hf:m.$J_L.g2"khIJ,5$(fe9)14^QJ14`Fi2MRF<9N68,#M
%fEVrJg,/F51LdorZa-mBW=nmJ'b/PIi"8b)`B9H%m`M&k8b2?M8ghpWill<Jpr[Zk'\>L];M:lH`U^@Z;TWKs`f7XH*8MT*F?"1E
%Ed.'AFWgZ%qI73FHFb4lqg`NY4[%b1V'e4?FWF0)`\UMESa*$dpJt5S5L/bmj:?<!KV[seC6)JU6?0S'aIY5'#n,4HRN!3iO#S<s
%P/CjF,I)f[6AlK2@Y'?cpi#2k;,$3mmLLp1SYB=N,M6);qeUk4pI@4%DUTLN'iC3eIIfqVVSp[sR%@EW^5*87@e-R34F&p(*PZ.Y
%)P.9W3XaM.UW/I%A'mdFR^k=SkH]V>!T(5rd%*$F/>k7B5IaRhN/(T-K1q[$I[K&=d:RiKn=+hICqMHuL8ABu=jS</aWaa>C/aP*
%Wk?jKW#pVu=h`C5]@UT9G:Hq%'Uc^iU:YIOHmkhenrNtQd_)/b,Q-II4+l6JQuuS_cG>]N&o1LF314A6/XJc<"6m>Oo`9.F*nZ.H
%KS`8*[IE+P-%I76<]n;]QKu)AiL3@ac1u>E+Ih(,.`J._eFYEg3mpSuHXtEoL^+F/PcWpCY5:^_DKeo#H<R<[:Z4h^e_eJ"]9&a#
%8X*r8)Vf-EP)N%l`bmt)Q^nr;Wuc=EXk$0e]ZXf\rlVmF8E`ir:ln3_gqQZeBLO]l9N_kncsU66#V4$G+G>eJXp=)]Fr(MO+hG!s
%`AG6H[;K*JIVL57:,E&Q5F)$B,!<nEF#m7`._[^%hZ9:'HZO!HeVHH9nY.@oh2YEA.i3Gr6%d+'G8qqLLFl^')Yi!:l+`8S:jC2S
%'QN`/f:n[4dNG\cl@-n!C!PoI*qP`\oh6!Js/.o_!OA2Bl;mn-dhi<mj&5AK?OR'IFELMd.*&II5,KCgh5>EJRj3:3W:$7pVeV<B
%lqptL.N+8-m0:m4h9PP*]Ol)p7[=DboDYD;o*qSf'FFoS0i4(a+12/-Teh[=bs@-U(a].$K6ek94g+%+m%W.%CTCs19<Z?+i<YQ<
%FSPmgqiW89OX8+ViGgJAnU7r[I`#!Xc?7EBs8SITWB#LM+:0<'=A`?dFOs/5!+3Uuh,`&,egY.)#9G2F6FC"5Kas0c9q8XFm2NDs
%^:,$P+SXF_P&cs13n+oPp)98\[NBg=TfC?e'Ctr*nH?DD'$lqSi=orgkXb]rid"QcCL`6)>`"lQ!^)^qgj#<+)NI1EOh<Wm,'Y/k
%=1k9+.K?%WUnB2IKA8o>,d6:fT"N!%;5e,I`[FV7MNd2_P0CmBV:kT(m-2?P6FN]Mm&jNL24M4Ni@[%k4I_lI\3Bi6+P:^HYYGnT
%R^,pb%j3tb$7^a1[S&NNG+7tj)HblRXJ7`lUf+9XB7`q>;*oYE^eZ6&5PuhQ?uHN]bS<;N:Q>*^?A[0HA+V6"^h"D[Ap93/Q/nO+
%(VLW3W-#&:IF9"-f/QqJjOR,oim=8Bh'@:^OdGF)jd/Gr9<1UD+RL&h-$nG3AG5V7I[;@N[1S:+kW-!@(F0tt:.fc30&`R(_Ag]2
%h;2JJ4<Klhr,7qkqnL(++HG.sk1Oh0N\'H5%<'M!e<l+R!40XP%+(=INLIRIQU>JXa[0qcRh%V8n#2E#P$AWA!P2&f0F<$@Mj;/]
%TTEWKL-idWSV!F8ik]g/D.5tKkMQ.ra3,XK$st477]!"inFSS^oU.(09YaQjkf\q/OtF$X<qRP1hmFlpm8%laL_$h;DFRp^:XNm9
%24C1n%O9q9*NmG.&"]oY2FZ:tTH_Tl6X44Q'4Umni6F]$al%MS;BGt$]u&\9GO^Z%b%[tAcF,1a,:/Ytf1aGhEBc;Se/p(5qcnNt
%YX#L#GO"-[(.aRkTi>&/0bU68O)rId*tR6D%j).FQrsht`F2CRW-UPKOdEMna,p]t-U?k]>GXjrme$ZOUW$r7)&RFl,oX@Mg;AdL
%"[8cn&):N>B[R0VF6>Se<EI:@[nIs3*L$2`aj'`I-/0=Z_ghUH2dK8p!2.O*J'$e].3'TO#=/\m8i<I4J(<`m[#.1IKc@oV*!RMY
%(es,GGlNb$MtD'3CT9P1H_Y6IL#O!F*cRp=pd<_iTt8dcM6]1o!p`;9Yk44q2h?(SSF^Zsl2GKpUrq.(R*'Ato+nRPF*RJOZkP+=
%[*?-B#MFQ`(Z!NY1G0a.QN"$gHC.>[<a+<_3V^WFIDm`8nWu:*2G?aUg;*S[RjOD&W5CL39^oHY<g5d$(NGI`*Zt!PgA95)ZfP2q
%i_@Cj\TaZK8Zf&&/ZEkOW:ed]q"iKKHG@GV2fN^%r-_<UPLco7j6f"*/(`in5oY<>Ea;lN*d(dKUJ/L;<0h=mM]9u=H.?D))j)Oe
%C9[T55pW2YZBHt3BT[ZsVFh4l1CBE+Y.N;3:d#=OR$CLue`GppL_U>O/[6U\5/2K8j0aM""Zo-TCTKDXL:JJ"aaG(UGjZ599J-"<
%=ZSp?#2Fj]AJ?u.LUjPec)FLrq\@D$6ZP'7(bl*dL9/CZR[:dnZ7tEQ=jWpBaj:f!f^;_Gf4-\DdZ:$S[:kVKEAa%S\%qhSP@I[D
%Fn::]TW6PrXC2pcY;snrQ_6&'[E:(?&FBON'pKXq%9=#&g`BKrn?8qK3iq_:ig3!4?=AWGD]3oQVm"Lh,2Ip8bBL=u)Z8%WZibfV
%&_VZ5%,RYJH&3^!Z5%TN5,4t1LX*9GlX"s0Hu(`XId2*"^Jkel)7=%A?#6`6(/#.Sk,+=A'Z@/NrJ@3Hhs[ZWLG8\Crt3Z"btU'I
%?bG8QV@#+T>$Rb$.(]m?<@6:2bMW$I^'T;P>&HO1=r.+W^<mQf[gsqY`M'bp^9J,]4gYF,5'*7K<KU%,/%9Y^(7Q^l8P_fm8HH@6
%r3nqfq`5;d+UgTnkk63[UY$n[B;K(/4@Z2DN9]Y<qIXSoG514fpG7l7GA@o+Lo$u;`\/q0Uf6a_/GWBq>n0M*X(.\9X^K7f!un2P
%gM`@3'E1GDdo9HR[%Bec&Eh&/)P%FCZ^i7_Q&dV,0#L;Fd]0PVSPPp`#n5=E'>/.V_+.6FNNq+!V-QfD_8,.Q\U^hN,U88O6O)m&
%IAI+Rq.%j*;&/#T$t;7l]9G"W5ROCr(YiN]pW@HI:6=)=s&=Y[C/)J'UEqgnYn1;(.@%BLXLOd+eep='%,]Uh/_$;QK>AbaVE(Ds
%DC?;*3*OgRiJX+C*,$>98CiY5]U,!FD)F+pIU1kaOes?-&Qg!L,imAr(8q$2iO/M9_9Z,1(HS$H#tC[m6V'tC3T7F7E'BsT<nVo&
%&@%%n)HP4R'[*-]_1k5:GI90/D![ZfAN-6\6bGD<k7Z`pZ9+#N9k=]XPOE=`!#Q<(1sEg?/+ZD!Qm3-qfiU]I;&[>KFT[(8'k[2K
%.>+/!G]EtOq(m'1SE^ec,aD;`0@I3N[,gSb`+6/0jO-iTK`!dI#'c"?74e?j^$A\U)A:C6k^XUW`?Lelb^HIDN(mTR6@+U#2WSaB
%5#tuDm6u+oX(REca(hlb2RB8QM"4`-9g&+6]UA:5:gDUBr)@]apK'=o,feimU<GLCF3Sc3PW]Ib4Z!&9Re%#7W@V^4Ok,pWY"U$,
%3g:CMp!B->r9ZJn[C^<!le7mF&HEhbac6A'-aS95Es1nS1F[4]BjaM^&9LE.f>g'Kn7o7+kY<j``"6/+?7ItclT4H5BN0/:,:LD`
%jN8*t*ANDnJ;m)mD^q?e*R3m:P2QS>P*QFICl@&\9N[]fIs5Vo[>@&o0)3P,G2eT*::sVi2S_[d$,=\_T_cM*[PfuY9!q#1Urb)S
%n3F@&fF32/H`F?=ZJHc]/fO;Cq-nF'B$4hM(<*2U42h!e8sgKsmtFf@Z5?db2JmPl)asf)0YL7NY,bH>K]#D?9)'#q!&I$nOqU*F
%J3GcP?E%):;Alq28V,0,d.V0VG:7(0%A#'"^_Z3&1m;^-I3LC0Xd%>;\hC<b0NYPb61-eI&7T)=cttVm;@h'6R?qK_4CWX%+=0o+
%$sjLn28TAudYk.?9pRHT>skmFp`!O%MLO<c:?=UArgmpF``]$VV^S+=rXDbngZeZKD48DGd&)eG"\6"1+s^^)G4Xjt_O#R$9)V8N
%VDi!#k;\3q7W4#oltbqf7qglCSP:=)<W\FV>eYncj"Sof&E@flnj=qe<WY(*d(!3N'TrGLFuh7erEU$<JXZ/la0QT/N`k_RjV-"]
%50iS:\T`4A#TQsZ^rEQ+*DP@6=I8/B7jq=tP`>`:)g^@anK4Uf>.OBOI^2n$4c5qr.)4Xreu[0,^84==4<<M7$%ESOhJht-HKY'&
%"16>.IqdN/*W"a`NTr,ZHtnsD%NT;:ml_cDH>3n[?b2feA]Gjb(?d2)9&Q8T2aK!\^D@c+L,@ocTK+[l7\o:/b_].N6K6P5IF-jj
%dh<&Th3C-3/S`;,WPZ3W\[WRN9NL3/q&Y)M81Vo*h5\X.S0ab#A<2^%[@!T?[:kV=pN^7_DP6j(/3dS#A+aU,rP6uoC[h8Om2S>&
%1F^&8j_Dj>HZg2\R=d<c>$AFfrmN$Sh9u:%>"Me0\,KKl^"''iRd-c,eF8bQ%)oUH?1'CBaLIB\mBO5kRe`pgMtZp)Q#prG.@BtF
%5%WZIq]=SlFr8kXC^kiAl8ZiA*8sP=0<U-fEF0ppoUhH#$N\!A6&TdD_#%-P/f[/1KJKjt[Ao>IC<[9!@8h2k4h>snYn"KN["BJ:
%6VKDR!>IeB:#jRKimkg=R$K6sdu*hNYp^Z1^2NX!">XMs8k385KOZ+?)R`f_N;i5$P^^D0282RMHt64-XL*sb=oJq*9etWO=gc[i
%.MPZI7H72kVpT(d,0J:VZ6aqLHt9<K6&CEg:8Lk'QAe5=1<N\;!5!N]%Ra[cM*;Qhou];fM=+]rFf2]M<fJYe_(d!"jE>B7s%1M8
%mn1S;CXYqPoQ',TMB3`'8?Y;eoL5&5W*D>$(/_NrC2cX\%)Za\>W,'(^K*6laO<]7ig<_)'V:aspaV8\S>nd>DQI\Yp!"MRoO6Hd
%S>PP3b*Yp_hq0.Qj7(soc06F;gAp_?YV9Y`\hNQX&WXs>5,---r9jARlP7$Y2W%BIaG$FIXA>[Yf(h[4E=31\Ojqo+$<;G8,UPAT
%$Kqg9NjJZR<TA+`Y%7JG/!IU1HC(gJ]2\1F%P\ZXOr+#I2qFgjI5W]:'ot-hf#!C<gh\f:VN!93f79AVG=\Nq:oiVI!Z^lmI`,n]
%U#og=UDCR#e:JP74-E<a[te-thF_sXA0$+p2:*b_p0['aM]O=$5\Q'#Ds6-:m`jt<Y(C%)aT-dU4rLh/'>S"%!@lWH(q*dAm+CRA
%h;k8@*%R-DMQHCci-(h#?bY!9o<VlNDDur0)@cD*X9=]Ij\6.ODMJ%l-=BSrWBjZiD-q^se(=2^%L/MmK)_3tF_PifC1Ff-S-VO)
%E`$0^E@#tV7X'+#.b*9A;j@@RfJ9npU/&q&r2PQR2V\]W=)F+,NV7CCU>R]Nd>GTUU4oMt@7>0==VmCiG92^coFk4nf7^FGkjQp8
%^YPC,[Hjj2@d_B@=SE(t%1CF)]uI&l=)_mUdTKPT#%9qAQ$Yc/Qh0?.0aIg&,+<FA.]Z!;k1XoOPg!7]UeeV/@]qa&#37o)W!5*%
%LNfNQ#pK/2AU>kcKPdp=FSgBq>E.uCP#s4.liZt5B@cjWp6Z62M9APVY^1A9ao7.=SYOFbA$T#EkWa'fGkHtm>jK(&SOW]&qf]/u
%.l*_c(TlsfMQ%JR0p>HY$en2M1;l"'#=(dWb!;&A9\)#8XY0p+b%/5gF)!iIY$gDi</:)KQ*'=b]`Cu6/qPfT\_lhf-lTQ\2WR`:
%8s;*_f=QDnfqmO%g$!VN$kM<E^V$jJ-0?g%B<IE*j=@qEJo80`UM$RReMI9aoG:dCh/d3[Ot=5?&><=Cp$H&j=/<L-Z9LQ,jUp!+
%.WS&\Q'TiJ"K-jWd6,a5numu:ksDO@ClgWqq7_7dmNn]KJ;C[c;u,n.p%Nd45<Vi%R2':8jc=dBaZ(I$MUSG#)EfE5c^$%M0X]G8
%<bOH,VG:lG-Q;JAd8q*1U7qc$$`qK_.@sfrMO*%!(;lY!m;(h8RseSI@(A",*&`W>0"]U\o0,6A%Pm(MNW/>%P^]j3qT%n44S,"M
%L?'Kc8Qlac+et^Y9<N/QhK2mIn?PI>;5bk0crf:\*5CR<@8qVLjB^HH9/K0AA$W:UgWPTp<F89";ZH6$WPang>3[fKU[P5KID2<?
%'0fNc`GCWd'\UOnXD;VK:[Y=Q9#uj[<@p#!&58&V[:U%fg%r"gXZ(<i,pYeVjY=ScIP\CWeX":`me()Ime(Nn5ml#d]I175QmSSn
%j^4/@"h1(.P>Mh#/@*k.I7+lPfDUSZ]Oi/E+?ra2OWd(\r\^3l-/&*ei.gA/QJXTQCZ\(J.X,L(+(&kR('!j$,!)=3'E%SPqg:Q]
%Vrc6IEt3!bhdaV&daC>0rB]s5+lo_#-<(,OO1^Pg(#g'nRL&(WHXr<-ACcfFj1IWLNLb*^e_/ggPJ:;7)t/j)LW\\ccuo^5Y#SKa
%qU[_GrPEZW.JX/&_OYRQ*W"O(q-:8474D;KQ37@tdkjWcBW9/FA*7MH2'aO'rMDY+CPcfB!A&iWoR@90WqEm$'h:O*g"^GR-fh`#
%NY:m\$3kJF*rqV0q;[r-6@Y/n7I3l]WRD=LR4_iBG,ap,U=h0H1<CWDT<9a2;sbouN"_>>'td@82]C4`2G^q5k-u&GYPYOI0(s#2
%Lr)C))_2`T1`(+-QP;^M-_8,IM5O93Na`L@Cc.'tA"m<=-HnE[cP#&H"&;3`^:\thK<)TRo5=2=pSN&[Ett_&@EP1lXNj:99Rp82
%OcY>dLJ0Vl<iT7'N<W/U.]3heLaZTFXp.Z>m,=ar*&s:j;s74kel@JZj;[F_&hC!9_oER#''bB_K1&S':o"-fr^;7>kPA+9=4?%T
%)U./m>ZKAkouZolai90#Q'dY4j-Cf)95[t`_ii`@$.@P7`0Q*[gZu;EFGo@>W1^%+-4;uV^u==6b*e!AU1ilUX0_6r*J%F0!DPJ*
%BP\Xb<`f8:dt-X>r3nad]!eHrVdt&tY###L-Z`e"Z::'/*#C:PjhWQNpfD"AE_je[dF8@:M3)Ki<!?3]jWo"iZP=q4n(i^Y%:[3)
%Wn)Z9F''m3LNd)Pi[_55j"rg_baimif@SKbWdCg@Z;E,O`.K&Gf@K]<[[5+XM=";*5>,LKIV#c&V,,+h7qNOnA8*"333&jp1,C'6
%BmWF0=>[-,%49<7C&XG`7Kp"D('9KVJK.W.E-Ki%32m3Y>PD%e!mkYjAt2P.gu>9A'=rKu!?>Hf`@ZOEkWDbL3qNL:;2A8`,_(Y+
%$iV-W%n8ke`!_*[@@+WWgH@((l*S)I.)1HSE=6e6ds[<tE$/EjqG3ODj/]!h*E>:?'oI)T>jq:WCnI`ia%SUl=s"Ns]X5+C[]`@k
%:;g4gX%i*V^E4UlWh3K*B\[s@W;P@LJMDFI29['fgBC23>!f#@5qCZ6B+^3=HJMitcs!gaW,H"E`1+(8e4d'S"Y*WaX#rUFL]2I0
%3^;7rnP29e9V!JKbs8@FgjoH`Z/<:>#'sCe]_!m;#?K1p4+"h:&b?!?7SII[&_Dqq7o8goCtX-tVUD.>gZ&Iaa'U3C[+dNNBBV"2
%!,C1k9FP04n+$']O8/6iLa>G+bCf5_M[TDXDQ3*Ia-f&ujNMn]OJTj>f4$Ao77CGdh9NhE:RA*`8PeJHXb;H5/k2\P>.$*iJJ>OX
%eO*o"^g0Aq#K>?X<Adgkc-3%<p?$2K-$sA.*>i"pc0^Imh,Ra?%(P>Wc7bV$&@G+`^g."tHTt9cYj*rL<OFYV#F#%[BY($BQB38p
%JU4V;6_+9>G;3UoWWFYF.>Ukk,ei&`ZRHlcl:'GjFhP]EZQ16_B:(+nCk'YdF_P!Nm$9E[33f:cmsWthBs\n7Z.V"QA_&C4D2D6*
%1kg[N`(\Cs<gn"[a.7<\../n?#=>W,d2JR&V>@<Ii`kiNiiifb#hicG3LQb6IC2+qgMU(5-ZsE1`F)[&OX74T);e4T2'n::foZOQ
%)&)<\<86.YSs>/,r)"_F9R\BcJA7og3QmQBbo`$:iOV]p+!_sNW(&+,/*@Qeq"S`*Chsu'kuLAn)shYE^7OdphR0qE`85ijP`^*2
%Oe6K_WO/2cZZh1/N2rh,\^/6&bj=blQ_>_&*3dSZ(m+9WQT58^]/6/dF^ugN!et&9:=fc:CI!C89W.ih:/U,6Y4glE:X/1O[Fi?A
%je`3+eWa7tJ%IM7+7-:Vc_4O$#U0FF'R%h@$aN1IRDgj(=\j?7=UTN>`@.J-BZsH47P5fK,C7ps:bBdG1kmR>7?&(uWlRt$AE"o$
%&`G[p+('FfTic>\PW>LT1=:qu^!kT>SZ8,CeS,E)0KgnRmHX!9PIp.m;K;uOKK<7%*OXpn<&.Ti*fhcWP<#!;k\#0+mLsN_K!:CZ
%qCJ(\dhVFW2j`1NXr+1Nd-`U!doR-YQ61OMY9VGkY##ecijaKW$QM=)<(Ht3B1CLs/NGnO:E\Z\e0E`Zfr8!R^aNYWmP73.9:qt`
%@1l5fE^3e<>REb12Lq-&BFHoFbS9d(#9si*/?XdR3["_\b/`W$F1LnBgaf=o'AXq[C#i*&FFBn8f@.FuY8F.Q2_,$kUTUeY/,WqD
%Q\ikQ.XbC)E'_0!mR2$_pE\$PZ7QZp=5RYZ;uePJ4/:nR];[:<Hr_F;];H?sm4UY8e0ED/PIWK\_$o91^;"VN[mi;%JK.kSNS1E&
%81^r>@#_h\KHDO_9gc:nX-[>hfWfZPMV6<<VIN&$7#%B>CZ/uC)Bt@'iN(dp)gGJp**VBr>>(!UYDTp^+soH&*cq2IlH>!B0I?ps
%8nK[$oe'UtG,YYKJXLiu=F(M3<nA,\a`PDKAU3,%W"SS.=0S'XeoEb":=,?QPKZ"2=S:V?3MU:'`PZ/q;"1N"q?=Gf<PfW:rQm!?
%k%/bg4-W/$.d>&jn@5MgpC!s>ZYOU])ZAF(.K*X]V=_IFXI#CZZ^50V)-.Q8@jo_eV!g`8CGhY+X(OMGb]^dla;r5[(@>nRek'l-
%Z+1c$'u36-!^[r)L8L$8^0j^YTG9_=1KVfqHCqBRqpaLR&%f4@f6Pa2]"5KQjSo"iS=FQ7pQfuq1%`9mG7N,kXYt&_eMW#D/9FRL
%81^^J]F(cCMMBd$Aebn#M22@B7T<JG]8@is)ar&1:3bWH\GA6:!Zg2rBpK3hbX%^PppYT+\shK?e89A*>)kX:T2?I/nr6PG&-i4i
%&#u6fO%(I'O0)@(.\19^QBW[g;Q(DG?od1(Hg.IC7u#!R<ss*QV1TZJXeo1[;r,0ZmWQc3(;18orhEB;YH75Wh-VOp_QcO:'6#us
%3&MV6/2qhMB^qGtX$;n#A3&<r(f4"B62_e&Pg!.'f+KeZ;N0bo[pTqkBK)H91n9?SOFiVCkd\Er.$b7s9Lo,+Db<7O?[K;l*m'`f
%<rN`5&RF7jF]iQGY@7%>(?r-q+M'WuqpGQd"uX`oBhq\hn_r*gIX!gKh.M47lL1gk'?Ki<FR'M?Tkmn;77)&m2%0S[O>DN`h1q[u
%0=K(3U%K\`am?XpRR(7*j))f\1!5dc43X3DZP0T#mD8HEb'bSCHF\LlQ+jatgaGsQ9$9_L4/Ikl\VRUu/aIL`2rgV>h-qLINYR)@
%P[(uq>!Q(h<`tS6PZ:N6&X%iFj[N36;upAP'8'5YP@[C>kX_H""RchJLJ[EO>9V@DSOD=?%;EeJ51/]^l!En,%E!-V`Z5#GHfEcU
%5+?akV;r'+[M*+<,d=M7Jp8#!5P)jO-H6&n";H$5BF!'$&LP<'dF^%&Td:Op2kWT:[@(P^N>B33D6T>'--&c2IR4!=b0s#)QTHfR
%QJ77)^F1"Br,;<VFV0,!6ESh_:$8c-pU@tL$ud?4A$?n?-S;&`Uu[D8.g[YY0,7P?oF-kBClVd@+97Fc2'L$Q.8k8;%=(;KnCiEl
%=Q5lQ`E)o:]O>lSUigk4_`lQ8le,UPW%<)o+it(son`!XD0_c3[e_Bs5::e]Hqoe(>%#"2<q<*2+R_7KeK"cUA`K74D4&>>2!:pY
%@G'T,@jK(II;6/HB;"*?p-FmSI;4kLBluCYZqflJTf)E6S`9j&"neuCX73Y";V63#VTnO>9VfpM7"8V%\@-#_&3BW^'klP(VD71;
%R"/SZ\9uh)!Q6PU>75"T(6Y]h0nAQ=\c:*\76>T"Df72Fb?83#1>tTUg-Y^=+4baQNP#gtj>an]Ok"UmThq_QQE6BA0E!GM)poa1
%jk?<*7&V.tkSn:2C.so#!n"\C<r@NIeQdU9^a7\Ir_/g,phcYV[:jK+D`*j>o'B_`]qe#>g-@r0A)^G!EUui4e,(HTf6C:p2kXWB
%e86BnSqiGfrC[<:^TqLhFb.T$L:lD^)OggKjUlaYREl'9-mD]+M^-480_URdFKBcfWEkGU\;k&Wc;4g1m@Ti2^tu+^D/iZp+4tmU
%%=W`j36+fcC]1oQVRU-eD(YN^=DH_8`X2Ss("[b#>QI:8X*#*->pEos+H7Zh`RS^TO4)`L9ZO&G-PQ=hr7/)El`P5af_X)16gnt-
%f%mR-4*&p!q5)g`5(g'Lo#:WkeSDHo!me62(u>'`A#[cGAN:"Kl6XYM?0^!-R@A'erF6uKaCG7L?&SEt(K[B;PTN*>>AqP'[H2=&
%g>g!"@r(T3eEn6*ahG>=XaAdWepJf.T(3tYJ=kGh[3[RNDj7"Y?n5-8%V)*:kWX!gkB*T4*Ta5$O>"W$)Bo3eN:M8Jitf\*Mgr!#
%f'PKXBIU+N3oamq3/NW8FBJ0\UDt;/&:p`M3I3d'9;;:EQV!@50,mJ\n)R"hMHYdMr]V2Vn7&C^N2)_K11EN'0,s%#\ni(;W1=gN
%F>@R+SiP;KC[pF?;"*ITh.>$Le2JQ$rqP>b9WM.Cj!m(@I=Ki+LMZ!'n;#S*pmp1(>sDg2ShNoaEWm?8T8&h(/k4*A<.#RgZ8S:V
%TY6B"nJ7'G8`HY9<&U=%*d#F$FA1",R31&RbR%J]?'pO:<)2(Saq[Q(LIX,BQAVkbYq&c<Da1Bf9'qS24aKf+&72dUVLU('SQ!C)
%#OEnbNo2`H6s:f8S/dbQK`/:qI63R1VRniH@U\R%@=hP`<F,&^1_j<O3U84!W\E4c9Vb[M7bP-8bEVC%Ks!1]Cl%Xg=AuiK59YBk
%\T)-PTNPt/3jU+Wqj7H\53U)$396tMm(:$MM7?idq?TU(_k6Tf,r9\%Wj*g"gP)hN]Kf[k2-?jY@4^fT;]lN[8fim#,$8NgJWOc5
%;!ZG0B2F\Xbj6_Wgb^ou(#ff@=#<q0Z>noBkIUac*TqWLY2tJ3>gJEEF3R-2^kcZWp*Q,fQr+FFPQ?.LW?Ja#'fTcnCG^Ft+eR.5
%Ti_A;fDD;V.#"?/a)UsXjE+JcomDpPqb*K2reimKj.^0+S$F!GTHkm/I>9Z7aD9NTDW<%kf>^@A\B`;^c*OdaffdfZ4#//[/+/I#
%#j=oUO%^#68%<,NEsC,`6KPeoa'IXg:@PjK$iu/&O$JZ?Q<A:ai_3]K$V6VGF$Xtf[rN":HP.'d&RJ\j1kJcLe4,Ou&I;+=BW<m<
%mkNP;V#`fG*1p3!6.sAU,qZBMpI64XMkgp:EH^sl!cm1g=Rlj$E15oIS!0eTTYli\0c=B"IJP!u.u$\u>-Vm/93cTDgd*^!7B2sK
%EK@"D<Z^GN=W&3IGg:o^is[S3Y(h3Y^D_sT_`d;<$;Rp?iZq/3Lmuh]WeJ1+b!WN^pJ$nWr\pF4Hf'J_2*Y'A45Di9p"BO84f;E^
%T:d&LWBB8.^+um)P5-3t>c7K@KI]qnbYaM%>f0/m)f/F+!ffW@*1bS*Y\2b-4/aGU3k/T`jLA:\5t/U@@KhM@S91oe3*5NAjQ;Ho
%[Db^S2$`ka_ZAqjl[s@uSY#K*A,Pn;MAJ2Ql70\,FA0(g=&1YM%Yf.ao3mI5JfkLdKes7fM-E6(7Wn7;^MWGi'F`Ru!!*4pAkG1'
%^j;;N=+9A\*jZ#&:$gR,_!Ndt"t%=*'K4lY1qMkGBD5p^?36["FY,GZ>NbQ6QP^2R(>Kr^8sq\b$dh_d4u]3h^>El-C\Hb\7V<(,
%`2s1Ol`TsjVk4sS^f-']RKC6GSDn,A4f6o2&e8G$WBNt^2li=cAdl]5,'uFScJUs)\CMm&r*q>P>f:okmto;'2aGKkqCGcE^G$IQ
%lO@fI@a?>!pOB4W)k]'4$HJ,iBJg""U=W'bBL_8&e=>4O@_>7%r3>1f3rYu+&/TcZXt_4<o'oB"nmgL"a;0h(3XEZMC^kf@l8Z\>
%LHc()rCDdf/ZJ4Ym\p;@</]SL"<n`"e2^!3=sh;!KkO@9K6^4cD'O@c`dVArcQo^gf(Me&>2eq`UZq0KTMMTi71kK*YXc&G$ip9D
%/M$(K:6bERXNY3ZT43_$aS/`)Z5`2F[+![\+^7&P.=.P95IT^\5'<7O7:Clk[Ol1*/?F+:KU!2g5+_PJ`1haTXPPSsM3Bf-c]P.V
%=]6kd:Z@@7n49c[#U.YG>=kDG&XU_,>'Vb&6-FK\X!b`OfgrVZ\?Yp'/'>d*cVnHPX[aCsFkK1.cWZuIHTmV3'-Wd^lZN&d5j6,'
%r6@s8=]igR%XYAqGESan$o)sR:Cl6?<oKnAl,s?'In'qY[0h..bTYDn&d7V8\Zqn7)nF?1;q5.Lm87<^CBK#0M8'!'SAFG8'RL%!
%M^Q]Wk')#]D;>WgO;]Ah%p]'l<"'Sf=BMqGAb#h6k=sc!+_!c[8/U:<q70dE(iDm;Ncj+S#&n!NnnE<q32TEPSt"mQ'%&qG_nund
%$?\7T0bgF8r0gUF<%t9Ur@+SS(74<k\5A[?qF@@MrW$R\Xr<ML23"03S(PX6>^RG_nKb=s=OBn%LMUouJ%IXeYe%`bH#S-iL4O(e
%l"+=]N]IC#'CDU%l5MQ%3Xb8Kf?g_t7WfGli^Y5mAouOu"gosm:L?<2nY0%b!lIMh!jas'XIphn6ndJ-dOs@XLf6%M5>K"dr)>%=
%G*:2<aZ/"/Y9G>U&+W&)Rm>b>d1SR8F6O[gT?$Cj\@,;&5E_n[,L/h"01GE[pOI`bX!goc$"X^b%b$_AAXk.B]W"@_ZV0t#q!Jq+
%Q0RDr/o0!Sk>b-Hp\u[TV>C5ST`6[26N:E]2J6/9.OsJKU@QA)pYB3AN(.=$h?_Q-^+;lL)p-Cl$<Rp:ff)T+Ydf"$+,!"!i.X`%
%?]?,t@F!EISb/_L!=dq\^ZVhE+fp9]`[s"%0Jm_Nm&I]j>SKBJ*0):@+5%<1.n^G7;uBVm1(;V6gc]7[?U89\j>OB7B1/Edb`/KI
%b2^TArF2U<?<s&bap"^7$EOV6TBTk8Qtt`1-8GL?3d`CN&M6>b-GFh:o?n.QD*::ap]V9[I4,:sQW+B9'5+G!.YB44AYGcnDBe>Q
%;C/hYl5oEI*%N9IK53pejD=?-<MO_L6ha2QSH%&Pbk>!52:$D<TD)TWC4>V"7pi+URKn&YR8MouL\jd:WNt)>T'IKr<[ZmmJW;0Z
%(Z(3i<2)5i_K^O4Q2)Z,D(RB".G*Ti`KRmbVcJ_!kRenT9SJ9cr06BNXq#YIYA77PbZG@FT=LBG<K4]3S[5>$oE1s.pO9nO4RkVH
%X(UNk8[&.\8)WdgT$a[HWsYd`Fko++,h)Y:oN5_p2i@\hD&:N_Flb,uV`(!B<6O\cXeSeQ%^'c;Z./(W.F=qf"Gb6E2^#AQo`8-r
%kFnh^7ijOb"">6;pD^H6RUuJL)5Ldi7o^2c[FD^<h(p1#HBe1#It)@c"MtEV"7Yorh_Zr%"]I7@+.Jp?<q@X):03[SUj.9g<grfQ
%\&2FW8,&m*@q+R`^P$o\EbhpI[^]+D10i/GG%8!7h9PMV$FhsiqGNI7Tl,d&I$ug."7#o+W.EdQSgf-YS5E"ZGX"%I:#s72b'R%n
%M3DLdn;DQ3T0ft!Ws=u+^m8I7a(f-'htg;T_AeouL;1FsA_oPU-553bGb!Wo#\kF4-++d>[;[1Y\Qdd;*5H.#[QheS]"^9G_?)+]
%*taK1S0,=EBu'U?UE[(0iZ'6cCFNgF?I9P0=TMT3h1oMJE8:$`9=opYMQh"UJ?Sp<_!Z[8Y7\$L5:V.rNLSh9S_dAOQIB&ROj0jj
%[uZEopbGdnk4')e[i1Pqb@3k*W4NE*Wd,sM#r6#TBHC+XF(/BM-duj>Is1=ICqtStUS=:?SW/>H]olo6D2Db"N8>:$[EPbmeKm%H
%-RZc.-nT__*B0h'A;ZYD#;2a7p6L;Hl]5bJ6MP.O@?^5DOjj!^_Ajm#>!q^_!Cdl@'[6%?@>`YE?`KF9CH2Q5ERaSkePVI#KP;oT
%cuN(sA&sbNe.V'P`.aH1hIA;phO$.d"SZ(<fkOjooPP%@g2n+/r314E9*9VmJ\M"#r)BnqeQnRNMdX6H=@ul<XB=lb2>MrDj]m[i
%8NB_4A!OA#5\3E_q_/T$Ql.#*:+t_X92<+N]@UW=cCBq6oGA#q*Xbb23rpejMZ/2$M`o2nj%5KVik\HHVc>3Qd"aW1b&48G`YjQ.
%FV;_T!P#ZUKCKML<`Vtpm>R]Ye6l7lECPpF7iA%Ug-i.G?)5i'_':ui5"`Z$1t\^hic@SYr1kS2*G5o%Fu7c"%jelT(?KkLj"XIn
%!dVJsA0`,"CgX58+/<l3L7q+-,n!"sKCDXOFn7boPZ.WL+HG%2$3P<8V7Vg*"!gT!Cp1bkOU=!1[.Ncg?-Pe23587GCh!fmZsj>7
%*=>@*OukZApUb7;?tiXgZOP)fNWj+1qLR=tnnj1[X5r@GAG+aT>5@Y)TtNA>J#Ce.B,$_+c](EKVa%SGO[s>2U!Z4AJk]8aNG#1(
%,ogMjDUV._ZrBhs[rQBe)[C"%m:H'NXjc/g'T>jlQuQ3Pb!AZ/P<4B#)\CFe:*#%s<C+pUm$#SYNt]1-koq:B7`JsMNW(Qo032J_
%7iTljB+A#n):JT);]&1#X];F>TL!,@/J.)CVq%DMd;r:-!o?,E\Im/=E'1:NpA3R99B&28=sq8'3Vff.-rKm[r<36elE;@X>?&FX
%dMI%)m``=/4aj+>U=de[7JWT[X_^G[ia<\\CC/DPE&F@72>o_G,np;e,@D!g[H!b2-3Rq:be\/LEcPbN\DBEnn9PdeL.M8[J0%!V
%;@@MJ<"?!1&.t<GOCSb7ViSsPVlS1N[:p]:Y08"SbMA0/7?$5fCu2QS_k]N@%_ORNVip8Uli0nOXq"MUZC0K%"B;fObtX2.SsWp@
%>,K-f4H7fg.LPs'(fm2YSqH/QqJZg@M8q!m5P\V'bUuo6F0mWVUKEMZg73S9"moEHBT[A!)R]"HC*<6(U8cK]-@#>WLTLH3%UB8n
%PXL"A,oWb6W^JA_2!e\,p8FXuqTg\>qfVq<#Udg/?RFJg)jcSbaUU:L96G.X'&rTiDGDb\."Hs/l(&/JHc;Xof2H?*EFuIl#mtY^
%c$aBThK+:9Tbr"X9KY-3Q2Z[>Bf`SleZmgn6Xu_-oGcmO_b[3Wl^hn,Um2'Ob(*MjVe[SZ(nQ<Q5sL<8Cl3o87k;-OQ0`t$;kC\\
%']V:$Si8RPc\)NT38d]1lcj.([DAEMKsg"-.HZ8c0C;rM6U1F\;6uR4T;jFT?QHGg*IB]Gp!dmCr6js@YFja`hfD"pd2b,(Y@p2W
%E_p&qB.p$iqcU@VUjk.FI]?;W5MlA:]l?3-V#%t-<(I*(hg&[Wir6ZS#A`+Tk`k]jN)!-g()h49UmoF$K)#%8Xd6g\qEq#E0c`HS
%`@$E^=#nEP@!lcLG^eq$Nk[5>!gnWm8ht-A:87e/j\M-%KUAcXb\M=WDd(Y4K<>tQBVL3VV@0l?[88`_j6!=0EO``i>,o?E>"$!2
%\,8$OmChu4*G^EbnZgo[q5)!aI\1F#[q!Nl7$3GQJQEA$?iPrE:IXl)d%W'Nn9)_:L/@<@mD_iJ5>D,T6XKT,m9gjSGbd/:mEG\J
%h7RZI_hcE+]`D&]'s^QUOVY@LMXKEidg!Sf%-)A\B>NeLWc9qa"+m!0!!<:+H>\!Ip=m9kr.&TuI#>(1%%[7&9fWK?Ct0Er[nm`8
%k+)kdTOT\XBJ)fr\ejO2XmZA@e>NYHU#ma]/Ytnsj6"UQRUj5L`HWSZBp(UT'4&>Dlr$XVd4DiOJFrj?s3"GkDdEB7R]5aJ`sME!
%<0h-_T%8)MR19P6:!Ea_M<*0#d\UePpn5MNbpHnK>ocgK\n<?g9Bs=\QE3?/6r!#E%Q@,6=*HN]5]r!(>;]o*XG"'8$(G$KaGhMn
%Cj&u[%0,_OS1\ilNG,IR"eO9NLAq&&36#,9.k3&fpAE?b/Ok_Z`Dq<JXB]L\C7ki+#En2DUF)j1e(S@FK9Cmg7?R[aZofp=KQ$kP
%c'K'@J`K5p7Ej3f+oarsY:$rhZVD%VBZ-8Kg/V4?p"?k0<&RK2'uc!&B&a`[BQS&[7G]nO+VXF+NZB]']5^i1Oq97`fo=1Zc"`9'
%e?]`dkN^!\`KT.i&,"&W.>OsA6[ldgbX!*f^,K'+DH/AB=aF'X*f%W%hsSbRb,3%,NN<5A8p8B/Bbo8s'2&6:3L`Ae4jAQZm(/`M
%$R'`p([=H7#n=,]rE=29]YI5qGr>d-XDQ,MC!;B`9WoT<*!j#R7)V:%g!iCc"jmU#>o,g"-i/3RgF#*ec-',MGh@^mD/l1_F1I7"
%E-I=.$UA].h;-`i-.Y_nRir!5%Z$9.[)F#S?l^!LJU:$ed;_.CbY=k#047V:M0^<"1mU9)=%(/;FraTcB_^`aAolDcC;4g1oVO+:
%L['8>iF3i,gV#UQ]<OX#XMN=O&F3q:)hcbKK"$3n.Da+Y,1dbn[S[RnF9_i&i\)5(kfU)58$L^#<_?7kDM&L#>81I`)uVirhGMB@
%lNM3R]D&Ie%JlZ$/'<-s2<Oo79Y[d/qc2Ku#<8o]-U*@=pY$6EeIHXd3T11`Sfb[P?eP3Y="IAu3G2rd,kCON06(,YFdaOs6jL!;
%f=p),iekMr!*kL$,NAL;cX;S^W;4AM,BqrpKlMlS)MX>'FYls5T_Keb&osTf%'<MAo#T%@9bEqSY9VpA_CbnFRKp*(i,$cOe_:mI
%;Aem8-W+D$8rb)Q[*'K(T'K4Vr1le5nrN;"@r@E%Mu$Bsm\4^`&d_7+hP(3OlrK2)C&ttZS'e:o9YU$I0Lnj%[mXeDjo<Qd&ib@?
%ML=GZRVdLW^(m=IiWdVDbc,7cY$=\O,#Wn]Vq5?"M:(Bg9PC5%W4_dSG/B"n?W'jiQ>#R)PXA,r!e.Ptf98A_EFKbB@[3m[oj=&)
%(QK.ASfDWJJP<!hKi1Sn8i`?4]I0S:Be?C^;F37cAtn@OmP5p-Qt9V\8bD3PX%;DpEd#Vrk_,nlIsqH,JX[mE@@C<C_6bXCT@%Xm
%Kdg!#`k5IqrnG+HrEr_"O1/J6\=$Zf.(h6>,kJccKECIh%L(.?H1r#I!R"o",Ka3K(P#<^oak!m!n:*j2d#U8k$.,.5eaJ)j?o[0
%M;n)XUDkntp%H?@knZ!Xff1QQ7.$mEq=P5)cZQ2ZKNXj+n<V&hW(hDS<WC0Xoj-fAZ)qJpgd)FeU7(E(<d@GM-&I>DPo5htoR"hT
%\Q9_8%ELNgp9ei5]""UVKkTZrEE:Y:l@5OZj2gYF@Y6"#JHJ<,*PLSLma@Jr9oJEHLJY,bYR"]POpLa#>q.nI3Nk1b0@KJ:H5q_p
%5.pWQTq6dA;f%u-."F1!nAW[Z:N^8@E>j$sQ3$Y$iP)[f:N^/D,YgmR*R.5F>4`1I%jE@/OI=qhnc.18`EHk^W3qtZr5'k);Ucr=
%[uAX:%fMdHKi%sDoNS.>\<]rUC/]h];!(gM"M7q[]=$^kg,Al<HZQc1=,Ru)4Fek`ffYqaTJgJ<4+@(*3!LRE^dWdR@[@8HnN[7&
%B6UFB)M!_T<E^!;-3^?qqp:jZ)UR"'8npoJQRt!+nh4O#gqNP]-860'3<`0?KgR!ATBPh<>`W(X1GrDT%I!XC46jtW51P+&\Mt1)
%=j`*.7EWm=icTU58^8CK2W?5HRp*507mqe]h65%r#5!V\QJ`C\L+GF*DO>1/mqAeo:/jhu&-Z;$)Zq@BgHr14<8@ntS^Z%Gio9M[
%Xp0?BdR?B#W*55uV\SGR-5d>:?HE6&`(Vl),8km<M@oMZM;jk!<qas<i>5J=-V-84^sIsbQO\;4c<00l1'_dA#b/mudpj%[C8?oo
%6LF%Yp4k2\EK-rUl8,!FT'[6+X_]*eZ36pc6jpW:Zqn-49KZ'pVatNT.u=CPaAGZ<-tA[l`RG+*1DG,DPV(TQDudUteTdd^VL"'r
%/s3OD\qRYtjC<@Y)+,3(?^pr'C3?^\%(qjO/!e@>4#9sm8CjN]YMm7PS("cn,sUP=[+$jfX2Y*N9mr$eQKoZQ<Sd`gARGhf/9GYr
%`8rR1+Zc&cnjW4mKoSPh1"i#V_(oT(Ggj?+X(hlKCET/"3s%MdhAqf;>SPinJct*aTBc.CFLN$hC6!19*cc%%?f<Be@4!C8;JMOc
%Me$=$Fi/TI2<=E_0N?/o+AG;B?7[a^@edr@ai\Wu4^p;=VJ"?d#CHZ(nZeBsdg\1-n9(eM6*ZlK>.h=Z@\SjVXm0drXK7nb>Fno8
%9%GSIH8D=sf+u"6)I>4L&\M.Z"R(?H*"oS)?qSBkncro*6_Q;2N,uMK1*/e'L\qqhA>Kk_drq:r54g_m5&([66EUeP7]"l6?;aQW
%:!j$#V50J/mV76TVu"ka%g-T8;T@auW[eJRA:)Foil#\6KBM4EOSlO"Q&dh&V:9[DdT&N0SmTH01WT.2C=P?9WG_Kpcp%Ta"*e&C
%Uje%&Hl=NS?iknRiI(6k,6i(4Z=aq478l6k>\@s>l.Fn]:$;h/.GdXhR&R+i%7!qknn(FJ2UteQKBo9u*>=^7LJa%dNKHi\]:l#E
%A/J-t,oW4gB:,8G:ifqEdF5af3-Oq_dUYHpQsS\^96tT*G]-8[rt^`d`81'R*ad7e.!M.X&]gLDg\)fBe$W3S-TBP!7H7(Y>&p!o
%'q@s`,A=A%/DkJmNbt95mO'U4?7>rgT5(5*N\3>O#FMOCJ?.#nM<"ijG-2Q/Z$$Ji(VH?(&C(&f9[p&S2-\1^8I0/L%=PiIVec$*
%DpXJ_S:Y!B9AT7?>CmS0DptGh3)/EeJ%bZbVn&0l#c=9?LgNXHdPMV2h>WO33$"C_[,Gq(Z<'m+O<6Q%hg5A5Hrm50N!s9HKeDbn
%rOnffcb^+<nin@8Sd/Os(Y83"DC:X)':W\?!ab4<rR39l'["le&mi_I=P*sG1"3bmr8Z=(E\a2&6mgA2;36)U?nO02/ZkC:afKH%
%()AKlj_ehdh25/k#mS7g2?Q7>Y.*:^a#RG\9JHZ#nXHTr25S6mMZ?JP,LEX$kC&/2CE>K5`7p*:#p:GsJNQ8n0sM_%FGR*RQW96&
%A5*'%Lcm'9:;t)aPT2q=SaO4\jn-Y40pE1A)7+$@g$@tg?KG27r6:BSJ51BK-$='QT5AqSPal`mB<kNO`pW^IXVp=F_.&s-&[.@h
%)G=JM,L^HmJl^DRfXt%hj/:+C!QO?8X3>#kTgk*eV,$>HqJhRB:4='MJrdk:(aZj63ll+_1t'ddh4)h'G#u<=3E=X/\0=Z-%s88X
%7%>[-8#X5-Vr]0X>W2F-HA$V9Je?0HnH&e7)GW[g)K?6iO1&R=]^+\\lk,aHE#51MJ)#=U72-^E31gdlDC)iSic:Bh-bE?:JZMI)
%bjt[njQ`f3qG2"/mg@)Q'Tu)`)pKF3l;%'tobEbWF59uP&VCJBDAhYa0$g5tFsid%2N9g;!NVMKlR1k0HAVW9LVcX-P5%L*L81F7
%_(s4s]b%^Y(+(@T&F&]Am`k!b;:X_kc2'd@j$8'!2$9^Z"$!W67f<>6oOV%6*U'l1U_RC)UE<;G(6P`8o'8m^]slDFWV:fCn--9:
%W]L3*nPTEb^\chg7l!is*qZ<ZDH_IggXjp1WeNj[5:@fg]!O(An<4_l-71*^_HM4B?pD@e-j8?>]iA:n*,#p%kqd&j"s&';f2SoH
%CoC[sbkTZiZWJDo5[r>PHtjAE&uT6DP!)K^,qs#2&?9Zq*/oN+6.J9PP$)@Q)6"JLgR[S6dfuq1l<"AdE\%C[Gr4Q95F0r)paBk?
%-fZJ(DC(W9<V=1V#;btS<Xp0lWrqc2^kXZVZ(hp;4?pJ?#,jVFY``e,,j?mmFfj-Ee"*LO.HnC#fWu+A<S&#\a]-+*F`qJmW.\GO
%F^a"=L(Q#pYrg;__o'/U3q'Z#@>dA$N)3N<h1NZieTp>XTL#[%?o,&Zp`=quj)S@Kr&G?m<k6h)<*nn+D5K[M]/Q?(m&QAbQYgl/
%1j7(\'-1<$*&)(J1[u#;MSOXe!D+!XgKnh^lTU#?9#G^N$@2#f?ce!(pC6,f34?Wlro$lQGMMPZ$6nRg/kth]Q`k&61mf\WYKB0+
%-k#@pdf,HblMD37_S=s/d[Q%EmU$LJ^Wo`hRTP4c2J)Vr0QTg*ktnC80j@[/=ti=#4&'_(]H"uu2QQ":0_K/!U$,r-KlqL=;at5A
%G$GqSSD+MOmG<5nAh;nuJ%<s+?B2%CS>Y$WQB/VMl=:1tQqg[>Ff\'Uk*/5n=F7kLI%/OD=q2[4Tj[;1<Fk^A(K28D>_\)hrtQ/p
%(SBp]oj!RSdtL=NK_Ve:eVah4A@L)\*AE&rgGXi(GC4@7e3PI/a=d/U2PClBG#uLLTM&`NM`$V^Ufh:OG?(Wq*\4KL$,#c=;Lga<
%0"*9nn</(FY,_a>SBQ(Z_gf9WVk<E/"oRktP1qT99-jkHi73@p>[?B%.5e`:%@`gC4JR&g6B$/6G_T2aMsG(,EG%K5qY^rn<ab[X
%?PWRP/+Ec5I1j-#40!N0=UMhHFZN>aA]];eIO98jq/2UtE`'"+<qA$jRC+r9EP(PKPqBV5f0iQK@+b9pH:<#@mPW@cGLHTqF)44u
%duEZr7SgK's6\[50)FQa\;MSK3/_`$O`oq(l0(ZV:<cTR`.!V:0?DXt+?-ZnD5JT!ZfY5$0k:CP(^YG.pKW>a8OHM-Wt)epQN9Qs
%;2d]Op_&^&$CiS+cZ'"#Y;<cFj6O5sQ+X)/;o#%Z4QrfT\usBAO&H'>Z*VsIU$$1Zb9+2)`^Rj'oRH9>@X/+O]&OPW,(PK#MKC@,
%`>0Xg2E6U]nN%!m=*3G;#6Yh,`!^QFj'm(R_$EGcED@!T5rYM@_Y36HhsO5&,()q82Q\:B4n<7Cri9eE*;gI<ku6%d5qALr`i(,=
%?/[nX;DN'-UM?_`VpLDD%!8j;q;.>&Wmh.+ScpEd*=3YSj-smfqI_9@)17*O@+TaQ4kZTaF,RW><=s]([^ruO:N/UJ'T\lm0.hdP
%8DL9*;4MI*me<2?NC$i@0`@S#7%,*:Xp2p>X(3-VLT4u5XRGLZZoc"2)Fl]qiUnAeZ6$U+(8><A6*82Y_!Oe(e,'87>Q412KXMR!
%2(_71Mo@D7_eq=2D2>WJ:;m9M1[2b4WdN]B)O30T1SW,BMf+tRV[qApLVtO/k^'8S1j7d02/$oX4&c\/(#!p4Tk]B']C*&F@9EEZ
%5IDFg5BK!!h^>(q\C^p@AY2EKNTQ:PSeBE'Gh\RnEa??"fJg(@Kmo_LJ"<.D6X*gD7_!`F=/'0-:T]qgSV5j!4&[reLRR2Om/#0H
%^:8pJ*6r.*SY%sgn"1BB22UlXEj,N1in9ja<GhI(S&V&`_cQaN/SoC7J.QeU=su'Ra.(+AR"nK)>-pdaHG*2Acuu$jUhSF*>BksE
%@-b)Ri;'A,3W@LZI#*&,RQk8-$@f,JMVY(MCSPDdYm"n!9Acc%h$YY5@-QgYRZ>hA^Gc1!9hVAYOe(8ZT?S^SCImcrD:JL3c.)_q
%iQSAjq]hS3A2@Fi"#0>i9"8)bAMC(#BTS%q(nI71ZH$a=92&!6a2"A\gAY$_(@@4s\f,o>r9sIr;e(#7C(#An"'^hg_66WTkP3A4
%=joZLUH-B2otOU&:ZAH+J?cY92ptGD9+bQKO`i3BL1Q'5F&1C%*J`ND4-<I_jKV/-\QF@tBkL40mp)ZZ-*4,V`S!9,qb>A]kYSs>
%cH[h&2$5IhZZA0&4#oB@Vg(d*^\e^W-Ro35Z6KOr,\aYieu:(CbKJ4HiBO-/CVe=^8p)V.Z/m:?X"bkh0.\P:Roe23Rq(2VGXa#I
%**A85OEQZ_QZat7+^\K6fg>N#;uAY"4gN$;=,'Q&;etUpdd7IH8?KHIiTnKt0JsYA:U2tY,YJe*^G]X:&)a[(jI54"qGqYSC$>XY
%6t7=rbsfg6*d,@!HsBGnUN`$u6th1_]LX'%M]"%h7er!dTo'FI@qJK5*";"($ZXR3L-2!c3"u'62QrL<Fq0Pr9Q"R8QJJO,p"7dc
%Zh%FgbDjWdM0U6nejVC<8nj_CqY=hToOrk+c%cU3OB3ZrAme5`2+G0AN,=Y=J?\nn+b>b,RG:=XHn@@16OGiW*Uq$KrmE0W4<_@/
%;0h6DNJUIG2(2]CL?rZbQ39A5m(G=4B+jPQr=13"KrRH1^p3;/%\b_).XUX6#?j!MZ1^q!@uKSJOeokT1$rc0==Zd;8$j&k*_3Cc
%7\jF0,2TBr)LCMrcqq.\XCd(+(KV3+qd%&;boILX>q9_">_GqfS`Aff3<F,OVhQLSLVi*m6sU8I_8I^LR5$#8XlSO`WJY_#(Ti)p
%=rE:Wis<ofB+`RO'R2!Ser)n^!dW2.Sc.s(e=LA!h#4M'i:0P4Wi2f[3_=F"bfga6<!lfreL`t"`;7^8?AR@,U7V%hWNb4cfF$2m
%KC^MbAaq'2jNDA*]<q);REaChCI@_#hC3^[YHUgrRO15eXFT%C?FKTIf=8M,8>fK**^[;MnPHq.Ka0q\DBSJWKAY)H_*r&bQZE\j
%?HJ)]$p.;2Hr&:M//HEbF?W5g\ME$>''@*ST5a`Yn?^7XLt:edeS7@7ftd053>eXqeUr2$/RL@S_`/[HXYd$aV)+VZ#D9=I?k5'(
%1CQj'HuWcEONU$PC5o2a"E[(OK94.]42r(Fr,PFAjeugLE<8eka!k=Z`c3'0ni)kPD0fXM1M,$JOViifH6i&"dDi%rUKRd2+rOj0
%A=Cs6n`cR2W24_/\RR`9&/@B``:M^4SkA_FrENu_,$q+7OY#M'\td@pUNOB":5;6AW#,"j,7Vc"3RUB9a0Ciab#Q,d!ujN/OVgE*
%'aUBmjt4QBbpTSrLKsmBOQGu,Zm1p\:\%DSLoAaXkd2-5h`K-Q\k>Fe`("oOAf1dD3^?u@0bgDH*Z;b7+S#.m]Z4a3OHNIVXJ^=m
%QC%k)BSU$a`7\+Ka`C@P6P=*\N:M"+E_e"SVk#5W<;1*[Q!-=".V`In*)<Nn1O6*,DfM2I*c\7Q.PDmdUl8)>DAZ=o+tPLqG*kCp
%8U:G2JOi!4:T</El92[pgsCtW4*R\TF!f5?AiB@&ITP'b,c1oC+<YR#<+IqKVOL/3E`;$M7/[IQRLod`m^.guOiu)?462.V0qT0A
%!<2:%,FqSF\8[E+p4NA(jIT$*5Q4t:<#ngJioX*e^M++YZOj98ML/.-!Q[7@(=t[k^<t:rgs39&m92Cip9%7u4M+B$2LX1%><Mc7
%4mCZB>D)+:DWc7If?#n^UT4Lo>mjD2=Ur%F@)XlYG>;ZNHMBs.SpU*U!;Qkir:r=?#^kM7.Hiu<ePf'+h:4YeA2X`_U[/6S2iSu-
%<Qg3\GgZ.Lc&[gdFJ-UZ-qbK!a(f(rL7d2-BTIO\25W8`s,s!(NaB;CA.+*^"'^iR#1$*$cLI632YU"gm,n2">/&Q@q4L@Z,IH4r
%Se0UEoG?LlI*O"J?$\poh@Gf>VHU:P#Z-tlXd%eKU(Bf4bbBMF.S(ddLjiCQ`lsqS)f'P_J4det`K&0U>Mu&Z;!E)ghR'pQG&cD7
%n"T+e6#6)*%_o^tgU3C^3BDgKUO)OT(c*!\aTqnof\D]#d=*Ve4a&^(!YC<F.3!:-8+*Y=(oU%U4=mDjdX[r]Z@D@2S.KVbgRMg]
%\"X#[78.8Xj59!a)Kqj.lqtP<qNB8u0L*`="r\UW5^G+u081Id%_bEH<WX3VBP4D/6jIjq0g%AO2PiiB3K)l%6;qO&h3:4ObC4b=
%Kf]fPe%F8=s,(bCZPatp>:5,oeRL:oI:GA*>59Dt5PQ8EPZ2f%b1-%'P,d#XgjFO9%5JdaabB9*g)5]tV+0'i&Hr.cLYPLuH5nZD
%OLI'Dl`#Mun&[HREDcR!;WM8WOA976.KnL)QQa74[8I6$A5O:62ijf?jY4MXEsD@7/)ENgWPY;eYR\5dLe]=1H=YZ$"jH=lERlr:
%`uk*T?gP]3hku6/(4?DXk<8Vc;DVG-PgL"[7%\/oetmK?l=m$UT<!JPG@sK(h0DtG";TgT09/Vb@#CDI=qMHcHS5XqSp8DEk343-
%OX:9_.P4=_=OEF>*VObCa5?7sCrK\3b9ND=&^5-#,^KS0$e$2Yi+"p%a9tQJ)5Cs"XinojVrqTBhK.i4hL]H#<aKJtFDg>;G6j5I
%5S$Zj8YhO.BF+^Ydf*GCW-`a1Cco&c2m=+Q#ekr^Ehb#nUif4.L0SE%>c&qSa8'$6#W>Y1g[/.aU`[o*Gn$0#R%$lHnPMf_!mhN@
%.0h9h;3[GVfI1bS&T)VTb43:[$Pi<^I6.14p?%Y!5*lD%>lI[/8$'!sDXDXdU^S[A\Rk1"pf00A]<rddqKAqRNM\eTJ1W>)8kdf6
%8bI,'SD=Q9)*<!7QXj7)W&\8B(QN&[8FWo2RLjcA;Ms-X)>4`Vmc!TW@6/n__&Y<0gXY-7.@PU1paRqo!VM3HEGo3-Dsr1W;nTtX
%*E$b5rMFQ`d]0.sWGK=J8kcTYK."7]?(2/e4=K:&(@@.NX[^:4g3j9BL'&a!I>c]=b`t]Am/Ak_Id2*.^ZHj_rOSK&Daap8?u/"G
%+4Ofk\c5a@$-*?V'-LjmoE>/bGLm'(lecJ5V)N]q+WVclY2^1un]DH]1,'*$6[ACS3`8s!h,!>jQQp&u-C$!,^X:m-ClUB@<j/HI
%lP\<Z$XqjXise0b'-!i8kM/i%+3:&m$tOPWGma/@9"4_t&VA[W\IigHWK$r=:L2)7MH_*0"TSAr9qrn`W+."iM36S\k(f%dO0+-(
%MeT_RlS2q+Qc#/5/_Zm[>.cR=g"#eqCfip6*nfN_':.pdVq05HQ]<m"NO=UaXol.&6_;=L`bmX5mAdA]`JMl?(/Z+EIV?YGcPs<;
%%S(KtRb2d8ITP]9pQ&mHQ)u_$?1\OGHA7VBVTd7`IL;4-[-u?[g_i)liL)QkopOk4IU?Aic#o5sctbYe5tCP(QI&QQM?!<s$cC7+
%,glXJ5\'j&7YdTQ<XcET/Cg]]4h+S8Mk5Y>3MH\_"e<6l3Ml`-7Qf64IqrD=C[k4G<U0(A52/3nVCd1V6fLJF1%RcA;nH?>ec?+m
%9%[Yp(`Z\]9Zi2A`[HA`'#GGWE"nX/3mU.3;[(k^NGU:9\O6MAUD/BR&*p1tqX44Zm-)]"oM>cqBr9qQmRU>!R[2jE`58N?qg2A4
%'t#Tl;`l3$&e]g3jD6N8>-[A#`<5<BlZR7g`4Lr$)A?_C4"P9E]I/;[(m47r"BGp<+$aI"(XKlTN8iUF>n<h)\/i4_/eWnQN8:RX
%4mF5+>Ik)0N?AF1[!\WKe9ICBD.puu6n7?R&=pKES(qu/MTXPG%ce#XI6KsjQ2df`_q^t&8e(<7CKpm$bqR-HjE3,uacMFY6%b8P
%cJDg7U(_S\CV?Xp%4V6*>%7!2FZ!fMcGoj[T@`/fN$9hlAHeY<[$7i!c=N&H<mNor=Udh]M/XAqG4]d/Qb@,^@Ag$CXI`>74-kj6
%LGi76DemLM'F>!u;%9pdZ.1T];BBE<X)(50)E%A]A1`G9W`X0BM(S['jl=sIqc'kKBDkUsoGI3u%E-@;dBc6H%,80k%4GLXaf<2b
%6JuR2#b&V%$1!S\e!>Um.IRBZ/Vn_J+_;98KY6/7h._6T*$'<[a//G4dN:c,^bWdV%rApWST#2bD9OA+U;b?c(QUAbX:W:m9I,9H
%,%Ch'b*c%*Q<[rF1t:7?0;EX9*7lLZZ_1hq"!/Z:8e<7l\e7CW1&n/23]^1<m#M24\iSQCPN9.>B27P`Lfl<1V$s,VaHeY\&6:t_
%\%cS<q4Y[-'%Jm0[L+)t>1ssVfn%4cDI-s[bR;T17jZfM*9)]AD4s#r^6JncFT?i6'B*@0[E;*/#dnq.pt3Un?9a\7Eh=#QQ/mOJ
%Y2:)<=I['u7L`4/\[#0#,k?'>?\g<[3%7]3KXt`"o2%0WnR1quSZqROb4tjLD_KB&klh%Kf/b)S4VGsMW#:hKFVq.rX%*rBkNHok
%h4ohsBKIJn^J,_U-sj;*ng5sZCH>lW]P_CSI7Llg(J,[*ADpqmYc'i7[9Bc.4/+V\d:&P5)O]#W/NB_rc#=F/XTQ5,ioMCIW&L;m
%d*^jejoU9D#2tY*6fo$JMNI3DN)@rEC\bGOdNk-WOo*6%-UV#R'3)r^TZK3AE!\Zu\%X]WVj$8Np*WZN8tf$G=fiZ4+Yg1!3Y4UJ
%AC=5.K8B'U8Y7mCYu[&<bqrFU6`&dnFB:7L)mop1O3l5mSSEGZds"teddB_pU2X/2jRa69EqVW;<Lq+uMXa<[<rI#"`QJL3>hQ[8
%`8Qp6FgY0ndB:_pMkcpd?a]3ibUaP.M:o-s57/Oohl^6,fDgNA,DEG0kihP=R1_9sVC1I<Yb[2<1Y:=N$DEnV11M2."l@Hj<`=0n
%MJOK],bJP.420@YB0VldXX%X<F(Y<2"8=$"[LVr`NET/"@rsV]*,%W(OZq"X'8fBQoka6O'U.%FR$?im$.Y3_d4[iOIM225O';,Q
%hs-0,D_Q@9ls0!<NP3`O7iHEFg8VT.nTT%F&3[_IiN`4/F7o@*X[2jECXuMmLpqf1>&!H.41;Z2ccOT1fGaS^eEmCB8$j:I#_hlZ
%?=4B.SJO9:"s<aM\$QA//39]j$6&SLjZpBUs1pYmSP_P@YTDEiVm9Ja!$jF<hJX;?mO^<Fo7ACr:6JalF).I@fBCF\:FZ&.iCg4?
%4*4EJ)r%#E_nX\k9um7?L$u-PnZgosq5)g`INk.7k&U0nHo[QlA)"hceju]6*n5u1ah5.``R0q1!rl55-V3Yf#%IDNq_gg^PEo51
%<!$g'<*uN6Te1otMif<ep)(0g8>e4op3&"qc?\$mMq6,?^8/3ZTgSRi*QGK.>@Y-<h9PL+"+]W^!"eX8S'6UbO0\ksi."sAO6cZV
%Oo6B/.#e]b_J8fp<RU*0Mdk+EQIFL@rQ*;S7N0Q,Za/Lp.)m'l!C`$0c*-Cs8G;QnK"N]?hI#u8=?'"sWjCHZ%)`nX'M;uPd2UI8
%3CQ$CG0Q]@?oOh2"oMqOe8=\npLa%"\uP9`qVmhd$Ze:h0[GVu4@EnD%+d`Y..BWH=:Y_V:GnQ8Gp)<OF[`ZN%4e0H'!PAmd0peL
%-KAcA']`DHGkIm[fn:"nVuYuT)M[fQIAYKFZ^n*(EKDhCF-Icb"F"Qss%151mn1Y=MmKa79#[;>CE]K'%LlT6/LJsSb%Y8sqX:eK
%p<?R0=>d&6X\o]pC6$uWiGeYl`M]fE&I6jBoQ8RT[s3/V+n'OF)*Af'hAY_jR-'Tc(QgsC3rHI6F1TEq2kj<=`,(IGA4V[4kfVt\
%RB"FtYA1a;LLSL[dL:-e]ekDP5aV5QW5^L^/Nd`6T6;-<+mYm[]FFQ_N'6u]2E\"/(LP,[#18`=;+$orBf,7XWu\pGld-hLW]3IX
%rd3"P]!A-X7KKE-ECS,lBI/X"\sh0E#P>@UQ).;rLI*qnASo$2S?Oi'b"\1!9TV?>0"F.WhBZNDMSnFAl<dV*SF[Jh8Ak/MgsDdo
%p<S_T['O0q"7+n&m`jt<FoqLq0^prig!+"/H:Q6/=#W"R[r]It#Z$]%p23<9<2r9ea;&t$$6)qK'Jb2:o`Z^JS`]iBQ@C,<Dp1rp
%T9,-d*=h/GC[TN(2]EC?7:R"!O7J?g4MIHQo_!$u)WkuLFit:?\A#D_:URZ:85<Dj@IRZkj!l_Vk[=50kY/B.hk=9pOoE`hVX4p@
%4*i]T:!q1M%d'Qtp.>h7lE$?'?hE\%RC-9WZ'c\h*C9p#`@ib,Gh"K71qHVUn2_l-6sF8'Xq(L!hOL`S<[AqRJ7;olC*J37#HS[k
%7O/96PRp[Wj%F<`nd]MRY(Gl%#cH*KLm%?2gpq+O#BKJa,!/9uN#;gdUq7"Fn>I4MkoIqkLVh)59,M"TJBq`hE\IOiS_NHdh7fKJ
%<WbP%JJ0(kTm_33T5&S\OSj3E%2%6@`XI(C_G0(HdWR4h$3.<O]#+kLB`EB-&Q2t#p?c/s=(FIhe=JQoC5/J0N3^@l`gU_Y=\q',
%A@M6[4C_6&YIf`r,qU"W\n7udOsLa08-Q/4gq$jDb+QE!<?WF&r+MpV<?.(S(LL)$^7G>a"@.Lb?=30koj!Or@8'/;gVS?*[<$%^
%T1[%-2L[.89rmN>+bg3A`"pNo4$V)YYP"?6dFVc2\5h/;'X>"Q++1]lr@@GU//Ii`nr8HS;J@'j3C??#:b@$IOdY2h9a@d)hI?&H
%7:[!1D$?7IE3!p7'EK$1UIFgH/MM#CI_EqVP?mI!dT&k:)NO>X`*GK#Lj3?S=D1+!J<R"[-']Dikrc0.1!>kO7ROjl]S__)U>L0q
%&e^,iCC]//8k"H,YH/8_]iRjuW8>rfYge&EjA8Mi[.m*JU6.Dh-""V$nmjX!s4a))rErk&O11a[q*WU8,&1U>J")SNW:hV07HT\9
%]HFh]-^;)mm2O4fOn7)\f0V)V_!`rbS6AeCB:>to#he!b*G+fo=/Cb:#ljg\=M,<E5l0uIr"GTU21LGl3%-SM;?)J*?VbhOImCJ8
%9$:7]bc\OeY5dRsqQ>49fN5$ugG)n!`/n=D`@MInHBSLR<aZBd:\g"6n5A(6"eReq.J#_$fXH2j>gn^"Cn@A2M*?YN's$Kh+tkVQ
%Pf=4/<I1gBMIiN`JEfj`KTj%cgQ1^D1(nsUJPoEF1,hT-['70L[T#]PWdM79O70cH&@D@?<l>=N+E,kYHTfoKV:-m`6IHhO6,J%a
%3M5TZTM1l;ls;hKf2D5kUF+<F8(9oFF1=@PGZG'Qgf)Cc<sJ1_+mX/YV!6AreIEVV(kce.gW/$<]Bk>l1l`TC0h7]+eO+fR!7"p+
%K#,4XS'a*_>)#2",m@mBIet1g4@q?djHko78g)giOSQUki&9=ZWZhU]fN(j?l^%rS*p*t#ZCu&rA$NG?3-@'\P!faO34MIN5^SO#
%n%FrG(#A9c5_9#n3Ok?Wp@im55:m`k)RBj<o(\TcFCdV-C+$PcS8_<,!(B?82,39MWb5mRo,u<1WR/F6Vd:]#XK%SgqSjA!e^u(?
%0+'Xhn<WpUROME^s3<VuF45MGeXg9Wh'J\"HYI?@:q>\Bo4dp73)#kpD<$,X2lV]VW_fUn",Ng@gNH+aF^)uHg(`!;jDqA%;'6fp
%R[5:l5dp"e4:\ko?Vic7;9K-;k\8T=A3Fi8/82cT(;D&-:,H0#Wof?qaq+&CK@)ZtASX\T9mrnZf5j))Bpt4aNG0*DO)[j!=k+nS
%;^NA0get\-$6UH!=Ku2FQ?FsC21,!+!f6,WEcBqs=!XQi$sFMuCSS[HaR.KX)(At?Z>]>hd9n@c=iG08[74&Ll(O:QUUA#TDo'6H
%m`jnJAs/d+B\KJ=?3gHg.sl+9Zr>9pN1+;+A_W+)l"(1`#Xm;U-.Eji5YrIZE3=%i9?*AEg,Ys3%(`'Af)nkQnm*!tmEVb_obFf/
%2H6*!)ll'c1O[!/m8F\aRfhh#.[U`cp0LtY-ehZK,:BXo8QY8#2h>45$mPiO>n?qVr=\(42grmp.tQ:dlH^;p"L^"ICM'mT;Y5<R
%.X>X+-`@WD;Em>ln#5;Ke-N/T'N;Hp*\rE[A$TB0I]r"]J`B/$?;>!t90&G6#hXg1k$,rfW$G<c3%ZSE5D#9.U!Vh#L)*3gAPF37
%5rPtD6tG47?&*7_%>`.2o=),p/TX4"YG_SVa1#BjH7GQSd.BAFRrl)EmHsR7DjnVloJB0.s*dcqo"nj"g$USO3,pCl^ee@VFhoJU
%a<"+N!4uI@+gFY:L?*Ye=aFCdd[EM7)BQCKcOpr'^[.Y)[n.5BA(\9MUoQeT0u%uo&iE>/kj%Qc=E:*#V,dcZYk].5gV!pl?m!?L
%\IfJi.eo,FM\N7U=96V[q6Oi`(I3Fq(tETj4?$R6?jJ2r\Wp&/'Q7:U_Bk1-%^s`Of*>SbYGD:qG%A?u)2JoUIsc;;/ko=.(6YL(
%1BdN15$uY0$.,lW<`_,<dYHUMf9Z-&gf<6sO#+mk-/@Y.FQg'T<c?3T:k3L`[AHCDB90YE!8^B!27]%>N#[i=U^FrTS#O]Ke:>hT
%!?#e:a#6^]Sj\VC%Bhrr*.:1;i>N>t<'n(\RG0`-]:aHP2$V?*lqSOtbmWJ3C:i5eBk:I-;A#hCeSFoCgp9RjN"0t!,WEQ$<J[kT
%HI^PZN>HO=#CuZQk<q@ok\1]SLM#f,]_E+DZR!U?pC(d=#Ht),*PS-2d'@tu"bT5CH\gd*ECHMdOts!rECm"f8,q:<dTBWS3*66l
%=B(7N)bO/S<!:$!c3n),mLq<bLD?`<?ohSE,F@XMFU[kE.*Aj\B7mA$JESu%'0Y>oN@30[#A_853\SmB\]_J<F??=W]1Mf!E,:\S
%4.0h]Lat)Eh.;bB8J),U"B^AcYmON,>bK`-));igHu\Z%AlP9$)9K<6h3(R\B/094U5Bc;"=6@OY3GAT)&Kr5^F'K`R?W3,f@SKb
%img?1H8,.W`dkY/][+$s<(Kc/c.aN5OWl-bYEWU5J/!I7Hr[GSeLh0fN)\!foK5oZo9,lV),fX>H`83&c+QQ]YbiO'lK>UECMJ2)
%,I*D[AX9d\'bli,q1:u'kht@dc0,CZX53B/(<%:b_,>YXd_5c0&\10$Etq=dQVh;:l)%s"6ko,U)ZuYd$XeY,`n."jXdoSeje,IR
%Z7CI)Mi:GFD]QWUYU2QHg*._]nnJT50[lHgR6G!(p8KGCp9R8igOI;Q]!epEjKA?^GauVtZ+(6XaW6hG(IudX@rJcX14X,X\HXB9
%dZWe5qLR<II<:kn(@^XXfMd*.VS_P<=%$1#2tS&s`)&S&LC*N_6*2Rj5pd`#)ZAF2$!jm;>"T-O&5sf,j"r:t/Ue#q=E_XZ':;6S
%nR\%3c)R">.H"*cc[giZ^&u.^.CSo>FJht2767tAUYAD3/BPc<'q)=NhWt^+B#;f/fHR]'51Ac^fhV'2AU]o4A<4:'0!4Q*=]Qjo
%B8Z"\RAqRD-5`d"?FgZ:8FY.r#FbO^)8&u=/,Cbc&%6&V;.53C\o>89kL*ipB!]o-XntqU7:WKkWg_gMV.4+CG$rP.$::NDU;\,H
%2YsmE1V0Fh>&i&s_X$;cimm/[(JRtCFY'/3_6j7C&u72,%OXSDJqGN0SYaRs(h9^=^kHZDFOV!o&:m9'3T]#[j1@[%((q$QTe4;c
%Y9'+ChWa@j:3W]+C!6#Copp5BFe;><4C(4ML^$o#=`trq\e%9-U.e@t5\;f&.hpS.BU+1]iM,_@<E3n4Em64$f)lJG(#dk'piSpM
%b0Rh-(,Z`.CU/7=(5EcuAoh,-hoG_>DaH\@=XebPSa%OPm$JJ6)Rf9s,Q4!GpO]lj%f6<'%ENONoTN7VCa"R#80lfG2<Dh7_#`:2
%EMbp>3hb!o_n0A7Mcpl.oGq5Bp8A:(n+?9pVj=ETF_@])nsGtjD/oTtSb7CK3DiBbL@6=JU:?CmF,&5e*\DSF3pj.\<`n_?,?`K2
%;\;W2_<PjTALu*t.o7Y5c'>DuXs#U2nCHkGJmp$3)?cBE<gc!g51<)+-d`6j0NeY\G&KiO'9dCe^YGb=01VRE,3i*i(ii-+OLeS<
%h+UiZ$C:5Ra[%`h?E%Ui\g5bqP<-K[dBBM-EZr?ir9tp$+#F`__?\5Ag?H?H7%^Y1qpaLV',!W?/g$B)IVEeom+OM"&B]Df=1)?k
%S+hLGDPLB@rLAn!Q^PFLEa`u8<'JpQ`4Ve?4=rJ1BN7"*+>4@"1ps?K>!RWIT(:T:*c1G\$%i$ugPHZDc(N%EF5_0;Dg1@9o?F*C
%O1nR*+Hd"r7BRMUD@2W'9<@?Y*n2t]ghCiY)ed<MM$4RHn`^ohZ#?ecWR%.3o]m#OD<KO@]>#ioGLtg\"T0OHn#41H/"k:bpL(8+
%3=`Ipm4Pt@AErAmXN44K)Je]'_'=;(C!7diO$'m6enPL'HKAgqNFgm;Ue1<sFE)/m'4*OKDN)eH1G9Z!52:R*SC9p!S0fB;9H.hF
%?QcNo\aCsf@q*4mK+Uj\b8@Vu;TugVd_S3("[Kt(M#uC!YX]K5m"MkrYUHlW."Tf6cB"<c)-:;;I<b?0!mLfrFqMeQ%7#U_7Cq@=
%lcD>Q=g#i!RdQ7YA*&)MEM(K5Vc%PEH`8@qU6l`TAMrsCZdktIm*A)T4/-oV!3BD_Ltc^RBb2Cu<\']-VMku-U0ur5V@[I89C7HE
%58jorB'J!X=)<^a+\FDI?!cP7=hS\a$p+<qHZQcS'N-aON>ka#6eMC=>.Rr=E)o9iAA6$-a@mW?h=Ad`rdZLP_&];i3X,#h<_Hmu
%hd)8'@$O0d[`HUsZ97n<[=8,MAd_Ym?A@V/2sOl(4+'3ETuM8.<MXA9raRk;`FXILHg7AJr1(E6nM<UC>n)$iN"KmA.J&#;fRr.i
%=_9m],GWq[fqLiMERZhgTA)Le110YaXTn0Qn#aT4UT#Tb9.rUTc>e%,)K"Gkd2AqNWSPAcV;(fo#,]X*l*ZE=3_Wb^LC)FqMU//>
%<:N1Ke9"gN':B''9[Ug0IFR@cp-r'Mc*e*/<QV?'n[6s%[habK%Un]GS,9D5XWJ3:rEC="8CR5a;W*UABZo:Nj`;^5Yr18.WT0e'
%9hp'6KUg&eQW'bseCkO*2'5</o^A-qIP)jW3\o>srn')o<_P!dV!hn=B6Ol[CC>he$NbL49acI;5.,1*UuF?jp-<9[qU>eI++)KQ
%p:(=8*a=8(T/t9fQ]PEA^J9D_i>(%a2O3RV@=IHc*7r$A<,@U'HmVoZ3'/lX,4@IM%$M-YMX&_u$8]4B0/[U?&Cnl)EBV>"`9pR)
%7=4*R.u"W?O&l,j#f:'*GK:O)U(</P/6XH2AK0BjDJ/_^TcIoCgF'KMB8d(d?ue.[E`Dj!0=6K<5(g7PKlVO6h)2@f/ubq<1jY/M
%?=o='46#e0DAAAI0<LO7Aln">C&HCS(gXE&7!=Q)4gdcI+1e$#YDI(5f0pH-V'WEY0R9'+,(E#S_ZHIH:)R"YQ%o)4VGU.$*GPm7
%K"L-ndHSI_Q_C"nritlD`:^*8MtY4.=/5<f*Bn&ik5-29"o<[Ul`i<lId2*:^SW'::PeBX4.9D#C#jA\-NQm-5;'C""[4*<)pQ0-
%)-qbm)p>0";l1?Lb@l#k@a?f52prPKMumbQa>/W`2BIPkb:*;@bh?2NU\#lbQ;P0Hpu9:K$Lb06%*f)Zkjp.Ckj8MVe&Eff]5h-p
%!l:d:OD6[OkVt.GDcA$F8%EC[91,;`2?#:ghI$1:B5f!^>T036[VLhI&7%*=Sd:2'2k`$dUFeT#MmGjUa1BG:5IG:S*aN^R7O:8[
%I&_K!lfq>OGQt@&nZgp.q5N+/?BXJ):/"`fYnBZ=L&dT8^q;"%66N=oLMdi4+\b1C1JfY"EVqkV7if0*+4kQ?l'G?-7H=^FA.2m_
%'Eh&;1W+IZO%VoQf$eE;hnL`!:ta/"QI+nN*_7^I,^jZinm7l+&_fE0)q\PD<9g%qC%(`2P3AFjH;>-K:$rl2RCuI%(r`67a!k>V
%9-l[C*X=27o988`2+t&GdjhMf]HelYa90d,9nWVm!SAJF[i#ij,*:EXh@_)toO_c1U,>?Ag%)qO<:;OHm\S;pP:6Ih7lWeK<)_Fp
%mN(2dFh6jNZs[3apZeFD.DVS?Zt8(X,n*`8'Y">kC"^)N3>&<%O$hq8RuePX.!"hpY&AlB]FCI=EhK\&7?5+'g6)[J26O)6JP=M4
%)1M#'"eLb2^O]kALC;:icWVL;aGFl1IKI"6MZp:N2tjBkF0OO/!o@``ZIC`NWT7uqS@^bkB9N5ba1,a9lB/>jr#1$:8F`+$,GV=g
%D2_UGe3UQ7KjlNo_peOgLh?tE)kq$QV'fnkh!$-8=mQc`bnc8Kh9Ja'!4f7o;sMt(/K@jZ1d0q2V[,/&j#FkjLUaYAiI;Pp`U*Lf
%3LNKp@1?B8Omsga.5Rh@L(i+56VE#nna(9</)WP[[MZ6;V&J\7L\2H.YFXX'6qnbMO</FR\BcGB5PPsg"?8_[G&2bq`rJVK^kZU?
%"p?oWZZ@J!)OchPXm1FVMU6r:PEH*-2:A12BU]DlPA)5[]WikG9j=dETacWl3(:AZB/0mDQ/o.N._-*UUM:gF&WP4nN#_\6L6k\U
%V2Cm<K0CRK`40N`&bcZpNDc&%%TQ5m2Jo:N62@2G]WC%sVJ[EuFkiPP<(X+8*T`t/;%Xnf*dV[@ca3]_^XF(h7rcC,fG9Kl*'>uH
%mKGU[BgL$QML&b<+pM[ZCrC">GXk[!Y2`NG9T38/+rN[S^Kbq%K[SuGH(IU%>EG\Ya'<TJ%Wg;(Aahs'W&rS(4.CL9k/08Un<8/k
%CV8@M(R=1hO9`Q+M8glDHOlF1jg$L"MU`K,Q:XUt6=Xas!gK,/N=+lWfAJX-EVFse=41cC&b_-HHTkk&'*BN6%ug1kEM#r$oYBQV
%0?%lV\!eF_l7HbEnt9:T\02FuaLLWQc,H]?SD6,dGA._I<blT#/<&N(l/7br'!:*5Y4"44kJbT9G#Zhi28#L=AM5/!RiNL>^'VJU
%O>)EV5\;@64:!\G,N'H=M\9%M@RZ^3#]Nh!A=1M*<;!%"-4T&,eM<1sDuB=hrS#Je9Ai&6<[X]X<FQW?UA]Pi(lbp=Ka;LGs1i+'
%`*^jqQf8V>nYq5t__:C\nh0lM26&%en>Y[laZJ",^V)hJOVR5^h9btogDO=Yb<UPefDrmu>.S/D0U3&+i+@r#eo8V$CsF(<qUhQZ
%h\DIaQ24R(elAY,O&F4uN9dH2p?i!SW*bIFFL56&nUAq(.glK$U:X0+.>e`s(cftZ:WY0;C$`*V"3"PlQ$%tb7=4selEF?"p1h#.
%WA6q,p8BRG`r!R&@r(T";o^otRb1fWs!=peA'Yf/MK3Y&VNZ=O(f0e=?Yo$7Kj%0d\q2M/#s'V5Ei3!34In)5A`_PZI20X-V%D0P
%=\ArS4UnL<4;R!phTG`)6t38a;oQ77&gW3#UeCd,i"6hH?Cj:E"Oi7\VF(lQ-ROJO^Ra=P(J.2@R4*pfa&&lp3bLV]UBs</DMX=R
%'jG$5,,6=D]C6;$YLVg3@2J^?]ljSt8)k'ue*5i?_a<CM#5h.mII@t3+k*48BWEh24f:IR&'U+o1BIP`>7/irbOk_Wl65JMEdPC_
%L:Kb8FDcb:fi!*8c8=."b];IsJ[RD;ISA.^o[%^tBq2EqLWSY.2$5Zn.e(^Up#?H6bB2I?B_`C2N`Hi=1>NB6CKBN5RS5Y\U6iqn
%;o<JO,L[``JMRI4ICNM-GrsBoQsTM<O65OEKio6KB<QEumY8e+0e^iae_pL@?J\AD0(DKD3q`Gsb#-m's7As@&C#N+*Jtrh)otP\
%6%BNW,G7pQb\^+HTQ6R\Vd+X1rL0d*A9[_"\I;hPU8r2X)lB,:1cg`KouGVW)-<I.:+$`j0h/)iJChpYlI!&uJK?G#^5URB*TFb+
%:I(f#%Vg!]TIS3Yi@oW<;'9L=+fqc.](3N<m%=r?+>YB+m-*2k34h2rd?[^9D/qeFHT*N62'2(c7=4Pa_;FVE/#n6;e^s'MCPG"\
%:LE;/U>$=@[&j;toNh"Z!T>:X#X6Conk`9E1#>TM@NB:L<50;5Sn4d1_R\E*0,9DsYWb4iSu?YYc%jC7j?%1J%V+N!Xc[pDQrM*.
%$C+jp$%lla7rY?1$=jO;I[o:Q9r0@DUZQ&/BP=;62[82Jd+Et2-h`l4#`'L4e&`pQM4U$c8?%ZHN'Z#ha"%m/GGO?ck#s]!jk07q
%(k(M_E1]^`J+P7]U.Ab4\Eb\ZM@7JdMrj/LEcWmhJrsP+8rB[V1ftH5`S(DE>I8LuV:LR'#49_n=YZ0jZmA+-l^DO6n0Y>dmZot/
%D<=0/T]DhOk]V!]jM4O*ikQU\d".aF40\+f9X8t.`TSfSQffG$p+LZp:WRs*Lf..jhJ_*^%>7Rj<i7q3I.=R\D=QuB`+5#'fZ[;]
%eu)QlMYlboN)=EkV3TTB3o%#EGN2k0X_[;$eBJCdisAu@S:G^om(a*>=*GM(bfADtHn#R)^Y'3D=Pkq"p0b1uZ2hVNAjEtIGgU<o
%XHO^I0a;6)gG@?KjW@XCU8]-48Q2GkJ?I@e_ShS(qHOAOi_Pr)_Ms;P80N-P;/fG&R8k+'[>+*HS_U/`-Vn)`V@FX0pt9I4A25l8
%LG?]mAP3c8V?!YA0jCZ&[T$ikNG.0iF2e,MQhoRbE5I<lX3#(U?4O]WBnj(Ha^ij`N1U?cX)j<'jo;U[/k_Af]!CP'eF63gNUOnE
%o,l\fa$%`,qYpp.*0_-T<@)4ql&OV+AnRa;`Kinh!KnS`E+^Fa2TNAC$rHG`p5dq8BSX6?24F=9mRa8,G3i%04G;__[4_&Pc]%K9
%LA,J[?E?6!<pJ4Z\X=Ai4HAN>lMSColBP,D:m[Uk<jqPlXi;4"%(?ih+gSn$GkGh<>EN]0R"AC^4$W2*Ztn&!*UVpIjQ+rVWYd&Z
%etG!HYg?`m?+""0:V%S*0=#JCTg#`h>pX_5%`Y'pWY>p6h_s3K#Q?a&dJXToQWX/Us2/GU2HZp+Ljn,9Wbsk$<X)cor2M?tJ_/VM
%Y!_$hP*]$iD>0u7MtY42=/4k*pQ)=VSI[kub?stClc%FdlfIr@gG+/r`4Q$N#h,/6g6O207$:LE1b.r+_,?(e?P`np)>fVeGg=C5
%l=g+*:sMN'c?[PsIBBESnAG#!fs4kiVTOHUoT[bU(tPq8GC]oKj&:_7PlbZI0lC#2WGdoS7]*4a-8R95nenfFipI`_HFI(EEZ1pH
%eHU5K[A!de[_?CCU".<cZ(b;ujEULYU<f:as"qae<bnW2@&7(JmZ4Ck1bs?Z@Whcl0(n5r6AWG'crejK$Y#2`Q*c7G1TDn2OCf3u
%s&uQ0r(BBt,(*_[pT*t,n>/eHqaBTF_]Rm97\5Q7BK6;>f%:=^@_,jG(<"k,"TLP0-=::n2bsGM7NRn3.e4o<:tr2ioj4JkF\[SS
%_7QF>ljiK_]Q(#>YAV4:Sh1HaDu7`71Ca2t'@B#b:1cn"-B/?2*!^`=_Fq5A;]NC4=V@lA<%HW\-_4/"!G]`"!N3?l(s'fOU2JXL
%YQ2A8<e<Ik7P*8lJZMS@p*D_i3ED1>&;\fsf6o^/rq$Sg0PYf1/#\hKdk`Z!`_L6-ljKj%Sob/L-F/YL@jJCHV/r#]=*%u"olnfH
%ks_P0Ueca'Q!R'P#8;9R.;^pq)W:#i9P=kLkJ/-N'BJ+a/_KIS/ist+UqA7(G-_KJ<tP+Z&nfmmM@kjK@:3(I[,a'-;1sH#b!HK<
%:XrX5%B=1\-s;L75<#kj&$k7hYPU_RI/E/(XinGPcfQQZF(K*s"uDt80J]E#K:+)6nAMhN<*>_,_X=d!$n[CD6Qr)M:l;$9RAAD'
%G9>B*aBRZO`.b!U[2=!@1fE/.`C;=7jC-Wd1+0tUS:$+^I0g(o)T9S/^9@d]G0%s7_/n@nE^5[VI/B%FA9"$I#ht=n-m8orUGs.V
%k%>rBLe^>]kMKUXHYmRpAaoShl%HVA8UtG"4)RnVrOPl;C<"(7`:*cW5V#WGWj>9tm@NIc)S.O$=#5JB`7/JBoY"I=0!H&5gT",V
%_]J&VcHL!c4$Dd^HM7n,d]JMO>,EKqHVpBhnU7f;4mmp4#)gAk4Q2SU$?jJqK($-VSSH+.bM]]u%@2aXKpgO"V&TAl0fl]'@<%AZ
%YPW^5qfA7/0%:2K%*"?d`lbWUk.f;A*E#`d1m(GcXl;J(aXYAs<d[1;6O3n`i-E^kO&mpA9PanO(BnGJeLtKURX=W2"+as[S<]du
%c,#<OY_8dJPpO@-lrB)k]^@itH>\'$rY==9=LgJ?k8CgH.ts/]c3_J#3%+S@"i68WY4K=Ki29$R!c^HBH(@3OaS2\>S@7mefXb5j
%7*6!TCeADq+;0TBeH4,pl!^WeQ8Wt6JWd_9[cXiXRQ\a?=G>,,L?PBG.i";aPUl8D%)StrQ]@t!18:;$T1AZ6f;&84l_1QfFZoSA
%4o01^(otdNX=DRu^Klo(\/mk)>iS1!_SDI$mCohp7\*4!@60tcVX)[Qg>\f8f;RV=i6kd+#IPRVZq'!S][9,[p5bY%9-&>KEV!Ab
%Mlk1RbHFDVa*@R,=;;[*i9<MXpbiI!g*$ec3p"X-`f]$2K%%'\JJc:EW%=P?ruaB$SbIF[CVBUr:O()/]>sAIggaZ-#o+;'%/8+:
%<!#QOGh&pM-aoVi4C5HQMUnP'9D0jR?(7p!q:jk"26R"Mf<@5HC&_N*ZM!YO;25a4!IEhcr^$C^9Bd-YmT2FqbuctArr`k-[/"oX
%;[soDKWcAAoBZ]^+8:b@H;dVif`InejFDCZEGON:H"^..e\OZQTEPloGJ),Rau"n$T;$>46XLm;41s"QCq[8AkW$(Z9DoG1J&taW
%goA#nC^9>e)L\[d['eb<i1JZfs3RLO4ZMpm^C0&:FGEqCoVebWO7sd493fb?0KEJld!`BjYf57LQr5&/DJ4J%`IMu0qib)!1iCsF
%6<D?uW)S\r`#jq!(i,brFW?7S$$&a@L9Ho],$t9Ic@C?dN]"NuTDW_/JR1ip'nMqk'+O%,7u;)!(&/t+3XmT]VG`m+4-ps4VdZto
%,h7PbZ@$(o@uWOB#mGI^"sIctRQoX);Bs\nTGAa+qeN4]S\*b?gY"4P#:LkRf#7$0K]at9fmcm@lauk1k)`_;GFJ'L3NK08jHuU&
%mol0:1Ib+qQ=*_1@;o,(1e`F!6co*tS%6YjW9:6#Tpk7OW0+jPADs[4@5t;eP"0$68gC(h6q6o-fWIa#)#O%'n+XhD;0>X"!Lm1"
%dV1TcjD=IOneJ#WNo5`KA9NT<ZZ0;_4d<Wn>$S-l!l6(e?61"!bDTB?^<[eJ-C(*X?`.B*A$%F7i$!"+HRVfuYK0.0VU;Hq7G=iS
%f\tT,%P;LslW$8Rk:u8"(I./jl-625S8bZ@Um&+Jda72c%ja6b+JT$6AfUGJW,UQX2Y,-<Ct-+2<U"+TWe>3RfpY8-e#q-i*1]6`
%Y`puSgM!"q+-'[t85?U[aMG3U.`d4-kTr35q=f4\\h]h,'nG#6_FPNW5c'eOV)=-]=OJ1pB8C1#c_ZO?e?U8T_._67ddoa"'+0LG
%MD"T?MBr=-D5N>pV&?.40+/Jm6XL%\]`m2OT5SQUIV4@(l4>c7`ppHChbNp'Kl(E;kk4eNWHIV"51S_7.ljk=2.uSWLs:9;'K`SF
%*9CqN"u)q=Q!0Fuk)F(!,#I'CEg9*?H7de$@u9FmFSW2[,NJ-b85WIN.I3&l;JmeabpkB^Ju<T%_jt6bQ6P(`fC8M&pP*d,Z][Hp
%'Wifr]l#W("sfeFgt)>(V^+&?gN[Wjf$N[lN/Mqr$c6>Nn4\W<>M0jnH?dAs;<([4OL%![R^gUJXT(_:@!nPcmp:8u/(fkj6uY^V
%T3bmhp[*(;HCR[J8n!s-i;kb$ngAmd$0Ht_+p+f2alDfS%>/.Ne3rppE\S3RP]NR4c&X.TQr.7.18"9\]e6H)4Q]VNHH)='Tp"-6
%8f@fHaNMeZI1rt*]sL,lOhjL$9+;0oC.0J`8o7MCH4A05%4ho_;,sSp^$Q_'+t]jA_h_i/piPPSSDS-aSQZb.9l9bX4hdKQd<9r_
%\cCWO*i00jmB]!AOh5V'fL>)p=Ee+3bLsHSVog7fc*\[V^%df]L-Y=u!CZD%,NI8P\C8>1'=StNqumah\"O"mFQ/Xc/4!:+b!s$W
%iD.qB[9k7EPt8P*a>n[_;f!GDd^$%$U@<`)NF2&Cm:;OfP?+1[!*Ad$OY?;c@H:(RWWO9fPs!Q*-NtBj_:F@G;i!5^$7QFc(\<kP
%r)t0.X(=QX?k<&p@s:dLE#5uPISq6R.43Fc0f>#QDkMgHm"e-M=fiB)pQO#"?H%:CM@/tBhsV$=#Lf]&h>r2s2jQ!S@@$0"4$K8B
%.#ts8G_dbIm3r$/=s>=pBctrN62D'bnURA8@>t7W$/(]b$u+3c^^B[*SqNLUZNJj/`+8`-4's2E#D<DYoRWtq33t73q0'2Br)P)A
%=0AM-c)Zb0p7IjXhmJOZ1J7qj\5_8aTu!`fW[I&*blM[<2EqbVaVO$eJ*9HM[C/6aO*_mPo8lq3k!dDMFHJrC#`DqfbYO!U*b79"
%DY%)!"3G?)"@OO1D>488["]o!!g$"A)H!"eM^E0)BnbV)J;!tOGf3qRPXB?dFPBG0du"ImJ%cC=0`UGh]tL!$9b1Pr=0Q5N^^&Qd
%V9es:HNn?HKOL4db*&\OMa`smMIL]KH)&Pa2Gs.<L83^H7-9et>.4L:Y%U:<`)F4H_/RS*%&t5IBTIr*qbtbuVR8A[O[jAJh+:$,
%m'1JIs*elWf1srW#>Er/&tmtRnbZdE'8qsE4sG`6GY/K(Jf)qEMl[&`ikOe[L\4a($$G9LlBQZ<7_`,d4$iHg=<S9[GStMDnJA.'
%Ri>_qWCl:kA#r]t#4oRchqP^@1g"ZO3EY7WUNVMF+7uPpOrMB.`/<_-1ahT:BpU,T$l4Q'a%RXs`!cc!`?\rtN+fS"@h(0JVNjW&
%JJ7jC85eK?BgsJQL[pZW4Y*-uijfZ:Vei9"C#Q\T]ZLU%\;dtI^GhsHTdg4G)+ggXW>H_sd.ikW/Z?oKXTCKpaDnf];"G;#X;.M[
%1^Ds&@cjue+L6[-L,te%[In6<Wu*U%^^\aY4N<^/S!@Q6\e?,$o!i.Sahk>%U\[<DDeH]3fTl\?U<MB4lqeM5l]]RBZ],XGWE%&>
%L<h;#,k+E0QE&P&.$QPjM\bj:!EB!TGHX=,SE;(\O;u#8#sL>F8<SkRHfO/XQ5jI49*lRIa]\nH0i'L2%`0!6K2oor)4olMY0AEk
%/VdBP!<&W%2ueJJ%64IZN-]BhMP#5):g%SeVc@Q=$HWB-ntc<,2/A>)XNucbCaS.VHa]JZ?><3<Wd"<f/!>&]Mr*;Nk-2d)'Y>%Y
%/k;O8Qhu.lgS]eEN9D6S*,+RY'DK36D4bWZR>IGbhR;>cX1Y<q(0[`;[p_i;Xh!$Xf*olU7:KW25jR7,QK`6cPq`B(`dG^>ktRb)
%>"poa9^P`M5AX)0OYJ4b(sGU4aVhh`S%Wg6.j^PLrSR&QlKX+XGLG!0`JIF@TWZ'/l1-0"?6=EeDt6,SIgCbUJj+`$Oe[p&,-XU#
%"$4\I,#JM@o8b96:pIB"MjPPVC*6qDOHBKaisQ\SQ2M(O6;WU+$l3+9o'KtS)E&cMUags[.UdV]X$5441=J3;WHqi<,\bY,N9ke4
%'g'i7Ie3C[EhO`oM,*PWEkBc\MbY&_*EX^ibQ'3shEUb8B#G=I9]LB1,Lpdcj-8i^2_ermfoB17Tq_c8/1f2XJ%mq<+&&YY#=C3H
%<5d+!]#DcddD9QOTS1e5;_n:YP_R7V?nD#[1*[F:0?BNTd-:c[#EY70&FIu[<3uA*"trj(VYcWJnr[OK(.tcZ\oUO[K_X+"\?'37
%9][)eHop)\gmN2ki3lP^5%M::p1aQKH1bJ?3-2ON%T)%o.@'V]ME=oXeQc@Y.N9N@3fT6r/Q.]R,oISc94Z&@_,e^1,8`A?*dNnu
%\_6SdZQ6'e/5K>?3C:ogZt25d-H57`KO%pVrSF3MD,pY'fOb:.?`^.p0PF!-PjD,fD.-G(E6_YM?6rsZCQ;:fK,kda)1\$/at_:9
%e>%)><NA"*co-LR*CT$G$q%^U\e>?*,P@$F'MAM\Ap(f5\!)5T36Jm!EA->3E^gkZl]^^:AfE+@X0&I<bpoAnWXC#saFd31&8&D2
%U*KtPLU_18TlRc&`<lXW:9%opLr9^$*l7JRVCpUK9oZf/pYAHee6X=?(cL'EFs[iDmU6:fpP*d0:2,(bX61a4Y5'KbA65uAG9fW=
%W%A7)&MV#cKsK\miLhbLhL_Ub`NP^uOJ#.[^<#XZ#AD*uO*MImX:dK9Pmi\$JB:"4#m#9u\=O\mq:A^FHop(qBs/:QcR-0uR)@I^
%:]"rA9+Bt#G3'4+1K/)-NA7rko&OE5G;p/g?DtNaZg?D+#d);[Z%s0kO4.Qe&E`f;9@4W)=7`Y??q%UiN-ePSN*=`!bgQe4db]lj
%2q.FJjPA]X&*F0rWne&SR^@,C"pBrU8RU59#Y[PM&VLWR>_eQ''8>D&OumUgfKGAiI)0^WFmTu@fBOr=-ng=t$m95g3+/)5EE[eT
%0OiBiID/bm61WDQ@aI[.2*uQ%f'V5VDUi1)$>\l@<D=!l=4b1T5<5j[CF!PK8d;E,3#4=g0qTbi*.]d`T49_\JGO5COoM^"7G1%X
%/K&`6379iI_MsMc[Tul`#?j!NI<`CKD)M//3KV.5W\JLkf33AOs*eTGf8`nkM(/gaX9"PD0[;j1dpkh3_[?b.N39#'d9fg%Mju&L
%cYCXP*oP1-;DpCb<Fu7(X[ng,:olLZ3U#OU'"bICPb<m]rU.@OlVA$>MsJ:,='t7em<l\D)094W&=^jqG-+EpprO"KAgo+__<"L-
%K_*)a,[=m%j4mTc@ldL<)+Lqa9$9%/]pNY=&Y?!?'LYS%X7F%ecens_aj"<8>"NYQJ-Op.%sR=hP?QB"J9(;1:i]3R%RAqNrSEX=
%\V!p[FY!pTaE=jBXQRuIFZELX]gU>H\+LhDMi&HmF3%jl5s`Fk@^-),CS360%^L+gZcS-T%PV/aI'5)?`gRlgbpJk"Xm:#*Dl5ZS
%g6t'Ej&1KLa%WUN+8<ks_UCqtUTn8oANs453'/EA%ln$T@b.P>dn6h$<agWQZs#?mOOXik6prj@N$$o)6CVl?:MkK*[2O(3KJS__
%;N!$S$ZuNQP(mD2gb%'CJ%mq:+3^gN^5'A4!K\>lA)_8+j<f5l&XeE=;?^N2bZl.OTOoetQ)6dP>h^gi3\%V#*."Ae38gIgSCB-h
%PO@3VhLOQiU<Fq:6ZQP%XR"]VSaP'LQH>"$<-\!he*G]mr[4Vqp[.%[etoZ#C:!CZ4RSf0f>#]l=O_:Qq'TgDGbh^08?#B<mLC"$
%9Z<(>5ganGct(;"#L\sN!)uJJQogWeQ*u/hf)8UP"H:1J<>NLCmGI@Akphc$>Q2g*kONY8?"@XQ>Y:OCUO2dh92e>r/k:i4P2nQg
%"U7;t"q<uc5n'p>;(*ZWqtX"JZ]qU"!Oc(%?=3$im:;jc'?4bI`$UTC-sZSEYPVkBf1F"ZL=)=R:Tmtf,<PitAur[mpqh:JZ?^c]
%.RI.YF0r2lpF9GC<"6lqP&5NE.$X_\XQZ\pO_kIbS&a6q\ntbGM.S-8OS3a^0E6K>6pI;Kaogm8.^fq/jsuRd%.Kr!IL5ti%Bi2'
%#i46D,L]q3Lo2a2d-/NNB1U"5\Lr):d[<V?rSZ(HO?Gf%=,m7J[s.uO5"ef08Z%tL=e)D'\D17*G1a"D)Js$nW4_-<N=&J%]dAKj
%']GqskKFHOGq*7+Bb&ls$9VKB\9IYfA^Rg!'j>].eLZ#._E]>8J'1OXXhO`1]b+P/d`$)Z=`Lf7GCe2_7Qgue;hTslm)\`U]`Q4n
%M\dOZjUXb&Va=Dbo.k(SUnmF1mW,=K_M;_Z5rJa_"p'W)#EYkfn$dMT_uW2d#QS[1!4HHo5@!XJm:;ghU5uHNi8DE\&$+?sqJi,Z
%9W(p3@WIa%S4G-4EX=`S0d&BrEgD?E-5kQ.EhGEK8=X!iJu0h`Oi^dla$kp7Y&\uR:gSTWUMNXDg.t:J3PS00KJOJ/+dm1L!0OIi
%'H$K@hsV$>,/m*,F02jgSMJAsql=$aW-Nq'Sr2DnGU"M\@kC%lq?;Na@fP="5nCl$OH&XBY1"4K`Ld2T.je?_6).pF6R'I<e)qZ3
%Ei?eLPVtdcl^lbjrnbrnVe'F<@n6+M@o%Hq]Xml8T4!lZC`>UjHs3gNOn;bppo`Q'C6J5LVNL#"H=G$!QU\DiEM:h3i_h_/+0Wh$
%[f)D5/_VB:>E*)D<.s7p7O&0/l;(VTS[i'bQgJ+M:V%S*(MF(S9:<q+T;aVr:@8lU]fg=1e`1U*9`:S1GJ![d-Viq6W`Gu$jC1;j
%)O$ot<!M*A*[a8+7;:W2iag"ac/W@\8)?CD[:kUr($gh_Ch&5jC#STU7r<7c=+@Jtfm<JeW8e_Ec"uPZ3!nOsD.X`t%]nWf,Pg)1
%[h!ij.cWBI8hL'_e!Nb7?bQ`Uk)4>neN1,S[luGR=I79#b,+d0eY55'U?RXgT%cE.)R\;%7r@4Elc%FdlfH`nNaqu%dT:>-(H(j=
%hIp-d_)S9@qG$juIGQa[rt:_*Q!l7^D/X53[7lRS[rn(sX]9;8ANd0@__heY5<NPcBQ(UIHfHfZS)':j8EJ3h2E5im^XKc/^%Zj$
%EHo6+Xg@^S/?s92`$WOD`Bmo;(rbC`lC[eZ78%CW``dSG1c+r_$'i+KY-QuV\K\9oO!^tOdY#*5QG'i3`o5'6lU`qO?%8?WmbV\a
%[bcBpl8ZRd=^C(cK"[U,o!6l:O8%C8&"iS)gWE\X&\\(OBe6(mKf=6WaOLmefptL;\,hS/]P9heMsEs876BRYWtBJ?qZlfJ`j%UB
%q9.g\I&hDCH?4S_EI>N1Y0<#5105"pD<>"=b$SYX[6I?4o\XPhnp+#uCFE\j6ge45%T6M/UU)pPe\t"GPhq=X-KCu2H<\NN7^"hH
%fP&uQW%>2N+<Ds;9!M5I79'R/0Z6/e2=/:OHg*IuUN:IVV:b#!&C4R^Kk(cQf72]uql><?BaH,7UL"RPA#bmFR98D1b&R@1)SQ.Q
%S6:LibuIaD4q<RfmkQVc9l"($b?Q'7h6mMp9,S?"70j]i[XZY=@=R]&j9:UL[<-X.?0#JO;VN+;$(egOY?HSKk8[!9AI2tc;K;E`
%=#XF6^fQnBJ/Fq3:dS,/#Am`s1qDn/CHs#Q^V.A#UDD[X^Xa&9kip#0j9U$)6.rVdY`6aqBAr!a#aU+b'&abG//:qQQS7'Q`A]/"
%D>L_!;:p%cc`71-AUpL\[at@RLa7'Y2g.CZbf(Y5IUDD?E41Y5":(<fgYg<Cq[m0.$`96BkgibVTK](""UA8G4GYYkqPY-;.iFZ^
%-l\b5eMag5#V64#%htmD1`VFJP#csoW8(XZNqjjAm'YGn.P&71$_0cOO[LlB23@F%-+]\ZD!6o:VFOH-<J3idRhn^B;d?Le]8`/:
%OI;/3]$$M"nJ9#oFUn8HPO;&(P6\N./Et27QWPr?kBLJT^2-kcKG(Nu_LlY`*ln&p`KjW<8bk9FF;L\lni!Z`jTn5Y!.*AYZ<NcL
%L19T/OZ#[IlmQK#eMZ9Em3&$eFFLG<h3F*cQ-Gq-\RTdX,>_OQLYQ!"'e9%VE[H,de'Zhgj)rUR?JA+p<1'J@*J7"/$B_7TmVDf,
%qRPV2F3,NCf%WW::6usCd#J#-TEDh]9a[n9B%:SLqVJct*T8:Xa%nl"buSi!*12s]p0T3\Dj@V2[dsN_@W8E0Pj<,R1G<g18gp]O
%?3(?<.Vre@96#iI9_FpsO.,&g"iaJAI,TLGbD8B4s"gX_`"Iod[^+P:<YrhF`nbI66%3+d1._,k@Pd>90rrCu]Imp76CZ@-o?*p+
%gk\W!CH4+!$ua3f=$^l?h,^J_Qp=`g%N.qDpBu[G;kd.-aft8SLf[YpPPcYL.1ro5"5KYmbWWpX9'W!k?o_HG]]M8PXbBlt?d'fe
%qCajj7F0(dT(c9ri6Ra.fuZi9O'03#NU=8mJ,_m,n\?X]MbsB9*dH]((bK'fr.tjB3h'[JSXr4(4RbD!m2_V]mG6f3_l8T[S(NaX
%Rh#:Np(G2a>T+dBEDD[_\gsu67_XaA_1^GUUDf]^OBfoBF;Wrd<BNUgRM)`E>3L)3RP03AYRPk>g")Y/B*Kj^`/<]_HW`M=FutS,
%%ssJPTKP(s4+X/#dJ(J+8dOncKA2U.4aW.H?Q7dA)?-P+l]d'En^I>8Heni8EKf>lGK[D&>[nTsfBnCZ=h%^;7"dW*4nfg!;oXdd
%KdABU[_d)g^Id;DQHfiSi2*ZWcEVXYS0=j:ZE:W=1b4r28,#G"4XR=cr#<ijBOJ(Q%4$!k=%5bjM;('5P]0V)C*dg6*D6-[J9C(X
%F(f*`eJa4XJ"aV8\EC0lZ_%$c!*_^+n`.uPIl)eA7<=!AJtnU/mKSXdG;F9"a30]UjR=S+YfE"ChhQ#kO")Wl[Hl0XrpoUbpWL)Z
%XPrY/[fa:S`945#[A`)SD$>JRgkP<O*1%+,1+Wa=1+uYD,:i?u$I*l+,Tq()+F!a]DtRAtq>&L2.84e\:t<_a3&G)-AcZ#8[)"Xl
%#hS\#=r_:FI?jNL9(Q.DT>Us-a88m^=JNXuScfilomMU3ESiq1\A)i=*^8k4KYM'!o;]'m4UNDZ(>.$D_]+kr@>=dC`d/i,?!PVV
%SnqTMg.[uDk:A16_!$Wt7"`l9A[&'%7.06S"F'0$-%M5_[C#4eOg1uf9A;>^+[`Kui=LE;;`:CDmQB+/ZF3KC3nS#OZhQ:$b2+4q
%GemSR'epYDj%$3,N[:fQIQNonJ;"_iA[@JWK1l;<DT-;K5[Lh$i*Vp4<$Ut]3edhdH@dB'ksH5;ccf"TL`4]3"[fH*mkYjU%tBEl
%*1^tS=?RW]hc:N(d\N!+d?_^#?0*8-.nk(Q^PCfh"+r+C-3\6Dh(I&$Yc>HTP9X:_&a2)(R$'emEBi.9lQU0?eNF8'X-7]:U?2P2
%b64LZ`cotMgV*(@)!!>Q\/^#H9t]Y'-B<"U-D%mR\iF]`#`llKri8ckHU#K+KMD-pb_0^S'/g8uk"Y>=X(DeV`tZfm4;hm&k?f8J
%VfWL'NJJ_/7hq)V'R."_=;gd:3FaleB^p1bcGn(]bpmtfn=[Z^,-,rum?S<HFj^B^PI6g60n(_HfDDb*rd+7iT.riOm#RjT^f8eT
%o>M,K2uaop],^\5-SV?h<G$J@`Nct\:LB0H8XlKXXglD4k_JfUT_PITf/s*D/5RpKjk5H>:d0%V66SSe>2"<K@S/QfAS5^`Rqn^W
%C>li0CL7PbOV[#I"WK9AqC/^Jr\244_*@TI/=I9qY=8JK&IlpZ/t(,%>,OghZE,`<bf'?l7JH`jr`os3*Ik4JVp3/F]#V=<X%!tH
%^WJ(G(3bAg%_RpHU%BrgHPEs.j*rSqj"^*mrU>oWaJ.:b9^X]X(AFXfrn'7BN=P+Z@4R4,gf+KCE]!Z(]+"-h%.@uj5Es@L%olP%
%2*8lq*'HQ1WbQo4aB+9-)MLVDV:uoNd=7DC<SUDs*Fg"9VqbIl3V":/k0iQZQN`ujk7RXn/B/MWA3FXg<.KLQZ)k<.`qO?Y5W&8+
%4\P#sUh'`34)4:$Y:bAdH5LV;:?bjCi\anlH-9;-a,W^4H`]U*&0HE?2BG>s>sA0G^qVmESTl;gNTa0$*%."J3O**do\aH`-[_0Y
%6I^=dj/?2OERPb`$VHU(>[\ju26HVT`A+8s9JYE[LgKbp-gb*E6]XEXA+H'75&(<jAWK?oC(K?LeTu@%l#q`H,Cud<pMa-C)@9Ae
%A46PUM<ft17*p?E%(l?hN!(1dm28]GclqhP/o#r/GTW=Tl`3BE<,BV1>-EmWH25jQ=u$d5WQs^iD::87pe6/[kN,4;b(Gcm&ZNl<
%<@702/JPOoEBcLdeVmBRe&8h:3[Mo3@=2-N<I%(?`E?@9Y<\d.R:)K3Ym5tLbsEfmphb,3L"QM@8,3UJ])DV@![<UNTp.ea2iTXJ
%"@Rk+ZcpYaPYk?8=r<iuk!6#kZ?)J:8*sKe7usHjA$WVdH;leWgKfkVEQkMtf^?'<o'9/n1&aea<r)m\5Qb)j0>KToEZC%Pe*i/G
%s1DuZ>>!RW.m=H&480jZA:LflWlEFeK9mB81>=JI1Y(N,fWp9Qll).WC%nE4SCbCPf]&#Xhg!aaCH1WW`rTMU=)\<6PKs(@MbW_L
%Z1Bpp,@UO(>O9T>r]*Krr=?i5=9M+nA!ee\)4$cX&+1@"'rHR\S;@l4@Ttl>kH2^eL<3A)ITbkEPOh;H(@BM%*8[V_7u'Ubl:H-e
%;-VhXnJ>DrXd<CU3f`a98)1BpIM(QLTYOlF;t/KGGd0>n(o:HJM>XJ3@2j7I:1]aPR4*CO.(sk!4j6^Zl)?62c?K6O>21YOX1rK@
%!gj1^)h2,19nUgBj1LY9=flYRbW.3kL\n/Flt]I(L67gqm@4;cBW6oZW`.cTk(UC$K1LdF/KikT-?B=!<"OR9!m];iN2Ml`Y4cC(
%5K=@B%P2f7<$nHc&#J?8&Sb.AM?""?;*+VpR:67LBM'"4Si]cW)Ja=DRAfK/!-Q\JMN"\.r'4#E7I0a7<da:gT?a6n5JU&HHG"-G
%BW!X)@*GA<lLHgJmT2<A5YFnk2(RXug=O8OJh4Q7%u.[)Yo;EiR&?4UXLpE/,T.i"rYgQ`Y."JI5r0fs=2L;Kh`sCIld54EnX=7f
%ZXU0u4Uggq0fPVS1k"_:^s)?ADfXVDOC"8POr1=C'tA#?BM\l`lukuu_o=ETX*%+4Kk,,'0m-\<*gZ9/p;5-e`95!NrH1RG;k8B#
%K0ZeZ>o?aS]Z.b1L&uj4bLC(X%WW,2;H4;d^#3#TBke()dOFNB(>r]^#\Q'M%H9"Tj<3fF4GdRkpQa-ld4X[c@_%]*Qp#<Mag='g
%A%TAZ"3&&t;7G(3Rm_Yf>h"Q6Q!mBMXEI`XAUVIOB[JCKAQ_L\(%Fu07lGC!eP%P`IaI=qpQ6GgO0IP80Do&jr:q^"[16,u5`(6+
%&8Sr5(=[4[[Vum8p8YR,&9(6`rg1l^\oC/SA?FT8_jh0i)g<gDZJ@<;^G.aQ^;n)0#H,J,Rf;NSXYY(#ROl*k2@?@:*6^$5ArkDc
%j_i+`Q'e>/r*4dQ,q@gs8#G=6(/lLgfnQ_8:\jkHmUFIFr0P&99g!jcKbZt8\3>MDemniFdEV@9hRcEdel0c_j2u2A%dSt1s#WHp
%$1gZh^)80&jD"UEC2HR1W0ZUC]UE^!PgbWPlMGZ^G8*9s(f>Uc3codrk\R6Bo!NU`Cp0*=]bVT%Y:^tP%FWk1oLc;h"h,M4+C/iR
%CBODooQi&sI65*b+V"X2f*<mB%#*s/6;'%$?%OP*d6jlQ\;%LcZBm70,*$f(KclAP2/3KMBL$CMp]4JJ2U7Dp1sF"u9J=0M',gIe
%IY/<UP?PO&0im^1M)ak_:"n7^..paG@2ZbeD;"[$U9@*.3is<FE;3>7Fn1bgS6]@K\CF$NiGnJE<$P1eg%-gFd_XO5Y=6Z/:FQqJ
%h]d>3A$3aMmmm0I3nL%oVK5J%FRDcMXNksb+J$t3.IY2nn+ri(/PBHE;78oFcj`(8?ZU7A*-()!2.2!3Q?@*PR]9Upp"sLDSKYMr
%R[4'k$XkT%bE0f>mBY;j\^Z^>jhaaJkU)cW(G"%TAWJFi:E!7u/$D"t'(n9O;9(CtF[r+<]BsVgmJ97qUa`Z@g_!YO\g,J<]#5Vg
%PC]1`ToO4)(B)u0q>N$i.aZ4,7WV_"Xc8Q<Lo9e(;[<IG_rE"^/\fg:'7NeR.IWn8CY?MS]>d#P6X3EU->BjQD_BpspK"qCHZ;76
%AouW</udFp3CCN;7n<*I[b1&=VK5IAT>m&0Gk;i8&d)nlm;`%t5CKFW1=Yc?fb9B%.6@0MjL[leGkI0TaYKd#_%'stDCpfA/.li-
%f(TPpNQ7?EO*oPmlJ]?&M2+9U*GPsD>jo'Q>OUuU3f`]UmNgn4?d,)%*L8*R5LrSBott4r^RI8EI+Fo..LMu!*=QMUq,X8^h\<Cq
%R:8h:U$eIkMA/#)>G%T105H97Gs5upU-3g>TJtFmcC+>R%CR:'XG_@GpL:dOp[W^]m2.LG.[U:GU>fs&^:m`bRC+$T;,1/^r80?]
%j(J=IWW!D[-EI;L,M0@mE0ssNX%ZP&$VLo+4/s'Te28a'e(b[6Nlk5J`'toaB3CH;?AFe7$r,LTafB$\X1F!.L8uo8f,dZ"W[$$Y
%6JI]4]#%ueYMEB*#gZ)U_qPe%5eUo[8I$1\C;pa(UP"P`16k!)PROf5.,P(-K?\;TFY[O/F:n=7i9H\1Dj8fW=GQZI@)#?YDQPK.
%1I7)PUbl%+nLL0ESaKI$\Y6&1!+>%7@\T4(mQ[[[oj&LsiEuc6D;-HU)`b<8-/c;2BG!1)%Foi8LNL1c-WW7]pq03BS(+a?[:NZE
%.jFAJRF<OLAeK*O*"tC9g!kPQJG=(u`T_qi.p$XnW@dYCEldWhp[[eI7W_KEDF?S`iM<;0+iZuF^oSt,DR\&Geggm.B(MEj$JtDD
%E<.JC:.WMO67%+I;Q)*?LpeF?nY,3.:*<RAU_U9=mdlFD:0Bok!86.;nnE6[a1$+Q1?ftV73`Olb`o^2<M)u%:/0c%K=1>g$W<O;
%YSOK1,ucr8_OOd84HI'mOD:i0'6EO[9^14a/_kB8<G;ESdR[:sYF@A=EaNR:h<1"8"<P4'Ar4`UU2p44EnAom^Gi#?F"6-mSsJO_
%Q:%OQ0!'@+5Ye?R+e*Zr:#))lXY.\/KhI1tHd[MkN.7WWXUn_'Z6bFObh?o*6.uU.8o+'1;0d`d+c;0Gh3[2=0.V6\a=u+7[Df=k
%q0'2>(!U8C(M$d3R9#Y<lr-V/[uM+]K*A\]8m@%%An)Oi-/TsT-"]MPOJNi<.Yo5&#=S?MX5^(C_H(B>KOt2d`1N"IoY_3_ABS&8
%eI(YkYAtFtAZ55ID>JB:Y3/i/n,IiT:tPE@&rY9KKA=e%Io\hg!BU?a&]GY8Lmlf%hIO.%`n#996.#,U$Ws"n..nM@N1,>b<\@L6
%SbujC0-IqbSQg*T/qL7p9+%4HNM#YSpPG]n\HB]&I"$L?gUGYfmZ*Udd%1cr$GQ@rT5'h*Z(0I[7O\4IpM/X/,lYXPR-"5YkTQrZ
%`n=7\+LWZ[I2;R754+DX?!K+1crX7W"e*EE.H)8KE!EZ[,;u(+A\41:+>=;)\q_&B0K2S31HS6g<$ENa4iC[O\(-X2gR5D8-8,Ne
%YO%W0'rO=D-%EX-jc;]'=#6k0L\kalkk"1XT:/-sXLIg8*ht!1q:e)uV7VGOfhgi%[lh.HS`cS9/AnGAj.eWC58eh36s,JDCuT;A
%rR%PAENb9NQ4@B=BoEO/ZZO\0X'Zs!Pf9W4BlFD.ks>oq3WHV7=1.Z-?n^0N.tSr)m[\AbT?<F$;=IoWZLmI2^7FXi<u4=*,r1S^
%f.Gf1jFjA]7.bC>F'6)K(ol'ZF<K@5lWlm#H2t<K(0FStkN!f$<]X"8>@n?!W.9_BeNhgWOC,*)Z^L0tiV<HaEIQ!n`ki!A\X/PU
%Kc62B>CEP?m&%Mpqn3U??t/fT>@DEJqH#h#MC:lFRR]N;!"RhsD!:.^G5;02cU9I!K^:fp'`i7JDD*E?m<YiS2#s6l?_kY9k681Z
%k7sfGMs^ZfOYLp-Ncu6]>S2(X4dk#ncE"-jq0'&:`!>Y\K5OD2<93E"L]&T5eT]9u`2qsiN@>QrBDcA4B"sG&dEcU()"J'Up2@9)
%(;V!8maGi3<[8_:oO37)lf";-"Sa(Q3cYcsI773+=63\Ng"'q47KVGQ/A*!#3ONkg@M_Q&74VKbG8V(amI3/0M]h[\CbPPjK(G/E
%Lc]3(Uf()_Z9[JtpPOZ/,d54*<&eXT?g@=OFK`-]=QOLEn*JXXrR0;GWpPESEl-,N@#1b3d#bkpij]DKA06#,LT>>A,<BKVo:=XV
%k^CnMO]AC?(6<,\\rUh-(qEA4fk3J-V@WZ+o1k&fW=^BKQ?E*Q`_PFjrSEX=*P5m,<5V>DL#BH/)^1/BKX_CE^*]@4]/]dPq:`K]
%[34`AKc3+qip.b3'nPgAPpE"ae#'cJZ<jne!AW"=7;tQ%imWm-*j?3KI%/^rIRh\_X$+1fm86N49!el/MJ51`6='Dc:Gn]u0$\!4
%4H5JETBh/9(B/pYJ'g!I6qYMDF,4FlhjJpPH&Ca;Nlf1@%Eb8#Ro"-8Tuob/*]:^5PuRe":g0Z4>p$lmV/a#.?0QOtcd$?a2h/S$
%S;SPl:p$*=:9-0bXDTb'>EmZ<Y0PEW:mp\0q)'46`-Xa5p'!N.&l2\FMuoU&XHLE"1M2!=_Vm2:Uc4gaOaq7Vaog^Vg\Y<?Q4P3C
%+s"`@Sp%o[g>CZ,rcTPP_&2,P'X>7C8Y9fWR:VnU9jt=SX?)2:"YU>p[hf;5%3EHY)5jt127U2ARNiY42&ONYCRn*VIm\p_R;JX&
%"q$+p1TMf^G,S-k-WEXTZSWn/BZ@<Wn'uZ[9rW&Ls*eTKfB/:pOsX-E;<D\fBWKIa'+\K"0dI<%BU2se+imDi:+2P"`KKg!-6[kS
%;^4n?-AA_/;>u=)[DmhtDdZ;28:AS=>QD2,FRRDs#o-,(2$:]AZPQB;lb1$'maY3R'JjRc0c?<2I,?<@?"PHsi4!%hUH-F,0@(fo
%S<SI3`U,4i)9dS`k3$tKg[AIpS.`/m<m]NYI](&0oWsZ"EpY.%9PUgm]mVc6'5(C7S2k)"G,8@Z-tq(9.o;dQ9;p^-kj!=KZt_S#
%/h]hd))eMk5J\I+_MH@>/M9[r<-e#T_/-YsWa._b`-!4aN=q]dKS,SR9N/>S,XgUbC;:.Aq%KO/nrM*UQ<Z"J:h5W<Oq?XXf/n@A
%f:dNb`^uM-;eu2+H-ApRouZ?\)97RB9,eSA;9k45-SJo`\JEa-Q,9!dDFJ_>_D?>91n!t9=^bK>q&O47k1jZj-U#8r$)UR7:6Qgb
%mS;'mR@,*uf[hnqcd<_LR40mN?+WL3s8CfAIP@h^*FQj.HGSHsF3V)q)#oot/\=FeA!@![K8RT_R`1Ni]QF[#:%;dAgaYC`N8,cq
%6H`ct&\0Ab.QIp2E*#C2,?PNIduE?FUPc+p5#WT%@HktYrOnch%uR1)%TJguO4gHaIa`de:4:_NcBLo>EJqAi`^-mPargA;&#MZS
%?-bKmeOWo+@Mj.5JeZ`nWY1e<B6q__:),Q\c6X6X%m$b^)PdeO;\=O[9Y4,B74_)3\/QRu]/8dL]eNgIWFU7N_(G)i(1+4_5O"%d
%`'ogq)gk)6_nadWW*2Y"3Dc3F]EfWQ6Bu9c[*CqmfX`k+pOJ$%p^_lngf`]1?od]2feqtD>=_579THhgIA+urZ[F%n@-%j>0S,;<
%XY,%U-ek`H5#+eQkVNOVGnn$j]8f(#Yi.4>OI8bfHQ^YM?(r-]nT>]2VNtW=8nEm)\sh1tQHs:VbJ"9safRXT0mITdr4c-#<MP@/
%@o]6Uo6sj`7W`WN`F)$U&a<)N:K;I9MAEi//EAMc$D@<KI3=&j)Hc/SD_YdS!E;Kk97ZCT;5-]--%d^Ba;rpOR_Z,eUm#8aWm^&l
%4".XNR?uGS!`D[UkZ<(Y45VRV,Sao/O+Z1lrP6`;^XQ.V"P6^tiDqkFT[1RcfJYA5hh!\;>>9use`Lni.Z[NAOh=k-_&<acFUfdd
%bUZmeB5*dMF[nU1mpg<bn]A/rZk&Fu_2BFkXRLW9pNpEH_%^\ZU8Z'#>U^Lj3)\M[;C`=l].qCLDSf45,RcFc7PN!'QMOKiFUiF<
%X;].$TO.%C3dA%P1\GYR@'(7YE;m*h#hb$7qrq-57OX)+`dq,1q#q.6>jq=PCo9aUYK'ab'M%I"RU9.2mQW_F^2#$-kY*Io&dmnj
%SB`CA[CXpTlpE+=NVaM)PB>NC(<d6BZ))Sd6iFs]o*ZsIJqM5(r+\#+k[bK;._G?q%!2WDR22bul<`.;"F_8+Hi*Pa6b7HjC5M4C
%0i92Lq`6h3QiPp%m&PFPaDrsGCP=k#*&8G-P*>t#X<]BT:Y1e!Y-fQF6VV-l)3q+S#QkV]5ZPu0'"Ve$mS2[Sat>#i8]gPJ$B[ba
%lh9^f[u;$3OQT.FgVYXmj!Qp9RB`7g&piqa7PO)EW?rI`@._&LdTXP51Q_"B;ie>?l2_@S/o4:&Qk=CSg7kJj"uMMAe1Gu+_pLmk
%nu%Boq^=`F`gd+A+Th57l*JN8bUG:=jkoNdkaI]KPufWZ!jZ>7R/HfdK0Y^e=Ig7*<s:W"Q%[&;:pq6P'V\'LMu]D[ZH[JjFEYbl
%$B0t3+l\;f,32P/^'m"Fa\OC=D&FTd+a[DYC7fEWqpZ$ce1aoYDuN$YldD,J1=u#;AR;Rb910eEJNU1Z?WnV*<a`mr2hk'=Yn0p5
%,nM,kl]"YH-]:gI`FbQ2QdIbYYoC>/Ao;T\eYRg`p`Z/192_n:8QqHMVlu?/$COXQ/q*coH\;12bY%,Hd&`QQK\=N\@OBu6NX%q3
%69!gcP`eLHU,)3[YgPO3B;*g`KNlFcl:j']Qs1$9+$^EFjAr*m+.mFuOUqJlY$[&?\rf-cI'LSuP9$[(5GQIRA\rlB]XmrBs2h85
%I02JAK<Ng&6%8*^)%q1gne/XeaSsjRV.=p_d@L];dA0?r>?tSO-`:Q<(5P@Z.8aUn;KL*$=\S^YY[RmP"J5Qqn[^tYd1fM`0a][&
%/rCa^DFS^_d?Kl$q;AIsrKTRE@^>$R9DDuA=djHXXDk=2_o%=`eLPnbCLu$?lG!e\"GRm1fR\%W=jZX2c3aQDps(loYV6LsBmcc+
%\$MV,?YmqKfsh2,Kf-X9Fe<L%3p@&r&D*%b4mqUW=$VCGE".kql0!Ku^d^lY\K>GKRLR;MRkg+d?NkAAQQ7qErYj#4`uCHS"g;F0
%BlbUk*^phF@Upsh,eb(-0&Q[,hN31M\+\<h*U5eLoWSiQLCgR)dEgR/hjAgVY[IXOr93uWAk9t#?b3>];"iUK%f8BajL=SBGrP`Y
%F+;U*msKm<YjA^GenuR5^!5b,,]kj^Tq._-L\"&\Ea9It$ddm/,$u&i@M"i1'mLT_o8Ou3^t6\SmlZPI?/5eh%6=9YD`VX!/ag&9
%=j1_dU%'VPe!GR!2kl5(\VQt-=i^fJAZ/Kq!Fmgg!j!faU!1&RJOGJKjF2qN'oKg.R%4dIenCJ;L"A:aSO5RH7<ei&BZqpE8iFq\
%UbmjHI_N4E@I@2c8bYQ9J#1K#Z[F;=h/`3ga*u5ZEUDLE>?FWPj@!+Q"C`=7npqHi$%B=Ebk.A>BeKgT!TNjf1.[p;e36A75N:0-
%heQ?E[cWB*ZS^.5'f$QsOiMZ4-PVT]W*Ea9TFSFR>jNL`S45<AA/Xn-n+T:nO`[C2-,L.OW99htmed/$N-HN*#XK&ubml%qPhc4P
%70ShS9-'*t74qSc,,8'(8,XRPKE8^L5MO*`$N6=t$tQ/&gZMd6"kXPi!jPkTWV^%0kk4=ZY?GMgH+MC5kX25u[BKH1S()'aq75G4
%dWCB-cDm`B@bT7A+_4Y!,MCVb#^Jq7B!OC4EV?e,@E:ml2CG=@q5@SWp?3dAhPdZS_kY6<p"6%J3,b_0fXbn4r-Hk4N*i5)KJo#,
%P7<F#SYg`a#JR\6bb>f-lj3.]BDLBoTCkUf.s5UbAOoLEgbaVZe8d1u&/b27KsKprib[AHWj'+:72cK)Ztn&!s)Q+"T,Jl%4$9L&
%2NJknMpoB1[<U6ibq!3ea73HEdS2"QWg1$+Od:G97#'CoGE$_E<R1YS]F7;Uj$.E";bR&"K2L+:Zosr98R(!&]P;=ijrfu_,]D'/
%Gal1-:7dHIqQ>rbIW_P?]PkIu0AF0#+*BZ\?Wg%*9B>2eSOO\,l.k!&,btC9G'`qdB<lP,F5KB1s5TtRO"@^f22XpPK"8bZ0!$XB
%3K]dg0>k*Jir2fe(@?+D_ebj"Sd$9:gr3S_ZGjB>4%3o8AaAIRW7s'+P-*#F[Yd\eAZM)QQS8f$Ti%ofgJmjPSqs^$`TPWJGE&s_
%:oD^*QDq1DGAjKP';oi_XG0o=<khfr;r';`qr4Ao2Rr%12cF!8[P$=J4<J]-`kTu%l[J`7d:F0me,?`*9=A$&;m/S`+3-:CKdV]`
%''.7B`Bq7ND5"Yf2Y-jQ#2@cpC"K$6n\3Q+NOF?2,dJ3Q3o%Y5G42gko/GirDMIln*:MPjfbYFRE&^FKm)(6!TC`[p`db%Sm_A&o
%/+&atJ5&cQ1#hD3\AJ_t[,OZ(lA7ucFtYl'Z'>Yn:3:;t:s+V=0LmJH9hoeHA[.I5*L;$!=)^1I4K0%*P7nDS-,3/LZi``l&&I<p
%Db#&o;SW11jA@f4=R7IU=;?uhas<6EMlece^]NQRHD6ah0%FMtj)0Q^@l?n2K.PJi2*Ff%V"<0QQ*U/?-*k?'/sF`p4)A><mK\!3
%&l,OkfIsf$ar5YENGT^h>3"O>DF\kQmKG:QqflN9/\Zr_%L\+t<A,B6F&:mclsR<"[Q0/s%\1.h.I$q,lAo97WQal,--rZg4ZG2R
%0&I?\+Di'n(>9bIQ&qK,&4h3eM(Dghih+,PdPXhC\g4I_"1>_DLk.!g"bUS`*faI#5`?LI`u<*`K;k-60BZM?%Ua_Z9Q0#P_TQPj
%bl7D%jTW4=*)Il=h)-ID7^4toD_m=Yi'db0G;aR$.ZS5^KUUAKUN)--W>d'Ul23fA0_ZI*I+ZSfnWf`mVJgp<'1o^%'9DGjH?9(k
%c<r#FB4T2W>Z\!)!5hFJbtIGDW@=<Y1RqV1X`NK%NP=MEM1O/:2o26Ra1P)Ska6XES!<TeP:nu[nk!"2U1?n+:;Z8;*-aQ\$\jWe
%U+@]4,X]-/VSVWcZkSZ<W5E:<7E'DphhKD72LHC&?)>(sh.O:RN4PGo4.7$lT^`D*g$dfL.<fJscXcbDJ#"m5IDKErOIUFuA$W*Y
%nDo]:CRkMW6<Fq<=83(S;UR?J()$75@'"si$t.B=JDrcJ0r`%oMWeM#-?HcX!)7aH<H-Plc=`OT\ea!=LF-elQWJYVi'k7*URbLP
%F62cJ7jVFgrJPG*!`cG0n7:cgb[UW+TeoSXqfsGP>BF`.Eb6G6[]CR^[`_]>XGX;$lPKUjIuI0Dm=h1WZL@c$-_e=8&O[5N=QEpO
%k=RCX!J;4.?/n6`/W)F'0A'1+D)0M-=Csi[,co6afk06kiDoHWSC>d_oKe1QXiC3mmM:T[C35s\ap5,i*JR:[<D&Wf*T'$kn@Wb1
%%ChFHK(c/1QE?U,kHNMMK*R@+4"D,A?/.SB[WIR7J=Veua`9(0FuHDG$5hNbM5_Ren>^$>\J8H;[\WI*dEkMgH_QAdj.G[;'SO:,
%n.[nME?fp.YtDV"H`;<^^@qG/R)L?h]*BWa,%`.2SO)<K)6PL&7]WJsE1Q[#27SCSjL10`cXb.m)&_Q,^=Ef-Lh/e_XRJfiGISOM
%odGX!a+VEjC$VU`Z0Ze3Kk=mX,EH7m.k^0E5tjgB"5pOoJIgR/[:R;qXBJ@?ff>=)(8K2p@io1Pf1,F$7XmHs!o7Br5%F()+-,11
%S`Q(Q]^XXpR6Bio/b05'9X=g<7ZS%dTT7$noPUE#)IXqWd?o>O7HP:i@5KtX=%s0u*c[+`e3[MVEaH6eFBX7__[s#_n@n>Lm,ll*
%.iZqI?\u!iCD>#7)'Ce5qU4$Ne2!C&].*'e]4CSL;N@#nHCftt/cGVur1u\BPHEa@PtkG1Mlb2nd.lXu9t*$]*q7[#VW"GmPH2.%
%f?o#Scbs`Ng"Gdj]9X2.hR.'NBD3[]qBX'R*[oX+^V$RTSHsJnHM@*2_[*I.@:E*M>Vl/bW@qc+CZ*K'Q:!2I60QVucu[QSR?`C2
%dq<_HOB`;V%s#sFr`7?UVoPueVS:8ceJ&YcEG1#L0^2>VqW39C/og[ONKsa=A5%`EJWugmrKC7i462C%0j9k)H;lWp\Qt84E=^nX
%gTOf@iKJ.Lp]V%B?a7sTFqC>a$'CB*n4YP-phsC#aX+;TIggBA[*W6Z\`G;?:j^Z'_`3lg(&1f;`tg%$MlK*S;M,BMONrs;\tk2V
%gB%hk`*o"[$__UI)4KG"b(:dP%)LlqUu9e6Ts'/R^X".;H;ZT'2RK?ZNa57=($=H<@+p<*ac3I1apm>baGl3+[>)gjj#DuL<-'*I
%&%KFGLsbPC\uPqaqC#=_[2499U]/XOEPfS>nBErBKmW:AZSKE"(o8r"QO6(nM2@^,o!7_GR,*D<Ad^6/&/9SZV)9r3VeL<]\dP9Z
%Mo7D4"ekKFWQ>6TWAeE"MlWGVo7;?Hl80:*B8_Z)%.DBj>o*:eLlB)^h&q>-lRn,DbNkE_lOK2rU>UDW:*];`]'oV0-aG\A8'gOI
%SLkbL-hdo00ZG_UXZZVBWg?>Z5Qb$7o1"4o8)o$8KpbEc,(H3UmM#p4`M*sm)r60>Ahc;sE'\8L-#_d8KF^lK\2^?TofeH*Eh"eF
%^`Xj;cDV>l>@.j3'e]J8'kUl<MepSROB?Wf(_3#1>[HuFPjcO$G%.-u`IhgVA);@gIS<j(D=qlWd:CI*2$OiAaIVJW.*tY!fK/u\
%=G+03[2"aK]+7lBJCG-%c+.b9iJlirc=45q4=>`]8r`7H3U^a$gnP>]r&^[$5f.3!DbLfZ%O3^NV`N?('gqT!5s?7bp`8Q[+6We_
%$'0Gu7JLT&H]_GNc6q&.8h[9:+M3U!#@V[*Ec]U?Qecq1W3YorEUhWlU>Ii=5UUk'=tl*dfk<LBW0>5Z>=.LeU.lD.AKnFiXkXER
%Z5]"mB&[4<e3@209Zp;'UG8MNT84Z3jsodkpX!5sIKP]R@<Q8""&]:"=%DXnL[*jn2@sIBO)iDs^$ZQemHp6)V0GD:%qS?1nA]4o
%6-X5=mG0HP,LE(J4,h^l*m-^:-$en1Wgl(]QQE"[B".nb%SO3"k=S9rAL&m?SE)o:14n;P^1pL+,.T@:H0a49>n'Rg-X#_C6^W6M
%4rq3>W9Kk+R%m0M8JkYOg8heA^I-LP6I_WVWA?sp+me!8O.4-c<m$'2k=R$kL,R]DOAoSLrMnkHY!6SWBQkM3p-o]Fo&hu'[;BoJ
%]O=a9$VraFFhP.Fj`Y<e>O4$1U=7MG+*Sq`^<kcB^G?@@E:aB#$Qm+!1\=?`??Q*<'ogK+_>6$+Kr9:i'4n?_)l_NVi-I>5ZWd9C
%eCs%=Hdu(IA0_9qe;E:TD]-*!e[g?^.1abs\BK>2[EFL[p-&uVg<,pZ,i]0EiVDqX-n(bY%0\U/"'#YYWme]/m*:XlMS7mYW:0]m
%B4<*J*j'$)5&M9k_/b:r(kA-GT^=aap<sdH3C_*gGZh((/j=%%U-3g)`>`ls%)2M3(rb8&W%B&4nJB@V!p_Mc8)93qQRFNX[7[Q'
%ijK>`6,pPtM#Z!-m=2WDC]@\dPe4Fm!(=fH^5[.C)JJ_WeOBt[JsTMrDqm.GrFNbhH,Xm-LR'0:@l;7a^?qMF*M9aKm#We?s/Y7+
%Pn1m+F#1=5+h[$j(b[)<@^OPN<On[Jps@<s_#HoAo^H.9:+CAcg[Gpnj3[hus5f9*$H#kIJGjK:BSA'E"j<FY)!98I+cfY3N3$el
%IG/&Z][U=PC=fcV_"WgOo#C@$Xpd#]*jt)_He%dula$3SI+7O#0>#$XS+J2KStfMO\-h,j$:CJlU<cEi#Zf%-.]9+CdM57WS"C.B
%k>77p4K'Id`+qN,Bs7"%Z\>keeO71*PZ?[pND)\^\;q.>3\sebq*[SeXOh2p0Qe&2h3At1Np+*m2InqW-$OO1HAT9h-OR<']/9C2
%B-D>1AP3?[q6r@3b,_9s1t-u0=rH]K&GGl]]^*OkD(7[sHEF%^&We!\e483j_%JM-(N0q%DP,&T^W:ufo49Zqc3eR-oa_F*i(U&$
%*'C0CN:K7MI-#dKb*;Ao!^AR,A3>2h9Dr:Y>%-EYAGP+lR<::o#dX-fl9>d(PfD]sE.`d895*,*[;%gJGr%(1NS+t%"Tgo)Z%i06
%1&]Wr4G$D$D[C:iG,H_,"V8Fr-<EIYTOds_]J$*I3c1Q0"`p?ZHiXIn*QF-sTVMb;K`[IE,o._kg_9c->DLt6=D'm\HJAimgZ,;K
%0>6^N)=Y2XYl(;s26Sp'EcR'YM5@=DSg#c/7UW9+Z'JK@"W.hAV\/S;.GkSO?a\liN'T;?Bi_;rhR;L2ju;G<K_13[p,`"Y>p40K
%/KD_eZ6FXKKY).-8eI*rA]CJrj8NbO?SgHZY\nK#K3EkC*Z_Q?!L.XRMhMRpC\7\<`OP$.aXH0ls+WBc`M"69C>r%o('puHg$PWF
%rHB/4bP`$H>'?BmDo,&H@Hm0\oB9?dW2<j+[#dpf7ZB4g2)IUMq&J4_5b]/+_`cGie!DmDdEi2+D6u"Q#Ic"J+COE^jIKd)quR'o
%.C'4IN"0H]#WDg4nnE>M^"X6Q++h<\Uk(2:#6giD,0t=%r5t>'@7]M$</kFTc9i=jb$YWuTX/lG)&SIO/jR"$GFb!<KpMQ6XnB$P
%L\>!(rqXSq@JYmtE+Pfl=C"Eu3VY[G@s1I3Y.'T;<a3-eK^_p2:;$hle9Z--1jOI':UX4HPZP7")Ujjm;AU0HkY/=;B<K\ab1:l5
%,J>J+V,s,u<pbUc`Bd-D?N4_mf6uiHITrIGjtmPMO(aR7d1#g]&B7>m[WE8aU\0]3Ra"k+263u#co$@HM[Pi\<b/?JRNd0EkBuB>
%T?<tuquAr=l"2HEfdcg=3tt.)QC0=P5Uo.$q!%TkqLW)*=YS6k<h4=A-WED[/:!"<jPY$+<9C1-kc#'RRmkM0$fTlkg`U%('irX%
%QWRAkLDF(3AYGlhFXOa@i8nn]%f=$%6!FNp%eMITGm=,k8md0`9jNWS%uVP0M]M$[=9#6#"6)MQUY,n,*7\F'4fl%dm:mW[qo-"@
%R=/pXS2;Sa.[Cp`YM?Vr/RHcTW^ejqh4FqE)+oBh<LD.5`3Xfak)nqiYf#fgJ-r2Ab7\RA8G&elI_d7CCQiPKjH2\O90JGH3Bakt
%-42=W8^Id"9os^oniZhn8M7V#qd8YW/?_eM3FtZUO6*K5<=RQaRDU1OkLuF1"+Jt`n_Zg+k.45Deom,.[:kW6EAc%0D$'3(:p?nq
%%^!RBH(j?U7CtMAF)D5-IJp>I?FUm.03_[_2PkD$\s$u$:<O\r:.6=ALTdRnoD!S%pYP6#/9QBnTA!u6\7/Ve#]AOu#Uhit3u>1p
%Aa*'.Pgr#HQ>k%7U7R0X?I)b+g>+gcYn=r"LBmK9o<CAoiI1$gGhMN(m7Fe)q\p1m27\EU66pRcgcq#DkBBDVKS9IVanUQ^d='e,
%lCgqCd*B.RU>b']HH`kpQJU[.jf2=nBK5D;HHp9QmWdW(lu]MaK/@mtkg&4&LR7"3],.q(h%&oBZV[0N2[d%_p21T@2SUj9V\]+n
%[&BotLN:boAJOFuL?WSdAn\+h8ks;%gb_`D<On+G/SWUqB'W!fR+m:9;:ZN-T)?^RK!f/GYp;PH13l3G;uOPAYQHo2IG'3kAb_Ba
%=)/rP?%rAus*elW5>[F[?dbI9'khri`/^;88Z#_tN>a9`45q=PGGp7;X/O"#c'Qk$j#)DD%.[7lDjiYE^<"J5bGF%Mpep&(JAOdG
%3;g7Q.9(Q"_ma\-C'Ger&En%1S%eVks%21Jmom^;(OC)TWa7c"<0)-gR>F5\Zs)80$G57qoP?)oTZq]PCJr7'Cfd.0bUDS,7Z6CB
%s0Tt6+A<_AD[]_a$Uni>#cEn:k%^edO+ELrdpj4@6DoM"HN3_dK=\#(2E^13EAI2Zp#jXJ)^[)ZbS`j!15+4/:;&b<63\IsqG9[4
%TNbEmFEnHYR44d>$d:.K:"rNNTR*46W=^Q+`gQmJ`ThHUn\rpJW/;NcehVm^D+\+$nEjJ9Q5s"-._aL(YShTFMa!UCS!q<QR,TSJ
%e9p3[)a.Z_]1/D3:?RQ>VB5!""M-@ZL($qZ7bpFaKi#S6[#J"nq,FI?7V<6`>oHb59[XHU-i?9_8T\L-\aofqpj:OX]Sa`@p%@52
%NTnT59)+r/FV?!pifMd3?Xm)&\9*b`!R]!Gj<*G4G';fFZ#BO?_:F(g&gA4o&@S6/[)GG<MCNY6+?DTu]uWAhlSRV3\$sK@V0"+*
%b-e"@V(d>*^UJ:_Bqg39j=qaO/UdSe51Q0Ddl7s%>WB4HaQ_&S';OHk&Gm.md8UR1M?'Cp$E?[rF%umsWQ9r6UY5Q!J-cS;3MhW'
%hWbkfW0c$Vb&YJArkis&mW\m6b[,%ZqGleb2ErPIjkoNdkh6MH@SuF5=;]_/bt+q$BK2_!;\&`UWnMc_0r31IKE?4e/.!uV_op+X
%TrJ4j?UT?Rj2X(+;<u^'P8%!\l(laU42T-M!qg!:GA@4*FHZl%G3WHT'e\>AKmqoSpT$NRLG0q%.3>8-HgMJ2ebjGT3=u9oE0b@e
%.U,<^f^<1i_3"ul^,SugSl@,UgQbKHpU!0QF`GCY1OQiKM'Q-13#RA!c8KZY`61H,5k_?e>1"TFIBoRn5nJ[7,<9!KE6KQA$,I%n
%V+NDb"QP=mp6qndB%[GnN_nhOT5Kkq8QBAC=Xd[d6dFf]hTg7VhLNUQUFenFg-I?>d\ej>2iJCh8H4o%^f!Mu8p.cT>W*FpL\C),
%4P()F%P5I(&$5.>p;`^6Y#onqnAY=2Fj!+=e_Fcc3Bt+^-Zh?e-cTt$ENE5Kf%gls'6D&o@.qo*MKsE`6-'qj4pVVqC6*9\Hdjoc
%C/-jq=S]^LiGKV_/3HoZ@F`WpaB2,JcjYuE@=b^n(kj5Zd<uU.[X)&WpLZq8#$2X])<NdqZE_rt@`jIBL\T['nI3%G!TVC+PH$%U
%VInYJ9dphJd+RG%!.F\;HR&C'SEc_j^>+>1;8p,B!kah':S!;6b`SpFOCU!T@ZHQ(`n/2L#o\O70OZeXYVk04@BuOll2!umC"8.b
%&$r98#Qn&2EB-WA;bHn.kK=\XiP8M,mp3)NOaj(F\!&s!#1/RrBTg2:+#L#NIb9-j?@CEj:<]c+U3Z\DRP7Fm/ITj,UL=.<7@Qgc
%FiOo3Odcn>ec`OGZ%>dKj'EPR>b_i>lg)CgL!Z/Yd*=R1Qf*Xcc0h&\(dm)^@!`.B@PG&n&@t>Q49JroQ4jo]r*VO#7OR[7BXfNe
%!3F-$lB"q^bFe3LaYapSmHEJ6mq-TIkjRn<ItiKUB&U"Mq'ZWcoLYZihk48F0^ltoePPnaD*p0M%#RUj:+X=mG2gPT+Lk/=,Ih_q
%=C:G9#ijK1hHC_F!7A;rPf.95%>kJMoD%ZM/WuBMP%T^P/pL)IGG2:_7,S"BhN4l\Xi2*D`cD:a$N0[iHkh0piMVa8ZUHFAbETIP
%\(NTRChhc^!OrKD+$p!IF&7<6Y:=T:=cb^r0gYC[Z!)JAAVBk_&Q$'PnO8MgJ5:a;##YOeT.]m5G-4@.!FiM$D_CWY_5]$CoVn^O
%gVo"kb">JeJ7e^)?/0<LqHH'Jl)?tq5k'QW\g`A>>Ldt!1\X!*.6h=OCl0^"r+VKtF2JVVBVf6`YJbkdK,KeBMN-:,Q4iZ2;6@qe
%H#^#nhu3N1J1_&+1iBBFWCBYp(K+MC7^'`QJbd5aq-,AWRl\6;W=g>)ZB?G8W#lHtNiGuKYHn@S)lJ>7Wtgk$j;3h*Pk8:.m^c\O
%]!KNP<8bg:OHK:YB&?t\oBg(\LhnN/=8fLt*Yk9XnmS/,8ss[h#YqKqM:1,jSe<ick*k1(E*?loC@o=,mH!4U^nKZ!3h1>#>5P-.
%a3Ki'82tW^X`S4LLS`"J@&5Gb:hso=.\UPIf[2';^aQ4kP0m?<s8CfAY0AHl0h9^^mrUQlqjW@mXJ)?8AICF=XG`KM?<nqE3))@4
%bMS3"+>N_[m<gHk>?<Hm@UmkZ.Zd$KBiU9ePVl92Hit^nmbKq?Sd%O9)"\Kqg#`ZJ^7F]?E`aST*'![T.-u<JdluI71(-*@$X[$*
%Js7K=X5`[cZOrEBb@"1LlfN(`6lq1#VCId$Rq`EgAh+O4PC?g?h=$uK/Fm4geFi(V9/XQJcg@_ZYL`'!\rB,EWLT$/MBT?rFQq%p
%Y3o<-j;DI73"bGKea:sQn8)`3(?gt^&M1%o6+@bdpbE,3-.%d+XU!O0#bkj8"eZoR*\W'6)M/(/,ANji%7;<J1]o\G]qbdR92r3Q
%ZOO,O,B+I2HTTiM_EtB]0UXicUJd<m^?:\S,Vt;kHW5-ZpuW]f\i;"C%Tr<H/dO@p<<?L^@.l99L'@rSQFNpZ=75)H#8X\G:'7u(
%hRq6r7odlIqQSrm$/Da9`$f/$aMBe`ChUD:\IqG+$[6P,cOV@#]E:;0q_<t,e@4Fm[tD"%Q)V2kQgN4'it/7XVPNQ./Va$M0Am++
%eI&B_UVhmf%P<b\ZM8LIk_To=(J)H<_BV!&Z-U`T(5/s/-J)ui`]5@m^X2)s\Lt.l;+<JGZhBL5gXQi3:JRnXS&ZCW>&^'iQ'BKn
%:p`#c*#qQ31R''mdH$Rc=g8:dG:)W?)2ekl3NB,*IMm$!eN--%*\det/##gl_pA:<RoV7qA^(Ps#KC9<2"6'+CDN)qG#6f!-ooKV
%gS0d=$qd95N7T_UL896ek':E)N<AitSH3ShG&)=_VN._oEZK,KO;uC93I8eq\\T31*[#e^LfqphUTD-f\%RT-B@3n2;oe0]/=_-r
%^UI/?l0h^lb=2NkK6F1$TC^/_-o6\nPA*(Icp#@^-BiK-g[V+">>_Y".qIf_Jc\*ELJjMg;+4531j'-,4TH([7WhA&QmA_F;XPFo
%ipu``UkQ5]1a%lmnK.1A#GNHH@+e8Oj.J#"-3`aDh'<SW1<61-HNdfk?/-s+J&Tm'[7.Oal5Ub:#*j`>Ns5U:39C>0NTUuZIUVJ:
%+kTkb5[.\i`;h+3JsbE5BqjLu[E7A6T]6M+<9ttdo<3<5G.LW->+NkX'HW;q86u,(cSiDb7a=EL4h@LA#Tj<D10?fIDcL]+/FO8P
%S)pea_l'nK3GYKmlOF_3DT8TqaX,[_J*>#t]hFR"3I?^ZVqJauAf)P@%SGX%R;-9'gV*U`]eTInEj^8Q;NNj],8j&Z;n!H56k+/%
%&b@%+l&\/TR[OI08uim((8K!Wa1kS"G#[':Adr(,<teiWC?#e3l<6%f2i;g4!m:*0cA$_Gr1K`Yq-/To-SG/gG.'o3<\4ok"5Mg%
%VU`*CqG5D:mi'4a_NDnVT4S7tE5YDt4VO[!$+l@NKYp%M5JYB+F"U3$dYoCX=cdGZhLOU/U4%'h?pr>d'&o1>\t8meB/2t)J7/%\
%=bW$7>>rLsp%%SG7We0*eIqFbMJ'1O2,E6kR!KZ9%C5>QdqWOl'IPA]IY\4Z89?!Zf/dmFnB;6VAM6TpNQDiEZ?/r"jqKmZ"XLWu
%4A):>.sLHIDe(CP4]2]XB<*]XqKBGO4hNi3@=AcdqXXB/[e#cPadM/a\hZ?e7K5hsdP?_oKAF?oIm?Y9V$hio4iDF!NA\[%:4o9B
%k(:]QTXs.JE`FHnW!5`]HL6(s8gOCTa3IiE4A%#>^R%S).[F,/1LC+[hO(HkKN9jNXS[<((4OB*d&d0-=A8I@U7AC%A6F8QLQ7?q
%6[-*m=m?:X.JA`4M6j^<"]HUi,\"QaH"oCs/&&Ej*5i9ZG,4H6EF&#)m<#8KKN%Np8leU]R)sL<j$&kuGe0n-"Y]L!CMMtt8,nt#
%W:do/JuW"u?lb+:2"asUY(!`U5>k-JD!+]QB)7.UFD7&Gh*&K@EWr@Ag:#0r-aXP7U%*F<ZFCO'52lIcOFAmi;YhHgl39(g`/KPV
%h+`1S#f]489iG&]KHho#ZNL`=KXJA9PR.8dg^dqI`15'uSD'`=%SZ]rZ/<+$!MtB]NdNb'4mVa^on@;@:3W`B?b%$2]2@`UA9qPY
%_#NKfqS&MjLpo>;US,0_nb2&!bD*<Q3gk$p9U7"RorQQ]`U9$Tbd7teDh^d,+V85dV%Km:RQPQ^<:+Bm[mY:8N49D(ghP\IJ*&d%
%"CH"EQ.=K9^GD[dW24$(bm2k^jlj=tb*l%,lf]:V2K>I\#+?L]\Y>iV4fB:/NJ&3$K;EB'($Sk_%4FZhk8T%uDd^tXK1\tg&dr8U
%n+#d]O#Z]bjEc^pX0]G5@@qAn3p@;i\WH59R*e+:0`pD$K?@r)\jKHOIDdn,/(Vhb?pKP55R>$Pn2XK`i/]u.+.e335i\lM/(5l7
%napGF.`=o9DoF_PYPru`3'X$69(V"K8Ts$Z?7F5o:f=F%P)!DaV,ckC1<\;Z*LUe.UQt@16Fs^PL.(#3^RE6=1Cns3_1VOa`o4JC
%CA)kd`"Q8H=cVahPIn+k1ON$"PL&;Tb1ea8*7c\L^*N$0S\VM4YnE^m@.Yk-BmpIWRDctNH;Z1H1f1kBW.V^6!JF<43?5--:3toH
%Ol)?n5JI*n]cg[?a_A;kP0oAZ+%IUTCSH2[2%Thhfp_\oZH*+1_FeXTJ!q&#AsQLeg))QfnCgP>*+,LDATY?/Qbj`\",[7PNKGuP
%P4.3%&h=5MYjoa^`a-/gOY1kRG-Xb+bo$^[/>ma:2KAE=5$M\qD</Xj;QL?:YtQN?<UP[J%lHjQcn#6Z#\ND6AWFhM,"FfN"gmh+
%djQ.'!Piu'GWCJ`>AF7u+d8YQ$>HYIY2/8A9HihV#73+f=66ZR@0p@[YQ'&i9G^8f.bnau@&,Dpf`%mX/rTb*KP6k-1D)YpAUB@q
%HG<j;;q/mh*l0#>TV\8iXiae8<0*-G"*(C"=op&S>^-]KH67'aaKU1o0?H%*3G\6$/pI)6Y!`,/e_$6cM@gq1MK/0e5/A<5ff4G`
%\$REG,5JD,+qr>jiFCc2XT1eN+XOH@nmL-S?4BYo2J1cNe-t$AHd6A7D_>&=QaW4a+8DL<Ef@WufKr>,^=;R++,`eK*6.[U>.4(j
%/$s-!Zop"qn?[@L.TtZk^J2n;c?WO]O(`d\]^TpiW$S9dE#t6X<p[Igr'RYl$S=h^X:LXTX$'RGg9kUTcJ.WD8uR&\eEjhfor'H;
%_!3SmbB>Pb8)93q$YESWAu;9GSXDO:GiH7*AcCFb>0gBO%)lM$3MV)Z1fdG,BdUreHkuU%mOZf6(8kr?4>*_YPYC?2W7@V*qL[pj
%MBG#DWm<G]4_b@C>VF+?Ft_03h2_#D[*i"K<gqWqgKs$OQ(F29M\OUdEg2WS`\=Fko\JIG>2$/olkJa96CUQc'p\a'<SYP`m96ke
%?\H*Iq2`'-`EMG1O4qIYFM/MEgV#]kFZ[UXDp.#ef>:/Wc%jcWq/;beaXo_-\\O2mmM]eD&@6O]dd1mR]=XI[D<5`)P+WjII^O!(
%\nbQZ[2uaBDtUW.l0cN8g$[ttW7s'+I:cY3.8/!/X:LYIS*<?tbph$dS9Y/+[`1R)[i/LH3@@:g27.301mr&cf=Xq,1!R"RcG!lX
%'TNe6s2(Fn7:D'Do8UBMfY[X_;S1-IinKZW_u&2sq_>t?=_J9?psJ_NrnA37EkfrG"L?YGFKVShfr:ZAbKM?.hn/%aQXhK/_&QM@
%P+B93<lZ*s#B;[ME*/j*b3V_jNM;taXOn+ala%t\$THI.Y]-[4PbO_,n;3m1\)Y)2U>Pt-MKYk6YP9^'\\@eUMQ&qaZ%=O^a%^%R
%bi#HiQ#<Od:f3qBZF0Ju3%7S@b96FOPKAj]?S0tVDd88ZG,r;ZO4)qWd%e&E_Wie_/mC!T8)93qMV2`HP,`i.5mBlY`\,I(Pt^O_
%jt^M>9r2Dijhe$FP9)[1PuJ.%;:\Q9I%4T[cedoc%.rtS4cuPeoX%e(=KZCXEgW*4K+S4#YH/NSc`GY7q->I.H\rbX,pb]EE&(uW
%fA0AK]s]6?dTkn?B.C$bEgIQ)l#=(.Blm!>"+mgXRTId]mEoY[M_3)D7X2aOnNCZ"MCJ[e@^8WUBt=X/C5R#8[B-YL?7*q<NEPKX
%>==WpGY--KjHjZd;j2&0;_Zp)<#@\TRp/DQns!KgHEY$M1R[rtIYSTb67V90@dN/&.t]#Z0dV,J.i?G-0:7V9*E_$"/o$\kF(pmc
%>(U/S68S9K_Up,c'I^0@KkgA4aKS]#:@X"+,Wkb`V;)^".SH,E)<^<nomSe!lKnR)YJs0ta>G2SY/\I,)uP1Uj!4\tB9if33f(u-
%d)qd<qpq.!M`&KcNUJKSe>sQEPu8gVW?]mgnrH^YL(Djb]/I*1RL/_<YVZ3)NMsSn-^Lh2.VY67La:b^Z&ou.G_o5Z2=rJVQDUa:
%_Hui^Cgi,D,pI#fi:elpa&Wuo$9[]94ZT)-r9A4#QZ-0Nh-KM\hNLiuX>@ZZpb!Z])@2^Te3h(^NE/1PJj%c-5b2\ZG'K4ShFp_#
%L0rZuKToLth*f.u-_o7oYuhE'[8?Ll_;"K&+6Cr:5*[]A^ANi?DpRkHc7P+.PAgK@FZ1\aic-`sQ(9$Nidg(20XmB^3m&1NDME86
%b8ODgO*<XlP>720G3Y8<*?:oSf++4>W%rSp[bq4n_h'+*)5n!qfo"hRXtSdBBBGYuXV0Kk3JBj'BX+7VZ7RN&$Jm=Yn]']tLK8Xf
%X1U*OBXTM\G%rr#>Za:T+\-Qj$(%Ei*-*.-KO5VN;]5PI+6uT?,eAS9FY@%>\s[(bU^pLJ/rR9%pRr#8.aeZX!1M&6L(lG;WKf"C
%a\^`''/e!ap\AM[e(@Za<nD9Q5uL;\?0.dgi:S/C!q,'Waus:FAOgrWo&_%7GWch:X.a=@->03]3!0Qk+?&04L);S$N#.t@38%<l
%&n'e[EO=>2]!YDj_*TmHarJ`*?21tXk5[C1LD]utYs"B&T+7Hko<"W%FZ7TXdWidTb1bRm(2kG*/b@3P`9Q$a>':Jm__O1Wa$e'!
%,&8^^]$FB-MK=.;?JO?Z?X<3VC)uWS'\?YV$8C(CY2;F(m])V:\qVG/pc$n&Vek!js6(B$9usrkeAuG``"g0>^3M4d_sum;mR@@p
%B%ZuKH&7N#nD%h[UOW"^IrTGRAal=AY7hsP*o6e[[^+Yg1$?AXT9l8uA+q/@mqQj7UPuk#%(3'>L&%ZQMtZ@KEGs@JcJ_XNo8Tfk
%]mIM#CgFJUSr^H'j(1G&DeG]6l#N+o<gZW%Jggq=R=XoN7uGPf9:h[<1WNde]<m_\*1%('!<5?fq2+il.\j]SJPVMuouPRJ&or0n
%j_E#ZRSu-d)C9r4OCTL`Q*r4l-!g+b=`&6qpo%JVp;e2^`YhJYG<Mra_Dt\Yg>Y<0^DJWYO2rAb42tV_>DePL1u#];DJ>YN_g/-H
%XaZc,p46#,D4:>i$I*`?^$&ULom<p>*%J=QEbd[Q3-t_REPmo(+/M]d;<eoq[buQ_3t(pHLCVYYZkR5#OcLD(/d,)B%VI$ZDU!R2
%c5VfH]GUE5S<K)e_Hj6:H6!bTMp5]?J`k#M9dWM30q/ad7n.m`?&m^uPeq`fa\t.hd0B9D&/sUd)qjo?lbh.1=5N\>/GfZ:_[5oe
%9:FY2-04R%mF[><-fJ@4`+&L?%5>f0[ZXjo=:@i(>E<,AaAt114-+u'[-fk6/8j%]21L\g:sUY,nW@8$Z&>rq&mYj/o2$uiZ,<#d
%?f$k5Wd0s,q7H?-0Q.Xoe%G';q$:")/*<BanajYp71nq_D;O1I),?tZ;t?a)>btFLE]_2TBh/dO(Cu/Z]jmah:iXSG7')''KJof%
%SsaDR?L;'VBAsLGjGh-p9%iL^&V?_8(:3dA'r/bW*?=&IQ_cK:RWA&Lef[!$IYcT#Jm\uV+B/9)LgW+:r7H9_e73"\L`k7)LT_6q
%MV#TfJeoY``ujWcnil&R-i.$(qf)CojA,I1Ea+Ls$]O]1+eX69hg&,]0,ZFD$G&!c@_rph^^1JOW6=_!?4C"-HdnU*LbY!GUAnGf
%IoB2g>6tD@r_]Z%d0?XKN^N_k"+neXJ]#BVBnZX<!UV^t"Ylk2dD1N-"2S!Sdoo.5fa1@;9`$+VjB,[JUJ$,t9^b'Om?AD-_/'`<
%eHj1>`!=9#,7fau^Am:o-,^`8[>/J9gh'<H2-?'tOK$JVaV6n:*pMH5-t+\!#`_9b)A6k@U]g$rQl3hW,e_$i:8[u@]QGm`CA-a+
%#:O%dBm]BbZ>"(YES]iKLWgTFMh\,uD%9(b*epo5oX`@[`1K6n.GZ50jT2OXiJl7FF<2ZJ.iI"Y5*^e7b\D/!nkr?\*>r8,Up6!6
%qb)'3&2'6R'(+q!Agh]P\;'f`f<@^<EqR@_A<'46e8=k+9@e*5^CoMN^D>c$7(DD428EK8i3(>i(gHR"Sad491&ioG[nkE6o[.j-
%_T,A\Y/><-rNIh_`??>3[Q)(1oR+<QjlMG^Ebs,EH/iY@RAC8V;1uUMHJB`Tf8D4km!<q@l?8+nM%d<4I@]bGS.Ldg/PKjTeLiMO
%"9":9#nPqfN2,b[8eIT)F@&sn>oQ.CAD%c+C@O,*]3<h5n*R@m#RCSqo:W_m-&F4q:R[rbG"4Vn7pH1TUpSi<S!ZcAi'+bZ_]*/#
%oi8/Y0<#/2*h(i)*9'25Ss#j;FnAW\o49[tQj?H6L@_;jIEsq/^Yr+HJ;K,jJN0=`'f#5Jfb1uAVAYt*1Y`=N2;a]ON*kN7ln?Oo
%jh"%M>2$,sCGg9.n*D)aI>(sfg;4o_Mlk1RbHFDVa7t@GYI4l8QOCHK(hn>ds)u@_4(kF9(S5TN[9X`\q@!NA7kb[pN[A1)g>Y2;
%MIh9?fpK"1f<B7)mr2%Y<Z3'pSlBcl`t#Mrj+729la$3OlVWELrd@e'1[JtcP/Odh6:G$"s3i<@W[Mj_5kI8Fh%j7)1$J!C9?YUY
%kf&%XS'/%s/[`P"@ss&^H.gWCi1kHIg7tPY]s4DJQ`WbDkOdE%[Wm2;?]:?=?Cm4h*TQgE09h^Jm@'!\k1Z.$=MI-TeGN8tXpW9&
%2\jh(\D_W(?o\qHZn`[<Nqh9h4dF^WrN[dj>,D20N>sTU+X">4/+^+O6,+Y+UTp[:@odT."Xp(g:%QFYnJg-j9XVoY1Q'Yu9?m;"
%O;T<c]1o$mPaRp$RQ#L/12Xrpe>k=Wh2_!;[G!&l<:^:TFg@WXGsj<E:T96jWl^-+M9?(=()\-3;$c6Y/UpYJ$Vn\A\NE2n26nV7
%`TnS`A?m9Ah@D]C?$P6SZL&b5%VLHLR[6S<](gQ7Qdcmn?hWdMPpV&qbuK=k.1#ZiS`[V001;>K7<YkT>k'RL-1Vc-L7-MKH?$H<
%+_/><phCa+>7Nn,iq;:&$e$9SKb?lPnQe$@dLB%bbopJsM@&C+%\5S?-kfe0MGlR%[8o?7#*6#e`Y.=)d%6aYUFH5oWA:>j`m+W-
%H'g6'O"#Ccr45[:fUmVD'.0iUDea?$IWf*UOW)-c&?+.eKNf;',$SSY>ND0Zc=#K(h2<<DQ7e^hB:@-=i3H7nd@s-@oui/B."8?=
%=QNbT!1m6^WX<X[_4i`lf"Lj,NrD6Qn9VM^]80[tQ04T@Th9b:UDuP&`cjJ^Bg@]n\hVA4e81D9D:B>m2Hhe[/m0dJGX&'X?M_Qu
%q9%GUOY,I>pf$K6JNgCk)qKU,>@+?H!)B^+BiaW1&44q3$pjd-GZ`5?^<Y34S\lAgk)%$q2mWj#[$'=P/ZrAJd'@K;Pgs(c9X*0h
%.H9<G(5#s`8u0B"0'B8mSjVD&R=T7p-t*s[6,kip^8OH88GFlB*mQ"ee1;[=N1,aC)QK%uY>dm3<eNH1F/-s#Ie.'-D_I+:WN:OJ
%)kBQDo^"Q_Z=lK=r>WWV.'r4,AQ'm?'*jh_CFe)c-Xj!]G*jHO)9mqPMhCp'fTLZ_HDec"RK+ILVk^6!0KK4sCclK>4mG#o`^'s9
%l4!(;4qI-uk_qjS[.',&';4FimiU:H9!b0l[Gd6O!c=pVDKG*Si6.P8b-k2`RCUGF<)6N2j$E\:L%g!Zj8HOA2@H@M4U)*HUiH7q
%^T-pBZ_c@KrG3mSHm&8f-m(JuY4=?ZC['Dl"7f=F(M<bkq5*4D3o-$E'*(9qQI'A;i!+'kIC83R%(imgEJ.E,kF/@e"DP_[nt&c8
%bQUE%9q+7'*+[THT)?l,hk5Osi4&H.mh[r^3Zd&i^kp<M6^pRP$Ics=Fq91`iN"N'&[a4WI1BQg)MgeaGof5CFjjs*4g2i7AXBTf
%OeChObD=+'4.jb7)q&5Ipne(K;;'V#1'Y1J6i<DE;1?L[!4e+M+18]SOZU7;QjHV=:3tYif8]h(5&PhF1GM)63:me`8_.WmSO'/Y
%QcmU)^ufa3g9M9/Nr60*)WVCNr_^9CmEp"$hDb_5F6c]PM4n"3F2oB9?>NoU?@G'&36!VuhDBuh$nt?1`.-b=liOs/.Og1pGg8@h
%[]%7.57Ya*q.Q"=nF9rOn%I:N)=-,IHRAJGZ6OGQ7\/_%\cceB,;A_TNVt^fOT]N?P(Q:iH<iCuZsl14[:k?]V!%$AM)&9#;/Q72
%m(LZ4gc3S9H7Q^\o#(L"D:LfAH+`j^Q?3'2!<af"/)?MknsdpMgV"HY*(^j0+:/+#Lf"['C4k^Kr3b*UldaUNN[)3.8"#:lXcJVt
%k#'R^GY*8(A9P"jW?qM$djR-sp4T=`6h*Um<T&%[/B^D7T6h,`G'_<L"_iksnGVjb/sE&(4$IDeCk[DO7b.t8*i5"+6]W9m41s4W
%Cq]ame8^G>8GeD3?Zd"+Fs65hd`u*U+#@rohWWj4Y;]h^2tm(i[$Y#,W^.M:/I2tN#W]-c@O@sBH7p&jg(plk@9iU?&A<LuQuJW8
%S*R@NC4n$&=:^`-3M=!;@=kY&dE<p^P)W_a,a[VZV!`-!PcCaB9M@)KbgrN/^\./9pI=d6RT+Ka^eLp*jf#^0%[,#AQ>2,77m1Xl
%!TKdAK&^!dF<i+WPt>TMer6+pquIbH3qSN0)C:%/=q6%eTem)TqX'h,"U'KD"NT2IaacZ&l4[I;T'XmS'-``?H^lMJV=47VMGjE$
%3mO6LX#%]P`5kMMPFp89fk/<h=,fdC]a^GJeZsds<..Z(gh;ut@S8'5VLjbs;n\U5FmYF!%Rpn1c,&A'Z52G!Ob8^dN%\.TLq>Tq
%]/Q7<.W5Ct_H'`IPb\)i3L^jg_dP'REIp3P6):q"@R6b/]MQfCJt\hS,b]<#W!6C:9Y_<kRl9U7Yd8*2673=Aq3P4&+7AF@gt__"
%C2H"A7a`MqV0q:a/mhCtBaH!n>:">#+#K[oI+DpDGuNHWj'<B8?"kA-]rT@VHlL!n`TXV$3>T1WN/OaNoc"FG-(,$QEB3b2L8@/#
%C7!rLdibO<M4[&ni!%m)#Q>oh,r&`??6eVrlZ%!3=MFag]cg[L;[G\[1r=EJFFpT`k"f[s"3H0EmKtFMQ(M4gTpA[q&;oV"?GLoG
%1?/Y!NKq-M2C9)NX[O2C$?_gt]N?fWA1o1l7U>K=Wq(p2G*JB0)F&&=qII(=Vn;>-X.Cig.!s>5](UiMC4a!iS5E2,%&dru]SAnG
%TsU0+CsceEZ]GN2<pI;lfYlrS0jXr5ONFA.lh[Dp:g2-t-CX#q9e=)Kfs\d<7U$gt]6Ghl<?-D@SZa_KAet%+hsLs<g87kZd<(EH
%6%r4sj9?V=QJ>ZYoouI2aiVQW+I'+m<uTFcQV@Zar6R\68B>74pb[PE*@>d`TiG\df*f5K)"Yq,J00=djhn3s$sPf&N/BNc5/0;1
%mH`GCm8pC/G!/cKLe?pn&,]DUbK]*Al#Q7WB)a>B.+oa3=SD*JH=NHlnp=29gK8;i`R!>?54,P#?!K,Y%,tl>n"aPub[sEibA9)A
%(jT74UPR%5@Y!6)EfKDA`>sZOaJoc1!L_5#Df;W*<p5E]K'JS#Om>,k@$W+OAT7i<`:`(a3M''>7?4(]).QFqoe'TIG%h+W9(><s
%JHp$:QTjb7RCSg-M-WNE0ZQ:C2Aj9Q@2[QM3AO&^eK6p>:S'srES3?`I+hs%]!u537B<lZVp/II8/50lA&6)T>IHenc)a&_I]SHm
%:#AMkpH0Tf6'H)a_/XN@cJT7cJ<A$Ef$`?pYBK\eY!ZJn_Q\Y`#@YQchSe5,:71f+"]k7R=)p=bfst:/^\&Qgoe]uL]g2bdVOUcM
%<s\,&:X1FhLF,)fg3KO:#t?Q1ahA[pZ<9K\iUP&LbGbO8->cGZH('LudMgMMMmQSns6\[1ranpuO'<aj@>u_EZF&JHog@6(BG*t-
%Z5+D-\u-[b4/BQ,<lG(m5*IZ,BEL\-p=b+eC&mPV!e[KQJ4W`jjp>Wp)FN'e7&t4oHl9lLbA6&e24mlM4+'3ETrE)i.oa_J^E,85
%/q2B$EaJ^m4O/"V<*K^#dX7LK-`\8EmeKiP=(Oht_3A?jA6=d.-3M%rrH5;rC]70r`_X]#W\/:F\n..iCYrS,@+g)ZI*Zrfm'WL*
%lc:9k1*2pb+^kV.h2'An'6WFMa/Q55`j"HUk*[e#Fl6#&Rr3+kaT^WD\OL25nP`U^pi;.nk;ousHE_fbj^B6AiKlan;sbO2N"b?e
%,_D:4K%n;2&?_-hjuI_Wh4u7;P-'J[)Rk\?B;`_LLlMPG/>T+B+l#"Sc.mtA)?`L,SbL'jT`m+3.F6;<0N$I@N)<r`O6uVtmZ$Jb
%!F)&p6^ji^I"fPDRpp)6h;l$M4e%1*:]U`KaiFcG99>Kc;&1;4iXcsB)?UNkR&ui[ZDeR<UK,Yl98)he^2&CQl@Slk`YWkKb,u*2
%-t"PLB@Q#a?dJDDHb677iA[m"g,#mZe#/X1DAOZIe4Nso;lQCf)^@_p!B?"[OX\2*BKU]#`1@j*-0deAIS#[S"15W$9IZe*#P"Ul
%=l+iLJ"WlQVM?JdcO%"t>Gs-R`(>>2;kX9s'-X^YrbqN8FYRF'a\lD>23NQUSV#QPN[<MVT%A5ejB0c[=^f)qU4Nf)=`@-p4T0ju
%E$[28Ttd`PUsm*uB@KS;AZ#WlqpKQ+)6nS%Yn`ZFJ4.G>;>c-(e'Cg4q0KKm/A!&Tg>u(WPa3C*W4MP&T57DnBq-=Q:0tH?83n^t
%Emg9GcqmY[1>YH]*Z_aoHqML0e7M/i*dN^'mNRtC)3l*+:RT2ac++TZC<9si94!6])T^\:YE-)Glmf[El>QF:F)=*@7#!N$4IoBt
%rli9;)s(RO=hHHl=\rl6;bpVR5WSG1Z9g**@;CD4bQ!KS3'g1adSBbZ#*cdGWnN!6#%goEBNrhIhE+B:U_G4+%4'.7n0beq4l*7!
%KI0^+#BQaQL]Ll[_G<)%bYZTXE4ak@mq[+2:87I=W/E94ONdcgA=$S9)<_jm]RnhCqi+%5V$$u+&;fB)W+G*P=fe=TEc-D0W]7mu
%jG$D=$_3_=?K3r`\F#CKhU`/tNp5hh"_=FkfIUQt=GfrJO"TI^RSK3g9E"s(W)+<i&APTN9,9$E_+;"%T+.Y:B!O0m&gg\VS%!@l
%*$FoBVB`k__espMkDS,M3ftkT96PW`9X2s\ofc_Yp8K2U,:Q&h+Zs;]])#j-Cg*6LSC&8n_9#6j,$Z!;+#(8K>A'A<nssJ!^(uG0
%5af`2Ws9t.ok@M[.6WUu9:W_72(S3q?7gbNFljsgm,PJ<Q,WU;-$EHq;#+N]="UChn,IQL:k(:)iZ4DL*%/=hV7Z8b,s,!0X"+6E
%B-/^/BiYa31EILiEGeTJ5o)1@[g)rt.R+--F![g(2pmSLXX]%m?l?8n+r$F1P^Q_9K+E/A"Ls$)CDDCtG6U:^kNg5REG$oh"sc1a
%%tWPArNuUceG?S(S.aM6\%!AZm\72SS\PUD/&2bH"-3h7YGam5`GS'qS.a(*[O`Bpg9G7t*K/Y2nG9*Cfb)Th+_u=nG)oUn*R6jo
%WJ/SJ[I*YEmZ$JbQIT1`aTX3eUN,6?(-@'q&?hl;CE26tCn3XgcIqQjA?cF`=9dCmj?PMB+=B^:4EP3!BkaYq<#%]\h.&8D0n$S'
%-,q2na`IT"1_OMT44a'g?VgBpOPn"&"\r84g9<2WegK4UbVW)]=1O'/1T0LBD=/kD5i\(J,P[ZSH]aqf\*k!0g94#PB)0-a\a*'D
%,_D\4DH<%Ph'oG:gU[$Xf\"i9ikKC-T'PGR_sMi_*RD_#'SCFSa(40X+dn7_@"48VFJLgL6!7bpXPcH\/=K#$GL/.k<5t=B"OVb)
%eMDkpa%]Y8i/'Ar<FA_D@,S=,fisG6j5-n/bLRpl:l8tf_Se[llg*eAEGOlN^kArD@ua[C^@/C&/[^a?MM[87\]4lc2WN$3pF>_r
%FUL2D-aHeibn6\&)'fjCFGl+t6?Gtp=M7GS[SG>/F,]>#\5Os[`GS*18cd/&MWBtC,p7X+[sOnGRu,\``DK8b[MhL<K:up(=(3WZ
%"\1*i3+E1mG@Lki3&&J;erX.*#^<t4`u;J?+;Qu;`dA!CS]i,?6^B>o":+",&4C2&M?BXMiSIU$!@J8;][F`B.NT6#7(9@t]<qX'
%q@Q91V[#qtCZ"lYS6*H^Ou)GN0$]E8RBW8KXR4/0NQ-Q?Q4f!R(M8ZBfB5WZLpU27!Su>.5R=U\d2WT@?dR15o;:enF<VdE<@fX5
%8J[o/?HY0tUa8)b48<%8%-Z^88t90]r'q_RFQK+*R&6i1!X'df`LJ9ecmPj6dO%Ep>Ds>&CBI7X03T_W28(Q$BqT3'd<p);'7)*8
%F@W<V8J)iUI.,o)Z"qI;HgJ>fn:^J6DI61`CN3h8V[E5C\`(`(pt:[1Agq@:K/@(4Q+0=$aKF)5ATq;M,F;Uq*q^#^-BlT,WGQjC
%LHq"P>4T,FmP55bSUhp^_96jQQqNk`hj[:TQdN/:KXn;e0@W5oN(fq[Sk)&M"EF)$hsQHeRSRTc<l[h;QXd!sQ^9t!HJXnEBjM+f
%BNb@&#IXXc(5a=K6oKFjlkOr/m/pM@]gfrZ#$qFFSpBL"3J*'j.h@\D:0FpO,Q(6-Y@m_hN<!#<L%18!L<Ertah5I=7<kRZ\W9^u
%'X97fM,MoWL,q)N7[[s@/TFn?31dE::kG,i*`i0<Bj^T=.g,)gRU&_0XI0HP[.K&BTO)j2:9Y]bPtLagrcW3>Il"!#q@sM+##9>0
%PDPX^^FKWP&Yt2`;M5hil]h!MeAKVZKUX`(fE0L8Nu;'1K<qM%KJT8<5t_S4YR^KS]ral@.,C";Wg\*gB<seLn*B4eXi;khbs3S=
%+#:I2IH#`sG5^,mc7#A[?fOESj)OfKh>_66%6H.UT<=_*SP(fC4AoWs&bRC,!(M8YTUk'N/!7cG[1TICbbg]'b1S<9JgZJO-(\,k
%dfP/Q>j,nrl>QF:EtuuRSc7`j@sL)G/@)?hPCY`?L%NZZHY:5/7.pV#YTed_7OgNOEn`pp$1p/0W:(.Y7An0F`QT%C.]XmG?;k8L
%itG_4T'UKM+r<'/LZ-E0IG-('[SAl9Ujgg9*o%jX+@^B6O_[`%f="T2%Wr80a/J(RX3PPhfMXF$;HcMlb''J:Vq8e#[)%9u)\[k)
%&s;GqfL=E'RP$*jS:M4>rH<*5^RnIt"mI*X[Ln]88d>%Y\u#`)j(am=,"XOFXQ'C-e"(,.9b-9SCM-26W8tp>iD)N/oktn`)uk6L
%="XF>=*OeA5"ec/#\>U?@\*$GOn?;PBp#UQh"Pdq"HAYI_CZs<@ir/MVkMlP@EVjhd,?Rp.pXhQ?BM%&6=CGi1N"l[C%X<&A^t87
%2)JE6Rf$1YrSR#Pl=*::Fq\MB;aUf+88s.n9*_Q!0a,uc,Od36/<0bM$]s;SW%TF^#XG>j7a:Li#&Q:d!F'\:24e_T4@Co*3O#0"
%)S$o^V/GaLM.4pK"L><ZTT5EdV4ZuBojjC]$tB^O):5sM!?SCmg1Q>bWK!F8?(2f=YT96>Mt3<fk3RbpMsqr9Ftg@X&SG22eb4\h
%#5D#HSSo5*mfXjY)@m-q<-^PV'`e7n\b(k4Art*S<jF5r:^1<AiTeC#pVq<;AYd20ejA@kamZJ4WD:"*rGY;<\H$5?VL2-qr`9h5
%a@`3@F&k&dP+(MUk9)ct"D+mX<Kt3$P=r(S?FAK8M/gYs0[%L@;5J-r_dGs\P'Z`851/W\fhOE0S!qlBBZjoJf>Xrj"M<2S,Inr]
%'ZlN7=Zji#K3S3Nd"i=d`6.H-;KYH%M98R#ghFqU>O1<o=`.s?+15;)UW__CUZt58*X-]Ede5i0KaaDtZ$"`;7"!MO(dGi+)"jXR
%$!A=9fa'N"19_?+*t-u)rL<'-DSGIo_`?b:_"_c>\?4.d3e1'DCMBY[!H?SJ>Dj/6a'=XkC#8:IW3$4d3`W7?C1ZYg;7"c"lqpu3
%j*ItQfm<JeW8e`0`1@;)bVa_N2KuLZ=pi;*,%%=?+uK;6C9Y`SHNk3@>rW6PjnG66FUdsF-Us:8feuDnfWskhjdl<)"]HKa[9Bq-
%?RNNal2)!P;YTA$j!H%WHa._HHMR64iu#OCYdI_B@/FA`D*A`unk]4F_>:&mPI%:m8)YHaIa]'i03V>J<<//4\3f(Vgj$i`<W2&?
%IFjgha_XRCbZ/96P,6#s:Mfjk><om4Cq[/>kV06E)/6U^mF_-&`+AG--)t"b5;p*$fe\",M:(j)UV!tMHBVBif!ieOpGN@0D*QaQ
%o38hdqS.54l:kkoretE9]0bQ&7b8%8/mIf2%lt-cCV8?6?JYGKgt?AcrlnQVq8YsK?hOo%9!+:)T<Sa`]kn<jO@Q[XZOqLnPe-Lh
%`@Y`Hj&I=i_fPb5ZS"+p&Uc]fgE'5!Quq3t>CJUic[TfHN3BmcEu<Jpc;FqT?aESX?ul]MYo^XshWS<_TuSg5_EpV%Z6f66h6>P3
%Q@>b@T)<B,+56Rk6(48o5jVfGQPbiheI@KXr"1U_b?*7@?63jX^pqPo3;M#9&1sGU\%RAA'n_g$W!dPk-_3=-n%>K#PdQ`%?F^@p
%ISp.p/-2R+!_>\H$^TqB;C<?`k`:&R07JF-95`Z2-^VD"N2nZJMUAOo9Pb30Y3XuZH<)4=m2@QR/c3TT>-p6_%(rjtq0r(6R^h[1
%GM:s_YJ8PtC;'@fdW'M5em@J\@23e2=R#dR=C=Ydk-q$LXQasc?mB_'b@q\1G)WoF]tVF[QJ:<2eJ$X!l!.Y:3]b?,p9^.<cBTlJ
%W":jk3ekfHDq?7A"4OOf=jS/0_'Q:rIb`#Q_CC@K>M:Fgl$DJaYHLU^#ZO#\fm22ZbNBJhauh.&$T%se*O;PHQ,c*!n?P-KWk5]R
%aaC#?TIjBjq%;NhF*mdBHKa6PiBLk0B/QsEbK0679GfMWB_8`S'X$,#3,"dlE$`MZ`*BL[lr0>Ah9UQp58VD/U#C0-1E.C[mbKSa
%dAi"20\k0Ccdt<\g(u1k'lqXC42W;C$n]GWU=1mIZ:Pim/TPNR@u,RX@j\@g44)+_BMOPLK:I\0k]/j"_>]5[I;Xm9cMB4g^GB!:
%T6)bcS.I"fhdjG:6[AQL>>*$EA.1Jc;Ffq*(m%bA3`?^*,`eV*GtN>IZ-%+=`qE@IIsTM.0lS_7RpR`4URTQ)(QmNo8/YaI75+K$
%7Cf4`0O@6D"+rl]eSR4;\]a(9U$)tW,OKL<FB]Mr3?@XqdDtH.][:4][57u56l.SS97K%?93/2!ZjF?%-p;XUBJ%EuK<;[bK*QRj
%):L92p5rOV=<%cV2\k,lKg4[2Wo2n5_&q$")EC&oepWXdETLc(bCVs-r%f4sb^D.V$rR6JJ_=pQI]#/E1`!r4>G3C0RZF?g=AftV
%7b1+*'WkK;D2q7UR4knYZ7k_F2YluFd]OS`g0\o\"&NEP[VQh&.*R[]E+m?]\f\q9Fi?8l^:=!Y#=_UTqD=6I\M"fCa8stJ1cIob
%6(1E(jDq6T=`JO`^KG/15A90N<AO2f/%;V[ijCm<'D1#:T$-Wt^XO.1]6H(?0jT"8@rik?Zo#5N+bRTg]t;=SapPl555_pXW><n8
%N<e>g<T[38`S\2H!oL$dG[lQ*Qrc[mB!q*8H<9MNe\rb"F%pa(3][c>lLGrmO$f143\5oNQU0pp#qLhb:)$QXHKuMllE%)6m9\qG
%;IRTW.M9n_Ju6[m(m@;TO]&-gS^V`t]?g%Cm4id6EH'68pE+je;^0T5UBGiGT"F=FV+PZ;<!Fi3n<0J;Gr`9Ic`7d>FXC.SH-iDo
%W@7F%AID^FaGLVR@CF:AS2.$b,'B2_X.5&CRiYfF1>9*<P0_X:]H,uZ^%>>AmIUlbM(3>+;k*R>a9aJCg_TdS+ekV6"@=E@/<mq`
%9R;lu-r_f:HI2GjYOr^Pp09M*ekHsAK-!$D^><cH;eI7Q9LOjd'@j'$_I$O&?42\<en*BQI/YC0d/I't4)JDp_fI;b:Cc2pb>5<L
%i*5`Wh4+"5[fa:Sb_+fhQAoF;?Qd3K`Wi0E(lQ5%`"7O*iHV5r;08CtQ8j]uOF=EOLRCZCj1g)Ik;(E=O*e_KT95sS3H$3TX"i."
%EH+K$:9(t':tjL+Y`etIZGN9lHB:(!GJ)2T8t8p4[[pDkJ83],[^bp8%Ti&SRnpU9hA7`.P%9nQFmbHFEDY&#%413:0YlEB\>f08
%#lM8"fQHMXXgUREVWBBpPFY`V%RjK%1#nF(N_ZgM%J8)m*O]oT2FE^Gh$`W)ZLZMBCGJ]2Nlcs^`XUJdK#^F!_Q3@jesV=hX-:s!
%*%&L1LEU!.=+%thG^p^K!#)Y7[oOG^Ll<t*iaT_poT4Zg<ui%b)CZ.qn#XI93"jKQBi2NmgT"K!\MJ$RaKRY)HTa?C5K]e*]^R]p
%pYYraB@o'l6Pmnso'Z2?$rj>,Hnhgk=st.mR)H/+"Rn9/0B/8=27X<LfMa]G04&GH7piji`O2?qfj_bkigeJ-Ea*K'!u1`\.&M;C
%h1>$cE`AK$r]%isAmU[NgU]SNYKriInmZL9=F#q(TqnNfB'#:fFXWN,V>_>-YCD?a`Dgp./^F+YNLn'EjtP^R(?1<':Xa#Q'LVE>
%j5Mo"O9S]`11Pu6R:;)lN"?QmgiaiI6t:fa9rHP)_09"HM]*dM^1KgHp!BZeUQF9;Z,GaDLn>(TZ0_=niP1m1UOOkAoWL%HVp&C(
%54V8m:`'.grd?9m-U6)uB6sd%=,]R<Y-^);P@+a?%*.Mp,01hCK-SG0\OM1,;CluoGL&#jarnkD@tY5g:Ys_eOJ`/c9!''Q)Iehg
%k(;>e03]K]X";<6R!L0p\RalNh@K-s"Ak@,/Yj*#f0Y#IM_G9)cCLu,2a`+km`^Ui,&[3(!-g@$Gl4tp&==.Y[6r8E9qR3LKB39Q
%Mo@`i`Ao[k%p)=W5Q4Z/cWIY-RH#`;f-4;AZuuB?q[utF(:L:Db5(/;?SecPEJqaDVh8Qj*Ae<!A%9e=Npq)j^n?RtA@N,Bp*64t
%eer&N_h&_\Bs5.a3:JQV@qpa"&U2*eCc-eB;(I)/kRf92qA:UBdec4p'qYs"%B"qRX11q+kfbGEf2)'l&0R7qmZhs/;,ZAje=-%Q
%(n-eU;I$%f0-t=:8SMJ(CEq?4(4`_I,mgfMf5Kb&:GdF.M;Y@ZWOY$:p#?=M0QJ18fMh<?Ij3ME&'TE`go,#XIabfsjAcJN8NsMI
%E,BU1BeG2&\:407-Qf]QBQkMJAt,]-r$`P93HV\5A[YZD=08s/5im!!f->k&F'Sc[>R^i`\6iGgE4RYq:Hnc-HRSCQH%0V/bpbTV
%Y.CH=BD7:F3[m$Dr;c*3Fj%,ACZlB^$*5f_IHenS^$#T2]m*9njO3Hh08PD6^Sn<k(2u/JdihF.+*:T<7IjP+!*@n?X(M+)jaN"e
%/[g62_r3TH$Wnfr<#QUR"VWgoppIr3>3$!dcX"ii%ijlPpHK6';-9?Rr9)&p]GbPnPqeD7/L9c-VVAO_(nokR/8tH8OUZ]detDte
%."uM1)g-Cc,o_'AoslPYeiW[rla>>cNhcJT!Fb1.bHh0_>K^q6K]Xc#MnN"KFo;-O>+]s8ZtINa*:'I/-LWmQ.FZ(QF5058AC6;C
%Zr'm!Y.::[\kM?7%ZadFg7rT_X)V1PCd!XgD7^js`T)FH@dC=:7/j.F(p=l08;7#C[]9Uj(r0afM.JS&efC@DheTGTTCr?"d!m#T
%i@,*n7di9qWck5:X5Wj7_5*"e/no*@@*m/0>4iO&O4q!X,VQdLSf:>.r)$uShXrjoqlkFPFkM(d53d<MT<R4`W]%JDdK3l+DCMkK
%_]Q)q]b*Qu#/iDm$cNFs>OHimf)'G@XgEj#n@?#S7M@t7h%Lj5dKSnhN7gd`[g!&HlD2H>;KXMX`5QkjW7hTMQ!NdY.uMm<ftFnU
%:eYY7;-5`G.^^ff,F24S3NZI2De)CQ-/4XDifrZ^>]0Ds,N\RbirH8%XE(=F4?`qk/lF]sGq'1W8ACpS%X<*n2WQ`7MK`Cb+hg:L
%"5`C[pqNaq<\odqjk@go;k&\6V/tUO1CA>-hY.>9qW8UhX\hkn*.&P,&Y[\'*6j'mNA4Mn#Xu!F@$W(Y%4hi+_$J;n&X<W8WL9.g
%,CPcAKs-#=T\nt<"-YF*L/JB-djU_P91\*Ol>_DrPDL4$OAFBBH@SbqV)JMS>Z;0KBg)8oJdh=60:j=+/V@P//>PZ:d-HRh[5Nt'
%:gA]hJlcrNVuk-kb[MZ71`$p$O"4_Npqfg<a<s>d"!IbM>:HZ;*cf?dY3E"+IKLk[UujL6SI$GU>9>'i:c'I&(EhPibQ_RNfWb?D
%>:,b,<SDu3Rk"#He#H0?r2'8F:u>b$?*>0[f<7jqO[\Z'L)\-5"k*!Qb@-3nF*X.#DSrocp$>gp1C0CIF,XT"F?ft+7EK8[1+a0M
%AV[e[H;DJ/=;I+uQYgtm1;KW,Zk'J$9/$3J(;0\@B9qID6$W&B\-?`RWi`,J<5>B7M/'&*lnpiWL:ag&$Z%[P`9P^+o$s"7HYp?q
%e3`8@o1eRAUkC:OU[h_i.rNE%e=*d5Qmt16Pq$cMQr&,8Kd?#ilFH/&LfY$G+d0l&B2cDB"-FnDCkjX%MokZt1\#l\Au9BHalt]e
%cDZSN?]g8X-h=KZi.of*S:T(P^o^?<3<#sI[$Si+FB3n_6_.>tQZ;`e-&=flZ(RBaL;Q$sM2"iJ*R8j_LRW7A@rM5'i_EQiDo;)^
%oFJ=Ch.+MXFaDQjoWK(/H;$5.E#,@8m>6uLLHp_qOnDj8)c"HlUJ9.rpo_4Nn4>4$bN,#WlmP.=V94.YKP$%$,@5>5(Ku,\j@ZKe
%di*]L$VaYV5*ZX_Q\I8=dZ"cXTeF(HEuFJXoieo%DJ;2KP/!A@>Rr*lG&:UmU)&n8kaLr&^db'fkofgrqBF9AgA/!.a.X1gSr36)
%/<.@cW_",Z)7DZ`%]WSm5I.e/JciNZ_5Im),Q'2Vc,F`CdWol:=VDlbRUKKLpOh`k`7uH4q>[cI1=`osOM+knej5[M>&F4Zl5$,:
%RaHD[7?kC+7V(cT,/*F;+!,SU`@6t@enZcU>cBm3N*Uj^i\q;DS@Q)J%KG!R+1`B!8!j,c\9(5%2ocMZ_UVbE.[/unUoVo0nsQbL
%WN1TE"`lQ<Zr+$EMMe,+nMRKG)Z*n,<;_d+0N/1ficj83#9f?]](&Rj-Mld9h<"pEa=^2r/di`8lOI]7/_Ztp19@`aebSW1%-?l&
%A;a6m3:d'Sp%%EG[q!'u@K]BH$]=Om`*&+2qq*M`I[gXVo!1$2N>&C(W,$H&r^PjDr,jCDlKR[.k1cIe(KT_BBZQdZh_aUbXJbMe
%(#;gOC!2p[]7Z+U#FU@j#56dLPI?4SBK`d^8tYOC,JM5YG,Ho#DlgEOQ`W40UM^>3[00'>QP1W]A$_NN!/!XS0`"Oo&gZf/SgqA7
%i<o.%>M4/TS^]3)b`#,8?JDc$=B%^J(PP/8JG#G_U>7gASi?@<%Tn4D`mFG8Gu/AX:@"YIg?Uc>d=!a?2m6D#XZL#MTeD@XX*krW
%+eYJ-'?3(^$hjB,>"n(UDrio][)W_Gno/P%XNilK=%bL:nl;/n6T(ga]HJ77SP!K2Te06-lg1L2=6'sn.tu15QQ&3-=e7r1A+aQ7
%S+qmRL1jEh98mO(Jq4J%"ehbnkD.%B^YKjXhoJFG;=HcC74ip4l74c:UIC`(F;?gn"\"5Di'rX72lcI,[00dLa=scq@:_;CR[_71
%_:3l^7K1j]Cit)?$aMl>=kX6a!<=g&I^7;OZ[HRN?^Wa7*04V+IkF3=n'h9"P#B%OO;!Do31'tK!\YTQ<HR8_Tb1A_AesX!LK2Ks
%h'\C0*%7]5NOd`[n<9_960\age/rj:Z+BBNIS+PsEm+/5&5W;EQ^GYlfr5`KnOCiZCWaNpW9t.h_mat[\u=3bmhENXNg^q8q*rXV
%-RS8;U+%ruhk2hW.p;IheRh9>1UNlr^jX=>lig:o)<BrT+N:-lRtZN;?AYq>M%,&k&S3lbj.148a!*:QM0XU>.%]M,]&)Q7aY#I0
%2DeegT;C%mLkf=8Yg4ZGVUfb,b=Z)(?5IPL/;tHiB:PJuni[>R5JcYq2$j(KDO\Qb7KoGnp/V6RC?m]]0UM.SePookKMl+&*=tsQ
%k-jV1JOpZ[3L<Ha=c;Ei`d%Bi4!V<lV\4Gh-.n3>p#hD@`,BQn#q34H@i4IYLtFt.EN^kQUh/_pU.lUF`T0OdjEccKOoK)+Z"Ck6
%W\95j3O"skJ]JQ]Uj)6#`f=0*:goJ@!Q<=Vq0KVJ!!b$lB&um:eYOqr<0PJLj2>!+i:C-K_Q>9s;N-XUP\<aN$#jL?dAk0'C9<`E
%D;QphbJ]Q`G&+<gAeu.kIs<hh1Bl2E/Z5HBT1Y"co']eJq0-$mW[A#?LG9Nf=.J<o^YKjV[@O>9@dL5f-fG.Aj@G`rM*O&=@/(K,
%I=%H@0_:]t`*J8c9u/]Q/I%`e?(W6<HmW>9kk9;6Q(;Ar7ARKaWF!MmeU%7;kME/*C\Y_Ts1ea4jSDQZYG\uiU<)C(1?,)o8AFoa
%2h%bek/MFr4_W&bgpl'INLcaUF>1giU4*qlb$rD]`jAX[6b$tNJ),DL'n]#q?o;tL+Q)Z%&G?`pOcbGY,:@;0=Di0WBJ@5$2r>$o
%:%<75`Aq4-MVNgYWU+H"P#5IRAo;j(>5LsN5T@h+hrVAq!-S3YB?>04d!'<nHegfjb8n<gm*J_]oKu)8N'(\g\b9I(b/E*u:2D/o
%8WU=p__?8@Q-(jAV<>,Q)uX0cTgbia%-,\m+IPF\YBsP[0lnk.T:\%5Se2AHWtT[gWpU1)p_aU*'ihu0"[t1h-RMjt2tJXl#dHG\
%s&1"`mOTZI$ika&)pp89'7ITdm*cT)`@S^cq@L@(s(tDQ$TS7C$-feY@&]rubC4809*OEke1A-#3e+1iL3ZT9AbA1?%o["P`'Ori
%\1:!?\*@IpmCNtU2C#0.a4lh]]7;GZ]s5aM0Me=bOsT.f&>(HK<5Znoh&Fc!9W\55&'PIp-kun=MbGL#XZB-B<nQ70=@RJ-bQ#Z=
%/u4M`-kO=b!&On)q3S+t-p89aUf#(s9[h8U,!=U1rtc.WF+,c=E;=Hg)<eGUWtXr*33PNpjm1SP&JbZK,:EB-*]'q$IG'*j>5cl5
%:/%]&*DD=$]6CT.<o>3"N)Rd4jrH%&Pp(ABK;h/6LWP8*i=FQ-@=R,!iL65]#>]aF#eARfY&U1VNAXFj)'(H-0G1))'gTLKh*Xc.
%;1t9%Un0Fj,`Xj;]g9tu&-^9)E<lk$[0;9i:aHiRh2FaT"eq$db(C/2>#Vc'U0@A*qKtH\Vu!Do`#.ShTJ(eNR:#ft:UPJp4AL,m
%4].=H]*$C5Z4Yh4hHR5VZlJZS@PS7_!U*_CcJqU.W5a^_4]_:Xi(mbhpq2u58L<%0@du<pd<fheHWS<THatmam+A6X$jnjs+TlZ_
%G%X4pcIu_gEu:KT(Uha`jUtPu:gA\kNPInf+Ni7mU/*4?B#,[_,JlSs$5#RI?G**C^an@5F..Ae@'+NCjZ7tjQ:3o;BW2#BIsYra
%J=4J[DH0a-P`ehAl[?L=m1W-`@LIe89g*#R?2:Qt24`MXcK&+jG6+54+0=eF?]at`;h;R1@G=elZkPY?X2.C;!#mI7gA)C6W^ZZ7
%0N,g1\*qG1eT7YS#;SEeVA/\I-7W:b<!AAc^q^=g;csEmrE([AXakT'%(Y?p>:7:)kh.!qkFq!N$2auiZGNI-<>00lW_nM2P;,$q
%;:u%Q1b'eC+=e?EC?4,a,Zq^T!ThUn==;OC17m5>?c:r7Fd'4)>[PS3"LII\4hdNSd0*KIOu&u#GW[BNFmZM!fk`G03(%L<4g`^Z
%h`)hWQL7RSX)jno)9Ekhaa-+>c_WO_j\<fb".fueSNsfOF/cQ4DpH,uTXEfZ7EV%WXZ<rp>Ed=qR%5AP+:1SJZPZEorU&HlY0AEk
%-&5>U(7067MI">IhEa;<%&mcRVm;W2We8B`Q&nFfkop`S/KfWp7rbY:$8Tt95i:o@+co3-Q=#afF:^A@F#irIBM#gWn&lPRM$K5d
%0*dJQ>LY%sHp-;`@W"Xi3Yi+(4X^G\mGgC`e1r7/K><HTe;P]Gf/CUDC%96(82sE)`mY+#N&C%'C[f=NauGcR/1fIre?"r>n5L)'
%B,o+WnG((qb,/2A,7`*bPCW9opc<%1dqW;@;r@Q@hLMbH=$tO*,$n<.A/I##/=j!%7Sj=kQ@&F/J0\+a@%8'IJ2[X3[B'tG2W<?3
%Y>LMi5jjSrgBZ/'lMAbc+r!&i`/N^Bq!l(m;&/m`i_E]0+X:un4+'3CTjgWp3n_X-3ZaNo]_#3rCdsh0SB.\ZjE)GSdAY-hi.ND-
%Pa'JV3dW6AdAY;dU,c9r?MlSMgUi1.P4RL[,.@;b("9Ct3!q*9<>!LR8D3/)o(jWpY%SMRkUtV_d#WfMK>.?>SK[sVP_s[X8Rb%4
%#OEA.#RL'++e$B`;u8IaYH[gSLGd&0(!!Q!N.([/YW46\W],tt"Ri8&E^C&O6]SHC@o?m7#M*QSb$?VbZ0]`+D3AnRjp[FMb)GHT
%*a__:W8bEp_f4"45*+Bs/q2H&EaJ^u5gC'9-,S/4ZEdtV"M,+UhFjLE`%W?!Bpk3B=>:..QQ9XITfLJ-ZtrZ1'cEA>RXp$JR\r=+
%h"[j:Q-iB-WbcK+MI:.Wkp3Wa&sQ5$Q[cV'TPHVhD^h'BT9Vg,0HO5i!MNiHY/]BmC)h9DCYaWt==#L&2fK['d]t"U*Dreiar/.t
%gI`-8^WYR/pO_tiQT4AsoC5:)ljU2_*9fdG[XGj0f98@te"Npi148P#[]2umouVA,Z],X4?ZN%3?1so4+Ju(h,f,Yo"iHQ.a".)M
%g*9e^cUU_48@T2iec<K4DG@BS\o`*nH5<]#e^G5g^RDe<2e9P%3fuGKHd*E%%o_b*8/J1'KK_;!s$V^#A.$AN(sOD3^bKA1^jt2*
%,KM9"?2XOb:52oV/n#6+o>nJif0MUm+Q!2tWeIgOi*s_e-N^.$a1ZgcH*>n6.,(%rLJG"up%s'H?bKOm.EGtoLRkWOIcP.2A83]/
%,4"&X@e*RV9<`Il%3+-E(j?oV1!8=n2DQG_bt07s^P)n_2K)E.^+p8`=XW%+Ca\77#qrRZI7u[N':GOkQ&#GE(<"es4NP0tagS8=
%rcW3FIl#.!^%c:r1@l1g(ECOh?qHW>3_W[HAh\V5S9e_h!0GW<(UYHmK,!R#VKISRHU.]]=3XQ0B4f,O'CC;rB,u6HfL0HSQ]O>g
%k/NaDAPO];7YiDU@=a?;*PS-2:q9s#7uGO34_.GrrMonYSGK()S=q>K,\lW&6$A-KfPZjNc(fcf>Q0Lh8q>pHPpirR?8_O&PF<@)
%>SfnV3J&_K@f'1Tql7hSJhNWoF#lM83.g:qqT\iT>`D!UrpAQu/fq9$8u>u1':#,p0<S5L#/Fcj!hgul/8'M?5#[s_m?!$h!lEe+
%[$V,0MUrS;C7rWKJgr[)[^;m.fZ"X.'!BkN&ch1`hOQq-:QtjuP*!//4D'#=ce"A/)W$gS=_4m`d$AhElTX&pbO";CA([<E:WqtY
%SQ`lh$k%7=oK/IKC7-B:Sa_BBdT<a&`G%tUM7O].&(7SV,.RBb/h:8jYc)/4,KN3>.d.bI`;-u(iHm%\=2?<_*49VOs)r<Wf6frd
%YBi3pM&iY8A8I?K8`cfL07a33jY*:Of9-N'\08@/SokC+c]c6i57r9ZSQg-k!N/BfiZ[5V)F*$Q,5mtO8O>us.Qf8AFh,QEP<CBt
%]4oYEMS1&hZS$[V-h@I:fA6[c.[2?"jb013OQoO1EP3-KikT!AffaW^d2O_FMC`C2Z!6=A.OqqQfXR-e8La9$4FYD0fmHC@7T93.
%Oju)'pF+KflQDKBgY9L!):@?cW0Dab^O!GAOhD`SAFaSM\%VD>d>Nk`d?qCJ#V[pk1!8h1>3Lg=8b'5cW"ij<YZloj(/W/&kLLG$
%9l#Qkie<YLLP`+US\C]_e9FNYT!KIQaS=!2r?l70YO1C=gcZIOY*]^kY+A[!Qj^u-H"8'rYcMF!21d)!GDiTIS(K):]@iFL^1T;+
%=Y1IdL_QjjSLSGnH/b3^hnYJQWi^7V[u=A%2k<gIXaJjiR'*0NYhS'F/P!"@:K/$9X$4+JC,[0O?L".+<;iP/QAM)gS!?O"RX-28
%"`CJ41R)\\+bVT_0PGZK*>o#rii3`r@>ncFWnZ.Sh0'N<F4&q9W-Z*l?hhb:YEN:$#DkGU]b/Tf&BQVSc&Q_ejKYuQ@FTB4HRgU@
%b<g36XOT=/LAdnT''K1e<[Vi$gkR]rY7D;%gV`JQFDg5W0;4i;2K:':g8!,niU,Oj%I*WYCJX3G_*7p&ZTp`no\fX)($330mftae
%@$i.oL=U8qId+-t"6(?1bKZY@p#O_35C#3eh/g>EpNO?h'3Os2VX!N<:!LX\ORmWBJ`9Ab$YjG@=7AKE&;3YOia#VHd+B6AFAfVo
%`3u@FM/fJZnM]L`["-+D*^H[LNO.9.(4\qN6Zs[gr3hrA]/QIB@6"=(YZ2*4a<:!bQC]1#qg-d(Meo,.U50LfZ#l/!q19>G><T>+
%N9LFj:/1!5J^InSPsu37T@C6P'04MgDU=(-l\Bg!9q+Mi>AO,MQk2I3l0IS/!CAaATk'S]a(uF@^@&<2kL;srE24cmJQ?UQUe&\X
%Kcr#"N62F0!3/f+?PlSf";8n>&:i:?@,S;W8'6^>1*eF]?l;j"MOtC<&t?FkpkL18JBb4,eO$5:T$HfaJf?F#>aKcn?N9E<O=i;I
%e8-[rXh.'".CTIj_AM0"NIXUBJZDKf5(Er_lIDUibrDi1e1TKa'7ggE[Xgi"^2Q$pYX+-X,sa/aG>nQqp@6F[4VCU/=lFspK$sh6
%hWO4H5*]ZXZT_k_-7jB6_`kmHp!GfQBJi5!A6%!h:pY/k\W/c&.#61&bcOL'X[2A-o&u50/P``dbMBaGBnNQYmF4J18)C`o[:jFO
%W+%IQeXui1I%.*R9o$"C+h+6D"LHibnnm2jAlkAU&?0$dDDB(Y*(Uq6;:OD$UXX2%YBqIfS<\.TS$:<;YtYOb$p5QT#[7[iFH:hX
%Xf(8WNgH$\qu0I)(@CUh1[D8bGP('n(=W$C;-QT_\mC>^D=>ath$idg9SD#31Xgn5Zhq3>PHRs6^Y<!(+8:GrZ3lB2naADr/6BaJ
%.c-8(/"uuXEO5O]RB#?i*jo1Y7pdUVZ%H$>n>Hq73VKC']Q)e5[X39`l?8+n>@GS6'c+3)S&rt<T9&Hs&?l(7S*]\2ScSCDnS!UQ
%r-m,)U$/h$@OX'23ltF%/[V0jEuC99!e^<I?&SEd(2#P&:((?gb(Y]pX%.%&l+=e!AaAIRW7s%Uc"9[Ri/5eAYqt'>LkYHm^=!Sl
%1"l5>:BVAu\D_&*]11LW2r2!7/ab*=2j6Z[Xd>eo\&raQAc8Z@1YH'oZEs3Pg>]9Uc")#O[Otc;cUZfOnHhlia&;o(m,q&c:*S\:
%b^;X^AX=58]h.jJZu1OE[A9pUk*%u6'eHeuHP0Pa5MilWc/?]H_Tr67g:FV?o<*Ohbr-8cb[GHt1t?Ws<)FXKfrAW>0G(rUq"t&X
%lMA"<6JU8;c'OA;#d"1"*@<"gGVb%BW?XH#Yt+!)F[Qg&o?b#3Lk71dd9'(4'EPl3[7"k'.aI$_1P6#:XcnmsF@6^HCW+G63hjLn
%Kt=^]Np(Eh[&#!n1Vuf%)W/7YM)8L-Zo&Xf9$/EL`0lSn/dA5*s.^fb9h.$^rqHh<HG=/Nni]Dc1J!b#clb-RWsudJ`kt5>/=d%H
%5%rQBrR!3!NAT/P8c!f%]@-skBDnZOeaCEPT\K!B[p6iKq^NBCPW1^QHXt>4-o\4H/*K;%bet9[PZ4j1hS!g1n=Z'>p[@ahBoalq
%W.XW:FKg!?3EeUX&hmt8N>H&%nPNQDEcG)?X-3Q%Tc`k8+UkZ!VeGMa^)iie\LNbRCfT1]Zpe^gri"*/(h0.+G@ef`CDoQI4[_*I
%_Z2@Yr%Y[gTMfT&iJGBc9se%S+&&BJfKW8lhe1i3cHMYMO#[s:,14/:/%^tPPc<"JkREdP0TEW$0DncRI/*Oc;KLh[n9@jn@PY!8
%8"pu_#(D6J0WD>*9L*/OE9^laBl9]WY9hO<CM-9^P6RF<M;WE0"5.fdqdZn!1F?U/WY;3m6"O.k4Yufa!cKW@,.=LhXI!)>o4Edp
%//]NB(ir%)'[E?ZD&K-MdHs)MC$$%>H&KLr9S^i+6^l\k/#UFfRc4p5=n\0`##2Gm6kKeQMUV$50%fhnWOY[>H7#E%s$N>Z`+/DX
%EMQ#+Mde`9e?DYR`ZMaKo*"Mq$baL)DUHW8$AIALlbm/+@6&oKKau3opI<"t?gLNBmU]J^JTo`"^bqnaNAK&8;!E&6qWP'f8mhQW
%_McDu#thFh!Ar2]J[12bZI_%]$>tdm#<[L2#T7#<R<_esaJf5tGcN#V8VWr!,1T&]GQn?]>NnL'5X!*p\b<b`B%m!/L(j)a/[!GB
%5GmZ7ha1RQ%cf:/q826UGh$-Am@`PT%-$D=DC(8RC$sHL,>p&30X2m<o6+L1j9Oc_Q"*C8h+j3,ilST>M)I<QPgRK2/bD]8;+r;L
%UE,,6dC-FmNh8+&GFr^UZ/s:K9[.@Tfeh(]8pXIsApMg,+RQO9m2/m?pLK;,+V208oBD%HPWcLY_e;toLkOugJN]Lqhu$;`>k=+@
%Q.FQeSd-4Xa;-6::P4GC(<L;5LqZMiq;<H$3a'02W,#tS#;70F'-8)fmaNI,f6r^Q/4Em4U"!m#Bd!@3/'gj1I6'<@@YFF1K9NE:
%W[/[@po2_OWP7++;f>a-1?Kd\&7ee&O"us5!Mp',_o7),&1<4*A.s!p5k#=83/Fb?>3r/Y;Xu7k;)*84j(JrXpM0kX-?DCuqXdAo
%4f[[6cKaPWNGt]"Fp*7I[B]koF)&7WA/j"bH]W2%E>_i(2/?W"/VE$/&J1)j5A*sMp'C1P=Lp?a$F7>m^Mt-9*>YA@FZ@0sJFV[p
%0%i1lGLX"SMIF*AR";[IVJk32kR91,j0]^a+ANf[gNk+^1D\%VXhSO']$4n*O#E2o5MB8$rGa@bV-uNRV18E2:,k(&Q*nKGml-6:
%P3#Y<>.4&MX/$?NF>dNDE?Csej("FL[[9W!5&/]T"ep4#)T4WuWWg,Sl;:c7HA+^:a33&WY=BVRGWk-ia2tUg>5JXS]?V.D6V_+k
%HB.Q$0GB"k^g2'H:fU!O=V5>@k_%!D(A&9KHfD0!b$sggh(pp%d@JdlW8H6l9cC#M@CTKM-":n*nec,b!`k&']I_Z8p5dq8Pdp-c
%D)G9_Ek36)TCLR-[^bqsn&<JY=6Gd-_u#Ct`q;@:/\PVp3:1V'l4V#[Y7L+N8ETrPXWB[o$!ZeLNb4#d&ZrJ(Q?R3L93TOJ-^b?*
%I$]%dc(iW)T[H-ZJ3Y[K0:RI<I!%lC$UY\+[^>92Bk4<XK[kA4nT5@bcqQ7hU3rTE:a[m=fb0IW,J<A&lQJkrM_s$&SRpLJ?5^bE
%_h/8)O#Z+N<mSD!=#*\9Qogkgfb5[eH>naom(juI$U,s=Ep7G5b*MeZr=%4gF\2n'e@^-F]]Zd\GP[Q4+HnC68n;M13#7a,R?V=_
%PYjTl'cog[ND-Z7j+;+'Qg2@7o]#H.U[H3me?"E=49:c6E>B)MouRrWEN*iHKu1kRrW>&pWY[AKdbTe%F>M59KiObcP#LI>lgV[.
%N2Po9=dZ@nP,X\f@i5^r4,f^2/]#;7!s4h-A?KU7o!ks0],5+#TP!R"E]Z@ZL@Z7?E%VJ6MMfr(bAHrkLZ67(bRjYMSNq$KZKMTl
%VnC"65*#,*dC]%)n6MatFW=40HoDGNGL_9seN'I+qs7,Nmdni<FCk];P7%W:!8\aim[4d>*\U-%Z^a-fk>+0YO?:1u6ZjX.I>d);
%=^iBh:!XW!T.kO`,*p7&Vmmog_^(C\,[H$(e(s3Wr*B&)HE:W*SG=kOs(:>07cQ4i+/N*#/pZA-ATOECUTj&EB\f;jh5.V%\4;oS
%8P?B64%+?(noV@lGYrDt<H<f3mMHFY%rTLWWKkGNT:JhAGe-a>K"Q)WpB[5*m,I#p%<YhdWbscc'"g=Io45KD3!g-N`*MF`_"5SE
%_A'0)66lDG-^Pk`Mh+#tNIj&t'iEWFB?EpE%o=/-F=)d6Cf8:G&S;#in*t<j.Ah4bAHrHeN2L^`I@nTJJ+HU/dQ+%1lA"s!NC7M.
%kP-(J+WjIbpn<qi\D:1?.G\V+TD^mpo\+Dui4P`4B]OnEEj.rE$JEa\9RY>hW^og1aZs1.<j$Ku\VVl:b2Wal&Y4A=E4W-DFP6U]
%UXMAf%U"FA/"ZPa3di_DI3gkd,Ip[DiVfW.G6102og7h%8PM0[gKGS3Rd#C)bA).'X$(4LU-3g]fc+_cNU'GpTC.$\UK#j'/M-46
%Gs:M:N*hM;Q$GCH\!:@EAKu1GD>-YPidL.QSoM0/a'C.Nhq^Mi)\HR<*jSYoR52#75Iuo-CZt[c=*@ZF5]`_!9UV.h2t*&I=]Ulu
%h>+E?ZGj3bq"6bNCjJkEgPif)g=$'FMY]8MgJP"g&L-UtGSL5/bnUC0!uD%l]:VMW=fu!A:h(ZAMBedOIIC?&c4<(V57jc#rX^FY
%.?QZ!%3Fg3Z&NJ_iQ")-S2KppbDt8mYX\G-=Yc66mSU#R462C%dH^+B:QeXf5'EkV*_3cOCjU;Od*;'o<hEBp=)8sL#%m6B$"(:&
%kkh8CCOP"p<A)B(CtN7SD]7jIF>->ZrCIEjadfdT01K5MDng)h3S'r`BZHM+`mn/qAU)h%C<c_0UUGE[csM`um9ZBF\fKh_GVT'-
%C9oAX9X]'c$V-Oh_=M#LZH&#QJVNAQYQ.gnRr_,b8sa#=aM_G);/YBVdF)LJ>Dq36!&X0,10$Y&4DM9;O1]HiCA.5fW"Cl5ZKk@l
%GiQ<ED"mLJeEn*fB#/Wn]O8Qqf);UQbPHVYhVik\1#_eJJ%Otmq"m._4`+4;#1_'O[1^7+&DW/T=jX7A^5fq\#K(ml_G6Ga@-//m
%rD9Q)AgU%=6X2*=35R;JUJb<;(d1(IJu]'ZJ(cEUm.n":FY[\_m4PAnE]^_q[YiuL%i%Z1[203^%AkGKV'Eo,C?Th!*FV9dX1I=Q
%L:k34$B^3o;)tc$ns?EmZT>@WH7+6MO"oWen,%e#I/F"oCX'(b#A\UYCtYiL=;V+)@E-i"@KLR7#0aM"mj\ihPtERtL5JInXECp!
%>&`0VXi_TW@E!"#4/nA%4;?+nGFO084h,B@`ED:seAj1LI5AhADO't[?KPOq3`/6V0X2<CV$)\D]SiT`WUg%31-^BgFEcON:O<m&
%nC2$P#0Z#2Lnm?VbQ8Df(^.$g>/mV>X/9^[aB0-J-lT3u8p*Oll$^I_ou-WmSF`-4Ls[RTThD^d=)*[%ooXuMZZeLRa$a_2H!8C2
%Lf]5L&J8<X@9_AF_lT04%Ub6d@h;Kub0]KhFpm_HVI3'U=K:?N?bknZJN(l/kETS("FZ@<?[CVm1>r,/5IC^-*$PkS[,]_?(-s+B
%ie#k&<Nhb!0,?]pB!\NMPj]C;_H]=TMs'Q60?Uc0DNeFrSjq,C;O3#n;BM@V:urInog7`@Ck96(D,)?2hgMfB)D1<r&RI?TPVnc-
%VuW%3XP#C@[Qtj"/mq,Ck+^8\D^/7:@([03)`]jB1CH!Obo4VL/$p%NpDeoV+bugpk".u)6`Xt*%IE>\roTP.@Je.e:?Vo0oTRo%
%.I4D\h?)V<Ud/b+77UI))C0k\3:0C(JZ=O(Z)6]j"NCMcirl:C9F_oeUq!tT8tN14S8?KHR4E^P%JV+GZ\a'_l7+iI(fCu#h$idO
%#S,$l40=$Mm&2N=A6)_9nT'BN2oZ&?VN*]?Q=neeQ[8?N07s,Z)EH-HnkFMkK3[UJYPVQ/Htp?4'<7@9NJ-Q*BsP]mH_A8Eb@2E`
%(D&L^7+ZNF!P4fF@-h;]_2!oAl,bZlVCoqkGb,;B;-LaB;?Creqp,+lYMe%badsWY-!gpW@$%l`96DqhaU`b9iIBNnDJ#bbR[a2u
%$FbZ6b]@c/>Z%ahN61*ei&&X"k(%G7OhFuZ+B2=*WcTPhbR5ro^gS[oV(N^/n!(btnTu;[YZ2uc7n`>\Vs_+*#Sb^9AjgnE]q&;k
%/3Lf!\[Ftg(s>6_gdlDG)6o:4imJj*Xmj@3I_s_+1:&Y1)L]-!dHPGjlFt9F='bSf4coU326Qcoqd8VfjDHsNhH?8q?:_,#>Y-G;
%ls-Di3Fq_oh-)r7lZIWg/8QIo5&/]D4n;'#<eImJ*`[d#4S6]1O5S]LXio;=Y=IE/na_79C]$`<C&Gc^-qCRk<-Jt'8<Y-q\&DHj
%.X>t6n82o,L[ai-k$PdNe!]OHV`fU?#_duX9bnD_>HC;"L6%TuSPEjhF@ERUdENacM^?F(UK3<HkiY$GUnH*&;;Lep],phN-1,#t
%QgJ+NO1H@lf9.B=3kOe7-V+"oXRa'tSc0m)f%9l&bsEe=a"%V:^>Cd4=Ucs^%2ZrkE[31Y)Hu@)lD\X4%'F>d^nj50hkE:)`mlII
%9)WpXPQoPG4cWNs\9kK'fm7pje;#c-0qie/7a^pgbZ`;r)iEp7rNY#JD1?'#s$;S-iBYcH*F)uthlW$:M6]sGcpD.tX]j/pPW5F0
%l0bsR[?LuRD,k%&b0FfT"Z:`n%e*-\-Vd<8o[6G[["0(X0>>D-b#[>m<-#Wabh7LZ..(_1..Z-+1&[+$e/bf4P9iD-.k:g@'3CL6
%+jD;kGEf1X8TJuSFl'.>D2>$>Ir)%nfW<nJ9t>!#6iI]#Q)@MHD$(8u7BC<k(dHm26F&Ah?35S9C<BJIl1=RaT.IFh:S3TnnM,o=
%f=pW:.6dDt$T[0j2\4L(?T>HFVa$QIaks)\2H[@%7\LU1$`R,2QSs2RdK`od@/E,Rr^,FU<L?k<[h]<<f60i(T\SY9$D"J\P`SP0
%8Op?t3>2rBoKlo,pi^R<(\QSAUZ+cJ>:(+e,!3-1NepmL<KDlBBButXjQEV-'0oA%Y8L`"(PEn9TR]kRLfT'Lp1fbg)Ab0&7%#b3
%Hrr$N7YEP?a'6`KK-!;62%9@;S5n2<Hp-5^'ej>-P5:K*R8oS;mB\7QWI::V[DE:)Uuc;:Ap1+R*DE9]*1H:*N<^+/MgaVoFu%pV
%[!Jrr/\P/8>pP/RfOa(4fQJZYP/SDN%ZV^3PcG;6bI[<CK@R#j(KH<.);Eo\h&4V*=bU@hqXW'U\"I#rH@3sU_J(c\+bM"Gbs9O_
%eg_J[W^6nM#UH2,!"6_d!l'TYVJ*fVJ:XS+/'jB1a6&<9qBZUWLUD-j:9c`P)Ac5n,5DTSs'22"BD]W<1GDX+*]9oLIG(Ne<,Na)
%Ft.ocFdN`oA;EdB77."_F"a.E"<mpp>F%*ZXd-LuKWAa,80d_P0IbKlTAh$JX:c>EX5-EYZsU!UMaNa7bdqsJF7=?%WBd2A@<=^/
%]3"prbJ2jPdC$Zf7$M4q/3XV5cn&dr1s6PRK`J&l4uY4HhI*D*q:Nn`i[pQW"lFQP;a/R(:QWIPJ4')YWN%2i`E&Jm>=T?c89/>k
%")GohF)N$RV#oG_>i:Z9#<'+Ve*ZJcDDaX6=I*4mbBq&&qTLmIW]B4]o%Q/?<BoWMDoqA9S@e<3B;L\lIb51C-l,.p5c\cV<[V8B
%^@rV>I`:"sKFB^")3]p',cWFd/"$N!Z5g'#EDcAVJ=fATF3UB=-n\8rOH5Qj&t5O$B<i1=Q=Y^1gB.[pFj2Cp$$e-K%!ue4D_.=7
%$sDZ+<rc]q@s59#f5j)iat]>decn*I+0pH&qlES)h/42[G*#i4?J(DL)3ETY1<UeRR2[tRL48W^De9MB614B^=BhIpqs.Q)=,bq5
%?fn8G>[@tJ$hg1C<80FAU0t3f[G$LC5+K8f&CejlVOM+)78b&>plBWblp6pAIGZs=bWjM<lcD?`J7k:9B[X*aH:rGiq5pL:EP6T<
%$fk$hF;^b)Fik2/*8)NJ"gnWU^66`f;@+a@b]50qfh^$$or?@,Lj^P0QiV;B-i;W?[iO'mh)59JP9oh?=G<@ZfX3nAjN2i\#Q<TR
%hsQKgDl-S8\,k_-<6$fsG\jeS<ehObA-,e]Pf]<H8sfQDoqYHfM!nYLB`&%t-YQVs?kS^&-UNN@Wa^^FW'`'X:I!S!.18=t]_02d
%m),r:i8C0l[lP2fOY(hNWBO\8p1_s/(,,!745"!<[/]42qPAb5Qs$^?&Q/obGc.AG">/e+MXY9fM:DkN)#>GeCipr@j@%:@g0aTc
%\E51CcuUB1:j&0VOk<o+=3;sZcFM'\5XFgTK_B0C&.e-e6bgFS;d^MqgK5nT#q<cl$u<quL1G0EBn4;J@M)*a<5Z>W\$d%eLb'W8
%<g-3-s%Jc_B=h,E2=$,9;%/a4AEK5mlr39n[#PehY%?>PWJ@m.W0Wh021sjMQ,h7Ub)nL]NaL8a3-UG?9;0mGGos!C$Z&,YP.QJd
%Jlt6ZZ[qAp,;eUlNTge)"@'FlC[](XdN%#b^YKdS[=`WqGnO#YlWUR)OcYe3"dtAfNOh\f+<&%a'+.k(N&<`@Z7HBgClqTD7:<>#
%kS8*n?Hg!G4\mF>X=$?b<rQ,s^6h.Ag@MPcKiSdiiq`FLID2<?;j1isZW>0,4Xtc#jhj:4Hudt$EUm5RMj>-i8c2i6?jq+'(=OTd
%LZlO+=ce_iA*Q3]n5l;,9kKDWdC&ETJ_M8i&[Cot)fetI_XeJXc,nJ4'dHnJZ8#"O,&Oo=H@-'<rH;g!(IM67s(QYhC'@1M;QZX*
%HWaJ4l5VC$hge;$N<^G6HW4FP!A0kWJ^#%T6\\\E8CAEf8bTCnMSCm2A8P-U'mYd"ZN89gmsG]l[o#Ta^Mo^PS`4sVY:"\@%6A4m
%Z_]mgo6=)rlIom!ZFOMsE?[kPRnG5_aG33u,s,p#&Ls0Z7ttZ`ZJVMM4e&?,@V$R>(8>6o`-"21+aIrOk!j:7YQ.2tFUr`9(#LLc
%Mg#`deG8FY)MBA(F1BiV^YKjW[96L2nQ2-B"^+=9A1&EtKuO*Z(u9ukmXifVeWIsD&O/\t'MU,C,5p+&'q6S.3ao(!d$H>)A@!D_
%glF8oZ6VRXl&$+bRp07>"J6gFqN,63;;'BiTBc%@CnI0010+$a`+4o9!+5W3:H#]+7S_10l+qF83c^ufc364f"?<BRRoQ(LgUW&i
%=cd`^ga^)W>jSuLN(+/X@omAU^^jbJ=_BQpl'sk!\&b\o2_%FhTgtj*qs_bR)/R/C^,194[sJ4g\mLG*9WQEYf&T_nPHNH^f5KXs
%7:W!UIg&sT6Lf;*dR3g<TF@J?I_iQiSeE8o:,.ruV@=Op.!>JFn:Gb0`/H,eD_#cH^arfT(u5sa]@u$*WSX^E=0&BbeTX/)?[:mg
%51sI%ZT*L;E,&l_FaSC6P2r\i_4pb2NcA,UK)&g02--J4P<43RTs#5f7dbTJ@!`]u,'nYh&=52q2"5)f]Lop6oSk>2Vlj^P2QB_9
%Sbe_9jW\$3MV!?i1ShdR:%8]=8Si(*];`[Y\=OG0=k$Z'WS'p&p_W"O!D.8@fS1AN_ni3^*:TUb%7I&FAQ4X2q')Rf2lg=(9W/r:
%Ho]-D;_"^T9(g)m%5s6#8KJ;t2_e<X]uS`g4^s$oeZgu^k!*IE](f_6aa*Pp"$)!:S&6cM=.40s#CR$87V#[^#>)7=CN^KPD;g=<
%H0c90P>bF%etUkZgnj)aCt#TMBodK'T[C5c8p2hjfaN%(=X"E1,*3@T6#1@-F)?]t/ZEu%$s!m-3JD-e;>;>&IWJjlER$kT2l#*4
%7*#rPZ+#8k'dP:;G2A&I3uLO']jfj&\@EC*L-kr1fHe@#D:urK#7a]UEf?+8*Q;OBf6_m.fq\BUD<O0[YhmFe;jT]6PAO61)^g$I
%2Tn)*VW_`e@Qq/iA6?$-pnbJ+23BiuW&XWX_>0+Md/\EM<#DgSDbaCD=m0DPm&Wr][RuI+8.5/@O7c5r,"^]tb55[T;K_fqN4KnS
%`>KBk++hP*VNGX:m"mr":tfDjU&pO_'"*2S,KM"E:@2B5K1T"8!JZG9g[(^C"mrml0f)$c>2\\&D\D#d"VdN$f_=F>$;m/(j>[5=
%ChD2c1VLMomhPSc!bF90SHk^bY(#>BRp]t\-_fi4@CDmV0C)mDk@2@M\mI<e'TL8&SR-5P=rdt\RX'^@J#5D#?/\"D2+8b+dM1Ub
%JpVcflLQa\<2Kamb:r!\O+_t+'?/3=kAAu>^YKjXhor?K05?@H,q9LZJUo$`#qVDU_;ZQSR(,CbH:Y!#8<"4>>,SoBBgA0gLiU`6
%#kD@jFdC`2Q^h^o.sY?h+Z$uU5s?/%Z^Vn@`'lKPOZ3Du>%_?TibF7Pk;pPoim/=,LO7+T])#G,a_CE@lSq=/i^#@#Bus-`?,i-i
%.E+ubl8EbmCQn5o!8P+?6trl1[i'!=,-f'.("#%YJ<]u]2QfsO'pjFs'HXJD@6QgK8;<ek3+9C\Mr>'ZiqE@ipBGd1K[iu#ff$%"
%84q,QetcDEk:3Nc*WY8#hdruKSe:7(eD;>p'B.^rZ>'M8lBbg.aMO_V(7Sc;Qe7Q#"&)ZkAd8[kl\@P6\k>URY!a7eSZsgApj059
%,;*p9aniM1lf*\J[PO5;aI.X-pT(ZCNc&9DN-_Z-GKSuk:f`"H'WBf4g.GKWf."LN?ou5g)-InX&^gKlbM"cUdGfiH`N'nB;=U"M
%GJrK0_]p<j)8)1X=[]R*$JJPWG<;a=StT.`]c7EtNcee"Op4t@S!lFW06&$7i1Y?/7tJ>_n#*8\9g;0Bk+-4P>UNS%/;C%#EWD[L
%Z'q.D?fYH!Ys)<T>%e\mYjBoj/mlqJW;u=[q"BC-ie(joV6B`+Y2JPZ]AfnCb)s.G_-VY%!`7"K%kYD(du:O?(,^=jDN$lbK-^p?
%0c)nOkHVXNV-"$kKYEj;522lm5S,_piUR>U7&\sT8hQN7Cee]4om6MEHUIY!3L/$r?ro!?kcpI!Hq_9Bm'`*!Tm?G&W-Ucm+=YX1
%Hmet-&QMh6/S0DM_`!TV*Rm]5c(!%W0tQrGes?Lm>q%iZ%f<QFGl$]GVls_peHL&0&1KgpOR\abqbKtk?Q7.ET_jP'\^N:ii%8il
%J\g'Pl)A(KoIW)iS43c80p&UimO%(qb\Y%p@P9aZlD3l>BN-\$Z=Trn._TV+0,(C.1Qg2aM^PUe^8&#[]/QUfn0MoG2kJ4?ETqO6
%gT?MHU"YJM8(BiQ63d3fdBqQaB2(H3p<%M*$jPQqPe'8c.pZ5B]/L5;C?:UQL7H)=:NcM[[aVmOLm6=0KaPKdFe<LI3p@>jh`*#'
%oHBB[89?+)*6'Rh2_Wiu7bu#>(6jW3qM)(8MhW(j:hVg]Mc-56(iqE2-PY"q@1X8g,X]`fD#_Wna]P(7%<uQU]VTJKs)r<S^RnbX
%0"2>1JJ9KHR)O$C92Xe,FHZUU\;#tNe"b[=j@p0:^3!MF^Xl6C$,,-,\MFbFrUkeeUYe6.Me7J%.m/AkT-X,ic2_!OXr]aIfgB&a
%$-HPVWdE"/keWBN,<EhePX*`[dPUZ3&PLk>@Ts]$'[:Z`_bYUfg]:rF0-38Ybj=D"!_%_,]G4J7ek"XRIK-d'K=VnbM]hKkI:I??
%8>CG?h6J*-PZ<rs?o.'_6o0sJg9OV#`Bg3U\MPg<kS"ma[_d\ACZ%r:[o"_jB\B2Y1D$8G$H4/&^O<W$(*Ik``$WOAm>1AE?=-M&
%Wr%u[+=0[=5A$t+p3iPb3i?#!@Xe!uI'$,$!.GK5c"Jm_,!,$3W`/=5L=7u1`9F*u7TrrZ\l"@gbn>3#$"/%tS=5Q)`oUqBG`b9T
%J1N[l7dQ=OWF9TiNDttuKJ?RF(e)r@J%IY6Mp*A&)hhcHaB<ujDsIql?Ug"tPEfWaRof_W$KSk#`MC^t?7T45K4Ue[V)(b$iM1'i
%?/>;F%8540Xid4jOOHf"_gSAFSK%m'n+)_&*n^-,?Vg?.iioN+Qk(ZQ^%P0m@#+Sl(`1\i,"]%k`Wfh2RW<i6[q4%:e:U;oKo*F_
%1Ip*,34IUsb<j`g^>5R:_@CkOC=F`@h4r,:*bT9@rlpr/bp>Q:oo-f85/H6ePABJcAXS^UW5"J79bX-W%*%bRBTJnJrZC6A4+?!!
%#_N^0Oc.YkpR=W8.r/8=(A3Vo#\3mWha4?n(i%l6((;7gHdo2eH_f>s`nd>\O5`H:f;#c6\SKhV*aX:Yl8Zee0b:_9b_,^6-._lX
%f3ediGlQ;PHi1Hf:bf,CW1<DH2iXn9Mr2^@[3L\X2J1IH`@^P''kj)YWker->-pM$.(umP85j_0]3*7]5Ad+1QJ8IkMt96Dj87OK
%HWg1t62Pl4f@d0bKs-^^,oZJAC9GU<HR<#78WF_J2S\-+0%BfTXPO:5g,EA\XP-#<aWE-nO[<@>;6*-4oX3?k;lA`Z8**&T`mpim
%r:Jh'GhMNHq5E%&Ia)Cn\n\N.mKH*NN#W8^!`_DYA$bLeSqn_JghptPf188-$FRH(7arRC)j=!&VQdZ^B#al%P?,k=ZFe+fBBrF<
%(;7W1@X##@*BLT7SPQg;iA4U&2O6Q3HeDeb/&gJ'q0m##XssQ8PA^3.Oo&\)]#Uq,p=!q49>6^n8#:'F6&3*kCR]lh=\!&A<qlPq
%_b\:mD_KfKA'_\'hA8snq5U]srM_<S0omO[^>k9ZY)dqH=LIG1cqfS;6!5Yem<&$J&=f$8e3hEr!Gpbh`A+8`4LBQ5Ki4KV&$9(&
%HkR$Eg>[2YGcD+Lm[V)sZ:3YM:sm^2/fn1]'&lf_Yn;`5jjpe+D[(GX:#ju0Fc_gqcZG8;V&(?f;%u?sP?JKfrlQ>Ucq?\rfh)_H
%VbNZNY/[PR-44HFCJI?-!&Ol$T='@\k0!P&b9F8<I*gH;h76nNWK^(:U\,W*3=jq[M_DFiOCqY^hO@<P*Stqf28$]-@R(flNh7AX
%A;H=sDd$pnF`X8DUgK:bPTA-5q@4$>>(?QMs-r`GGmbXOYGIMWN9!6L>sd)E#W1Bp1'!=1l0GX5dCJE&CrMg9#n7B^Tu"E\@\2&:
%S*R;A-_g*fEGHHN)TCZ-X)%BgM1ononaq'+[.;^q(uaSi5:Tp!M^h^2AK`m`XNM'1nUhk3./INFNZ_Wal=Qn?iaJXZ:Y#c8$orLH
%.f-7/&PQh]SIa28]D06=A\uL6ImU]EF9_)/&)d(kXokNem(0lk^dQ&4[`5[0/hI<"9.%2pJ?]6GUiGtCTE^+.qXd0BO./_074K7e
%me<:/K.99g><iIiqIXgsK#cH$M\c9q>B9&L=aq:GF[M/rA'cO1:o6%I-@l#&<YAtLMo!&eOirEPFQ?n8_#Ro.!N?q!H0N>g,25F%
%p*mh"DkfN5k'Eu3gndk2TrIo"FG?gAMf6d0Mse!Ll8CJ8l-"d0A>WQs.(N[Rdqa'=Pb:k09q55[#AG$pWAIM#X"L//+5Q&CH7.h3
%Wph^'42\(D,M5u+9p"D-V=scJNHe\hn$`D3@-mZMe'J=+HoIpN<jJ/^0a'D7/Sl<SZ^e,Bhr*f>$-3,0M3_u+n5BLSM\Q\1ZSO-P
%i$\fno70AC"a5;r6K6_b5*JG8qH#Y?;fbL1)N*_-GhUTA]-1,;CntGJ.=1c%DWqII)KmhYc#tEH4fAL>[3Ts6epTDV[m/"d.[u_&
%^:c>A2X(q+--hIJ.H.aY:(%DERCGs=Alaoo]P-)nEXr#?TS9(\C.j@7I)]'!IVR-)IQgTEP6(/Vc82m@4'sEp8FFK;eU2(0QB%hG
%U>H1!/E^&UfPN)Kd0dQDY\0F*\%gE1D`kW([(b,aiB33*oqe^!,d0OPd2[72WNAVEOVNY8;k9O)WD_K@batCh1aV@hj:q/#Ls*Mr
%:hX;tR'3B!mi\2>>G`q;b0o.WCb$u;%gq-h(+V8)Nar":&[><ml&CbU4DE;cN1Nk:.UQcJ)9"5VEa\H+Hs!AM^^[9YZtSRZ&Ho#]
%-MN^!.J]3IW#0mlBs`X4r3_)=PJNkSE@.l9_sojM`GslC[(PTkVPbD9U([dlEb`4X>\cG^.U^sA%Es)kdQ8k0Ke6_A-0=D;gB-P;
%FIXjEJ*jI`>'Ot"o6PeR*u8j!_U$cOE/t+6ADl,$.jE3KBRmT'7cAJAl.bn:3ZCG&6>7u?#!'+c;E&c\oie>:6*8W4MoMDoTDYK8
%UEA2mJ,OAfqk\9qQ`Yc8SPC#NlID5eN@K'.AuA*(NnI*,3<Lfd=%mIN$dPhJ=I87Z^3eA4AW&eA)DuVXGa*(MLE<kbV\_5[`H^)(
%jnYk00j`25!!HcQJ<>hb#%qJ-]HNOp^nQR@>S%KuG/,,@Yd'/JnNbbNBC3aUS6aQ=f^=U*H7FidqfP]aSB8$q;7AM)M7M?G.6o%9
%^kbI[KK6'br+^4>AQds4Ar9'1?A1OVf2.j.femIae_r6jcZneN>MOr,QWf`X(LN4a%.?"')V=`-o;]2BKY"7-KUIj1.1"E&]<1bq
%F\eMIdm>k/[ZG>T1(S&Y"QY=$\Y_ui5[W17:6R[c8%':^>1aBOX+W^giDJkDCeMTc.?fS4iXoji>)M!Y`_V!rY02^a0Lm>@_PJ77
%qHeeIfl;P/I:o\+YXf%\;UP<)D=a$$$opS?o(A(HY.R-pHqP?`Z_TVUb#4;REOO5I@1UlhJ+UPaWWXCX$b>oH:M%fJ:Og6;(!COM
%ChsLX5):/]RH:e=0T&n([`'fDiV_eI6a=7'opC^C>1;2=),:URZje>t+YLBuNEFu,WA,]oPYJa+/ttU1rHcDY3Tm$r2.Ss&=kj*`
%%R^/a)4*"D0r?PI34]i/C*]*'-gR$f-ER^aGlCh8m`V4NP1%KP$eU_E,h3"GF`B<4Ng.m2W\Xt9E!"XqU2!M*i\=5Ga[4bCE7Il*
%'iE*hf].tV=EnZ.K&k-O2aSBK-luY#F^[+]Y@,?Xc2.&IZhl`!01GEn(SZ/!*K/q-mSQ(NnOdH>eI*i=fD?6"qa(k_KGPgs8pBgn
%[)eA@odq[U@!]n>kN3Wqs4H:^h"_DNo7J!`Uluk6er2X.W[A-8-O^nVHWXIYbF8;X$8TI"58c4U9`"=+S?O<e=(s[5qD'.IpYQD:
%J[<qEG<K.)0%i:Cn6NB0Pm)midW;@u5LI)9d5smB;iP8:^'8*.[RGS*R_*h3SA@-`1mNpm?Isa)CW.m$a"0lCN.s<IG\mqNb@)FY
%4N9n,*2XNRkA5t'J:R;F4Q=)sUr/@ScN,>V2=@r9RfQh[&ule@Tc&XMB46!cCS5ZhbDXJ74Ho.-'7l;Inq)]t-gBo,HQ&4CRmAL4
%%tAB"dHBhp3Wa+[$M/Z4KqHMHn,<N(7#X/9;>22fk,Kf4;^WBN;r9/)m14=Y)K,sVZDaa<d8KM-ZjB#`e>9Os@(iutE<dn[3R--Q
%T*^qZS<F.];$lY*!cbJH\Vru?=d;mL[mReLQ#=jASY$BabHWaJ/DA$6m4TBBm_NUu&W9t(bWeDXCI.4`cZDc<QqjaZ$1Bg4\kb'&
%_$K[DlCde%\!EX]BLAtUQbcq_cL"K@(@@6M^D^nHo@K`Q,^&di5uMn[[Otc;^E.M;j4C#Qb2%7jb#aX$^2ii@oUYtLq:=.\j'OlT
%H\>Q/I?<`!\1qSW^ZS-EP!Vpgj5o5qYG%lLR!=RijJ/laq]s-#jcYH_e^1BZfThAB7_u!:f<#^\\Lt_3)nj01lqr1R$]PWSj"[Mn
%p!I2u=2@\n?:j)>-18cl7%Zh221r%5r)>#Z:P@qicdY#SmR4fO60n"Nr99Q__jSkC@_I2B:\oOhaRjTE,G#PB=cC4TN7kuHaGg(:
%<Ar.Gh33"6g*(B>NLej8lU`<u5KWfO#"DA=>HOsWS(iR5a7luVXOaOT@uW=sHAq]:NeCok;t?PqXS$SZ<3ucmTj`_%^M0JkOMQ_9
%?mK2DAM;83Mf7f<Q_f\jE;:QU7=0.#d\8oF<6JR.d\;snO4rSn/KZTL0@*/ENq$m!(uqpDf%>0n3sbXcK?::Cq6.3Zj4Ct03V4D\
%!#3L&a4s:`8$Qi?\o1b[cKlaC9RU`*CJ]ApWRq7%G1G71WVN>qMg!/\=(BS$382rY7aSrnetG#"Zkm#O[B<]:c6qG.n1+]*UA;Si
%'(/JjLMig%>6BV/+%!`cJEuESZ)EE:K3X/g^XQ3:YC>9aXgpg5Bl#l,rOXr,cL:k.a)YEZ.q@D;V*l]iNP<q1Wl$'tL?&S<+.kc,
%1E5c4Bn)<kq$6KChb7n(IS_>+a1o%]?p[B*80Lh5mCgcUe63EP`b;A&>C^,Fj7poh.r0kX4\#5kQ![S2+0i[c&n3OB@K&Wa@Njap
%Jll%P(+/-9Qt30NP@Jq4BMA6C6T(onOY\qO>K.ROGSnWIQ1o\Ng]#GNnQQrffGQ1C]ujR5aHl%D,1<3NYKKhj;DS[_<gi\Q>9/6Z
%Gn7ut,o:q/\,s<l*cb@ohIu7e?fjL:$9Xjo?EFt'n`^=*6Xsid%slW02*/ZUUXln!r*5Y6YuAZBRC;BIX-o9K5A43sa"m*=;;#GZ
%hOQZk/=Se7LfdW_&%Rk+lEELO,4XY#5ESC,9p1HkjI'e,0_l.YVW%:VjJL9Z,H7HgUstk)TR6cN&njkE;%dC^631T)Jq.V6PhP-&
%5FM:*Bq*dU&!GUQG@],e_AY#Z92g@ni,*M]-T4=,82-Jn>rQQ)jY4ELZ/g]b_.CF$!j/#5=.4bhL=rSs>&igtGp0QLZJ2R!/+?MX
%V(@7MInNh_P2niUF"h]Vb%]/\;&4QDNM"CEpL!sM&kq6ajQO,Wa%!:pks*"C4dBk>f4sT0Qmi:+:UC)f#,u%6Z"):hEcGe"c5rXt
%<^4j2Tth.e`+%jF7s<#@ArgCZ*?6%FH\\U\DdqJC<]")[m'<(pI2LpC6cS93P]iYRkdo;D"V"``Gu'j86^IY,S68:X1/1!d2>)@U
%<b,^jO!tNBN`-atYis_SB6JEh"GAtGW:nr\T$H'g-T\MGY:Oi%aWq\iOU*/^.'8qA,Fm9#"gH^77ik?X$p[E*6*Ji\[N(i9-YQ-o
%XoV-]:,KCKQW[aF""@Pk`lDVr,Si=g7nCHg9Q?_/*NHibMZb!^dYAE`Nh"!Pq9C3].!FGu<.GP(Lf)9qQhT:#L.jtU1JS.<S,".8
%VjM`*'dm&bKdAq(H+rdVcXj\cN)iqJVP!>tTKeAq>]$Z642$p/4`8%@`0,,fA_[fJf`_Nais+342J6*GRCOL7P])77Y,WnM]hDSE
%]^@FULXXoaC3Hn9J`I1`D5CFW,C;]mjT]UXpg83.M\0o\%4T_"Y0(Ji18N-%N\d*Ca3`*/9AJU4A^'cP`[F<#cu$2P:EdSi8DkOK
%XJE7c56FdhoLd1l4#cT0>*O>F)Z8I/*1i4T`l+MhB?#V;-J`dJK-RO.Dbr#\ip65qm^k8ed<a*NXOmT(*8bo-,.9/9(KpEni*LNS
%`(Jhs6uXeUn;:&#@retTpQ'Z@dCnIVF=LncM#'BjjaCV\eUg>u&U(=5@l;[!ll4FLPGdAo%[VlHlL@`P7=4YaIS_gG=M=!G<!BZ"
%cm)aWDJ(WbQYeDEO8:QMb6PqN4]NClfWg@tL3AC9W\A'iH"o@*Kgc]I$?FW98oQ..4KA2F`*5BqV;?US'8Jeb?th#(Hp>((b,YQ$
%61.Ir@aYoihAYUJc@naUFA@1PFoS7CMtXW?E$!h6\Y/nr\n2%g*HhZ3m9aX7j_rELh$iaf$'BKj+&[9)WoEs&b(6AE(\j1*nW3QO
%2cphQ-`kZXrr&]kcXlBo7^q9Rq%1'PgV<!:eodMSMt3r.%pCR=+)bDD.OKIdPfCggrJafj\9fZ2[!QdVk]V>\9]+s4k'@/(0H]@q
%G81/UA$#"Nrl/.AK,3"J)+n&m<IH<AaIuFR3iILZ*S\ihe?kCA?,jh92?i<,4iKKVmk^$aVlKhAgT".L\1D>mT$ri6ab1Ml=f=R\
%Mp[23ba2nl,Au$\7[o1C>\SJ1q6t\qqAU`[3s+7c213nH<kR*4Qn3Y]\DHUBLAE4<lU(^MV4mt!6U:VIbYVh<S8fZ;2rN,.q]LdW
%;^j/8M8.Xp#KrH3#0LfJa'2bATT.+OHKhBf0X]\3p%`pB:CU[O@2srt&-)55&oH77m6<$Koh,ZQiG5ntlB^"1FC0A1G>::%,8P0G
%DAjfUZdG^g89Ha7r),F1<dbg6;ru=mb65]j-W[1n-KSp70If4jSo:&72;Ve1F/)GG:.'_AILEE$$N`*KU-66H)q.6<2L)+oTtu>;
%jjh4e3LcV-*-B$PBP_%Xf4+<dS69lWbUU*Yg&O5V$ob+C;=2tL<o+6BgFN>8qM49@cCf2F*8aJ7qW:OUf]4uV2ls9Q'G2_Doe'TI
%G%kYDNKkj.!C(1&?2CeOVUVKoEQ67\9O[X`QC!lJqqoQP4$CagLSh[N_d,S+-Yh^;;rprs:kZ)^iFNe)k0@Md$@tT4R>QDl.T[+X
%=B3)o^BgD<qdY/&.)S[qNM:D0jflN!gRTKnR8a/2+C'e]`,<BS2DofC2<ZUBp8uM"(^tf1hS5+TgoEaf3+@4HFZ`O_"I6eAcP](N
%*Z@="0)B1CKU>f/oE$:"%QmQgJpY!#C?1gp+@)<2oCuk"YGZ`dXhu[dTl]^jWHIIs51S/')`b05NQ'$CH:a0OZFE>+c?'T<M-,;M
%Q;Y5`e69I'o`u6Hm2g\BA^A"O/V`66ieH(cmH+pDD8T7h=5U6>it%N,$Jb_@b1Zs\Y^4P'?N0?KLp$,H,o4ZA77;:ja#CA*8BPTd
%ZYFjP=Fn3O9h(h=9HIA0"_[r-\Z086iSm72RqkeCfKpc?NS!SfN/cL*OcodO^l*GZ-sB%Lm_c_Im&^6.=\^B<)mK/2R;QA-GH8KR
%k@5._q%&j"TD?K&294KS:2F9[aglKi_YgBdZDd8H3e`-]=mD%G@%;C\:BPIFJK6\pH>Z&.*F,jo8@g&.MAX#]Rj@Rj6n=K);4ei8
%JSl(?W0^P$)l/B-#,j^m^tfEbR26DZG3/[d@n%fVU1D7k[#._/[$E6`pS-p_-t!!nB0h*.L@*[paJQP0p5(t?:\I@ZZT2_<<dDna
%Ep_UFQ'o7<SCpN)i+G\>7'A@U'$ILk`HI7A8td=854h,8JY=$7eIAXYrH5<%/!b'H0D!YY0#r[GDS6l/cEK(0g!ob62,s]5Mu/tW
%.t_%e#bta+.O__e2i>@\GZkr1lZ'M0J"k-<F'\@<QdsBh,kPG^kAD@h!'<hL4bQ#Sc:RJ!oUR&f%6kt"/kY:acsE->m>XI!Ed[%i
%UcIkJWgoGodf:E[OIq.Inf^86O(YE8pArJ^_ama-hnqfRk#gk^7_Phc=F%RWgV"3tc*ZaXGJW(!p&LV)`R3;'q6AGQ]VV-JVLa$3
%Tg6Dm(q[ouML7Z3r;s^q.@1".Z71+_JEX.b%uR;Cb64t(^A+)T\=gdM.&uJ(<cL*mSKWc96m=oSVXs(/ID2<?'CgX@UWIg12oB,P
%f!TGn:JRuu>0)PW-13-J<&moRrUo%6\=W(A!j@-Z1*p]1_$jbOS8ClfLdOVhTgGCFf=`f>\OsqSij0kSVe9319qp%;Lh?`HDq&Oo
%D`q1_>QVBqN0&u>HY_0dYX3!<H#^D!WU2+Z/6:#//P%uXi<N,k)>c]>+)c#=Q64SbR^s,cW0Mk,a4IX\)AH3gWFQ&LO"p2uht<s,
%&),#0'+`BL!`ggh*D?12[m7$-EWD0C9>QUFH#,ukDB1koc<DiMgFsj'AQ/(7mN&F_ia+dQZN/>Wf;^kSM/]@ei4:`9;BjF<Gkng1
%"1i[.QF1fE"3t+ccnKA].J\hulm5,2BTa0n*>UMIS5(A_lPtD2=r7Fa@1sT>^g0A,'YRML&cc%uFHV=`d9GC.JQB^`H?1Gh/Hl8\
%JCF\Mc.R3L_q1(mlK2tfO:WAQ&)&b@I+,!^8o>DWOtE9?BPHFoPeh$k$4gEC`\)gun5B_umA$K8NS/N>7;Wf/c@*s6-EEg;DEeCH
%c,"EUM3u*,*:*Y)ZhGg"DB)6skR-/f\,l(ehb<Lp"4,@s@h*;Scct9.O9pGH-AZ#\5&jK5MTX.Vi"=qM=W+r=#a*8KALF+c#[W!7
%(;rmL6'gnC:AV&RheZ0\Wl^aT!ORS"p2[1UdlCS?^QmO7,bSQJQ>koi>dRa+L&eH?JXfn(6+RY[0nHc"`Ne?47HKTYA;XjE^M6Ke
%c&3Au4MHh"LR-."7;p'rVXkgW*:$GNkc`eb]4K7QbC!:Pf(@4qP)70Z&!\A.CZu0./A5u>*L>0o=T"PK"lGaDf<b9BZJV<YQ%?Id
%UYA'Xq*#F<d.B$8#JeBnC&kc7oP=,&4HVL(N+Y1B(NU3G'4P:grqTqckI-TPNe>-qEtVO$+P+f]6+NoKK*CCiN"5K%nCV=?VbdV)
%6TPB+^5trf2(0hmR2,"j@mOh+_8WPUhkWiA5b*Zo2>F*/rO\CN:kJt)?VVH]^pHgY^=SF`^$<p$#g+p]Q$JYlpY>VZg"nJE3H.\E
%rg87)U@2E+j(U(PoS_VWQsgQrMKX'GC^*1laGV5cd`W%:`Jp%e[?PL!LE>8i%"LUt?7_'D%P!9mb-.eo4cOV#1RURQ(GrS#DPZVR
%<=Jlud>ZB-<k/+t4#^3ZcrX3>5J%3]#aur7VJ%Ipq;e6Z]0NG-$Qg-(nHcF9;%h<1@^Y<2()*]K$)Ms?f`.\t_%?m@#%cM4D\e_%
%d//]&;8#iJTBYn+@#sHfa[YZs@Jgp1/PiM7Rr'X=NWU(uW=I(+E:\8Y,k2hs:gBo!bEtO6Rf#!m67^$FamZ=tR;P/dPupdr,kUZQ
%.`U(DD.DkoNLCTNUg/*#]I%@O9GAF7bLr*HB4R-\o2B,nT9&.,(Y^E'85U"(]URa4eOor8*^VfQdlXrjZcf>:USu#5*3Gace(?Ma
%$pLqlN**<*`"iB$?VuX>ISJbP\nl16pq\e!Ih?GuRVq>5Dh>u8&#^roN-RhjI'1MNK0A5=3])HuEU`h)qs*7Zrf]G0`r^:W3m,Y=
%2poc:]A:N3qrE&XJDXB:SY_c,(BnOoS%C'qd4PbN4VbK\%0(!t[5R/]h\UEsHb!L%XG)TpPcYBH.uf:_4=/3/ps00Y3d4g$L/9m&
%Z)j[`r!=M5$NL6H?\\LFI]17p`%&F$'W9u#*/5,VA7I<b@\^eSKY'=p)dcE#@[E?b#)[XB&JC1Xk5N=+<*c#50c:iWn#FhWIN7\c
%^JH<o0%.u!f3D=R(A5pi.[,en2\j+GG2&u0b'HLSc)qqRi4j#5Q(D`%;;`0dUSiqedlj^1/`T;nTpT1ScA64lB<&3s\EJTWoZboG
%Y>EC8<(_RSnL6fQIHK7$6796@PZ(Lt.h#Y\;Us82*""Z7jcG:=6[(?Pq?Sj5YbAG-MEm3[B[e:OOa/)<ZZMHi!eHB$Q!SM4$N:1k
%ArN2)%^"[W<Ol1A$04R4a:B<\cKW>pWnWTPh;Z/;bo,?"%It_?lKfG(gC@.j3T*hsOa1B(CZ%e9K8BM!$",\-rRmsoH+0_$PZc)V
%6^(S7A5`XH'$'p#$o^IRCW3`L=\9N"+Jt-uI1/'2jhN9sM(-uu?Bkg5OlOR#FrgSFUH/:l/o-LfW5Zof;m>?@80@tlW'p,.b@i7E
%OHprN-ng+K1(T+Els2uJ4Te.]d&Jco,;M7NctT@(gSkk2[pD]tN#JEs6NXR0h2@W`e4m3o6+DV5TBbt,=HDTmdd6X;^]:Rk=_H@Z
%TA3O5P`I'1,[OP!-e/8F$-qPlTrFX*p,nJPVnoCmL$O7UGDXU_,o_[A#f/9Gdl*O>Qq!`-"5]YEjX$''MA]RdDhRAbC=T=$_shW1
%'%@>t]DHaKT+C(+d`-#N<J)rWcE$d7I`*/r$Hs)B-.E(=@LPpiX4%-XN]dgS<3_>'GCrL:F+Ru.&aA:k8ZeRreMlb66p2GR4YMWH
%RE+aph#oieAECsF%qBY.dX%eBO2JZ"S$nLa-+q6Wn]VW\S%WCMEhknVFY#,Ej7O.3HS*9^9/NFY=^O<0%W^6'(eYPLF$;F=e`,X0
%`p;==SgiKuYAP0jg?9B[W<Ml'.nIXgV<SX.DGlV@\bh(M*![fSPtb!2m@;HNM,nG8g"22M9?(L[@MXJIAm^Q7!MPl;V5Gen&d3HX
%\$c8q"7&gDPcS$7>dp&u@6gE8Ju>S2H:?`(HKd3s>>]8g41jkQ3nrc:d4Ws*A]JXCqs-[TldWM[R9"RB'X*hA9d;.($4er:WXpU/
%WEuh?pTEqs8c;EuXkbj9WiI3mCaaoB@N"+EXq_jZVAu>'2RC^?ISEL!2nTpFr63RX.p?pX7"g]QBi.qtCWO5lp2g(gD3`P1d]b>_
%fjpFt3ghNPU`5Zc5$'DSNX4ni(_atK$$)b&P%BSAi93/#SLY$#/N-Z\0_DdJB?5d)^_M(fl6Wj:`?7_\'3TtUHg?'O+%Q48)D<tZ
%e3Wo)]leL8s2j[$@jsFrf2sjWl>:JNHm=a).`s8`IF"9*6cKNGLYPqT:,"$i8uc@.S>)RB>0t.b,uS-^TdECj#H[PXc?YBfa5o?%
%_7V:,'#&S+KZU4FY+u#E1o7P#9W8qpi^Rk>X"@T]Bp\L!0taHF#$(Jn=i47?gfj$G;pd):lCFr;0Zp*u]&8]@0bS5eWWHY,a0.Dj
%pWAYa!D!H>CHU/5a73K2-T?ZFiFOJ#B9r;:0!Bmg@D(%BW5J)LV3)%1U^8g=en`s&?;4'\E5e*I>V*cTT_q6&88n3[C7[CXNNtiM
%bN5"7#>KCX/'6[-\)SI\8;q]GWbqed1[SfGEql8fk4J9$[=u*TW)H4e][7HM59-s,/*[F>hbJ"?`3;P=?)D3$+22hWRDDT6YE)%9
%%t=?7a'[]IJ+MK''`84%n-5V8'U?6haVrN:kXV#V.I7F>afgJA?80OVJko0gXiss&TLKcMN>e9Q_Q9Qbl1M%J]T(kMP(:$71cL<[
%_KdW%d*8\slr<"kC\XN_k&f$9(P+.?s#]OW!\'TQi%^nC$'RbSg5s&L5ndD:ND^hZG=>tb##Y.!9VY<tPH.6/@aR-hY_E-TRJ\PD
%,0p0raqi4>qc@R`32-9)%?Z9oV'l-;3818s.Mui9[Nt=n>SQ?:pYB(r.O#,5dSe;<W2>97Q:#k,VdU/'.n>ER*sk+lh_`qgUt>s+
%0EBn,[2)@&S8Qu^gfsE,UQ@IihC[3i#M=4ldA>DVIu1rr$U>kI3pd]d6?M"HgGtf-*3!'cQ_?/(),pk,+!ea[[=F`@m-Q]rp-#5U
%n(qV-P,;n+<i6D3hdLYB((`kk<)(j,L4O7T>=>qh(QstLI^i5C?S%W],3t2`;7eW_Jt;B$j&hWdlnu(=r&d-VAm:g1f/L47mY0[(
%9iEme/GsgN\sJp0e#aWK+tKrfU(8X3F45PIYa<:+dM@UE$[HP1)^Z5f:TYE+keoF:W9VId;ahAJYPm^8'0n@!+tk$@F5]W,BD2PQ
%gELPTOdqJF@,@oGIqcL%Eg,i:&k73_0)**pk\\)G#CKmP9IiD.@\`BNN=*L=8I*(BZSeV,Fou;c$g";K0_URh&]alLX$qAWXB9Dr
%)#sN`!r?4dC5YHnqS8D&ZNb??\sq``5nhg2d+=m6Br5p9g!FKk:M-En.QYV"WQad3pILlLUb/Vi^u'&KX`b.HgmIT=!4Q`^RhcgR
%\L@(ER/A.Vs/FPC4o/UONP,nFGC=5E>4t*o$X[-@>E>o&Y>=QKphT'ZBfOA/dZkDj7]fn%anR?]=-8::94`:]\jo)2JInhblM^[Y
%nX<Kc$-s4sEE,LV".-GU,eQ.C2ilKo\"DB_BTMJ0An1*?^%J@08BnYje.r:mpOV"-gVMXBmcO:[12ElRB?o02s5#eLB/QMX1]eat
%rJsl:mT9.5bg)[;S]n7V-*r9qEa_@p.WWq'b\BDFm@R"Gh0`qE/<SaH/iiMV/Q#dOD'a?7CH]+\^:ptHi@df>5:`ujDbetnA4i?5
%r0H"6l5oF:VG>8NQj2GlD>?dZ'U(D5bZ+)"B>(`MI[&]!pK5lpH%!aQX>dl$RV)'Q/:H3VeSSsM5S3b4,[Yn13tM54c-61TUUA_@
%d5p"::IMqs>>@taXRUTG0B1?4CUJscj/R/HDeNYnbM;]D-:9q!]V3GW'oP!b/j/8)/D<qMR$fQca>Qj>a0\B);n1otKeo<:A)n&X
%=8!SrL>L/B'Z7qW?RH;BPAEeG_Wo8^$DS'3Tu.ND4V8!CjhLVQ^)RX0A?SHQkpj6E0h7O[`%Xo-P%,F>6F:G/ccYN6ja)e%ea#kt
%(@@2:Y""<6k#;,7DEH>P5A#=GHtkHZId)$1kG8sqk:8tadKIQ\c$7[q/!p.H-0IKB]pC5q9N$=D%_c6SnX?fW^o77'10N@R^sT]k
%CmeX1/Chehl"P9QjrTj\.Sid$qK&4OPT+95"HnlfSsCr:"EnEml$^6)!Y87)a"gPG\034HcC59C1`'cB\t"J"+o#$&bpZ]Cr=kkc
%;NW#VHSs$4M6>)IpTju*fjrl*e#W>BN!>C%<[(AYr7?mbfSAK,:[Y!tm>"%,(S.HOa89e>h;iOpo#$d(@*F?E!'(rR:^[\XP1_%9
%9iG0u'^:%rCX(R&U!h$)90gf4MXIPe4Qu;bJZb_:db"?@d(#UF!n9>QG!\7j8l@#gJR#UR)FK7Tgs,;pg)?4hJ;5UIPJT/fq//be
%;3]!R/=T<CZ`0lrI_5_O8TB>N^[Bd,\u<hRBc`9!dL(<=@gpSbAX>J7XgaJ`r@`6qZd1GXb=E$52%Q:]8m#Mh7qB<Z;upV$p[EuC
%B>L.NKiE!@am3^\((&?/>n:?41:kn2S>W=["Y%/cZ\'!-fct"sHmO(GRLttje(H1:>[QAan@5j[8ciEscaOOjSB]1.@1+LiP9.?/
%KGXfrG<$$9n5!Y&Pp:SH9XGM]Bd,&OL-g)/r7WYW_VfpJnX!<;F&*8>NJ.*45JRlL(7P+HV?Mf04-^V.@/\'3,j\2u7Vsm7,?c\X
%JI&HC=3$A6Op.:tW=a/3#(A".h]l5b`/Zs<3I:[0B,Y-JN;Zd)A6)2R/[pU@DOZXk;%eHXFqZtedL#@FR`:6V:GpYQgCCl@<CfuF
%":KFHAk*_8QC8eNeUJf8</iCBnX7[mgl];::b>L+FH2+Xg\)rVpmGj0S*8c0:e0#QYNDgdYN*8r2qLMW;_S`+(]["YdR%)QQ[if1
%hHIZ!1`=nQ*D5+%n=Z'qr)=%!l>Yc<>QX^JqB.ai9a!]kaX\WK?@'(AJb;ELT"W@X8#p/jg/%8*JaPtW,-?0aki*N:/b3?;f!cmE
%>#EWIU(U>]_#'ZMZD*QOJil-A:DEP\i4br%9Il:p2:1t*:(COOZ#a3Z5t89>CUV'YM7qY-pu,"l":HOI3ec.1AOfm<Z_NU]*nH19
%dlFsO"CgfH2Kqu3VPIK@,h#c!6Yg[)$)ua0Ub?l5p0RgbWlo@V9?$4;2)su<O]OQm@0cgAL9Agl]:\'Xh8%dQiWuH.6Q]H-aO),.
%@iujfUnp!`jcKZCQ6H,`kS6"[8em?er"3*i_fRe%C$?m+JZsfNF;qm^2E3S!2r"Tr^XWA\c]_*9obN%lC!7'_OL"ap[(]#9F5jUD
%`OM"#/pS1,,6E^MB[a2Ue!i6qr-.%4Jc0q6g>EQ4+4GONNSD0h2nee`(a/K+7Y'e/3dE7!+"-?Bk_QJ3jl8TWqDt/&:.6%D[0L)9
%:YL1KPjsoD73$_`<,X%b5?Q_D3CHE^U1-2HKkRl*AW;;QmCp>74c-J/EGb5NbN7jTa6Fr$2*\K_.<3&1g1mQ[mdr0_53'@ED5!W+
%EUg<Yf_MM9)*T:L.kRgIG#i!`W#L:>A@Ee,QO`7[M44HFJ_dHr!J,)6HYB4WUpmel/Ar&5e"7(lNbpWddNCH$cCXc<=DJJ\kpg^"
%&+k`F1d>BEXa(-'A2\(>4t/#&<4QLQUge=hhGMFu9gkGcc4ucQ;^1rl4<^tEFYQ:dm.$D2Q8S"VWZ5#:L?Cr[Ai2n81!P<8%T.27
%C.fI&m-ng?Q61>T/Z./_HSZE25/FIMOn7YPE8O6]+0GMS=O'o0"hWU>j;mWhB&<D6H\I51c7(=-$JpeY[ejIR\]8M6.<u2WTa,:i
%(]2K3PJ>c4,at1<IZA3SR6k*0C$VBXQ*>UN.Z`3LWFe"cfl*G#`;;QdQ0>JUde(1;Rn49%E(q/4?<s3op20.9UZGK'o=nJ%pPXMD
%P,"rmk4L7*]IJ5JAXnaBPt$$/k&WmE%b!Ol]B7V.9T[$9S\T9m.333%UV+2gdQC_d)SE.5#gNB9i_/A^ZEt6RpD$)[4KlZQN++3a
%Qr*M"3g#YA2oW,K5]"$4O"%5&q%M%=V3lfi0MhEI2YRE%e@']4FWAT.s6U9nnLo#QT8q;t.i-3H.V.88`KJqBA#Mih56LY(4K'1Q
%;N#nkh_#kHHnOhEd24uLN"l>5I_>p5?jsb+(/(b@V<0+=0df>QR_ukh+jt1KGL4MZ`b<*(6Z;.3g@mmZ@(;KuE\!FN$a.97?KVm2
%1$>C),@,l*)r-:%PFG9cF:8$?"TIa84+_\)ZNl^277JnO_hn(R7.A4P&Q<Y_<h<Ib)ieLp-$T8u7X*o$e<:ob>jSS5FYilPbsOoH
%qt%rOPr5<OUC-YiD4N>Jf0`I&#cKJoa/)k`m0oW0OU;<8&Y(Dk\5T%-9Mc12btFMC9K<`KbAU8QX+\%_U8JI%^TjSLV5tfE5hbsJ
%1mq9pI3VV_ofg6S'^6=_.uE]+Q99'LkeJKC=]t+JG=<TW^#Y$M.`klce-F=l6?ZhO]pCRYdO5HuZ8:aC.Qqr4P3t1;&+ASbM@8Ea
%r=QqIUu-6q1=N^V;`oD]B@A_K[_M%?/ot,'ZUE"45a8b*I@]Vt='GL_n,2Re5';&+r_s-@IsB8(C(B->)YK!A"[s%Zq%u&If+u\.
%/QA:m@r^:OaW%TO^?09iU9sgCb%b5<?.2t9UUheeqT.9dp(R?MG@4??P&pWg^3*fW]Ut)ll*iTj/a`WS,C65X1;m&1d-FgR@l=d8
%3_r9`+n##1I>7SO.;TAS!p0VWmS?\J-ps&fT%,T_VOfs"ARtYNU]732&=['F*jJY8#?tS.b9/uDC(!:@41V[&FZ%*K"L%Y_WLqA/
%1(ZjuUKVA2Br+[H5s8Qp0%f&q<"IR[M";l\/$3OtiU8^bN*JlNqod"SY,SIVaiP=p10VcrVi'^MRkLlZmEhCVhUp$HZMi-@9O1fW
%BoBSuHrPK01NNB>mJMF<I-Y>9<eiog:Z!#lrCLcS$>ogTI*3?#8<r.UhZN;1ml-6=o:m;&?JVnB0%7JApuT1'@t1Sj27KrJeY4(1
%ifc<e_-F\HWEQ8NY9(*j?%a16T@s^E?b2feY9@MJ7NVV]k*"=M4:Bf>P+Cn05:`r7`B=6"[/KlOs.9@7.K>gU2EZh7e(1"#e)60m
%qC"X2!>q([EPFa*7K,X>U$.cqlU.^ao\sek[b7S+jH1oDfP/#[@gcZ(Qo:#-EN]o?Ap;BnU#lHe/N!a*$7m=@nragRErc$IX0dCI
%Ct0Q%R?3Y*),@.2Y)r5tn4.t&h;OJN]p/^b=P'/d\BJ[6*u6_=hlX.?7]Zh7lY)-;qCcR(JIg#`LR,kTE,q](au\sLh+po5eUFLE
%a=!=Wd`pS59(s3Pc^Mu94dnt?W8t;S(cKC!/?)!#<hM8ZF,4U]_a_A4i)r@*VJ'ZfYJCkeo=;FCPJ1+$Mc"dTn&tdc=`:QDBNm22
%m%@?DKV\%<).>?-5SMak&:cb`\bnl$nYlQ(SODprJ=d0jqjJHKar6!/DN2cK0m_=/X#Y2_`Bp!QB->)`mF2:8f3i;\Q1+h1@t%gg
%e?EG,eJ;!8bT`4ib)h>t=4?#!?Gi]q7/1k5`(#S4s0R@Nj=WGcYU3S*\_jCrF?d\+.M`U_d.!Wjs,oaIJ!ilVOg<SnLogh-]`oI!
%>pdU4g.'EN-qYd9)_bsU=1a4_2%oGRR`0=mIP3]FAujIcEssgP"BQH@BM=8h.#"a@m%a/gKPpiW15Yk-XO<=Z7G(W0h5Eq5#<S5W
%s70B^==VP#*P>^+f]arf(7<Pm[(8:0D"k<\lekt4f^)ko7a%NBG&:uPV+fdlnFUFRDOEQ4m24(V)"\P,:oP"!CatZ$TF0bQ6i(/J
%$XtsDC'^7?hm@Ug6J#UcC1_6>PU6s^42ognnYlQ(QQ4o_"G[KJ7P9"g.hC^(Y+32:es`=OU7s,mLe8sda@o8:)F1`BOG*7GfE9FP
%)!A8l9P#Di`h<X1fX(UD[HV1tE\CO7$Wt!@]r*nGKfW`WK%FHCrf$1%.8'DbJnKLH!+l^YFD,q>Jcs;;kU%eqeOU!jp5C].^473o
%lTd$UF#R9!]E?*S7E`Ig,.'h!-KAjL=A$hR@).OrpKq$aHY-H",l'\"Tao.m[('5WARA^9(T-J2M3=2G6q3(H+i>`j*0%jR6,L/W
%L&o48q(7]g/Io59S;YR6KV"9"L9o8rJ]*QGod*CtN"UusSu6'G<@;R`?=P)k.`n*#.U.'p4C<k-XsS?9C2Kf.QI94c-S1'9;9eYM
%+@?gYFOrutYup[EBX@2GW3$oNJf&Oto]j:sGT@SsIMi:@W<'br@/o.D38deSOkIl\dR^Q^XjLDUe*tV/amNGjB&\JAXp;^GNIE>h
%4>),+?;H.uA=t%6B0u\Chs1L%"jK,uD<Y#o]H+;*OVt9I\.`+UG31&-_^bcL=*,L:Age5f$3%V12WF(&ZLalT?'R;`8p7&CV_O0G
%rmn@#kh+6iXp,kgm*NjuWLF]:VW)s%-lECK/%JY(WiO:]BFE$=Vc[<F#aOb]@]kY9DDQN&A3p&FS[tI6S/P"sdma84=![E\$+)mp
%D0.l0(V..I&+?E@3lnd%;:M8odg?ER,"n`\C^`^HN0d0OP,aV&aGDL]_;H1+Xc]+\#N#GXL\uS5q)-.eqb<j6&?9*^pg'Br*<KI#
%@?Rc@G:Oj)+!XPPqUDB2Hh8P4/nZ7(M>S&9'uJc"a;0!p/`N0dg6+=<Id2*:k<gf"f!VMY#.sC.6Vk:>K'+DkONBWM)HJjA=9icB
%U*FupGP^ishFLt&Yd+KjkiV(IW[rY7C"/n[:%cB%RSocF<T[t)BV@;mEf\g^S)_*:ZtPND%!8dG9D)YaK"J8\D3&MlM]CC3Yr2=L
%WVmg_a&5h7nmj9t\#Zm5)D^Kl.->3`No^58Tp4B=r_uk'jZ]+\U3aIj[Ab1E)JO5*qij-Aico=5ME:$mgS]QNl=@haF@*$>3YM("
%K/JrgOl_qnEP(pgFhqoa[<[WS?XLC4he=OABfYbOZ98filW55]Z^0FIbujt_n\4t%r^9<WLDK""J\ge?FM3@gH>oc`/t6LJ.1b;P
%V0/n^e1&)#nfT*PrmO!Lh9&TL7oP/+,#4'RrP?O5SREF!NVW[fqV4=M)7i[GJTRJ_Q\q2Ah?dqRW=<VTTo@U^Im0=M?Z9%/?j\hb
%j#o'%g-f"Ojq0)"./&>G(GRA&17_k?L`V*QC3D0\S3rmcA>f66FSZ9X.;MpUW&-t_YX$GAD*3'P79!]QIb3[!-#ci?Wi(1A38CQ\
%AI4'(-jY=:Je@G+o)=j.<Bh1\")9_g`A(MGWtO/3m5t0=C7D)u2Ys`B,kG4?c5u]q0bh6T\5@aV^56asGhcNF!)U:?)HDCXai@67
%bH7%u]<_tF*(FYMQ5$@`riIm5?Ut-A5G=9OE5Rk/'lm5/4m<q@c8(g:857)Gj=_XM)Fu7M<@Q"l]r63igpj(T'k:n&MMXKd<'t7-
%<[+;A$n-6#N`etW3e;)9p/TI)CJf1J_,.)?X3UJ8EO8LLIHVE:N0rieS*JMO^)J/ab/Y+m.P`LXP4&0Hp6^7dAL^dUmm`;r6#ET;
%614=l%G+@-$m&30qK;$N`&fspCNBF?7PcnW+!<OiBnh7MCfUCL"j!Q&FW5uL+T'eU+3`olScWD3As":d3gufJ>J]=sdXcBV^q)QN
%.^j)3=#oJV>(pc:BV7[!r-!3cNh.."-QP7FhG@j<>m5_@Z:q%#4A=cZ]mJ:4D@3Ze3Z4ifm.KCXYB\TsClnu#RVd1^Fl-q<\VM5E
%Lb@K+%].AiU,gXCaE4bu_hRZGYY7aUB5p)=365[?R&Kl/Ve.SIJZ^9/7b1W$"]bg0;Vp<0[B@\&GsKrU<#UOtmFNrB>B8DUrq"O%
%c<XMGC5-1/%`-rqLd>^2Jm-b\K1RX3!Kr7DDpXMA,3ee.>_cZ=U,3%H[-2437:1'tZp6+nQu/O]K+,@BC*<i_*DlGW.KM1!]6@1=
%@45T(3O<nUp=D+VIN7d!B5VJOq$T+51McnhS'6TJ^tgl8J$uL4&8X;&_K>GQ+euh17&XSM/!W[g.6"k2as;u^^@gmmo4Q!)K*?hZ
%!mQ,M,]#qT"2E$XEl9h;hBFscPaS]Wn:+E`jE*'b8^)3<UVXL>!1Ip3oZHC+eO<KU5Zdoc!J+NobtCQBHLteu^mNSKVdKi/<6q0"
%oAa5N(.-Lq$k^;N,.cWpC\q-fmLjR$,&']to$E!D%\\hs%*N\ABZk0`j<$5Sc%1BY^@HU7SgfDtI='J_)+cbdR/+Cj(XZViTb#53
%Kt6!g0dYE'/6)$89%:Q>JmM=+%ABiTV=uVYd(LA(FT@D9?\3a<bE%9]g:<qj7Y8sarg%VlNrsE/kN"A2:@ehl&K95kDKI).Le?-u
%JPN;$;R,64I7r(W&s=s,Y9@7k#CU-*lQ0Z6fpf[_mH9tt!-!EE6SbZ:XG6("*e^q#CJe@/2>kcjF8CfSeaG0-gr-d$K@?R,%\XjV
%La^-*d5sVW!63FJIo'Fm>YIu5?j/1@?d[U&$pTuFZ_I`tI04k]>"bs=%K$]CUT!@SPohD/\pG(p^1MVsONc/)NV,]++%NqrCEQC#
%MALNi?F-o^XmA9_Z$n)C#<(/EZto7=8p>f*r4g\r35o8T;28N=%joR@Ba$D(UVS^";Wu`H4mM$sWe;'O/3>$eaSLefS%qOIH4K`S
%C.p<Yqj3m)b*N46O,WrC5SS7).k.Rt0d_FL6,CsCB&sIL!QMArF"mX`+S=)N'`P:DXL`nhod4Eoc<k<)U,!Hi+A[.VEO8Y+>ET`k
%CA-V%,lQ6P^=<ZZ!BD:c\^6fqQgkErO<[SC1MqCT(=qgtdqZq]D6Hu#D\,We1s&6aA\r,=etSu,]Kp.Cei8da[`P&RdBKp#W`GoV
%LqUbZs#,^7Y2fP01oYOSG=u(M/#?bkXdu*b$BcUJI>Q@o+1g\8L4m@%<@aFJnOH&g_Z^oHaGu6F!1pV?ZV^s5Y,k96d'(ejXqUW?
%q>OC!#[f(A0;<Q;71#=LX7Lag*:6Z4MP=G:GdtCW1HVqIDmcQL2NEGq*(ilOWSGRTc$cqO`#8B9gJB)]@q^rP\'QK)n<om*RL!.n
%:R8@1j73_XOrE\-ZSYP8*4^C3J;7E,e3I:nWKJY/f&CBe$tpD('%Prj5+9ql7olQh?moZf#2G\XCh]2>P_3#.cI$Ba>H+?.2B"\#
%,HVkeN3`EB(XV>Sed7^od4h25Ur-G:/A&#6YRaQ<GCdU4TZqlYjonp\5rqsb8gr-3a?JMAa2&g^LFh]K$E2;MOtCg*=l4%"R<0G$
%<jAnr9PIS=X[8d\(5@N3AAMuI[pj'$`42t)9(qNBkfL8:)mds;aVIUUACs?)ls6_beaL!.ag&DOXs0,9+p9oI/(=J($Jmt(6a_"1
%T9&,VDHk5D3=Jfe9M^k\U)c%ATO>nC?BCa241\L=FeW^#p/N*?=JS,H._nU.</sjPAJ!mT<PWp/X)Bu>%5d$A^E=t1re*Udqs$TY
%9rlp44U0R/`1;%^c]>tl=q&\JrapY:_=PV)^=hp0+ZZd=j?cVni8f*cf3u@()Td$G7q^(oT$sE>WWDBB'0EB*PW=*#Z6lXI<$-^<
%#sduJ>:GPB8Ni1chIqjLas@pRG:B2G?AjBH.jrp!V\'1BOD0SXA#m([3dYQMXX9((;GXBn;:K8EC"G!_.#No;TCQ?XB3sA[+F:")
%.rlL0`)8-./\(n);p`Z:keT=@AsFcd-33-=/:Ols8:QTmYEklD>kLb3!?mcic@ke;IN7`RrMQ+3Pd*EU$>Q/9ff.Yf-6EHo0"hnZ
%;=Qoc40D.pD3/m/27c=_j]sdE?kn$QD,;0^fkH'd`bC'\rM3Wh8Sq;Qc88aCZ5tGRWg;SVr8qQ`X?93`+Hh!T=sYY58@DnQT9!UV
%(Y^E'aK_,tY/9Y/5)bSnns:tK)8PSb>7Q&lYVkB\ZB1s=Y"d.V`-P8nD331C]o44aNi&4Yj9hA+#65u`TKf8>7%+"#MGjd&%2*Ua
%''Cj2H+(>GA)/T*R"=rWj7%<<<HW=Rs2b`C6ch;s?B'DtI=lCtR4lNa$A=7e?J+IY*`V7(/rO>`T'!>W[!;n[4B;%OT&LJDNR3Zf
%"oFZl=M1P$pDR.0C$UNI;(_CaEY\F.B);=26K`581%pi^6(3`bNCEb:O&FmtMYS+e.#l.>>'NWH%.FF2DeePmZ<9_l4D't/o%mu$
%J\$7$Q9l-JlN(K"<_7T/k4JND!#CrlrK;K$c]=iL+r4TU%a!-$?ZSr4>1tpIV+a&_CoUGTp#)8T5g$H+3-2KBGX&8Dc0-(?W[,5"
%L>hjLcS6rn>)gE*BK&)dEAbeX4?Nq<<;caCqV,qk`HfF>Dmle/lsrP8LCd+L\%?B6UQ`;^Z\P4O4',r:K6P`&f76d^L-3'L]7/uh
%+9kZ3Qd3a$i&]67!+9Ju5./2g`Qmg^l/Xt:-o6/bp(W,]I*OH5e]Q5FmbWYu9QOuZ),nhVb2)_q^E87.2'2F.0r6m;Q[<dsQ/?GB
%WONpf[nj:G?VAI@,.(YYR<M`.2^+4"lR"C]B'lj8Ye78eH6cR;j*">sBC<%]W[2\Pg?ECNjp@T>Y4`#PUJ>DO^[Oj(a3,@&pZpHr
%+&1rP2HbCf:+_db"Wr::Yb>qY/J7"F9Mht2VMCDXqQ0+C1/Ve9d7ccM&h.L'^E>(\X5)W/8W0UI7-5::%42`D&S_;@],W5CDdHlT
%F:1G)*D!j8dll+?a3cLSZ_1<1A'^Ke#1"ph5In%J-mD1.9q9+/U--BA9fsXH[)k^li6XQ/I>L9,*ENA0,;7o1b`;2Y-!I-l1Sf.?
%$Ir<o@YJ?C4KB#L6(.X?eZgLr7p=RYn_U7OC5^R?lKCGS:$J11eIq9Q4^"8FXP$BO,AKL[:CKfH!P,Z97+k%5Yh7C3iftY"=gS+A
%2Un40_*#5ec*'1g/3IjN3<t28c`g4,(.foO5u@:Ce^SRUa\'[/"')OOhWXc157Vm0(X[t3kZ(^9aT[,LUWXqE8@?0u2%SkJ<Qp<`
%==DibY\G;[><PB#0e/Ft`=o!_,>DKEXO<$hB%:A)k*HmK%8CF!Q>!@;%*pe_]Dn?NH??kO=,9-QH#d5)ehS3c6\k^;BMR_i7'")6
%m*!KD<Fk[tMcBa0]R>oK`$uqr':+U2Ol1+L*DWG/aNVn<frhts]"'#je_p9nd2\%KO=,2Bk,#t.K<W$?8hoc_@p17lr&EE,HCIC/
%l9&)-?aR.7Xm;HjKSQW"7O#?8#O:(O't`SUX4^cNibh@m1lX1b(.E!RKKJ<gUU"N9)_*=q>uCc$FKQ:;Af"]V.@?^q>u?0pIFSSO
%Q?[l(9P&,\!ZeolTjC7hq.NBMZ)^e!;23Z`-IM1ccSUj9'knXd2YfOn&'Ti33t_(;QtM)=!AU<HLV[jS:Kf-g/9Y(;"*9ZG%+I*V
%Msg;X9<-6%LD&D($7j5Sf#\CdNch9=^2\LV3B#kiC0mN8eph^MrE);p\D<DsB*#lZgV)'r>#fmks.NN5E&_j@jNDhj1bj(1d"mu#
%7;]`S8"@4Y_TM)26djr)i\&cFQsTO8K*1j;6D'%kn6lG3c\7`03r7/m;`^E#PSA%]Vm,O\PqF8:r9S['%phpg99ZrT(!j:$M/f7t
%oh%ou`5>&3''de>`);i(!m8,>H;DA:J>?!d+A%d/17mb$j&hYhBT$Ed;ga-tjd_rGff-OJ%P!(/So>>$jB3=(+%Bb_?u,uC8=a=o
%.grf-e\5"ePdubt0hCr@;_8,DlJ,L;_*D!;ZcSE/;q:.CGf5@X^+Ug[X@C45Ag[!q2_N/Nq.NYjhcX0:[k9#><`7\8,rd1YEC)M]
%2Koh(2DOQYDNTk1p((NASB=n1],l`\*rPTLO2&>qs5pr../=D)i=0>p&-cKo45\]og2\1O^>bX#eZB3BR_[P*W<9O*e+6oo'5-u;
%6LJD=]aa^*)V=mgB"KOa[WYd/;pdboTpio;d$a0#Vh3L"B)O:fhl;>/Ho.U^0"KW"p+;<eeAd54(V7RJj=%(O0.+<D=4!j5<c_V5
%2M@SJ,\SQMMq(V#[Ga!sYqUeHaYH\&3=ej&ZXoZr9o4bMrMsDGUV7np*tp9bki&?/I=<1';t2GSZ+P+h$t"$LS6O`lo>mna*8"Ai
%HSoneoaAC/\XtmO8$3*:?\nj4TRU988).4j6RGE[QF>:\Fk[8Fc&IuM%9TJ$dE`V43gtamO'GCQ-`X/uDH:;@9n)u*VBNPMFZZLb
%fHW7(.!B8tHmW41rI`Ud;.Hh)09XW)$`[QSfV#AJ.B/c[GZ!$I2&eqqMd`ldd0p:k0N[]E%mYnC9`tilWqYrsofFC]'Pc/H2moj\
%4anC:;8^"7%@^o%k=^!K\Rg2AqrqEF:/F&A@V:PnP";X<@TcaWC8:qn]DnO?+Oh_Y@bThoCQ[[Ql`nf]o;tfj(@@5;Y/ZufFg=22
%_FXPF[=p9:JZZuDi7Fn#F*n%R:^LSC6QG5b3fNc5G&VAf%S[_PbOAh,B_jB8HeY[f!Cp5"7&b!V"Q+,9`@S=9^+rH!MeVYaqFnZ4
%:i&UuCP7a[Ul;\JV`$-\UVk"[b*(mkDa%1&U2/4&>DW!qJScIgi7FlEkBL<0YDcUs"gr4/[.O=6bu"D_i0i>"4d$'aMNcZ:Pm=u@
%($Jq)[us1:E8*XlW#G_SQaaLbp%VW@Y$'DT2D*XX+,o&9#LPFf7<lb<+-%_F/JM.oCd#3E4?msMa'Ui(cVrufSZ&h\U\f#Mmj%Kb
%A"HTUl;`Zsm/'MPROiV5nW&U'I+]t'q"nibj1l2^fR+)tUU)!hVBi>\m;X/dCb47TE;WYaYW"^GEc^RO[N8Y*kGN4\pe.>Bc\X.>
%q'E&kU%''rJ=ON,)!lC[X9ZCm.6Fg#'%K]$j\(NAb$J%Mo=G`;Kd+6nkh6g`De]*7X/KnSQ[Go2/K%eV?:Aum0Kuo_4?msMa1kPP
%lW+%bOYdYc,/7^^PcV$g<tUq9h__L1GiG-Q5f7ut1L43iE\])Rq&#2dM-eG&D-F;:b3E_@cF;&rMB`t?*m9;)@h!8GfGa\ae:*Fm
%!;)l-hEGq\L7M1!1+,Bk9(`VkLLkV?Xp8K[K]ZC#f8NTRp/Dd5&Znk3eeYhEa(WW7,G?_Mm91cG/8abm$RNi,;t(6CDfL`E.r@4:
%7Y/#dR2JiR@;-G+/]h[J7T&1_"[WfB%*1/L42Y![qW1fCO/h<'`LaB3We14@OemSYgdnkMPG]2pk!*%mIR&'\+;/PGS?o9$R'EBm
%b<4gDA!Gj1e`+V\Sn7d950JoHic`X_Bq'0e2(J1OmSh#eVH8i4_K0l0Cd#32cVNBBnMC9*>ij(n&bM.'O#+:X_18SF>6BEeZG),_
%Cl[+*8+Q26,(5#5^#4/6X7<if7.-E4aJkWMeWs:YVOXZo;sMR?=?!gd'la:$^uNMWIJVF=k^(,S3^$4YOAB\;lbU+>a-Gqd4+hcc
%m]^_@R)gRh=e8^>(@i7T&Ngg1]A1#g;'h@@IZC<P;t9kWj3QDjjZUDYJ@d]b(.thla"LB"JJGU'"Pc$X\Z8],'r,eE1QKHW\#!sr
%0r7[le7L\I,NAHlA+nuFhbU7jIYOK;[O-40)nr3RD+:Rl82Na);B9mRZ>G9=J3iDbrY?fs2;[U2)QE/ufI<N$eY;X]69sAt.jWp[
%9Pl89U+R65/ZpcdUu[(gcGP@B0ih(L_:o9f&8]!^<dG`n%XIWB_2.KcfTOda@jn*%_I<F!Ep8mU`KN9)jm)uLT>c"1Lp8UFY#u)t
%G"58tLR>SXau=NZ:@BJ&O+3uNl:,-`fWZ!TQt$GRU2j*\/"`i<#Ze,@jthL5c#2[SRhLdk^j&,jeW\;C1sgU]f2L+:\tHtm>!j9:
%auKKrm$Sjl)QA:E93QIV(n7TQ?@)U"N[JD1J9N1?c&&id)c(c\qP($7!XWshpgiFFOVu;U!2r\Ws#^q`$1rVk8451'm@"L2I+1LT
%&B3_X3Rm[Nhs\)V^RK1,r#(M_fVV=+>bGRQ0[6kE`i((-.p'#l/Loqr<*L%Q%X4LIW.Ekt31m7*f8?mSe=+s8,nQJMj\NW*k6:on
%h8RjRUZLcJiO-Z25[98C1^&/?FCT7PG?hLL!hA=8+Za<2AZI073NU-:1'bfgV3M;5/t5o0-t(WrGgE^Z><-)0X/T-hPr#j'':C=%
%YI@Uhhm"D4Upd)i&k^PM'76KknCKnX+g21#;*/0DGgqdB=@eDPlY1(@lYnaYaXk.Db4;F?MaE?AX;9Dl:bc[;'\m4IVtOVLYW"/R
%eRQ=)0:$!;D0FHCTQ]1Qq*McB/2P1l.AQK5qtZfWM<J*dI$l_VX>D(9,B^ADA@i0P!)Q%gdJZn6#lmY&/c^PJ*:BM)c*j-CK18\?
%e$$c7a<;a*T:sB@7-`)mm#@h?K]aUKl4>OR]mcEV@gY"j-Usf[?Q@@h\K=)#EBFXg.)5V6,s1T509)T]Y%lH\W&]n!4,Q+.;4VmN
%jUt^(bM9$],f`iKaX6(jH-=gQS)RR&h@Df;D_COeZ8$4E0&]98%E`pG=9OrD;r69YlBi-p&akHpP?"SR3S$bTPM8M@M&1[9)1QC%
%mj.61J#3<O:)d0PeW'M*VQhJJ%lJW+\kr$?k3o)t0#>NQH[?0plfF;$2_A+OoqkS,4hFLLP\tfs(6:_XAJ=R<2>HjDr>a,fB4=^f
%>nd'ZAS/rmf2,P"d"_lq65$DAUh;^.CK[7H'IJH4H#)QT83R"KT\`7<pPX?jnuPSf1dYL?];s=7,YDK+=^d_?E_J>IXK9RSGpXC]
%XaajPTA%V`<\h?,];=*R2u4f<gZh=6>]9AqXN/n:q47J[Srh(fN(f8;8Jd7j,*XRj7kKu%h\O@ek@Sl?)$WGVPgaJ/.L>ic%rURL
%@=l;S,(M;jCSGcXKMfuU"j.9RqKaBZ+VAmS(sNk^,"+R5?G*YPNu;eM[,CI2\5,6--m][Fg7P]u7T!Z-npZI//O\'#`?\H!@h[Qk
%KqUKkQ1c=EF/(7qEW`;"C-dc(%@)YPEu8K'R*H7h^]P?JN.J3l`MqhNWs&7JE8O3`s6=5V!jgPtSf-2'SdAc0a('@`f0%jG7"7Ub
%*`K%L$$_gobpJNE$t#Q=lD0#tQ9H-*L\g<i7PC3S(f/Om$1lH;5Po4R/GX1K2.6WA!JVM.lXrcDS%BP%/`1.$_]#3<PO]/B.$O*d
%=0fnkBpA'_SZ/0UET(IX8H2`oI.o]BWMh:g-E/Ze]/T:Cc)"OP,rp!Iar^G\`Tnm6E`8Mk]j.7m9!)otcIc*qLT8hLZ\o0k&8Pir
%\M\i9[E`S%c\+c.!^eo'8P*bGZ4B$(VQ(F+1Hb'a911VXcjJtjJnOCP+(+"&Y:O/FiA6gDOu[XUe13MB%_3X=9)ePR*VdU6.+s`?
%m3qDjc;tk(?<M@1ksR,Mh&Xu67*\h<Bc_m^>tQo?_q(2/<E_*9L6ee_CV`#<<+T1H?b<SeG(V>L^5[N"FUi(G97`hTHa`-aQ@lsg
%1,\Nupih&[J>]SW^+kU\3/g6Y?Ukf3VpugM"i96V?G9Kfq6KP`k^a.B_@]ID6mk=_&0h=_;BcpB,c>4u.BLCaOu(!<K@JhZo:(P[
%L33@K<Y(q>fLW8HF/(0d$FBWi$M&kprc+4#GNNc83GDajm0.Pm_p]MuW`Md4rmlRDU_r'cgjim(j['Q)!:#-T]gt?t8d?\j"B"=V
%(SE>S=8rnq/6]i^Uu'@_'iLS@mMh#OmE-N%\=/W@;QeB`Mb](]g@5$OJ/3I)mn,gOFNFn^=<:XBk<pmJ7+Ps-T"unL?5M-?[12=R
%qPiI$AS6dh2-l)glEpi4o8YSSMi*U,qG(G8i,4EbS^kuIR!Q9>S35o8%c,ske5ueC#O&AZ/?p'CkS4V"o5B-OO+4,r>f7ZmX*qr2
%=(A?_!^]\5S@?]iEL2HhGd=?Crb`c-SSC5N[;"#0q;Q-7OjW;i9OHWJ\BT&""1ont[cQe22_EnHhr>\M)i(hgK6]\<<pQe]li6:r
%_:"fS[4R/Vn\dI]dE<$+$&`dP[a[a=ZVr(aH_6Z&B]_9g_=Or;Z/B-PJ_g4o>IWsu'!2eXO;Wl>j>Dp\>))SK;9R<)Q_i#t,0eTO
%,h@_=VK_HM:<'!4cc2Yapfpu:9O^YQ)P.XCR1iT"-NuG=8n]jkiI>oDe;o'4"(%1-7&<H4Fe?cjda5*2_c1ENd5e=El.6\HjR.<j
%'GA2cgjWtddT>;^C)V(,\_),ig"Z.r/ab=_6*82Y_"ji*m!]6X,G-LGMBuSihI:/R3Xs7:`^]n;f5PSnoglc)B/Yh5<d_Yr/?LZ^
%20m_FB,Q7eqQ:UKY8dG[I#LXmRnmm)[b2Y$;9V>g@/-XG@t!e1Z+"M'e/HtcC^kiAC-TaGJ]?p:YV@?.a!dtDF*\48DJMJ6"of[0
%e_Rg.5Tooqr:C0Wm;Br:AhJsXA$.d.o"7<BV$^-o>2!Mg:0Si3d\u#Th.*Hfloqg\Zq%j?)QSIrCd4bfTO!W4_ACh>m'5s9m8J4M
%4C9K=LL=MDL.,?$2A['A)5YFhJ-Ic\.$i"Dk,u2qMB!Gi>(P8:RuF@DY7]XoUO"EkI^lsR4)PEC%D-DE`O&o-AeuscU#f@Z???Hh
%5W"-n]\]9#E/9oDD)F;5Q8!#Q.7tae@W@Em>1\[P3Y4"o.J,!)%d&@A(HnYR7D#*R8n0MrU(-5APbH.ATk]G4r=%"FCee55PRduV
%M!CD/%--W[143:\2b/UOJlI:%entZ:1sm=<]dXaj(,_Es:smhNQ=C(gSaNYj7NYs%s*nq!D^a,I+5j%@SZOTb]Y]rSYVZOk/4Ff'
%!DtIi;=&9DMM&3;1g-@NX7u^L!iS>HH>X+D[!UJ70ho,VF'G)K$0A@%j!r4P7n1\U0e)mU-o)/uj['/Vak$q\`D+%<icA\h71la+
%P-$AoIe7"#893'H0j/)H#H6s7-iH#t&EVP]:1'Sp#<jV0Z3,'Z;:C+gABun^jY`'R-\hP"Z@'k`/AH$=Nal:l!2D8qoLnM\6!mcP
%k=EDf;X.i6'*Y`JKdd2f=""52>$?^dM%pE[^/a@SnOQ1/M6/oBL-^;eQCJd^GQIWLVaEqbef^Df^L\^I"fY;6_iE,6\t@tr%p@KY
%.&D/j^k;.aEk[HC/.sZLn7l5]n#i@YWt6MUBL3\S28\1J:j,ZuHd+HB10>;L;-tWdVoJU?'"hNI6g(]*p5MsTOB\X^3+=]ndW>g0
%&"^uPVI:i"6ZscdO;;>!6Am8VgZ2nP"A^'K.JerWH/c*#hapL-.N;Pb/IfCugcX/g*(N>!-`paoF:u'B;@VO.n#R3NYqg$17&/6_
%oVW4X!^s?GAjBR"K1m,&iYqTjknPd=4*dUV"%mbV>K52'[/t<l<@>:#10Q++G8Jl&Rb-:cr6=\P5jjtS=HpPbEhCcPTn"4#;HKk7
%+7a'%1Us?HNirMA=O5!;!2;o5?g[a3]gI]jf%8ud&WIW?qCk'7oGtg%.$#Q164,jLqfSN6BaY8]K'c@EaI*X-:%%cIHR][2Tb<@S
%df3KF-^FQ:n9O.u&Z#`t7WUPM0sf?:oT<5df;kJ&=mi(oWsJW23s>,tr5Ij=qd)%*kd\o*%bp)NLo*('@k#>F.QHJ8d_g#O!HMOT
%]gW,coLPlO<u9<gMP8s5E6JbY74NTtGVN0>K.cqeC+2RAhEp?Yq1kB+]ggTuiNP/p+@Tl_`jl./)UH-ehqtOlQb%;$Zufo[bfRLS
%WTX(T0AM%FAWA\@AWbAsTm:)s9$(<?/HeSoJ;i,Pb%Md_7>`3c"ANpdJQm_?*;15$ap#GS9K]?&lnA$.9G3Vu1$CMEC`-Cr>6)A)
%kd-8jTLs&TGn-0Y"&fGp3BN=%F>q/dPRWCGq^#g+or]L3Oh-:J)LqofDbKgErdt77hl=\WI\fEg43-K@UFbl)2n#$sXjgL/Wp0L4
%^R6fVD/o;g*1KD\`(-nu05Xq#6U0nMEHWC7r)=t+ppJ.gKb7\P>#0!iDI9uEiFu5q]15(h;Xi8>S(cGq)lp82HVT'S/I;B`H(j:3
%)l<C!HpFh35B&O\?rV%lXS\jmWN;C94ea87I_TS2`R=Z&_h$lI;5Yi//7qFd$dCK@`-7822\=T=<f?\8G+CRL^1dM&odPM[f_26q
%HuTUSO)5*I:Yj=dM<N$J?eg,qlIkCBg]^3*Y?ps&Wqr_ToY34BZ<uCZWl3@OO3GL,,406B>%q[?7,],C*IhO_cYL^rVFi';Y^L>4
%OCN]Qe"RlR`RUn>U"uWrJ%"[j4_i_kXf'asq5)g`4sR:5^pSH3_Yur2CYHQ[<`fdBWG$;HIp6<)Mu+0=r?#4-$)`<"cL]9<'DQI)
%4a1on+PDmS]J32\o.4cLFT_I;ZqpsbTdG&'$=MsPU--\uqZe2^dE(t&lur0Na3h$eoc$%&J[i:dd/fRY?$&]+NL!B]R0hpRHo.h;
%@%8-"iZR(k.:\W%9Zgh$9g`+<1K7`>qa4E)V#g"].`5HX./Jq=MZj!K/.)8#YYWASGS*$T/?hd(8aM;fmp?6dS(\UO;\RFGcR8Vf
%3819!$e3mp<CKa_2.UUff(P`sSbf%5*3hC(@2HnuN4ubf$Qbt7#ZjY)XTgbgIdK_";n7aZ#rRhuFGk7j5*b9\<o)-qs57D,DV4';
%mZh*oHMA1OQ$Y"c`m)shB44HWknrPoN(1OnLB%'_:++0=7Pl2DR*BTeRYq1m2CRFDmu>i.Z(\X5!J`J#n#VTOd;[K*9gkqfoEt[#
%\<TmF?\#Ga507]mn[c'B)[fi/Mb'2U'd30ehio__2'R'E3Y8eMjA0poENi)9':]!Bd1jjWm&O%mqegLn.NJbYXYRO7"o`4;[N+F,
%.s/0F1[hk!bt2,%0lJ1Ho1<H#8$acV7n,nZe7MsC$>]?j4XRq8?&;$K$87p%W[b.02l9Q"nqlW1cr,V16*%U`(YU.Ss7p>+BD,?B
%&$9fH;$>1-UeS`^oHf/&7&l#JPp?!?-2Xe+WYH9IEq7Du%_cR\]5W[5E6u"+9@@Z\i#=$?40g$:Q<Yd:2'UNL_4-ke\JR=p_YNfV
%5!P)$M)XbUQufIa=f7SZX`g#Ra+4V69ZF?Fg6#^95.s!Z;3#Wr'IF$[(sNMX7jgn$bXSQ>Ve2ND4W0pt%$\WH;N\`oTPqkg[2OsO
%]h`5f-s/4-/#mlN8Pp5P8kpC-;U9!]Raj:lcUUnpG@-V;XAV/)CL2Mh`\>&;!(>I6;.O+X@4o1#[u#_8/)3K1>-8u/<5k1hUH-lp
%f]>)qB%uFEU[Ek?Krl(["L'o[7He3uM,&R#.f;G4dgecUithI^a\G'\G,i<N1!O;T6$pH1H=hT_C4j'ir,dRbTJ58.?._8Ye6?%`
%0]"jGA#kE#pkM!JVpfEs71el4a/mXkI='J_)1gBJ$h\s<QG"Pa/k;tKD$(=m/QdtCj&@,JUK:%9MH'(qQ)2NJ:0e6N7:[+;+5%Ob
%&W%EEP)G\T6cA<6V#p>&4F2"iBnA+t>S2.Y-L9!#q/NW36kn/uNRIKEeMVAb@Ga]$>s&VP,I@-(o:Lc`oMS:+Alm1(_Z;P>'6Et@
%CLu'kb(]\Z-^`k.h]?o[7a-u83OLR+3ADUVlCO+u@HM_A0W%6[_?eVr)M>)c>(pKr5(F-/<T\Up&)W&*SR<O=E/)F"ErJJ!+%Q4X
%ULflCdZ@N-T9jYdOIo-+=MPekSH(dGUbDQl\MYs6^pCWk/?>YW[;7nRm'71ET;?8?i$mq$km/o(RN6n)Hc@=U=SU!&+&-=8Yk=qM
%.@[s7;*?]#D/sEg''u?4q?S,?kG'L)`QmcC(ErF.Tf2).)TWZs;YpT^?!T:FY78c'GaK'*[]1S"i;3MSb6?kl%"nl8ZWHh0aF@f-
%&Am%A`9?GIK20d4p34pXi(:M.Y9:FlT'b7irutVC'A\'Vl4.,$)L]^Ah:HJAF%c@*DQ"Wa`dnTL,72p6$uQ:L#\d/lVq!ma\6?9q
%?!j9p997GMJD(Wi0C%0'4mM$sL(p@.:QfPpE!q!'<R"S1ndEs7/54l@*Fde,?5uKq_Z#9C-pWR$+C?5$fb+7Fq>q8G/Tr[Ud=LO$
%mW)59ph<Zak3BR*'sL[E\pB?1'I83KrV9ur+%Q48'Y:7;L>=gB&bApOqc;;QV;m)fCGCQ5Y2GH%X\jtRc0&JkT:.`P=irk1VrQ>W
%FU;uGSp@lrUm]Yp&1u=\!bpL0`"f<(O,:_8me&'U46h]fUlOEn;8m>e3pDP^r6IlS3bN-8PdU35_8RGE.qE7b_O\bD?Xa-T9DO0K
%"0m#>oM&=IicOsj+P(U2`[`%CE2!kKNRjJYXis8GVf9(7'ZFFdJcV):[r9.7<0'PuR^1:g9:bM@j'[pO+CnV+=pXhr*HbskheGBd
%>T>FW<q&H):u/9\.!Fkg7ZNSN?As)$Ib6Q1m0`W-58erHlBk)K%1%m&)Rc/^KL%<fLHS*HdjCW4^3-2$3C0:qL?]6P5-$2>.s2Rt
%RqhC&cf`=;59J/7Uut?D!O'17f[%S6&VO^1.-ldRXg"EAfWEY@C*/aC:84]OH4?U?a-V[(=npWG+T[Ke<hrnBS*31@3:*Uog(&Qb
%G\86nIUpg7DdLA([kabXG[84/UF1Bc37oH\ckC5EBum_N*Rfp/<p/',c1[EZ`rU\?JsTWI!Q];Pbq[L*ZWp.GAr=arn(tb7[]NA!
%.P*,QBe7@6C(q8CTpB4m"k!OR'bRWC]&<\6!$.,<Bk9iP@(W2=a'^JDj:-D&kG(&.gK3rU%`@Q`dj\mgFPP(]F<!_2Jo="uVI&B7
%R95jW59V$:(Yl;7Ns>`NJrf&/O:RH(ak;S$=3VhWe,bGke_"Xpb-/F$0,*2[,YA'*p1o\Qok/UL38CQhXoeF2ocSXI8,1m9^=`]H
%3B<7h>?49MYH%FU=OoAdFg*o/A>WMYVPitD!j'nL,p%pFaaBMT)[BW[_,S=/hrkS72Wt@4$JUHapVD@ie,`l\Em-9N[s(IL*[NPo
%4F>r]n72_3s7=X.c<aaCdhuXP.)&[E4u/j$ACHTiC'5)#aF=@9bnbNJPl]]>/<u`oW`mJTKE_JPAW7WPW`2%rC!nf8i1+i<?Qq7@
%-?f1ORjA)t5gCe*kfgA.ceS=K57Vk9NZCc494e4>.$AjjA`%<6R=$!a\O,n&TM?2'`@^Urh."4r?G+c9(n?7Ac/MG3kYiX@^52i:
%U-\/\/MnIKMFi6##PI;s2pq#&RS0@s_emJAMbL>DdUpBlaYA)3r31OKPb,(2s*QYu^XuTW6#OY8SJ?.(V%*V0VB\420=)nB)=[I#
%gp0$dVRZAf!F$)$TINsGA8iD#c#XJffWuup!HVXMM%PXk#e6C)pR6%=lsEFWPekI?!J`joLG2NupMm9!r,g3I2/l1$kc-\SV#TM1
%qOqF>8S6._PI9DH;[YIg=mbF3EMja&X+agC"+F1&jIWql2\f+Ld5+0pnXE-\p8T0W(1N-29WVA>f^Pc<h8qDc4VV5s$Eq#%-a[t9
%r9'gmS\(eG6e*]1F)ra1YF:Z)&3([#]DH"TLK+]NRL047'o:4L$d$Kg0]>7I@gUb1k]R;I9s8gC!NR=Z9d+Z5m9=F2/\?^ea,1k-
%m-E\&?cWIi>.,:XWoQ#Re#B0kZ[9gTiP<.V(CARE7S'^Rc=N:KD&KgTO9)"+dE?!MVo:_`a\scY)USF2?;6kOe)Y_D/&`irC!,G*
%l@T@O'+\1+Eq=^T,V#+9^eCbN=W)]#=r`jm\s%"ZF`JiY0oQ/T&QLq22.f+8$HMK!8-/g8/5SjJfU0GoBjNV8!8q[m?jS5A#_t8E
%&[DJ>W&N7=/f[S/[k0IW-:qQbMbi7s[7B\oJJ$!pCTO>4q"*a!5E>Igmufgh>>=dK%'-_8r,*HJ`T;o:I;ht2Nl(NrehbUZAeCd%
%E;j-g!-#n.XtBQYSg><='+Ba!"V&BM_&EIL_`(a9gjQ0&"dZ67A>sp75ZNPE42WI0G6dLE#!F`*UZZ(XT9#lA(Yc#SEhsPh?qMRT
%jLf@3/.q,&0oR!/fgbCmCeVP)\JVS.$[#neLgt([%@F/1ONMn!0l9)3mo5'M<=+8(:<kQ;J)7k`d2db5"$&=Rr2,*AMj#01*:-Lq
%$LB.$<mUN/D0:#%s2eR>6g6Q3=lKQ8)VB5SP!C:j#%@klXe*<taHAQNN=_gk?RY(den>cB\E-=;Vn0aL1*rlR9ET+<]W]8DmL[U^
%IUm=$!g5*p&%t[plbX72FSMJhk&enQ&iHU+80<rI2!NlCf;VdOSC'&:ec',/`745U<,IZ&.]Q4or3I$@MW!?jk5$RuDe)SLWNYMc
%XA\]t#,J%B,X+^@buI12mbUYUmS5cdj;GnoX'8]PFSg'f>>nU*9kjmdMsda3C]%eQQ3k_8>AGZj9'u<-i?l4'diI9`YID;qm]:\A
%Re/i[4l$o/1lIk4YnHEeXD1gZ"V.@*Jma0N<A.CT3[,6B#Bni\=7s(7PJ^u6aI9S@1uDgQH!Z:+q.NOdF@<1>]'KgFp2sjW5a=<J
%Deej+(?T:R:RfF];Kf*u'";"#4Y%bNVjcp`]$!5<,s5jpJZc&>OPIKo))VtDYK99AZAC-&FgfJSUKoX3?<r/?=7`/GF_Y(:9HuZ)
%N^moDSFS!p9Z5O#C#1g.qj<%VR$f*I/Tt71\B&I.9=4R)N!<)PZn#g_BoQ]$[/E1OptG:G'F23\3[W;\S>-gJQ9Yt9%fZ'K5(Bi0
%;Yj6Of&\6Zm'9D;PD,:^5RmX>WZL"5FU_X\\WDrgJB/7[pBFAR$ge\\O'<Ob&Sr2*-h=ZVG7<OYPl"N83@5di0k3peUdfU?c]=iL
%>-<(s?)?Il0A9E=fCkil=?i+7!u6(k]qWSNmVDRPMdQlXE1jCs.mq7mm^"oTCj$MRPecIb\mOfI:1dILEF6+7kg*)?UY]!Z'/F&P
%?5jq/-E=oC%BAk9pm;/)@-!pjAofkm.9/`!g1Vs_77HiPmdRnBGYtRo[VAt`,'\nnop1qZeLc9HpM0GJ7Vpmc)01]>h&V<qJh#m0
%X4?]sF)#`T\*T-6Vn2gdhJE>e>u=,3`&;sBIefBHI^;-%TI,J6]CWJiU:Kr+<*g(lXs!\eFR$k*;%:+a<Nm>)Mom*7$ADXh.*Yn.
%6sN,n1kS!idQD#?e4MbV<9_mAD7I@&&=dlJ"qmWAG;K0C7s"P&#2<V!Ffg`*$P0YW&`L1Lokiur:>:U7Ri(ii\&`kfqhHh1Nb&`O
%o5R^g%Xn05a'[]IJ+MK''`84%n-5V8&Ebu!*mtq"E]O_OVNG2>S*cu^<]5f<gmg29[@Wu`3Z25*L2/rrWFr\1at)q'G`'lo*,kP_
%U3h;;13].M7t`3;!fl,I#\.S2cKj[Y+&2!q9.n(@cnm_64@dXF,J,%,?X3g+CQGb1jm_r=*Xa12X:/2:P2Y?$#hSD*RV8G\mLZ@5
%,[XUY1;,-tJ2_u#,pD)$TYC$c?$X4DIkCPD]CVSB*:?eR'U%l#aEDo1akaMXI5f3:b/f.IeVgc!04`8MFKjk?#41!Lb]#rJ.%Ye$
%!"sLAnuHNa[M_BUS9AS6.)96$KdpG5*)i=-^W2]IP#/<1\Zl.?/V\p@0uoajOU0WH\u)8&Ho.[`:a6\^[3fQB.W=Zpp(%?OQ:8$:
%%PcC/l(!q&@D-I50n;JVCXiuW(u[bZF2gn^,ao0qfoOQaWIb&T##++]"-dQ8J$md:$,*'J+^ZlT2=-0+5E>H;J_k9NDp<fWajrM^
%\8Q=^h+Pfqm\WP!XC.u/9%\k"m-clm`gNu[`0M0A"7(fE7>KOTfP?3W\9TWk*;<fD/W4%]gGg`YIIeoJ6JqL8/UYsdAP[/uDI9uE
%i=fmC)gW[f0fVVYe?7S:[6gm00"l3to/CsDAp"Vp*Dh<=Fk2mDg"TK*=0oIqM`6j1+@*msf+rtC`_M9-k[lZ0Z2IVUQ:qkAD4;:&
%Da's7*P;<XL&J,^XiK#>rCacur>M,:5Dr77QrZj`;d:h33MQ$nJu4$s[-e_(8C>7mLp9ARZ>%OBBp45hqa018T$N[lAJ%6fan0#&
%_18$0%rE3lff?KX`hL*DNi%*i]$hG;WXii-[Dm&j\sqQ[$*,e(SO1b`gTrc6mW2gJ_>)>DC$o$r8.*+OFCnJ6^>Cd@_MkO(eS*Y.
%0,9/YF%om<oMdDD,Q+f+;VZb:[:kVM.XU1qbTZ#EPUA#"HXr&PfR'#++573qT=UTRYG&`)-cd:f7V2a\He.be[K#-Mg"kp7E%?h.
%5&XtTdmudREh],KY%$=kbT_p&bPnb[BADWJX5th;S&Qafr7"1Q=8DAdB%OiLA"1=+;n$iG246T<Z&S=M-*q(LXi^JVfa!F^5\,cf
%DhsLo.o>bN/@,m'DDK_'&R.'T31aF0iW9h8\]r0h<?Q0C[;"#0q;Q/U\U&(XT,P9,3uiq9h@@^N=sN3SDC>3</$Zmqga]S"IfE!^
%GJsa^:Wr&Q,rT%Ejf[C5^p\8%)<VbEYrHJbEL&[>:L2bM)&^GqZZC"]I\"]WE9);I>ItN$QGB$\`@MqNN`\,F;bsU8U=o=)m!,qZ
%%]^$TZ0:TQ:=3p+q.5_b1l%8?0oZ2_8r*SH&XmbsGZDh'@aS+*8P)sCW?n"8o)5F_3M.n2\M:*'=_>Q&Bt!NL,b<NKZ'5PW_G>#P
%Zq%j?)KXnJMj[4fdS5d=n\_f!LlRO5#1$*$cLJRF65F$8-^e*8UJC;\!sgfa[j-6_B:U@CV8DBA.Y1Q3T\6/oGgZ?`o25HJV,C_T
%<K7'Zi[8KE<;S6;S]j0oCDo?U@5raG,3=NM?h&jaP^"7j(2anc=JY#[3mD-BF&ErU2d2SJV?:rd44WA%d_FMdc6nf)Wg7%Lmg#;$
%_[k;R'Mkb0&^[/!\;"U@&]s>%&W>+M3Or`o12;>kVhrjC^.N*o#`;ZVa:/-j3mA.#q)@kg678D*<Y=TgJ.VaTPP*FMhb&LpCO^lm
%L]HK-^_>a%h>aJdg4c+\<WErMOsh8L<jl1N$<:r\hC9Z_8n4YhCc%e&?uuf)b]4H<9)jQ3'^"h9ZE+T3fh!J1ODm^T6M(e[Ri_2P
%JMj)TA>>"<cgSL`K.;ppCaL$J%%<S&qJ[Sim0NO2En\X#94h'C[ihg#/1arQChNl1)8^?Y1Opd1jAX-#9)<`Fd%-ZY)p5em8-_n-
%nl1E=f09,nDM:Aa"rffj_VA@,PVGgg"]*b>"3Pe^'6n+f$T)7%#CIYe73J%Jfd\1>5ZEgC%bY+JeSHok7C$,@<50p*8d),:`O+U:
%U8GrfcL?M*@jS%8`.eEa:1HmHg%)BWA;E*3+mFKm@K:YXlo3<G#A@?VFe-Ak20i6gdSnF\ILB$irC2Z!\U.j`8^_.RfB=9R`qrLd
%r>.]9JUk]j1tds[q;'e1a#.R`h,<GPR"59r;<^+)f6@J4`5;ipVSN8e\_Jc#XH<Y?-YWa,YM=>eO%D9pdQp^,<69cqQ\@r];YR<Q
%$1CVu)Aiq?c0qHI7rs;3rSM:k2K/2,1b%.$eR5Jn,?7^#NN38S]2<]cZDrd^*EE=hqK*Y<nQs2#0opeQ8.Pl=gIjLp:JL33`;etT
%3hh_"MbD@_`GRM7:nb[2#/8A6mpNudA9\sFJtsK[c%aWC7O$Z.<[a*4rk_bb.$sG4/T7.tKj*j(+.3W"XH8s@DVCXDD_1R2@@30$
%BeneS\:8BT\YmZh9J1t=jHrP]",K<7L2Os>hh0m];pKGTqOAOoR/dMuCSN?<V)'PaASu%S6QQn^q61k60@=$"c0Lq=r2?_(&nUf-
%TEr\s:^5)J6EQgXLd<19'Ye1C%,'jgH,Rufh,30CY-'G!.^EBdo)'9Jr0mFXM$o`O-T]K6EZ++&$/RG-RMoS*<8Emf]<`L+$C:+W
%GY5h]PlZs&:((a@&<"D0htV8FP*Q@25p3S^8C!=RWL1LKm:?bmp>M)A^i<>o>-Lp^[;9Ee+Q'&S;GE1dqc#d;YP44RqqpXgkc9nX
%3J>0)1koGR#r=^VDOZrP@7f3iT_s[FP4hZ`dDnJYBt4#32iZP[k"F'!\:m%:>T5es(hnluWQi6SV;(g:&$sLDOarQcEF?%&'ap.'
%Z.H=IOU]*>#>iH<hIALFM/ehXLT_`##Clri7MS-AW4*DjLPpMToW41O=]l?Oh__>6WB,+FPZMPmROh#K,Alq7b3\\6:CRDmgjEhb
%U)j5I`RCkbo;]!$.`REim>h_CO/(Dk[79R+g<]4*E@krp:J34da03pK$<N]'c#fbYs0nhI]=%qQ7AZbbJIbqAWDCjo/^26E9G:f?
%Dg.PSU46'aMFTiE--3S$$%S-g8XiXm??:Tjs%Q1("7!Y+,#7lcB-o5iJkm,cm<O-meVn#N`rPff)c]Rq/\C8<<gqQZ1;?=[;`lCY
%/%=Y,2c1ERA=&PN5/NRK>[4,A1t.9HfICcO"XAeV$:c@WQE,#J$1]:\a/K*SPpgR;rdY8EkCegFO]X.7O0=W`ZZh:k;Xt^=--=>p
%Cr27fZ%Cl%kRL:/-hYri#^M.]e%d5ulU@\GD/_SU2DW[L?I7MA)><B3Zd:j#4;aGg,[.P8qj[CE-c+nG,WI'9?omgGJeJ<4Pqb?d
%cg-aMr_LW(JKm,nbc%+1af.5)!M,W'N_((MhM2RT.ZMuDm!1g8AbEE*X^[u0k/I[u7Mi/FM_\HXraN$7(S81Tl%Vib2,UD"1"A0_
%AqgCjVB0TQD:1n4bo=)Ir"XG3I,8-6U)<LQ'pC3>&S)KUCfjB3`amA88F-6AXS^DkF?iXieMAT8i_1\28\*E)fBUaH8@F*>pM25i
%[G<Q#f2?$OJ3#\R+#A#V/mMZ)=s;'**VW<;`YCA-dYbA'6QGL:XrD5W/1&_M;ELkJHfTULrS1-:mr[2*<3Hcn,;"VeXsQ3r>-]A7
%<alE5;%Dh1^HHaQ4E_&jdWcI9KcPdkH'B7H1n9Zl6/PR2U<5#q&\)D=AMP1f0jl`&i"!BQW*af'4@ke9`Sj#Gao0[/bFcS4e$/7V
%pOoBfcSk@6s,CBB%7;-PG;D@"$0k)p.?)/([S.SD_.hU9N\O$\o(/!t,^+`rHdqXgooUZSN$3/!&P1K'Z.`SU.%<o7f-i(\LAP"<
%r,DUqYSosQNl!6n("YQ#1@e&*VZcbl\6)+<gR:'e@8T1^Zt3m<:k.h3<5"r=7Q3.!<6rHf'[o=RK'P$L`g'u'.mlU;(#!cnSP-L)
%k\<&m?h$G^M@5l07khMm4jXU,OaZ#tQG4HecT7^0q4AIh:!-m!U9$h<Y[KYH;+0T,YF\@g/Y5=5gXn_[/=Xn^<f?[m(KY*!9\*I@
%.Z64(Hdig,:[s"<a4B2#VtP3025f<PB>&W\3a]RHKFh<!,Lt%fHhGtL*md((jNXbK)UpoRV^:!/n?`>M7M*!cA[bndToMh%R1.;(
%"+72tUPu0L\b8/LOS[DJC\<WuHE(&oJ@^aM14Y0oGf4aj``TP/qQ"@:ggI6X38)RFFEUUTZl5M<Kd`-\,rZQbp&LD`P+,'RE`7,e
%"hRn#;uN9BoRgN0Lqb2='>B9mb3q9KE]GFHXX(e[S@P(-,$MpQ/bFD6X;9`?/3,lQqUDB2HfU*cE<3-3;cth;2]Z'(h'F&loq=6`
%Ickm+^K,O.cIQ9XXh$NNCS5HR:$$',q`dr%eIE=#eO8n8Kl?j;dmu>=5q@'[V(j'TEe"@t'$R1i*YO1W_g4tH==r6tV^6U5Tf(Df
%&=Xgc3r<EFqZW/g^AY;oEdm:sK"m,dE`uime[6_S_d1qGs(R&?YO9a,Kc[E.#I2("rl5Z='^O<:p&1ab?!gVR*HlR[JA[?5g-RMG
%/_rOdpsZiNXVU<OD*)ZP$?*WVPZUk4hkRW]]'Z_KCbp<bl?82cNPaE*hOm).:AQ8,@Z(ZJS&c3^E::Af_PCE8/D'NQgrub$=JAP%
%0OIhWF^S0e-/B*_p:t+<;"a\N_HXIK?toSh^n2Unc6d_"L%8EmAO5R(Q.O,?):G<K\L>SlV,ip/M`IV@%-_L1P4:;l_4S)&o)(N.
%9'E'K$EH\TGHq3W<h=CX1GQ7tOMBSsnZ9Ai`jhh,3WJpdr*+KA=Fsd/*AglKl)t@dUgurF8T%%#cM3up<fX+7:.o%L>-nq@dKqHi
%<\WE4l,@9>r,tE?rrEU/D\8`WNi`o,H><[>8rZkcXk(r6$NT[m8XDcIR42qE$HZ`c?IC$lk'6C<;:MZuaJ.Z^-plt<c<dDtN;@Z*
%[M4^YK6Xc/F@F-CH&jE%8$*?p3hseF\E9F>cgeR2m\Dt$+\^#^RBiU[5,;hlH5ra_-oA*lmODtb)0U"Q@.c#uBi0(mWme8bX0F;A
%!J)raMeWf!%f*eKq9.1N_oR6#&Y-]Cl,;/Mpmu/l>fq%G2-0jlF(Fa"/O^JQS9SeK-VFWslFKN4C'_I7=@Il6pUUH-F)SPn\SLjF
%p`R7$V+m#[j4&+2""dt3cCD\-h:oK25)[sZAl7)rAptXTqH8eM?S"/dLE]qH*&MCqCpW:N`3$lsE)BNN`e_SN'<Y0Z@4eBB(8OEt
%TC";ZR\(GeHcbdUO)X/FcFh?.YaPX\+TA,@447)g<*2UH#`[VF`*ugm()le(.TfM(3M[8_9cp\M$RV[-3%g#IQAaoO9s`hLmREHT
%iun2Qjn"-'j4^9\3<WE%d<:u0jP"+kjEs22j)WBQL['s$F)'Mm`2(hB<UIjPpLZo@3!\s=ir0,a#Crr@IL@G>2,%g\Q0Xf9Z-tbW
%E]#p>a:4#3XDg_PG\LUR\V\"^q#B9]3j8W!!+"[uV;>NSSljlI:$74ImQcP]1hodIU%C1%Dr@Q5eT!bQoke'6]"YJ@a!s(M6YrTT
%C8Nh.PtEqkBGP5l=-`*/pSkY:;Jp9<\IRG:5SOafIYR#9b#+JeCMF/Ig#R`'7R/E-8(GiMLiDNhgf2PIR`*3B[L9U;F-n:e/L'NN
%U')=@Y]@H;'cgrg?_h;+)Xn]foacM(,@%dYGYV&V$OG7'jt1:H_-bk^jWO\T@pDh0<W5_IB7\;Vgp+;0nj[CYWTi8@0ArAJp5OYI
%>9t,9hs(2"WqMqM?'cKa-?nuKP5)1@_e]an[r_J:2=2Ahd5H,;CWDVfg*q:N%=t)hEb0_Ng.)lpOAsXWWeMK\-d4+nVF9X!9B$9$
%5e\;K"ff*0+]^U<,I<1e)XXeA[_9QDl^&B1119%lhOsa*='D:K2b:rO^8O'j34FS.C119dk9*WHL^k<.S)A"_,aZbMQhrFL-'l+C
%XX(JYP"dCiPNY3d_,0M]s/hNU;G(hVW^EpR^Vp$"oB0s/c6EuXh7o!$'Sk^!`P*=:UG/@Xa2$?FA0QJ;e)G$Jf='rm%-pR:+r-RW
%l_a5rNGJ,&a1a`[1W/g((j^^T8OL,[<6N#3q1LUIi0n"Y1:RDMWQl^e\T'5)<>kaHTH4>-ogT#[K@Tq"^fD_jdIKXGh"R;X@ZHRc
%9OjC5dlO%2<$Sc(>&DIQk-<>TpY1*IX$qAWF3klf0VdapTB\<$47%u#\f"PH)f^k-hmo<9q7ql#%\/Q[,\?na``3YZHEh3&kpcWc
%V"J(/=4o4n&LPsFS1d(0*4aV0a@>djYY%HPMKT`tOB-,[Jofs^_.p)1TA$YcO*kq)p=QHmC4/_QDn@(H,I\WEH>F%^T=UTR080FF
%&(dG2CPpk#?sZk;N<:3KIp$$#C\ncj%A_6'PbStbTU-j7q?XI8eP(C3jslRWSm.KidmUdg%0Zr'F^5EdcP=d#4$p`i[,aIH=B.<<
%FK@/!ncGeo&a&u1;%+(C(D>$dYq/8:`RWp5G)ZFl_2SAFTPFC\[<PK\XP%Dkmc>VGin"SLq4?%2P+h/u.=)":<0R4RK#i8dmtrDm
%D*c0<f0!fq70t`<cnImoQ8@Z$U1P9+GSTF`>)guUZ$MY,lBsh#NqR2$r@aTV2FpO<lbm`)<q`/]Vu!*7*3_3s$s'lJ)O\cRS9\3p
%Sfuoid70un^Ip&rd\hdQT;G#<@_TGbY6.4-C5^NmOAaK]F'ZA#c_?[`JWnJahjP-%8rja7L1?>S]j[A,c`P9^Im07F8^=f=<'2@O
%FE&6XF3_ctf!IW:"#)*OBtY;:jePgk8IhJQ%!O&/Rk?B37gFTKS"]G,0`]%-W33_*7RqleZ:i(HIIsD8lG2!K;L18k4&RN!mdT7E
%LO.)h]jP::jB(k"Sm'Zg,C<A:31sE2_S]al68,KE7HaY))m[%A5.j.V<alCE^kI3bBH>Pqc(8$<XQ\n@^g"c)+l.$sgcS4I;K`2d
%0bFF/8UP:GWq9LnMe<21>^pkZ<t>6$d>ZB;W.\N'>.gb;JQJ>,\uc0%PQ&0&e]MBV*:5^'.b1IoS(;='&P#_Z"_*.6BBBte7FuRO
%[Nq]2W)m\miDQ$>#.SX6iN$9I>$<5*nXiVOqJj#H]^!MnO?<J"46tD]^=CML&NOf+/TU('4mbKMds51f%^s"Wb+[3Z@ue["i3+_)
%M"&MS=``DCA!'i&,Sn"k$LX6Fkf0lTVf#lg#'1dNCNWt:J#V4?,?;j6rdt1N]%>R/59EVbgiZU@?o?nc08<1PgY^fEM6U'KDNrfV
%O@>tPb?>e;S#7c+@*FI>L8o+$LuhT%qQP?5%$X:F$Y;lUA\eYW^Z(%t%2"^qEa9OU_u72f.*7;H=*3kP:>68*VV@0Lh<HXrS:4(i
%Z<uKuc`HY@D)2uo")c^-@_91d!+%saj"[8s.#1l:?A[P?hDm_U^^/TpQdDpaHdp"PTgqC<eM>.3Ln."UB(1uAf+E.J`"nH1f"Qt-
%Kf_1Ec>/P*g%Nd;!l4ZONgS)V+[to,VV!NJI[MZGYKHpL*VcWRFJ\Wf`L2N6:nuEo;bK40j2\tW[8]tNG(?+nj[FC8\TN<N.<k#9
%E1,4sI"2r:-sf!O0U?:O-+ceaO,C$hZ#h>$[71Xt)6\UDD\"lg,N98iWR8s<76De"o3sft*HKUt)1gr+i17)Gc\;1o!;eD/MNiI=
%q5skdpMWh%>7a#u$.Z,&$2OB\5E>H:a,4lJ-`#JqkG?r;jFEJYEtj;of=[[hR7!8e*G3-@S9_n0jD!=`KU30):$ks0hXWZ3b(kr;
%]u&/dLKR<]d^IJcT+AA;-F@SMbZO<Y>#`i/Om9olfGZnb2<O5g59EVa0/ckG^B6n07mSlN!1;LXZ_\)1NKQ]u#QLL.*kM9188#1A
%GnE`tU&hD#<Gb"T;*<Si*'7**63K<U1Nc52L$?;aI@qp`<:=ir_"2jOB$k^=q4i*Aa'E<'o_EL6:]+=ig@[1)H.Bnq\$Z1r`qlBZ
%*(ZHTOZOgK=H"TMe';@g'@o+1PS^9TFFM3NFQVjF53q4UYC1cI`Ao4N!V\5Sq51'[k^I]t=UhQ>A\H)o)nBV/dlVTRknt7206KG$
%-NH6XDi8R(`;A[t8o\CQjr1'YF^0k-0;`E/bjClO@=dP6W3KRk+oT9UHi,kUUE1pT=b',7hHhJfVj@"XmLG,oJZD-=ku:.Xr]\SW
%0ra()O<R]V68Q*5="jk+mqU!"09=iRkL5B00tii&66!.AG]d!'X/fhJ0QT;4.TU+7%9mWXjqTmbQN@[70,?]T3r%#k1HK/`\!3.,
%4!Bq"5CI2(>ZBo>;&*Osi/95>Us4SiBp>W\3T?;&0:3.BB-Qo&1_4,C35-;9WpV6WSMreK=It#RJ$Zt:!>VR7AI#[LpXA@J57[Cc
%`C3.tBpg31hO!T,1Q2*1]?00o8<AP1MjjUYa@PUeE\9uiEWf:<$+_JWMa3aK"(G"'NiKbR5sjLAr[Bm]K10]h8!UrElcbe9-*cW.
%b)o\.F4s)uETR%:CT0gFNVi=`>Y_l3!b!)/1bam.`(^6"5^STJ6H`d*&2gX+YmV8I'WVR!VZO,Vl`K=I"[l&,G6c<\0&9KaX\T)[
%*k%5:/oijc]WoTC>`c%0qrS'eEeRnm@9E%_,l<E>57[Cc\BRsSpL),-061!^>Ltgg:*q#P\==3ubr_Xh9Ff:/PrF,%V?0L.Pn22e
%%?=3jj:%)gj:F(B6ZWFc?;YSWDCMDneOScu2Gm@06qYd+cJ?saMf!3QSFta+Yims7)#<?il($L+n=^b8FWlP^_"9HgXgS_@]nceU
%Z`nb@=1/#/98aq>6kX^n(_\a(5,LZM-@d,#Ah)7ddt2mg!N1tI8V=.+OBk0_jk[P8WK<[$ZO18InHQr0R9i)fpM)E5a$@d#8HsEK
%H/EFRR@"sc]<1Mdh68Y/AqlM(!sGIV[LB//nlMS:WtoILA@\NKRj+r;Jc5jc?"V6p]1J&ecdV5&')^b\OZj+OA8lT%qk4qMT'iGs
%W9H/&6J6l6kNh=r+&2"dN?ogWgi/0X(OD%?rb%R74p#tuToI3E5nsdHST4MW"W:Ib*+U;1<s%0.(2ZJs6dF7R7VPEpTW#`8'QJOd
%#JPPkACOu-@3O[c\`-BYpi3N.(AUul%._SNQ`&F-c$#@D`t;.bk!a7q`dW+cP?hL4`:6V>Bd[Or)3!t+`L^?=Ut`X&7"rK1)l[R.
%g<W!N?"s24JU,i[&:70T:_$8/;"/;gZW8U.F.rlXl*O>#058D`59J/60/cgXOA.Hl]VT1Yc-Q]rEt4]"41-`JX,8AsIh)W16Xt\W
%Ffck$T^kmVLm1,L%Wc@&Dpp0c>p?eeYcDdESHUR>,U];@bN&Rj/S1*!X93Z%/ZNGEr&E>;$#3+I;;uAoWKSk/:[Y,&$HA4VW8mqF
%Rj_ik_TJHQ)Pq&NWJ&3XX-rclRP;O(Wcd_;Ed9UAUo6QP?]gs]l+(RtaqoJZ[ggPHRT3#F<9.Y.M6)5kMiPa3R:)H77%;pkS\(b0
%rs-67]J><9E23J%`P29@I[\8b2.#okpBi=;$S'8UHAt4?V4cnUNRi>q3s6%tN6LGimi$R]MNcZSUDMIQh/&!_:*:S3kI^XOg*LbQ
%-R2+ChK[.*F_Y@Bm$]]o3.u^Hk0:>,$e;f62X-PNJ[3;p[3[e##:P,$G%ngpAOREAX*R`0?o'>p-4Q%ZTIO(V['`Fa,R(-DmO-R!
%]o%6j+@`<$?kXD)bZi#HcUTcP\Z$:t8O8Jt.5p+Ga1k.s_HAC8CCD(H0mF\MN6/"`=<SVe!@ti0CI30,rtdD;rC"a1c.8?bMZTCS
%gK@u:(#Xbb'`6L]7#Q8mG2--VglW%SKV#caT'H"/E3Dm:7m`AnP4BDl=(bV0h0,0Caq;C7,GL?q.U:q/Go_iO@>e#(eL;,U<;B]k
%:M\PjdB&WC&=s0A>8i"C%!!G90BS)aR)ZNc/4'IDr>KUW=WRF[dSc!7iTn:*[A,T>eY%s&o?jB5@["2i/l[($:acu.5<'8uf>9!L
%oM%'!)(YjFjb,qBF//c0C)lc<[Rj5$i8$oe0`kEbnD7m'e^PmET4"e"In!I59t6Kf^3fI7,(e[mq@uB=d)XCVEOs>SK3aYm26'EM
%7'3ZG>\@.3TA3X8P`R+D-=5_jRNP*T$%@4Y-M>G7[]:VQHO[</i+R.nVOO=.D5XN_h,c#2qL]`a,^X@5#)/>.aA+/4,IuVYIGomM
%6q7V).?U.aTNl",Hn_16(04(90%#=%0`2WO5nDVIp&PRqYo_F*OE8+]dH,Hu?6Gc$8P9-K*4#7u9E=0.WeEr\SX%OW&"ETk]sgXt
%)qUKC=)dol%<MjTIpTb=E$o+dkLko/rtbte.&jdo9C9<^Ra40;,&D<G;,i)l#UD/K(oW!On5i!.,K?IX%/nJR.45diODAg<YF,Wt
%ch.'W[T<nK\]U$)E'@su](giKm)Wb(E_<I)mZf,=SJTsNLf_AR<YE"*e6$FWl/69=ShUY.P+#&FQT0k/V2%je(e1YD_O)bjRg?Kl
%Wfc,PgrFL"O?Q;DL7H#te>b<JZFmmLqn4.YEt5=dlK)+pG,u=?T3i'2&=PZ2hk@J$-%kfrVT.>tA-72]9)kjNqtej3$mD*E(uqPa
%FsQ7Dgg=&$lLreq;=kU<Um?qhHn^h.[EH%c?#$I_8l`[5rg<8gb9-H"*5^1dGEKPpW]7[I_bO._3Y@I9HWKCV\O+A6$#'dh\XQ[f
%=&Eo_)O0oHk:L9=e'\t)P24U'lrdD53)%K4b.3@o'oU,8OJ4s$hHO@drQ]r-1T+.I('*[^#"SB-"Hpm)Q1MeA0`;TZ#IHbCb(A(#
%Lamb2VM<6p,Z$6Ck%9PQQrQjJbAu$YM6]oB2tZ-i08S^!8-#HQ6"H1k-aKmtpi`r1p$F>0R)'N'*]9dsIb'!i<di^f:'B@-'B-"V
%HbeJ)[27RlAu.-<JDY,K@OET+XO;_,F#7bqdh#!T\iU`KqjP0bVn*ud_H\@4S7?)j\@5(^VVsc4.^r[d@9_@cYQ'&i9NMg"f]I,-
%Q(th:k>\JPGiK7IW+2\5?Z=6Sd(dZ<1fq7iK9X>(-<l#-]&%s2.QB:sN^VFc]RMFCIXhg(DMnlI)5$3fm<lAm5Y8*,nu/SYCEN>n
%[]PbM@)i2`AKI?`+6",,)3^Cpk8]0I;<#3VZEsF:Oas8ba?7m3[k\[Qir#7B4>&9+QuoJo3Cl&?hmntRh0(FAW6X[Sa*g1!q=="K
%7eG`o[3ot[Lc*(=%<V*&qGR04n[b:`.3-pC@:=b0h-'(6d[)QoZOBUhVnCZp\5U_%qpoh4A)BHB-VaTc2g>D!50IO)MV\Vo11\bk
%FB*>OM%8T>/I[r)>ri[3I^HbO.+]5kj&VQQ5kE#IPp,Y,3(4T?=I[.ZH0agu%gT.!_ZncY311&\e`'J"\["V4Fshd@.r'#?d`#<n
%"Kf,PQ%q0).>g?W0Wb`o'Ub8jPZNj[>ZFQEa^@uEL8D?rn?fQgZ20;)1Gj;0`?^:Se80_S&J6o#>&"L1E5WtchHE9)>U2@i2%<>,
%IA53"Z^iQk[LUc_6L=+p)oT.FqeX).23AP.CK<2NAZWTsOU1VNHr)aE&SXE/_IG`lVN"+t6:7)6ZP#jZ-OYnp3#c")0h\`SQl:q%
%bXh`6*Gti998#d5;CRR=<N"ju(*hVV8pe\Tm>*AmMc=rM$I!$eSnbXK=>7a];5;PB.'QqR&I@@Dqe?+g</%#8@&8uM/YL^S#Z0:=
%QmPe`9a8Z#<Bsq)eYhtS-oK9\GF"]!Uc1cmiha;N8D!`d45$NDG&q0P.dEKE19I^-fdGFG5+9M&AlU)g(62up2koC2l`k;H(s?5p
%o"5`+J3VHXC2bB)hTOlPA1?6gF&n4mk(5SL3(L1d$_LBl4a>R#>BhCMC3Q)\pj1@sFI.:-5eg*4Z#Pc39pR!5lsH9k/MuVo*K`#)
%:MI$4?_qU$I+f5GA(D<(d#E@eGdWf1h7QW78=`D\GZ:[WQIZfaWeO,3E*e:$5KE_tFtL*QK3N1%nr/>O1&J9B:g;T2HEVJEHM@*2
%_[&J8Wf%)-Lg.#Y$n;<ifkMi<!g7lqKmmf9h1+-7'a9Sq'4lmtHIGtG9jgu1/KX<#_e*e/Xc>26>DQ?h#L$o^Ug8n%kc:I;2IiT:
%4fUHH#(),pG0'*ZelD%dq4uaWIY,8@q\OYhI4IeH3dpC(MUDGm@m,:p1Dp)L"?0-mpj1E!+Asf&K!Z[5EBXnEC\c!O=>:gL$SB<W
%UK3<HkY#r;dEY"&\E'_]EKV944gO/khZR%CZS#H:S+W`?(k9\5k>cSW+NJA:SX_qo(;<Z@Xo3e1[lqX;1?Q*Of3KV\//o&Qc4F&k
%n(q@OSdj^nYJXJXG4rLNp@^P;/<!',*jlDr=%p9[l[#hlAUO=0UQ/j^`V,bD_-Zs-Er9FMT/"r3=<HPV^>:]TlIG.==H]dOc,.jc
%D(RT9gflpJ-L42_5&.K=O1]HiNpc.45"VRo%ioBmmp#7g/mIf4:HFO*]&T4qhmb#p0,eUi(on1#;]jDWhq2%lTCt[C/NKrL?;36l
%_FKr]BW_i*/l]#i_`::I0i:q_8R'"^dPNS6@7WArkEn']`'gZX.IG&A;g1N+',(OmJY8N-9GH)7VS0o9dhqfV,pmpXi[&C=o$\4A
%Bk`E-?4RZ=K3G".bE'`<rfIi,-m]c56-\tq0B6>t)jt;L[RGHI%3IaB#-N<XNkW7XaW.L>-gb*E6i$teZ'].RmSPZg6\jCR$a%/Z
%YM-ZNT6*03b9ASOo2e.#8gI\1-XbA]P,C$VNEg%+/OYp/R>`#/.UQ`VT7%8=U8E^FAc2=oT#rgL+8*kK>$:a$I&"Eg2Q#:s-)fHb
%\WQtQUnPgL2!Q/iWuG,3a;5cX+;`g>\Cdnc;[6?q2qI2/Z6>=:bnH1=OoL,EkdjCKXiKF_IUt+\*aK($7&kq^LNqK?dkFu>5I:+*
%e<WrC7oug]e/V0DMbJb2iudRIJFUFuAU;W9!tDqGKd`tci\YtK`f4N6/1@FoK@\e8YP`cKIJZ*r:b5c_T,NZ4)RJi:mo1mlD>_N/
%b:9P+QI:>\W=dVi5IWDMD(JIT/7USAk2:NfN_Qb!KKh8%?$;W"<o7\unsfh@`C-EaFJMGj;J!6j2h\&u9EjR%L_l"Sf82?8MG_t\
%S:*oYMb8&s)'tFh@?f+j?-!2[p8IXX0rlp;^q_AfS<:>@B8uQ+B07INo2p^W/&QZ[lbEHeST-hSK<:U&GNYa,5'YIOb.3)_p;s.9
%HJ`#ga1OseD@TW)PkC;.N0+QU9i])5VmYWd[h,Kqk[BA22mu,OVAA1VOHAefk=UhN%S(uplTYmLU@h:i7*+>dHJZ]J'["`J$`69_
%%E9O2W?K<4=&9BdS0jKkQ:DQL!1$fYfE;/>`@FS,K8QJQD%$`;S5+nlSh]R^YPW-jIJ5Z[PBuOW<bVT'kM?CD$o,(0VA/k899W2b
%34_#a4_oq*==B%$4GkH$jsK2u-6p$7q(2TT;K]?i.cr'Q!Msqj%T@DIYco<oMBfHq6HSH"Uo"5sJWE/\Dqfq.#N+EMC#cYTC06Mi
%#*'20`"hOo<ZA?G$Gkp-gunCg.M5&`:csla"&FVKfJ/R#*Q<6cQM=;;="4_`i\-;WM5J-#I^2mL&q9QVH4FRS/hC5ONQfG:ZGg8g
%#VhO_)`5oHG\^i?_A,43k7/(DQUaq5*'EC2N#k"4;Bmm'"Ia:dfcDH?UFWA=(%@f$>rsIuW'rBjF7sU$f0^fq[l_S@>qa`a`AgbM
%PXDb:>tE?X,YB!(BWuNP"DR2Db+ds:ITUf"<>,HrAb9-\g%H8X^G;l<ZMDsH'PLkgO"o.L?HJJDM6YNq@q2WI0]DU+reA-)Xs`CI
%pFls-,E(l(M#jrZptCX9X"W1p4[SJSQKZQU.h@Q8?mad)5Sn@L5e[D\7RlIuqN8U6j+f?qoOP6Lk+X?dd,%n7D5%AQ2,%*]HSeD8
%C4>4oV7"I$19HcZlj-kV[?;jOMOEG(qAS6d.n)[AOhW`SB/98Z^XNR&LRb^[/:Y?IN0A:%_tbHU/OSohhPN1jP[`5(74GKJHp)/N
%Ck:qYUBZ,>:T@$;Zg1@*4=BAH[B<[d^)hA9hplPfrp1P+4:j(?",V_5S<Uu8&lUHLVTDI.]@&OY_m(;8^<'m_o,k`r1E#HIPFa3k
%$dme[R9(Q#2nE+.bDc:s0S2'p-*AHGZ='$.QNcs>pk/M%g)KMO[QK:s4S]i8$64EA(>cN,C0e:)HTgXR]MI2B-VSULTl2[)_BJEm
%TPsB_gZI131Nqd7isq_"IF"dW&79)B,N1U])aX1@1R=3g,T)4RoEK#Q.Zq4#fgWV#0<AF(?L++pd^;N)Lh&G+VkIGD,L=CY(15\N
%aI",nhen3nomhk@:j!_^M;--6g[S)MHMUtQ.@)b'FlGsCPc\8<JCcg(Z.H*YjpM:FD0FA2$kNe&$@re)-,2`X,#o;[&$k1f0Dn3R
%rS:i?%.!':Sm2lOE1jiK-&StPigY;6<3BI9-hAp45r2I$f%3O!Mo'EV!ersLE\\%;oC+s7@=Zgj.[t^Z*VY^lW'ofLUVe-pBrq#6
%pu@H=XBHtpd)Q/n2K;bi1ka0q/N\I!`.q28_o-nF';)Z$(1!9_X-i(f0ZsE<$bu^/S>igb[5fk-%Q)VNQ%d;`*e?0`UQEWB6q<04
%ka@fGCbFDN5qVk+-rG+%bN-JM7#O/AS^K.aVb^KV@`du`c_DBdFS(@OfdX+];b>_4of`lUEdBJcK#h=sl00STHQtD/mj4S(N3kQ1
%;40,-c6Y_9WrE4sY,*gjJ#a5UI!70"\gjDbWu,Ub_3Q&JoHiOTN(2c7LUsqiac:gJ_H(/M-F,!G10AkD0P*cLJ^uT&k1spE_5#dF
%\`k`na?3>Sk*HkcWERR7=E-AY$d]uNpZnQ"'+:d.p$uKi0/KP.K5I&+2:jQHkG\<8l<T8379cdYMQIs?X09mYOFn+fZfa'kRkOnQ
%'MQj?//K1$$Y=9!*^ilDS9YB7A/WgWU#/sTJ>07QRpR3H[&?63re>hD"n1n/U69b]@.JgC4i\^pb.]_dL-L(K2d]E%JC.Q`hnYMW
%p^J^26PbCR2h?hG:oWS'IhNW,.-DEoi@kbHa7q+8hY+]t[m8<(gH)18d*o-8'LQm$4lZa_1OL8O5)e34k092LWg7mc%#p3e3S(ao
%UPJAQb%WVe>pHI0:Y/fc/=KJQD_E`!aclGIji./;>eO]5_Mb\_i])j'&rZ0@0l/I<q\+n%'T;tc9:[MS8]qeBH>#m,j>4?XMeME/
%nfR`E#GpR-\.&)r&Jf`CXp*YO^=?7XK7!?g"_M$\ma8-%^"-aPm2pEegTLtV`I4E*o2u"cG`b41^)q\7Xa)L_Me-=$%ot*[;pXI$
%e*q^Zd7K@Q\_o>eG*t,hq/%bH'<e'NNCIC4'Ci=>YnHeooAn$=@"_qSpI&.sA20qEme,5fA64.hM*TjH/-.rYLETu.O_"tDr/8CC
%EGQs5j>0?)!Ao<MSY?4WROs24f#e8^N.nd[p986'Ii7MCX^C$T$j<n:Isf3=J%]RGF,Iq%VHIuac%+,Od(.L=a(WdqO-aS3qs^Q7
%U-8(eeQ=:Ug?VVS_lj"(('*lki[*ouf0bRnq^FRbI'$?UP!ckS[mF]E5eO07f$OBa>cW#B[V#pT.oX=-4S8<DEVT]bY&]js<2:`t
%b1a"VUC@'pPR.\#cWMjRSYM:Z0iqg:f98fMr*o>s/RIi(Dm_3%Dn[98*8jU-_-SI,!B=g3X#NDp1_"mF!4B[^CokZqqZC@,J%tZ!
%p^5J'r1Esq<m"LB[9;j2nCY3gX:l4WdNSo0@\=HUg'/16F)-?3[BYkdYKKJ>[iVqmd2mSnC,@QHrM)j@NN5Qdq8Zfa]biEW]f[BZ
%43#H-0^:+"*jOniE?]QWNWCkaI81,OZRQ1+mC>npg^Dd@Nl,NipHGMak/;U0SSbP@qkGII2+TVb"`Ujq(l`#sK4k)Kp%31R`g2=D
%CR*2Lquh:#L=Upj7*B';'pm,1Y<2)l&l9#f26KeI:*@r9+#?j].V`[bFP'5BdUAF0UQqi#VEPEX0]%6%KB2BS+^Qf^CrV&Q?&WM!
%Kn)jfSrLn\&$."^FkKY(D<Nc#DmUpFqri%hmM\facMjOGFFr#9cDe`!\$@/AaGR16mo,YGh-])qAke:^h41C4FYRS61ZAN^<fgJ@
%9EQk$1J3R!T,JS^n>Yq6[>MBZ>_IrkPQi%5&ne/?"7MFP+0-(f(Xr8-GD[K86;Y*q\:bV.:,ei4\b>.di`*SS@,/o!FWX*JWE=/<
%3A:gX=;bG\bZoq*![sUf76[#@P@?52o#eMD[W[ns<p@36KU"g.m:`;"I2GE.V71k&,<cnnDR.h>7],7jCdqVlkYN,dD*V%lcD;,/
%Udc$E(5LMZP!bt`4n_=Pj5QCS"M,a27$ZciUg%N6DVU665'-?fJWOe;SZ]R>,Hi/2J^_UI%%=gkb#YW5Ze)ZRr1);<MDm9S4NV5t
%Y_4;_eMj#eHa;FgRB>gcfiHfLbGl-tMU<oaX\:Y2=Rd7Rh0`4-H'$Q_HJAIofbR*!=">*G@OoLZ_F:fa@_8;H*G?:rD&.Igf)IVS
%X*3Z"#G"8X0^H:Y/^sNN7NnuANRR%s0Gi0a4*dYGN.M8"P#k*0phc6BWto/C1JVGllJqZB]"(DU"SJQ&B4`F5ZF/*2Y\8eRKUEu/
%NU=<,Ofq45D!0Yg%=8a>(Sido"qRKH8@"d/3@EiYN%3+.cR(Um<&ArMAC"iT++L=)[Qb]sPp=diqf=es3HA`9]Z^A[Z=9f@k2@<X
%h"D\Sb5FN"Y2RSOK&oJK6^Z:ae'(,9b8W;_Y6M#'e#dJm!YO;"c6CFF<n!>.nM=0IM4_egkNp>Pd5I?O#d:kdNaN_16)ZTno9UIs
%@Aln5nPJ=3<-*D/8!gIp2uXD1jGmTZHl`H"aJHlF7`nZ4U[2J<D>u$Qq8s(0Ptg03"b(.6;cXRP<=T4pV(icqg>oSM/"_n'k-mh8
%;ic*i6%#M$n2"KgPS9#+:4OKa;C2gD,ni'QMV6q8DChY2AO=FcI;KES5DIB!(L?La+]M`doo+YYr:6^0HU3q.h7#ba*4[b.f&rUf
%3mA7m75atlM=-7T!32jKi8gj(LQb5^Q2e`co_u1hLhgNc6K*U;YXU*IF,_R[.rM6iU6U"Z'j$;dBo93Un_a[@+^1ndkd1I-%8MH+
%\)9YiiSZV<6f@35NG8t2K2,#]]crd6*9am\"Th.L>Yc7f9HV:K$(&SM[F"XB)4-"Q#-m@2A"iJVRnoarC.)HqXOR''f0<$P2h%kb
%5s;D6<N*geRmrT<7e!Ku4mgDQ!K0[[DCo*h`@!/4b6GaMHSsr6MtZ?bIpBEfk*Oo!.N'&2*nfOM]gC+$?FF0h4mI3Lf2qIqn&:l^
%bc38742f/n'U:1EaJfb;&)18d$(97lI5mK/I!k;V>OV6,`k"A#$/[bRWea^OJ%]QtK;Wam*NE@\a"\rf$&%)L:rN$#"$LH2mFcQh
%Il@URmb24?jVcSjK<W@hZX'*=hoN!(YIkot*8.MgN6JP_Dr^&H!M_LVI@EHXOV>_p!&*i?!uWlfNDQlZ+3jb7as9s\Qu?Q;!0+=)
%"m';/U7cZ'TO!1npQ,.*X&0%6%o5Oem*Hj7C&=7fCXu^n`uG?YbNs::6=dFKG5KPVD>r2N&+/t<BMn:=KXmVH]/J)\+lHbF:R-_i
%4iTEBs0!8WlG6F(<=/IA2^Z(/:K2s77Ld<\h$!9Ui%KTO1*aFKb(ZbP^6D?bYa&af\Hjj1b/SY%Y14p'FaAZldnS-ZUM[47IW%p;
%Od6oX&u(u*<%GGi'r&\[3NL;d$qs,=ImR7!6BrS\VhR6=IZFW24"*a]!XA^rat_2B(N8_h.ANkg\%$BUSG(kJL6m7744tj-Q!cGs
%$&V[]^T12gql9[nY1,CIj37%5Yf]>R6P#Vh\18:=UWkFZ*ejih@k?3*\ukFe;5pC2E\pLPTpTtk[('k0rQWM0jf+"J`aB^s1*W6U
%^\ASL=rpr7qXkQ7<(3j5bIr1o"E4<hDb(]+g'1q4q"<b(C&Y(1pt7LC`%!.qct0>I?WsXZ_JYlA23acNBsBM5M<('2K1FucRXqrL
%+\$`se>&uO.)bEol15O'cLST`M7^=i77JOETo7#'TK'ti"hi^QgW;'"6`f,Y*q?a3FlfqnRoZ$4`X.^+"D@9G,qY0mY]43noWkBA
%9Y<^*'gGqIn+0;%;C,kL"bhoVj9j.bgpO*CDgQpilI9Po%>m#_\@aT,s$Zo[--^u9oE28%qb6XVRKjGtp##4tl,oegq0KL99oP$i
%UTQoadTX>Dm-BlL2NSjQMu9CjVT%5>Ercd:,m#^%bPqQhU&<Zt&TuB'O`<0'HW<@*fI'M;0les:f8k-9@5;7GVImY"WZYX:oBg@d
%>LES`L].kXl0I7#WTKM9aGKk1Z$e%.YfAi'#O!P/:rT_8eLItKdT@YFBT?<f\OGYdp.?-L@b3QP;>JU5>ng]co1PMY95bin_q&F"
%W>$F)1Gl-JGgpGsg^%n9n,@cS5hC1[&rSNO`kh_b&nS^RW%3JLU5O#[NWMaA?57nMg?t_gVYqek;gcMjH3QMYi]fS,Aj7"&X'Z"k
%(co(9(jD2Tp+erlNhAK..O0>)W>4?-04jn(FS^0l;uI$g'($QtP4$$WJY-[t\XEA7Eco8?*&k$TTF,s<PU$EfQGPusgp"Q\Wo<=8
%'6pg!@Crm0m&tb!>d8I.0sO\Z(2Lh\21qE`at2cn3NYTa,ip\m-kIV'3bLm,04"WCWI"DsUZm3%`)uBM<b$7a'H%<1]di%R-r%Vb
%HIY)@h"_S0K)g^t$cG'SP_M22f=QDlfql4_)OsHNh"4,(+dYCZ;d$Z#a,)AnAuFTj8H\;m-*Hm)6-U`dqT+s"c"MaQ8up:>Y*aik
%n>sCmF`>=@6%"`qjg.G51SiC6[L!t9#`'$Sm#HU\Kh0[EGW(tHDW;IpVdaT[16q+ANFLm,PBXP$_*.opr+_"*k;p!2i&%EH`HqIU
%#4A@.!aXIpmND8f"tmq]H:1@lN1<.R-cYW_J.'h_kp%K=djpAHch'h^fn(k?h.lb2VDfR47_'pq4<^%p7DV7BRT7B&$E'h5$eH\T
%QIV7hH#0\aIW%p;R8a(Er[7.s1fG?5i\IH'hXT\q<,mbu:_?NeI67[H;&;SS@/GUPb)=i<b#3c62]0`S!sThZ?_is$-aIHAO&EeZ
%1>qll3=XB8g\Y;6W!JO>W^V]n<q4B3]q+L#dEKro5*HEFqOfiknY?)QZg+%"EFMt6(2^X]CsH+gH4o;^oGZOLELt;7&-Bk$1Y#Qq
%)6X7KoE892h]DLC]cO=:7tCgZEE6B($3;iGfUXZ-XCs#*OqfSO_kiBN$l*aG@GWh_J/Yjo/I;Zc?.QtSg$-mj:!Ts]\4Rlt`OT<(
%s&T>?52>q-N)RN?N'7\T%?pZWLMu?:1bc!88!8u\4NPGoIFP1K2J<sUm!Aq+L9u8[]7t'DB]HJ]\r>u%FG2\ZYHjW=#>X:@=.9s/
%i7ola;`0FaSD8/VjGF!YFU'[DO[>^b?jHG(>Z/b`#rN:\RH]eM#nFS6J%mq:CI`11"K%l>5]MS:^@.EinB4=ub7bBf3?Mo:6r'X_
%J]iC;*@:M>(`h&d;5<AU^P7Wdl6;@8dQiVcUB'gQ>`[KiZBEr]?]%rfbFh?=Qf#07D*D7nna0SB=Q)TK('W7pi+(ouQ#HLuZcVUo
%`$o3X.MS-*BBcZ4'a-_Hf#BmLfO'U[W>`f0UT`/-ZP[;saFotEFp%JPoGI(23X_D#a[$X6.#He\=G[bjlGH&#@O7i2#Zn1'XmY'F
%rSEVgL8n3[8XE>t72SP6d.ikWY>%al\12ujUMbR`NMi3]*/=cd2%[>$;AA@*``?^Q=;p(L?O2iZB*NnViGt9AdkabZl-?C?Ca@Xo
%U:<uAH8606<2XYI4%56G(6,=Z(q2UW89O%C52!:uo/I>V>"OoAam=p>DP'\!9>k1q:;1M/N3^qf7'*-8mp7g,D0G!+$nbg[M60s=
%P1-FB!kX@T%.H5G]0c2Cf%Q@Q\C@DH.a^skoU5iDZMOFdpVq;l?HJ7BP`<ZWG*V_h_uHU[K(@u_4J6-tHO\'72PUn3M9+]9GRlON
%M0"'gG!aJ3oP']`4p(J!/6+a;.ZS_G_LLfU,Mqt9]e`lU8NpZ=Nc1IkTBPn6FIuTCm:+b9L(=Xk?Mh6.2S%%$cG4-aohr6TIF"Y?
%D)G?Qh$:r1?"P@pS;cda$@:T4--<N*UEbn(eunSkJ,;+PK*4lMX:e;\N9?3YRTG*<A5b"e>5)q]dk@q_5[XNhhMA=P=aE]Vmqgr,
%`4a\!f0?iKnH?sUQ]E9h#\'m/0G51S(9F@aOT8t<TYM@R&PMArgBgCLM[`s;`A+Q"_!r#q^EIM-3`8j72nk+F@H-`bI*i9u/JNE>
%a1$+Q>-1aXFH,iS5:U#ciM/TiKJL_1Z!5UnEEqmh)eG.,GR?XCk]K5:Le:8JXD/]'W1(`eW,i.$!K`#db#1/u=8JCgb/gth;[WC!
%bRb_LSU@mbfhYe8)22*nZS-KbXk"`Y\\8">]eOqJ9#Wk'$CQWpK^QhfO_WYYc=Ch%07Co^WpIoLU16d].`,#&J/?:&!7V'S*tt>k
%pq'WljHK3ICo-@$bh-f5\sDd-q5=:F=[([jD^WF@8c5>m-WOb/5LJTI\Lql3baM7^<`AUOSa+parAUY)2m)*KB[%DFpNap2.HWne
%Q!J)b5.D4cZW6Ru?q#(+f1P^8`3Mn=RAQ39goAH2bi0LgNCglZBbIsV'j"uak#41.WVsfgZGc`#K[&nWY&.1PO`=CT9[0#ZX1G6]
%lsuQ7M+'93A[c&h]5&S-9*Wj*C1NJ'OCL49C;+Zu*Z$=T1,Z^-:m$S/a8j.\?0gO!0/:;DepU.CXq7P>kk<R+hG3aA^;OQ$4$sSV
%6+bX#n+gL`PhF!39e)EO4.A9C'5'qd<$r/3mRepd2d.&m%<DI=h*HU=L4i<FdP[JcB#+ZQC2.B<:oh7:4>:D$So$"I2`p2cSA9!a
%D1i1\Anm(X3mOSV+^LU2dHHH4,0O.IC9C,_Ad\ThHO@[7Zic986ZrBf:]oM7(X6.#c>i!er5XH4.+u<@"k"?/AetE)!CLV-eUSW;
%KDB_/70%:+(gR,gM9W"qpA/sD=59g&(CjFU8fV.9^<\^Le4NJheVEHl.S#'mX<%#.)m\j2DV3,#O,YE0#Qm-q,8MHn&>e`d8f6Hl
%iHsYlRXBQu]Kq&3OH#W9[-[^!ipJP[eFN*t)Wu#e%(.`0)\u6=rSR&Ql9"U<h2@pmV?7"[Oc2#;9<(Cq\QY'h%QI_:`bHAK`[aY[
%l0nc-HJgSF!tqLm%h[tt7--`SK.B]j$^`uJ)OM]h\HnT&LKb]i%D"OWnj;!i8+V8MohODiG)Ei\/2Wu`0&RmOle8982eU]#mGeU"
%M0"]#&DAgH'jRM:1UC8`&CQ;6;i?[MDtOQH0UtY/)i9gGDP^Hg4WlaR!)T`?p\&;X,-7Q@[XnCrW.pN).m8Pd-B@5$X)9jK>n2;[
%pNo9=G.)-7eZ?N,ZZR#PrF"A4el=`+5hcqdHu]FQjT_*M<T,"\Qn=*8Q`(:L->-h>Rb<Uu4m0u'B<GKVR(.GCbYrC1;*<Z<mbLu3
%2s%dqPMsc3]_YU*Ds'13OH?Nu/!KpaG-+DEpW604Ag8Zu=CW\E..X[:DELdO!-bIp$VElFJYE@g1)_cWjFX^-?\>C*l\#sl`5"h-
%"<-f\-+htQI+XCs!uK)$h+S8DWIk%ueSR+MCl?(,qn4.Yo*MOhl<"_nE\%Q])2i=&/0;i04#-0&]F9ni5scL:k6^S%L]fRd<Bc5E
%UZ`L\W6Kq\"Yi^kV8OaEDpmdg>GmuS<;.Qu?7iD"4mR-\DeJrHNZ;Qk9B&i5.WTP!dls0]Ge2b7(8jH9X___1i7u;jc8hX\c,/Z[
%Md*)gX_@3+*:"5(C6ggc3SL?q@k5_AZs$EW>NE;DHr\Z;%pNo<P:]t+MX""WI_o@<1htcOrr(]0^,)rjqA/qm#"3XQOEH'oifma/
%#g>Y)9oG;ART$80P(pu]0$AMd(#!E*/CQ%!@sppY5Y/<bqB/O0.sGlJ[6lHa+OE;(iQ%qjM-f)bp8X(e]pO`p*4Eo3X_V;<hjdp.
%2Ne`-GD)KL^r=4Yc&%j0Y[)%'im`OIPfo'%f79EEP:O)o\GM@jUQro&#$=8R]>UtR%0,Tl*EJK8E`4O%9<gJL=0eq`3I;eqH#3*E
%d(6skqn5:$756)5E^$ub01WcGju^r]H/*XulCWXkm)9[.O;j'g)CmGI!mR:5WbjO^gRs,gY,Kk7LfZF[leUER]gFYBjbTYS?=G>C
%'4&>ClVbnX$J.8>mWo_Ir6hKkZCU<W93<e:U[.h%5MZQ"*-#LEC,h#h/'EY1M%",hcc[4oBetcjSIL--iMD<0<Rb/60$giQZ\ml^
%/2T$8m)Zn\-&Z5ShbGs6;)rXlmdKlSo](e)6m2K&@KU@?bM7a1Pf.K?:8!,Yrf"jR3BV4=Ch1*Xa_=QUg._-\]6]32m$[0[U6/26
%qX$A*k#Z6:-i^:@hu+Hh@,NDHW5E/&VB/+Gb;=GHD^1AZ[nWdl%@1]VYrHn)/<5!]B;*c(nrZ'(ZOeT6(?UkqUj<;tF+G2Ug9`2U
%bpDH)jl3]eUXGbjNkW4*qn4.YN6F`SngS-E)bWaprs[]r+'>bdfu-W3a8$'>o>jO@k`63pC1NLM"#(!k"q[f;8Bq6k8o"3;g:(78
%PYbnMA>srqckVe+GJ6K7ZfI!adZhZ\AT7&nID29='=]*hbH(cr#OE4-5OGdGkL;sr7-Be#;@O6$"4""]\ILFR>W)dKP'fM2P^"Ft
%+L)2DNjj14*D$$8*YkG=^o#hd(Eo'2=IGDJ:";5EVq1q%@!o+6Op7=j3TbS[@Vpb*QVC.WhuEZ3TIs-#<;>$6dn"o/Yl1Or\nh?p
%>=NU.S%TY],Dk6O6G28@.a/G<h$rVpP#VDsPp`HUhEfq*AOrf"Uc$FGicMnp?jn-442JA#BRSqrB-F/M'-4fXm*Jk"Jer-c8'S,n
%TCiM6WK5X#@s+Xp^_FnKeI?o-p$MfZI_BG(L5HClda4Z#d^)F,EGKP\[Hpf(I[TKUm%1Q_Xe#!jeYmW[]*CV/0CHHY#3X_dI)<&>
%]e^aO41%f1\"taMU2S3uIG*i=HFk&I^<Q+@hj2R`=P]3,<F)uP\0B&OW2)h-MRNFUIPo*)NYOIU#1B>Gk[;#9>"-<r3NGT\j*dtJ
%P+J$O.TXBsl]*R0Dt139bLVUKPE*QXKS@uQ=m0,mbhYc.4ZnZ<r]b.korNl0R,$_gS%d`9.^V^08Meg=E,P"`STtr%DJRoCrTpgu
%'frrsm96keY(j!^G<UL>8p+>K4_b@O>VEN<>;*`4FWBEp1t-Cte!c?8d'rg\VWS*K.S8GrNV;[4j5QJeNp-h/bj2gY]X?+"l6([g
%?+.\detZ9(p?6:r2_#m8n0fT$5P1m+c7SK<`liNYcUZfOn^m1&Z0ZTK>@58bgY;Y_ApSL4DrN.in\In#j5N'pR6W"Nhl`i#1XfsP
%Nl,FK:nG]tXd74*GE'eSet\Q0XWBDWh7_IPCq]ame8^G^c:jA1hTYW00`II(=YiKH&n.Q/GTGaXbRSWpcL6iR=C,[CCb9N]K3I(M
%HEW+2J(/4AO1]HiRWe;r./>_l>fR>VJTU=t"dBXPK53GocKtU]h2W!pRba"M1?UM#I@K-K7SiII'dOr7*1OD"U7b]DSqpTsQCcNr
%,>QR0Q:9nB`h=MUIYj=JU&(6f74fUl8UF5$NmaL&dYmaM)^BM`F1^=&Hd8kHd:nQUa_T$Jm<Le/9/cY.-`&utGGIAR,1oI.nOM8R
%II@h-X-Fb&P9L2'oqjH*3Kt.@lN5XL,ljBJH>VX3=KO&\GF<3Pm2iZNd2m`5pVtnhX)Ru6qKj90e.uCorPa$7mcF8CgG*"h>7F5'
%HV]@<0EF"RM(2&#,#UqqoX%a0h3lld<s`,g.&Z2'$JsJ#n8X$_9$7`L?[q]G:M$5D5OFk-2Xp@/R`j;a@,SQ0p-IQ)6=VIl<jTG>
%_,clETT`c,$XbGROU-<OrM!oX1&#'RGBjtU!prs#S\=C*MFOLERB6s5PBF,k)U&E"(=VJ<XCSZpirC`7/&!B99?U@e/C(Vj!4rZZ
%=/'@5>KeQIjQ.pPejLFtgSGB^U6WcTknlRg]Ul6[8M2_9)!#om;8"r/Fj`HcmCi5)cXbbeq]1-!i!9MWkMJhR&i&s^B7m*t"dcf5
%WS7%nhkY2i/,+.f4Yet*Rkl`g@U?m4m_HZ&M(+[rR45E/d2#_VSF^t@)S$*@;?pn<]@6,:c8idVBeQ!1Ti+p=)r9V0=G_X?>/\X=
%fI1?as#V,t&MQ?]BQL*fIZY-H<,>ojDiH2@@t]ZXJes&5[q_48$5rM0V$@^\*Rl.3%X2c'cSPgns'B?nOhbP?K"Kpr&MIp$Q>%S'
%o0S"qr4l3RfDOYT\ccRmrNpkcI>POsH!K$FFQHgiDnsH"m[2NN43DSim3pMb]5'BI\t]I6T7hd>i2@1_s2Qj#53YA+_bYU/FI.Up
%Ob][s1+I$XC66ao+'lU.;^t\SrR+.lG</]d3Fkrg)W>;%K;,#Uo:kBb1)$!\pSmNTnE!I,.&_':,p]Q1?.POfRVB0)h,25FrN/B)
%+LD.Q7@n^GK2LicilD<7@Q>,q;96=I[i*"$di<7>K,#<X;+WKHCgS0)St".82J6Ca>NUiuiTZW]9Tej)_Wu"5[$3/n#4@aq?d1)H
%*^ImYc'8GD9D0gEZaP!.#@!KaX.ARTYLRb.bI>%:U%5N"erg`o'V8ON6U;I8@oi.N,C:oP^\:s'ERMDbCF,>])FoOHW\FK>=Gj8:
%;AEA8++n985iGnJaa<W7X!(G8E;5$1qeZW]B&NPeW/daX`FQQ7=.]sSfc*U[5<0O_-%(R0[`R>P]@51tiF-1[^?]bM>mjs82*"[%
%`>Dtr!3j:n)R;%98"-X;TEJ/]\Bm`"\"M>`qQW;3%3(Z!C?X;UNoA%PSqFP@O0SFp@s]\X58cFH_2cPMi[PVf_2if"6sJ3ngGB+-
%H$Gt80%\i3lQL'G,_J>',g<MnpeR?e**m_cT^&U^0lgFJnf[<R]3\'2F/)bWF-Yq5L>u9"PuW-c!FGFs;V,$(8cpGFr,=@``K0G\
%>(peh1LW/.;3o%_U-[2_ibMSe+_l"\)-*M&\La?*k5RsuD'tBO^:mqog2e/0a'\.cp%L;uZZ\Q]f9e-X%K.=$B6K04=BWhB/T/S"
%6Woc+&`Wde]9Y$^]kc,rcJ_W;-.ooO]n=(+XEdie]f[BZ43#Gb:>S`1Ebm*h7kH5X-bdAi+deFgXR"-\q`H[`JRe;m@71/GEB$A#
%Q>o[*r/:ZKGd"##g:JI%9YjkC^onkQo(Ak7)g0HYk\0V<VZ^qUrGo7r(o@,kI[Q`!qXIF`V6%2NY0hiT]-kuXhfYkLma(cWXio;-
%qid$br$eD;>3SJN*TLP7jMr2b-.03uA$jtq5&lm)mVQ\GKkJM]NhBn0jmXreZo/F@>/^cUBLCbpdm+hn$WY)CD.rE.o'@.h:Q@=+
%"(1e$BMNh#O)3D1IKag<*J$&7DQKZJ.lnPQ.-oZ8(urT.GHhf(U994)=IF7l/7oZeKc1$aH25X:Jfs.57R.Bm[WSC1ZUD,N:X#YK
%QnX%ibBse>)R=tsH(53.@G9(0?MBk(q`DR0):m%Y?4PN>Y?i^IY&3LCAS/fkFOrI69+!Ul,oc69"A=R#Fh:>J^,1PmH)"uqd@u^s
%?d="BC3Rs^RYl0(<n79&I9!L=84R^;5gI>4H.MA6A=^aq?8_4-5CV>c'*`?./RmTO9--eS.IB2u9!Kb9mgtZYA)Q8@(!b<02$T+!
%nFtHPl+<hJ%@8d^p[2,r7@Q6':fmaU1;0E7+rn9PN"Nbm]oU[Ppn5[)h)/fk*.`6nl@nBQ'Lp<3<L%j#iCoRq%3e?S4/#-[Grrt1
%iBW(>4iES7-6--'AiMIS%gSP?b@$M;F>T%jkDad;?hl&hq!Hu(K\NVC6sHS,&m,noUfDQ?dlG%(BIcp&`=\cL/`/R8i\=:4+GIfN
%ZJ?cZ"iR$Z)d"\+T1',*-^Z.P&WgFs"r?<9CJQ@<l[>ti>l6RF-\<Q,RLc1j[F)da,Wpke)Kc+UJS&1sj+6)fbF/#rK;@[+2"9JO
%5`h;Y"c+RL1(38C*h=7n(O%+sJ`&"$ITequ8%_GF@-WTZSlpGPFm=\'e"VR7rPlo#=]pc%JhcLu+V'UeprqDX0675=ou;%Uj!E+F
%")eEg2&+[O5`'lf8+<NuoENc-RJ$mHY/OrS9Jk]6-^K</^%:(A0Sf`I!(,[@NO.l$Wana`k/`d=7T(>hZs7q7kH`tUhuAoRP%S>a
%+f$D1P[e(iHl?c!<\]E9^LbEM=,gnXa[>&FZ"5IJobo9G/Lt\jD/3T/Kpf1THc3(I<C`]RS)(=Mg`"iVC'8_Ka7hB@mJM$FD;`:p
%TB$a?Y)I0QeYRE%.h;D'Yl,5dm8H-)1%CW32Y,b-/]O&,+[.g5(6t%p[Eo]d)"Dk(FQ'"fW3'V`0^NP,]%`RhP85!YFh!!2GOMqJ
%B)UQ;UCJOH9RO(HR-SRTj+FAf[D`ATRpQ[$.(n&J*ZdFkh\4;C3)[KWH7EO:4EaRJ1Q.OnZ5Z_cJ%'9]cqRj*@o]ika4V8JX%ekF
%k(h.>lgAl:eDcp$We%X5I'pkr^Vh/Z=M1Mh,bf:)+[TS4m5Vt4"#)S<qlZo!,,SV\U"7l`*7-KU9pJuV%qOr<A?*.S>?3YdY;^;M
%3Y4/l"0g?Cn8TkMDCpfiUmCoJ1'DLhO4q#6X\`eKRuV@Z-W*uSf:fWtN5XV3QgMh'O1H4f-Rud_1?2#-LnX2d]NV2$GZh6@H^Ara
%Es>gW*/,Rj^>:\eO08P.3*rRC@OVV]eeTo)CagAX;k2:P?!&Ztk%!"FA$[-+UR8jMor'HK.cW2%bB>Pb8)93qf2X!f6`"Um>7`R;
%])">"\!`hf6JN4arQe&^(7W9Z/*4G_m>&_'9;oHO5V"Y#=&"sj,lqLNa3.Y0<]bf\ehX_=h.fo\n\_,JRE#fbi)'r5/\bu4q0L>+
%JCgj6OS,<f2&VM#[4U"8IY!65*+-Uj6E6.&DGsCe(:W%)C1Ul('2B"2,7h*7+2-0&)=?6UHQnKY_&emLF%<VB%EcN-_s'JIADG4h
%+r/KBpFV/q.T2m\d23m3kn9LaQiF'l7(Z)8dNp3/?$Z+e\p1(d3\#EKVV<F(6XGaM(Jf9db@,e]NR\Nr_/^La5-l>HGqq#]9'Q.6
%<7;Gqns2psNQC@@Rg<r0Ub,_I5dY2J[B?g:U"-r)Y?2t;A!'EY'75.4VYeO55*9E+pNJSaarAq2g6W=)S!VG=9HS!qI:jnHKM6d.
%VB+I8FaeO76a:AYk8&rm$H#o/9]9eom%'LD,Q+Yf"mfXu;CU[i]n/"0mnm4[bsr(N>k$gIehVUmj&I$g0JF@-]R4/8Gc'UOg!GTC
%J@LF-/n[s*W(2D&%c5#o(JB^>7l:#gdI_qS<"W%h@eRT)5k]?\>\`=fjl3\WI6-Efn,o0dS#*J[h-s[lO4D@UHDa!Ji50RTlUL1X
%n12#&7Ak=$AB%/N*0jNUJj:AUT">(H='DU`<i[[R#udt4k!`bhZDtQU(.X-@A[RQQ4:EuS+%LN<[iIqAQ>ED--;pd7+2R^UTFYZ1
%Q(dK"\Q1Y"RA,>U]pW]QCbe[8TIJse+Fm.Ah.Vk+5$WNj-Sjc;%tA>&:9H=uQ8mEnfi=]$hNqC48Rb^7.^?N9V0+kpc0"1B"/nS&
%Lf]^XVN9Z<8D\"k]`)Jaehr?4Rb2>1jHh<PC>Jt;N*[bcW88OX\hP_cLWRJV42f<fC(9@Q5A!rhS+dJKi>9:)S(#^eb=Fe2:9?_=
%+`Bi-gr`]8<c&[oZt+<Z+VJpg$bqU;/AJj]p<q<Zb2i:]d[<d!,R1T-ES",0H/(e#9(jO"lN8OTbS"o*@6A%spgGIBIFW![f;ts4
%'$rRX>7@3n%Lf063Ym"0D<@']2+`G^Pr2EZ-(JIgVd5b5W>6_D%1XW\*%n#55qW#PZ3bRLJprp/jUl9mK1XiP8Dnd&9QeV43V5&Z
%keg>7Z#WE<R]"LUH'DN]iI.?EH@Kb?'?^XJ1!tQDEr,C#5fe*iS@uPH9]W'%W-qmn(VGO6i+`!H^aQL(6k`G4i&rReioH`GGakS`
%cl[Ei!Iu3P9Y,eA3[4s<T7Zs^M3t+;fWI9\i6'ZdN)kGREDA"SViLAu4/8l+l3fkNHOs0;C'Gfjq;XHlqZ5!lM:^[S6=XI$29i;T
%'quNCGY"sAc;-"Jl"0]pKj4'c_<S8b&U#RFKD500Q53#$2d?3okZUJ$fmVDMCG^aWl46$1''r')S8l1+is7m4Fd/Nh3gr,Nc(0m[
%5)0ASk&**WEB-5AEh')Bl;gDf*l*[#XgXf<gQUY*?0)]T89;XAD-;*B#B8C."%e*OJ(1W4m"0iG2Y/',cCS!0$@(/G>?5u%cJrL%
%h>+"=&Uo>hVKq`^J@XhilALhE?.`4RV,g"NBkeO+oO,'(a3j5Cl](fr2rhh\4dD_trOcc@I]5<-GShsm[i,?O_g6;6&*16Gef%a#
%S^pVagg>eG)e!l:e@l)LY1"C1>:8b#H5'5t],p\I_Y%C(ZM!d9eEn*Vk>167E9j9pMtrPn[rT<Fat&L+Th"4gq0hi^2kTdH(oTF(
%;%)m-hDFMSc"d'E!H]UPKI#Pr["W;WWkm\+e';@58*sKgP.t;_WXN-nU@Q4)7usYj?>NoU?@G'&36"`>r'p@_3XK4VDm3fN1a:e>
%Ilo'?<0lbB[F^m$qZD3D+'M>PVo^RZ$pE&iZeM>^5+THHoG2SYI-"hkP$/:hDY]9`2(/_'HX0P?CTm$MlH,%V;_TXHKGgX@A/L/2
%$AJ^dDCY&98PLZt2XB%e:2Xb+TBJs>lJ')2)q&rKVoH4<M-l8ubMf,"4DTLGSW*Or@%B--Q66@]PktHLOg2g''W9_g-F94i[9TAo
%UCQgn;&[rk'#`P94:cu&&%B9;U#KBci^@AiojCUKqFmN"BD^39-'5?8CDS$;m<7aCrgWa_h_^EN-VU^*;9f/:/BnbH;DTT<6Npk,
%eg")E9u/RQk"nIp?#*38,c?f3D8n!Ef&++k9N+l-Ug>OM>&CB&3h09H"D]8R($[p'Zgl?(Z)Gb5qX=0uFA^V+!&L:qNG&`q#3a8X
%51X]<b2!3h>)1bt+;?ZT#u!A!$8O>$GbD]I`YCclX7:L=B*r3ICGB[3UpHsKjOP:O!W73"MjU*PAEDjH/uW?]-!os-m:;";)C>oo
%VUpS0\m>0*cR.hP<cQ-q)J!!t,bdA&S\`(4-bU:>D+^PK&j5q0U+8[U"LH<a0a7:]"`[2q.-pcfG$0ibgQ.IZJ[*%>,!`C^=P]Dr
%O?.?UFm"@#R5[iSY.&nq2l%t1.H+p2<]D-<o59c>)NA2KX?X[66$94@;2ZUIZ3gYb]^!;t0/%mhZWMTP4A0U&OpX_lGq(t9iL:m9
%1:<tqq3k\<c6$sE;_F1bTl+N\?<-.d9UBZF]@:jAQRIT?ie+,Y[4hDV'?^jGN*K7n3hug]jcNBc&,"%"0Q'/.@Mg,K29b3AE]\;s
%?n"5EfQ7<m<:ND"51Dfj(-HY2bscrjo:B"37.Q>;;]'aP8ibt@4"4U-?=oN#EWM5R]!bJ$=>YN&aUS4I>I-))NPm('hG^FT=P'#N
%,)*I;Q?[!b@r$?a3JV4(]@A;3`UJZRdnOf#AGmtb[+*4JJIKH!1]mTXFSFXTV^:&kpsY%)%\I+#lM0aga7`Fib.`DcnH#u_nje//
%8`lmjLAr`L*SK/[q@5r[=X2KuapW)(kDBAg`X'NK3dIhkm&tb!>d=&4-da?GA^.[-A[@%d+m;@T_/eTpN))*1FcfqQ\p)YLMT#]Q
%T;8B@TsluML:S2de1d8t.V=[GF8XZDEqa?:%0"/80<kUS,cepYo+bdVk+#`Gna0kJ<X,D4Eh_^QA%%Onht<t-go]V\:6Gm\>\ODh
%G8$gj]G.#OT"@='oA9s9A00E::OV\ofu*g#e%lb403Y515AfBn7-H<a=Zf]WH#u3]b&k$R1dVn:+N"+h-D$1c6jsPZU=;B`.4-[R
%517@S-mnrh>`WeNHaL,MT(\>`UORV(GO%4siiDoW8`-%dG%<\=8'?]G5SrY.F:5/\'7*'nhmM0H`SJ2_dYe:P'\A;0%LZpRC`8rZ
%B6r,]YK+,^q+@qggM'(r.;.4jG$4GV(Ho%;rqjA`I:laVNuMJE@2S<%-.A_mkD-"V:^!f\8C\7n4b[Q;1,cD3N,?@AOlq6j?+*-8
%AHe;)N+$]9FoCs%JB%d+92<uu&Wlf#c2:H;EI7#0T%ib8ees<"ro\?N^7FZ?ZoC_a:Zg<IG)qR=p>;BFhmANpr"mnZq4,)[:MWXh
%`LQRLW`;5=ma\%-\B+F[3WJo^^[C`5bsr+3<\$U,eTJ#kU9%6um>IKm5cQX$8*RPo_Za7L\1)'GXQK:(`PHo',=^=Fr2YLpE*i%U
%C*&Nhf5^utLU5e..VI$%n\uAeUp7PZVhN;G.X\eI\!&tTQYKpIA0`$'ZLLS[or5A1g;Y$$Af(/>5G,R.8ct9_&DMcRhQ)c1A7D2(
%0[@q<[Rc$PjB[oP-a3afKR3q15H>sH%1o'm+L_)G`;ps?Hae5RYm\,CRP=HjM86g^)pl!&[Q"Bo1eYs#$&bceV23!8r:$@ge'JG:
%`DE0<3M46f6mN)W5KGtgTnD\4c=:#!S$3HM<.-IDJr#CKlUC/C]RSi>DJjeM("!J0p#%^>c_[\U]q+F_*Ir$i@.BX+'aqbH0qW1r
%\Nub,XK5rdnr^KnIIP%6Kn:KB:/iUIKjF[V-f>9`DFS&kcEA!3cWt_cQu.W+1CJiO,BRu5_I>XraX18O1YPg^WO#Db'Zh-B\gtn"
%F)*iueb=E#\eqXYFfIe_<MM@;:Ej,*7^6K0D6mkR!c+WU;rQ)BPo)j2;\L0C+Wo\Z+eC#JOI;aDm1BLfp4YQ7$7laI0/DVd,0L:K
%de_!GjhYEsZ<5//&>&A^n7VTF44u!5<&No,KuD8a:lO\^GC?bgA[ZSf;YA$2_o2\/\@0FSZ5jp_M`[s,K+UncQs<\+mSc`,?`PJD
%RIHJ@l&B7BF?-1$jig@5@)VZ-ckiVq:9!1R*5c=+]7HtuK4K)8\^iCirr(,uY0Eo&\<)GqVc+tsT.#4gosuU/Lb/Hab(eSb5]!/H
%7,TU6j[s"I@Z*c$6p6Fc7%C9e;jE*[AL=2!:8_)lh+Qi#HcOaMHgf0(1QDKu>9$6P!rbm.Dl<J4R#i,7#8NbV9Eb.E2h&%=Au9TX
%JlT!^)mVH*?*!gQS8'"J%83^_$QJG]4N.Pi!5EmBZD[At3_46pG*sCoGq>DTM9ZkD*BPoiM[2@`L2E2m@G]AJ:HF.RG]ak[rr(]8
%Y&7G4Pr-`t&L0p-7H8[Yo"J$RobAs$ndhrjKu1&[MdTN3dnN1`;)WnL.fr7!B0,N+Ms$"n"(kW@oC91MLH'YJj..i4qkbM[p88R=
%0Pk^AcaT*dC.+s1@jlZM[(?*>T57DnEL\13:/4>7S\ZB&-09[)<P\faAUu+CAU8>8`7a%)Sh/*!b&5XMXe`T`:`Ht@^,8VaUO&?L
%!6Tr5F-q?)H)VDaoZ)&9IA79Ucd?pA0c&]UXmP^>W:*E\GR%#!5r4<=g5*pSqAGa%Y(E%LO+n@+Co':RC@iH,"U7B:1SS"%im/?A
%+e2t?kbR5^PtO_*Us2Qsaq?6!'`]q"q08[ISOIL$.HVjrbIZQlgW;)<o4bH`:0>($#<@Fg54$$EYJ+]kVdqUjC>\2)^%+`^0F-*]
%;As:C+MYl2WW8E]'uh^OR_3C29<$Tc5TqqZ;1(%hq#cV&DH5K,MKsD8FR)WZ5,j]XQo;1nm>.q4<P:EW+A;8_,,UN/>2]T^5TMYH
%e2V:$g/b'8EFPD+K6%XsQg.^s\Kb3AZWHnAR[b'L^ce?-JV6.;"/lM&E8sSZ]a#Oe(e6NN;;8$%p\8p78,\:!1.<L0s$(+f]'rFd
%Cn!2l327b[e=-:!e>![gFOi<lkLUP?BI,6Y3d#sXbl'hg]"1V<>(B10k<RUL\:L'">t4+3%]q3-@j+7V)-'&tJ=tLl/Vjl-Kr)0H
%@6u!TFE'Y3hM?;q>2`(/mmKJ@^g)&Y1I*[LJ/)<:"UnP)/;h#)Nss?,I7RIV)D'X+_-3+Bp6;&PgLFF+J43VD6UK3'j<&8.U*jJS
%`/>V<18>VWm.KafYB"CbK1b\_m<["0lItu\[csVhE[Iqa*t$d0%^[jiIVi,GVi9J=iPK9GiiF6N!Gm\0[uuFLi-9-4'/2AVJ2)(^
%l,h!&U$`uA_"s3cm";#0;Oda08T'jLO1tVj`t<`4C:/Cce=rri.2XHmL:S[1,'9)RNs$-hJ=>noRR[ID1&F>j^<5c`?b-<h"5$W4
%.-#Xg<eBN_[V-dK$oeI+oK#jp(@U&45hV389&<)nK?</)f6_p-h5^^OFSSNO?@1&;](U:Hc$AtV'0/K]if$QMW1Bra\f42(:;N&R
%%_bPF34m8o"nk3;Ffc@jkb]n-%H0Q*YkhDOZ9'(5E]J^-qMUIFQh)5s)m3L9+Nt@lI.VCO5^iV*HXjX1\8!HA!F5iL<>Y,'lR=%'
%=B:&*X#Wo_H]%RIZ'm4)lR9gPXuf2?)Y^[2J7b'&E0-kTN4j5EWJ"P%Oq,Fl9*'V?R-EJ@-,>4u2sI>u;&1kX;uOG$mahNZ,dGfS
%hLi8>9AfNd%U*HnB1hdO[1[[le`O@#>_5X,Z.9/kA;(A<Q155VG;+K.$*$ah[$='9k@dGfN!8Ha?IbfVQ<ir.Fb21*GXem@%@5ki
%5drFk('LU4Wokp7^<q.S^Ghg$DP>T]*=KelNYQ$_,%E-iWI?D4e$P:.qlp;-eRaB"eWDLO"<$S*p`M0-h']Lq]Bi2$+G(0D0p;9t
%p#O$(1NpZ/7-4#khUG/0?1%=PFK[$XAWU](k'YCs](U9=bUGY[J%)j4q9$<#Z+G^\.b/*=8r'%%qIDK+mcTJL[7^IOgpEN/^lPM[
%?i#I%_lC`CZ?q&.1E'oXdM!Z-^8`iTS4T\Ko1i05]=n7A]g7'ZG,=g_+P%!nlj+sPQb+1Kit8;HjAJr"W>K??-k@*J+#uWL&S'&6
%!iEui.%>B_WT!r&=^qgo^OeZ9j.3;q'=C*Va1trOd^n<$gY#o8`lmB09&0$*l#lCZrgVC&gI?3QrZqC:+/i8m(*(%[j?XQb]]e<H
%5GjBPD9K.fB"hW#F?;Q=l74Ao?Ze`k#?u;hnA2eYS[sOcJbphFa\)3W65\VF"?iPX[RkofdT&7?G5R[Ga5uFH\]E2+4M;^8O5;#q
%AOG=rK4M$CQ6e$(c_@ENo,'#W1mFXJ5fjmW?pi7amSr_9N'\9T%fdP;`\]m.l.a<TGE?A"'@<)$iQNs'hC%'l:-+-sFTe^R(7]J1
%6o@$Q75HucSeHZ4*ibt436NcBF><#S_3@aA:dp't]5m']LWlQFQTCOd[DnS2NU@3OjSZtOgdRM:UFi"LI/WedA,>`n;DLfC<`/3A
%RG`1+Q`k1aNdbKZm)J*A!:"J3)k?=_UX`sIK#?+p,`5^-bN[WLHM#s9*c57-+!:Eep4)gH4Fr?]V5k(o[T74_1hqcO;3M_d6faZ-
%2Q4[OF7ut:D$pD<?Efrb9-GI^iIUO-K>=d3[:Db^_I.hkf8UG0eR33.Om8nk(?9,o6%;XZ;gnW=HXjW(XG`Y?p*`9aVnn1/6Kj^?
%!R)o:0ef$d?TO(sE\(Oa,g0r0:io]ojk!NBX^0jP-,Tmjbm,(./A"jp$5S.*6LDS`Gh5U,ZAp0CC_+r9:AL2[]%l2tRJm1U+'*0L
%AZP#*/)\/<;4fF8Vq,j>/T!mRO;F-EZZ9M0?ShC\SN1f>IK5Hri3HsXLb3)$D_pmmQ<]A^7id:(&R/d]\a0M`)tdD%e!r4r_.T:@
%2b),g+cr^pZaTX;h3;mOmGI@Akp"SIKk%5R`LT?Q@J`tdFBSAd1kMWW3/d;<R3u%S&l:n"m<A&o_<RMYlPuAbdOLlXX<n=h.41<"
%"q?7\P2t8('^["1"Jj,),<<XcUGV4k?17CPCnI0bD4U?Kj^IYQMr447p8F$!E^A2(Ot[:*2J/=B^@+,VG[$hEP"@%^NU*kqlJ$$r
%,$c/TGZbQY]3%k_>"2`]9WM$?oA-17$Jb6e8%(C&-U[.a.Y%'_TYp7_5tW!eF".i+*g]G)2o.V<&shQCjC%g<Oja7PakP(<4Tdc"
%+IVT!V(Y[>C*[HtE9_1M#X#`<o8S!S/[QNYi:[%[=E.s,5AJfE4Z[5b2emp.iDF[iGjJ:3aS`VUCgFJUSr^H'j%lpn,'J0mPVC^[
%_3T99o`d`d^TkTr5OFj_K^?Qaa?"^^BroFmaGho#dVU4S`IOts/A!/$e%.))12$)R],'e]=39!+i.9^Z'KUC#EK_!f]biEWO2u$d
%O(8)JK<=78Cu0a:[J'#uE>nlR&5N'$!sVuU0l'RB)oTImYcBM&b!ddXV*g(Y%G4*M(N".QpdEUp09]b?O:IkCg9kUT^,11HC4VX2
%rhsW?3kHI)dUCeAfXbn4r-Hk4N'CsZiMt0JZAH1.QC-"TK=``,@JZf"EJ"^u+u#e>RG&'mf17E-"sc/Fm&C?J)f0Q*]QKW7C)h&>
%[;6&ZCKsoK*jmP=osbn+m_uI^6`l^<UMe-IF2ZeG?<q":@>/PW?gj&lmQ^(V`g,d]B@tRZCkNbK.OgJ6R*T=]e]-T`2ULfhr/u8L
%f362n8ZROco#@eO-KhF>5u]\;8FMWL1fqEBm](+dp8$FTrm['G[&^RfEA+)VRRd>T&/ZLe;Z:%1f&N)[@BI(](#*7gGN;eh)+Ce*
%TJ?k"]Ac9=3t[$)]]P6JZ5Vqo;J!6'P\ui1BRS,NL0>dr[CVs=$U>1dkAMQ>%7rC_Ef,f"pD:Ms'QqG.T!qaY_j7Sb/iRLacY4[o
%o-HZ`U7<A][U:f5koWF7V$r:S7qD625JW[5\BsO3*%Pg2)Nun/[Ok"5,$UqFHteKlV3>F7]WAm1_*gqb[k6;YDd8:@UB0[XEfc-u
%*jrs'@=PP)fm7p-l?8+f(1F'h@2a,!B9B_*k_dqH%I>`V3`7P[b-8o$3Cj0k6c[g)ZTmk#p;>L.+tL?g9[&2ql=n^!L_RHlVF1R"
%4Y_i)B$8<=K'-oX=XLF2&sl9?fkl:NWC/VUe88RD$oG=-nH92S7K`P(g'EdH6?\fKoGa]T^ba`fWp2b4/'R@CSD+<&qZY,g@_7t#
%HHHlSg8/U/8e9!km`XgfX.\6=TRMJ\.Z8.YRhk5.-_8.G&ZPp=M#\VcoTYX`&u!#8Y"rWEGJF-6/7*4q:t4F9o:NQID+rDX^<9me
%FAb]BLTkiSklT'C(kZWbdk:$f0aBRtJ7:CNZd-fH\Q6_kq])s$50-hY!RSsTXp*8*-q\aQK4KU_h%&mp.r97+LsbTcWu7-N%eRLb
%eI9]f!?LU/D7,7g-n`+tZiYc&1huQ,mJW7We%TodjX`MpN:,EHT$#teYLnd&?<:]^,Q_I9ilBa#]C`rTCi_RtkV[gVF/gNGK,-g^
%<7k:f\p5.('LTR]@hoQJ8qY9qc?6k6n\I5YQZ-E@9_5BM:4+3KGBrl%iE`a.c1aLX;.]]VePhsA;LZt1kh9Z"Tia]V6fu/]D'VNe
%OIgZ+:O*eQ6l+-Y]L=9%^B_Jn.=_E^&?EuQ5%_dJqRY!a^`Pf@)+'\8>qZ:V_UrdD1c[])(hD/ue4GMZ3U#QR?(C't@e[D#YXi\h
%_,jsoHpmO/A73c0TDYF+1HIn.Q5q-_L5,khjqS]oaYd*><m!WZS^B2`ZZI2FeJ6j"ro3&Y*uI\hf_eSl&7I1Yen:KMS"C+46S5Oc
%PoFKfNF$Z3(0m>m/;-XNEc0tK"[Y82OV,8b[casor==%jk8q`dEICgik">8YWKBKL^u\#L>7EA\'274<aoJV?5;BJ;6MBNHGMkdY
%6")g.Tri:(T9Hi>iaMWA+1R+3qC/hLmQK-(?,3D+HW(!@Dj7K?*TP[]>_\KQNmRL5dQ7l+YfU51(c"sAXeM',[ke#[gHK#s9&:un
%A#?>Q$<FJXY1oTN>-H3$XijkV--JBX`u+iq_*+.TJ,$S"0ValpJV(I2e:@o270-V'U-&.)g^[Kn]I]Oq>R)@:9IL1.#HkpiY-IqX
%M_MY%I-n'X^ShjHDGE)h'5If=@E[*0DA:^RAL+7bj!rF`ao498:\s=X/u%VOn1n$("/XZTL2%]lqf@sf`I:K:+%Seh>p6PMiTWAD
%?9bu8BMmeC?g]S-mC=eIS>QjFna,5nZk^o4A'S\.V:!a_-H6-E:7kaK>O13ME*Y@brT?s[%GK]3LO8'W3r40NP%.i>mTob`?L+n6
%4T;;>#d:E%3"4H>OXpJ@>(7'gJRU3#'LTqE&k`MiCMe+>WTgZuAR/2)KgQ_hH_X+,j?J*skH`IhO*d`:c/$.F'r%h=^iE0&e`iG;
%Jq7[1PG0W:=a>)=aFmTq-Z(GV;ak&Q`<8lC-WQA5g@_?q]PkL7]$0&Z4m4T4T.j6ER9d)IfYGbmQ5U^#maaq78i6OP<;X6Sf%#Is
%=1A@a<Umdd1.GR0fGLAaNItNM(2sd1/c9S][%9%3Wto-AVKcohXXt'p!J'A)`jSDl8n'qop66`b+B!4J3H$UH(3cF!IJ)rH5:ZoL
%*T70C`CGl@8#V!CKH3c*2@VMTM`O@dN*3;Zo5HL-kQ8i76Yt1q[b[dA%q@'"Qn"Kljd'NN'gUIX#6E97.:ChTPW`B!h.O%[n,<l2
%3&q(6fer*^#l1m=9h$r"&448CeKC-'FOQP\PgHg5?ObKLi^(NN^rp&`!q(o/OiIZgGPrr?Zo<e'j+YClG-UftJ#M%>&&\THo,*P4
%5e,H6L9-t/%e6Q]fAthtY#"AAoB0r&H0K=n<Xme_#*r<HMbe=/RY[lY,ldV@r#<DhR?FW;To7m0RJ#+r$DV[&Kh*GA^m(\<WoH:`
%>Y2jh8AQ)HE>Pp>41`L+Ccd9mE!JKPmAdJ&nF9bT1KE12;56XWNG"G&b#0fk1RsY&j*Vq=pUS?ebHjDRq9+tQ^D9!'B3(V@N5]cn
%_83/C<5/9+jR;LIF^e?X8>&\!6T<:r)Su'3h3KBNMcQUn!lK%D`6eFPfZA3@]^\1E[OlSFluK45SYs:rc,PCHa%MW365maq\VXp*
%XqK3NXdO[&$QmkJQhfYI0?=#j8C@Q2@JjBg0.Fjo!e6nji%K3`r,EemMs#p!6i%Jk],LH+ra'78Rc0\0m?Hj4D6E>"V8\-M:AQub
%.C?XU':BgCG,4'<*Y8-F=<gVQ(cd=^`T!">*3ZWoE&(gm,IdL0iY\Z&FZbYt;_ZW`!(cMS*Tf>qc\;=LMYE8I4$[)45Rpq-Z;&/t
%;5oFkj%ABggingT),)@+'jI`u2T3sR/HqP4=*imsq(A"?pUL_-C`H5/8qu\U'nG<!e,#TmG?L'\!,8KOMa!(6Y&C2=ohK(C4Xl"c
%UXG7S*ka,)P)-@GSeBQW[?K[U%MuL[+LC$g^ZYnt4#QX>Dl',\O$e<3G]fEYXRf5pqYq(2M3Hkr:[n&07b>0=C8==BG_kN.dGcLn
%!6VmQL3E0aeY<"f.`WKDFHp,B`H2m&XT#TG;(V]M]PMq953QU'f)pQZ'3r=c>`Mh%n^o%9PD#Q#A>ns]*`p\Yhi%OV549@Zg)%Xd
%_NHIlNQJaK\JnTTcijVZQWpMWE*l[A4DcX;Ie9Gk>Y<j>J4T8++'`UHU#\8ZCR?aBOA2eZrZrS<]F&>lVQ%TC!Vk'&%jYT"EI:j4
%<OMpPbJ=/TBbV92%u>h;G,'Ep$aN0'>oDEfnqHsBI9b_!^C5b+q>P"N+eq+N5[CVEX`;0J*Ih6#.nO4)2)l(-`I,<jX6L3kg02js
%LJYXgpMQ>"8!/%8lVJN_(p[PSN`05ec6qG.nE9'CH(_dbM:(=krg)ot?1iL47P4Yc"^8r"H`!+J;/YsBD@k=35Sqr1lG:jd+LEl=
%jFV-r%>*jHBY4am-!u*+6)^hQHZT7O2jQd,i-JAqi7@0j>J-7JXBIAc[c-rH;7C&JDQe$$rN!BMp0.(E?AYXbA'(l5o6VDBc)86?
%5kI;'$8ZlW-"6UqgDDu:A<K$H\Ibgh8c>D9%L;iL=\*fZ+18L-/sopS+7@q\UBVE/%R"Qb@mN:`[U+DGl8ZdZf^E'VS&!GrI`A*u
%m`kp?Hs3.$,.QO;fZNIdK*EUWJ7f_#86^^\o,PdB7#B*D[sCLW5(;<$*q'M4ScTo.=-!>Ca(&]K>*fG1M(Hr<M+lB&Z*V/ZB7$(P
%>FOaJg@Q$mjX5e<c;7]rN!=<&E#0>AN383u-RC6/h^-q`73,CF=N=?Gp9Kkhr%PqP#-/1!(6)+@16%M:AqJ1"%.Y"kZVc!oKK4%6
%G6["LY(Gd5_X,(P^8SJ@0fEc+\:rET@J]:S`-8`f\kd"g2a>*=Cq;u=g/h%I,sZ:PF^Kp%a]PaH&X-&Z$*8X;S$+(WP/bppqU-?"
%>"0mr@j6k^Q3F?l=mhljk^f_)b@Q++R\^M+:X4;GooATL.^W[t3I'*&+q9Pr6\=:7&3gt5X3K)1ACcXg%V;(P)_H\t:Q2*j5sLUF
%!c'Pk;1bQU221PYDZ^K7B)a>-Y`*C\i@AL*K:IgWDu<SSHnJgX_bOik2?P[X/0Mi1J5nc9_G!onNN0r"HR?5&jqDF@_.nh")a2CL
%Mml(o:XDG(&lfKfA"A;H:TZUm0A<tHX*P[FoT]1X"S#uj9ico>@PT=3!!G]2+3/RcPm;%7[pWFmHM/>c=bCr&Et%h<Ep8\U>#cg7
%[g+M(`0I)D]-lTf=;R2!:Y12SO:I]Jk;ho..:1:M0Do);]DqS;f&0"!kg51&cuk9rK;lm7=L#&c*OK^!l(3?&Q%FM0r&m`W5RUS_
%F`&aACf;Xigg.A+Z2!q@e$)cM2<:bOa[.#QpT"3c+H(PtRL?5W"KD_H.N3InW.BI^ki2ZHRW62._$jsTWrUnX-,+2Jp;!'^c>imb
%dH:3J#Io;!*G=)>3Cagt$8Z<P?j%RO*XbnB_nHk0$<<#\V5:Mb8+gs>J+GIeYkr"!apUSK%qBUVX2Ejh_im%c[GSqb;c7]6Q!MUX
%d:$c>_+Uq#MM,FqhDd[l0je2eO[NPQi(L48coHaD8=TuS9#FVkCKW)21r`I^eQ+ilO!D=*HGCi7CbE&$[](L*4N+A,)YbJh5X*I6
%kUA17Cq6VsOG^e=#/G%\2Qfe@a@Tcs!XTt06!nlmk;)!pX0iRTbZes\#\)Ho)iC3A9'8re%KK7J?LjfU\L6W.TrX?Ujk1k)NR`:H
%n/,DB-Dsk$1;!s0jF"$NU%Rl\FCVBNm[bP.KJ@a3Xu]C`juC.`lRu$Zb3:Pu#8mC#3R(uM'\$I.?7MQFa'h/I]G'CL]AqOF2KkP)
%#S_&Qm26:H1p3?D'3F?df@dG[9+\C-]jAgF-GVS+,l)-VnZ:4]Kf3"4!*o4]QmJQOY,WDS<+dTX='^u'oXB"/::&[UI_sW;?n,+H
%rhQSLF#6snW)+;q:JC1(opgih*t,KIIl1*Drs<URs%Ao?hIW;,C0n^%eMnP)<\(_<<+A1134fWd%:7H\bg+E.(A?d`FtMFC0DX1$
%:#K^Z.#;?p\F5P3*l"a3*\ZQsY=IE/na^r;g/D<FS8[H4iq_pc]B\lEpGmc^/dl'L8dS81miQK!`tSWIH`O'Nf:-]*_E4@7n(#4V
%nb&bVQXN%(a66\j[ICO<k17CJRO47/Q\F@n1B+6&d[\Wnhe7&0qaZX7lENiriJm0Ben+1/f;"@9r4*5-Dc\_?qip^])KajIVN#Y!
%r8/\cdSH*$Tbs36=/@DEHIKqZ]rkV,ApQUNHH0P;d$@+#FF.04bZO@3],'e]5nr08&t.S,UGS'Ukg;b5LDSu^]9h]UDTDO9=hT+.
%B&hZI=g?X`r:=J1T9k>kJ,W6rm._alkC7/B6(G)h_HY\7A'&k4CK<FLG+u1/FOIt-U<B"%p>.BjOf^)9orfdNlgRB!2JCb6DdI!`
%12(&C>C'IHVGF%G7t92BZq=t]WKCRZG<7%LmkJg4O6b?RmgSA@_GfJnqUHh?.7PEbZ5`c-K]$!dI,LrZ#,<>/<[@fjU_,rHUQ^*9
%XgU*0h3;4rU@Kr`6^&@,hqL5(UO'o)dBf?\[:9$*:NcGU[R1Mc)_Xp;%,@U'iNI[\IoCCQS&TI-XBAVZ)^bo_292Lj)j<'DIM0Xc
%N1(Ve&*&8EFte?R,YL)"UY4*MVs9YH,;rE<rAQCYab&#fZ7*/umIXgNV\&1></&Yln\jb(E(FRPJD0noqX=0uFA^<mmO<TuPbqqj
%V6!WS]eOLr'Mk^5p"!n5Q4Qfk#'SN5eYJ[2Bce)[]ED[n^gfGaW,*sr;N<f9U9*!=AS+f\'X3UF\?kg>ak%GgA^397/p@#5[R9s`
%aoNt^=Y!U(bac9:;4gS%9eGCYJ!CoUDFV^J$mptmZ,U2NQ-2CQ3D%rci8t>#bBG"9>N.Iid3_0Eh.BG6Z7o0MQ]0ANB<?i`9F!u-
%%&*#9e+`"j.nleLhrNl!c=!aBrdJcN=6<GuO0#.g0s^#U9a*(\%GW'/0>i>YNWpmPb'/_i;B[EPgUoqMG+7d&M\SV6'3i,7HqmU,
%<H2F\WCHA8J\WoK0k)Eon(iba8N*Bm#C2"&q-8u!VgF[*C1SM*T#P8Pe>:Lf<&;[6j2<:PORiosOp=Ag'D%D$UU81&B$mjY`.DHi
%U#HI;=oD0[bo[;$j)m1R%pm"a'5AATV5]POb;_@/`)jnTs72/4+jlR/>03h=gr,a9_g;.QHR$,17?psVnL@Kt@MD!O:$ff'AXsH4
%OS8j6:2_gdHjZ?D#uVF=rh9-;?36!3aEZCsq@`J'M$`u)@%bKOP&WbeDIVM%d?p=dhASm_/RFhhE7hsFo$8[FI668anNrD%&_(h3
%P4ZHaI@k8'\Y5OL\o'O\[:;r#)1.b!9O":&bPV.*`B?\E$!37P2V$>HoO37*lf!`7UK4Ufjp&m226T[kN1pf.PLJEF/Q`H[0+A=?
%WGXm;fOZg?4RjpK:_d%/N&+I&bl`sQaUY*A5BY-l8rZo#6,mHf\`;gI=[ueFfAq`M^:1@mAQQKk45$H-l09(G$mRlF(V06NT?>C6
%5#,o=,C"C`P7)p(QqArO=9bOj%0"G<r,81q"'9u&>j6tt_P@_>lWt*'bhT5pkGQS;k6YA9JFdl*5[qnDmi=F-C7u"i.W1Y1Ve,%K
%rd6H!n[rpUOY^l.l;m%K#Rn56J"k8uPC6UY;<'B?kb'C"m1%l'j94JJKM)#"n>nHgfrFC8T*Br3Ta\P,;<NgL9@Hr5!P&@<b"Urn
%&HE,KGGXrr^g^'"P6E1t'n7YD#q&O3Z[<i[W%N7.^aiu$=3`4?D2igX4eAaaJ%mq<n'%m4E?EC6kn->iPsqA[X@sWm+n$lJ)]T=?
%n&7)@Y7lND3jW?5SWFP86.qMmU?#$+mu8<FetmP'5Nt,lL,nG-520RR:c_ZCoDIRu!Z(p@9V$\:EajHobI=f`+snE?VFAZh,`j''
%Z*&N/Irf(Idm-Z%XP+kr:a-Z-Z1>UYW=$?lq<oh-Q=4;A[E4;-B0MnXQ]1<7J),DL2(pCHj7.\dXS`&@`%cq(!S$2rf9e*q-7^k(
%dK2?<:i&D\;AO:li)fiQMl5B>1q>#^(q"J7hb@G*_SIILbX9T+9p!QR\Pp/-=*W%K'dG;,$i`n]D^Tm2:GqA#8lM)H5mDf&]0=cb
%6/+A-hP%Ig<?k^5=#>gqWf#tjO_,+/62FPXQ7f(mUH!IW<eC9r7:W_G7=2CZjmV3C;7T7TbM=QXHABP6?e(VjogZ::\@<[lg.V^"
%=u<,Qo'c<BFR>US;H=)R5j7m=n)SDDb*4Q.6A3aC5p5@qAX;Nn8j!n0:mK';q#f1=!e_:g%`poTqEPnu/"KL>ArA\pni*GS5MR_p
%5JS[&ZN=Q\s*V,q\$K@T*m=`sU+s)@A4g/'Y"ppKgb_bG3EF.oiI&_1Fdrh]6#P&s&%TQ.U)*/,T[8#bIp>dd@emUh^`.3HGt*dB
%AE^$24MD]pWUXo2*(E4QS5H]A']]pg0:$KI*hap4409V??N0o[Lb;0"J9A<%\;:B_r7-U^oRIGio['mk?PM-OTTO$M)(36G5^`q"
%cmG@k\^h+PSp34;<Q"Q%SK@/LbcfMn+lFs.`2]f4dQcNdBh%3W&t^X'))2Qt'0X(#m*Xlo&WRq=,5$^2Dm"TA-_"+J*[frI,o>I&
%C>%eoSX:4fYmP:<!3n7]o[hbZY6cD5pJkL:rYiml5gqHt;9?A4#o<&El/l!DjfN658Q*R=<%-O`XbC$3SJ];mH"2aR$cC`6h]("O
%BdLOU0GntQ>rMpsLMY!P,\<`qV-k1'XeCXt#5LH`+H+<C+J'QM8;\\n51r?N8No["daha\V\P]O@'CWH`MQN-)mLV^`D54Dq(h*:
%?ssC&fF3D'?gmRQCmUU.8sNX4Sgf(U./;M_IBo8P(33krna'O4&a9*ln=oQL`2g0MKMIJM.@,eY#%X^1Aan"!aZ:ctqAL'`ni)Dh
%_.fNs,N[A&7]i*-kHbpU5pqe9CQ@DNDV`+]A:)iC1PiX&`Uri\mu?SsN\se\<4l,P>SdU).P']JQOsFBjC3N-Y5i*BnXuCg_a+B8
%T`_@qU(fYo%A7Yon;EOQ$73YgW#MZ8:f.(HabqNSVjue<"Yk.Q:l9'p.eh5Uh"<;W:3NVPWi;[hd&aZG`La8]fdE7kAfiBc!NM*Y
%DA0%7^H+Rc$-np#n"</?=sGLPV<S61W9C'*W7l;R@l0M'ZqA6k&EKeR#aRC9@FLVuCElLq-(e6e;lYec\Vrmt`J.6-"<-q"hsV$=
%47arY!E2\T#OEA;#cQ4YC,Cj"VtO\F=]^lM[YFnAfI.5?Nu>+i$S%*8ckqpHW,b2pM'#.2%ZR/Ufsri@ABR:,%dmX(f0?:NDJj:,
%@'$;hZ,1P)?=**im9GFH<?%h^FAdmtqiLdAib/3KB@SrCis^7YEPK,uV&YG^JM4i72C\r>0%dE,ARl-9XFN_BrFFW9kRc2Qgi.d6
%jBe)YJ)r`eoGUkS26l*1GZ=gg@E1o^=Uslm'csk!mW?D$gl1IN?I]tr@`lSt[&\?SLe/C^/.b0tG$e)+YQ?LJ\OT(gb)6=-ULc(d
%Hn?4U<N7<\hLQY)'n1[%\MG)=Ohjo2MLOa.!SB!f6'>5hH]\,NO)HCm<6mp7H'02,+1"gMqQ*K$:RQ'iDu^alfMAJt[#eLubJarh
%JJ*eG:@[ao7WE8Wdoh_[Dpf%,X>,[Rm&H5"'>ZgEH-H/]T,<HtJ&<D-#RjV.aI/AaGH.GL'C'a+(M?^#clq3E7"GYT:6atkQo5!4
%Om0'r+^hIkEO(#.q8R3'XP=0b`2^6H+q-Ln294R!hR(cM>W,(&-g5si6:`8n@/8ZM33k$;S",QKLnHQi;n]o9mM0d29bE1aIf.V8
%FhkTbKqE46WMuDDZ,a5L:AB-c3eK;cfFB2T>YZt`O`Y7*J/qOdS6t9$feaQnV?4h[\*AWKR=0[b2M(rF6h)9\P>CK71&7'iT:6,c
%>%*,+hb:q%pKm%Vo'c<BoUQlNmKHLHELE_4d,7Gq!m@c8nGLG@:0\nn>oZu\qlnF9eZu\$-,?&49/SO8QN*V"Wl9ftZ/-19")F=_
%Xhn424GDCA_ro:(02W]6eTHgcDt(CkE,i;'[rWQ.nS9hk[;cR=A6*"7WrM4WqPJD*+XqC^W!X5#8P'p]H)cRB[Ts:)TBrd'G6AL1
%,pK%p*aUR#2"6>1ZX^S2R^d(>['.#.9\j?H8OutQJ[J$@XDX%@90/CXJ\M*[]cgZC?&;qL)I8?>8A;[(@Me<7UU[8Qi!3'hO<\3(
%6K)%YP4!jP/)s;/T@f`35RU7_O3(jl#lXja$AJS@*S`+0\K0<ehOEe`YFK1a8kAlfc;W;,\pZZrX^Q^7'AB==Ka+`0j!Qp)RB`9]
%c$'UAU`[?4\V0Dh!6%j<c43B*<n9,RDDlq)ZK.K3DFmG^KnY_Y'KI`FK)[b_bEg@U"L3qK<cV/WmMXU<TuT_+U$AHheY86f3SPq<
%rVb#dXuV5;?M/??&j$kca\NF)QW.j;mh.>O>r/moOlMF`c:'!_VM!I[B@l?`-<Quu.k99tA<9]L#mH=Qp<K!:e8^crUrbfaAMQ!$
%Fg]9!P<CC+46VMY=bc];;sMe4I54UfFQm'`M<353DlI0K&U%lcFV)EF2q!s+C%$&\ibI;>%a>aCk1<:'JUS``=IX1)HocQ3TLlrW
%72hENR3NYQW=6q@ou9nBk+(FUq=crQqTaadl!"_#QQ%4'b7R>nT6;trH%bG@X7rW6mg-S\(N>h3!c%l[Ss9T&3d7M:P$LPf>2\j<
%KY?]lqd*1hAq@8\-_u%C'ti8\gW:LrIjEYQ95B_51o[X,fRIsKIG7.b`7isb,S4Wr4P!i0cA;.;Wkk?/hFOP/Hf5QPoX.?!b,V2=
%W`*m7lD+N69o1$PdaD[uf0f@t=_,dG1"O&ea/1@ZjZXNaA<Ju8Q'f;aqn4.Y`A&f9rm=S'qC/^caE=_pUFZ+K:)R/ie1%`8L(Bl@
%<q&-_"f)YI`.5cR.]Qe^&qCasqflo('i+*)Hi4:[I&bf-o=ZoKU]j-W;:Vf#^@.8&>:87Bl+H,`b(J()6NG"-2+K4COZ*]p0BX2,
%atf]=mY%FVj78RJ8iL2@Ae8r81GX7$k%_BSlK\j!)R>,Pe-p0VC3JZ:m&1r"&hDZ2]Bedth](%*Vq7N]Xc)YCEb9n%h,(dFrP!dc
%p!i`r)E'4lOD`A/(rqPA]%F28FKNa2O$!$q[r4KV2u_WSJ(!iTI"s('mBbTtSZj%bC1,sbM58[6n@A59mUaf%CF=Z*rNb]NM0WAU
%5Z8QhD*rS!&'_u(&l52l+RQFZ+rGGW1hQ[>S5\J_Om>.>bD8V//:5n@J%mq@MZLB@eJV6';Y(N[j4U7+&B<uM@bW#NmM.!'OTjLF
%=SGsN<Bh9RW4`2ZOnAa\HT%^X"[IeFJJp2K1f=F2a2G*f.t[H>]erU/'\&SQ]UbId:\=L,\l[BbYS&Bf9(=X*`O513Ck4USOqWDW
%A[0D;_YM_`+_ca5Ei7lhNTpW4'9eBiRQ2S*aI)V4=BmH@et`k4DX0FL7B#r3I_.3.&_d>aU#R3`DQ=n;"DQ<eF,dX@B#1s+^GhsH
%lln;+Kk'GOOD2:C_3cprQVh5m_+jmV-AkAk#irq)7<;Tb<J=@/^QV$Ibtg6UW?QDn_9RI75%&"Y$&goqe%G;jbaL`N=hpdCO#2a[
%.m!iaHCsNqm:<+%7C(A=KFmfD!chAWm1X;9*t@:_;H#Da/=^>cAJSe4e9=u(.,FYN>>iTF-L^:(U(KJq36>>2LW_Sa:d/T/d/I;F
%L2AA:Bp[-p(*;1P`tij=\(Y,rhL%KO35A=/\rEQDedZ/5Knlme9knJos7p(Wb'NqhF1NC,mYQ1/1E*4i\e:^K[QZ/k+hGO2Z=Vu/
%MjC<9W%BhKE<cu?F[MPa*joc$I?=i=[TsSt"V.@*?6->*9WriIh.>p.q5BbprYu7'A_p*'D0GV615?LA5hR5J-N>/Ff>G'\;faYV
%n1/qbf:,7pKn?gc[R.E>Xm"`Yh;f'4aEBX3gco?$U4)R?X\f[dqZgg=ae:Y1Tr"UsQYg6;8)93nkLS4(I;OrK>E(f`^:1i*Df)Sr
%YBpJomp)V;]^tfnE<FPu?gG9>T&kCD5E='aB?\Q'804A02/%JT9r=5eZ&A"@;Z^P*<d39WN:g]<G^/iQW8dl-c<s@Fi/5>PiO94R
%L;Zt3cg7\jeK9EL?h[5n0sE!F1Y>tXc"o]or*Zb@6K$*rO[^9KG!.3qR?m6DQH`raNAS#uUM,Uu*]KSE^"Bo4^&33+EK%ZfAo$,T
%Cn*\VoZ(Q.@C$6RA`=+b9rhNjNS3uY^i5J#"Tn7kZ0SZ5E=;V^=g?n>5AFtBO1]Hi`f`JF9D#c>HXkqX>Q/'<r-6nD7/!PiA,Jof
%/WX"HFYK6P<;mlKG$jusc*g46cV7"GlrHMP;bAm6X(Vfhap4g&oa=Db1g9"%U"fR]p>0B$OsJ-Zg_8U1`28kB:_eC3kmikiJ:j9/
%9EMaK$HY]"5XdP-%s$h$7ut_'27)Ti).r<'R5^O"TGa>)Au:V>W[c>980o0g%kf9Wk`g3/PGl]dAI!l9PA'H%!qXBJ_7>Op1j0(;
%80]$(;c6hY7eCkMQaen:r<fo&)G4u"*Z0[iBotTMNn*2M-krd8<3+Q:.W^haFNq%R:p-Y+CZ28'idg>L4\`@\m9?qf^:5(SB=7%$
%PZ#C?HIN]pDI_BX*X6PTH8Wb/nnZAIIZgD/C`<-u3Wj3/W;!l\=4%%*G*-Qro[_XXdl*"DSZgoleaHEd>B7mlYbllB$:4-Z!gH03
%6+s>l#u@'B)_#G@_+?/u!SW_RYN0Hec%D>&WJlhmF4IeY#h$%73;I$AK5bY.iDBk=p,E7.XlLqZHFiF`EFc_Ri+3>tj=u+hP'Bfe
%(%koh&5F6o+Om7?,$erRVW4h8B#L3uZ)AmM=T;"7$qIHh)dLd^WQc,I%(O3kH?$k6-,PH!s/%%DqOK$0l@X;&1G?%kh/VCp/Tc@e
%$^3HKl(XbARER,.frFPnOMKhXf#50SAEMpQE4S_d=(a$@%hH(GfI^?14A/Rt&_Z-aHk/<WPRPP>18+2EcgZN7@j+,\b-X0'EmV]^
%G64lpBu'Ye`$N\2/dA?bkU@$@;!cgd9iV2K#<6etO'Je^G=oA!,[(F'llt6L^GbW;V0P4eeA(rTSUpJB,h+@obL/"*,b3*tdMdKp
%a,:m;N]Xo_\PcO?!#S5Wrd*7KQK&tudZIl".S3rMEM0pR'nN;%Xp!+fT:tiW_eRFHnTf*gktVa]NW(oPMm>R7Ujrebj%%:YTq*c&
%H`_P@PW/BB;3<d*(W#X/PMtJ>!s%SLe@,`D>*^s7V);"@9PiAfE=)3B]@hJ]#5i.trV#]!_B7P?M99nah>P1]@,WhD=M0d\&M)'_
%&!S8;<d=6\nG$(?OiBWq56C"(M_l2TX_nfdR+tdoM,*-cpE97b?h&!l*7!hMAQ#/;^$Ku6_)Y!ZhJmu\V-C"[\=R]M%W*SL*Ie9.
%C5Qdu-rS;g8pWf$2f@o&<!5:M?,]FTTgP5cSX]G26Xtd3_dYfRX@$YIhh=kud_$VqqJUh\1YrU;Ro]Gi*pQIiSe45RHH^Tu+W5Nu
%Q:OVuLm6)'[!>b?O'=-VFk)lI\]Xl6JG$>*F7)<%](H(`"A1=Aee"".muca-4`;<lQ;-U[Z6t2.%eDZpGF=B)Z`oqUJ:!cB0Sj;0
%N2`:?)<pa7[Q3j\cN26">"=Nt@ng3l@G[%o8@3]?nf2oef!F/B.EK.Am\7R'Rb/k,qFT^GM3OuRJ6^:f:EmKIo=u[E8G0&(9so`e
%,L`\D>=&El#eEBB(GMSW7?c<>p]Z\QFZPkphbEm-h[hZV+%<-O.KR+r4"fDJ2:HEb+Ok3^Wna*>>nV)B.9m%"=r9Y4aBnWcT=062
%"q<ef;$(rlp,&S0;q.]L>jR[XMN%S9%dAj]?(G=pS*BHYTBV[hoiP]&qF<Rio.`a:Y<<J-he6s8h12_/I$pC"*?Q+-0"c`V(Omk,
%;NBYf>20k+D_0,5=WaXihfPbJ*a\J)nZgoc9>>31r[nC[OF_$f!Hj2`[4Yt"h@S&t5ZNG"!UgZs7kERRXUWr=0mX@j=Qsm(jLG(8
%i[74g:r<(klCKFo.s+E5)V^UJ`mfY&o&R^r!4<P!F0ZC!9j:YIAZYdLWgS7H:[M>m8%uJOeN,j@W[<a7or'HAgXj6l@r(T3eEn75
%,I;BlWi;dqA/<:0S'8lqZ[<Vo=FY.T4fn&XCGEEt=sG2t(7-pL/HRc4<1B)_S[V4efs9dVmaMK_I8F!Sd&Q@Y"u"c^S&#pk4Vf<8
%R3n^SH"o3r8KJo<'ahS9*Gm*/M4b!rj,'bAjY4ZsR^8GZC+<+h@s#Y#]76`1e41G>D=8'.n=b*f-22t81B]VD6Jq?Iij<Tl9VOOs
%?F<s)mM1Sh2W0@RkP`i$_;$$BbLR?dbIVV[I9E%$RAuP$8YmA$dB``/Fd[!Pf_N&bMN*+iJd$^%0@c-0qRPeMd-_&/N)C[6P=JVJ
%gbi7Lm!b8]gmje1m-r)9',LQf-MZoME&MXOPi9j/f?p<-?U0@:MEO$0:T4$13W=ZP0L?eF3+,A3^]LOa`;O`466sg."mR:!1i.EJ
%>?K:e6K`L@Rp:5:Gdkk2+S(/rniUgWd2$eLX'=@8R"_%QX&`)gH]6$:B'l^p2sS2:HNYfgI[o;N*-^rScWq(L\SLimjj6+@c;^b!
%>p4hpp"acbIb1-\3PA'pd%n+PSuFQ-Ul<64U;S0?SnF*5'CJTD4<`=+X8d?tO-6Mu&2WhfPF!)")D>H%0uO]g4][lKP,bp?d@P6d
%/R*`(0PkRb\e-IR_*mm@K"moK/reOpc9%cRpS(dKlF`<O-KsM,AP&flkO6^.9?oUAP'@UfgFP^7p=`(Z*:\o$7;T&A.Zkht;\)u6
%G*_2!4MQ+]$pQb`GS]0?I4N"SPu/YsU=2iV;`\&.C,5isgHJgZ9;-YaNId`DLkI=d'TY%40B#\8j*HD9W`72oBp%Sb=;]A0:96Vd
%Qi3#F!":h84&?DV(Inpi:*S1dK(;h[ri34mC>C-$o#:$lZ!87;!t"TYIZ$!%8D2=!\:NnK>;SZ<L*t\RRh^]aHr]38?uL-+X7.X<
%+7r/]9IhUra68umHPt=(DMF%&&PK"h;3^oW0nt=9B$+.Jd&O!YYlMQfs"[.s?VU&2Np:udWAPRGr6oN[_`ZHbcL#K;-2m81^?DN0
%k,0O+%TS9;2iUs?G7AP:j`;T+]rIF"`Nr;Y'p5j__d)TeVfjZG,K5*h.Y[EO;_)-rosiFMpB+W\Xhh2:*U!2Pa'TmS*IiL<BS#2^
%*%.LkqX4,_X*[/ZdA,+7i4+ltZD6R9Br;G(g6!:]X:DaK:Jc*bM+=N\:mipV>si>'A'1GOOhe3:(Y/.74hM?LE-V(-gri1W7+Fc!
%TgBsQMXk4<$,I9R1)6J"r2qA4=en,-W#r?adKd(N'Va!\TU_&]'P*&':cWN84TeW$[I76p?i;-CGZ/Xd7LeJk[ehrj=)4d.1+\!>
%$^7J%+U>B.IZ\gF)">t1Uqojo>$>%sD/JQ/hg_U=,C9%7WVGgMjUZ3lZ1$IAmpib/q&Vu[3g8X7%,WSC[^A7s?!.'TK5L,>VU<ln
%Giu(Sm5aaoLkPfV(;J*WKY&:0fc3ZTGU't5f>t>4h5>!1]^k>b>MO)Z"1-&AK==XiRcDF"1>95fZ,uP+<+9'ga3!P4rm3EI>hodd
%7/qf(,a]I0=6E$.qaQMCJ`TBaKh,Jcnp-IJMb50!8T#V#qsUWd*,[<RMkX;q^<io-3UJlUQChuHEq@q$bl#uXe354iB(T@iCLpSj
%4jVi&S;blJI[Ait]&2"bOg/&5RJ("?-k6i-RE+Qu7aSOh"q!"`fNQ<tP+&A-2Au5;,_*"%D'97%8@L^s[`B9XaO/Yu:tdT(5,odX
%7H6'm%Nu7T-/TZp1[GZP9L]/kI!o:qN41UU0!Xo'e!_uj!eA*(Ho"j+"XKsYPgIW/gVXj^R9]!I(0`Ks2iIt<nk",7!6Kan9.F'Q
%O$7ijV71esi%>K5!G2,;rneE(GjlBaDdM_2nS$SlL;95cD/=6dG*@\@<iJ$Pch,1ZV71JZnF!__Db\`ZKWS-jjUS&D^e2<!LoYMs
%m&`h6gh'cJh(C*ne_Z`?,'uQIm0%pp@W/[M=mR0@(OKq'Q\85A"fH)g4!2W>@dd)?K-S0!jShXn&S5%%<#=T'7eIZ;:?0K*'@LF1
%^4@.;B+8!$.no+SL@qV39ed$:hU#PQ6R<c5kQL2q/N*6V(V<(2Dib\lS>X$;[G*rfo<PK,cB,sAXu_MO;D:G$?oumWSZBX8X+26Q
%HAAX[+.\1$0df$DGM7i)??ibWYnF.KX"6db,!u*j81eJ5q`o++*q3Z2msaY"S\X=S5X:=c2"c+J5t\moX%^)IrH6q8B3TBaY3\uU
%gFs\_ib4f^092@.nDC8@Mi1bfN,"<XQ*f=Mje?"1h):QsP#@#lkMA2.RIN[H1*5bR?Hqr=&.:)sAcrsWVBZ#?CtRQ[:q8=lq0<S"
%cTN#!.DAZ6kAI'u@hK,;8p\D$orXNNLTHkZ%RUi*U*+4DX&mbVS(PW8r66m;6L`0;qHG,E\l-td2Jj<1@&mu_:f'phJCD42cSOOE
%>07#`Rr2F3,B@(aZ0mnD*:KI`b47#Dd>Mk/@'RTupl/7=2=X:AGu>3>&F:mn8n,JHKZP0$@_/,h]95*(P3n&,G,^*2!p\.F(ZnP@
%N-!TBF7jfP>rbc#);+6LX4;)JG63)_@E[m/Q9()qUd&3'mUM+C\`5`&h9nZ%M+S"L_S,(AOOX>WE#GJV+OEd8G,2_ZfUTInn6m""
%MjtB3D?Xalg!a3]'.?rhf9u!)\Bnedr+-A;HhBs;2Wm[5bbNiV];IWRTN]G("Fk!),[tFP@IB/9KP;AdP(H@8C;\jEl$!`p5D[0]
%%-rA1@pc;l(,r"j>U2Ca5$T!`*=l)F2W`U0]nin[QU;c2p5in"V0PCS5+C%J].5VDQV*$i1`jM"U$.TI_:)DLC\CgS<=*/2;I--i
%.G\RE'7>SDiH8`Sdl(%7T\;ld(T+Xg)RYPM6<B($l#mmKhmJHEg;a,Y3p!t`MSghk0&N3YC1<%raHFGVA;t+B9ZJ!X[SV][D''j`
%c0<8Em96keT"o.n<k,I4e<F]QgUeN[im,/(e!#ip_66YjcLJ3Vf[P2BCDpQR0M]l*n(1R)^Uh]F<@._@d+^*Ml:DjrrE^C2r`@&3
%^+u^DPLl;34cs<<4?6b%nh2q]H41n\VMZ)=9r38rB/[MN/0hoRpShGVp?2^P2]BHXr_qW.7X%"1bABOHpVbK;G^eq$NZX1?oZL@G
%?uXuA8)uXr$6[IZiK:OXh\93J<^Upc,R[*1)qA+jbqqCh:C@qG9.MA!/NbIl(l-//;XI'^5IG9@/*D0/fS(KaodP$Z*I@(Q#&uT+
%p"12\qUBMF*t7C>:7mVIG9U8G3)2rd_7n+Z>2=,<lp&j+bW'1OZU=jJSIpNK/>h[[U:9Gmo4sTF`@(sKZM24P8lb5hnZj'@B-p=p
%r.7-SE\7BQ+dQ"JH8d&#3[/im/"G29EAbsi=/GHD[q(BuCJ`U7?f%0r0+^tQYE9J?)4!/MCnk,#TaZSP3tbUZ$(PX#"blc'(E,g/
%1u&(3#8@_DAI;ZQ:$GUUWN#As)UnK(8[5qhorDXl5U3+$;i.(Q75a5mpN64Y[S&-V<23USGIeRukd?]S/bu<Y.N`<I9oipTcfp4d
%Nk1:t'][A8?FN>S[al!>%3N5#0+OmWF`Zce'KN+(j0KfO3C(DdPE"":7#?"iduh?2W\S3RV;&N@?qUk$ctL=ubMjttg>g?q;nC'9
%#5o6#1GWEZXtlP()>.*k^^+f>?E^JAK?WDZROWc?LekVlmj0rZi;^:72D*)lA7l-;Y]IAbck&E581:obYMRGFnclm6$&GZQhbY,9
%HTp&N'e8IbcdeEKI&G52Bg!Ptb>!]MKQ>Tu,MPA+mYN&)Iitg.iuU&uAn5X-mQZA#nqGaiM8>^NUWJ!96Gi"M\(-Q5=HI4NU_su]
%ClDE.)+Pn)*8QIO5%k"QlV5U'b!HA-*WF5dF1SZH"MaQT*uZU,)DN4HZR5A"^]P)c*3]pIb.F@G5J&6W&hm9N*$%N_@g/E4;m[kE
%hW\=O"X+KU*+_W/bgYni/Eh#dL%3A3.lWP$(Y_aSkjS=`J*JD!T2mksI5]TO-%2^$j`5A#Ea"t8)Rj]nBOH\ni3o!["iHb=RG2:-
%Jndn$pQHAYk](99"K;(An16&KNH5dtS1)B\4Y!55dHY@`d`1@7'@jX!"KH"iFMmOjl98Dmr6&;#\op*YBf`Ih@*4#I'*Q^M:.,O[
%"HrKANkf_:OAnVmCeG'A8Q:8@&J3m9K$IZ^5WDoV.._nd[O?ZO`ib2)j$a:+7_oo(Ekd&^p1Of%UbXS>P`XVEH;D#rVn:L:;&lMN
%^bg8f?gh.XLY?5j/Do5mBbuC2>JaoV=^m?":6g9EWYbC:*Db%l.^L*82b61,_co9/OnjYl8c>/VN-*&ICp8W`j%NV>YsQO/2UjJ`
%,I%/k)HhZPKD::pkt(P;dE.KE\G0&QeJVSBm\*h;'Xrs9[3r(n.W<!\YJnhaB`:CVs6rc:]@c<<aZbp/\=f@[,N18!agJO)-p`%`
%3H:HXV[Be"(FkLVG!R[%MT3l`\f9$Ylk;ae.%90g<@jI'@m@WV_\GJ0pWc%Oo6UYSJLD4!-XgO#SQM)ifoq6(E\icu!BbE:FPs2C
%SnlD<jc)4*TE90K`lr)a'_HVAq0]JD4bA93>+ua3rS[q9-00`PpE#a-JCUKha3mY_V%5AnMt$?k\XMIn68h8IY"!T(^/hSu2$6b0
%+#H"_='->Xd[+]$[cO8sl>bK_"9gPg@pluuZ/fK>:$^AnUt9JQ05o,!(H,<@I1]5.?\qH$S8;68DH2Hh9bZINUFO9FQeVH<:b-5s
%.o0$9s/58dC,NLVVS+Pg>!B(*#Yl1IQZp[X$0Sn%@R+tS]K2\IC?#e`YM[Q3/t]1%2>)6o$AmKodGsiO*f[a-e",XhKlc09]B\+e
%rg(1]X5\+C'eZ:#\Ud.,'KUQ4Z^9N+'3#-IplQ0)_0dEc-5K6M=l9)7XU_M58RW[5=S,J_J:g-u))@MN2V5]36*3WRe5GO#9VEYj
%>&QYGc#Z!)PbpQoBH+L$+Df0QC@QX_A:*ai88n"IpR>p\6E]]WDq5OQF?*-LWOOdk#i=+no>rWX:bfo8.;t@:ZB*3(V1j>rMhAld
%inc)?!.TlB7;KM8VE+Cl;"EE!:.(R(ij)J5@$/28CaBkoq6Kj3)iF?`[?QbtE=C*A1eZZA2jt/g9?D.t.[.WDpY+g=p5CC3.LaF/
%f,4M1>B@AfDc]LKrY+pS+5bL&K.,a$r989UfM.KYlYTsC4o1`O5uGHAT#-#4;o+S#5N#M,')Vh`D2P27k38J+`[-FGYp05PL\gRC
%Y;YX"LKZJ`FdhculWl]Hm8CdY>;a$&0#O6M_H5=]Tsg2D`efqW'sad?p17O]Q$5M1<m%#nS=%_]W]RTg,XuFJ7b45Fl%,&@gh'#?
%2tad$l,+-0P#pt(M:TWV;f$)aWfX_Zk:2sr15G#+C?BNfjfcPr?f%7$744DhGR]ZL/Kh$QUnt"[dqJ`VajC=H>*5"R.LdDL<(Mao
%L3YDJ:C*Z2^PNA(Ac0=M>c;q.S1S[d%BK4+VeeY@0hjOip<@lZ!)%PDHgCjU-?NV.UW_ha?,@7<3f<2`SOn%r>[:Rd#MWB.+"-te
%TFp>*<3k,O[mi;VDiNFei^C48=XGY5^JSGj/'O,GB<Z@Yb?N*3=IEBK)bYH5ohr,D!.;Mm$Z+[NFEje0@i;G<%Qt'/_CnX-73+G:
%EHLt/Dp@P#`gT+=e$5%^CF*,<`+8!@df&=k1DX\nH*%4bmo1e`Mpir,GP_]*]o%%p<AR:,SI8nS2\?n,2Z%dnWFK$E+;7hrHl[3R
%PUbS)q)&+;]uBp54PcYffU[/ucf`c*lAoL-mGQskm;?7hCMWfTS',@'9I?ohe41S>f2h-&^h\W)L7=uc[Wg#??\kPc'MU8=Yt"Z%
%0Y6/4jbrhn<X7!nf);LYq4,DWmF$ma+TORG$U/X<*.SKR4'T/]6;#_C^UuG!X*7UreAW9*7Bm/nLn[LD!H[Zl!(h!UHYP2[fI6!R
%Rhmg3_kqJ)^`YN7W5.qm^IF6ZkYYPr,u[oTJ07!g?9IiQJ^:1,H820+,kOkmN[]-[3M8&"pO',.X4,>U50t:#4%1nX/a@uU-khRR
%f@>I3<iYgG%T&;u;0gf/JX9;Eihc35RN`Rd7Z89)I5>d_=N9\D<G%[AR:VeE4Z*X>/Uc3O+T7\G'q\'P-<[FG<?jEXbKb.pX;g](
%<=JohXZ??sSr.G3<=H-QMpTsr!Sf,)UmW0,lDN%lM43E<m4%3h*U=19>@U!1l3V%A!&=]_Fb<RQXbFt6R:\g_2fjEKRqg[>8i-rn
%Djigfl)q5H/3$f%X-@=E`#=;+bj.DUTBm/.[Sb9%Xk_.p\Z7>8lu0G>^+(4;'%l"+hr:!Amt>M6CO.^(o&fSqbtU$;O)jkr<3+L)
%\a$c:0D)3-j>U'Pk&VrdYZaHNlg"Ql_5g1N:iffr4k?.\Q2:oV$?6k9I<fU#fC#Y>_/6;f/-[/27R/d;.0QUGr8ITRNSOrXkj@e,
%,ERFm;9^Y#019%Ga?Uu*<$RKaOo^r^)s7N4cct&<om;,P[K/@D6:_qS]<?GRI',ie-PY0#bV[&[?$0jY+7-!_aZ-!lKiDr6<;rug
%g*Y%WdAC@F.^LkG&>"-/^e_d>,!5:VAijf$C+Y_uWb'sZ@j;iH4H'\=)?=u83Rl`+Pd1^eDm6O_C,fru,@"-0GdF)]B68,\`=U7r
%R^-IQWa_Dh2Qd>iV?3-hfmp10c,JFNmn3e^dhCNT*N+C%<-:fj3pLC+Cq:m/AQoZibaf)D5ebX8YE!!,IOnoV";r;mZ/3sooBB$?
%W_qCoJ6CBKfiD2+pX/]$$Ha5Nqq0pVHoY_!"$D6F$s@^u7U_+4ju'[,`SpfRNDO+MHo3e"-n>l#ocR3hO0AQ8R=9>.nYl-.-.nEN
%:*C0GUpsKs@:SiO#9Ecd>>tBP%9DBWV9V<4-8AVcE$R>m"^*$gVdeil&'U=TE/1*Nd2WtOPZ5&,g,cQU/Aja8qj_W(U-@!`R.qKU
%2HPq^MInZ_*75^e3kp"2$*6LO!t_@J@cU&A[CFrLo=5@9X\rl)o0E?9a1'UL<W+LneQ8U-7!uEI3r3$Z$RMo7U$IS9jYY!VeuGSP
%>B5cTJn=Q>2'XhHaMFUK?/3n8%(F/mX_N\'/A6^8h7(p67059Z7rC5DXT6X\CPE(oMEBO1kB+taWe(9;\Ooc'jQER`Z(Tl0##Y>K
%MJ4$CTes[QKk"i4H%C07n_iP(hSJ2,^Q;Y8,$u2T.up'5pXYS.cU`t@MD7g5'JB"/Do*9I"nY)`h<n0TA\FkfkHg]tMEuD(+M!t;
%nETj6R&+AGE^DEaW`=2kD0Xq>Bfq-D]E:6i1<:;jPrH(dX/<"$(+L&E+jCHSm+<kW[<5kQV[m;*:/b%+b&$:ca)4eTCPK[b]^S"O
%n$$?+Ype`]m(j8u1&@6GVK>NeZkBF;A#7h_:i-./&b;K29(2uZqc0tMn1US[p5]b*BS0/>:klm\"2Ltl[5D<CWB%-oR@4s:;si,)
%:OO-O7;G5)1pl\ChUUTVaUU1R>P%'tif/09<L4Ko_,S77eT]\^&r\\o7>DnF`<`-PLurlG.eBm(baZG3LZOQV<mdp/N>ENV"b>gR
%ZF!Nm74)%hK^WOt`20bU/\Q1HA+sLoYG4,n>%RQeL+^r=DlLX=IUPa'Hn?6%kpE=pl'PF.(O%^jf>htrX?15fGQU>9JLCO7GeNB)
%4g`ci3W]eSX=]WM9)Uk(OR4.%W1oM_^\K^o4`foq^p+Nl`?<a^5+g0pWKgm]Js(Z$IMXBOHPZ@bgg+8'P7p^c=@blW&2<No(UBd?
%+E-ZR+lCtOL"OVgZ&O'6Qc6,O>:bi]!a?BpYdW.k<\<p>P/05`YSlcs(AO7@L?U?s*9N!BB'X.Mqo`1W\sgotHi?KA3N=TH9\Z>:
%,lX_O5+-"`>qsgtd^4g(iL.`A@9Om/Ka1?Ur.Fi#Y\p5pl:G/$r77>c<_[P5VdY-;H84:*l1<S'Oc\p#+pdMk/&hG/i]c#.F]&r*
%IUdnJD5>c9%&9[JHJDXWX%+MNB%n?K(?\;W"mSqh5$19RR89uBiiG$fR0mF\fL]VY0pi,[R3%;*M7Np[3%J9TQtkQ>ES'>in1S_)
%khA17O65!tMJ(u-HAR6kB3SZDooZ\T<judOG;Pdk^3TLQbqg4WWH!:?e@8FaIfB21GOs^?pOcrT`]?54@%RV$c;)(o2i,r:U/Slt
%Jdse>'dKls<">L8jRo'R$NZQd>XD?obE\Y%T[A#<CM!El"kIa,^^<%=F;q#\.CfrT'Y4sj%D))@o9nq6?f%7#7<`!QWeAT+e#=N#
%kW(I-G0H.d9'3K3jrHQaT4k<2N$'t]&ORFXY$GfSVC&'/dIYe&[N[^c7mnMs/:rO[3$]G*Bp]V-PcnCF.2dk&S7uK;Er0-j5+h3U
%2\VnA`.E1,\L"D\mA%5Q<'j@<UTGNF!eZ.P'=')Z6R;0t+IXs75+3k?11nHkUst99>HG'##&DS%P\)3C/4E0&Q*P!]PK%qc\H>p]
%6\?#qj<=Z$<CUqS/[j\BJABRI]JZODi$'HbKO\T11Wn"p5KJ39,mI:?l9KV+.Y/Ra2&DM*4TQ*9T#E'ZgPD8l`$1=!YuhbI'''tK
%87TH+!l$u#AMd)GgGcHZUT.lgROP_q^Y[B&o>sae(UdJ"<_EefZEp^9m/u-AY6Etg4]<U_<cY8Xke0`s^2)5gIC2L5Pq?ld@$e9<
%/OW_lY9$>hR7dD,Y!m]uMlT^NRgXh?6<QYAq]=EWYg.4ZfP^3VeEn75Ja9b>DJPT<RSr%lijIce&ItetMkfog$L;k?g_7E*=G"(A
%<YTZ-ep:aF6uJeeN0,"6U\1aCnrn..Gt`7]a%rh'mVM4$[a"HjN6EicDg'2;^;t;ra*(tUVf$,A0c\&V)2GHIZ'3ero5X<9-M<.[
%fAkk^.6+9L-HOSqf[X(K;;PO9.7M2B'#m8rG+lNn,SZgolQ`H!qslO`23%hEd9UI#EpQM)pgSUCfJXQGe8]XR4'\u\huPcVJ%5@'
%ESNUP5I@d==8,AmIpm5tZL<1OC#"m7$SUPe]^X,ie(R+pWimJeKq)HHe?25eoQ/\)PE9a'I4>JBnZ<k?`I[>n*nq-qT=UTRa(2X%
%<LH9eglg=r*"eYKm0JDaq_#3jF\d5s'4#gOaDPi/1B;=SZkl0ng`@aW!SuMNEf9<5r2XCmfNmMMZh::DMQ=cl@Wqq7A)#Z3V4.ej
%g@C-.g[0q?"Og_,Xmbh,=^E[$#T5.u;U=$`S78EVP"d^9-Z`P]>?lVp*m9"uXA@sFFO;-YZ)^_0(NuG!3-!jMa;4JO?Tki0Zp&W&
%is1RHFB)qh[^VH':5&`2;"Ah"CU^`"SDDSL]6?rC@4K'iI2\:tr6D*$+d6TqOob8MU<G`*<2/c$l&LX4<2'h^F?7M[Q"U78K1!Kh
%-7TPS\iH$hkQH1dW'g[Ebnpnh7$3GnWe5AL*bKYR?K9LiR?<Zo8]P(>>g,b81#[Bcbi@Y5:u@[/0+fH%_%;H(@=Ph%9ZG+XN(ZeS
%[2p3>N0I7XiM!f6J:%d4)_<W"VfjZG,@=]8V0eW1InG4=6]]s<drl1:4gkR@:Yj=d](fIg^E7#P'qTS4$I40*/e,Pl.UGIIm+COB
%X%70b7o*&[#B?XDp=lA=4\B;A_AQOfk==fFdQC)*'jsC1</)El0fY_Y'8,<.@^9o]P&Lb=b#4S*Ts"!bd41QV4NZ7uMp[+oXOPO=
%r#-UqbBF:c#FmcNdYF)M4*jmuMr@CecL:?&+#S&!#:lbY8K\hf3=)O74qR)'OHM5p>]%+LR1YW'BTh*m_fuA^TI'lO_6ljsg.ZLf
%J30:&(Phob149!#:;lHZ1M##@mg*RO@MjH$E)%TE!JXV'N*(8fW>)KIRKXK'&>PdB=?f]Z,$T^TL!_iIFCgb&C\-"GIp^_8.c!Dt
%V.e@-a@@qn=>@tY<edXZ`3hg'n%'c79l/042KqKg-s=@`a+P_`F"ITs"m@BGdn8u6/Zlh!LO+0d@XmH.Z0m=>:tK#_/#Pf1Y'b;W
%B(^\;mQ]&)?,CQ)E)n)KQF[3_BRhgGG$AmtN2=mYWc:2lPLo)3kId^b6.:#EBFgt1FD&7i.*-E47$\H*kh0o_F/n%"[?LU6k%>eE
%!-1>L:X%k?ks1#L*ffj(+R<.M@6"Wl`;0:N;MiJ\M[_FI3s=**K34oBCmlN!ZS3cE]qO4SD3cLj8qMu;P2d`djjG,54Y:5Ygs)q4
%2W.(<l*(*s-[`ZZ__p&Y5fY-I,Z8'E`er<4@A0l&=Jc44JI^IK;#9epC!<og-n.UUjt;6hh'`[8pHf:FifIbUNi6D:_h&@EdFVD8
%CGS)OSW/?k2H:Ia;sqgjcL@QU8!#$97?JQ^p!aH`48KB-e211@idm5qUQd.6&3'P*DEtP7Wnn*qfFZQ0$R%H$B$+//Q$i!nLYte=
%$]!rBM*9Q&\G`8LGW:RR%q'#jr-5^OV.s&j-tGQa#/u=S5IVo9q<hmtFS\J&2:g\HfqNiS11`ZNfkYlog_F)H?d-fe7l*"a@sW<=
%]4/\mHJD#f2U<n5=$fIMD]Ip6/djBM^ZQ'0\#Ckq?1oU1m[QU!B,PPY4N=^a:5f\01BlRV#c=ca2cs4+cDYCOE`8>`a'E6Sg:SIu
%f$?EDJpZ-*#dqBk,EpPR-`dTs7NeP/(p];YD-:>J"[G-k#dPA)WiESrG"K1V1f'oi6mnj2F$F6^HUS40cBCA\kbO37o/Pf'9t^-8
%)0DjRc9'>@P(;SI#Kj7k(iVG=/U+Z+:d/ar^sqf$L:2g$.:e`LS$5[GM?d].bL!U\e.#]!+fM9Yg@K#irI,"KV.i)YXM=b&:?XOb
%9d=cdJ%9E<L]mAZWrOM_d)7JRT_S6#6A:Z:TU7,Or6E#fC^CrZZ#l9FqhJq.2r/2+LD5/5l`i<dqpOm(Y(p.Le,[KfC$/9qFrPfU
%mVtT:UB=-uL;ajb8DXpdZV1P4Ddesg#3C3V7=denUQM/ceO'Z/S#^n5nk=;CB@'1t\S4`#=;'_O/5o<;PBjVkT3kebXg5-p8NmoZ
%bIN+;[:kVKEAa'!(Y>R"iesj-D;gCg@!lcLG^eq$Npi+`\5kJHX"oThe<8K+no69"'j#m$OZb8`)'Z"F>uTc*'\R3+a^1*#F6_8F
%PBiX/o:)O=;0/!C-^R[A1)5V1quGOnm\\k-`f_36Bpj@'Mr%)WBN4Pc36QDN8kDca^m3-XXdQ).:<XhE:@YX\XS!Lo$))YV*Fd^)
%hl.dlObPmL3tPrPKhn-(,?o\9RPiIge[O@D,H"`d":G\c0Z#)UYP?;K!C)f2n!F"^ct;%g[?T\3mXi;4=S8JWZ`.+3>t\KZ"aFk+
%@SU7W=Gn2l>Oer&&'Bq1TPhe_1.';-N+WU*_f!n>j(TH9!pln[_-&d(!RDf@DB]:tG*q7cKK+HHLiFV8LduS2*lWiC1!<oDGph*g
%AK(Se+iG`n/_api!T6?Bi_;9#KYE#'M8'kO:KG`CeX#;l.on*sNJRru[I\8PDeR)\=-&q##??MZQhPiEQ//u]M'Bq;.\:ppcnVlc
%2<rO%rSQnB]:Ii7]Q`B<hE)EtRJ4u>P@Br;3k]afei7qtAV*5@h0JaDkM7R%,X`[l[;Ao;Rc\0oFlM'el,qR^9`sO%G@#5E:D=G+
%59>):*NqG6iY],_-@GA_5AlV$&sGI:Lr`I-Di9k8;n)>hU%7tMh8li`]Vo)gB3rpRf5oiC`_t$18*G7YW&ss%U.*A+P3qn]P]TNG
%rpIP5jM+=lF.oLOgY%:5Q/o1Qa1.jm&hSY:bc5cqM6s*i.tP2jn?O_^Z]8(Q_'!VE`hd3!59KLZYfh8\-d+\JL?WX2B<,9?=]:;4
%&8;RE#joRj%'Nlhb1:2sNSR^FE5AS;:ct2c`THDJA7#-8Nl_bnK@.X=_P)f3F-2Fn-s5522:fhX=mI\Glooa<[/iLV+M[^kSDcJK
%/N"b+L[M_3iToQl^9oZu.(Of'L-sAD>Wl.sf+OtKWVVoO$)W]F2hCWo-T=eA(Q0;Kb)VmDUi+_q?AldeX^%MM,V,be7lMe)'`W?6
%f,`?31\>p@^b7k1TK>3:J'BK\<K;C7al^eEmZtTLQJVX4B/kT.WG[?[(Y>+40bg'X2ETUDb!SLJB9hVAN_^rcCAF]3Mg!,W=5u+k
%Xf>r\MKu('L\ko;268BDFmQkaSD2)SH]$X'c+2GdcFqGI0We3mo\I-g<qi)H.N;R'jN*9-VubB`m#6Q()n`,AebXsJYXbWT.,DMD
%)5.R?B)3dK2rec/Nb?.%\n4*gHfPMG$Cg\4LMRM'Ia$dhp=Q0eJ4:/OlfqV$"?S`kn7p5^JQS^k%nn^'k^?#u"kT1h4\6YfH3/B%
%,s>g\J0n'p<:B,HS>WRi%OVlR=MV$-Un7=cg)-*XDVH<dV_Bp\MN$4T+,6#/o2mE;*C$r8>$161D<<J.IAo#*DtV`:b5>S@nqXZq
%pid4sqcF_:X]N]M8ndNM*heAW1NCWmmq#VUg7Ba)aj`4+WT))q,?99"1"qKel:kPc[MCM9]Qm2oYE$bY2f)&*>9!2*G2H/;Y=!Nf
%if:iVO0+PJ:E:hX1$FOE=^9F34)o+KX^0c&oS447j6BqN*;[\iJJJ\$9grHo;Z"h>nNE-0%,#28UP24XQC"[hp>QD-rn&]s?D#qT
%#*7#W@oL[FrMM\3[1>E8$X[-@>E>o&Y>62%p^n,+d1fu]PO=.$"k6&bCCq>,g@p+7*L0bgRH@u\?0m"3Kl<%;Tg`'bpKM9JPL&i4
%hIY;g@:Sp8[)Po\aJ(dh%JgejH7P4&"m0ur/a`TSV)OGp$Q'c2nj0Vk$KL?D/=B5[k`EXmqb_D^k?'Plg^"rI`X84(&uB_m^(tsi
%1&/T7;^A?VT&P$XAYBZ&dNLN$\cOqP+RkHr+?JNpVEr/2*(^%"#2@X!H5H`BPj?,-$7es`7ghYd^\O+C"-,bQaGd`%@CmHY_3NtC
%OE?!4L\Ra2j)1VBGu]*um)Y#i+4B*Do&:<72/+C)qBL69G:Qnc^D1uPd,H?aH[oV/Q-J'f$G9RtfMVU[(3nlY3#i[ihM]cs#!B^3
%K*^;X4CmS_TPeM5U\`LLhcJd-RFLKod`+L^p!RnI/;3i!_E6'alP.O=-)P_TWnq&J'\jIJ%'klKZc)b#O<7#lcULD)b#k)/gQ>&q
%l*]M"12N^O$:1I>U93E;%!=LP<bAb)KO7il!gt"F4r(n8MO&P[ph:_Z9<U1,"9pR5d1SPhWL%53EV#?X*XK]8IHL(7Cr;-g^1YNb
%fCQW>63d,U-GnFuXGm]kMSiC-k,/NMgN,%1=/Q0GE)4<<@QWpu#)sA3-1h.J3t*sJ8loEU#C,S2L`]9?pT&f/'[@CC0Xai=Mc]-l
%X-h%fa0CWo>%QMo'(*:hc0LT79`RA_[R8TN;XjtV/dbX]ipW"<#JVI7/[M9EG4KI&3G&Xdl#Y7MCq:V,O9r"kBhoR[-`<$@p4"s;
%X-/DLR*k7WGhFq^C]sE;adc_AV,'6i+BA^CZm`gd]NU%&YD9)*%:ro`J^t"DU+&AKju1-aoM-`chR/gGg;G%-h#/T]+mge-4f9MW
%mBJEqVH'uQC*Du7#qDSu(HF8RXs':!e_SABNg<l4,?D61D<]?;_7\1Kesn^(e(5N_]8a\1-)T<QS_P28571:$!ZN<UHG;F>Ye_s*
%Rc4-O3@l]<nH1O,c`?jM0]ijSR<]W&"a\I-&<UQmj)W%M\re;!W$Pl><m&%E`&h\[(P_fhZ?o>]JScDi*B@!K5a=NSNARgD/ZoKN
%k)Zagg3/Fe3S6n4@q`)c0pqBf(:k>`^>@$,K^n(;;*ET2eLUVIrd]OnaE1eOVr"/F4ZABW;!BMS'=[rp_-^8@:*@!CU>3=1b%c\t
%;/U"/`o6odg@$5qIh5%/D.,6._nK6JWl(]tG&mq&VMViBC-%r_AIu8]M1t0#d<m&EI*8gjdDFt;-?Y15W7dHq9&E2`d!c8s$]DQ!
%[A@'(Vk2CpO"!F/AeU^YWA[[JNq9lc?Gu[pr;m=\kncob]g*WtW>?Ql](!.Q$#`W0CpE;Mp#>Zm3p!nnp/J!(?Z$c>VaR@@pt6*o
%/="T@@[kh-WbWPoHu)*hn5Hq7m?''-&Q1Z7<]@K8CPr!1g#Cc0#.>RWK3t7^S`=;)YU5Es7RD7a]Xh%nfm@jAYHKHU4n&*MU3k?Q
%LqJPpi[ML^rI)pt):cVrlHS%Sd"e+V%*CI!jeblc?8]$BR;YMdG,$O(/MtH]S`B3AFCOb4WR[_+\eXCf`ZDMe<7g3XI?3+!(Y?IR
%@r(T";o^nI/35Ph#"QJ`[u9^c?dM)XqRBb[eF,RZo'ItdS88[:T`oUHDAq%b6]704@M'5q@BWWtb>5!&pWgu<4r0*rBD8B29Cq6(
%I:F(Q"7A@Lrj"nPmQioCCd#32cVNBBnUof5FBN)-*lh;+dP_sb;nc=$qY)YKrL6?ds$2Jth_YKgU>aS-CVn>`@Rs=rLLD:#j_R&p
%%(!*?<:@dg^HG)^d>OZ39Wbk!eNXiao)6YM.Nci&m-lGnbqQm:HG1J;'KsnqbpZ-R16k2i]\0RjAha(J2eM[i'N=sG`5>+=ABd9l
%k`^?AA'2Ve^Q+i6:P-fNH07E.bEn@*#5VDspWr<JY!1#eKith?DFT7V9Sm/[#[1e.6o<'3j/_YfBL0I>$_mu.MQ-@Bq0]VH]upg:
%#N/O%$f6ZOmFp:nQ5ih1Q&mdKAn3Gf%1$i&l)qO"0IEJ=au!F!Ha+[urGLo:i6FqpFl7"ARm.R<,Y$soR@N&8aWfVm8X;mP2(ND8
%4"H0?r\hbUobr,kDUWhmr.,8_C6(#d:$NpN)jF>"dYQiAGd[$49#`Pc,B,o;3RV[naqS!,CC/XX6,,UES#/Sg/YfCQ).E2[W(+.r
%"F'HEUI>Rm>cRTZ\BADtH`pbG7uCm"PQ5*.nu07"a6/XL>51as&`mo;e5r"0d?rZf2GU2SWN\e"#L>^;T/Fg[N0.<BM9Qd-Of?)L
%i2FlI0D8k59HC,%H9pg4,;md#+76%*\o$/uK^Wlm'uGQQJF<^iVW?sJfO@HPPi5qek![I8[;D[gH#$#Rp(Ret2-4^FfUu%A8ZcX+
%HCqI?>O26/!9D562&]T&?*-FR31PA;JcZoXaLq/@DOTEL#^/I98RkcA@,4h=LB.hL.JA^0_u/Yd[2U-+mSeZeUdTT;VpD8&KbI7F
%A&+'cE?\^ngkXTd/g2V1X6AJ8MD!$J8q01`2;B:K-.Bs]2tP"q0'8_P;tS%62?q*$%?XG''@HQI&/s"G19u3b'lm9nAMoB2fmhtf
%s2"0J`oMdfLE]cf&XbuGgBRZJenhKp<&p\S6bVs)h"Yii4K1croE$Q7X9*G9e7>JM:/emdHsQHg<2W&a6=!="T;-*[.$-\JV,AkW
%O:<$:4KDEaVjL1Y/O?bA/dL\h^@?(\dEiG'/nAeul+OboTC,\],2ER*C:alBom<#"Tsg<2b))$l\BK[ZHa55qV9*l%XNscjN4VJn
%k"TEgb[Ok&p%[)KDg_SB]I,[N_21@::;\q$VB'.7ig8n@*cDc"/oqQ4m"K!"bej:/oJE.+2`6\BZ6N0L$\.$9+MUd+EeOOfI&Lp@
%2>p^/@U/FBcNE+uRi.18M(/4'j$DMf*IU,Dm*fF)H>s<9BCBkr>[,s<P&cnN':6dlpXqkBa\0kq`3Ocs6CI72l)obu.9SAZ)V,oR
%6GN32>9-t2o;o#+j5"_cEbCRr0I.kJ^8U5&:A'VBC-Br6TP7a_j]0ic.;8>N9IOe)rFSg7aZ@P3i:EV+?gdI[A<2&<(o4?#&'NjA
%gnj%aN%]5E:rA/2'@aX]Ks)OR9-5Pd@'(LDOfbG^`JB739p!Mna7d%H/[#D5e,4iA]fLUB<=3il`5L<]FpTGmL3BQhW6gbY@r>2V
%[?0sDUORQ)9#%U2g?T\3<CJtLY]BF?C^^0>@5:jTW@#O(L,f^4)MOB0X7CpQ+6_98XMLM"KS:-%:$;\802S\A>\KF=:9.\W/>;B;
%XoY1_2_X;Gi#!l(mo[iO^>@W9akkq_aA%qp`-ftEm&+VLqHNBcYKFh@rR<lnId+`A2`RCuh%41c=+f)P#/E"laIlqE[\F6VYq><,
%IdDj!HFTgl+b#8J+,-)#p6.ms<ga26.oB-;d6=s;]!5,2E5Q=gq<j&6CH41cXH<uIC<@I:Y)Xf_TiGD:dK/K]1(TKJLm-G/edCTg
%r#^f(CXX1!NXh[WG%f"$`I(]E`Oe\9V,_rB$\OU^6G=0Xhm0UUoD;uOrH1oqBiX@9;DK]b9nhe4d-^M%Y+YVGO&\)&D>.3r*)2:a
%7C<7B29IM$ZV,T#CJua7XEQ!@/K3rc;_58LQ/1Y2hO;kMlafhgl]s/A@DHIZTIAC5r8i!Y;]OsSi,5%)GE9J1E`0u+jLR^*JT&!(
%TH>c,d=\thHa;a0CcpNMWQ]E(krr#dRbpJ-k3\Wi_)!7,k't2iBYL1Cp\9-A8%mHTrc4Uf\_cSr\?`+F[@^\X:?445=@GZ0SD2K:
%2cQKOWh^F)_*[t!RI,=o!>OpTiHA^SX`iF6Doj#"c&)(f4Z88M(o22hZtc?p@bqQ<Ph4,-A"A?Xi_"`4eom1002oJEb`6bUkc[=%
%Z\?DWk&+3)cK]/qcSK`.SYAEVei\Ym<#R[9TT)n>T/<Zn)@;:`NK`Q^C:&(G/:k50oZS:TF2^=%O>K0jBNPT,Fn=IR`!UrJq%S2E
%:qY#n\D6!5\c2(3)/3WgSCK^3Vlm/cKC('#N"\9fOVDt4NB8W0/]aVDUKns4'@P+jQ=r'B=g<q<GSpO`KapUm1IsX$!nJj5`%:lu
%7%E8)YO_i\Dub`&B8X'jj31gSh"Y@$?EfHP^UuFpCR]&;NaAJ?#2p7*>MZBNBp?s$*r%At-oA'M<u%XXG12sO:l!Pj>&X"ZD'&Ss
%?ouR_$TW?F$PX]Jp_D_1_gVLuV]##-ENWZ^qU?\c)63$cJl'MP>O$7,c_ikToH7RWr+m6poD;iuh$;\;-7*;FD`nC`%p;t6n15=Y
%pr2K9Hn`OVNi&5L+9EFW-J(Xk[og@j!=H@-CaWp#^lSI3hdor\?jYWu&=[UAC;EG_g+;;Ls0):7/0V^3H<>t&o#?oshGhR>`:$r6
%&496U;'ND.H'C!YiL>EWrsPge+hOqN=6,GFp)^amLoW$mX^V>Ge#::EdVA3'C4B=jM]>>JT?=2n1IAnZ[t-dTcdhstQ[=*DfqWh3
%ZGHQSRJ<<sQ'^(p_)@QMa,*nj)c"_;3ohrS8Wp`VK(8S5_B))dU%Z^t,2g&.!a'lO20Ia*Z+6biJV+;;X2Quh!lF6sNK842:#_&J
%oLNa?Qk(fe+NB:pU:8sq%`J-LhO;qIm&TnNqS\IbJ-bgK"=[jiVSd`ffGk+&d:nNG.?gY&H4##9C[d6RL8uA'!=9&_S]&W[9AWa2
%1H*fhe'EVRiKHf%\d\Lo2fC2')I=s$4/%!:_"Ab@:\KT'LX<FlkBWuklJfDSQ5f.jic-;XD:RmS-tP^^K%a06B%*hs_86uW.d)!8
%WW4B<HgJs:#6oClG`[[$b6gXuVB6:sIA%kq!,V84iXH)fL"Ia#D1:,<Xii=LqXW4%Y$G+MRg-R/JlQlT2^&M7r9C1DIs=1XA%-b;
%hH"$"XWEMS.j,-*(T/^M!_<jprbbCp;QPB>DF=$H3s,Xp;Vuf,_n@bU1q(^;Cr5N'*F1k$m1MW`eq6XI+87r8etnX[YkuS]j+J&4
%6C"$WL$TV2mHL_$Q99?LIr,MA$U]j<U<lM998frbpsu8*S/&<;m!/[YN@78=YJl1NM[?_./'Z3pY@(pUQ'[R+jsWeahX%8s)-u#t
%$L7^35Rbgai2"uQe"?s_a97MHBsJ;5XEl9qT'M('-.\mO%17(0!@:`U\4?4,21pZQR<?]VH'3`2>+h5d"@jW\YMU?&$3,(BH+off
%\(CNRI6QOAhMhlNSMVSP:57?M7=MU<VUBM)c!CZqX+%T4LI>btKOj3M[`CjLV(0F610e7'eb>FH2<a2eL$FI?^/\ZOVB_jk@X3i^
%0)M.VPu[445/Fi.(a3"GWXX!r.%;enrFp(XIsGfr^TbcD>JAU'FkcKj0oBNd&Qj]4![]4J5([dA[].]lX]F]*QklK3B*lR!^nYkP
%_m9O[Cb/(i4n?[^`e?GWF.]oum[o;7C&rS6m@-mB2U`r-3"HL,f=MFNC6-[gHScP'!XFOtkhg#W?!Z(>E`[Zh5#,OMY`cJ\]("'U
%5")EVs#03*8esk&F<9$>JKGNK<c4>7NC`37&pLb0r?AN;k,Oa6^qraSeU:X&S<[+J,I8^GM[-F@$Tk\i>jLldhO;nN9<3peOpKiU
%KVdi,C9/q9;42(1=ons\NN&uC/BOs?Upd"CB0dCJ2"s?*JU*_XA*pLsD;_XtbRG"%fs/%SU.h["VTnFN`AprY_3=E'DP'^KCX-,H
%M:E%+45F0YfD*2K/eaO,?:*8KWe54Wa""I.L4[,)n'asQ:U-:&2EB2sgI8JIX;93P]?JRGGs5D"9A.bXcql&#D-V=lcEZ!Znbp:(
%4bhA&1WPqc>E!$+.[-Jar0OnTFA532,-.VOXk9mXD#XF_/3q;>=GAalL(4af'*<$:!ae$@\.MPq9%MJ-nmd9CJIngX.k1a^<[=Ii
%oQ-&SeZ2IdPQpE(Y5uqud!0tEmdp6jT8#a4m/jnp>'Oai+&"%E=bA*a/?hanZiu=)Bl2#g"G)k6]*O4[C+1I/Ii<9H#@4NU;a<0]
%S>)u.l>_$=:oX\V`N"X]rBXdS\44!1HD1bF2.W_Bp>K[Kbhb]ZiYqg>)cQTe>p]'LPcUdPbd+-VC=ukId;3_CZh5O?b/Gh="u6Jf
%;PK2Ugj;b-M\b9N,3I4MnC4FY+nc0F)5kUDMbdebf:O=C@A&",CgHDtq.u,S+-,K6=5MapmAm9<qcds?YKOun-[`%)LBI.e$gKnr
%lL6XV;PbA5KnYMsf6UY&7;?/l/S6*T6lS2HC@ZD=`9^O%9L[l`a;.=A"+GF\;.JT<//Hsbcuj(2BJdhCo'PU]25^`srJe[7e5t?@
%=o]IZ<5L"]c:XgO(,b-a.\j=a=RL>!<oQuYkXQX3aJ?!CfgQ@fIf%ARo`,!%k%*$o]c$;(p%`^5@("p2TAZBU=,-O9omO&[l_HR$
%c_F*;`r^L\=0;sCWIWH'O$ntGF`Sd\9KPft?!"rqRT6JW:U`lj.BRmT?>%d,)P[C0ML13aA7K^njQ>FY?>UOuNBb5:mWL7=s74a2
%^:h5RfN&HX3(Ogj'iY,O@61!A-IejYkLFEUfHJMBd431lT@uDoIGfJm!daF\cX6_CDZ79:ISfOk=GI+mmB`20h$MZlL2OS1HK!d_
%6To^`WRjqq]IWRFm+9YPVU-Ln*,TSt!0kKE?R(\,CQ-2K&gBj>(8JJPPU=rS'@B5_<l6,cFQY*R_&E3o>8+U3QdZ'dOKu,\-BPD[
%1^e]TK5?FASXlk_E@.u!)eD.Sl&,-$"=2PG7*hl6,F8h`8QUQTr*jP2$Ro'bTYYa[BY3!ZNH`cQ#1.?=ff4U%<I.0=c_l+i'ST.#
%UmT398s-9Yn"Y0k<(]pPXg4mr@?PSJD;aH*JGLchLi=Fq]Eoa\0dN&/.IsH=D-L<=e>OrH]ihT?CQ[fe7gX1?brb;8qXml5"K?&+
%p)m=<F`aY+f+tK?NrJ.B.:#=Y.F>"N?'A^n&3m:HO:9SG?o^I`;$XNb@UtMd50`Z/Z&tue\b2'^4uL.^N"1R%X9MCOW@It_V&-Q8
%-;(,tAI6f6q!,g,GA(""]#/]fN5)F:kAsoYaH@H#JD':5d_;k9lN>p=Y@Z_q<Dt/0(?2t0hN"Qeb`UEmE\l(cCAG0W&q18Z;PQNo
%ENh<YU@0.%`9kI?<f?\8R)Rp\f@fRj8;3(Ph]l>FZ-sA3f4/UclVkha^'!5/EOb[4hT%-_9mI7?fH#Xj-_nE;5;^%-EHTU'*/n:e
%Las=RCMV(8X;M8j"LK<o:9t-sX]p^9Cc@4Ja,hm@%\MI_oX8]B=52$s-e8`H^/p)++lY#m[<l_LSY*K]iQ(Enb:CZcD[C6>#<Y>I
%26Xt$@`]]q?B:"kV?3HqHq/bJ^YCYH"4]h34QV@gNtGUds)t)/:7>gVPb&@,fsPL#Hu3X=M)+K@lF"a=2f57iXs*>?rEKQu]8s;q
%f]d]&4;2?,-EO!!9Ld(pLR-NOlCNjaAHJ`DZ1jTS`\!g3:r*Uc/'oI`k-]mU'SJS)Hjn&+/c/?2>-u=m0!d8M^tA'R3KT;?or'I&
%W9j[kO0-7%:EAWn0q#GNoF!G/,aV5;@jE,13$bh.;LOnb[CU"D=iMt[h)/*W&s9eL,!0P\Y=*PBl`A.>H?fh32f&Q-[4NP+hcYQ@
%]%c:g)\epuNLO:dS_aUj[9XMKU]G>lMM1Z?>eZ-^EHTU#X@/AOLE\5`SW1aZKbWHubhmg[i5EDPfKoTGUUL,2T_>=4s/FPc*\"@p
%EVA`b=ZWi7[_D3m/aST%gHDuWZp&W&j0*mL^*U,-I/Pt#r8$SJG/X)Df@AjjF]b[bF_L:>jJ!,YdEtV9`ZYmp]koJOp5%`o*==0#
%Fomqg3g9UmM`R*p16sY&n$+M180'25.F*o61i;;4U^k)+h^+;B:EO0YAVGI`<p0ZI,Xo3H*KlN`+iWo_U$n^CWf8d%gQjq7)H145
%E\;o5?]QNYZ-ftT/Nbi$CR9EB4IpeHC=f1C\p@13P$:#3f;J6g4nP[)Ib=M4emiLbr7(*RY=gOCc5TtN:pkWd69ob>?\qdQ!,;.h
%US"\5Req4E]aj$cVsB1:rB@&u?:qYu"kXlFSr-mip9Qe!;&3W^0%dtF0n;;V^nU]G:-GF2K*o38\$T>Y).5Ri1(SBUloLn_D3<>&
%R=d%=+5i'9;aT=]b@`Ms?V7VT+(t>^dkhch<5CHV8a+kjFn1Y^0]2mM15\nPoeWuj6X(:h;p>O2/AuIZe-_t7,>W;jmrY(+*:`Jp
%E0UiWkAYW5ZUA:Gp;A(YB$)q2C/F.l2k?2=PXXD)aM\[;Dr*Vc.k!<UQBF0;7Z>%f+a6PSN([q[aGHHIS=+i*KGl\]f)m0REj8/5
%=SbA6EmNJH?<1=+&cqJqAQ_nJ`];p-YpW9u&\'R*0BS99VM+G\SL0rJ(h1u#L^&#k`$BZ/4183lfL*h^Is$4N/+\'80gGY*B)qib
%c2*U//.*7U:U?H(MDAr0FE+@<Dro59F8Y&\kZ-iC\OI-(ER5C04b6IcjVgWrj?s.N?,5ROZGG\i51m5&(.sK1b8n55>&g\k;qQ#d
%G@&p=*HO"&`g#N'fdoT&Rn5mo)DHfR_E@dU88\Y:MW3K[bbmWX3`A1=j_HMAcV5s_[l+"JR'$s?Zb+n/QcAnfZM]tpi.Q_A]@ifl
%?4^W"M&K9#iI`Bk'5E)]HIX%B%iJ+`J+[i-FTZ>g1U!"0V&+Cp>>eM[ekNH5kSI8@//:nt(8T;'f9SkI$odFF/YuN#kNLE*gf_Z8
%?Bf1*]1el?XMBP>6Z'g0`/C*S)Gr^Z<V2<?SHK3'f9>MS]XiBd)=_1+.TW:p*6AAs=e^o^p?e%`kXC['Efsdtf:tq;lX/qA+2dDi
%J2$:;hSE>.;miB4g>.m;JMV"e\_YcOS"Ht&Rp`6<G/R-%0Q/GRR&6d"+Zd7rhPbN1G,K!m-H!2\k:Pu9mppT\W_r02OslkrjrrWP
%nbY;^X%0a&<)6ZI'1J6go=q1I8";P39FfX2JTRq5!qCIQdAG']I2X>5%/n<lZfbLh/MGQ>)UcQ"],^->]%f-GLjG[fE+rdB[L9hG
%PF\G*k(ThP]m*D?i_8j(527]#%8j7_*O=caA9[\uc\SB^,k!IjjI-]V4[7=WVO^gKS$e+e&ff`&P,m')[':;iYB6_"gaS.!\l>Q?
%*[c2\1[oRAA'X`d3luu*O"*"_Y_r3iAfqUI6MV']9FT$e6-Gg#JXRJO@iFI+hFr9PMcs"c[`P_%&R:dU"7C`0?g<:cUr8_F<W(se
%d303]MbmlSL2IB;n3i,i&'kC!*a,,g>*`ZEf2t(T5kpmRnkEcNnrm-<[!6t7%GO*hSD<f,bD=sV"K4Bg(4CC.>T'11Lft+W+Vp2&
%,UVnUk#QX1+kRR0QDH4J"Q`rm)(.oH5f3A_eNHink$F..CtgU%NN!/GP;gAFUsM]WgKahGb=]6K5)sMWVBZ]GR\/<ABTGA\?1hq`
%V0deA5?/B;Y^4e7=8.,Nl`i>Bor6skh]oHX1CGb5(M.dV6AEtOAqh$D]X$e=Ir(N9XR6s0W1J0p&^'HBEL&nsZ?\cI1/IPB8BOuG
%lFFlo,=BO0^eMCtlp^oYnI!g04b#2210>mB@?/=_-*3Q:mci:("&D4_::X\pfu/dm<+/j7cgcV2Wm(]Ao+Ur[/b^h#>)H9N)5*J)
%0aa:DV^<;ePi(Kj(t<1/`XQ-/oVp3SYR<Thc)KEu(G(%J\QaID_JgSgVVbSU',',2bM1#%g%(]ujeXa`Z[%tZW)dAoMMi9)[4,FE
%XuBp]2AgTYY2'p$itbE4FZW2_%Sd^4kYHf2&a%2q>A$>hTs4E/#(ms[o>FWkGo_OA)"9N&X7G%i$S(T\k9e0eH"7_(.up1[>R;71
%@s74IHEW:ghmGEc(]R0_PlrQEaJ/IhNJ0!ECrhD]n-4i*-!*C$-i8SYheiqn(DGIoh4lCthiV>6FUYjF3ma5,I-2Q<'@p3<d*q,+
%oSef:4]a[IXE"fRDEbhee%=lK$q#3PV7:!qQb@oD/:As*0Na_Z0F>FCa[<FND,MD3]muH^J?OF$'*ie3i^jkhfi)lV)i5;"JRDY!
%";us^hfkJVXq\q?5Fu;]</6AeW%N&<0tSj3Y]OSGZTrVr4k9]gNgb34.+O'_pU52CWB#6HYCf7L[1MH$Gs0!eNXq9S_kkkK9?G-H
%SSl6G_/Zscc((kedXA\-1KW2AYU,jg[D.%h:]+a90ZTr$9"1@2g$+3K,rgPnb=H)PWKb!\oSf-=1+GB.WYc!R@Qi5'*PHhA.;lY5
%V0mu69Zc$<XN;)ZTr-<##JJr/@Noq?BoG<b9M`@Ke3)%F?0P5&5WOF;V&4=^Y/[FUF<+-^/:uSqj<+^"#_/'memJ'UJaYPC9+Q\+
%knC)qlaW9^IVH"s,g!dWB6]SA0<,m8o\GML-phrRi7=i$Lk@IsWr,]6<2?1d(on`2%X2mD_%rWeBr,-o'g.s[.P+./bZcZa<3Pm9
%VGeBZj^)FnQfF.'!D[&mHHVcq?9Q)&)WhR4+*Ci7)q>t\boPF(\'@B=:+O#dr!"=ghm_eFp6Rg=m?4F#WoEO0VD/HGK.@k'S2Et`
%m8o2nVKOW"?K>STKe)kr?&SF??>+8Y6!+o_T44hcY/br[lPeEuBO-8RVf(\m+^\VW<0Bng5h)BB^;/6YF3u.ZG6P.g4elr98?X,*
%IFKr+9g:!=&SDE,M7*7SrJe4rg>!o!,8sDj'PX`mm*.gB$(n8KjfWO*pmPWO.Qs@NEXgVc6en9,L1._oHG2C$MD32V#V3)+GkJR!
%#.TW]<EnYZHP3<Bh;&^C,UXp:_+e[$</L:QTp;/^p3S"6)o'/ps%0A^\s#<2@,"s+A(M9SA@V@[(T(3%iPu]TMBf%5Ik2J=qsICp
%Q58%u>FYH;G@0WgNaD[,=*\tanqXZqfQV51pV?p6MtL9h`2nCf"#Qbp-do^FF`0p"V?SBXrrIB]?Z$d-nH6\!WiA#e?h/SYD=NM6
%39pJtA3%1`k;pOrfk5W47OJ*$5#h\&6s#H'i\`DRYk?Wer;+o_NZSAJ\;ir'%NmDVF"V/cUd)6)*Z+PP<71a;[C,"EY!;]RYl+Oh
%T?D``pODuls63>Zhp6e#HC><CoRHi(?[i!hs8&Ynp?/(JqJZDY^\mIps5W9<J,7>q@#k0_hrk"rVtKZ=rr0*NrV=q"rp.>u:UK&V
%on"dS5QCQ*s7k@+s8&Yhgg&/#9DnbO^OGusJ!lr(oIiH/rR9*mn'=5oUOW0EF-Zaq0CuIJ996dal_"4MYQ+N3FuQ%p^\$T:s3olg
%s7hpfkk@=@+91$5i0QY"'.3KI&,c7ds7,]Qjm*rcdm*g.s78JQgOJhp""'u-:]~>
%AI9_PrivateDataEnd
