%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.0
%%For: (U2) ()
%%Title: (91b05271208.eps)
%%CreationDate: 5/27/2010 12:08 PM
%%BoundingBox: 2 1 1198 1199
%%HiResBoundingBox: 2.00049 1.89355 1198 1198.1055
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([\721\756\742\754\745\771\745\755\750\745])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_Cropmarks: 0 0 1200 1200
%AI3_TemplateBox: 600 600 600 600
%AI3_TileBox: 313.8999 191.7197 885.0996 1009.3999
%AI3_DocumentPreview: Header
%AI5_ArtSize: 14400 14400
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -4857.959 3977.5747 0.0833 1169 678 18 1 0 72 84 0 0
%AI5_OpenViewLayers: 73
%%PageOrigin:-6600.5 -6599.5
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\317\345\360\345\365\356\344") (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (\310\355\361\362\360\363\354\345\355\362\340\360\350\351 Adobe \357\356 \360\340\341\356\362\345 \361 \361\350\354\342\356\353\340\354\350) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\322\360\340\361\361\350\360\356\342\352\340) (TracingSuite.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Trail  ver4.2 for Win AICS3) (FILTERiT4 Live Trail ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Tiling  ver4.2 for Win AICS3) (FILTERiT4 Live Tiling ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 DropShadow  ver4.2 for Win AICS3) (FILTERiT4 Live Shadow ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Reflections  ver4.2 for Win AICS3) (FILTERiT4 Live Reflections ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Neon  ver4.2 for Win AICS3) (FILTERiT4 Live Neon ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Generation  ver4.2 for Win AICS3) (FILTERiT4 Live Generation ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Galaxy  ver4.2 for Win AICS3) (FILTERiT4 Live Galaxy ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Frame  ver4.2 for Win AICS3) (FILTERiT4 Live Frame ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Explosion  ver4.2 for Win AICS3) (FILTERiT4 Live Explosion ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Emboss  ver4.2 for Win AICS3) (FILTERiT4 Live Emboss ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Cutout  ver4.2 for Win AICS3) (FILTERiT4 Live Cutout ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Circle  ver4.2 for Win AICS3) (FILTERiT4 Live Circle ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Border  ver4.2 for Win AICS3) (FILTERiT4 Live Border ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\312\340\353\353\350\343\360\340\364\350\367\345\361\352\340\377 \352\350\361\362\374") (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\321\356\361\362\340\342\355\373\345 \364\350\343\363\360\373 Adobe) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe Envelope) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\373\361\362\360\340\377 \347\340\353\350\342\352\340") (Live Paint.aip)
%AI5_End_NonPrinting--
26 Bn
%AI5_BeginGradient: (New Gradient Swatch 106)
(New Gradient Swatch 106) 0 3 Bd
[
<
54535251504F4E4C4B4A4948464544434241403E3D3C3B3A39373635343332312F2E2D2C2A292726
25242322211F1E1D1C1B1A191816151312100F0E0C0B0A090806050403010000
>
<
403F3E3D3C3B3A39383736353433323131302F2E2D2C2B2A29282626252423222120201F201F1E1D
1C1B1A19181716151414131211100F0E0D0C0B0A0A0908070605040302010000
>
<
272625262524242322232221202020201F1E1D1C1D1C1B1A191A1918171616171615151413131211
1011100F0E0D0D0D0D0C0B0A0B0A090807060706050504050403020100010000
>
0
<
B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADCDDDEDF
E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDCDDDEDF
E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
C5C6C7C7C8C9CACBCCCCCDCECFD0D0D1D2D3D4D5D5D6D7D8D9D9DADBDCDDDEDEDFE0E1E2E2E3E4E5
E6E6E7E8E9EAEBEBECEDEEEFEFF0F1F2F3F4F4F5F6F7F8F8F9FAFBFCFDFDFEFF
>
4 %_Br
<
0000010304050608090A0B0C0E0F101213151618191A1B1C1D1E1F21222324252627292A2C2D2E2F
31323334353637393A3B3C3D3E4041424344454648494A4B4C4E4F5051525354
>
<
00000102030405060708090A0A0B0C0D0E0F10111213141415161718191A1B1C1D1E1F201F202021
22232425262628292A2B2C2D2E2F30313132333435363738393A3B3C3D3E3F40
>
<
0000010001020304050405050607060708090A0B0A0B0C0D0D0D0D0E0F1011101112131314151516
1716161718191A191A1B1C1D1C1D1E1F20202020212223222324242526252627
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9
>
<
FFFEFDFDFCFBFAF9F8F8F7F6F5F4F4F3F2F1F0EFEFEEEDECEBEBEAE9E8E7E6E6E5E4E3E2E2E1E0DF
DEDEDDDCDBDAD9D9D8D7D6D5D5D4D3D2D1D0D0CFCECDCCCCCBCAC9C8C7C7C6C5
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 1 1 1 2 50 100 Bs
0.329412 0.25098 0.152941 0 0.717647 0.72549 0.772549 2 50 48.9011 %_BS
%_0.329412 0.25098 0.152941 0 0.717647 0.72549 0.772549 2 50 48.9011 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 121)
(Unnamed gradient 121) 0 7 Bd
[
<
0C0D0F1011121314151718191A1B1C1D1E1F20212223242526272829292A2B2B2C2C2D2E2E2F2F30
313232333334353536363737383839393A3B3B3C3C3D3D3D3E3E3E3E3F3F3F40404041414142
>
<
FCFCFCFCFDFDFDFDFDFDFDFDFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
1
<
0202030304040505060607070809090A0A0B0C0C0D0E0F10111112131415161718191A1C1D1E1F22
2324252728292A2B2C2D2F30313334353738393B3C3E3F404243454647494A4B4D4E50515254
>
<
DCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B4
B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000001
0101010101010101010101010101010101010101010101010101010101010101010101010101
>
<
02020202020202020202020202020202020202020101010101010101010101010101010101010101
0101010101010101010101010101010101010000000000000000000000000000000000000000
>
4 %_Br
<
00000000000000000000000103040607090A0C
>
<
F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFBFCFCFC
>
1
<
00000000000000000001010101010102020202
>
<
EFEEEDECEBEAE9E8E7E6E4E3E2E1E0DFDEDDDC
>
0
<
03030303030303030303020202020202020202
>
4 %_Br
0
<
F2F2F3F4F4F5F6F6F7
>
<
F0F3F4F7F9FEFFFFFF
>
0
<
F8F7F6F5F4F2F1F0EF
>
<
030302020201010000
>
<
080707060605040403
>
4 %_Br
0
<
F0F0F1F1F1F2F2
>
<
E7E9E9EBEDEEF0
>
0
<
FFFEFDFCFAF9F8
>
<
06060505040403
>
<
0C0B0B0A090908
>
4 %_Br
<
0706040301000000000000000000000000000000000000000000000000000000
>
<
FBFBFBFAFAFAFAF9F9F9F8F8F8F7F7F7F6F5F5F4F4F3F3F2F2F1F1F1F1F1F0F0
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFBF8F6F3F1F0EEEDECEAE9E8E7
>
<
0201010101010101000000000000000000000000000000000000000000000000
>
<
DFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
0000000101010101020202020203030303030304040404040505050505060606
>
<
000001010202020303030404050505060607070708080909090A0A0A0B0B0C0C
>
4 %_Br
<
434342424141414040403F3F3F3E3E3E3E3D3D3D3C3C3B3B3A393838373736363635353433333232
31302F2F2E2E2D2C2C2B2A2A29282827262524232221201F1E1D1C1B1A1918161514131211100F0D
0C0A0907
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFBFB
>
1
<
575655545251504E4D4B4A494746454342403F3E3C3B39383735343331302F2E2C2B2A2928272524
23221F1E1D1C1B19181716151414131211100F0E0D0C0C0B0A0A0909080807060605050404030302
02020202
>
<
8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2
B3B4B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDF
>
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010000000000000000000000000000000000000000000000000000000000000000000000000000
00000000
>
0
4 %_Br
[
0.258824 1 1 0.329412 0.556863 0.003922 0 2 50 100 %_BS
%_0.258824 1 1 0.329412 0.556863 0.003922 0 2 50 100 Bs
0.047059 0.988235 1 0.007843 0.862745 0 0.007843 2 50 56.5934 %_BS
%_0.047059 0.988235 1 0.007843 0.862745 0 0.007843 2 50 56.5934 Bs
0 0.968627 1 0 0.937255 0 0.011765 2 50 42.3077 %_BS
%_0 0.968627 1 0 0.937255 0 0.011765 2 50 42.3077 Bs
0 0.94902 0.941176 0 0.972549 0.011765 0.031373 2 50 29.1209 %_BS
%_0 0.94902 0.941176 0 0.972549 0.011765 0.031373 2 50 29.1209 Bs
0 0.941176 0.905882 0 1 0.023529 0.047059 2 50 18.1319 %_BS
%_0 0.941176 0.905882 0 1 0.023529 0.047059 2 50 18.1319 Bs
0.027451 0.984314 1 0.007843 0.87451 0 0 2 50 8.79121 %_BS
%_0.027451 0.984314 1 0.007843 0.87451 0 0 2 50 8.79121 Bs
0.262745 1 1 0.341176 0.545098 0.003922 0 2 50 0 %_BS
%_0.262745 1 1 0.341176 0.545098 0.003922 0 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 136)
(Unnamed gradient 136) 0 2 Bd
[
<
C9CACBCBCBCCCCCCCDCDCECECECFD0D0D0D1D1D1D2D2D2D3D3D4D4D4D5D5D5D6D6D6D7D7D8D8D8D9
DADADADBDB
>
<
929495959696979798999A999A9B9C9D9D9E9E9F9FA0A1A2A2A2A3A4A5A5A6A6A7A7A8A9AAABABAC
ADAEAEAFB0
>
0
0
<
1B1A1A191918171716151514141312121111100F0F0E0E0D0C0C0B0A0A0909080707060605040403
0202010100
>
<
75747373727170706F6E6D6D6C6B6A696968676666656463626261605F5F5E5D5C5C5B5A59585857
5655555453
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2
>
4 %_Br
[
0.858823 0.690196 0 0 0 0.32549 0.823529 2 50 98.9011 %_BS
%_0.858823 0.690196 0 0 0 0.32549 0.823529 2 50 98.9011 Bs
0.788235 0.572549 0 0 0.105882 0.458824 1 2 50 0 %_BS
%_0.788235 0.572549 0 0 0.105882 0.458824 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 137)
(Unnamed gradient 137) 0 3 Bd
[
<
BBBBBBBCBDBDBDBDBEBEBEBFBFC0C0C0C0C1C1C2C2C2C2C2C3C3C3C4C4C4C4C5C5C5C5C5C6C6C7C7
C7C7C7C7C8C8C8C8
>
<
81818180828282828181818383838282828484838383838385858585858484868686858585878787
8787878788888888
>
0
0
<
302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A1917161514131211100F0E0D0C0B0A0908
0706050403020100
>
<
82828282818181818181818080808080807F7F7F7F7F7F7F7E7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C
7C7C7C7C7B7B7B7B
>
<
FFFFFFFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F8F8F8F8F8F8
F7F7F7F7F7F6F6F6
>
4 %_Br
<
909192929394959596969899999A9B9C9C9D9D9E9F9FA0A1A2A2A3A4A5A6A6A7A8A9AAAAABACACAD
AEAFB0B0B1B2B3B3B4B5B5B6B6B7B8B9B9BABABB
>
<
51535354545557565858595B5A5C5D5D5E5E5F6161626263656566666869696A6B6B6D6D6E6F6F70
7072737374747677777879797B7B7C7E7E7F7F81
>
0
0
<
6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4D4C4B4A494847464544
434241403F3E3D3C3B3A39383736353433323130
>
<
A6A5A5A4A4A3A2A2A1A1A09F9F9E9D9D9C9C9B9A9A999998979796969594949392929191908F8F8E
8E8D8C8C8B8B8A89898887878686858484838382
>
1
4 %_Br
[
0.784314 0.533333 0 0 0 0.482353 0.964706 2 50 98.9011 %_BS
%_0.784314 0.533333 0 0 0 0.482353 0.964706 2 50 98.9011 Bs
0.733333 0.505882 0 0 0.188235 0.509804 1 2 50 40.1099 %_BS
%_0.733333 0.505882 0 0 0.188235 0.509804 1 2 50 40.1099 Bs
0.564706 0.317647 0 0 0.423529 0.65098 1 2 50 0 %_BS
%_0.564706 0.317647 0 0 0.423529 0.65098 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 159)
(Unnamed gradient 159) 0 2 Bd
[
<
9C9B9A999897969595949393929190908F8E8D8C8C8B8A898887868584838281807F7E7D7C7B7A79
7877767574737271706F6E6D6C6B6A69
>
<
6F6E6E6C6B6B6A68686766656463636262605E5F5D5C5C5B5959585657565555545353525151504E
4F4E4E4D4C4C4B494A48474746454544
>
0
0
<
68696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081828385868788898A8B8C8D8E8F90
9192939495969798999A9B9C9D9E9FA0
>
<
9091919293939495959697979899999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A8A8A9AA
AAABABACADADAEAFAFB0B1B1B2B3B3B4
>
<
F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEEEEEDED
EDEDEDEDEDECECECECECECECEBEBEBEB
>
4 %_Br
[
0.411765 0.266667 0 0 0.627451 0.705882 0.921569 2 50 98.3146 %_BS
%_0.411765 0.266667 0 0 0.627451 0.705882 0.921569 2 50 98.3146 Bs
0.611765 0.435294 0 0 0.407843 0.564706 0.952941 2 50 0 %_BS
%_0.611765 0.435294 0 0 0.407843 0.564706 0.952941 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 160)
(Unnamed gradient 160) 0 2 Bd
[
<
9C9A9A
>
<
6F6E6E
>
0
0
<
686A6B
>
<
909191
>
0.952941
4 %_Br
[
0.603922 0.431373 0 0 0.419608 0.568627 0.952941 2 50 100 %_BS
%_0.603922 0.431373 0 0 0.419608 0.568627 0.952941 2 50 100 Bs
0.611765 0.435294 0 0 0.407843 0.564706 0.952941 2 50 0 %_BS
%_0.611765 0.435294 0 0 0.407843 0.564706 0.952941 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 161)
(Unnamed gradient 161) 0 2 Bd
[
<
BBBABAB9B8B7B6B5B5B4B3B2B1B0AFAEADACABAAA9A9A8A7A6A5A3A3A2A1A09F9E9E9D9C9A9A9997
9796959493939291
>
<
8E8D8D8B8A8A888787868585838281817F7E7E7D7B7B7A7979787777767475737272706F6E6E6D6B
6B6A686967656664
>
0
0
<
45464748494A4B4C4D4E4F505152535455565758595A5B5C5E5F606162636465666768696A6B6C6D
6E6F707172737475
>
<
7879797A7B7B7C7D7D7E7F7F80818282838484858686878888898A8A8B8C8C8D8E8E8F9091919293
9394959596979798
>
<
F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F3F2
F2F2F2F2F2F1F1F1
>
4 %_Br
[
0.568627 0.392157 0 0 0.458824 0.596078 0.945098 2 50 98.3146 %_BS
%_0.568627 0.392157 0 0 0.458824 0.596078 0.945098 2 50 98.3146 Bs
0.733333 0.556863 0 0 0.270588 0.470588 0.976471 2 50 0 %_BS
%_0.733333 0.556863 0 0 0.270588 0.470588 0.976471 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2)
(Unnamed gradient 2) 0 5 Bd
[
<
97979899999B9B9C9D9D
>
<
7F7F8081818283848485
>
<
7676777878797A7B7B7C
>
<
242627282A2D2E303133
>
<
706F6E6D6C6A69686766
>
<
706F6E6D6C6A69686766
>
<
706F6E6D6C6A69686766
>
4 %_Br
<
5051525354555758595A5C5D5E6061626465666768696A6B6C6D6E6F707172737476777879797B7C
7D7E7F80818182838384858686878889898A8B8C8D8E8F909091929393949495969697
>
<
3D3E3F404142434445464748494A4C4D4D4E4F505152535455565758595A5B5C5D5E5F5F60616364
6566676868696A6B6B6C6D6D6E6F7070717273747475767778797A7A7B7C7C7D7E7E7F
>
<
393A3B3C3D3D3E3F404142434445464748494A4B4C4D4E4E4F50515253545455565758595A5B5C5D
5E5E5F60616162636364656666676868696A6A6B6B6C6D6E6F70717172737374757576
>
<
00000000000000000000000000000000000000000000000000000000000101010101020202030404
0505060607070809090A0A0B0C0D0E0F1010111213151618191A1B1C1D1E2021222324
>
<
BBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969493
9291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727170
>
<
BBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969493
9291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727170
>
<
BBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969493
9291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727170
>
4 %_Br
<
0000010304050607090A0B0C0E0F111214151718191A1B1C1D1F20212223242526282A2B2C2D2E2F
303233343637383A3B3C3D3E4041424344454648494A4B4C4D4E4F50
>
<
0000010203040505060708090A0B0C0D0E0F1011121313141516171819191A1B1C1D1E1F20212223
232425262728292A2B2C2D2E2F303132333435363738393A3A3B3C3D
>
<
0000010203040505060708090A0A0B0C0D0E0F1010111213141515161718191A1B1B1D1E1F202121
22232425262728292A2B2C2D2D2E2F2F303132323334353637373839
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBB
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBB
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBB
>
4 %_Br
<
4F4E4D4C4B4A4948464544434241403E3D3C3B3A383736343332302F2E2D2C2B2A28262524232221
201F1D1C1B1A191817151412110F0E0C0B0A090706050403010000
>
<
3C3B3A3A393837363534333231302F2E2D2C2B2A29282726252423232221201F1E1D1C1B1A191918
1716151413131211100F0E0D0C0B0A090807060505040302010000
>
<
38373736353433323231302F2F2E2D2D2C2B2A29282726252423222121201F1E1D1B1B1A19181716
15151413121110100F0E0D0C0B0A0A090807060505040302010000
>
0
<
BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDEDFE0E1E2E3E4
E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDEDFE0E1E2E3E4
E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDEDFE0E1E2E3E4
E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
[
0.615686 0.521569 0.486274 0.2 0.4 0.4 0.4 2 50 100 %_BS
%_0.615686 0.521569 0.486274 0.2 0.4 0.4 0.4 2 50 100 Bs
0.592157 0.498039 0.462745 0.141176 0.439216 0.439216 0.439216 2 50 81.8681 %_BS
%_0.592157 0.498039 0.462745 0.141176 0.439216 0.439216 0.439216 2 50 81.8681 Bs
0.313725 0.239216 0.223529 0 0.733333 0.733333 0.733333 2 50 69.2308 %_BS
%_0.313725 0.239216 0.223529 0 0.733333 0.733333 0.733333 2 50 69.2308 Bs
0 0 0 0 1 1 1 2 50 21 %_BS
%_0 0 0 0 1 1 1 2 50 21 Bs
0.309804 0.235294 0.219608 0 0.737255 0.737255 0.737255 2 50 0 %_BS
%_0.309804 0.235294 0.219608 0 0.737255 0.737255 0.737255 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 208)
(Unnamed gradient 208) 0 2 Bd
[
<
000000000000000000000000000000000000000002040607090B0C0E0F1113141718191A1B1C1D1E
1F20212223242525262728292A2A2B2C2D2E2E2F303031
>
<
D6D6D7D7D7D7D8D8D8D8D9D9DADBDBDBDBDCDCDCDCDDDDDDDEDEDFDEDFDFDFDFDFDFDFE0E0E0DFE0
E0E0E1E1E1E1E2E2E2E2E2E2E2E3E3E2E2E3E3E3E3E4E4
>
<
F7F8F9FAFBFCFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000101010101020202020303030405050607070808
09090A0B0B0C0D0D0E0F101112131415161718191A1B1C
>
<
F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D7D6D5D4D3D2D1D0
CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9
>
<
434342424242414141414040403F3F3F3F3E3E3E3E3D3D3D3C3C3C3C3B3B3B3B3A3A3A3939393938
3838373737373636363635353534343434333333333232
>
0
4 %_Br
[
0.192157 0.894118 1 0.109804 0.72549 0.196078 0 2 50 98.9011 %_BS
%_0.192157 0.894118 1 0.109804 0.72549 0.196078 0 2 50 98.9011 Bs
0 0.839216 0.968627 0 0.972549 0.262745 0 2 50 0 %_BS
%_0 0.839216 0.968627 0 0.972549 0.262745 0 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 209)
(Unnamed gradient 209) 0 3 Bd
[
<
0000000000000000000000000000000000000000000000000000000103040507080A0B0C0E0F1011
13
>
<
CECFCFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDEDFDFE1E2E3E4E5E6E7E8E8E9EAEBEBECEDEDEEEFEF
F0
>
<
E9EAECEDEEEFF1F2F3F4F5F6F7F8F9FAFCFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FF
>
<
00000000000000000000000000000000000000000000000000000001010101010101020202030303
04
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9
D8
>
<
4D4C4B4A494847464544434241403F3E3D3C3B3A3937363534333231302F2E2D2C2B2A2928272625
24
>
<
0C0C0B0B0B0B0A0A0A09090908080808070707060606050505050404040303030202020201010100
00
>
4 %_Br
0
<
A7A8A8A9AAABABABACADADAEAFAFB0B1B2B2B3B4B4B5B6B7B7B8B9BABABBBBBBBCBEBFBFC0C1C2C2
C2C3C3C4C5C6C6C6C7C7C8C9CACACBCCCDCDCE
>
<
B7B8B9BABBBCBDBEBFBFC1C2C2C3C4C5C6C7C8C9CBCCCDCECFD0D2D3D4D4D6D7D8D9DADBDCDDDDDF
DFE0E1E2E3E4E4E5E5E6E6E7E7E8E7E8E8E9E9
>
0
<
F8F8F8F8F8F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFDFD
FDFDFDFDFDFDFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
77767675747373727170706F6E6E6D6C6B6B6A69696867666665646363626161605F5E5E5D5C5B5B
5A59595857565655545453525151504F4E4E4D
>
<
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2827262524232221201F
1E1D1C1B1A191817161514131211100F0E0D0C
>
4 %_Br
[
0.07451 0.941176 1 0.015686 0.847059 0.141176 0 2 50 98.9011 %_BS
%_0.07451 0.941176 1 0.015686 0.847059 0.141176 0 2 50 98.9011 Bs
0 0.807843 0.913725 0 1 0.301961 0.047059 2 50 40.1099 %_BS
%_0 0.807843 0.913725 0 1 0.301961 0.047059 2 50 40.1099 Bs
0 0.654902 0.717647 0 0.972549 0.466667 0.278431 2 50 0 %_BS
%_0 0.654902 0.717647 0 0.972549 0.466667 0.278431 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 240)
(Unnamed gradient 240) 0 2 Bd
[
<
000000000000000000000000000000000000000000000000000202040406060608090A0A0C0C0C0E
0E10101212121414161618181A1A1A1C1C1D1D1F1F20212223232525
>
<
A6A5A5A4A4A3A3A2A2A0A09F9F9E9E9D9D9C9C9B9A99999898969795959494939291918F8F8E8E8D
8D8B8C8A8A89888787868584848383818180807E7E7D7C7B7A797978
>
<
DCDBDBDAD9D8D8D7D6D6D5D4D3D3D1D0CFCECDCBCAC9C8C7C6C6C5C5C4C3C2C1C0BFBCBBB9B8B7B6
B4B3B2B1AFAEADACABAAA9A8A7A6A4A4A2A2A09F9E9D9C9B99989796
>
0
<
F8F8F7F7F6F6F5F5F5F4F4F3F3F2F2F2F1F1F0F0EFEFEEEEEEEDEDECECEBEBEBEAEAE9E9E8E8E8E7
E7E6E6E5E5E5E4E4E3E3E2E2E1E1E1E0E0DFDFDEDEDEDDDDDCDCDBDB
>
<
767777787879797A7A7B7B7C7C7D7D7E7E7F7F80808181828283838484858586868787888889898A
8A8B8B8C8C8D8D8E8E8F8F9090919192929393949495959696979798
>
<
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494B4C4D4E4F50
5152535455565758595A5B5C5D5E5F606162636465666768696A6B6C
>
4 %_Br
[
0.145098 0.470588 0.588235 0 0.858824 0.596078 0.423529 2 50 98.3146 %_BS
%_0.145098 0.470588 0.588235 0 0.858824 0.596078 0.423529 2 50 98.3146 Bs
0 0.65098 0.862745 0 0.972549 0.462745 0.156863 2 50 0 %_BS
%_0 0.65098 0.862745 0 0.972549 0.462745 0.156863 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 241)
(Unnamed gradient 241) 0 2 Bd
[
0
<
A6A5A3A2A0
>
<
DCDBDBDBDB
>
0
<
F8F8F7F7F6
>
<
7677797A7B
>
<
28292A2A2B
>
4 %_Br
[
0 0.627451 0.858823 0 0.964706 0.482353 0.168627 2 50 100 %_BS
%_0 0.627451 0.858823 0 0.964706 0.482353 0.168627 2 50 100 Bs
0 0.65098 0.862745 0 0.972549 0.462745 0.156863 2 50 0 %_BS
%_0 0.65098 0.862745 0 0.972549 0.462745 0.156863 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 242)
(Unnamed gradient 242) 0 2 Bd
[
0
<
B6B6B5B5B4B4B3B3B1B1B0B0AFAFAEAEADADACACACACABABAAAAA9A8A7A7A6A6A5A5A4A4A3A2A1A1
A0A09F9F9E9E9D9D
>
<
EDEDEDEDECEDECECECECEBEBEBEAE9E9E8E8E7E7E6E6E5E4E4E3E2E2E1E0DFDEDDDDDCDBDAD9D8D7
D7D6D5D4D3D2D1D0
>
0
<
FFFFFEFEFEFDFDFDFCFCFCFBFBFBFBFAFAFAF9F9F9F8F8F8F7F7F7F6F6F6F5F5F5F4F4F4F4F3F3F3
F2F2F2F1F1F1F0F0
>
<
6767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A
7B7B7C7C7D7D7E7E
>
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2122232425262728292A2B2C2D2E2F30
3132333435363738
>
4 %_Br
[
0 0.615686 0.815686 0 0.941176 0.494118 0.219608 2 50 98.3146 %_BS
%_0 0.615686 0.815686 0 0.941176 0.494118 0.219608 2 50 98.3146 Bs
0 0.713725 0.929412 0 1 0.403922 0.031373 2 50 0 %_BS
%_0 0.713725 0.929412 0 1 0.403922 0.031373 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 252)
(Unnamed gradient 252) 1 2 Bd
[
<
12121212121212121212121212121212121212121212121414141414141414151515151517171717
1818181919191A1A1B1B1B1C1D1D1F1F20212122232324252628292A2B2C2D2E2F30323436373A3B
>
<
0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F10101010
111111121212131313131314151516161718181919191A1B1C1D1E1E1F2021222323242627282A2B
>
<
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0F0F0F0F
10101010101011111212121314141515151616171818191A1B1B1C1D1E1F2021212223252627292A
>
0
<
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEEEEEEEEEEEDEDEDED
ECECECEBEBEBEAEAE9E9E9E8E7E7E6E6E5E4E4E3E2E2E1E0DFDEDDDCDBDAD9D8D7D6D5D3D2D1CFCE
>
<
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEEEEEEEEEEEDEDEDED
ECECECEBEBEBEAEAE9E9E9E8E7E7E6E6E5E4E4E3E2E2E1E0DFDEDDDCDBDAD9D8D7D6D5D3D2D1CFCE
>
<
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEEEEEEEEEEEDEDEDED
ECECECEBEBEBEAEAE9E9E9E8E7E7E6E6E5E4E4E3E2E2E1E0DFDEDDDCDBDAD9D8D7D6D5D3D2D1CFCE
>
4 %_Br
[
0.070588 0.05098 0.047059 0 0.941176 0.941176 0.941176 2 81.1111 1.1236 %_BS
%_0.070588 0.05098 0.047059 0 0.941176 0.941176 0.941176 2 81.1111 1.1236 Bs
0.231373 0.168627 0.164706 0 0.807843 0.807843 0.807843 2 50 100 %_BS
%_0.231373 0.168627 0.164706 0 0.807843 0.807843 0.807843 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3)
(Unnamed gradient 3) 0 4 Bd
[
<
1214151718191A1B1C1D1F2021222324252628292A2B2C2D2E2F303233343637383A3B3C3D3E4042
4344454648494A4B4C4D4E4F5051525354555758595A5C5D5E6061626465666768696A6B6C
>
<
0D0E0F1011121313141516171819191A1B1C1D1E1E1F20212223232425262728292A2B2C2D2E2F31
32333435363738393A3A3B3C3D3E3F404142434445464748494A4C4D4D4E4F505152535455
>
<
0C0D0E0F1010111213141515161718191A1B1B1C1D1E1F20212122232425262728292A2B2C2D2D2F
2F3031323233343536373738393A3B3C3D3D3E3F404142434445464748494A4B4C4D4E4E4F
>
0
<
F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
>
<
F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
>
<
F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
>
4 %_Br
<
5E5D5C5A5958575554535251504F4E4D4C4B4A4948464544434241403E3D3C3B383736343332302F
2E2D2C2B2A2928262524232221201F1D1C1B1A191817151412
>
<
494847464544434241403F3E3D3C3B3A3A393837363534333231302F2E2D2C2B2928272625242323
2221201F1E1E1D1C1B1A1919181716151413131211100F0E0D
>
<
44434241403F3E3D3D3C3B3A3938373736353433323231302F2F2E2D2D2C2B2A2827262524232221
21201F1E1D1C1B1B1A1918171615151413121110100F0E0D0C
>
0
<
AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCED0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0
>
<
AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCED0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0
>
<
AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCED0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0
>
4 %_Br
<
1214151718191A1B1C1D1F2021222324252628292A2B2C2D2E2F303233343637383B3C3D3E404142
4344454648494A4B4C4D4E4F5051525354555758595A5C5D5E
>
<
0D0E0F1011121313141516171819191A1B1C1D1E1E1F20212223232425262728292B2C2D2E2F3031
32333435363738393A3A3B3C3D3E3F40414243444546474849
>
<
0C0D0E0F1010111213141515161718191A1B1B1C1D1E1F202121222324252627282A2B2C2D2D2E2F
2F3031323233343536373738393A3B3C3D3D3E3F4041424344
>
0
<
F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
>
<
F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
>
<
F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
>
4 %_Br
[
0.423529 0.333333 0.309804 0 0.639216 0.639216 0.639216 2 50 100 %_BS
%_0.423529 0.333333 0.309804 0 0.639216 0.639216 0.639216 2 50 100 Bs
0.070588 0.05098 0.047059 0 0.941176 0.941176 0.941176 2 50 73.5955 %_BS
%_0.070588 0.05098 0.047059 0 0.941176 0.941176 0.941176 2 50 73.5955 Bs
0.368627 0.286274 0.266667 0 0.686275 0.686275 0.686275 2 50 39.8876 %_BS
%_0.368627 0.286274 0.266667 0 0.686275 0.686275 0.686275 2 50 39.8876 Bs
0.070588 0.05098 0.047059 0 0.941176 0.941176 0.941176 2 50 0 %_BS
%_0.070588 0.05098 0.047059 0 0.941176 0.941176 0.941176 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 351)
(Unnamed gradient 351) 0 2 Bd
[
<
8D8E8E8F8F9091929293939494959596969797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A1A1A2A2
A3A3A4A5A6A6A7A7A8A8A9AAAAABABACADADAEAEAF
>
0
1
0
<
7776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676666656564646363
6262616160605F5F5E5E5D5D5C5C5B5B5A5A595958
>
<
F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3
>
0
4 %_Br
[
0.686274 0 1 0 0.345098 0.701961 0 2 50 98.9011 %_BS
%_0.686274 0 1 0 0.345098 0.701961 0 2 50 98.9011 Bs
0.552941 0 1 0 0.466667 0.941176 0 2 50 0 %_BS
%_0.552941 0 1 0 0.466667 0.941176 0 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 352)
(Unnamed gradient 352) 0 3 Bd
[
<
87878888888889898A8A8A8B8B8B8C8C8C8C8D8E8E8E8F8F8F90909090919191919191
>
0
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFE
>
0
<
8080808080807F7F7F7F7F7F7F7F7F7F7F7F7E7E7E7E7E7E7E7E7E7E7E7D7D7D7D7D7D
>
<
F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1
>
<
0D0D0C0C0B0B0B0A0A0A09090808080707070606050505040403030302020201010000
>
4 %_Br
<
7777787879797979797A7A7B7B7C7C7C7D7D7D7D7E7E7E7E7E7F7F7F7F7F80808080818182828283
83838384848485858585868686868687878787
>
0
<
DEDEE0E0E3E4E5E6E7E8E8EBEBEDEDEEEFF0F1F3F4F5F5F6F7F8F9FAFBFCFDFEFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
0
<
99999898979796969695959494939393929291919090908F8F8E8E8D8D8D8C8C8B8B8A8A89898988
88878786868685858484838383828281818080
>
<
ECECECECEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFF0F0F0F0F0F0F0F1F1F1F1F1F1F1
F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F4F4F4F4
>
<
4847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B29282726252423222120
1F1E1D1C1B1A191817161514131211100F0E0D
>
4 %_Br
[
0.568627 0 0.996078 0 0.490196 0.819608 0 2 50 98.9011 %_BS
%_0.568627 0 0.996078 0 0.490196 0.819608 0 2 50 98.9011 Bs
0.529412 0 1 0 0.501961 0.956863 0.05098 2 50 40.1099 %_BS
%_0.529412 0 1 0 0.501961 0.956863 0.05098 2 50 40.1099 Bs
0.466667 0 0.870588 0 0.6 0.92549 0.282353 2 50 0 %_BS
%_0.466667 0 0.870588 0 0.6 0.92549 0.282353 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 386)
(Unnamed gradient 386) 0 2 Bd
[
<
939392929191919190908F8F8F8F8E8E8D8D8D8D8C8C8C8B8B8B8B8A8A8989888888888787878786
86868585848483838383828282818181
>
0
<
E8E7E6E5E4E3E2E1E0DFDEDDDBDAD9D8D7D6D5D4D3D2D1D0CECDCCCBC9C9C8C7C6C5C4C3C1C0BFBE
BCBBBAB9B8B7B6B5B4B3B2B1B0AEADAC
>
0
<
7777787879797A7A7B7B7C7C7D7D7E7E7F7F80808081818282838384848585868687878888888989
8A8A8B8B8C8C8D8D8E8E8F8F90909191
>
<
D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D3D3D3D3D2D2D2D1D1D1D0D0D0CFCFCFCECECECECDCD
CDCCCCCCCBCBCBCACACACAC9C9C9C8C8
>
<
393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354565758595A5B5C5D5E5F6061
62636465666768696A6B6C6D6E6F7071
>
4 %_Br
[
0.505882 0 0.67451 0 0.568627 0.784314 0.443137 2 50 98.3146 %_BS
%_0.505882 0 0.67451 0 0.568627 0.784314 0.443137 2 50 98.3146 Bs
0.576471 0 0.909804 0 0.466667 0.85098 0.223529 2 50 0 %_BS
%_0.576471 0 0.909804 0 0.466667 0.85098 0.223529 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 387)
(Unnamed gradient 387) 0 2 Bd
[
<
939292
>
0
<
E8E6E6
>
0
0.466667
0.85098
<
393B3C
>
4 %_Br
[
0.572549 0 0.901961 0 0.466667 0.85098 0.235294 2 50 100 %_BS
%_0.572549 0 0.901961 0 0.466667 0.85098 0.235294 2 50 100 Bs
0.576471 0 0.909804 0 0.466667 0.85098 0.223529 2 50 0 %_BS
%_0.576471 0 0.909804 0 0.466667 0.85098 0.223529 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 4)
(Unnamed gradient 4) 0 7 Bd
[
<
000000000000010101020202030303040304040404050505050506070707
>
<
2D2B2B2A2828262525232121201E1E1C1C1B1919171616141212110F0F0D
>
<
E9E9E9E8E8E8E8E8E8E8E8E7E7E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E0E0
>
0
1
<
D1D2D2D3D4D4D5D6D6D7D8D8D9DADADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4
>
<
0405060708090A0B0C0D0E0F1011121415161718191A1B1C1D1E1F202122
>
4 %_Br
<
04030000
>
<
302F2E2D
>
<
ECEBEAE9
>
0
<
FBFCFEFF
>
<
CDCED0D1
>
<
00010304
>
4 %_Br
<
0A08090708060604
>
<
3C3B393834333130
>
<
EFEFEFEEEEEDEDEC
>
0
<
F7F8F8F9F9FAFAFB
>
<
C5C6C7C8CACBCCCD
>
0
4 %_Br
<
0D0C0C0C0A0B0A
>
<
4443423F3E3D3C
>
<
F1F1F0F0F0F0EF
>
0
<
F3F4F4F5F6F6F7
>
<
BEBFC0C2C3C4C5
>
0
4 %_Br
<
0403040405050606050606070608070709090B0A0C0B0B0C0C0D0C0E0D
>
<
1C1E1E202123242628292A2B2D2E2F3234363738393B3D3E3F40424344
>
<
E8E9E9EAEAEAEBEBEBEBEBEBECECECEDEEEEEFEFEFEFEFF0F0F0F0F1F1
>
0
<
FFFFFEFEFDFDFCFCFCFBFBFAFAF9F9F9F8F8F7F7F6F6F6F5F5F4F4F3F3
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCBCAC9C8C7C6C5C4C3C2C1C0BFBE
>
<
0303030303020202020202020202020101010101010101010000000000
>
4 %_Br
<
0505050505050505050504040404040404040404040404040404040404040404
>
<
141414141616161616161717171717171919191919191B1A1A1A1A1A1C1C1C1C
>
<
E0E0E0E1E1E2E2E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E7E7E7E8E8E8E8E8E8
>
0
1
<
E0E0E0E0DFDFDFDFDFDFDEDEDEDEDEDEDDDDDDDDDDDDDCDCDCDCDCDCDBDBDBDB
>
<
232221201F1E1D1C1B1A1918171615141211100F0E0D0C0B0A09080706050403
>
4 %_Br
[
0.027451 0.05098 0.878431 0 1 0.894118 0.133333 2 50 100 %_BS
%_0.027451 0.05098 0.878431 0 1 0.894118 0.133333 2 50 100 Bs
0 0.176471 0.913725 0 1 0.819608 0.015686 2 50 56.5934 %_BS
%_0 0.176471 0.913725 0 1 0.819608 0.015686 2 50 56.5934 Bs
0.015686 0.188235 0.92549 0 0.984314 0.803922 0 2 50 42.3077 %_BS
%_0.015686 0.188235 0.92549 0 0.984314 0.803922 0 2 50 42.3077 Bs
0.039216 0.235294 0.937255 0 0.968627 0.772549 0 2 50 29.1209 %_BS
%_0.039216 0.235294 0.937255 0 0.968627 0.772549 0 2 50 29.1209 Bs
0.05098 0.266667 0.945098 0 0.952941 0.745098 0 2 50 18.1319 %_BS
%_0.05098 0.266667 0.945098 0 0.952941 0.745098 0 2 50 18.1319 Bs
0.015686 0.109804 0.909804 0 1 0.858824 0.011765 2 50 8.79121 %_BS
%_0.015686 0.109804 0.909804 0 1 0.858824 0.011765 2 50 8.79121 Bs
0.019608 0.078431 0.878431 0 1 0.878431 0.137255 2 50 0 %_BS
%_0.019608 0.078431 0.878431 0 1 0.878431 0.137255 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 409)
(Unnamed gradient 409) 0 7 Bd
[
<
000000000102040507080A0B0C0E0F10121314151718191B1C1D1E2021222324252728292A2B2C2D
2E2F2F303131323233343435363637373839393A3B3B3C3C3D3E3E3F4040414142
>
<
BABABBBBBBBBBBBCBCBCBDBDBDBEBEBFBFBFBFBFBFC0C0C1C0C0C1C0C0C1C1C2C2C1C2C2C2C2C2C3
C2C2C3C3C2C3C3C4C3C3C4C3C3C4C4C5C4C4C5C4C4C5C4C5C5C5C5C5C4C6C5C6C6
>
1
<
0000000000000000000101010101010102020203030304040505050606070809090A0B0C0C0E0F0F
101112131415161718191A1B1C1D1E1F2022232425262728292B2C2D2E2F313234
>
<
EDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C7C6C5
C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4
>
<
61616060605F5F5E5E5E5D5D5D5C5C5B5B5B5A5A5A59595858585757575656555555545454535352
525251515150504F4F4F4E4E4E4D4D4C4C4C4B4B4B4A4A49494948484847474646
>
0
4 %_Br
0
<
B5B5B6B6B6B7B7B7B8B8B9B9B9BAB9B9BABA
>
<
F0F1F2F3F4F5F5F6F7FAFBFCFDFEFFFFFFFF
>
0
<
FFFEFDFCFBFAF9F8F7F5F4F3F2F1F0EFEEED
>
<
676766666665656564646363636262626161
>
0
4 %_Br
0
<
B1B1B2B2B3B3B4B4B5B5B5B5
>
<
ECECECEDEDEDEEEEEFEFF0F0
>
0
1
<
6C6C6B6B6A6A696968686767
>
<
0C0B0A090807050403020100
>
4 %_Br
0
<
ABACACADADAEB0B0B1
>
<
E7E8E8E9E9EAEBEBEC
>
0
1
<
7170706F6F6E6D6D6C
>
<
15141312110F0E0D0C
>
4 %_Br
0
<
B7B6B6B5B4B5B4B3B3B2B1B1B0B0AFAEAEADACACAB
>
<
FEFDFBFBF9F8F7F6F5F4F2F1F0EFEEEDECEBE9E9E7
>
0
<
F0F1F2F2F3F4F5F5F6F7F8F8F9FAFBFBFCFDFEFEFF
>
<
6465656667676869696A6B6B6C6C6D6E6E6F707071
>
<
000102030405060708090A0C0D0E0F101112131415
>
4 %_Br
<
43434242414140403F3E3E3D3C3C3B3A3A393838373736363534343332323131302F2F2E2D2C2C2A
2928272524232221201E1D1C1B1A181716141312110F0E0C0B0908070504020100000000000000
>
<
C7C8C7C7C6C7C7C6C6C5C6C5C5C6C5C5C4C5C5C4C5C4C4C4C3C4C3C3C4C3C3C2C3C2C2C2C2C2C1C2
C2C1C1C0C1C1C0C0BFC0BFBFBFBEBFBEBEBEBDBEBDBDBDBCBCBBBBBBBABBBABAB9B9B9B8B8B7B7
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE
>
<
383635343231302E2D2C2B2928272625242322201F1E1D1C1B1A191817161514131211100F0F0E0C
0C0B0A090808070606050505040403030302020201010101010101000000000000000000000000
>
<
A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C9
CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0
>
<
44444545464646474748484949494A4A4B4B4B4C4C4D4D4D4E4E4F4F4F5050515152525253535454
545555565656575758585959595A5A5B5B5B5C5C5D5D5D5E5E5F5F5F6060616162626263636464
>
0
4 %_Br
[
0.258824 0.776471 1 0.203922 0.643137 0.27451 0 2 50 100 %_BS
%_0.258824 0.776471 1 0.203922 0.643137 0.27451 0 2 50 100 Bs
0 0.729412 1 0 0.929412 0.380392 0 2 50 56.5934 %_BS
%_0 0.729412 1 0 0.929412 0.380392 0 2 50 56.5934 Bs
0 0.709804 0.941176 0 1 0.403922 0 2 50 42.3077 %_BS
%_0 0.709804 0.941176 0 1 0.403922 0 2 50 42.3077 Bs
0 0.694118 0.92549 0 1 0.423529 0.047059 2 50 29.1209 %_BS
%_0 0.694118 0.92549 0 1 0.423529 0.047059 2 50 29.1209 Bs
0 0.670588 0.905882 0 1 0.443137 0.082353 2 50 18.1319 %_BS
%_0 0.670588 0.905882 0 1 0.443137 0.082353 2 50 18.1319 Bs
0 0.717647 0.996078 0 0.941176 0.392157 0 2 50 8.79121 %_BS
%_0 0.717647 0.996078 0 0.941176 0.392157 0 2 50 8.79121 Bs
0.262745 0.780392 1 0.219608 0.631373 0.266667 0 2 50 0 %_BS
%_0.262745 0.780392 1 0.219608 0.631373 0.266667 0 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 410)
(Unnamed gradient 410) 0 2 Bd
[
<
0B0C0D0F11121314151718191A1C1D1E1F202122232425262728282A2A2B2C2E2F2F303132333334
353536373838393A3A3B3C3C3D3D3E3E3E3F404040
>
<
8586878888898A8B8C8D8D8E8E8F9091929293939494959697979898999A9B9B9C9D9C9D9E9F9FA0
A1A2A2A2A3A4A5A6A7A7A8A9A9AAABACADACADAEAE
>
<
FBFCFCFCFDFDFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
000000000000000000010101010101010202030303040405050606070708090A0B0B0C0D0D0E0F10
111112131414161718191A1B1C1D1E202122232425
>
<
EBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCBCAC9C8C7C6C5C4C3
C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAE
>
<
8E8D8C8B8B8A89888786858484838281807F7E7E7D7C7B7A7978777776757473727171706F6E6D6C
6B6A6A69686766656464636261605F5E5D5D5C5B5A
>
0
4 %_Br
[
0.25098 0.682353 1 0.145098 0.682353 0.352941 0 2 50 62.6374 %_BS
%_0.25098 0.682353 1 0.145098 0.682353 0.352941 0 2 50 62.6374 Bs
0.043137 0.521569 0.984314 0 0.921569 0.556863 0 2 50 0 %_BS
%_0.043137 0.521569 0.984314 0 0.921569 0.556863 0 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 414)
(Unnamed gradient 414) 0 2 Bd
[
<
BEBDBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B5B4B4
>
0
1
0
0
<
C5C6C7C8C9CACBCCCDCECFD0D2D3D4D5D6D7D8D9DADBDCDD
>
<
060606060606060606060606070707070707070707070707
>
4 %_Br
[
0.705882 0 1 0 0 0.866667 0.027451 2 50 98.3146 %_BS
%_0.705882 0 1 0 0 0.866667 0.027451 2 50 98.3146 Bs
0.745098 0 1 0 0 0.772549 0.023529 2 50 0 %_BS
%_0.745098 0 1 0 0 0.772549 0.023529 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 5)
(Unnamed gradient 5) 0 2 Bd
[
<
33312F2E2C2A28272523211E1C1A18161412100E0C0B
>
<
40424446484B4D4F5254565A5C5E60626466686A6C6E
>
0.968627
0
<
D8D9DADBDCDDDEDFE0E1E2E4E5E6E7E8E9EAEBECEDEE
>
<
B6B5B4B3B2B1B0AFAEADACAAA9A8A7A6A5A4A3A2A1A0
>
0
4 %_Br
[
0.043137 0.431373 0.968627 0 0.933333 0.627451 0 2 50 62.6374 %_BS
%_0.043137 0.431373 0.968627 0 0.933333 0.627451 0 2 50 62.6374 Bs
0.2 0.25098 0.968627 0 0.847059 0.713726 0 2 50 0 %_BS
%_0.2 0.25098 0.968627 0 0.847059 0.713726 0 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 66)
(Unnamed gradient 66) 0 2 Bd
[
<
292A2A2B2C2C2D2E2E2F2F30303132323333343435363737383839393A3A3B3B3C3C3C3D3D3D3E3E
3F3F
>
<
F0F0F1F1F2F2F3F3F4F4F5F5F5F6F6F7F6F7F7F7F7F8F7F8F8F8F8F9FAFAFBFBFCFDFDFEFEFFFFFF
FFFF
>
1
<
131415161718191A1B1C1D1E1F20212324252627292B2C2E2F30313334353738393A3C3D3E404142
4445
>
<
C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A
9998
>
<
2423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110
100F
>
0
4 %_Br
[
0.247059 1 1 0.270588 0.596078 0.058824 0 2 50 62.6374 %_BS
%_0.247059 1 1 0.270588 0.596078 0.058824 0 2 50 62.6374 Bs
0.160784 0.941176 1 0.07451 0.760784 0.141176 0 2 50 0 %_BS
%_0.160784 0.941176 1 0.07451 0.760784 0.141176 0 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 7)
(Unnamed gradient 7) 0 2 Bd
[
<
3F4040404141414242434343444445454646464747474848494A4A4B4B4C4C4C4D4D4D4E4E4E4F4F
505151525353545454
>
<
F3F3F4F4F4F5F5F4F5F5F5F6F6F6F7F7F7F9F9F9FAF9F9FAF9F8F9F8F8F9F9F9FAFAFAFCFDFCFDFC
FBFBFAFAFAFAFAFBFB
>
1
<
414244454648494B4C4E4F505253555657595A5B5D5E5F6062646667696A6C6D6F70727374767779
7B7C7E808183848687
>
<
9B9A999897969594939291908F8E8D8C8B8A8988878685848381807F7E7D7C7B7A79787776757473
7271706F6E6D6C6B6A
>
<
20201F1F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1A1919191818181717171616161515151414141313
131212121111111010
>
<
04040404040404040404040405050505050505050505050505050505050505050505050506060606
060606060606060606
>
4 %_Br
[
0.329412 0.984314 1 0.529412 0.415686 0.062745 0.023529 2 50 62.6374 %_BS
%_0.329412 0.984314 1 0.529412 0.415686 0.062745 0.023529 2 50 62.6374 Bs
0.247059 0.952941 1 0.254902 0.607843 0.12549 0.015686 2 50 0 %_BS
%_0.247059 0.952941 1 0.254902 0.607843 0.12549 0.015686 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\721\756\742\754\745\771\745\755\750\745]) 0 Xs
([\721\756\742\754\745\771\745\755\750\745])
Pc
0 0 0 0 1 1 1 Xa
(\701\745\753\773\751)
Pc
Bb
2 (New Gradient Swatch 106) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 106)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 0 1 0 0 1 6 79 255 255 0 50 Lb
(M1 Studio - Guides) Ln
1 A
0 A
0 J 0 j 1 w 4 M []0 d0 XR
0 8791.5 m
0 -7591.5 L
(N) *
1200 8791.5 m
1200 -7591.5 L
(N) *
-7591.5 0 m
8791.5 0 L
(N) *
-7591.5 1200 m
8791.5 1200 L
(N) *
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 2 79 255 79 0 50 Lb
(M1 Studio - Scene) Ln
0 A
u
1 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
723.0459 863.2842 m
723.0459 811.8154 703.4111 760.3481 664.1426 721.0791 c
624.875 681.8105 573.4058 662.1763 521.937 662.1763 C
171.001 662.1763 L
171.001 900.2012 L
171.001 970.6221 197.8662 1041.0439 251.5952 1094.7729 c
305.3262 1148.5029 375.7476 1175.3682 446.1685 1175.3682 C
723.0459 1175.3682 L
723.0459 863.2842 L
Bb
1 (Unnamed gradient 2) 447.0229 1425.0747 -90 845.7067 1 0 0 1 0 0 Bg
-0.000037 -845.7067 -556.0449 0.000024 725.0459 1425.0747 Xm
-0.000341 -7791.8169 -556.0449 0.000024 725.0459 9216.8916 Bc
-0.000008 -177.5984 -556.0449 0.000024 725.0459 1425.0747 Bm
-0.000018 -407.8911 -556.0449 0.000024 725.0459 1247.4761 Bm
-0.000005 -106.8745 -556.0449 0.000024 725.0459 839.5854 Bm
-0.000007 -153.3427 -556.0449 0.000024 725.0459 732.7109 Bm
-0.000341 -7791.8169 -556.0449 0.000024 725.0459 579.3682 Bc
f
0 BB
0 Ap
521.937 678.0137 m
186.8374 678.0137 L
186.8374 900.2002 L
186.8374 969.4688 213.8135 1034.5928 262.7939 1083.5771 c
311.7754 1132.5566 376.9019 1159.5313 446.1685 1159.5313 C
707.208 1159.5313 L
707.208 863.2842 L
707.208 813.7949 687.9355 767.2695 652.9443 732.2788 c
617.9521 697.2856 571.4268 678.0137 521.937 678.0137 C
521.937 678.0137 L
Bb
1 (Unnamed gradient 352) 447.0225 1109.6538 -90 665.2281 1 0 0 1 0 0 Bg
-0.000029 -665.2281 -524.3706 0.000023 709.208 1109.6538 Xm
-0.000354 -8091.3999 -524.3706 0.000023 709.208 9201.0537 Bc
-0.000012 -266.8223 -524.3706 0.000023 709.208 1109.6538 Bm
-0.000017 -391.0956 -524.3706 0.000023 709.208 842.8315 Bm
-0.000354 -8091.3999 -524.3706 0.000023 709.208 451.7363 Bc
f
0 BB
541.126 793.8838 m
511.085 752.5527 479.3154 713.8799 446.2935 678.0137 C
521.937 678.0137 L
571.4268 678.0137 617.9521 697.2856 652.9443 732.2788 c
687.9355 767.2695 707.208 813.7949 707.208 863.2842 C
707.208 1106.751 L
670.6094 1002.4087 615.0879 895.6558 541.126 793.8838 c
Bb
1 (Unnamed gradient 351) 576.751 722.4248 90 592.3108 1 0 0 1 0 0 Bg
-0.000026 592.3108 264.9146 0.000012 444.2935 722.4248 Xm
-0.000359 8215.6621 264.9146 0.000012 444.2939 -7493.2373 Bc
-0.000026 585.8019 264.9146 0.000012 444.2935 722.4248 Bm
-0.000359 8215.6621 264.9146 0.000012 444.2935 1308.2266 Bc
f
0 BB
u
430.6855 1175.3672 m
560.6792 1175.3691 l
565.9883 1183.127 568.0063 1190.9365 565.7588 1197.873 C
554.8501 1197.873 543.9248 1197.916 533.0103 1197.8345 c
514.4229 1197.6924 495.8159 1198.2451 477.2432 1198.0254 c
468.3779 1197.9229 459.4829 1199.2104 451.5679 1194.3008 c
443.689 1189.4185 436.1787 1182.8506 430.6855 1175.3672 C
Bb
1 (Unnamed gradient 410) 9162.377 -7465.5996 -90 22.7383 1 0 0 1 -8663.7012 -8663.7041 Bg
-0.000001 -22.7383 -141.3208 0.000006 570.0063 1198.1045 Xm
-0.000733 -16757.9824 -141.3208 0.000006 570.0073 17956.0859 Bc
-0.000001 -14.2427 -141.3208 0.000006 570.0063 1198.1045 Bm
-0.000733 -16757.9824 -141.3208 0.000006 570.0063 1183.8618 Bc
f
0 BB
/BBAccumRotation (3.141593) XT
797.25 1194.291 m
801.6035 1191.2139 805.5371 1187.8364 809.5059 1184.0596 C
650.1348 1043.6133 L
518.1489 1175.6011 L
518.1182 1175.6011 L
518.0835 1175.6484 518.0435 1175.6934 518.0078 1175.7393 C
513.2505 1180.4976 508.6621 1185.5391 503.6494 1190.0239 c
498.9448 1194.2305 492.2964 1198.1045 485.7773 1198.1045 C
495.644 1198.1045 L
535.5684 1198.1045 L
785.2051 1198.1045 L
789.4473 1197.8311 793.54 1196.9116 797.25 1194.291 c
Bb
1 (Unnamed gradient 409) -3420.4131 5266.1582 180 154.491 0 -1 -1 0 11764.4834 11764.4824 Bg
-0.000014 -154.491 327.7285 -0.000029 483.7769 1198.1045 Xm
-0.000365 -4174.0869 327.7285 -0.000029 483.7773 5372.1914 Bc
-0.000001 -13.5816 327.7285 -0.000029 483.7769 1198.1045 Bm
-0.000001 -14.4305 327.7285 -0.000029 483.7769 1184.5229 Bm
-0.000001 -16.977 327.7285 -0.000029 483.7769 1170.0923 Bm
-0.000002 -20.3724 327.7285 -0.000029 483.7769 1153.1152 Bm
-0.000002 -22.0701 327.7285 -0.000029 483.7769 1132.7427 Bm
-0.000006 -67.0593 327.7285 -0.000029 483.7769 1110.6729 Bm
-0.000365 -4174.0869 327.7285 -0.000029 483.7769 1043.6133 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
u
*u
0 0 0 0 1 1 1 Xa
596.6416 1161.8999 m
606.8584 1161.8999 L
620.1885 1142.314 L
620.1885 1161.8999 L
630.502 1161.8999 L
630.502 1126.4961 L
620.1885 1126.4961 L
606.9287 1145.9375 L
606.9287 1126.4961 L
596.6416 1126.4961 l
596.6416 1161.8999 L
f
*U
*u
637.7441 1161.8999 m
667.0615 1161.8999 L
667.0615 1154.3389 L
648.7119 1154.3389 L
648.7119 1148.7139 L
665.7373 1148.7139 L
665.7373 1141.4937 L
648.7119 1141.4937 L
648.7119 1134.5156 L
667.5947 1134.5156 L
667.5947 1126.4961 L
637.7441 1126.4961 l
637.7441 1161.8999 L
f
*U
*u
669.8398 1161.8999 m
680.2324 1161.8999 L
683.9727 1142.0811 L
689.4473 1161.8999 L
699.8018 1161.8999 L
705.293 1142.104 L
709.0352 1161.8999 L
719.375 1161.8999 L
711.5713 1126.4961 L
700.8428 1126.4961 L
694.6299 1148.7891 L
688.4453 1126.4961 L
677.7188 1126.4961 l
669.8398 1161.8999 L
f
*U
U
U
186.8374 826.6606 m
186.8374 678.0137 L
521.937 678.0137 L
571.4268 678.0137 617.9521 697.2856 652.9443 732.2788 c
679.1406 758.4731 696.5225 791.1328 703.6094 826.6606 C
186.8374 826.6606 L
Bb
1 (New Gradient Swatch 106) 445.2236 522.3555 90 304.0726 1 0 0 1 0 0 Bg
-0.000013 304.0726 520.772 0.000023 184.8374 522.3555 Xm
-0.000345 7884.0659 520.772 0.000023 184.8379 -7361.71 Bc
-0.000006 148.6949 520.772 0.000023 184.8374 522.3555 Bm
-0.000007 155.3778 520.772 0.000023 184.8374 671.0503 Bm
-0.000345 7884.0659 520.772 0.000023 184.8374 826.4282 Bc
f
0 BB
u
543.5688 711.9434 m
281.3398 711.9434 L
259.0679 711.9434 240.9473 730.0674 240.9473 752.3418 c
240.9473 774.6118 259.0679 792.7295 281.3398 792.7295 C
543.5688 792.7295 L
565.8433 792.7295 583.9653 774.6118 583.9653 752.3418 c
583.9653 730.0674 565.8433 711.9434 543.5688 711.9434 C
543.5688 711.9434 L
Bb
1 (Unnamed gradient 3) 412.4565 798.6133 -90 80.7861 1 0 0 1 0 0 Bg
-0.000004 -80.7861 -347.0181 0.000015 585.9653 798.6133 Xm
-0.00035 -8001.0728 -347.0181 0.000015 585.9658 8799.6865 Bc
-0.000001 -32.2237 -347.0181 0.000015 585.9653 798.6133 Bm
-0.000001 -27.2313 -347.0181 0.000015 585.9653 766.3896 Bm
-0.000001 -21.3312 -347.0181 0.000015 585.9653 739.1582 Bm
-0.00035 -8001.0728 -347.0181 0.000015 585.9653 717.8271 Bc
f
0 BB
543.5688 787.1875 m
281.3408 787.1875 L
262.0933 787.1875 246.4897 771.5879 246.4897 752.3418 c
246.4897 733.0898 262.0933 717.4878 281.3408 717.4878 C
543.5688 717.4878 L
562.8169 717.4878 578.4199 733.0898 578.4199 752.3418 c
578.4199 771.5879 562.8169 787.1875 543.5688 787.1875 C
Bb
1 (Unnamed gradient 414) 412.4546 717.4878 90 69.6997 1 0 0 1 0 0 Bg
-0.000003 69.6997 335.9302 0.000015 244.4897 717.4878 Xm
-0.00035 8006.9546 335.9302 0.000015 244.4902 -7289.4668 Bc
-0.000003 68.525 335.9302 0.000015 244.4897 717.4878 Bm
-0.00035 8006.9546 335.9302 0.000015 244.4897 786.0127 Bc
f
0 BB
578.3867 753.8145 m
577.6152 772.3799 562.3247 787.1875 543.5688 787.1875 C
281.3408 787.1875 L
262.5903 787.1875 247.2983 772.3799 246.5249 753.8145 C
578.3867 753.8145 L
Bb
1 (Unnamed gradient 414) 412.4556 787.1875 -90 33.373 1 0 0 1 0 0 Bg
-0.000001 -33.373 -335.8618 0.000015 580.3867 787.1875 Xm
-0.00035 -8006.9556 -335.8618 0.000015 580.3872 8794.1426 Bc
-0.000001 -32.8106 -335.8618 0.000015 580.3867 787.1875 Bm
-0.00035 -8006.9556 -335.8618 0.000015 580.3867 754.377 Bc
f
0 BB
1 Ap
572.563 752.6021 m
572.563 736.9883 559.9077 724.3301 544.2944 724.3301 c
528.6836 724.3301 516.0303 736.9883 516.0303 752.6021 c
516.0303 768.2134 528.6836 780.8706 544.2944 780.8706 c
559.9077 780.8706 572.563 768.2134 572.563 752.6021 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 252) 543.3081 755.3076 0 28.77 0.982563 0 0 0.982562 142.8389 142.8391 Bg
28.2683 0 0 -28.2683 544.2964 752.5996 Bm
f
0 BB
0 Ap
0.070588 0.05098 0.047059 0 0.941176 0.941176 0.941176 Xa
553.6143 762.6655 m
551.4321 762.6655 548.8369 762.6982 544.4937 762.6982 c
537.9824 762.6982 537.1123 762.6655 535.0039 762.6406 c
531.9951 762.6406 530.5957 763.6104 530.6431 765.314 C
531.4961 770.5547 535.979 774.7285 541.71 775.7124 c
542.5518 775.8525 543.416 775.9214 544.3008 775.9214 c
545.1904 775.9214 546.0576 775.8457 546.8994 775.7095 c
552.6001 774.7285 557.0635 770.5884 557.9482 765.3887 C
558.0078 763.8994 556.4854 762.6655 553.6143 762.6655 c
f
540.1934 762.6426 m
540.1934 762.5762 540.1855 761.5459 540.1855 760.6396 C
533.1807 760.6284 L
532.3223 760.6284 L
530.1055 760.6284 528.3047 758.459 528.3047 755.7847 C
528.3047 749.4141 L
528.3047 746.7466 530.1055 744.5713 532.3223 744.5713 C
533.1895 744.5781 L
540.1855 744.5908 L
540.1855 743.6655 540.1934 742.6226 540.1934 742.5586 c
540.1934 740.5386 541.2217 739.124 542.6919 739.124 c
543.2476 739.124 543.8203 739.3286 544.3901 739.7261 C
558.6899 749.6753 L
559.7188 750.395 560.2896 751.4321 560.2896 752.6021 c
560.2896 753.7666 559.7188 754.8057 558.6899 755.5215 C
544.3901 765.4761 L
543.8203 765.875 543.2466 766.0757 542.6919 766.0757 c
541.2217 766.0757 540.1934 764.667 540.1934 762.6426 c
Bb
1 (Unnamed gradient 387) 528.3047 752.5996 0 31.9849 1 0 0 1 0 0 Bg
31.9849 0 0 -30.9517 528.3047 768.0757 Xm
8122.8047 0 0 -30.9517 -7594.5 768.0757 Bc
31.9849 0 0 -30.9517 528.3047 768.0757 Bm
8122.8047 0 0 -30.9517 560.2896 768.0757 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
*u
1 D
0 g
544.2944 781.1357 m
528.417 781.1357 515.4985 768.2192 515.4985 752.3418 c
515.4985 736.4585 528.417 723.5396 544.2944 723.5396 c
560.1753 723.5396 573.0938 736.4585 573.0938 752.3418 c
573.0938 768.2192 560.1753 781.1357 544.2944 781.1357 c
f
0 D
544.2944 727.6982 m
530.686 727.6982 519.6543 738.729 519.6543 752.3418 c
519.6543 765.9473 530.686 776.9824 544.2944 776.9824 c
557.9063 776.9824 568.938 765.9473 568.938 752.3418 c
568.938 738.729 557.9063 727.6982 544.2944 727.6982 c
Bb
1 (Unnamed gradient 386) 544.2964 723.5396 90 57.5962 1 0 0 1 0 0 Bg
-0.000003 57.5962 61.5952 0.000003 513.4985 723.5396 Xm
-0.000356 8138.7964 61.5952 0.000003 513.499 -7415.2568 Bc
-0.000002 56.6255 61.5952 0.000003 513.4985 723.5396 Bm
-0.000356 8138.7964 61.5952 0.000003 513.4985 780.165 Bc
f
0 BB
*U
u
*u
0 0 0 0 1 1 1 Xa
298.0874 762.8477 m
306.6284 762.8477 L
309.9272 750.061 L
313.1914 762.8477 L
321.7305 762.8477 L
321.7305 741.833 L
316.4106 741.833 L
316.4106 757.8574 L
312.3115 741.833 L
307.4985 741.833 L
303.4063 757.8574 L
303.4063 741.833 L
298.0874 741.833 l
298.0874 762.8477 L
f
*U
*u
325.0591 752.3267 m
325.0591 755.7568 326.0146 758.4282 327.9233 760.3403 c
329.8364 762.251 332.4966 763.2085 335.9111 763.2085 c
339.4077 763.2085 342.1016 762.269 343.9976 760.3906 c
345.8916 758.5098 346.8364 755.8804 346.8364 752.498 c
346.8364 750.041 346.4238 748.0249 345.5977 746.4541 c
344.7686 744.8774 343.5752 743.6563 342.0112 742.7813 c
340.4507 741.9087 338.502 741.4712 336.1714 741.4712 c
333.7974 741.4712 331.8345 741.8481 330.2847 742.6016 c
328.7295 743.3594 327.4683 744.5513 326.5068 746.1885 c
325.5396 747.8213 325.0591 749.8672 325.0591 752.3267 c
f
1 D
331.5503 752.2969 m
331.5503 750.1753 331.9458 748.6514 332.7363 747.7227 c
333.5249 746.7959 334.5947 746.333 335.9546 746.333 c
337.3516 746.333 338.4312 746.7861 339.1948 747.6948 c
339.9614 748.6025 340.3408 750.231 340.3408 752.5864 c
340.3408 754.561 339.9434 756.0044 339.144 756.9189 c
338.3457 757.834 337.2661 758.29 335.896 758.29 c
334.5889 758.29 333.5386 757.8267 332.7441 756.8984 c
331.9458 755.9717 331.5503 754.4395 331.5503 752.2969 c
f
*U
*u
0 D
350.4204 741.833 m
350.4204 762.8477 L
361.2461 762.8477 L
363.2554 762.8477 364.7866 762.6729 365.8506 762.3315 c
366.9131 761.9883 367.7671 761.3525 368.4175 760.4199 c
369.0645 759.4854 369.3906 758.3535 369.3906 757.0137 c
369.3906 755.8452 369.1431 754.8413 368.645 753.9922 c
368.147 753.1479 367.4658 752.4639 366.5923 751.937 c
366.0386 751.6011 365.2798 751.3286 364.3135 751.106 c
365.085 750.8477 365.6514 750.5898 366.0005 750.3296 c
366.2422 750.1597 366.5869 749.7866 367.0396 749.228 c
367.4946 748.6592 367.7993 748.2285 367.9512 747.9204 c
371.0947 741.833 L
363.7607 741.833 L
360.2856 748.2559 L
359.8477 749.085 359.4556 749.6245 359.1099 749.874 c
358.6416 750.1982 358.1133 750.3604 357.519 750.3604 c
356.9482 750.3604 L
356.9482 741.833 l
350.4204 741.833 L
f
1 D
356.9482 754.3291 m
359.6812 754.3291 L
359.9756 754.3291 360.5532 754.4268 361.4053 754.6167 c
361.835 754.707 362.1865 754.9258 362.459 755.2759 c
362.7295 755.6348 362.8638 756.0371 362.8638 756.4976 c
362.8638 757.1768 362.6509 757.6978 362.2207 758.0576 c
361.791 758.4233 360.9868 758.6035 359.7988 758.6035 c
356.9482 758.6035 l
356.9482 754.3291 L
f
*U
*u
0 D
373.1597 762.8477 m
390.5664 762.8477 L
390.5664 758.3628 L
379.6729 758.3628 L
379.6729 755.022 L
389.7778 755.022 L
389.7778 750.731 L
379.6729 750.731 L
379.6729 746.5913 L
390.8838 746.5913 L
390.8838 741.833 L
373.1597 741.833 l
373.1597 762.8477 L
f
*U
*u
404.4326 762.8477 m
410.9419 762.8477 L
410.9419 741.833 L
404.4326 741.833 l
404.4326 762.8477 L
f
*U
*u
415.6445 762.8477 m
421.7119 762.8477 L
429.626 751.2251 L
429.626 762.8477 L
435.7451 762.8477 L
435.7451 741.833 L
429.626 741.833 L
421.7559 753.3726 L
421.7559 741.833 L
415.6445 741.833 l
415.6445 762.8477 L
f
*U
*u
440.0908 762.8477 m
456.1523 762.8477 L
456.1523 758.333 L
446.6138 758.333 L
446.6138 754.665 L
454.7622 754.665 L
454.7622 750.4209 L
446.6138 750.4209 L
446.6138 741.833 L
440.0908 741.833 l
440.0908 762.8477 L
f
*U
*u
458.8325 752.3267 m
458.8325 755.7568 459.7861 758.4282 461.6997 760.3403 c
463.6147 762.251 466.2715 763.2085 469.6865 763.2085 c
473.186 763.2085 475.8804 762.269 477.7734 760.3906 c
479.665 758.5098 480.6079 755.8804 480.6079 752.498 c
480.6079 750.041 480.1973 748.0249 479.373 746.4541 c
478.5439 744.8774 477.3496 743.6563 475.7891 742.7813 c
474.2251 741.9087 472.2754 741.4712 469.9448 741.4712 c
467.5718 741.4712 465.6123 741.8481 464.0581 742.6016 c
462.5054 743.3594 461.2437 744.5513 460.2803 746.1885 c
459.313 747.8213 458.8325 749.8672 458.8325 752.3267 c
f
1 D
465.3286 752.2969 m
465.3286 750.1753 465.7236 748.6514 466.5127 747.7227 c
467.2974 746.7959 468.3701 746.333 469.73 746.333 c
471.125 746.333 472.2075 746.7861 472.9702 747.6948 c
473.7358 748.6025 474.1187 750.231 474.1187 752.5864 c
474.1187 754.561 473.7168 756.0044 472.9204 756.9189 c
472.1221 757.834 471.0376 758.29 469.6743 758.29 c
468.3623 758.29 467.311 757.8267 466.519 756.8984 c
465.7236 755.9717 465.3286 754.4395 465.3286 752.2969 c
f
*U
U
U
U
u
1 Ap
0 D
554.0449 203.002 m
554.0449 151.5332 534.4102 100.0654 495.1421 60.7969 c
455.874 21.5283 404.4048 1.89355 352.9365 1.89355 C
2.00049 1.89355 L
2.00049 239.9189 L
2.00049 310.3398 28.8652 380.7617 82.5942 434.4912 c
136.3257 488.2207 206.7466 515.0859 277.168 515.0859 C
554.0449 515.0859 L
554.0449 203.002 L
Bb
1 (Unnamed gradient 2) 278.0229 764.792 -90 845.7075 1 0 0 1 0 0 Bg
-0.000037 -845.7075 -556.0444 0.000024 556.0449 764.792 Xm
-0.000333 -7622.8164 -556.0444 0.000024 556.0454 8387.6084 Bc
-0.000008 -177.5986 -556.0444 0.000024 556.0449 764.792 Bm
-0.000018 -407.8914 -556.0444 0.000024 556.0449 587.1934 Bm
-0.000005 -106.8746 -556.0444 0.000024 556.0449 179.3018 Bm
-0.000007 -153.3429 -556.0444 0.000024 556.0449 72.4277 Bm
-0.000333 -7622.8164 -556.0444 0.000024 556.0449 -80.915 Bc
f
0 BB
0 Ap
352.9365 17.7314 m
17.8364 17.7314 L
17.8364 239.918 L
17.8364 309.1865 44.813 374.3105 93.793 423.2949 c
142.7744 472.2744 207.9009 499.249 277.168 499.249 C
538.207 499.249 L
538.207 203.002 L
538.207 153.5127 518.9346 106.9863 483.9434 71.9961 c
448.9512 37.0029 402.4263 17.7314 352.9365 17.7314 C
352.9365 17.7314 L
Bb
1 (Unnamed gradient 209) 278.022 449.3711 -90 665.2281 1 0 0 1 0 0 Bg
-0.000029 -665.2281 -524.3706 0.000023 540.207 449.3711 Xm
-0.000346 -7922.4004 -524.3706 0.000023 540.2075 8371.7715 Bc
-0.000012 -266.8223 -524.3706 0.000023 540.207 449.3711 Bm
-0.000017 -391.0956 -524.3706 0.000023 540.207 182.5488 Bm
-0.000346 -7922.4004 -524.3706 0.000023 540.207 -208.5469 Bc
f
0 BB
372.125 133.6016 m
342.084 92.2705 310.3149 53.5977 277.2925 17.7314 C
352.9365 17.7314 L
402.4263 17.7314 448.9512 37.0029 483.9434 71.9961 c
518.9346 106.9863 538.207 153.5127 538.207 203.002 C
538.207 446.4688 L
501.6084 342.126 446.0869 235.373 372.125 133.6016 c
Bb
1 (Unnamed gradient 208) 407.7495 62.1426 90 592.3108 1 0 0 1 0 0 Bg
-0.000026 592.3108 264.9146 0.000012 275.2925 62.1426 Xm
-0.000352 8046.6611 264.9146 0.000012 275.293 -7984.5195 Bc
-0.000026 585.8019 264.9146 0.000012 275.2925 62.1426 Bm
-0.000352 8046.6611 264.9146 0.000012 275.2925 647.9443 Bc
f
0 BB
17.8364 166.3779 m
17.8364 17.7314 L
352.9365 17.7314 L
402.4263 17.7314 448.9512 37.0029 483.9434 71.9961 c
510.1396 98.1904 527.5215 130.8506 534.6089 166.3779 C
17.8364 166.3779 L
Bb
1 (New Gradient Swatch 106) 276.2227 -137.9258 90 304.0716 1 0 0 1 0 0 Bg
-0.000013 304.0716 520.7725 0.000023 15.8364 -137.9258 Xm
-0.000337 7715.0659 520.7725 0.000023 15.8369 -7852.9922 Bc
-0.000006 148.6944 520.7725 0.000023 15.8364 -137.9258 Bm
-0.000007 155.3773 520.7725 0.000023 15.8364 10.7686 Bm
-0.000337 7715.0659 520.7725 0.000023 15.8364 166.1455 Bc
f
0 BB
u
374.5679 51.6611 m
112.3389 51.6611 L
90.0674 51.6611 71.9463 69.7852 71.9463 92.0596 c
71.9463 114.3291 90.0674 132.4473 112.3389 132.4473 C
374.5679 132.4473 L
396.8428 132.4473 414.9644 114.3291 414.9644 92.0596 c
414.9644 69.7852 396.8428 51.6611 374.5679 51.6611 C
374.5679 51.6611 L
Bb
1 (Unnamed gradient 3) 243.4556 138.3311 -90 80.7861 1 0 0 1 0 0 Bg
-0.000004 -80.7861 -347.0181 0.000015 416.9644 138.3311 Xm
-0.000342 -7832.0723 -347.0181 0.000015 416.9648 7970.4033 Bc
-0.000001 -32.2237 -347.0181 0.000015 416.9644 138.3311 Bm
-0.000001 -27.2313 -347.0181 0.000015 416.9644 106.1074 Bm
-0.000001 -21.3312 -347.0181 0.000015 416.9644 78.876 Bm
-0.000342 -7832.0723 -347.0181 0.000015 416.9644 57.5449 Bc
f
0 BB
374.5679 126.9053 m
112.3398 126.9053 L
93.0928 126.9053 77.4888 111.3057 77.4888 92.0596 c
77.4888 72.8076 93.0928 57.2051 112.3398 57.2051 C
374.5679 57.2051 L
393.8164 57.2051 409.4194 72.8076 409.4194 92.0596 c
409.4194 111.3057 393.8164 126.9053 374.5679 126.9053 C
Bb
1 (Unnamed gradient 242) 243.4541 57.2051 90 69.7002 1 0 0 1 0 0 Bg
-0.000003 69.7002 335.9307 0.000015 75.4888 57.2051 Xm
-0.000343 7837.9546 335.9307 0.000015 75.4893 -7780.75 Bc
-0.000003 68.5255 335.9307 0.000015 75.4888 57.2051 Bm
-0.000343 7837.9546 335.9307 0.000015 75.4888 125.7305 Bc
f
0 BB
409.3857 93.5322 m
408.6143 112.0977 393.3242 126.9053 374.5679 126.9053 C
112.3398 126.9053 L
93.5898 126.9053 78.2979 112.0977 77.5244 93.5322 C
409.3857 93.5322 L
Bb
1 (Unnamed gradient 242) 243.4551 126.9053 -90 33.373 1 0 0 1 0 0 Bg
-0.000001 -33.373 -335.8613 0.000015 411.3857 126.9053 Xm
-0.000343 -7837.9556 -335.8613 0.000015 411.3862 7964.8608 Bc
-0.000001 -32.8106 -335.8613 0.000015 411.3857 126.9053 Bm
-0.000343 -7837.9556 -335.8613 0.000015 411.3857 94.0947 Bc
f
0 BB
1 Ap
403.5625 92.3193 m
403.5625 76.7061 390.9072 64.0479 375.2935 64.0479 c
359.6826 64.0479 347.0293 76.7061 347.0293 92.3193 c
347.0293 107.9307 359.6826 120.5879 375.2935 120.5879 c
390.9072 120.5879 403.5625 107.9307 403.5625 92.3193 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 252) 371.3086 83.3066 0 28.7698 0.982563 0 0 0.982562 142.8389 142.8391 Bg
28.2681 0 0 -28.2681 375.2964 92.3164 Bm
f
0 BB
0 Ap
0.070588 0.05098 0.047059 0 0.941176 0.941176 0.941176 Xa
384.6133 102.3828 m
382.4316 102.3828 379.8359 102.416 375.4932 102.416 c
368.9814 102.416 368.1113 102.3828 366.0034 102.3584 c
362.9941 102.3584 361.5952 103.3281 361.6421 105.0313 C
362.4951 110.2725 366.978 114.4463 372.7095 115.4297 c
373.5508 115.5703 374.4155 115.6387 375.3003 115.6387 c
376.1895 115.6387 377.0571 115.5635 377.8984 115.4268 c
383.5991 114.4463 388.063 110.3057 388.9478 105.1064 C
389.0073 103.6172 387.4844 102.3828 384.6133 102.3828 c
f
371.1924 102.3604 m
371.1924 102.2939 371.1846 101.2637 371.1846 100.3574 C
364.1802 100.3457 L
363.3213 100.3457 L
361.105 100.3457 359.3037 98.1768 359.3037 95.502 C
359.3037 89.1318 L
359.3037 86.4639 361.105 84.2891 363.3213 84.2891 C
364.189 84.2959 L
371.1846 84.3086 L
371.1846 83.3828 371.1924 82.3398 371.1924 82.2764 c
371.1924 80.2559 372.2212 78.8418 373.6909 78.8418 c
374.2466 78.8418 374.8193 79.0459 375.3896 79.4434 C
389.6895 89.3926 L
390.7178 90.1123 391.2891 91.1494 391.2891 92.3193 c
391.2891 93.4844 390.7178 94.5234 389.6895 95.2393 C
375.3896 105.1934 L
374.8193 105.5928 374.2456 105.793 373.6909 105.793 c
372.2212 105.793 371.1924 104.3848 371.1924 102.3604 c
Bb
1 (Unnamed gradient 241) 359.3037 92.3174 0 31.9854 1 0 0 1 0 0 Bg
31.9854 0 0 -30.9512 359.3037 107.793 Xm
7953.8037 0 0 -30.9512 -7594.5 107.793 Bc
31.9854 0 0 -30.9512 359.3037 107.793 Bm
7953.8037 0 0 -30.9512 391.2891 107.793 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
*u
1 D
0 g
375.2935 120.8535 m
359.416 120.8535 346.498 107.9365 346.498 92.0596 c
346.498 76.1758 359.416 63.2568 375.2935 63.2568 c
391.1748 63.2568 404.0928 76.1758 404.0928 92.0596 c
404.0928 107.9365 391.1748 120.8535 375.2935 120.8535 c
f
0 D
375.2935 67.416 m
361.6855 67.416 350.6538 78.4463 350.6538 92.0596 c
350.6538 105.665 361.6855 116.7002 375.2935 116.7002 c
388.9053 116.7002 399.937 105.665 399.937 92.0596 c
399.937 78.4463 388.9053 67.416 375.2935 67.416 c
Bb
1 (Unnamed gradient 240) 375.2954 63.2568 90 57.5967 1 0 0 1 0 0 Bg
-0.000003 57.5967 61.5947 0.000003 344.498 63.2568 Xm
-0.000348 7969.7954 61.5947 0.000003 344.4985 -7906.5391 Bc
-0.000002 56.6259 61.5947 0.000003 344.498 63.2568 Bm
-0.000348 7969.7954 61.5947 0.000003 344.498 119.8828 Bc
f
0 BB
*U
u
*u
0 0 0 0 1 1 1 Xa
129.0869 102.5654 m
137.6274 102.5654 L
140.9263 89.7783 L
144.1909 102.5654 L
152.7295 102.5654 L
152.7295 81.5508 L
147.4102 81.5508 L
147.4102 97.5752 L
143.311 81.5508 L
138.498 81.5508 L
134.4053 97.5752 L
134.4053 81.5508 L
129.0869 81.5508 l
129.0869 102.5654 L
f
*U
*u
156.0581 92.0439 m
156.0581 95.4746 157.0142 98.1455 158.9224 100.0576 c
160.8359 101.9688 163.4956 102.9258 166.9106 102.9258 c
170.4072 102.9258 173.1006 101.9863 174.9966 100.1084 c
176.8906 98.2275 177.8359 95.5977 177.8359 92.2158 c
177.8359 89.7588 177.4233 87.7422 176.5972 86.1719 c
175.7681 84.5947 174.5742 83.374 173.0103 82.499 c
171.4502 81.626 169.5015 81.1885 167.1704 81.1885 c
164.7969 81.1885 162.8335 81.5654 161.2837 82.3193 c
159.7285 83.0771 158.4678 84.2686 157.5063 85.9063 c
156.5391 87.5391 156.0581 89.585 156.0581 92.0439 c
f
1 D
162.5493 92.0146 m
162.5493 89.8926 162.9448 88.3691 163.7354 87.4404 c
164.5244 86.5137 165.5942 86.0508 166.9536 86.0508 c
168.3511 86.0508 169.4302 86.5039 170.1943 87.4121 c
170.9609 88.3203 171.3398 89.9482 171.3398 92.3037 c
171.3398 94.2783 170.9424 95.7217 170.1431 96.6367 c
169.3447 97.5518 168.2656 98.0078 166.895 98.0078 c
165.5884 98.0078 164.5376 97.5439 163.7432 96.6162 c
162.9448 95.6895 162.5493 94.1572 162.5493 92.0146 c
f
*U
*u
0 D
181.4199 81.5508 m
181.4199 102.5654 L
192.2451 102.5654 L
194.2544 102.5654 195.7856 102.3906 196.8501 102.0488 c
197.9121 101.7051 198.7661 101.0703 199.4165 100.1377 c
200.0635 99.2031 200.3896 98.0713 200.3896 96.7314 c
200.3896 95.5625 200.1421 94.5586 199.644 93.71 c
199.146 92.8652 198.4648 92.1816 197.5918 91.6543 c
197.0381 91.3184 196.2793 91.0459 195.313 90.8232 c
196.0845 90.5654 196.6504 90.3076 196.9995 90.0469 c
197.2412 89.877 197.5859 89.5039 198.0391 88.9453 c
198.4937 88.377 198.7988 87.9463 198.9502 87.6377 c
202.0938 81.5508 L
194.7603 81.5508 L
191.2847 87.9736 L
190.8472 88.8027 190.4546 89.3418 190.1094 89.5918 c
189.6411 89.916 189.1123 90.0781 188.5186 90.0781 c
187.9473 90.0781 L
187.9473 81.5508 l
181.4199 81.5508 L
f
1 D
187.9473 94.0469 m
190.6802 94.0469 L
190.9746 94.0469 191.5522 94.1445 192.4043 94.334 c
192.8345 94.4248 193.1855 94.6436 193.458 94.9932 c
193.7285 95.3525 193.8628 95.7549 193.8628 96.2148 c
193.8628 96.8945 193.6499 97.415 193.2202 97.7754 c
192.79 98.1406 191.9863 98.3213 190.7983 98.3213 c
187.9473 98.3213 l
187.9473 94.0469 L
f
*U
*u
0 D
204.1587 102.5654 m
221.5654 102.5654 L
221.5654 98.0801 L
210.6719 98.0801 L
210.6719 94.7393 L
220.7769 94.7393 L
220.7769 90.4482 L
210.6719 90.4482 L
210.6719 86.3086 L
221.8833 86.3086 L
221.8833 81.5508 L
204.1587 81.5508 l
204.1587 102.5654 L
f
*U
*u
235.4316 102.5654 m
241.9414 102.5654 L
241.9414 81.5508 L
235.4316 81.5508 l
235.4316 102.5654 L
f
*U
*u
246.644 102.5654 m
252.7109 102.5654 L
260.6255 90.9424 L
260.6255 102.5654 L
266.7441 102.5654 L
266.7441 81.5508 L
260.6255 81.5508 L
252.7554 93.0898 L
252.7554 81.5508 L
246.644 81.5508 l
246.644 102.5654 L
f
*U
*u
271.0898 102.5654 m
287.1519 102.5654 L
287.1519 98.0508 L
277.6128 98.0508 L
277.6128 94.3828 L
285.7612 94.3828 L
285.7612 90.1387 L
277.6128 90.1387 L
277.6128 81.5508 L
271.0898 81.5508 l
271.0898 102.5654 L
f
*U
*u
289.8315 92.0439 m
289.8315 95.4746 290.7856 98.1455 292.6987 100.0576 c
294.6138 101.9688 297.271 102.9258 300.686 102.9258 c
304.1855 102.9258 306.8799 101.9863 308.7729 100.1084 c
310.6641 98.2275 311.6074 95.5977 311.6074 92.2158 c
311.6074 89.7588 311.1968 87.7422 310.3726 86.1719 c
309.5435 84.5947 308.3486 83.374 306.7886 82.499 c
305.2246 81.626 303.2749 81.1885 300.9438 81.1885 c
298.5713 81.1885 296.6118 81.5654 295.0571 82.3193 c
293.5049 83.0771 292.2432 84.2686 291.2798 85.9063 c
290.3125 87.5391 289.8315 89.585 289.8315 92.0439 c
f
1 D
296.3276 92.0146 m
296.3276 89.8926 296.7231 88.3691 297.5117 87.4404 c
298.2969 86.5137 299.3696 86.0508 300.729 86.0508 c
302.124 86.0508 303.2065 86.5039 303.9692 87.4121 c
304.7354 88.3203 305.1182 89.9482 305.1182 92.3037 c
305.1182 94.2783 304.7158 95.7217 303.9194 96.6367 c
303.1211 97.5518 302.0371 98.0078 300.6733 98.0078 c
299.3618 98.0078 298.3101 97.5439 297.5186 96.6162 c
296.7231 95.6895 296.3276 94.1572 296.3276 92.0146 c
f
*U
U
U
u
550.7617 390.8486 m
542.1274 401.8613 529.769 408.1016 517.6094 414.4189 c
501.6509 422.7109 487.3267 430.8105 475.5112 444.8643 c
464.8257 457.5713 458.7422 472.9551 451.1216 487.5254 C
451.0869 487.4561 L
441.417 505.7734 422.1812 518.2578 400.0234 518.2578 c
399.9746 518.2578 399.9248 518.2559 399.876 518.2559 C
399.876 518.2979 L
335.9258 518.2979 L
334.5518 518.2979 L
338.0923 518.1172 341.1982 517.4912 344.4351 516.2617 c
352.541 513.1777 358.5229 503.4941 362.9365 496.5273 c
368.3042 488.0537 371.6089 477.2793 375.1436 467.9121 c
386.3701 438.1904 395.5493 412.0381 416.9585 387.8701 c
436.0752 366.2842 463.5781 347.6602 495.2754 336.8076 c
499.0869 335.502 502.9038 334.2207 506.7075 332.8965 c
510.208 331.6797 513.7007 330.4404 517.1699 329.1348 c
528.9121 324.7061 541.1758 319.5039 550.8662 311.3389 c
556.377 306.6934 560.2842 301.1094 562.3989 294.1621 c
562.6558 293.3096 562.8188 292.3594 562.9209 291.3652 C
562.9409 305.0459 563.0078 354.3213 563.0078 355.2725 c
563.0078 368.1162 558.6621 380.7607 550.7617 390.8486 c
Bb
1 (Unnamed gradient 121) 281.3667 -9786.5 0 226.9326 0 1 -1 0 26618.2793 400.3347 Bg
0.00001 -226.9326 -232.4561 -0.00001 565.0078 518.2979 Xm
0.000344 -7875.8667 -232.4561 -0.00001 565.0073 8394.1641 Bc
0.000001 -19.9501 -232.4561 -0.00001 565.0078 518.2979 Bm
0.000001 -21.1971 -232.4561 -0.00001 565.0078 498.3477 Bm
0.000001 -24.9376 -232.4561 -0.00001 565.0078 477.1504 Bm
0.000001 -29.9252 -232.4561 -0.00001 565.0078 452.2129 Bm
0.000001 -32.4189 -232.4561 -0.00001 565.0078 422.2881 Bm
0.000004 -98.5037 -232.4561 -0.00001 565.0078 389.8691 Bm
0.000344 -7875.8667 -232.4561 -0.00001 565.0078 291.3652 Bc
f
0 BB
/BBAccumRotation (4.712389) XT
0 D
318.5459 508.6133 m
322.7783 511.999 328.4941 513.6758 333.8857 513.335 c
336.3613 513.1777 339.1431 512.709 341.4697 511.8232 c
349.5762 508.7383 354.8398 499.915 359.252 492.9463 c
364.6216 484.4727 368.8369 475.4971 372.6895 466.2568 c
384.8984 436.9678 397.0146 406.7803 419.1152 383.2432 c
438.8989 362.1719 465.1357 345.5684 491.6245 334.585 c
499.9658 331.1289 508.5591 328.3428 516.9502 325.0254 c
525.2339 321.7539 533.6665 318.1357 540.9165 312.8965 c
549.4219 306.7451 558.3018 298.6416 558.3018 287.3506 c
558.3018 282.4248 556.7222 277.8711 554.0449 274.1611 C
554.0449 266.3975 L
554.8896 267.2314 555.6875 268.1221 556.4287 269.0586 c
559.8164 273.334 562.291 278.4189 562.8096 283.8916 c
562.8564 284.3633 562.8994 284.8584 562.936 285.376 c
563.1387 288.2285 563.1675 291.6328 562.3989 294.1621 c
560.2842 301.1094 556.377 306.6934 550.8662 311.3389 c
541.1758 319.5039 528.9121 324.7061 517.1699 329.1348 c
513.7007 330.4404 510.208 331.6797 506.7075 332.8965 c
502.9038 334.2207 499.0869 335.502 495.2754 336.8076 c
463.5781 347.6602 436.0752 366.2842 416.9585 387.8701 c
395.5493 412.0381 386.3701 438.1904 375.1436 467.9121 c
371.6089 477.2793 368.3042 488.0537 362.9365 496.5273 c
358.5229 503.4941 352.541 513.1777 344.4351 516.2617 c
341.1982 517.4912 338.0923 518.1172 334.5518 518.2979 c
326.7632 518.6914 319.0166 516.0332 313.0742 511.0186 c
312.1919 510.2744 311.3569 509.4678 310.5747 508.6133 C
318.5459 508.6133 L
Bb
1 (Unnamed gradient 7) 281.3286 -9798.4629 0 251.9385 0 1 -1 0 26618.2793 400.3347 Bg
0.000011 -251.9385 -256.5928 -0.000011 565.1675 518.3359 Xm
0.000344 -7876.1831 -256.5928 -0.000011 565.167 8394.5195 Bc
0.000007 -157.8077 -256.5928 -0.000011 565.1675 518.3359 Bm
0.000344 -7876.1831 -256.5928 -0.000011 565.1675 360.5283 Bc
f
0 BB
/BBAccumRotation (4.712389) XT
554.0449 274.1611 m
556.7222 277.8711 558.3018 282.4248 558.3018 287.3506 c
558.3018 292.25 556.6279 296.5449 554.0449 300.3438 C
554.0449 274.1611 L
Bb
1 (Unnamed gradient 66) 499.3208 -9679.1055 0 26.1826 0 1 -1 0 26618.2793 400.3347 Bg
0.000001 -26.1826 -8.25684 0 560.3018 300.3438 Xm
0.000354 -8093.8203 -8.25684 0 560.3013 8394.1641 Bc
0.000001 -16.4001 -8.25684 0 560.3018 300.3438 Bm
0.000354 -8093.8203 -8.25684 0 560.3018 283.9434 Bc
f
0 BB
/BBAccumRotation (4.712389) XT
346.9604 508.6133 m
345.2813 509.9551 343.4639 511.0645 341.4697 511.8232 c
339.1431 512.709 336.3613 513.1777 333.8857 513.335 c
328.4941 513.6758 322.7783 511.999 318.5459 508.6133 C
346.9604 508.6133 L
Bb
1 (Unnamed gradient 66) 288.668 -9888.3184 -90 28.416 0 1 -1 0 26618.2793 400.3347 Bg
-28.416 0 0 9.0625 346.9614 506.6133 Xm
-7883.167 0 0 9.0625 8230.1279 506.6133 Bc
-17.7991 0 0 9.0625 346.9614 506.6133 Bm
-7883.167 0 0 9.0625 329.1626 506.6133 Bc
f
0 BB
/BBAccumRotation (4.712389) XT
u
*u
0 0 0 0 1 1 1 Xa
407.5376 483.0615 m
410.585 475.6465 L
409.4106 475.0664 408.5845 474.4121 408.1123 473.6904 c
407.3486 472.5146 407.2246 471.165 407.7412 469.6455 c
408.126 468.5059 408.6909 467.7207 409.4346 467.2871 c
410.1763 466.8545 410.8979 466.7539 411.6006 466.9922 c
412.269 467.2188 412.7651 467.7148 413.0952 468.4805 c
413.4233 469.2461 413.4629 470.7715 413.2026 473.0645 c
412.8057 476.8242 413.0039 479.6689 413.7998 481.5986 c
414.5923 483.54 415.9941 484.8525 418.0107 485.5371 c
419.334 485.9863 420.7158 486.0273 422.1533 485.6602 c
423.5908 485.292 424.9092 484.4512 426.1064 483.1387 c
427.3042 481.8281 428.3574 479.8301 429.269 477.1455 c
430.3862 473.8516 430.624 471.1328 429.9888 468.9902 c
429.3496 466.8457 427.7495 465.1553 425.1895 463.9199 c
422.2031 471.2764 L
423.2949 471.8701 423.9976 472.5762 424.3086 473.3936 c
424.6172 474.2129 424.583 475.1826 424.2036 476.3086 c
423.8862 477.2334 423.4526 477.8652 422.9019 478.1992 c
422.3501 478.5342 421.7935 478.6055 421.2319 478.416 c
420.8232 478.2773 420.5161 477.959 420.3213 477.46 c
420.1074 476.9707 420.0942 475.9727 420.2783 474.4658 c
420.7109 470.7295 420.7954 467.9795 420.5396 466.2139 c
420.2842 464.4463 419.7026 463.0293 418.7969 461.9561 c
417.896 460.8848 416.7378 460.1113 415.333 459.6328 c
413.6787 459.0742 412.0034 459.0137 410.2964 459.4551 c
408.5923 459.8945 407.1011 460.8135 405.8223 462.209 c
404.5479 463.6064 403.4863 465.5498 402.6362 468.0459 c
401.1489 472.4297 400.9629 475.75 402.0781 478.0127 c
403.1909 480.2734 405.0122 481.9551 407.5376 483.0615 c
f
/BBAccumRotation (4.712389) XT
*U
/BBAccumRotation (4.712389) XT
*u
433.8135 462.0527 m
439.8472 449.4414 L
441.1616 446.6953 441.4937 444.3252 440.8394 442.334 c
440.1865 440.3398 438.6553 438.7666 436.2432 437.6113 c
433.7656 436.4287 431.4722 436.248 429.3633 437.0713 c
427.2559 437.8955 425.4692 439.8359 424.0063 442.8926 c
422.019 447.0488 L
412.9092 442.6904 L
409.2646 450.3086 l
433.8135 462.0527 L
f
/BBAccumRotation (4.712389) XT
1 D
426.9912 449.4248 m
427.8838 447.5654 L
428.582 446.1045 429.3267 445.1973 430.1191 444.8516 c
430.9102 444.501 431.7017 444.5176 432.4932 444.8975 c
433.2646 445.2637 433.7915 445.835 434.084 446.6035 c
434.3721 447.373 434.1802 448.4668 433.5024 449.8848 c
432.4692 452.0439 l
426.9912 449.4248 L
f
/BBAccumRotation (4.712389) XT
*U
/BBAccumRotation (4.712389) XT
*u
0 D
444.498 440.1084 m
458.3057 422.2969 L
453.7124 418.7383 L
445.0688 429.8867 L
441.6519 427.2412 L
449.6709 416.8945 L
445.2827 413.4941 L
437.2642 423.8379 L
433.0249 420.5498 L
441.9199 409.0781 L
437.0508 405.3027 L
422.9912 423.4355 l
444.498 440.1084 L
f
/BBAccumRotation (4.712389) XT
*U
/BBAccumRotation (4.712389) XT
*u
463.2749 397.5322 m
467.6445 391.1943 L
465.9692 389.8867 464.2827 389.0234 462.584 388.6055 c
460.8896 388.1846 459.2026 388.1914 457.5293 388.624 c
455.8579 389.0576 454.0654 390.0361 452.1636 391.5547 c
449.853 393.4014 448.2314 395.2451 447.3018 397.0869 c
446.3721 398.9268 446.0503 401.1162 446.3374 403.6582 c
446.6206 406.1992 447.8169 408.79 449.9243 411.4268 c
452.7319 414.9453 455.8252 416.9033 459.2065 417.2998 c
462.5869 417.6963 465.9907 416.5273 469.4141 413.7949 c
472.0933 411.6563 473.7666 409.4326 474.4346 407.1279 c
475.1025 404.8174 474.9141 402.2461 473.8672 399.4072 c
467.0347 402.748 L
467.3472 403.5605 467.5112 404.2021 467.5298 404.6816 c
467.5625 405.4756 467.4243 406.2227 467.1084 406.9189 c
466.791 407.6152 466.3062 408.2236 465.6489 408.748 c
464.1567 409.9385 462.5371 410.249 460.7891 409.6855 c
459.479 409.2754 458.0649 408.1182 456.5469 406.2148 c
454.6641 403.8574 453.7324 401.9541 453.751 400.5088 c
453.7681 399.0654 454.4243 397.8242 455.7236 396.79 c
456.9805 395.7881 458.2114 395.3828 459.418 395.5732 c
460.626 395.7676 461.9106 396.4199 463.2749 397.5322 c
f
/BBAccumRotation (4.712389) XT
*U
/BBAccumRotation (4.712389) XT
*u
482.4224 404.0195 m
489.6279 399.6494 L
475.5186 376.3779 L
468.3135 380.7461 l
482.4224 404.0195 L
f
/BBAccumRotation (4.712389) XT
*U
/BBAccumRotation (4.712389) XT
*u
500.0137 368.5898 m
491.4468 372.8057 L
488.2749 369.3584 L
480.5708 373.1475 L
501.7617 393.0547 L
509.9907 389.0049 L
507.1538 360.0703 L
499.251 363.9609 l
500.0137 368.5898 L
f
/BBAccumRotation (4.712389) XT
1 D
501.0459 374.6406 m
502.6709 384.7461 L
495.6841 377.2793 l
501.0459 374.6406 L
f
/BBAccumRotation (4.712389) XT
*U
/BBAccumRotation (4.712389) XT
*u
0 D
522.1396 383.4414 m
529.9609 380.3506 L
522.4219 361.2744 L
534.6279 356.4512 L
532.1641 350.2158 L
512.1367 358.1338 l
522.1396 383.4414 L
f
/BBAccumRotation (4.712389) XT
*U
/BBAccumRotation (4.712389) XT
U
U
U
u
1 Ap
1181.1758 437.79 m
1181.1758 386.3213 1161.541 334.8535 1122.2734 295.585 c
1083.0049 256.3164 1031.5361 236.6826 980.0674 236.6826 C
629.1318 236.6826 L
629.1318 474.707 L
629.1318 545.1279 655.9961 615.5508 709.7256 669.2798 c
763.457 723.0098 833.8779 749.875 904.2988 749.875 C
1181.1758 749.875 L
1181.1758 437.79 L
Bb
1 (Unnamed gradient 2) 905.1543 999.582 -90 845.7083 1 0 0 1 0 0 Bg
-0.000037 -845.7083 -556.0439 0.000024 1183.1758 999.582 Xm
-0.000361 -8249.9473 -556.0439 0.000024 1183.1758 9249.5293 Bc
-0.000008 -177.5987 -556.0439 0.000024 1183.1758 999.582 Bm
-0.000018 -407.8918 -556.0439 0.000024 1183.1758 821.9834 Bm
-0.000005 -106.8747 -556.0439 0.000024 1183.1758 414.0918 Bm
-0.000007 -153.343 -556.0439 0.000024 1183.1758 307.2168 Bm
-0.000361 -8249.9473 -556.0439 0.000024 1183.1758 153.874 Bc
f
0 BB
0 Ap
980.0674 252.5195 m
644.9678 252.5195 L
644.9678 474.7061 L
644.9678 543.9746 671.9443 609.0996 720.9238 658.084 c
769.9053 707.0635 835.0322 734.0376 904.2988 734.0376 C
1165.3379 734.0376 L
1165.3379 437.79 L
1165.3379 388.3008 1146.0654 341.7754 1111.0742 306.7852 c
1076.082 271.792 1029.5576 252.5195 980.0674 252.5195 C
980.0674 252.5195 L
Bb
1 (Unnamed gradient 137) 905.1523 684.1602 -90 665.2295 1 0 0 1 0 0 Bg
-0.000029 -665.2295 -524.3701 0.000023 1167.3379 684.1602 Xm
-0.000374 -8549.5293 -524.3701 0.000023 1167.3379 9233.6895 Bc
-0.000012 -266.8229 -524.3701 0.000023 1167.3379 684.1602 Bm
-0.000017 -391.0964 -524.3701 0.000023 1167.3379 417.3369 Bm
-0.000374 -8549.5293 -524.3701 0.000023 1167.3379 26.2412 Bc
f
0 BB
999.2559 368.3896 m
969.2148 327.0586 937.4463 288.3857 904.4238 252.5195 C
980.0674 252.5195 L
1029.5576 252.5195 1076.082 271.792 1111.0742 306.7852 c
1146.0654 341.7754 1165.3379 388.3008 1165.3379 437.79 C
1165.3379 681.2578 L
1128.7393 576.915 1073.2178 470.1621 999.2559 368.3896 c
Bb
1 (Unnamed gradient 136) 1034.8809 296.9307 90 592.3115 1 0 0 1 0 0 Bg
-0.000026 592.3115 264.9141 0.000012 902.4238 296.9307 Xm
-0.000379 8673.792 264.9141 0.000012 902.4238 -8376.8613 Bc
-0.000026 585.8026 264.9141 0.000012 902.4238 296.9307 Bm
-0.000379 8673.792 264.9141 0.000012 902.4238 882.7334 Bc
f
0 BB
644.9678 401.166 m
644.9678 252.5195 L
980.0674 252.5195 L
1029.5576 252.5195 1076.082 271.792 1111.0742 306.7852 c
1137.2705 332.9795 1154.6523 365.6387 1161.7402 401.166 C
644.9678 401.166 L
Bb
1 (New Gradient Swatch 106) 903.3535 96.8623 90 304.0716 1 0 0 1 0 0 Bg
-0.000013 304.0716 520.7725 0.000023 642.9678 96.8623 Xm
-0.000365 8342.1963 520.7725 0.000023 642.9678 -8245.334 Bc
-0.000006 148.6944 520.7725 0.000023 642.9678 96.8623 Bm
-0.000007 155.3773 520.7725 0.000023 642.9678 245.5566 Bm
-0.000365 8342.1963 520.7725 0.000023 642.9678 400.9336 Bc
f
0 BB
u
1001.6992 286.4492 m
739.4697 286.4492 L
717.1982 286.4492 699.0771 304.5732 699.0771 326.8477 c
699.0771 349.1172 717.1982 367.2354 739.4697 367.2354 C
1001.6992 367.2354 L
1023.9736 367.2354 1042.0957 349.1172 1042.0957 326.8477 c
1042.0957 304.5732 1023.9736 286.4492 1001.6992 286.4492 C
1001.6992 286.4492 L
Bb
1 (Unnamed gradient 3) 870.5859 373.1191 -90 80.7861 1 0 0 1 0 0 Bg
-0.000004 -80.7861 -347.0186 0.000015 1044.0957 373.1191 Xm
-0.00037 -8459.2021 -347.0186 0.000015 1044.0957 8832.3213 Bc
-0.000001 -32.2237 -347.0186 0.000015 1044.0957 373.1191 Bm
-0.000001 -27.2313 -347.0186 0.000015 1044.0957 340.8955 Bm
-0.000001 -21.3312 -347.0186 0.000015 1044.0957 313.6641 Bm
-0.00037 -8459.2021 -347.0186 0.000015 1044.0957 292.333 Bc
f
0 BB
1001.6992 361.6934 m
739.4707 361.6934 L
720.2236 361.6934 704.6201 346.0938 704.6201 326.8477 c
704.6201 307.5957 720.2236 291.9932 739.4707 291.9932 C
1001.6992 291.9932 L
1020.9473 291.9932 1036.5508 307.5957 1036.5508 326.8477 c
1036.5508 346.0938 1020.9473 361.6934 1001.6992 361.6934 C
Bb
1 (Unnamed gradient 161) 870.5859 291.9932 90 69.7002 1 0 0 1 0 0 Bg
-0.000003 69.7002 335.9307 0.000015 702.6201 291.9932 Xm
-0.00037 8465.0859 335.9307 0.000015 702.6201 -8173.0918 Bc
-0.000003 68.5255 335.9307 0.000015 702.6201 291.9932 Bm
-0.00037 8465.0859 335.9307 0.000015 702.6201 360.5186 Bc
f
0 BB
1036.5166 328.3203 m
1035.7451 346.8857 1020.4551 361.6934 1001.6992 361.6934 C
739.4707 361.6934 L
720.7207 361.6934 705.4287 346.8857 704.6553 328.3203 C
1036.5166 328.3203 L
Bb
1 (Unnamed gradient 161) 870.5859 361.6934 -90 33.373 1 0 0 1 0 0 Bg
-0.000001 -33.373 -335.8613 0.000015 1038.5166 361.6934 Xm
-0.00037 -8465.0859 -335.8613 0.000015 1038.5166 8826.7793 Bc
-0.000001 -32.8106 -335.8613 0.000015 1038.5166 361.6934 Bm
-0.00037 -8465.0859 -335.8613 0.000015 1038.5166 328.8828 Bc
f
0 BB
1 Ap
1030.6934 327.1074 m
1030.6934 311.4941 1018.0381 298.8359 1002.4248 298.8359 c
986.8145 298.8359 974.1602 311.4941 974.1602 327.1074 c
974.1602 342.7197 986.8145 355.377 1002.4248 355.377 c
1018.0381 355.377 1030.6934 342.7197 1030.6934 327.1074 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 252) 1009.5684 322.2627 0 28.7705 0.982563 0 0 0.982562 142.8389 142.8391 Bg
28.2688 0 0 -28.2688 1002.4268 327.1064 Bm
f
0 BB
0 Ap
0.070588 0.05098 0.047059 0 0.941176 0.941176 0.941176 Xa
1011.7441 337.1709 m
1009.5625 337.1709 1006.9668 337.2041 1002.624 337.2041 c
996.1133 337.2041 995.2422 337.1709 993.1348 337.1465 c
990.125 337.1465 988.7266 338.1162 988.7734 339.8193 C
989.626 345.0605 994.1094 349.2344 999.8408 350.2178 c
1000.6816 350.3584 1001.5469 350.4268 1002.4316 350.4268 c
1003.3203 350.4268 1004.1885 350.3516 1005.0293 350.2148 c
1010.7305 349.2344 1015.1943 345.0938 1016.0791 339.8945 C
1016.1387 338.4053 1014.6152 337.1709 1011.7441 337.1709 c
f
998.3232 337.1484 m
998.3232 337.082 998.3154 336.0518 998.3154 335.1455 C
991.3115 335.1338 L
990.4521 335.1338 L
988.2363 335.1338 986.4346 332.9648 986.4346 330.29 C
986.4346 323.9199 L
986.4346 321.2529 988.2363 319.0771 990.4521 319.0771 C
991.3203 319.084 L
998.3154 319.0967 L
998.3154 318.1719 998.3232 317.1289 998.3232 317.0645 c
998.3232 315.0449 999.3525 313.6299 1000.8223 313.6299 c
1001.3779 313.6299 1001.9502 313.834 1002.5205 314.2314 C
1016.8203 324.1807 L
1017.8496 324.9004 1018.4199 325.9385 1018.4199 327.1074 c
1018.4199 328.2725 1017.8496 329.3115 1016.8203 330.0273 C
1002.5205 339.9814 L
1001.9502 340.3809 1001.377 340.5811 1000.8223 340.5811 c
999.3525 340.5811 998.3232 339.1729 998.3232 337.1484 c
Bb
1 (Unnamed gradient 160) 986.4346 327.1055 0 31.9854 1 0 0 1 0 0 Bg
31.9854 0 0 -30.9512 986.4346 342.5811 Xm
8580.9346 0 0 -30.9512 -7594.5 342.5811 Bc
31.9854 0 0 -30.9512 986.4346 342.5811 Bm
8580.9346 0 0 -30.9512 1018.4199 342.5811 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
*u
1 D
0 g
1002.4248 355.6416 m
986.5469 355.6416 973.6289 342.7246 973.6289 326.8477 c
973.6289 310.9648 986.5469 298.0449 1002.4248 298.0449 c
1018.3057 298.0449 1031.2236 310.9648 1031.2236 326.8477 c
1031.2236 342.7246 1018.3057 355.6416 1002.4248 355.6416 c
f
0 D
1002.4248 302.2041 m
988.8164 302.2041 977.7852 313.2344 977.7852 326.8477 c
977.7852 340.4531 988.8164 351.4883 1002.4248 351.4883 c
1016.0361 351.4883 1027.0684 340.4531 1027.0684 326.8477 c
1027.0684 313.2344 1016.0361 302.2041 1002.4248 302.2041 c
Bb
1 (Unnamed gradient 159) 1002.4258 298.0449 90 57.5967 1 0 0 1 0 0 Bg
-0.000003 57.5967 61.5947 0.000003 971.6289 298.0449 Xm
-0.000376 8596.9258 61.5947 0.000003 971.6289 -8298.8809 Bc
-0.000002 56.6259 61.5947 0.000003 971.6289 298.0449 Bm
-0.000376 8596.9258 61.5947 0.000003 971.6289 354.6709 Bc
f
0 BB
*U
u
*u
0 0 0 0 1 1 1 Xa
756.2178 337.3535 m
764.7588 337.3535 L
768.0576 324.5664 L
771.3223 337.3535 L
779.8604 337.3535 L
779.8604 316.3389 L
774.541 316.3389 L
774.541 332.3633 L
770.4424 316.3389 L
765.6289 316.3389 L
761.5361 332.3633 L
761.5361 316.3389 L
756.2178 316.3389 l
756.2178 337.3535 L
f
*U
*u
783.1895 326.832 m
783.1895 330.2627 784.1455 332.9336 786.0537 334.8467 c
787.9668 336.7568 790.627 337.7148 794.042 337.7148 c
797.5381 337.7148 800.2314 336.7754 802.1279 334.8965 c
804.0215 333.0156 804.9668 330.3867 804.9668 327.0039 c
804.9668 324.5469 804.5547 322.5303 803.7285 320.96 c
802.8994 319.3838 801.7051 318.1621 800.1416 317.2871 c
798.5811 316.415 796.6328 315.9775 794.3018 315.9775 c
791.9277 315.9775 789.9648 316.3545 788.415 317.1074 c
786.8594 317.8652 785.5986 319.0576 784.6377 320.6943 c
783.6699 322.3271 783.1895 324.373 783.1895 326.832 c
f
1 D
789.6807 326.8027 m
789.6807 324.6807 790.0762 323.1572 790.8662 322.2285 c
791.6553 321.3018 792.7256 320.8389 794.085 320.8389 c
795.4824 320.8389 796.5615 321.292 797.3252 322.2002 c
798.0918 323.1084 798.4707 324.7363 798.4707 327.0928 c
798.4707 329.0674 798.0732 330.5098 797.2744 331.4248 c
796.4756 332.3398 795.3965 332.7959 794.0264 332.7959 c
792.7197 332.7959 791.6689 332.332 790.874 331.4043 c
790.0762 330.4775 789.6807 328.9453 789.6807 326.8027 c
f
*U
*u
0 D
808.5508 316.3389 m
808.5508 337.3535 L
819.376 337.3535 L
821.3857 337.3535 822.917 337.1787 823.9814 336.8369 c
825.043 336.4941 825.8975 335.8584 826.5479 334.9258 c
827.1943 333.9912 827.5205 332.8594 827.5205 331.5195 c
827.5205 330.3506 827.2734 329.3477 826.7754 328.498 c
826.2773 327.6533 825.5957 326.9697 824.7227 326.4424 c
824.1689 326.1064 823.4102 325.834 822.4443 325.6113 c
823.2148 325.3535 823.7813 325.0957 824.1309 324.8359 c
824.373 324.666 824.7168 324.292 825.1699 323.7344 c
825.625 323.165 825.9297 322.7344 826.0811 322.4258 c
829.2246 316.3389 L
821.8916 316.3389 L
818.416 322.7617 L
817.9785 323.5908 817.5859 324.1299 817.2402 324.3799 c
816.7725 324.7041 816.2432 324.8662 815.6494 324.8662 c
815.0781 324.8662 L
815.0781 316.3389 l
808.5508 316.3389 L
f
1 D
815.0781 328.835 m
817.8115 328.835 L
818.1055 328.835 818.6836 328.9326 819.5352 329.123 c
819.9658 329.2129 820.3164 329.4316 820.5889 329.7822 c
820.8594 330.1406 820.9941 330.543 820.9941 331.0029 c
820.9941 331.6826 820.7813 332.2041 820.3516 332.5635 c
819.9209 332.9287 819.1172 333.1094 817.9297 333.1094 c
815.0781 333.1094 l
815.0781 328.835 L
f
*U
*u
0 D
831.29 337.3535 m
848.6963 337.3535 L
848.6963 332.8691 L
837.8027 332.8691 L
837.8027 329.5273 L
847.9082 329.5273 L
847.9082 325.2363 L
837.8027 325.2363 L
837.8027 321.0977 L
849.0146 321.0977 L
849.0146 316.3389 L
831.29 316.3389 l
831.29 337.3535 L
f
*U
*u
862.5625 337.3535 m
869.0723 337.3535 L
869.0723 316.3389 L
862.5625 316.3389 l
862.5625 337.3535 L
f
*U
*u
873.7754 337.3535 m
879.8418 337.3535 L
887.7568 325.7305 L
887.7568 337.3535 L
893.875 337.3535 L
893.875 316.3389 L
887.7568 316.3389 L
879.8867 327.8779 L
879.8867 316.3389 L
873.7754 316.3389 l
873.7754 337.3535 L
f
*U
*u
898.2207 337.3535 m
914.2832 337.3535 L
914.2832 332.8389 L
904.7441 332.8389 L
904.7441 329.1709 L
912.8926 329.1709 L
912.8926 324.9268 L
904.7441 324.9268 L
904.7441 316.3389 L
898.2207 316.3389 l
898.2207 337.3535 L
f
*U
*u
916.9629 326.832 m
916.9629 330.2627 917.917 332.9336 919.8301 334.8467 c
921.7451 336.7568 924.4023 337.7148 927.8174 337.7148 c
931.3164 337.7148 934.0107 336.7754 935.9043 334.8965 c
937.7949 333.0156 938.7383 330.3867 938.7383 327.0039 c
938.7383 324.5469 938.3281 322.5303 937.5039 320.96 c
936.6748 319.3838 935.4795 318.1621 933.9199 317.2871 c
932.3555 316.415 930.4063 315.9775 928.0752 315.9775 c
925.7021 315.9775 923.7432 316.3545 922.1885 317.1074 c
920.6357 317.8652 919.374 319.0576 918.4111 320.6943 c
917.4434 322.3271 916.9629 324.373 916.9629 326.832 c
f
1 D
923.459 326.8027 m
923.459 324.6807 923.8545 323.1572 924.6426 322.2285 c
925.4277 321.3018 926.501 320.8389 927.8604 320.8389 c
929.2559 320.8389 930.3379 321.292 931.1006 322.2002 c
931.8662 323.1084 932.249 324.7363 932.249 327.0928 c
932.249 329.0674 931.8467 330.5098 931.0508 331.4248 c
930.252 332.3398 929.168 332.7959 927.8047 332.7959 c
926.4932 332.7959 925.4414 332.332 924.6494 331.4043 c
923.8545 330.4775 923.459 328.9453 923.459 326.8027 c
f
*U
U
U
0 D
1181.1758 735.4116 m
1181.1758 639.2188 l
1186.9141 635.2881 1192.6943 633.7954 1197.8281 635.458 C
1197.8281 643.5308 1197.8574 651.6167 1197.7988 659.6924 c
1197.6934 673.4453 1198.1016 687.2134 1197.9434 700.96 c
1197.8643 707.519 1198.8174 714.1016 1195.1836 719.9604 c
1191.5723 725.7866 1186.71 731.3442 1181.1758 735.4116 C
Bb
1 (Unnamed gradient 5) 3151.4561 -7685.2188 -90 16.8262 0 1 -1 0 25266.2207 -2636.5566 Bg
-16.8262 0.000001 0.000005 105.6162 1198.002 631.7954 Xm
-10746.7715 0.00047 0.000005 105.6162 11944.7734 631.7949 Bc
-10.5395 0 0.000005 105.6162 1198.002 631.7954 Bm
-10746.7715 0.00047 0.000005 105.6162 1187.4629 631.7954 Bc
f
0 BB
/BBAccumRotation (1.570796) XT
1195.1777 464.1611 m
1192.8994 460.9385 1190.3994 458.0273 1187.6035 455.0908 C
1031.2373 535.5029 L
1018.2725 542.1689 1009.6016 555.8672 1010.0879 571.4072 c
1010.5713 586.9453 1020.0762 600.082 1033.4307 605.9268 C
1181.3467 670.6904 L
1181.3467 670.7134 L
1181.3828 670.7393 1181.415 670.7681 1181.4482 670.7949 C
1184.9717 674.3115 1188.7002 677.7109 1192.0186 681.4209 c
1195.1328 684.8989 1197.9971 689.8232 1197.9971 694.644 C
1197.9971 687.3428 L
1197.9971 657.7979 L
1197.9971 473.0713 L
1197.7959 469.9307 1197.1172 466.9043 1195.1777 464.1611 c
Bb
1 (Unnamed gradient 4) -3640.0374 -783.4961 180 187.9287 1 0 0 -1 4838.0352 17791.6289 Bg
-187.9287 0.000016 -0.000021 -243.5532 1197.998 696.644 Xm
-3954.4614 0.000346 -0.000021 -243.5532 5152.46 696.6436 Bc
-16.5212 0.000001 -0.000021 -243.5532 1197.998 696.644 Bm
-17.5538 0.000002 -0.000021 -243.5532 1181.4766 696.644 Bm
-20.6515 0.000002 -0.000021 -243.5532 1163.9229 696.644 Bm
-24.7818 0.000002 -0.000021 -243.5532 1143.2715 696.644 Bm
-26.8469 0.000002 -0.000021 -243.5532 1118.4893 696.644 Bm
-81.5735 0.000007 -0.000021 -243.5532 1091.6426 696.644 Bm
-3954.4614 0.000346 -0.000021 -243.5532 1010.0693 696.644 Bc
f
0 BB
u
*u
0 0 0 0 1 1 1 Xa
1049.2148 565.5654 m
1057.9258 566.1104 L
1058.1143 564.6973 1058.498 563.6172 1059.0771 562.877 c
1060.0215 561.6777 1061.3652 561.0781 1063.1211 561.0781 c
1064.4277 561.0781 1065.4355 561.3857 1066.1416 562 c
1066.8496 562.6113 1067.2041 563.3232 1067.2041 564.1309 c
1067.2041 564.8994 1066.8672 565.5869 1066.1914 566.1924 c
1065.5176 566.7969 1063.957 567.373 1061.5029 567.9102 c
1057.4863 568.8145 1054.624 570.0137 1052.9121 571.5098 c
1051.1865 573.0059 1050.3252 574.9121 1050.3252 577.2295 c
1050.3252 578.7549 1050.7656 580.1924 1051.6494 581.5439 c
1052.5313 582.9004 1053.8604 583.9639 1055.6309 584.7383 c
1057.4023 585.5137 1059.832 585.9014 1062.918 585.9014 c
1066.7041 585.9014 1069.5928 585.1973 1071.5781 583.7891 c
1073.5664 582.3799 1074.75 580.1406 1075.127 577.0684 c
1066.498 576.5635 L
1066.2666 577.8975 1065.7842 578.8682 1065.0518 579.4736 c
1064.3174 580.0791 1063.3027 580.3818 1062.0078 580.3818 c
1060.9424 580.3818 1060.1406 580.1602 1059.6025 579.7051 c
1059.0664 579.2559 1058.7949 578.7051 1058.7949 578.0586 c
1058.7949 577.5859 1059.0166 577.1621 1059.4609 576.7852 c
1059.8926 576.3945 1060.918 576.0303 1062.5332 575.6943 c
1066.5381 574.8311 1069.4023 573.957 1071.1367 573.0742 c
1072.8672 572.1924 1074.127 571.0957 1074.915 569.792 c
1075.7031 568.4824 1076.0977 567.0215 1076.0977 565.4043 c
1076.0977 563.5039 1075.5723 561.7529 1074.5215 560.1455 c
1073.4697 558.5439 1072 557.3281 1070.1143 556.5 c
1068.2275 555.6729 1065.8486 555.2559 1062.9795 555.2559 c
1057.9395 555.2559 1054.4492 556.2285 1052.5098 558.167 c
1050.5693 560.1104 1049.4707 562.5742 1049.2148 565.5654 c
f
*U
*u
1098.9229 560.6533 m
1088.5293 560.6533 L
1087.083 555.7627 L
1077.7344 555.7627 L
1088.873 585.3955 L
1098.8574 585.3955 L
1109.9941 555.7627 L
1100.4063 555.7627 l
1098.9229 560.6533 L
f
1 D
1097.0244 567.0625 m
1093.7549 577.7148 L
1090.5176 567.0625 l
1097.0244 567.0625 L
f
*U
*u
0 D
1112.9053 585.3955 m
1122.0635 585.3955 L
1122.0635 563.0596 L
1136.3545 563.0596 L
1136.3545 555.7627 L
1112.9053 555.7627 l
1112.9053 585.3955 L
f
*U
*u
1140.498 585.3955 m
1165.0371 585.3955 L
1165.0371 579.0693 L
1149.6748 579.0693 L
1149.6748 574.3594 L
1163.9248 574.3594 L
1163.9248 568.3154 L
1149.6748 568.3154 L
1149.6748 562.4746 L
1165.4824 562.4746 L
1165.4824 555.7627 L
1140.498 555.7627 l
1140.498 585.3955 L
f
*U
U
U
LB
%AI5_EndLayer--
%AI3_BeginCrops
userdict /AI3_noCropMarks known not {
0 A
u
u
0 R
1 1 1 1 ([\721\756\742\754\745\771\745\755\750\745]) 0 XS
0 J 0 j 0.5 w 4 M []0 d0 XR
-9 0 m
-36 0 L
S
0 -9 m
0 -36 L
S
U
u
-9 1200 m
-36 1200 L
S
0 1209 m
0 1236 L
S
U
u
1209 1200 m
1236 1200 L
S
1200 1209 m
1200 1236 L
S
U
u
1209 0 m
1236 0 L
S
1200 -9 m
1200 -36 L
S
U
U
} if
%AI3_EndCrops
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
